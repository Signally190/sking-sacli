; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\battleProc.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?EncountFlag@@3HA				; EncountFlag
PUBLIC	?NoHelpFlag@@3HA				; NoHelpFlag
PUBLIC	?NoEscFlag@@3HA					; NoEscFlag
PUBLIC	?NoCastFlag@@3HA				; NoCastFlag
PUBLIC	?EncountOffFlag@@3HA				; EncountOffFlag
PUBLIC	?DuelFlag@@3HA					; DuelFlag
PUBLIC	?flash_pal_cnt@@3HA				; flash_pal_cnt
PUBLIC	?Palette2@@3PAUtagPALETTEENTRY@@A		; Palette2
PUBLIC	?Battle1P2PFlag@@3HA				; Battle1P2PFlag
PUBLIC	?pActSurprisalWnd@@3PAUaction@@A		; pActSurprisalWnd
PUBLIC	?pActAudienceExitWnd@@3PAUaction@@A		; pActAudienceExitWnd
PUBLIC	?xxx@@3HA					; xxx
_BSS	SEGMENT
?EncountFlag@@3HA DD 01H DUP (?)			; EncountFlag
?NoHelpFlag@@3HA DD 01H DUP (?)				; NoHelpFlag
?NoEscFlag@@3HA DD 01H DUP (?)				; NoEscFlag
?NoCastFlag@@3HA DD 01H DUP (?)				; NoCastFlag
?EncountOffFlag@@3HA DD 01H DUP (?)			; EncountOffFlag
?DuelFlag@@3HA DD 01H DUP (?)				; DuelFlag
?flash_pal_cnt@@3HA DD 01H DUP (?)			; flash_pal_cnt
?Palette2@@3PAUtagPALETTEENTRY@@A DD 0100H DUP (?)	; Palette2
?Battle1P2PFlag@@3HA DD 01H DUP (?)			; Battle1P2PFlag
?pActSurprisalWnd@@3PAUaction@@A DD 01H DUP (?)		; pActSurprisalWnd
?pActAudienceExitWnd@@3PAUaction@@A DD 01H DUP (?)	; pActAudienceExitWnd
?xxx@@3HA DD	01H DUP (?)				; xxx
_BSS	ENDS
PUBLIC	?BattleProc@@YAXXZ				; BattleProc
PUBLIC	?battle_quake@@YAXXZ				; battle_quake
PUBLIC	?die_flash@@YAXXZ				; die_flash
PUBLIC	?damage_dispx@@YAXXZ				; damage_dispx
PUBLIC	?SurprisalDisp@@YAXXZ				; SurprisalDisp
PUBLIC	??_C@_0BF@HIHCIHBK@?5?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?$LE?g?G?$NP?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0BC@KKMNFDNM@?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?G?$NP?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BM@PPACHBFM@P?$HM?$DP?q?i?V?u?U?$KK?$DP?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BM@IEBCIPIN@P?$HM?$DP?n?$NM?q?$KI?$DP?a?t?$DP?$DP?q?l?$KD?$KM?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BN@GENIEILO@P?$HM?$DP?q?i?V?u?Z?$KM?$PL?c?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BM@CDGGAGHC@P?$HM?$DP?$DP?i?M?$DP?U?t?$PL?y?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BP@NLMMOJJP@P?$HM?$DP?q?i?V?u?x?o?V?$KO?M?t?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@ ; `string'
PUBLIC	??_C@_01HJOKEEBB@U@				; `string'
PUBLIC	??_C@_0BI@OCDNAHGP@?$LI?$LG?$LP?l?$LN?$LK?5?$LP?$MA?$LI?$KF?B?J?5?$LJ?v?F?$LA?5?E?$KM?$LI?$KP@ ; `string'
PUBLIC	??_C@_08HHKADIBF@?$LN?C?C?$LL?A?$LO?$LH?a@	; `string'
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	?ClearBackSurface@@YAXXZ:PROC			; ClearBackSurface
EXTRN	?ChangeProc@@YAXHH@Z:PROC			; ChangeProc
EXTRN	?JL_Ìª??‘‡@@YAXXZ:PROC				; JL_Ìª??‘‡
EXTRN	?RunAction@@YAXXZ:PROC				; RunAction
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?DeathAllAction@@YAXXZ:PROC			; DeathAllAction
EXTRN	?ClearAction@@YAXPAUaction@@@Z:PROC		; ClearAction
EXTRN	?PutBmp@@YAXXZ:PROC				; PutBmp
EXTRN	?StockTaskDispBuffer@@YAXXZ:PROC		; StockTaskDispBuffer
EXTRN	?Rnd@@YAHHH@Z:PROC				; Rnd
EXTRN	?ChatBufferToFontBuffer@@YAXXZ:PROC		; ChatBufferToFontBuffer
EXTRN	?ChatProc@@YAXXZ:PROC				; ChatProc
EXTRN	?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z:PROC	; GetKeyInputFocus
EXTRN	?FlashKeyboardCursor@@YAXXZ:PROC		; FlashKeyboardCursor
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?ImeProc@@YAXXZ:PROC				; ImeProc
EXTRN	?InitMenu@@YAXXZ:PROC				; InitMenu
EXTRN	?MenuProc@@YAXXZ:PROC				; MenuProc
EXTRN	?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z:PROC	; MakeWindowDisp
EXTRN	?CheckBattleNewPet@@YAXXZ:PROC			; CheckBattleNewPet
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?ReadBattleMap@@YAHH@Z:PROC			; ReadBattleMap
EXTRN	?BattleMenuProc@@YAXXZ:PROC			; BattleMenuProc
EXTRN	?InitBattleMenu@@YAXXZ:PROC			; InitBattleMenu
EXTRN	?CheckBattleAnimFlag@@YAXXZ:PROC		; CheckBattleAnimFlag
EXTRN	?CheckBattle1P2P@@YAHXZ:PROC			; CheckBattle1P2P
EXTRN	?HpMeterDisp@@YAXH@Z:PROC			; HpMeterDisp
EXTRN	?BattleNameDisp@@YAXXZ:PROC			; BattleNameDisp
EXTRN	?CopyBackBuffer@@YAXXZ:PROC			; CopyBackBuffer
EXTRN	?DrawProduce@@YAHH@Z:PROC			; DrawProduce
EXTRN	?lssproto_EO_send@@YAXHH@Z:PROC			; lssproto_EO_send
EXTRN	?lssproto_B_send@@YAXHPAD@Z:PROC		; lssproto_B_send
EXTRN	?lssproto_DI_send@@YAXHHHH@Z:PROC		; lssproto_DI_send
EXTRN	?lssproto_TK_recv@@YAXHHPADH@Z:PROC		; lssproto_TK_recv
EXTRN	?old_lssproto_EO_send@@YAXHH@Z:PROC		; old_lssproto_EO_send
EXTRN	?old_lssproto_B_send@@YAXHPAD@Z:PROC		; old_lssproto_B_send
EXTRN	?old_lssproto_DI_send@@YAXHHHH@Z:PROC		; old_lssproto_DI_send
EXTRN	?play_se@@YAHHHH@Z:PROC				; play_se
EXTRN	?play_bgm@@YAHH@Z:PROC				; play_bgm
EXTRN	?fade_out_bgm@@YAXXZ:PROC			; fade_out_bgm
EXTRN	?clearPtActCharObj@@YAXXZ:PROC			; clearPtActCharObj
EXTRN	?TimeZoneProc@@YAXXZ:PROC			; TimeZoneProc
EXTRN	?saveUserSetting@@YAHXZ:PROC			; saveUserSetting
EXTRN	?fieldProc2@@YAXXZ:PROC				; fieldProc2
EXTRN	?ReleaseSpecAnim@@YAXXZ:PROC			; ReleaseSpecAnim
EXTRN	?oft_test@@YAPAUaction@@XZ:PROC			; oft_test
EXTRN	?damage_num@@YAXPAUaction@@@Z:PROC		; damage_num
EXTRN	?WindowDisp@@YAXPAUaction@@@Z:PROC		; WindowDisp
EXTRN	?set_bc@@YAXXZ:PROC				; set_bc
EXTRN	?set_party_Œ√?@@YAXXZ:PROC			; set_party_Œ√?
EXTRN	?disp_kanji@@YAXPAUaction@@@Z:PROC		; disp_kanji
EXTRN	?check_all_dead@@YAHXZ:PROC			; check_all_dead
EXTRN	?AniRandomRelease@@YAXXZ:PROC			; AniRandomRelease
EXTRN	?crossAniRelease@@YAXXZ:PROC			; crossAniRelease
EXTRN	?CharbubbleRelease@@YAXXZ:PROC			; CharbubbleRelease
EXTRN	?ImmobileAniRelease@@YAXXZ:PROC			; ImmobileAniRelease
EXTRN	?AI_ChooseAction@@YAXXZ:PROC			; AI_ChooseAction
EXTRN	?CloseInfoWnd@@YAXXZ:PROC			; CloseInfoWnd
EXTRN	?DISPLACEMENT_X@@3HA:DWORD			; DISPLACEMENT_X
EXTRN	?DISPLACEMENT_Y@@3HA:DWORD			; DISPLACEMENT_Y
EXTRN	?BackBufferDrawType@@3HA:DWORD			; BackBufferDrawType
EXTRN	?NowTime@@3KA:DWORD				; NowTime
EXTRN	?SubProcNo@@3IA:DWORD				; SubProcNo
EXTRN	?pActTop@@3PAUaction@@A:DWORD			; pActTop
EXTRN	?pActBtm@@3PAUaction@@A:DWORD			; pActBtm
EXTRN	?DispBuffer@@3UDISP_BUFFER@@A:BYTE		; DispBuffer
EXTRN	?s_timer@@3GA:WORD				; s_timer
EXTRN	?slow_flg@@3HA:DWORD				; slow_flg
EXTRN	?flash_vct_no@@3HA:DWORD			; flash_vct_no
EXTRN	?quake_flg@@3HA:DWORD				; quake_flg
EXTRN	?quake_vct_no@@3HA:DWORD			; quake_vct_no
EXTRN	?p_party@@3PAPAUaction@@A:BYTE			; p_party
EXTRN	?action_inf@@3HA:DWORD				; action_inf
EXTRN	?MyChatBuffer@@3USTR_BUFFER@@A:BYTE		; MyChatBuffer
EXTRN	?FontCnt@@3HA:DWORD				; FontCnt
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?OneLineInfoStr@@3PADA:BYTE			; OneLineInfoStr
EXTRN	?nowFloor@@3HA:DWORD				; nowFloor
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?encountNowFlag@@3FA:WORD			; encountNowFlag
EXTRN	?eventEnemyFlag@@3FA:WORD			; eventEnemyFlag
EXTRN	?vsLookFlag@@3FA:WORD				; vsLookFlag
EXTRN	?fastDrawTileFlag@@3FA:WORD			; fastDrawTileFlag
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
EXTRN	?battleResultMsg@@3UBATTLE_RESULT_MSG@@A:BYTE	; battleResultMsg
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?BattleMapNo@@3HA:DWORD				; BattleMapNo
EXTRN	?AI@@3HA:DWORD					; AI
EXTRN	?BattleCmd@@3PADA:BYTE				; BattleCmd
EXTRN	?BattleCmdBak@@3PAY0BAAA@DA:BYTE		; BattleCmdBak
EXTRN	?BattleCmdReadPointer@@3HA:DWORD		; BattleCmdReadPointer
EXTRN	?BattleCmdWritePointer@@3HA:DWORD		; BattleCmdWritePointer
EXTRN	?BattleStatus@@3PADA:BYTE			; BattleStatus
EXTRN	?BattleStatusBak@@3PAY0BAAA@DA:BYTE		; BattleStatusBak
EXTRN	?BattleStatusReadPointer@@3HA:DWORD		; BattleStatusReadPointer
EXTRN	?BattleStatusWritePointer@@3HA:DWORD		; BattleStatusWritePointer
EXTRN	?battleMenuFlag2@@3HA:DWORD			; battleMenuFlag2
EXTRN	?BattleMyNo@@3HA:DWORD				; BattleMyNo
EXTRN	?BattleMyMp@@3HA:DWORD				; BattleMyMp
EXTRN	?BattleEscFlag@@3HA:DWORD			; BattleEscFlag
EXTRN	?BattleBpFlag@@3HA:DWORD			; BattleBpFlag
EXTRN	?BattleCliTurnNo@@3HA:DWORD			; BattleCliTurnNo
EXTRN	?BattleResultWndFlag@@3HA:DWORD			; BattleResultWndFlag
EXTRN	?ProduceInitFlag@@3HA:DWORD			; ProduceInitFlag
EXTRN	?bNewServer@@3HA:DWORD				; bNewServer
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?map_bgm_no@@3HA:DWORD				; map_bgm_no
EXTRN	?chatRoomBtn@@3FA:WORD				; chatRoomBtn
EXTRN	?SelRoomBtn@@3FA:WORD				; SelRoomBtn
EXTRN	?piyo_point@@3HA:DWORD				; piyo_point
EXTRN	?boundary_2@@3PAUaction@@A:DWORD		; boundary_2
EXTRN	?boundary_mark@@3PAPAUaction@@A:QWORD		; boundary_mark
EXTRN	?g_iRunEarthQuake@@3HA:DWORD			; g_iRunEarthQuake
EXTRN	?g_iCurRunEarthQuake@@3HA:DWORD			; g_iCurRunEarthQuake
EXTRN	?g_iNumRunEarthQuake@@3HA:DWORD			; g_iNumRunEarthQuake
EXTRN	?BattlingFlag@@3HA:DWORD			; BattlingFlag
EXTRN	?att_select_flg@@3DA:BYTE			; att_select_flg
EXTRN	?AI_OtherSetting@@3PAHA:DWORD			; AI_OtherSetting
EXTRN	?AI_Choosen@@3PADA:DWORD			; AI_Choosen
EXTRN	?g_WgRecvHwnd@@3HA:DWORD			; g_WgRecvHwnd
EXTRN	?RandBattleBg@@3HA:DWORD			; RandBattleBg
_BSS	SEGMENT
?BattleWaterAct@@3PAPAUaction@@A DD 08H DUP (?)		; BattleWaterAct
_BSS	ENDS
;	COMDAT ??_C@_08HHKADIBF@?$LN?C?C?$LL?A?$LO?$LH?a@
CONST	SEGMENT
??_C@_08HHKADIBF@?$LN?C?C?$LL?A?$LO?$LH?a@ DB 0bdH, 0c3H, 0c3H, 0bbH, 0c1H
	DB	0beH, 0b7H, 0e1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OCDNAHGP@?$LI?$LG?$LP?l?$LN?$LK?5?$LP?$MA?$LI?$KF?B?J?5?$LJ?v?F?$LA?5?E?$KM?$LI?$KP@
CONST	SEGMENT
??_C@_0BI@OCDNAHGP@?$LI?$LG?$LP?l?$LN?$LK?5?$LP?$MA?$LI?$KF?B?J?5?$LJ?v?F?$LA?5?E?$KM?$LI?$KP@ DB 0b8H
	DB	0b6H, 0bfH, 0ecH, 0bdH, 0baH, ' ', 0bfH, 0c0H, 0b8H, 0a5H, 0c2H
	DB	0caH, ' ', 0b9H, 0f6H, 0c6H, 0b0H, ' ', 0c5H, 0acH, 0b8H, 0afH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01HJOKEEBB@U@
CONST	SEGMENT
??_C@_01HJOKEEBB@U@ DB 'U', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@
CONST	SEGMENT
??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@ DB 0d4H, 0f5H, 0d3H, 0e2H
	DB	0d0H, 0ecH, 0f6H, 0e2H, 0e8H, 0ccH, 0caH, 0abH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NLMMOJJP@P?$HM?$DP?q?i?V?u?x?o?V?$KO?M?t?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
CONST	SEGMENT
??_C@_0BP@NLMMOJJP@P?$HM?$DP?q?i?V?u?x?o?V?$KO?M?t?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ DB 'P'
	DB	'|?', 0f1H, 0e9H, 0d6H, 0f5H, 0f8H, 0efH, 0d6H, 0aeH, 0cdH, 0f4H
	DB	'?', 0a3H, 0acH, 0f1H, 0a8H, '?', 0ecH, 0abH, 0f7H, 0dcH, 0f5H
	DB	0f3H, '?', 0d4H, 0e0H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@CDGGAGHC@P?$HM?$DP?$DP?i?M?$DP?U?t?$PL?y?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
CONST	SEGMENT
??_C@_0BM@CDGGAGHC@P?$HM?$DP?$DP?i?M?$DP?U?t?$PL?y?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ DB 'P'
	DB	'|??', 0e9H, 0cdH, '?', 0d5H, 0f4H, 0fbH, 0f9H, 0a3H, 0acH, 0f1H
	DB	0a8H, '?', 0ecH, 0abH, 0f7H, 0dcH, 0f5H, 0f3H, '?', 0d4H, 0e0H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GENIEILO@P?$HM?$DP?q?i?V?u?Z?$KM?$PL?c?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
CONST	SEGMENT
??_C@_0BN@GENIEILO@P?$HM?$DP?q?i?V?u?Z?$KM?$PL?c?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ DB 'P'
	DB	'|?', 0f1H, 0e9H, 0d6H, 0f5H, 0daH, 0acH, 0fbH, 0e3H, '?', 0a3H
	DB	0acH, 0f1H, 0a8H, '?', 0ecH, 0abH, 0f7H, 0dcH, 0f5H, 0f3H, '?', 0d4H
	DB	0e0H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IEBCIPIN@P?$HM?$DP?n?$NM?q?$KI?$DP?a?t?$DP?$DP?q?l?$KD?$KM?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
CONST	SEGMENT
??_C@_0BM@IEBCIPIN@P?$HM?$DP?n?$NM?q?$KI?$DP?a?t?$DP?$DP?q?l?$KD?$KM?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ DB 'P'
	DB	'|?', 0eeH, 0dcH, 0f1H, 0a8H, '?', 0e1H, 0f4H, '??', 0f1H, 0ecH
	DB	0a3H, 0acH, 0ecH, 0abH, 0f7H, 0dcH, 0f5H, 0f3H, '?', 0d4H, 0e0H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PPACHBFM@P?$HM?$DP?q?i?V?u?U?$KK?$DP?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
CONST	SEGMENT
??_C@_0BM@PPACHBFM@P?$HM?$DP?q?i?V?u?U?$KK?$DP?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@ DB 'P'
	DB	'|?', 0f1H, 0e9H, 0d6H, 0f5H, 0d5H, 0aaH, '??', 0a3H, 0acH, 0f1H
	DB	0a8H, '?', 0ecH, 0abH, 0f7H, 0dcH, 0f5H, 0f3H, '?', 0d4H, 0e0H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@
CONST	SEGMENT
??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@ DB 0d4H, 0f5H, 0d3H
	DB	0e2H, 0fcH, 0deH, 0f9H, 0eaH, '?', 0e1H, 0d6H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KKMNFDNM@?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?G?$NP?$LE?Y?4@
CONST	SEGMENT
??_C@_0BC@KKMNFDNM@?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?G?$NP?$LE?Y?4@ DB 0b1H
	DB	0e2H, 0bdH, 0c0H, ' ', 0b0H, 0f8H, 0b0H, 0ddH, 0c0H, 0bbH, ' ', 0c7H
	DB	0dfH, 0b4H, 0d9H, '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HIHCIHBK@?5?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?$LE?g?G?$NP?$LE?Y?5@
CONST	SEGMENT
??_C@_0BF@HIHCIHBK@?5?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?$LE?g?G?$NP?$LE?Y?5@ DB ' '
	DB	0b1H, 0e2H, 0bdH, 0c0H, ' ', 0b0H, 0f8H, 0b0H, 0ddH, 0c0H, 0bbH
	DB	' ', 0b4H, 0e7H, 0c7H, 0dfH, 0b4H, 0d9H, ' ', 00H ; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleProc.cpp
;	COMDAT ?SurprisalDisp@@YAXXZ
_TEXT	SEGMENT
?SurprisalDisp@@YAXXZ PROC				; SurprisalDisp, COMDAT

; 277  : {

  00000	f6 05 00 00 00
	00 30		 test	 BYTE PTR ?BattleBpFlag@@3HA, 48 ; 00000030H

; 278  : 
; 279  : 	if( BattleBpFlag & BATTLE_BP_ENEMY_SURPRISAL || BattleBpFlag & BATTLE_BP_PLAYER_SURPRISAL ){

  00007	0f 84 d4 00 00
	00		 je	 $LN12@SurprisalD

; 280  : 		// ?????Ó°ä????
; 281  : 		if( pActSurprisalWnd == NULL ){

  0000d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A ; pActSurprisalWnd
  00013	85 c9		 test	 ecx, ecx
  00015	75 38		 jne	 SHORT $LN4@SurprisalD

; 282  : 			// ?????Óù∏Óçï????Óíï
; 283  : 			pActSurprisalWnd = MakeWindowDisp( 320 - 96, 240 - 48, 3, 2, NULL, 1 );

  00017	6a 01		 push	 1
  00019	51		 push	 ecx
  0001a	6a 02		 push	 2
  0001c	6a 03		 push	 3
  0001e	68 c0 00 00 00	 push	 192			; 000000c0H
  00023	68 e0 00 00 00	 push	 224			; 000000e0H
  00028	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 284  : 			// ????????
; 285  : 			play_se( 202, 320, 240 );

  0002d	68 f0 00 00 00	 push	 240			; 000000f0H
  00032	68 40 01 00 00	 push	 320			; 00000140H
  00037	68 ca 00 00 00	 push	 202			; 000000caH
  0003c	a3 00 00 00 00	 mov	 DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A, eax ; pActSurprisalWnd
  00041	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00046	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A ; pActSurprisalWnd
  0004c	83 c4 24	 add	 esp, 36			; 00000024H
$LN4@SurprisalD:

; 286  : 		}
; 287  : 		// ?????Óèù????????
; 288  : 		if( pActSurprisalWnd->hp > 0 ){

  0004f	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00053	0f 8e 88 00 00
	00		 jle	 $LN12@SurprisalD

; 289  : 			// ????????Óèù????
; 290  : 			if( MenuToggleFlag & JOY_CTRL_E || MenuToggleFlag & JOY_CTRL_A ){ 

  00059	f7 05 00 00 00
	00 00 00 00 06	 test	 DWORD PTR ?MenuToggleFlag@@3IA, 100663296 ; MenuToggleFlag, 06000000H
  00063	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00066	75 0c		 jne	 SHORT $LN8@SurprisalD

; 292  : 			}else{ 
; 293  : 				if( pActSurprisalWnd->x > 320 - 96 ) pActSurprisalWnd->x -= 6;

  00068	3d e0 00 00 00	 cmp	 eax, 224		; 000000e0H
  0006d	7e 18		 jle	 SHORT $LN9@SurprisalD
  0006f	83 c0 fa	 add	 eax, -6			; fffffffaH
  00072	eb 0a		 jmp	 SHORT $LN14@SurprisalD
$LN8@SurprisalD:

; 291  : 				if( pActSurprisalWnd->x < 320 - 96 + 56 ) pActSurprisalWnd->x += 6;

  00074	3d 18 01 00 00	 cmp	 eax, 280		; 00000118H
  00079	7d 0c		 jge	 SHORT $LN9@SurprisalD
  0007b	83 c0 06	 add	 eax, 6
$LN14@SurprisalD:

; 294  : 			}
; 295  : 			// Óò©?Óûè???????Óûè???????
; 296  : 			if( BattleBpFlag & BATTLE_BP_ENEMY_SURPRISAL ){

  0007e	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00081	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A ; pActSurprisalWnd
$LN9@SurprisalD:
  00087	f6 05 00 00 00
	00 10		 test	 BYTE PTR ?BattleBpFlag@@3HA, 16 ; 00000010H
  0008e	74 27		 je	 SHORT $LN11@SurprisalD

; 297  : 				StockFontBuffer( pActSurprisalWnd->x + 38, pActSurprisalWnd->y + 40, FONT_PRIO_FRONT, 0, " Í∏∞Ïäµ Í≥µÍ≤©ÏùÑ ÎãπÌñàÎã§ ", 0 );

  00090	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00093	6a 00		 push	 0
  00095	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HIHCIHBK@?5?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?$LE?g?G?$NP?$LE?Y?5@
  0009a	6a 00		 push	 0
  0009c	83 c0 28	 add	 eax, 40			; 00000028H
  0009f	6a 01		 push	 1
  000a1	50		 push	 eax
  000a2	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000a5	83 c0 26	 add	 eax, 38			; 00000026H
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  000ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A ; pActSurprisalWnd
  000b4	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@SurprisalD:

; 298  : 			}
; 299  : 			// ??????Óûè??????
; 300  : 			if( BattleBpFlag & BATTLE_BP_PLAYER_SURPRISAL ){

  000b7	f6 05 00 00 00
	00 20		 test	 BYTE PTR ?BattleBpFlag@@3HA, 32 ; 00000020H
  000be	74 21		 je	 SHORT $LN12@SurprisalD

; 301  : 				StockFontBuffer( pActSurprisalWnd->x + 38, pActSurprisalWnd->y + 40, FONT_PRIO_FRONT, 0, "Í∏∞Ïäµ Í≥µÍ≤©ÏùÑ ÌñàÎã§.", 0 );

  000c0	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000c3	6a 00		 push	 0
  000c5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KKMNFDNM@?$LB?b?$LN?$MA?5?$LA?x?$LA?$NN?$MA?$LL?5?G?$NP?$LE?Y?4@
  000ca	6a 00		 push	 0
  000cc	83 c0 28	 add	 eax, 40			; 00000028H
  000cf	6a 01		 push	 1
  000d1	50		 push	 eax
  000d2	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000d5	83 c0 26	 add	 eax, 38			; 00000026H
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  000de	83 c4 18	 add	 esp, 24			; 00000018H
$LN12@SurprisalD:

; 302  : 			}
; 303  : 		}
; 304  : 	}
; 305  : }

  000e1	c3		 ret	 0
?SurprisalDisp@@YAXXZ ENDP				; SurprisalDisp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleProc.cpp
;	COMDAT ?damage_dispx@@YAXXZ
_TEXT	SEGMENT
?damage_dispx@@YAXXZ PROC				; damage_dispx, COMDAT

; 239  : {

  00000	56		 push	 esi

; 240  : 	ACTION *pActLoop = pActTop->pNext; 	/* ÓìèÓô™????????ÓéïÓôæ */

  00001	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActTop@@3PAUaction@@A ; pActTop
  00007	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 241  : 	ACTION *pActLoopBak;  /* ?Ó†å???????? */
; 242  : 	// ?????	
; 243  : 	while(1){
; 244  : 		/* ??Óùì???????? */	
; 245  : 		if( pActLoop == pActBtm ) break;

  0000a	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?pActBtm@@3PAUaction@@A ; pActBtm
  00010	74 6b		 je	 SHORT $LN13@damage_dis
  00012	57		 push	 edi
$LL2@damage_dis:

; 246  : 		/* Óíü????? */
; 247  : 		if( pActLoop->deathFlag == FALSE ){

  00013	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  00017	75 3e		 jne	 SHORT $LN5@damage_dis

; 248  : 			/* Pd( pActLoop->prio ); */
; 249  : 			/* ?????????ÓçØ? */
; 250  : 			if( pActLoop->func == damage_num ){

  00019	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0001c	3d 00 00 00 00	 cmp	 eax, OFFSET ?damage_num@@YAXPAUaction@@@Z ; damage_num
  00021	75 0c		 jne	 SHORT $LN16@damage_dis

; 251  : 				damage_num(pActLoop);

  00023	56		 push	 esi
  00024	e8 00 00 00 00	 call	 ?damage_num@@YAXPAUaction@@@Z ; damage_num
  00029	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0002c	83 c4 04	 add	 esp, 4
$LN16@damage_dis:

; 252  : 			}
; 253  : 			if( pActLoop->func == WindowDisp ){

  0002f	3d 00 00 00 00	 cmp	 eax, OFFSET ?WindowDisp@@YAXPAUaction@@@Z ; WindowDisp
  00034	75 0c		 jne	 SHORT $LN17@damage_dis

; 254  : 				WindowDisp(pActLoop);

  00036	56		 push	 esi
  00037	e8 00 00 00 00	 call	 ?WindowDisp@@YAXPAUaction@@@Z ; WindowDisp
  0003c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0003f	83 c4 04	 add	 esp, 4
$LN17@damage_dis:

; 255  : 			}
; 256  : 			if( pActLoop->func == disp_kanji ){

  00042	3d 00 00 00 00	 cmp	 eax, OFFSET ?disp_kanji@@YAXPAUaction@@@Z ; disp_kanji
  00047	75 09		 jne	 SHORT $LN9@damage_dis

; 257  : 				disp_kanji(pActLoop);

  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 ?disp_kanji@@YAXPAUaction@@@Z ; disp_kanji
  0004f	83 c4 04	 add	 esp, 4
$LN9@damage_dis:

; 258  : 			}
; 259  : 			/* ?????????? */
; 260  : 			pActLoop = pActLoop->pNext;

  00052	8b 76 04	 mov	 esi, DWORD PTR [esi+4]

; 261  : 		}else{	/* ?????? */

  00055	eb 1d		 jmp	 SHORT $LN6@damage_dis
$LN5@damage_dis:

; 262  : 			/* Óì∑????? */
; 263  : 			pActLoop->pPrev->pNext = pActLoop->pNext;

  00057	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00059	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 264  : 			pActLoop->pNext->pPrev = pActLoop->pPrev;
; 265  : 			/* ?????? */
; 266  : 			pActLoopBak = pActLoop->pNext;
; 267  : 			/* ??????Óåñ */
; 268  : 			ClearAction( pActLoop );

  0005c	56		 push	 esi
  0005d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00060	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00063	8b 06		 mov	 eax, DWORD PTR [esi]
  00065	89 01		 mov	 DWORD PTR [ecx], eax
  00067	8b 7e 04	 mov	 edi, DWORD PTR [esi+4]
  0006a	e8 00 00 00 00	 call	 ?ClearAction@@YAXPAUaction@@@Z ; ClearAction
  0006f	83 c4 04	 add	 esp, 4

; 269  : 			/* ???????? */
; 270  : 			pActLoop = pActLoopBak;

  00072	8b f7		 mov	 esi, edi
$LN6@damage_dis:

; 241  : 	ACTION *pActLoopBak;  /* ?Ó†å???????? */
; 242  : 	// ?????	
; 243  : 	while(1){
; 244  : 		/* ??Óùì???????? */	
; 245  : 		if( pActLoop == pActBtm ) break;

  00074	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?pActBtm@@3PAUaction@@A ; pActBtm
  0007a	75 97		 jne	 SHORT $LL2@damage_dis
  0007c	5f		 pop	 edi
$LN13@damage_dis:
  0007d	5e		 pop	 esi

; 271  : 		}
; 272  : 	}
; 273  : }

  0007e	c3		 ret	 0
?damage_dispx@@YAXXZ ENDP				; damage_dispx
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleProc.cpp
;	COMDAT ?die_flash@@YAXXZ
_TEXT	SEGMENT
?die_flash@@YAXXZ PROC					; die_flash, COMDAT

; 165  : 	int d0 = 0;
; 166  : 	int d1,d7;
; 167  : 	return;
; 168  : 	switch(flash_vct_no){
; 169  : 	case 0:
; 170  : 		break;
; 171  : //??????????  ?Ó†å  ??????????
; 172  : 	case 1:
; 173  : 		flash_vct_no++;
; 174  : 		break;
; 175  : 
; 176  : 	case 2:
; 177  : 		for( d7 = 0; d7 < 10; d7++ ){
; 178  : 			Palette2[d7].peBlue  	= Palette[d7].peBlue;
; 179  : 			Palette2[d7].peGreen 	= Palette[d7].peGreen;
; 180  : 			Palette2[d7].peRed 		= Palette[d7].peRed;
; 181  : 			Palette2[d7].peFlags 	= Palette[d7].peFlags;
; 182  : 
; 183  : 			Palette2[d7+246].peBlue  = Palette[d7+246].peBlue;
; 184  : 			Palette2[d7+246].peGreen = Palette[d7+246].peGreen;
; 185  : 			Palette2[d7+246].peRed 	= Palette[d7+246].peRed;
; 186  : 			Palette2[d7+246].peFlags = Palette[d7].peFlags;
; 187  : 		}
; 188  : 		for( d7 = 10; d7 < 246; d7++ ){		//??????????
; 189  : 			Palette2[d7].peBlue = Palette[d7].peBlue;
; 190  : 			Palette2[d7].peGreen = Palette[d7].peGreen;
; 191  : 			Palette2[d7].peRed = 0xff;
; 192  : 			Palette2[d7].peFlags = Palette[d7].peFlags;
; 193  : 		}
; 194  : 		lpDraw->lpPALETTE->SetEntries( 0, 0, 256, Palette2 );
; 195  : 		flash_pal_cnt = 20;
; 196  : 		flash_vct_no++;
; 197  : 		break;
; 198  : 
; 199  : 	case 3:
; 200  : 		if(--flash_pal_cnt){
; 201  : 			break;
; 202  : 		}
; 203  : 		flash_vct_no++;
; 204  : 		break;
; 205  : 
; 206  : 	case 4:
; 207  : 		for(d7=10; d7<246; d7++){
; 208  : 			if(Palette2[d7].peRed == Palette[d7].peRed){
; 209  : 				continue;
; 210  : 			}
; 211  : 			d0 = 1;
; 212  : 			d1 = Palette2[d7].peRed - Palette[d7].peRed;
; 213  : 			if(d1 > 3)
; 214  : 				d1 = 3;
; 215  : 			if(d1 < -3)
; 216  : 				d1 = -3;
; 217  : 			Palette2[d7].peRed -= d1;
; 218  : 		}
; 219  : 		if(WindowMode){		//??????????
; 220  : 			flash_pal_cnt++;
; 221  : 			if(flash_pal_cnt == 10){		//Óüâ??Óõõ??
; 222  : 				flash_pal_cnt = 0;
; 223  : 				lpDraw->lpPALETTE->SetEntries( 0, 0, 256, Palette2 );
; 224  : 			} else {
; 225  : 				d0 = 1;		//Óé∑????
; 226  : 			}
; 227  : 		} else {
; 228  : 			lpDraw->lpPALETTE->SetEntries( 0, 0, 256, Palette2 );
; 229  : 		}
; 230  : 		if(d0 == 0){		//Óé∑???
; 231  : 			flash_vct_no = 0;
; 232  : 		}
; 233  : 		break;
; 234  : 	}
; 235  : }

  00000	c2 00 00	 ret	 0
?die_flash@@YAXXZ ENDP					; die_flash
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleProc.cpp
;	COMDAT ?battle_quake@@YAXXZ
_TEXT	SEGMENT
?battle_quake@@YAXXZ PROC				; battle_quake, COMDAT

; 107  : 	switch(quake_vct_no){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?quake_vct_no@@3HA ; quake_vct_no
  00005	83 e8 01	 sub	 eax, 1
  00008	74 3b		 je	 SHORT $LN7@battle_qua
  0000a	83 e8 01	 sub	 eax, 1
  0000d	75 4a		 jne	 SHORT $LN11@battle_qua

; 113  : 		break;
; 114  : 	case 2:		//‰ΩãÓë∂?
; 115  : 		if(quake_flg >= 16){

  0000f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?quake_flg@@3HA ; quake_flg
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  0001a	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0001d	7c 05		 jl	 SHORT $LN9@battle_qua

; 116  : 			piyo_point += 16;

  0001f	83 c0 10	 add	 eax, 16			; 00000010H

; 117  : 		} else {

  00022	eb 02		 jmp	 SHORT $LN10@battle_qua
$LN9@battle_qua:

; 118  : 			piyo_point += quake_flg;

  00024	03 c1		 add	 eax, ecx
$LN10@battle_qua:

; 119  : 		}
; 120  : 		piyo_point &= 63;

  00026	83 e0 3f	 and	 eax, 63			; 0000003fH

; 121  : 		if(!--quake_flg){		//‰ΩãÓë∂Óé∑???

  00029	83 e9 01	 sub	 ecx, 1
  0002c	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
  00031	89 0d 00 00 00
	00		 mov	 DWORD PTR ?quake_flg@@3HA, ecx ; quake_flg
  00037	75 20		 jne	 SHORT $LN11@battle_qua

; 122  : 			quake_vct_no = 0;

  00039	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?quake_vct_no@@3HA, 0 ; quake_vct_no
  00043	eb 14		 jmp	 SHORT $LN11@battle_qua
$LN7@battle_qua:

; 108  : 	case 0:		//??Ó°ä?
; 109  : 		break;
; 110  : 	case 1:		//‰ΩãÓë∂?Óåø
; 111  : 		quake_flg = 60;

  00045	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?quake_flg@@3HA, 60 ; quake_flg, 0000003cH

; 112  : 		quake_vct_no = 2;

  0004f	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?quake_vct_no@@3HA, 2 ; quake_vct_no
$LN11@battle_qua:

; 123  : 		}
; 124  : 		break;
; 125  : 	}
; 126  : 
; 127  : 	#ifdef __ATTACK_MAGIC
; 128  : 
; 129  : 	switch( g_iRunEarthQuake )

  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iRunEarthQuake@@3HA ; g_iRunEarthQuake
  0005e	83 e8 01	 sub	 eax, 1
  00061	74 3a		 je	 SHORT $LN13@battle_qua
  00063	83 e8 01	 sub	 eax, 1
  00066	75 3f		 jne	 SHORT $LN17@battle_qua

; 140  : 			break;
; 141  : 
; 142  : 		// Âú∞Èúá‰∏≠
; 143  : 		case 2:
; 144  : 
; 145  : 			if( g_iNumRunEarthQuake >= 16 )

  00068	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?g_iNumRunEarthQuake@@3HA ; g_iNumRunEarthQuake
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_iCurRunEarthQuake@@3HA ; g_iCurRunEarthQuake
  00073	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00076	7c 05		 jl	 SHORT $LN15@battle_qua

; 146  : 				g_iCurRunEarthQuake += 16;

  00078	83 c0 10	 add	 eax, 16			; 00000010H
  0007b	eb 02		 jmp	 SHORT $LN16@battle_qua
$LN15@battle_qua:

; 147  : 			else
; 148  : 				g_iCurRunEarthQuake += g_iNumRunEarthQuake;

  0007d	03 c1		 add	 eax, ecx
$LN16@battle_qua:

; 149  : 
; 150  : 			g_iCurRunEarthQuake &= 63;

  0007f	83 e0 3f	 and	 eax, 63			; 0000003fH

; 151  : 
; 152  : 			if( 0 == --g_iNumRunEarthQuake )

  00082	83 e9 01	 sub	 ecx, 1
  00085	a3 00 00 00 00	 mov	 DWORD PTR ?g_iCurRunEarthQuake@@3HA, eax ; g_iCurRunEarthQuake
  0008a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?g_iNumRunEarthQuake@@3HA, ecx ; g_iNumRunEarthQuake
  00090	75 15		 jne	 SHORT $LN17@battle_qua

; 153  : 				g_iRunEarthQuake = 0;

  00092	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?g_iRunEarthQuake@@3HA, 0 ; g_iRunEarthQuake

; 154  : 
; 155  : 			break;
; 156  : 
; 157  : 	}
; 158  : 
; 159  : 	#endif
; 160  : }

  0009c	c3		 ret	 0
$LN13@battle_qua:

; 130  : 	{
; 131  : 		// Ê≤°Âú∞Èúá
; 132  : 		case 0:
; 133  : 
; 134  : 			break;
; 135  : 
; 136  : 		// ÂàùÂßãÂåñÂú∞Èúá
; 137  : 		case 1:
; 138  : 
; 139  : 			g_iRunEarthQuake = 2;

  0009d	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?g_iRunEarthQuake@@3HA, 2 ; g_iRunEarthQuake
$LN17@battle_qua:

; 154  : 
; 155  : 			break;
; 156  : 
; 157  : 	}
; 158  : 
; 159  : 	#endif
; 160  : }

  000a7	c3		 ret	 0
?battle_quake@@YAXXZ ENDP				; battle_quake
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleProc.cpp
;	COMDAT ?BattleProc@@YAXXZ
_TEXT	SEGMENT
?BattleProc@@YAXXZ PROC					; BattleProc, COMDAT

; 316  : 	int i;
; 317  : 	int z;
; 318  : 	s_timer++;	

  00000	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?s_timer@@3GA ; s_timer

; 319  : 	xxx = 0;
; 320  : #ifndef _STREET_VENDOR
; 321  : 	#ifdef _TABLEOFSKILL
; 322  : 		extern short skillBtn ;
; 323  : 		skillBtn = 0 ; 
; 324  : 	#endif
; 325  : #endif
; 326  : #ifdef _FRIENDCHANNEL      //ROG ADD Â•ΩÂèãÈ¢ëÈÅì
; 327  : 	extern short chatRoomBtn ;
; 328  : 	chatRoomBtn = 0;

  00007	33 d2		 xor	 edx, edx
  00009	66 41		 inc	 cx
  0000b	66 89 15 00 00
	00 00		 mov	 WORD PTR ?chatRoomBtn@@3FA, dx ; chatRoomBtn
  00012	53		 push	 ebx

; 329  : 	SelRoomBtn = 0;

  00013	66 89 15 00 00
	00 00		 mov	 WORD PTR ?SelRoomBtn@@3FA, dx ; SelRoomBtn

; 330  : #endif
; 331  : 
; 332  : 	switch( SubProcNo ){

  0001a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00020	0f b7 d9	 movzx	 ebx, cx
  00023	0f b7 c1	 movzx	 eax, cx
  00026	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?s_timer@@3GA, cx ; s_timer
  0002d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?xxx@@3HA, 0	; xxx
  00037	56		 push	 esi
  00038	83 fa 08	 cmp	 edx, 8
  0003b	0f 87 8f 03 00
	00		 ja	 $LN170@BattleProc
  00041	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN168@BattleProc[edx*4]
$LN25@BattleProc:

; 333  : 		case BATTLE_SUBPROC_INIT:	//ÂàùÊúüÂåñ
; 334  : #ifdef __AI
; 335  : 			extern char *AI_Choosen;
; 336  : 			AI_Choosen = NULL;
; 337  : #endif
; 338  : 			BattlingFlag = TRUE;  
; 339  : 
; 340  : #ifdef _PROFESSION_ADDSKILL
; 341  : 			if( boundary_2 != NULL ){

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?boundary_2@@3PAUaction@@A ; boundary_2
  0004d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?AI_Choosen@@3PADA, 0 ; AI_Choosen
  00057	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BattlingFlag@@3HA, 1 ; BattlingFlag
  00061	85 c0		 test	 eax, eax
  00063	74 13		 je	 SHORT $LN26@BattleProc

; 342  : 				DeathAction( boundary_2 );

  00065	50		 push	 eax
  00066	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0006b	83 c4 04	 add	 esp, 4

; 343  : 			    boundary_2 = NULL;

  0006e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?boundary_2@@3PAUaction@@A, 0 ; boundary_2
$LN26@BattleProc:

; 344  : 			}
; 345  : 			if( boundary_mark[0] ){

  00078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?boundary_mark@@3PAPAUaction@@A
  0007d	85 c0		 test	 eax, eax
  0007f	74 13		 je	 SHORT $LN27@BattleProc

; 346  : 				DeathAction( boundary_mark[0] );

  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00087	83 c4 04	 add	 esp, 4

; 347  : 				boundary_mark[0] = NULL;

  0008a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?boundary_mark@@3PAPAUaction@@A, 0
$LN27@BattleProc:

; 348  : 			}
; 349  : 			if( boundary_mark[1] ){

  00094	a1 04 00 00 00	 mov	 eax, DWORD PTR ?boundary_mark@@3PAPAUaction@@A+4
  00099	85 c0		 test	 eax, eax
  0009b	74 13		 je	 SHORT $LN28@BattleProc

; 350  : 				DeathAction( boundary_mark[1] );

  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000a3	83 c4 04	 add	 esp, 4

; 351  : 				boundary_mark[1] = NULL;

  000a6	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?boundary_mark@@3PAPAUaction@@A+4, 0
$LN28@BattleProc:

; 352  : 			}
; 353  : #endif
; 354  : 			//ActionÊ∂àÁÅ≠
; 355  : 			DeathAllAction();

  000b0	e8 00 00 00 00	 call	 ?DeathAllAction@@YAXXZ	; DeathAllAction

; 356  : 
; 357  : 			// ÊàòÊñóÂàùÂßãÊó∂ÈáäÊîæÊéâÊ∞¥‰∏ñÁïåÊâÄÊúâÁöÑÂä®Áîª
; 358  : #ifdef _AniRandom   // Syu ADD ÈöèÊú∫‰∫ßÁîüÁéØÂ¢ÉÂä®Áîª
; 359  : 			extern void AniRandomRelease();
; 360  : 			AniRandomRelease();

  000b5	e8 00 00 00 00	 call	 ?AniRandomRelease@@YAXXZ ; AniRandomRelease

; 361  : #endif
; 362  : #ifdef _AniCrossFrame	   // Syu ADD Âä®ÁîªÂ±ÇÊ∏∏ËøáÁîªÈù¢ÁîüÁâ©
; 363  : 			extern void crossAniRelease();
; 364  : 			crossAniRelease();

  000ba	e8 00 00 00 00	 call	 ?crossAniRelease@@YAXXZ	; crossAniRelease

; 365  : #endif
; 366  : #ifdef _AniCharBubble	   // Syu ADD Âä®ÁîªÂ±Ç‰∫∫Áâ©ÂêêÂá∫Ê∞îÊ≥°
; 367  : 			extern void CharbubbleRelease();
; 368  : 			CharbubbleRelease();

  000bf	e8 00 00 00 00	 call	 ?CharbubbleRelease@@YAXXZ ; CharbubbleRelease

; 369  : #endif
; 370  : #ifdef _AniImmobile	 // Syu ADD ÂÆöÁÇπ‰∫ßÁîüÁâπÂÆöÂä®Áîª
; 371  : 			extern void ImmobileAniRelease();
; 372  : 			ImmobileAniRelease();

  000c4	e8 00 00 00 00	 call	 ?ImmobileAniRelease@@YAXXZ ; ImmobileAniRelease

; 373  : #endif
; 374  : #ifdef _SPECIALSPACEANIM	// Syu ADD ÁâπÊÆäÂú∫ÊôØÂä®ÁîªÈÖçÁΩÆ
; 375  : 			extern void ReleaseSpecAnim();
; 376  : 			ReleaseSpecAnim();

  000c9	e8 00 00 00 00	 call	 ?ReleaseSpecAnim@@YAXXZ	; ReleaseSpecAnim

; 377  : #endif
; 378  : #ifdef _NEWDRAWBATTLEMAP		   // Syu ADD Ëá™Âä®‰∫ßÁîüBattleMap
; 379  : 			if ( nowFloor == 817 || nowFloor == 8007 || nowFloor == 8101 || nowFloor == 8100 || 
; 380  : 				nowFloor == 8027 || nowFloor == 8028 || nowFloor == 8029 || nowFloor == 8015 || nowFloor == 8113 || nowFloor == 8114 )

  000ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowFloor@@3HA ; nowFloor
  000d3	3d 31 03 00 00	 cmp	 eax, 817		; 00000331H
  000d8	74 3f		 je	 SHORT $LN30@BattleProc
  000da	3d 47 1f 00 00	 cmp	 eax, 8007		; 00001f47H
  000df	74 38		 je	 SHORT $LN30@BattleProc
  000e1	3d a5 1f 00 00	 cmp	 eax, 8101		; 00001fa5H
  000e6	74 31		 je	 SHORT $LN30@BattleProc
  000e8	3d a4 1f 00 00	 cmp	 eax, 8100		; 00001fa4H
  000ed	74 2a		 je	 SHORT $LN30@BattleProc
  000ef	3d 5b 1f 00 00	 cmp	 eax, 8027		; 00001f5bH
  000f4	74 23		 je	 SHORT $LN30@BattleProc
  000f6	3d 5c 1f 00 00	 cmp	 eax, 8028		; 00001f5cH
  000fb	74 1c		 je	 SHORT $LN30@BattleProc
  000fd	3d 5d 1f 00 00	 cmp	 eax, 8029		; 00001f5dH
  00102	74 15		 je	 SHORT $LN30@BattleProc
  00104	3d 4f 1f 00 00	 cmp	 eax, 8015		; 00001f4fH
  00109	74 0e		 je	 SHORT $LN30@BattleProc
  0010b	3d b1 1f 00 00	 cmp	 eax, 8113		; 00001fb1H
  00110	74 07		 je	 SHORT $LN30@BattleProc
  00112	3d b2 1f 00 00	 cmp	 eax, 8114		; 00001fb2H
  00117	75 53		 jne	 SHORT $LN5@BattleProc
$LN30@BattleProc:
  00119	57		 push	 edi

; 381  : 			{
; 382  : 				for ( z = 0 ; z < 8 ; z ++ ) 

  0011a	be 00 00 00 00	 mov	 esi, OFFSET ?BattleWaterAct@@3PAPAUaction@@A
  0011f	bf 50 00 00 00	 mov	 edi, 80			; 00000050H
$LL6@BattleProc:

; 383  : 				{
; 384  : 					if ( BattleWaterAct [ z ] == NULL )

  00124	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00127	75 34		 jne	 SHORT $LN4@BattleProc

; 385  : 					{
; 386  : 						BattleWaterAct[ z ] = MakeAnimDisp ( 

  00129	6a 00		 push	 0
  0012b	68 85 8c 01 00	 push	 101509			; 00018c85H
  00130	68 7e 8c 01 00	 push	 101502			; 00018c7eH
  00135	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  0013a	83 c4 08	 add	 esp, 8
  0013d	50		 push	 eax
  0013e	68 c2 01 00 00	 push	 450			; 000001c2H
  00143	6a 05		 push	 5
  00145	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  0014a	83 c4 08	 add	 esp, 8
  0014d	50		 push	 eax
  0014e	57		 push	 edi
  0014f	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00154	83 c4 10	 add	 esp, 16			; 00000010H
  00157	89 06		 mov	 DWORD PTR [esi], eax

; 387  : 						( 80 * (z + 1) ), 
; 388  : 						Rnd ( 5 , 450 ) , 
; 389  : 						Rnd( 101502 , 101509) , 
; 390  : 						0);
; 391  : 						BattleWaterAct[ z ]->dispPrio = 30 ;

  00159	c6 40 15 1e	 mov	 BYTE PTR [eax+21], 30	; 0000001eH
$LN4@BattleProc:

; 381  : 			{
; 382  : 				for ( z = 0 ; z < 8 ; z ++ ) 

  0015d	83 c7 50	 add	 edi, 80			; 00000050H
  00160	83 c6 04	 add	 esi, 4
  00163	81 ff d0 02 00
	00		 cmp	 edi, 720		; 000002d0H
  00169	7c b9		 jl	 SHORT $LL6@BattleProc
  0016b	5f		 pop	 edi
$LN5@BattleProc:

; 392  : 					}
; 393  : 				}
; 394  : 			}
; 395  : #endif
; 396  : 			slow_flg = 0;

  0016c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?slow_flg@@3HA, 0 ; slow_flg

; 397  : 			action_inf = 0;

  00176	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?action_inf@@3HA, 0 ; action_inf

; 398  : 			oft_test();

  00180	e8 00 00 00 00	 call	 ?oft_test@@YAPAUaction@@XZ ; oft_test

; 399  : 			// MenuÂàùÂßãÂåñ
; 400  : 			InitMenu();

  00185	e8 00 00 00 00	 call	 ?InitMenu@@YAXXZ	; InitMenu

; 401  : 			// BattleMenuÂàùÂßãÂåñ
; 402  : 			InitBattleMenu();

  0018a	e8 00 00 00 00	 call	 ?InitBattleMenu@@YAXXZ	; InitBattleMenu

; 403  : 			pActSurprisalWnd = NULL;
; 404  : 			pActAudienceExitWnd = NULL;
; 405  : 			// ProduceÂàùÂßãÂåñ
; 406  : 			ProduceInitFlag = TRUE;
; 407  : 
; 408  : 			// ËæìÂÖ•focusÂèñÂæó
; 409  : 			GetKeyInputFocus( &MyChatBuffer );

  0018f	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00194	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A, 0 ; pActSurprisalWnd
  0019e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAudienceExitWnd@@3PAUaction@@A, 0 ; pActAudienceExitWnd
  001a8	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  001b2	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 410  : 			// ?Óèù????Óíï
; 411  : 			// BufferÂàùÂßãÂåñ
; 412  : 			DispBuffer.DispCnt = 0;
; 413  : 			FontCnt = 0;
; 414  : 			// BattleMapËØªÂèñ
; 415  : 			ReadBattleMap( BattleMapNo );

  001b7	ff 35 00 00 00
	00		 push	 DWORD PTR ?BattleMapNo@@3HA ; BattleMapNo
  001bd	33 c0		 xor	 eax, eax
  001bf	66 a3 00 c0 01
	00		 mov	 WORD PTR ?DispBuffer@@3UDISP_BUFFER@@A+114688, ax
  001c5	a3 00 00 00 00	 mov	 DWORD PTR ?FontCnt@@3HA, eax ; FontCnt
  001ca	e8 00 00 00 00	 call	 ?ReadBattleMap@@YAHH@Z	; ReadBattleMap
  001cf	83 c4 08	 add	 esp, 8

; 416  : 			ChatProc();				// ChatÂ§ÑÁêÜ

  001d2	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 417  : 			ChatBufferToFontBuffer(); // ??????????????????????

  001d7	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 418  : 			// ???????????????
; 419  : 			ClearBackSurface();	

  001dc	e8 00 00 00 00	 call	 ?ClearBackSurface@@YAXXZ ; ClearBackSurface

; 420  : 			// ????????????????
; 421  : #ifdef __SKYISLAND
; 422  : 			fastDrawTileFlag = 0;

  001e1	33 c0		 xor	 eax, eax
  001e3	66 a3 00 00 00
	00		 mov	 WORD PTR ?fastDrawTileFlag@@3FA, ax ; fastDrawTileFlag

; 423  : 			PutBmp();	

  001e9	e8 00 00 00 00	 call	 ?PutBmp@@YAXXZ		; PutBmp

; 424  : 			fastDrawTileFlag = 1;

  001ee	b8 01 00 00 00	 mov	 eax, 1
  001f3	66 a3 00 00 00
	00		 mov	 WORD PTR ?fastDrawTileFlag@@3FA, ax ; fastDrawTileFlag

; 425  : #else
; 426  : 			PutBmp();	
; 427  : 			// ??????????????????????
; 428  : 			lpBattleSurface->BltFast( 0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT );
; 429  : #endif
; 430  : 			// ???????
; 431  : 			DispBuffer.DispCnt = 0;

  001f9	33 c0		 xor	 eax, eax

; 432  : 			FontCnt = 0;
; 433  : 			//?ÓòãÓò©???????
; 434  : 			if(DuelFlag == TRUE || eventEnemyFlag == 1 || vsLookFlag == 1)

  001fb	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?DuelFlag@@3HA, 1 ; DuelFlag
  00202	66 a3 00 c0 01
	00		 mov	 WORD PTR ?DispBuffer@@3UDISP_BUFFER@@A+114688, ax
  00208	a3 00 00 00 00	 mov	 DWORD PTR ?FontCnt@@3HA, eax ; FontCnt
  0020d	0f 84 a9 00 00
	00		 je	 $LN34@BattleProc
  00213	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?eventEnemyFlag@@3FA, 1 ; eventEnemyFlag
  0021b	0f 84 9b 00 00
	00		 je	 $LN34@BattleProc
  00221	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?vsLookFlag@@3FA, 1 ; vsLookFlag
  00229	0f 84 8d 00 00
	00		 je	 $LN34@BattleProc

; 450  : #endif
; 451  : 			}
; 452  : 			else
; 453  : 			{
; 454  : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 Êñ∞Âú∞ÂõæÈü≥‰πê
; 455  : 				if ( nowFloor != 817 && nowFloor != 8007 && nowFloor != 8101 && nowFloor != 8100 && 
; 456  : 					nowFloor != 8027 && nowFloor != 8028 && nowFloor != 8029 && nowFloor != 8015 && nowFloor != 8113 && nowFloor != 8114 )

  0022f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowFloor@@3HA ; nowFloor
  00234	3d 31 03 00 00	 cmp	 eax, 817		; 00000331H
  00239	0f 84 f8 00 00
	00		 je	 $LN35@BattleProc
  0023f	3d 47 1f 00 00	 cmp	 eax, 8007		; 00001f47H
  00244	0f 84 ed 00 00
	00		 je	 $LN35@BattleProc
  0024a	3d a5 1f 00 00	 cmp	 eax, 8101		; 00001fa5H
  0024f	0f 84 e2 00 00
	00		 je	 $LN35@BattleProc
  00255	3d a4 1f 00 00	 cmp	 eax, 8100		; 00001fa4H
  0025a	0f 84 d7 00 00
	00		 je	 $LN35@BattleProc
  00260	3d 5b 1f 00 00	 cmp	 eax, 8027		; 00001f5bH
  00265	0f 84 cc 00 00
	00		 je	 $LN35@BattleProc
  0026b	3d 5c 1f 00 00	 cmp	 eax, 8028		; 00001f5cH
  00270	0f 84 c1 00 00
	00		 je	 $LN35@BattleProc
  00276	3d 5d 1f 00 00	 cmp	 eax, 8029		; 00001f5dH
  0027b	0f 84 b6 00 00
	00		 je	 $LN35@BattleProc
  00281	3d 4f 1f 00 00	 cmp	 eax, 8015		; 00001f4fH
  00286	0f 84 ab 00 00
	00		 je	 $LN35@BattleProc
  0028c	3d b1 1f 00 00	 cmp	 eax, 8113		; 00001fb1H
  00291	0f 84 a0 00 00
	00		 je	 $LN35@BattleProc
  00297	3d b2 1f 00 00	 cmp	 eax, 8114		; 00001fb2H
  0029c	0f 84 95 00 00
	00		 je	 $LN35@BattleProc

; 457  : 				{
; 458  : #endif
; 459  : 					//ÈÄöÂ∏∏ÊàòÊñóBGMÂÜçÁîü
; 460  : 					if( map_bgm_no>=15 && map_bgm_no<=21)

  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_bgm_no@@3HA ; map_bgm_no

; 461  : 						play_bgm( 12 );
; 462  : 					else
; 463  : 						play_bgm( 5 );
; 464  : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 Êñ∞Âú∞ÂõæÈü≥‰πê
; 465  : 				}

  002a7	b9 06 00 00 00	 mov	 ecx, 6
  002ac	83 c0 f1	 add	 eax, -15		; fffffff1H
  002af	3b c8		 cmp	 ecx, eax
  002b1	1b c0		 sbb	 eax, eax
  002b3	83 e0 f9	 and	 eax, -7			; fffffff9H
  002b6	83 c0 0c	 add	 eax, 12			; 0000000cH
  002b9	50		 push	 eax
  002ba	eb 7d		 jmp	 SHORT $LN173@BattleProc
$LN34@BattleProc:

; 435  : 			{
; 436  : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 Êñ∞Âú∞ÂõæÈü≥‰πê
; 437  : 				if ( nowFloor != 817 && nowFloor != 8007 && nowFloor != 8101 && nowFloor != 8100 && 
; 438  : 					nowFloor != 8027 && nowFloor != 8028 && nowFloor != 8029 && nowFloor != 8015 && nowFloor != 8113 && nowFloor != 8114 )

  002bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowFloor@@3HA ; nowFloor
  002c1	3d 31 03 00 00	 cmp	 eax, 817		; 00000331H
  002c6	74 6f		 je	 SHORT $LN35@BattleProc
  002c8	3d 47 1f 00 00	 cmp	 eax, 8007		; 00001f47H
  002cd	74 68		 je	 SHORT $LN35@BattleProc
  002cf	3d a5 1f 00 00	 cmp	 eax, 8101		; 00001fa5H
  002d4	74 61		 je	 SHORT $LN35@BattleProc
  002d6	3d a4 1f 00 00	 cmp	 eax, 8100		; 00001fa4H
  002db	74 5a		 je	 SHORT $LN35@BattleProc
  002dd	3d 5b 1f 00 00	 cmp	 eax, 8027		; 00001f5bH
  002e2	74 53		 je	 SHORT $LN35@BattleProc
  002e4	3d 5c 1f 00 00	 cmp	 eax, 8028		; 00001f5cH
  002e9	74 4c		 je	 SHORT $LN35@BattleProc
  002eb	3d 5d 1f 00 00	 cmp	 eax, 8029		; 00001f5dH
  002f0	74 45		 je	 SHORT $LN35@BattleProc
  002f2	3d 4f 1f 00 00	 cmp	 eax, 8015		; 00001f4fH
  002f7	74 3e		 je	 SHORT $LN35@BattleProc
  002f9	3d b1 1f 00 00	 cmp	 eax, 8113		; 00001fb1H
  002fe	74 37		 je	 SHORT $LN35@BattleProc
  00300	3d b2 1f 00 00	 cmp	 eax, 8114		; 00001fb2H
  00305	74 30		 je	 SHORT $LN35@BattleProc

; 439  : 				{
; 440  : #endif
; 441  : 					//BossÊàòBGMÂÜçÁîü
; 442  : 					if( map_bgm_no>=15 && map_bgm_no<=21)

  00307	a1 00 00 00 00	 mov	 eax, DWORD PTR ?map_bgm_no@@3HA ; map_bgm_no

; 443  : 						play_bgm( 13 );
; 444  : 					else
; 445  : 						play_bgm( 6 );
; 446  : 					if(nowFloor == 8519) play_bgm(14);

  0030c	b9 06 00 00 00	 mov	 ecx, 6
  00311	83 c0 f1	 add	 eax, -15		; fffffff1H
  00314	3b c8		 cmp	 ecx, eax
  00316	1b c0		 sbb	 eax, eax
  00318	83 e0 f9	 and	 eax, -7			; fffffff9H
  0031b	83 c0 0d	 add	 eax, 13			; 0000000dH
  0031e	50		 push	 eax
  0031f	e8 00 00 00 00	 call	 ?play_bgm@@YAHH@Z	; play_bgm
  00324	83 c4 04	 add	 esp, 4
  00327	81 3d 00 00 00
	00 47 21 00 00	 cmp	 DWORD PTR ?nowFloor@@3HA, 8519 ; nowFloor, 00002147H
  00331	75 0e		 jne	 SHORT $LN36@BattleProc
  00333	6a 0e		 push	 14			; 0000000eH

; 447  : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 Êñ∞Âú∞ÂõæÈü≥‰πê
; 448  : 				}

  00335	eb 02		 jmp	 SHORT $LN173@BattleProc
$LN35@BattleProc:

; 449  : 				else	play_bgm ( 24 ) ;

  00337	6a 18		 push	 24			; 00000018H
$LN173@BattleProc:

; 466  : 				else
; 467  : 					play_bgm ( 24 ) ;
; 468  : #endif
; 469  : 			}
; 470  : 			// ????????
; 471  : 			NowTime = TimeGetTime();

  00339	e8 00 00 00 00	 call	 ?play_bgm@@YAHH@Z	; play_bgm
  0033e	83 c4 04	 add	 esp, 4
$LN36@BattleProc:
  00341	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 472  : 			// ????????Óùº?ÓüµÓüπÓüâ?
; 473  : 			BackBufferDrawType = DRAW_BACK_PRODUCE; 
; 474  : 			// ?Óèù?
; 475  : 			DrawProduce( PRODUCE_HAGARE_OCHI_IN );

  00346	6a 11		 push	 17			; 00000011H
  00348	a3 00 00 00 00	 mov	 DWORD PTR ?NowTime@@3KA, eax ; NowTime
  0034d	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?BackBufferDrawType@@3HA, 2 ; BackBufferDrawType
  00357	e8 00 00 00 00	 call	 ?DrawProduce@@YAHH@Z	; DrawProduce
  0035c	83 c4 04	 add	 esp, 4

; 476  : 			// ÓôÅÓ°ú?Ó°ä???
; 477  : 			MenuProc();				// ??????

  0035f	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 478  : 			ImeProc();				// ???????

  00364	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 479  : 			// Â§ÑÁêÜ field menu ???????????
; 480  : 			fieldProc2();

  00369	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2
  0036e	33 c9		 xor	 ecx, ecx

; 481  : 			// menu flag on ????????? 
; 482  : 			battleMenuFlag2 = TRUE;

  00370	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuFlag2@@3HA, 1 ; battleMenuFlag2
  0037a	ba 76 00 00 00	 mov	 edx, OFFSET ?pet@@3PAUPET@@A+118
  0037f	83 ce ff	 or	 esi, -1
$LL9@BattleProc:

; 485  : 				// ????????????
; 486  : 				if( pet[ i ].useFlag == FALSE ){

  00382	66 83 3a 00	 cmp	 WORD PTR [edx], 0
  00386	75 2e		 jne	 SHORT $LN7@BattleProc

; 487  : 					// ??????
; 488  : 					if( i == pc.battlePetNo ) pc.battlePetNo = -1;

  00388	0f bf 05 aa 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+170
  0038f	3b c8		 cmp	 ecx, eax
  00391	75 07		 jne	 SHORT $LN45@BattleProc
  00393	66 89 35 aa 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+170, si
$LN45@BattleProc:

; 489  : 					// ?????
; 490  : 					if( i == pc.mailPetNo ) pc.mailPetNo = -1;

  0039a	0f bf 05 b6 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+182
  003a1	3b c8		 cmp	 ecx, eax
  003a3	75 07		 jne	 SHORT $LN46@BattleProc
  003a5	66 89 35 b6 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+182, si
$LN46@BattleProc:

; 491  : 					// ??????????
; 492  : 					pc.selectPetNo[ i ] = FALSE;

  003ac	33 c0		 xor	 eax, eax
  003ae	66 89 04 4d ac
	00 00 00	 mov	 WORD PTR ?pc@@3UPC@@A[ecx*2+172], ax
$LN7@BattleProc:

; 483  : 			// Ê£ÄÊü•ÂÆ†Áâ© ??????????
; 484  : 			for( i = 0 ; i < 5 ; i++ ){

  003b6	81 c2 78 0b 00
	00		 add	 edx, 2936		; 00000b78H
  003bc	41		 inc	 ecx
  003bd	81 fa ce 39 00
	00		 cmp	 edx, OFFSET ?pet@@3PAUPET@@A+14798
  003c3	7c bd		 jl	 SHORT $LL9@BattleProc

; 493  : 				}
; 494  : 			}
; 495  : 			// ????????
; 496  : 			saveUserSetting();

  003c5	e8 00 00 00 00	 call	 ?saveUserSetting@@YAHXZ	; saveUserSetting
$LN178@BattleProc:

; 1012 : 							break;
; 1013 : 						}
; 1014 : 					}
; 1015 : 				}
; 1016 : #endif
; 1017 : 				return;
; 1018 : 			}
; 1019 : 			break;
; 1020 : 			
; 1021 : 		case 12:	// ?Óèù
; 1022 : 			break;
; 1023 : 	}
; 1024 : 
; 1025 : #ifndef _CHANNEL_MODIFY
; 1026 : 	// Robin 0805 channel
; 1027 : 	if( bNewServer && joy_trg[1] & JOY_CTRL_C )
; 1028 : 	{
; 1029 : 		char buf[64];
; 1030 : 		if( pc.channel == -1 ) {
; 1031 : 			if( (pc.quickChannel != -1) && (pc.familyName[0] != NULL) ) {
; 1032 : 				sprintf( buf, "C|J|%d", pc.quickChannel);
; 1033 : 				if( bNewServer)
; 1034 : 					lssproto_FM_send( sockfd, buf );
; 1035 : 				else
; 1036 : 					old_lssproto_FM_send( sockfd, buf );
; 1037 : 			}
; 1038 : 		}
; 1039 : 		else{
; 1040 : 			if( bNewServer)
; 1041 : 				lssproto_FM_send( sockfd, "C|J|-1" );
; 1042 : 			else
; 1043 : 				old_lssproto_FM_send( sockfd, "C|J|-1" );
; 1044 : 		}
; 1045 : 	}
; 1046 : #endif
; 1047 : 	// ????????????
; 1048 : 	if( BackBufferDrawType != DRAW_BACK_PRODUCE ){ 

  003ca	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN170@BattleProc:
  003d0	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?BackBufferDrawType@@3HA, 2 ; BackBufferDrawType
  003d7	0f 84 01 08 00
	00		 je	 $LN118@BattleProc

; 1049 : 		// ÓìñÓô¨?ÓíêÓé∑???
; 1050 : 		if( BattleEscFlag == TRUE ){	

  003dd	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?BattleEscFlag@@3HA, 1 ; BattleEscFlag
  003e4	75 14		 jne	 SHORT $LN113@BattleProc

; 1051 : 			// Óé∑??????
; 1052 : 			SubProcNo = BATTLE_SUBPROC_OUT_PRODUCE_INIT;

  003e6	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 7 ; SubProcNo

; 1053 : 			// ??????
; 1054 : 			BattleEscFlag = FALSE;

  003f0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleEscFlag@@3HA, 0 ; BattleEscFlag
$LN113@BattleProc:

; 1055 : 		}
; 1056 : 		// ?Óìñ???????????
; 1057 : 		if( mouse.onceState & MOUSE_RIGHT_CRICK && BattleMyNo >= 20 ){

  003fa	f6 05 2c 00 00
	00 02		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 2
  00401	0f 84 82 07 00
	00		 je	 $LN116@BattleProc
  00407	83 3d 00 00 00
	00 14		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 20 ; BattleMyNo, 00000014H
  0040e	0f 8c 75 07 00
	00		 jl	 $LN116@BattleProc

; 1058 : 			// ?ÓìñÓé∑????????
; 1059 : 			if( bNewServer)

  00414	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_01HJOKEEBB@U@
  00420	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00426	0f 84 55 07 00
	00		 je	 $LN115@BattleProc

; 1060 : 				lssproto_B_send( sockfd, "U" );

  0042c	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  00431	e9 50 07 00 00	 jmp	 $LN179@BattleProc
$LN47@BattleProc:

; 497  : 			// ????Óú±????
; 498  : 			SubProcNo++;
; 499  : 			break;
; 500  : 			
; 501  : 		case BATTLE_SUBPROC_IN_PRODUCE:			// ??????Óèù
; 502  : 			// ËΩ¨ÊôØ ?Óèù?
; 503  : 			if( DrawProduce( PRODUCE_HAGARE_OCHI_IN ) == TRUE ){

  00436	6a 11		 push	 17			; 00000011H
  00438	e8 00 00 00 00	 call	 ?DrawProduce@@YAHH@Z	; DrawProduce
  0043d	83 c4 04	 add	 esp, 4
  00440	83 f8 01	 cmp	 eax, 1
  00443	75 7c		 jne	 SHORT $LN48@BattleProc

; 504  : 				// ???????
; 505  : 				DispBuffer.DispCnt = 0;
; 506  : 				FontCnt = 0;
; 507  : 				// ??????Óöá????????????????Óíï */
; 508  : 				ReadBattleMap( BattleMapNo );

  00445	ff 35 00 00 00
	00		 push	 DWORD PTR ?BattleMapNo@@3HA ; BattleMapNo
  0044b	33 c0		 xor	 eax, eax
  0044d	66 a3 00 c0 01
	00		 mov	 WORD PTR ?DispBuffer@@3UDISP_BUFFER@@A+114688, ax
  00453	a3 00 00 00 00	 mov	 DWORD PTR ?FontCnt@@3HA, eax ; FontCnt
  00458	e8 00 00 00 00	 call	 ?ReadBattleMap@@YAHH@Z	; ReadBattleMap
  0045d	83 c4 04	 add	 esp, 4

; 509  : 				// ???????????????
; 510  : 				ClearBackSurface();	

  00460	e8 00 00 00 00	 call	 ?ClearBackSurface@@YAXXZ ; ClearBackSurface

; 511  : 				// ????????????????
; 512  : #ifdef __SKYISLAND
; 513  : 				fastDrawTileFlag = 0;

  00465	33 c0		 xor	 eax, eax
  00467	66 a3 00 00 00
	00		 mov	 WORD PTR ?fastDrawTileFlag@@3FA, ax ; fastDrawTileFlag

; 514  : 				PutBmp();	

  0046d	e8 00 00 00 00	 call	 ?PutBmp@@YAXXZ		; PutBmp

; 515  : 				fastDrawTileFlag = 1;

  00472	b8 01 00 00 00	 mov	 eax, 1
  00477	66 a3 00 00 00
	00		 mov	 WORD PTR ?fastDrawTileFlag@@3FA, ax ; fastDrawTileFlag

; 516  : #else
; 517  : 				PutBmp();	
; 518  : 				// ??????????????????????
; 519  : 				lpBattleSurface->BltFast( 0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT );
; 520  : #endif
; 521  : 				// ???????
; 522  : 				DispBuffer.DispCnt = 0;

  0047d	33 c0		 xor	 eax, eax
  0047f	66 a3 00 c0 01
	00		 mov	 WORD PTR ?DispBuffer@@3UDISP_BUFFER@@A+114688, ax

; 523  : 				FontCnt = 0;

  00485	a3 00 00 00 00	 mov	 DWORD PTR ?FontCnt@@3HA, eax ; FontCnt

; 524  : 				// ????????
; 525  : 				NowTime = TimeGetTime();

  0048a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0048f	a3 00 00 00 00	 mov	 DWORD PTR ?NowTime@@3KA, eax ; NowTime

; 526  : 				// ????????Óùº?ÓüµÓüπÓüâ?
; 527  : 				BackBufferDrawType = DRAW_BACK_BATTLE; 

  00494	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?BackBufferDrawType@@3HA, 3 ; BackBufferDrawType

; 528  : 				// ?????????Óùº?
; 529  : 				/* ?????? */
; 530  : 				ChatProc();

  0049e	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 531  : 				// ??????????????????????
; 532  : 				ChatBufferToFontBuffer(); 

  004a3	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 533  : 				// ?????????ÓôÅÓ°ú??
; 534  : 				FlashKeyboardCursor();

  004a8	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 535  : 				// ??????
; 536  : 				MenuProc();

  004ad	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 537  : 				// ???????
; 538  : 				ImeProc();

  004b2	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 539  : 				// ???????????
; 540  : 				fieldProc2();

  004b7	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 541  : 				SubProcNo++;
; 542  : 			}else{

  004bc	e9 09 ff ff ff	 jmp	 $LN178@BattleProc
$LN48@BattleProc:

; 543  : 				MenuProc();	// ??????

  004c1	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 544  : 				ImeProc();	// ???????

  004c6	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 545  : 				// ???????????
; 546  : 				fieldProc2();

  004cb	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 547  : 			}
; 548  : 			break;

  004d0	e9 fb fe ff ff	 jmp	 $LN170@BattleProc
$LN50@BattleProc:

; 549  : 			
; 550  : 		case BATTLE_SUBPROC_RECEIVE_BC:			//ÊØèÂõûÂêàËµ∑Âßã‰∫∫Áâ©Áä∂ÊÄÅÊòæÁ§∫
; 551  : #ifdef _STONDEBUG_
; 552  : 			if(offlineFlag == TRUE){
; 553  : 				strcpy(BattleStatus,"BC|3|"
; 554  : 				"0|ishikawa|title|18768|1|20|20|0|"
; 555  : 				"1|ishikawa|title|18768|1|20|20|0|"
; 556  : 				"2|ishikawa|title|18768|1|20|20|0|"
; 557  : 				"3|ishikawa|title|18768|1|20|20|0|"
; 558  : 				"4|ishikawa|title|18768|1|20|20|0|"
; 559  : 				"5|beron|title|18813|1|20|20|0|"
; 560  : 				"6|beron|title|18813|1|20|20|0|"
; 561  : 				"7|beron|title|18813|1|20|20|0|"
; 562  : 				"8|beron|title|18813|1|20|20|0|"
; 563  : 				"9|beron|title|18813|1|20|20|0|"
; 564  : 				"A|ishikawa|title|18813|1|20|20|0|"
; 565  : 				"B|ishikawa|title|18813|1|20|20|0|"
; 566  : 				"C|ishikawa|title|18813|1|20|20|0|"
; 567  : 				"D|ishikawa|title|18813|1|20|20|0|"
; 568  : 				"E|ishikawa|title|18813|1|20|20|0|"
; 569  : 				"F|beron|title|187BA|1|20|20|0|"
; 570  : 				"10|beron|title|187BA|1|20|20|0|"
; 571  : 				"11|beron|title|187BA|1|20|20|0|"
; 572  : 				"12|beron|title|187BA|1|20|20|0|"
; 573  : 				"13|beron|title|187BA|1|20|20|0|"
; 574  : 				);
; 575  : 	strcpy( BattleStatus, BattleBcDeb[ BattleDebTurnNo ] );
; 576  : 				// ??ÓìÜÓòã
; 577  : 				set_bc();
; 578  : 				SubProcNo++;
; 579  : 				break;
; 580  : 			}
; 581  : #endif
; 582  : 			/* ?????? */
; 583  : 			ChatProc();

  004d5	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 584  : /*
; 585  : #ifndef __AI
; 586  : 			//cary Ê∏ÖÈô§ÊöÇÂÅúËá™Âä®ÊîªÂáª
; 587  : 			if( PauseAI == 2)
; 588  : 				PauseAI = 0;
; 589  : 			if( PauseAI == 1)
; 590  : 				PauseAI = 2;
; 591  : 			extern int battleButtonBak;
; 592  : 			if( AI == AI_SELECT)
; 593  : 				battleButtonBak = -1;
; 594  : #endif
; 595  : */
; 596  : 			ChatBufferToFontBuffer();

  004da	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 597  : 			FlashKeyboardCursor();

  004df	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 598  : 			MenuProc();

  004e4	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 599  : 			ImeProc();

  004e9	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 600  : 			fieldProc2();

  004ee	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 601  : 			TimeZoneProc();

  004f3	e8 00 00 00 00	 call	 ?TimeZoneProc@@YAXXZ	; TimeZoneProc

; 602  : 			if( BattleBpFlag & BATTLE_BP_JOIN ){

  004f8	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?BattleBpFlag@@3HA, 1
  004ff	74 26		 je	 SHORT $LN51@BattleProc

; 603  : 				strcpy( OneLineInfoStr,"Á≠âÂæÖÂõûÂêàÁªìÊùü„ÄÇ");

  00501	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@+8
  00506	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@
  0050e	a3 08 00 00 00	 mov	 DWORD PTR ?OneLineInfoStr@@3PADA+8, eax
  00513	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0O@OPCMFPAN@?T?u?S?b?$PM?$NO?y?j?$DP?a?V?$KB?$KD@+12
  00519	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  00521	66 a3 0c 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+12, ax
$LN51@BattleProc:

; 604  : 			}
; 605  : 			if( EncountFlag == FALSE ){

  00527	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?EncountFlag@@3HA, 0 ; EncountFlag
  0052e	75 21		 jne	 SHORT $LN52@BattleProc

; 606  : 				if( !( s_timer & 7 ) ){

  00530	f6 05 00 00 00
	00 07		 test	 BYTE PTR ?s_timer@@3GA, 7
  00537	75 0e		 jne	 SHORT $LN53@BattleProc

; 607  : 					piyo_point++;

  00539	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  0053e	40		 inc	 eax

; 608  : 					piyo_point &= 63;

  0053f	83 e0 3f	 and	 eax, 63			; 0000003fH
  00542	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN53@BattleProc:

; 609  : 				}
; 610  : 				RunAction();

  00547	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 611  : 				StockTaskDispBuffer();

  0054c	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
$LN52@BattleProc:

; 612  : 			}
; 613  : 			if( BattleStatusReadPointer != BattleStatusWritePointer ){

  00551	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleStatusReadPointer@@3HA ; BattleStatusReadPointer
  00557	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?BattleStatusWritePointer@@3HA ; BattleStatusWritePointer
  0055d	0f 84 06 01 00
	00		 je	 $LN54@BattleProc

; 614  : 				strcpy( BattleStatus, BattleStatusBak[ BattleStatusReadPointer ] );

  00563	8b c6		 mov	 eax, esi
  00565	ba 00 00 00 00	 mov	 edx, OFFSET ?BattleStatus@@3PADA ; BattleStatus
  0056a	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  0056d	8d 88 00 00 00
	00		 lea	 ecx, DWORD PTR ?BattleStatusBak@@3PAY0BAAA@DA[eax]
  00573	2b d1		 sub	 edx, ecx
$LL120@BattleProc:
  00575	8a 01		 mov	 al, BYTE PTR [ecx]
  00577	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0057a	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  0057e	84 c0		 test	 al, al
  00580	75 f3		 jne	 SHORT $LL120@BattleProc

; 615  : 				BattleStatusReadPointer = ( BattleStatusReadPointer + 1 ) & ( BATTLE_BUF_SIZE-1 );

  00582	8d 46 01	 lea	 eax, DWORD PTR [esi+1]

; 616  : 				EncountFlag = FALSE;

  00585	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?EncountFlag@@3HA, 0 ; EncountFlag
  0058f	83 e0 03	 and	 eax, 3
  00592	a3 00 00 00 00	 mov	 DWORD PTR ?BattleStatusReadPointer@@3HA, eax ; BattleStatusReadPointer

; 617  : 				set_bc();

  00597	e8 00 00 00 00	 call	 ?set_bc@@YAXXZ		; set_bc

; 618  : #ifdef ÊàòÊñóÂÖâÁéØ
; 619  : 				set_party_ÂÖâÁéØ();

  0059c	e8 00 00 00 00	 call	 ?set_party_Œ√?@@YAXXZ	; set_party_Œ√?

; 620  : #endif 
; 621  : 				// Robin 0729 ride Pet
; 622  : 				if( BattleMyNo < 20 )	{

  005a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  005a6	83 f8 14	 cmp	 eax, 20			; 00000014H
  005a9	0f 8d 88 00 00
	00		 jge	 $LN64@BattleProc

; 623  : 					if( p_party[ BattleMyNo ]->petFall == 2 )	{

  005af	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  005b6	83 b8 bc 01 00
	00 02		 cmp	 DWORD PTR [eax+444], 2
  005bd	75 2c		 jne	 SHORT $LN56@BattleProc

; 624  : 						lssproto_TK_recv( sockfd, 0, "P|‰Ω†‰∏≠‰∫ÜËêΩÈ©¨ÊúØÔºåÂ∫ßÈ™ëÂ∑≤ÈÄÄÂá∫ÊàòÊñó„ÄÇ", FONT_PAL_YELLOW);

  005bf	6a 04		 push	 4
  005c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PPACHBFM@P?$HM?$DP?q?i?V?u?U?$KK?$DP?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
  005c6	6a 00		 push	 0
  005c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  005ce	e8 00 00 00 00	 call	 ?lssproto_TK_recv@@YAXHHPADH@Z ; lssproto_TK_recv

; 625  : 						p_party[ BattleMyNo ]->petFall = 0;

  005d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  005d8	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  005df	c7 80 bc 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+444], 0
  005e9	eb 49		 jmp	 SHORT $LN174@BattleProc
$LN56@BattleProc:

; 626  : 					}else if( p_party[ BattleMyNo ]->onRide == -1 )	{

  005eb	8b 80 94 01 00
	00		 mov	 eax, DWORD PTR [eax+404]
  005f1	83 f8 ff	 cmp	 eax, -1
  005f4	75 09		 jne	 SHORT $LN58@BattleProc

; 627  : 						lssproto_TK_recv( sockfd, 0, "P|‰Ω†ÁöÑÂ∫ßÈ™ëÂèó‰º§ËøáÈáçÔºåÂ∑≤ÈÄÄÂá∫ÊàòÊñó„ÄÇ", FONT_PAL_YELLOW);

  005f6	6a 04		 push	 4
  005f8	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IEBCIPIN@P?$HM?$DP?n?$NM?q?$KI?$DP?a?t?$DP?$DP?q?l?$KD?$KM?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@

; 628  : 					}

  005fd	eb 28		 jmp	 SHORT $LN175@BattleProc
$LN58@BattleProc:

; 629  : #ifdef _PETSKILL_BECOMEFOX
; 630  : 					else if( p_party[ BattleMyNo ]->onRide == -2 )	{

  005ff	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  00602	75 09		 jne	 SHORT $LN60@BattleProc

; 631  : 						lssproto_TK_recv( sockfd, 0, "P|‰Ω†‰∏≠‰∫ÜÂ™öÊÉëÊúØÔºåÂ∫ßÈ™ëÂ∑≤ÈÄÄÂá∫ÊàòÊñó„ÄÇ", FONT_PAL_YELLOW);				

  00604	6a 04		 push	 4
  00606	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@GENIEILO@P?$HM?$DP?q?i?V?u?Z?$KM?$PL?c?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@

; 632  : 					}

  0060b	eb 1a		 jmp	 SHORT $LN175@BattleProc
$LN60@BattleProc:

; 633  : #endif
; 634  : #ifdef _PETSKILL_BECOMEPIG
; 635  :                     else if( p_party[ BattleMyNo ]->onRide == -3 )	{

  0060d	83 f8 fd	 cmp	 eax, -3			; fffffffdH
  00610	75 09		 jne	 SHORT $LN62@BattleProc

; 636  : 						lssproto_TK_recv( sockfd, 0, "P|‰Ω†Â§Ñ‰∫é‰πåÂäõÂåñÔºåÂ∫ßÈ™ëÂ∑≤ÈÄÄÂá∫ÊàòÊñó„ÄÇ", FONT_PAL_YELLOW);				

  00612	6a 04		 push	 4
  00614	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@CDGGAGHC@P?$HM?$DP?$DP?i?M?$DP?U?t?$PL?y?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@

; 637  : 					}

  00619	eb 0c		 jmp	 SHORT $LN175@BattleProc
$LN62@BattleProc:

; 638  : #endif
; 639  : #ifdef _PETSKILL_EXPLODE
; 640  : 					else if( p_party[ BattleMyNo ]->onRide == -4 )	{

  0061b	83 f8 fc	 cmp	 eax, -4			; fffffffcH
  0061e	75 17		 jne	 SHORT $LN64@BattleProc

; 641  : 						lssproto_TK_recv( sockfd, 0, "P|‰Ω†‰∏≠‰∫ÜÁàÜË£ÇÊîªÂáªÔºåÂ∫ßÈ™ëÂ∑≤ÈÄÄÂá∫ÊàòÊñó„ÄÇ", FONT_PAL_YELLOW);				

  00620	6a 04		 push	 4
  00622	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@NLMMOJJP@P?$HM?$DP?q?i?V?u?x?o?V?$KO?M?t?$DP?$KD?$KM?q?$KI?$DP?l?$KL?w?$NM?u?s?$DP?T?$OA?$KB?$KD@
$LN175@BattleProc:

; 642  : 					}
; 643  : #endif 
; 644  : 				}
; 645  : 
; 646  : 
; 647  : 				// ÓìñÓô¨??Óë°????????
; 648  : 				CheckBattleNewPet();

  00627	6a 00		 push	 0
  00629	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0062f	e8 00 00 00 00	 call	 ?lssproto_TK_recv@@YAXHHPADH@Z ; lssproto_TK_recv
$LN174@BattleProc:
  00634	83 c4 10	 add	 esp, 16			; 00000010H
$LN64@BattleProc:
  00637	e8 00 00 00 00	 call	 ?CheckBattleNewPet@@YAXXZ ; CheckBattleNewPet

; 649  : 				// ?Óìñ???????
; 650  : 				if( BattleMyNo < 20 ){

  0063c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00642	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00645	7d 12		 jge	 SHORT $LN65@BattleProc

; 651  : 					// ???ÓìÜÓòã
; 652  : 					p_party[ BattleMyNo ]->mp = BattleMyMp;

  00647	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  0064e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyMp@@3HA ; BattleMyMp
  00653	89 81 84 00 00
	00		 mov	 DWORD PTR [ecx+132], eax
$LN65@BattleProc:

; 653  : 				}
; 654  : 				// ?Óë∑??Óö±Óë∑??????
; 655  : 				Battle1P2PFlag = CheckBattle1P2P();

  00659	e8 00 00 00 00	 call	 ?CheckBattle1P2P@@YAHXZ	; CheckBattle1P2P

; 656  : 				SubProcNo++;

  0065e	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00664	a3 00 00 00 00	 mov	 DWORD PTR ?Battle1P2PFlag@@3HA, eax ; Battle1P2PFlag
$LN54@BattleProc:

; 657  : 
; 658  : 			}
; 659  : 			// ?Óìñ?????????Óù∏Óçï
; 660  : 			if( BattleMyNo >= 20 ){

  00669	83 3d 00 00 00
	00 14		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 20 ; BattleMyNo, 00000014H
  00670	0f 8c 5a fd ff
	ff		 jl	 $LN170@BattleProc

; 661  : 				// ?????Ó°ä????
; 662  : 				if( pActAudienceExitWnd == NULL ){

  00676	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActAudienceExitWnd@@3PAUaction@@A, 0 ; pActAudienceExitWnd
  0067d	0f 85 4d fd ff
	ff		 jne	 $LN170@BattleProc

; 663  : 					// ?????Óù∏Óçï????Óíï
; 664  : 					pActAudienceExitWnd = MakeWindowDisp( 444, 4, 3, 2, NULL, 1 );

  00683	6a 01		 push	 1
  00685	6a 00		 push	 0
  00687	6a 02		 push	 2
  00689	6a 03		 push	 3
  0068b	6a 04		 push	 4
  0068d	68 bc 01 00 00	 push	 444			; 000001bcH
  00692	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 665  : 					// ????????
; 666  : 					play_se( 202, 320, 240 );

  00697	68 f0 00 00 00	 push	 240			; 000000f0H
  0069c	68 40 01 00 00	 push	 320			; 00000140H
  006a1	68 ca 00 00 00	 push	 202			; 000000caH
  006a6	a3 00 00 00 00	 mov	 DWORD PTR ?pActAudienceExitWnd@@3PAUaction@@A, eax ; pActAudienceExitWnd
  006ab	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  006b0	83 c4 24	 add	 esp, 36			; 00000024H

; 667  : 				}
; 668  : 			}
; 669  : 			break;

  006b3	e9 18 fd ff ff	 jmp	 $LN170@BattleProc
$LN68@BattleProc:

; 670  : 			
; 671  : 		case BATTLE_SUBPROC_CHAR_IN:			// ÓôëÓê∂?Óèù
; 672  : 			// ??????????l
; 673  : 			if( !( s_timer & 7 ) ){

  006b8	f6 c3 07	 test	 bl, 7
  006bb	75 0e		 jne	 SHORT $LN69@BattleProc

; 674  : 				piyo_point++;

  006bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  006c2	40		 inc	 eax

; 675  : 				piyo_point &= 63;

  006c3	83 e0 3f	 and	 eax, 63			; 0000003fH
  006c6	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN69@BattleProc:

; 676  : 			}
; 677  : 			// Óûè?Óïã?Óù∏Óçï??
; 678  : 			SurprisalDisp();

  006cb	e8 00 00 00 00	 call	 ?SurprisalDisp@@YAXXZ	; SurprisalDisp

; 679  : 			// ????Óöº???????????
; 680  : 			CheckBattleAnimFlag();

  006d0	e8 00 00 00 00	 call	 ?CheckBattleAnimFlag@@YAXXZ ; CheckBattleAnimFlag

; 681  : 			/* ????????? */
; 682  : 			RunAction();

  006d5	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 683  : 			// ???Óù∏Óçï????????????
; 684  : 			StockTaskDispBuffer();

  006da	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 685  : 			/* ?????? */
; 686  : 			ChatProc();

  006df	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 687  : 			// ??????????????????????
; 688  : 			ChatBufferToFontBuffer(); 

  006e4	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 689  : 			// ?????????ÓôÅÓ°ú??
; 690  : 			FlashKeyboardCursor();

  006e9	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 691  : 			// ??????
; 692  : 			MenuProc();

  006ee	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 693  : 			// ???????
; 694  : 			ImeProc();

  006f3	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 695  : 			// ???????????
; 696  : 			fieldProc2();

  006f8	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 697  : 			// ??Óïó?????????????
; 698  : 			TimeZoneProc();

  006fd	e8 00 00 00 00	 call	 ?TimeZoneProc@@YAXXZ	; TimeZoneProc

; 699  : 			// Ó°ìÓì∑?Óù∏Óçï
; 700  : 			BattleNameDisp();

  00702	e8 00 00 00 00	 call	 ?BattleNameDisp@@YAXXZ	; BattleNameDisp

; 701  : 			// ÓôëÓê∂Óé∑???
; 702  : 			if( action_inf == 3 ){

  00707	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?action_inf@@3HA, 3 ; action_inf
  0070e	75 63		 jne	 SHORT $LN74@BattleProc

; 703  : 				action_inf = 0; 
; 704  : 				// ÓìñÓô¨Óå¢Óìñ??????
; 705  : 				BattleBpFlag &= ~BATTLE_BP_JOIN; 

  00710	83 25 00 00 00
	00 fe		 and	 DWORD PTR ?BattleBpFlag@@3HA, -2 ; BattleBpFlag, fffffffeH
  00717	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?action_inf@@3HA, 0 ; action_inf

; 706  : 				// ÓìªÓ°ú??????
; 707  : 				if( check_all_dead() == 1 ){

  00721	e8 00 00 00 00	 call	 ?check_all_dead@@YAHXZ	; check_all_dead
  00726	83 f8 01	 cmp	 eax, 1
  00729	75 0f		 jne	 SHORT $LN71@BattleProc

; 708  : 					SubProcNo = BATTLE_SUBPROC_OUT_PRODUCE_INIT;

  0072b	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 7 ; SubProcNo

; 709  : 					break;

  00735	e9 96 fc ff ff	 jmp	 $LN170@BattleProc
$LN71@BattleProc:

; 710  : 				}
; 711  : 				// Óûè?Óïã??????Óèù????
; 712  : 				if( pActSurprisalWnd != NULL ){

  0073a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A ; pActSurprisalWnd
  0073f	85 c0		 test	 eax, eax
  00741	74 1a		 je	 SHORT $LN72@BattleProc

; 713  : 					// ??????Óåñ
; 714  : 					DeathAction( pActSurprisalWnd );

  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00749	83 c4 04	 add	 esp, 4

; 715  : 					pActSurprisalWnd = NULL;

  0074c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSurprisalWnd@@3PAUaction@@A, 0 ; pActSurprisalWnd

; 716  : 					// Óûè?Óïã???????
; 717  : 					BattleBpFlag &= ~BATTLE_BP_ENEMY_SURPRISAL; 
; 718  : 					BattleBpFlag &= ~BATTLE_BP_PLAYER_SURPRISAL; 

  00756	83 25 00 00 00
	00 cf		 and	 DWORD PTR ?BattleBpFlag@@3HA, -49 ; BattleBpFlag, ffffffcfH
$LN72@BattleProc:

; 719  : 					
; 720  : 				}
; 721  : 
; 722  : 				//JL 2016.8.25 Ëá™Âä®ÊàòÊñó
; 723  : 				void JL_Ëá™Âä®ÊàòÊñó();
; 724  : 				extern int g_WgRecvHwnd;
; 725  : 				
; 726  : 				if (g_WgRecvHwnd)	//Â¶ÇÊûúÊúâÁ™óÂè£ÊåÇÊé•‰∫ÜÔºåÊØèÊ¨°ÊàòÊñóÂà∞ËøôÈáå‰∫§ÁªôÂ§ñÊåÇÂà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅËá™Âä®ÊàòÊñóÔºåÊ≠§Êó∂ SubProcNo = 3

  0075d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_WgRecvHwnd@@3HA, 0 ; g_WgRecvHwnd
  00764	74 07		 je	 SHORT $LN73@BattleProc

; 727  : 				{
; 728  : 					JL_Ëá™Âä®ÊàòÊñó();

  00766	e8 00 00 00 00	 call	 ?JL_Ìª??‘‡@@YAXXZ	; JL_Ìª??‘‡

; 729  : 				}

  0076b	eb 06		 jmp	 SHORT $LN74@BattleProc
$LN73@BattleProc:

; 730  : 				else
; 731  : 				{
; 732  : 					SubProcNo++;

  0076d	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN74@BattleProc:

; 733  : 				}
; 734  : 
; 735  : 			}
; 736  : 			//ÓìñÓô¨ÓñäÓèù??
; 737  : 			if( action_inf == 2 ){		

  00773	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?action_inf@@3HA, 2 ; action_inf
$LN177@BattleProc:

; 1012 : 							break;
; 1013 : 						}
; 1014 : 					}
; 1015 : 				}
; 1016 : #endif
; 1017 : 				return;
; 1018 : 			}
; 1019 : 			break;
; 1020 : 			
; 1021 : 		case 12:	// ?Óèù
; 1022 : 			break;
; 1023 : 	}
; 1024 : 
; 1025 : #ifndef _CHANNEL_MODIFY
; 1026 : 	// Robin 0805 channel
; 1027 : 	if( bNewServer && joy_trg[1] & JOY_CTRL_C )
; 1028 : 	{
; 1029 : 		char buf[64];
; 1030 : 		if( pc.channel == -1 ) {
; 1031 : 			if( (pc.quickChannel != -1) && (pc.familyName[0] != NULL) ) {
; 1032 : 				sprintf( buf, "C|J|%d", pc.quickChannel);
; 1033 : 				if( bNewServer)
; 1034 : 					lssproto_FM_send( sockfd, buf );
; 1035 : 				else
; 1036 : 					old_lssproto_FM_send( sockfd, buf );
; 1037 : 			}
; 1038 : 		}
; 1039 : 		else{
; 1040 : 			if( bNewServer)
; 1041 : 				lssproto_FM_send( sockfd, "C|J|-1" );
; 1042 : 			else
; 1043 : 				old_lssproto_FM_send( sockfd, "C|J|-1" );
; 1044 : 		}
; 1045 : 	}
; 1046 : #endif
; 1047 : 	// ????????????
; 1048 : 	if( BackBufferDrawType != DRAW_BACK_PRODUCE ){ 

  0077a	0f 85 50 fc ff
	ff		 jne	 $LN170@BattleProc
  00780	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 7 ; SubProcNo
  0078a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?action_inf@@3HA, 0 ; action_inf
  00794	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?BattleCmd@@3PADA, 0
  0079b	e9 30 fc ff ff	 jmp	 $LN170@BattleProc
$LN76@BattleProc:

; 738  : 				SubProcNo = BATTLE_SUBPROC_OUT_PRODUCE_INIT;		//ÓìñÓô¨Óé∑??Óèù?
; 739  : 				action_inf = 0;
; 740  : 				// ??????????
; 741  : 				BattleCmd[ 0 ] = NULL;
; 742  : 			}
; 743  : 			break;
; 744  : 			
; 745  : 		case BATTLE_SUBPROC_CMD_INPUT:			// 4
; 746  : #ifdef _STONDEBUG_
; 747  : 			if(offlineFlag == TRUE){
; 748  : 				SubProcNo++;
; 749  : 				break;
; 750  : 			}
; 751  : #endif
; 752  : 			// ??????????
; 753  : 			if( !( s_timer & 7 ) ){

  007a0	a8 07		 test	 al, 7
  007a2	75 0e		 jne	 SHORT $LN77@BattleProc

; 754  : 				piyo_point++;

  007a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  007a9	40		 inc	 eax

; 755  : 				piyo_point &= 63;

  007aa	83 e0 3f	 and	 eax, 63			; 0000003fH
  007ad	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN77@BattleProc:

; 756  : 			}
; 757  : #ifndef __AI
; 758  : 			if( mouse.onceState == MOUSE_RIGHT_CRICK)
; 759  : 				PauseAI = 2;
; 760  : 			// ?????????  
; 761  : 			BattleMenuProc();
; 762  : #else
; 763  : 			extern void AI_ChooseAction();
; 764  : 			if( AI == AI_SELECT){

  007b2	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?AI@@3HA, 3	; AI
  007b9	75 0c		 jne	 SHORT $LN78@BattleProc

; 765  : 				void CloseInfoWnd();
; 766  : 				CloseInfoWnd();

  007bb	e8 00 00 00 00	 call	 ?CloseInfoWnd@@YAXXZ	; CloseInfoWnd

; 767  : 				AI_ChooseAction();

  007c0	e8 00 00 00 00	 call	 ?AI_ChooseAction@@YAXXZ	; AI_ChooseAction

; 768  : 			}else

  007c5	eb 05		 jmp	 SHORT $LN79@BattleProc
$LN78@BattleProc:

; 769  : 				BattleMenuProc();

  007c7	e8 00 00 00 00	 call	 ?BattleMenuProc@@YAXXZ	; BattleMenuProc
$LN79@BattleProc:

; 770  : #endif
; 771  : 			CheckBattleAnimFlag();

  007cc	e8 00 00 00 00	 call	 ?CheckBattleAnimFlag@@YAXXZ ; CheckBattleAnimFlag

; 772  : 			RunAction();

  007d1	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 773  : 			StockTaskDispBuffer();

  007d6	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 774  : 			ChatProc();

  007db	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 775  : 			ChatBufferToFontBuffer();

  007e0	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 776  : 			FlashKeyboardCursor();

  007e5	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 777  : 			MenuProc();

  007ea	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 778  : 			ImeProc();

  007ef	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 779  : 			fieldProc2();

  007f4	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 780  : 			TimeZoneProc();

  007f9	e8 00 00 00 00	 call	 ?TimeZoneProc@@YAXXZ	; TimeZoneProc

; 781  : 			BattleNameDisp();

  007fe	e8 00 00 00 00	 call	 ?BattleNameDisp@@YAXXZ	; BattleNameDisp

; 782  : 			break;

  00803	e9 c8 fb ff ff	 jmp	 $LN170@BattleProc
$LN80@BattleProc:

; 783  : 			
; 784  : 		case BATTLE_SUBPROC_RECEIVE_MOVIE:		// ????Óé¢ÓëòÓïò?
; 785  : #ifdef _STONDEBUG_
; 786  : 			if(offlineFlag == TRUE){
; 787  : 				strcpy( BattleCmd,"BY teki_A jibun_0 flg_0 damage_0 jibun_1 flg_0 damage_0 jibun_2 flg_0 damage_0"
; 788  : 				" jibun_3 flg_0 damage_0 jibun_4 flg_0 damage_0 jibun_5 flg_0 damage_0"
; 789  : 				" jibun_6 flg_0 damage_0 jibun_7 flg_0 damage_0 jibun_8 flg_0 damage_0"
; 790  : 				" jibun_9 flg_0 damage_1 FF");
; 791  : 				strcpy( BattleCmd, BattleCmdDeb[ BattleDebTurnNo ] );
; 792  : 				BattleMyNo = 0;
; 793  : 				//????????
; 794  : 				att_select_flg = FALSE;
; 795  : 				SubProcNo++;
; 796  : 				break;
; 797  : 			}
; 798  : #endif
; 799  : #ifndef __AI
; 800  : 			if( mouse.onceState == MOUSE_RIGHT_CRICK)
; 801  : 				PauseAI = 1;
; 802  : #else
; 803  : 			extern char *AI_Choosen;
; 804  : #endif
; 805  : 			// ??????????
; 806  : 			if( !( s_timer & 7 ) ){

  00808	a8 07		 test	 al, 7
  0080a	75 0e		 jne	 SHORT $LN81@BattleProc

; 807  : 				piyo_point++;

  0080c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  00811	40		 inc	 eax

; 808  : 				piyo_point &= 63;

  00812	83 e0 3f	 and	 eax, 63			; 0000003fH
  00815	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN81@BattleProc:

; 809  : 			}
; 810  : 			// ????Óöº???????????
; 811  : 			CheckBattleAnimFlag();

  0081a	e8 00 00 00 00	 call	 ?CheckBattleAnimFlag@@YAXXZ ; CheckBattleAnimFlag

; 812  : 			/* ????????? */
; 813  : 			RunAction();

  0081f	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 814  : 			// ???Óù∏Óçï????????????
; 815  : 			StockTaskDispBuffer();

  00824	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 816  : 			/* ?????? */
; 817  : 			ChatProc();

  00829	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 818  : 			// ??????????????????????
; 819  : 			ChatBufferToFontBuffer(); 

  0082e	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 820  : 			// ?????????ÓôÅÓ°ú??
; 821  : 			FlashKeyboardCursor();

  00833	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 822  : 			// ??????
; 823  : 			MenuProc();

  00838	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 824  : 			// ???????
; 825  : 			ImeProc();

  0083d	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 826  : 			// ???????????
; 827  : 			fieldProc2();

  00842	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 828  : 			// ??Óïó?????????????
; 829  : 			TimeZoneProc();

  00847	e8 00 00 00 00	 call	 ?TimeZoneProc@@YAXXZ	; TimeZoneProc

; 830  : 			// Ó°ìÓì∑?Óù∏Óçï
; 831  : 			BattleNameDisp();

  0084c	e8 00 00 00 00	 call	 ?BattleNameDisp@@YAXXZ	; BattleNameDisp

; 832  : 			// ???????Óïò?
; 833  : 			if( BattleCmdReadPointer != BattleCmdWritePointer ){

  00851	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleCmdReadPointer@@3HA ; BattleCmdReadPointer
  00857	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?BattleCmdWritePointer@@3HA ; BattleCmdWritePointer
  0085d	74 41		 je	 SHORT $LN82@BattleProc

; 834  : 				strcpy( BattleCmd, BattleCmdBak[ BattleCmdReadPointer ] );

  0085f	8b c6		 mov	 eax, esi
  00861	ba 00 00 00 00	 mov	 edx, OFFSET ?BattleCmd@@3PADA ; BattleCmd
  00866	c1 e0 0c	 shl	 eax, 12			; 0000000cH
  00869	8d 88 00 00 00
	00		 lea	 ecx, DWORD PTR ?BattleCmdBak@@3PAY0BAAA@DA[eax]
  0086f	2b d1		 sub	 edx, ecx
$LL123@BattleProc:
  00871	8a 01		 mov	 al, BYTE PTR [ecx]
  00873	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00876	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  0087a	84 c0		 test	 al, al
  0087c	75 f3		 jne	 SHORT $LL123@BattleProc

; 835  : 				BattleCmdReadPointer = ( BattleCmdReadPointer + 1 ) & ( BATTLE_BUF_SIZE-1 );

  0087e	8d 46 01	 lea	 eax, DWORD PTR [esi+1]

; 836  : 				action_inf = 0;

  00881	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?action_inf@@3HA, 0 ; action_inf
  0088b	83 e0 03	 and	 eax, 3

; 837  : 				//?????????
; 838  : 				att_select_flg = FALSE;

  0088e	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?att_select_flg@@3DA, 0 ; att_select_flg

; 839  : 				SubProcNo++;

  00895	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  0089b	a3 00 00 00 00	 mov	 DWORD PTR ?BattleCmdReadPointer@@3HA, eax ; BattleCmdReadPointer
$LN82@BattleProc:

; 840  : 				
; 841  : 			}
; 842  : 			// Óö±Óë∑???
; 843  : 			if( Battle1P2PFlag == 2 ){

  008a0	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?Battle1P2PFlag@@3HA, 2 ; Battle1P2PFlag
  008a7	75 30		 jne	 SHORT $LN83@BattleProc

; 844  : 				// ??????
; 845  : 				strcpy( OneLineInfoStr,"Á≠âÂæÖÂÖ∂‰ªñÁé©ÂÆ∂„ÄÇ");

  008a9	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@+8
  008ae	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@
  008b6	a3 08 00 00 00	 mov	 DWORD PTR ?OneLineInfoStr@@3PADA+8, eax
  008bb	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@+12
  008c1	66 a3 0c 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+12, ax
  008c7	a0 0e 00 00 00	 mov	 al, BYTE PTR ??_C@_0P@LNHEBBD@?T?u?S?b?P?l?v?b?h?L?J?$KL?$KB?$KD@+14
  008cc	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  008d4	a2 0e 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+14, al
$LN83@BattleProc:

; 846  : 			}
; 847  : 			// ?Óìñ??
; 848  : 			if( BattleMyNo >= 20 ){

  008d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  008de	83 f8 14	 cmp	 eax, 20			; 00000014H
  008e1	7c 16		 jl	 SHORT $LN84@BattleProc

; 849  : 				// Óë∑?Óû§???
; 850  : 				for( i = 0 ; i < 20 ; i++ ){

  008e3	33 f6		 xor	 esi, esi
$LL12@BattleProc:

; 851  : 					// Óïï??????Óù∏Óçï
; 852  : 					HpMeterDisp( i );

  008e5	56		 push	 esi
  008e6	e8 00 00 00 00	 call	 ?HpMeterDisp@@YAXH@Z	; HpMeterDisp
  008eb	46		 inc	 esi
  008ec	83 c4 04	 add	 esp, 4
  008ef	83 fe 14	 cmp	 esi, 20			; 00000014H
  008f2	7c f1		 jl	 SHORT $LL12@BattleProc

; 853  : 				}
; 854  : 			}else{

  008f4	e9 d7 fa ff ff	 jmp	 $LN170@BattleProc
$LN84@BattleProc:

; 855  : 				// ????????
; 856  : 				if( BattleMyNo < 10 ){

  008f9	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  008fc	7d 16		 jge	 SHORT $LN165@BattleProc

; 857  : 					for( i  = 0 ; i < 10 ; i++ ) HpMeterDisp( i ); // Óïï??????Óù∏Óçï

  008fe	33 f6		 xor	 esi, esi
$LL15@BattleProc:
  00900	56		 push	 esi
  00901	e8 00 00 00 00	 call	 ?HpMeterDisp@@YAXH@Z	; HpMeterDisp
  00906	46		 inc	 esi
  00907	83 c4 04	 add	 esp, 4
  0090a	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0090d	7c f1		 jl	 SHORT $LL15@BattleProc

; 858  : 				}else 

  0090f	e9 bc fa ff ff	 jmp	 $LN170@BattleProc
$LN165@BattleProc:

; 859  : 				// ????????
; 860  : 				if( BattleMyNo >= 10 ){ 
; 861  : 					for( i = 10 ; i < 20 ; i++ ) HpMeterDisp( i ); // Óïï??????Óù∏Óçï

  00914	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  00919	0f 1f 80 00 00
	00 00		 npad	 7
$LL18@BattleProc:
  00920	56		 push	 esi
  00921	e8 00 00 00 00	 call	 ?HpMeterDisp@@YAXH@Z	; HpMeterDisp
  00926	46		 inc	 esi
  00927	83 c4 04	 add	 esp, 4
  0092a	83 fe 14	 cmp	 esi, 20			; 00000014H
  0092d	7c f1		 jl	 SHORT $LL18@BattleProc

; 862  : 				}
; 863  : 			}
; 864  : 			break;

  0092f	e9 9c fa ff ff	 jmp	 $LN170@BattleProc
$LN89@BattleProc:

; 865  : 			
; 866  : 		case BATTLE_SUBPROC_MOVIE:				// ??????
; 867  : #ifdef _STONDEBUG_
; 868  : 			if(offlineFlag == TRUE){
; 869  : 				if(joy_trg[0]&JOY_A){		//??????
; 870  : 					DeathAllAction();
; 871  : 					SubProcNo = 0;
; 872  : 					BattleCmd[0] = NULL;
; 873  : 					break;
; 874  : 				}
; 875  : 			}
; 876  : #endif
; 877  : 			//????????Ó†å???
; 878  : #ifndef __AI
; 879  : 			if( mouse.onceState == MOUSE_RIGHT_CRICK)
; 880  : 				PauseAI = 1;
; 881  : #else
; 882  : 			if( AI_Choosen){

  00934	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?AI_Choosen@@3PADA ; AI_Choosen
  0093a	85 d2		 test	 edx, edx
  0093c	74 47		 je	 SHORT $LN90@BattleProc

; 883  : 				
; 884  : 				StockFontBuffer( 640-strlen(AI_Choosen)*7-4 + DISPLACEMENT_X, 440 + DISPLACEMENT_Y, FONT_PRIO_FRONT, FONT_PAL_YELLOW, AI_Choosen, 0 );

  0093e	8b ca		 mov	 ecx, edx
  00940	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL169@BattleProc:
  00943	8a 01		 mov	 al, BYTE PTR [ecx]
  00945	41		 inc	 ecx
  00946	84 c0		 test	 al, al
  00948	75 f9		 jne	 SHORT $LL169@BattleProc
  0094a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0094f	2b ce		 sub	 ecx, esi
  00951	6a 00		 push	 0
  00953	52		 push	 edx
  00954	6a 04		 push	 4
  00956	05 b8 01 00 00	 add	 eax, 440		; 000001b8H
  0095b	6a 01		 push	 1
  0095d	50		 push	 eax
  0095e	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00965	2b c1		 sub	 eax, ecx
  00967	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  0096d	2b c8		 sub	 ecx, eax
  0096f	81 c1 7c 02 00
	00		 add	 ecx, 636		; 0000027cH
  00975	51		 push	 ecx
  00976	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0097b	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?s_timer@@3GA ; s_timer
  00982	83 c4 18	 add	 esp, 24			; 00000018H
$LN90@BattleProc:

; 885  : 			}
; 886  : #endif
; 887  : 			if( slow_flg ){		

  00985	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?slow_flg@@3HA, 0 ; slow_flg
  0098c	74 1f		 je	 SHORT $LN91@BattleProc

; 888  : 				if( !( s_timer & 31 ) ){	// ????????

  0098e	f6 c1 1f	 test	 cl, 31			; 0000001fH
  00991	75 0e		 jne	 SHORT $LN93@BattleProc

; 889  : 					piyo_point++;	// ?????????Óë¥???

  00993	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  00998	40		 inc	 eax

; 890  : 					piyo_point &= 63;	// ????????

  00999	83 e0 3f	 and	 eax, 63			; 0000003fH
  0099c	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN93@BattleProc:

; 891  : 				}
; 892  : 				if( s_timer & 3 ){		// ????????????????????

  009a1	f6 c1 03	 test	 cl, 3
  009a4	74 1a		 je	 SHORT $LN96@BattleProc

; 893  : 					damage_dispx();		// ?????????Óñ±Óù∏Óçï

  009a6	e8 00 00 00 00	 call	 ?damage_dispx@@YAXXZ	; damage_dispx

; 894  : 				}else{

  009ab	eb 1d		 jmp	 SHORT $LN92@BattleProc
$LN91@BattleProc:

; 895  : 					RunAction();		/* ????????? */
; 896  : 					battle_quake();		//ÓìñÓô¨‰ΩãÓë∂
; 897  : 				}
; 898  : 			} else { // ???????
; 899  : 				if( !( s_timer & 7 ) ){	

  009ad	f6 c1 07	 test	 cl, 7
  009b0	75 0e		 jne	 SHORT $LN96@BattleProc

; 900  : 					piyo_point++;

  009b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?piyo_point@@3HA ; piyo_point
  009b7	40		 inc	 eax

; 901  : 					piyo_point &= 63;

  009b8	83 e0 3f	 and	 eax, 63			; 0000003fH
  009bb	a3 00 00 00 00	 mov	 DWORD PTR ?piyo_point@@3HA, eax ; piyo_point
$LN96@BattleProc:

; 902  : 				}
; 903  : 				RunAction();		/* ????????? */
; 904  : 				battle_quake();		//ÓìñÓô¨‰ΩãÓë∂
; 905  : 			}
; 906  : 			//?Ó†å???????
; 907  : 			if( flash_vct_no ) die_flash();	//?Ó†å?????

  009c0	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction
  009c5	e8 00 00 00 00	 call	 ?battle_quake@@YAXXZ	; battle_quake
$LN92@BattleProc:
  009ca	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?flash_vct_no@@3HA, 0 ; flash_vct_no
  009d1	74 05		 je	 SHORT $LN97@BattleProc
  009d3	e8 00 00 00 00	 call	 ?die_flash@@YAXXZ	; die_flash
$LN97@BattleProc:

; 908  : 			// ???Óù∏Óçï????????????
; 909  : 			StockTaskDispBuffer();

  009d8	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 910  : 			/* ?????? */
; 911  : 			ChatProc();

  009dd	e8 00 00 00 00	 call	 ?ChatProc@@YAXXZ	; ChatProc

; 912  : 			// ??????????????????????
; 913  : 			ChatBufferToFontBuffer(); 

  009e2	e8 00 00 00 00	 call	 ?ChatBufferToFontBuffer@@YAXXZ ; ChatBufferToFontBuffer

; 914  : 			// ?????????ÓôÅÓ°ú??
; 915  : 			FlashKeyboardCursor();

  009e7	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 916  : 			// ??????
; 917  : 			MenuProc();

  009ec	e8 00 00 00 00	 call	 ?MenuProc@@YAXXZ	; MenuProc

; 918  : 			// ???????
; 919  : 			ImeProc();

  009f1	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 920  : 			// ???????????
; 921  : 			fieldProc2();

  009f6	e8 00 00 00 00	 call	 ?fieldProc2@@YAXXZ	; fieldProc2

; 922  : 			// ??Óïó?????????????
; 923  : 			TimeZoneProc();

  009fb	e8 00 00 00 00	 call	 ?TimeZoneProc@@YAXXZ	; TimeZoneProc

; 924  : 			// Ó°ìÓì∑?Óù∏Óçï
; 925  : 			//BattleNameDisp();
; 926  : 			//???Óé∑???
; 927  : 			if( action_inf == 1 ){		

  00a00	a1 00 00 00 00	 mov	 eax, DWORD PTR ?action_inf@@3HA ; action_inf
  00a05	83 f8 01	 cmp	 eax, 1
  00a08	75 2b		 jne	 SHORT $LN98@BattleProc

; 928  : 				SubProcNo = BATTLE_SUBPROC_RECEIVE_BC;		//?????
; 929  : 
; 930  : 				BattleCliTurnNo++;							// ?????????Óë¥??

  00a0a	ff 05 00 00 00
	00		 inc	 DWORD PTR ?BattleCliTurnNo@@3HA ; BattleCliTurnNo
  00a10	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 2 ; SubProcNo

; 931  : 
; 932  : #ifdef _STONDEBUG_
; 933  : 				if(offlineFlag == TRUE){
; 934  : 					SubProcNo = BATTLE_SUBPROC_RECEIVE_BC;		//?????????
; 935  : 					BattleDebTurnNo++;
; 936  : 					// ????????
; 937  : 					if( BattleDebTurnNo >= sizeof( BattleCmdDeb )/sizeof(int) ) BattleDebTurnNo = 0;
; 938  : 				}
; 939  : #endif
; 940  : 				action_inf = 0;

  00a1a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?action_inf@@3HA, 0 ; action_inf

; 941  : 				// ??????????
; 942  : 				BattleCmd[ 0 ] = NULL;

  00a24	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?BattleCmd@@3PADA, 0

; 943  : 				// ????????? 
; 944  : 				battleMenuFlag2 = TRUE;

  00a2b	a3 00 00 00 00	 mov	 DWORD PTR ?battleMenuFlag2@@3HA, eax ; battleMenuFlag2
  00a30	e9 9b f9 ff ff	 jmp	 $LN170@BattleProc
$LN98@BattleProc:

; 945  : 			}
; 946  : 			//ÓìñÓô¨ÓñäÓèù??
; 947  : 			if( action_inf == 2 ){		

  00a35	83 f8 02	 cmp	 eax, 2

; 948  : 				SubProcNo = BATTLE_SUBPROC_OUT_PRODUCE_INIT;		//ÓìñÓô¨Óé∑??Óèù?
; 949  : 				action_inf = 0;
; 950  : 				// ??????????
; 951  : 				BattleCmd[ 0 ] = NULL;
; 952  : 			}
; 953  : 			break;

  00a38	e9 3d fd ff ff	 jmp	 $LN177@BattleProc
$LN100@BattleProc:

; 954  : 			
; 955  : 		case BATTLE_SUBPROC_OUT_PRODUCE_INIT:	// Óé∑??Óèù???
; 956  : 			//??????????
; 957  : 			fade_out_bgm();

  00a3d	e8 00 00 00 00	 call	 ?fade_out_bgm@@YAXXZ	; fade_out_bgm

; 958  : 			// ????????????Óíï 
; 959  : 			CopyBackBuffer();

  00a42	e8 00 00 00 00	 call	 ?CopyBackBuffer@@YAXXZ	; CopyBackBuffer

; 960  : 			// ????????Óùº?ÓüµÓüπÓüâ?
; 961  : 			BackBufferDrawType = DRAW_BACK_PRODUCE; 
; 962  : 			SubProcNo++;

  00a47	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00a4d	be 00 00 00 00	 mov	 esi, OFFSET ?BattleWaterAct@@3PAPAUaction@@A
  00a52	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?BackBufferDrawType@@3HA, 2 ; BackBufferDrawType

; 963  : #ifdef _NEWDRAWBATTLEMAP		   // (‰∏çÂèØÂºÄÊîæ) Syu ADD Ëá™Âä®‰∫ßÁîüBattleMap
; 964  : 			extern int RandBattleBg ; 
; 965  : 			RandBattleBg = 0 ;

  00a5c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?RandBattleBg@@3HA, 0 ; RandBattleBg
$LL21@BattleProc:

; 967  : 			{
; 968  : 				if ( BattleWaterAct[ z ] != NULL ) 

  00a66	8b 06		 mov	 eax, DWORD PTR [esi]
  00a68	85 c0		 test	 eax, eax
  00a6a	74 0f		 je	 SHORT $LN19@BattleProc

; 969  : 				{
; 970  : 					DeathAction(BattleWaterAct[ z ]);

  00a6c	50		 push	 eax
  00a6d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00a72	83 c4 04	 add	 esp, 4

; 971  : 					BattleWaterAct[ z ] = NULL;

  00a75	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN19@BattleProc:

; 966  : 			for ( z = 0 ; z < 8 ; z ++ ) 

  00a7b	83 c6 04	 add	 esi, 4
  00a7e	81 fe 20 00 00
	00		 cmp	 esi, OFFSET ?BattleWaterAct@@3PAPAUaction@@A+32
  00a84	7c e0		 jl	 SHORT $LL21@BattleProc

; 972  : 				}
; 973  : 			}
; 974  : #endif
; 975  : 			break;

  00a86	e9 45 f9 ff ff	 jmp	 $LN170@BattleProc
$LN102@BattleProc:

; 976  : 			
; 977  : 		case BATTLE_SUBPROC_OUT_PRODUCE:		// Óé∑??Óèù
; 978  : 			// ?Óèù?
; 979  : 			if( DrawProduce( PRODUCE_4WAY_OUT ) == TRUE ){

  00a8b	6a 0c		 push	 12			; 0000000cH
  00a8d	e8 00 00 00 00	 call	 ?DrawProduce@@YAHH@Z	; DrawProduce
  00a92	83 c4 04	 add	 esp, 4
  00a95	83 f8 01	 cmp	 eax, 1
  00a98	0f 85 32 f9 ff
	ff		 jne	 $LN170@BattleProc

; 980  : 
; 981  : 				ChangeProc( PROC_GAME, 1 );

  00a9e	50		 push	 eax
  00a9f	6a 09		 push	 9
  00aa1	e8 00 00 00 00	 call	 ?ChangeProc@@YAXHH@Z	; ChangeProc
  00aa6	83 c4 08	 add	 esp, 8

; 982  : 
; 983  : 				DeathAllAction();

  00aa9	e8 00 00 00 00	 call	 ?DeathAllAction@@YAXXZ	; DeathAllAction

; 984  : 
; 985  : 				BattlingFlag = FALSE;

  00aae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattlingFlag@@3HA, 0 ; BattlingFlag

; 986  : 
; 987  : 				clearPtActCharObj();

  00ab8	e8 00 00 00 00	 call	 ?clearPtActCharObj@@YAXXZ ; clearPtActCharObj

; 988  : 
; 989  : 				encountNowFlag = 0;

  00abd	33 c0		 xor	 eax, eax

; 990  : 	
; 991  : 				//JL fix eoÊîπÂà∞2Âè∑ÂåÖÈáåÂèë
; 992  : 				if( bNewServer)

  00abf	50		 push	 eax
  00ac0	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00ac6	66 a3 00 00 00
	00		 mov	 WORD PTR ?encountNowFlag@@3FA, ax ; encountNowFlag
  00acc	39 05 00 00 00
	00		 cmp	 DWORD PTR ?bNewServer@@3HA, eax ; bNewServer
  00ad2	74 07		 je	 SHORT $LN104@BattleProc

; 993  : 					lssproto_EO_send( sockfd, 0 );

  00ad4	e8 00 00 00 00	 call	 ?lssproto_EO_send@@YAXHH@Z ; lssproto_EO_send
  00ad9	eb 05		 jmp	 SHORT $LN176@BattleProc
$LN104@BattleProc:

; 994  : 				else
; 995  : 					old_lssproto_EO_send( sockfd, 0 );

  00adb	e8 00 00 00 00	 call	 ?old_lssproto_EO_send@@YAXHH@Z ; old_lssproto_EO_send
$LN176@BattleProc:

; 996  : 
; 997  : 				if( battleResultMsg.useFlag >= 1 ){ 

  00ae0	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?battleResultMsg@@3UBATTLE_RESULT_MSG@@A
  00ae6	83 c4 08	 add	 esp, 8
  00ae9	66 83 f8 01	 cmp	 ax, 1
  00aed	7c 0e		 jl	 SHORT $LN106@BattleProc

; 998  : 					BattleResultWndFlag = battleResultMsg.useFlag;	// ?????????

  00aef	98		 cwde
  00af0	a3 00 00 00 00	 mov	 DWORD PTR ?BattleResultWndFlag@@3HA, eax ; BattleResultWndFlag

; 999  : 					battleResultMsg.useFlag = FALSE; // ?Óî®Óïí???????

  00af5	33 c0		 xor	 eax, eax
  00af7	66 a3 00 00 00
	00		 mov	 WORD PTR ?battleResultMsg@@3UBATTLE_RESULT_MSG@@A, ax
$LN106@BattleProc:

; 1000 : 				}
; 1001 : 
; 1002 : #ifdef _AI_OTHER
; 1003 : 				if(AI_OtherSetting[0] && (AI == AI_SELECT)){

  00afd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?AI_OtherSetting@@3PAHA, 0 ; AI_OtherSetting
  00b04	0f 84 d4 00 00
	00		 je	 $LN118@BattleProc
  00b0a	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?AI@@3HA, 3	; AI
  00b11	0f 85 c7 00 00
	00		 jne	 $LN118@BattleProc

; 1004 : 					ITEM *pItem = pc.item;
; 1005 : 
; 1006 : 					for(int i=0;i<15;i++){

  00b17	33 d2		 xor	 edx, edx
  00b19	b8 24 0e 00 00	 mov	 eax, OFFSET ?pc@@3UPC@@A+3620
  00b1e	66 90		 npad	 2
$LL24@BattleProc:

; 1007 : 						// Ê£ÄÊü•Áé©ÂÆ∂Ë∫´‰∏äÁöÑÈÅìÂÖ∑ÊúâÊ≤°ÊúâËÇâ
; 1008 : 						if(pItem[i+9].useFlag && (pItem[i+9].graNo >= 24000 && pItem[i+9].graNo <= 24044)){

  00b20	66 83 b8 d8 00
	00 00 00	 cmp	 WORD PTR [eax+216], 0
  00b28	74 12		 je	 SHORT $LN22@BattleProc
  00b2a	8b 08		 mov	 ecx, DWORD PTR [eax]
  00b2c	81 f9 c0 5d 00
	00		 cmp	 ecx, 24000		; 00005dc0H
  00b32	7c 08		 jl	 SHORT $LN22@BattleProc
  00b34	81 f9 ec 5d 00
	00		 cmp	 ecx, 24044		; 00005decH
  00b3a	7e 10		 jle	 SHORT $LN137@BattleProc
$LN22@BattleProc:

; 1004 : 					ITEM *pItem = pc.item;
; 1005 : 
; 1006 : 					for(int i=0;i<15;i++){

  00b3c	05 7c 01 00 00	 add	 eax, 380		; 0000017cH
  00b41	42		 inc	 edx
  00b42	3d 68 24 00 00	 cmp	 eax, OFFSET ?pc@@3UPC@@A+9320
  00b47	7c d7		 jl	 SHORT $LL24@BattleProc

; 1076 : 			}
; 1077 : 		}
; 1078 : 	}
; 1079 : 
; 1080 : }

  00b49	5e		 pop	 esi
  00b4a	5b		 pop	 ebx
  00b4b	c3		 ret	 0
$LN137@BattleProc:

; 1009 : 							// ‰∏¢Êéâ
; 1010 : 							if(bNewServer) lssproto_DI_send(sockfd,nowGx,nowGy,i+9);

  00b4c	83 c2 09	 add	 edx, 9
  00b4f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00b56	52		 push	 edx
  00b57	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00b5d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00b63	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00b69	74 0b		 je	 SHORT $LN109@BattleProc
  00b6b	e8 00 00 00 00	 call	 ?lssproto_DI_send@@YAXHHHH@Z ; lssproto_DI_send
  00b70	83 c4 10	 add	 esp, 16			; 00000010H
  00b73	5e		 pop	 esi

; 1076 : 			}
; 1077 : 		}
; 1078 : 	}
; 1079 : 
; 1080 : }

  00b74	5b		 pop	 ebx
  00b75	c3		 ret	 0
$LN109@BattleProc:

; 1011 : 							else old_lssproto_DI_send(sockfd,nowGx,nowGy,i+9);

  00b76	e8 00 00 00 00	 call	 ?old_lssproto_DI_send@@YAXHHHH@Z ; old_lssproto_DI_send
  00b7b	83 c4 10	 add	 esp, 16			; 00000010H
  00b7e	5e		 pop	 esi

; 1076 : 			}
; 1077 : 		}
; 1078 : 	}
; 1079 : 
; 1080 : }

  00b7f	5b		 pop	 ebx
  00b80	c3		 ret	 0
$LN115@BattleProc:

; 1061 : 			else
; 1062 : 				old_lssproto_B_send( sockfd, "U" );

  00b81	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN179@BattleProc:

; 1063 : 
; 1064 : 			//void RemoveAction(ACTION *pAct);
; 1065 : 			//RemoveAction(pActAudienceExitWnd);
; 1066 : 			//pActAudienceExitWnd = NULL;
; 1067 : 
; 1068 : 		}
; 1069 : 		// ????????
; 1070 : 		if( pActAudienceExitWnd != NULL ){

  00b86	83 c4 08	 add	 esp, 8
$LN116@BattleProc:
  00b89	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActAudienceExitWnd@@3PAUaction@@A ; pActAudienceExitWnd
  00b8f	85 c9		 test	 ecx, ecx
  00b91	74 4b		 je	 SHORT $LN118@BattleProc

; 1071 : 			// ?ÓìñÓé∑?Óû∞?Óù∏Óçï??????Óèù????????
; 1072 : 			if( pActAudienceExitWnd->hp > 0 ){

  00b93	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00b97	7e 45		 jle	 SHORT $LN118@BattleProc

; 1073 : 				// Óû∞??Óù∏Óçï
; 1074 : 				StockFontBuffer( pActAudienceExitWnd->x + 30, pActAudienceExitWnd->y + 28, FONT_PRIO_FRONT, 0, 	"ÎßàÏö∞Ïä§ Ïò§Î•∏Ï™Ω Î≤ÑÌäº ÌÅ¥Î¶≠", 0 );

  00b99	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00b9c	6a 00		 push	 0
  00b9e	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@OCDNAHGP@?$LI?$LG?$LP?l?$LN?$LK?5?$LP?$MA?$LI?$KF?B?J?5?$LJ?v?F?$LA?5?E?$KM?$LI?$KP@
  00ba3	6a 00		 push	 0
  00ba5	83 c0 1c	 add	 eax, 28			; 0000001cH
  00ba8	6a 01		 push	 1
  00baa	50		 push	 eax
  00bab	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00bae	83 c0 1e	 add	 eax, 30			; 0000001eH
  00bb1	50		 push	 eax
  00bb2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1075 : 				StockFontBuffer( pActAudienceExitWnd->x + 30, pActAudienceExitWnd->y + 52, FONT_PRIO_FRONT, 0, 	"ÏãúÏ≤≠Ï¢ÖÎ£å", 0 );

  00bb7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActAudienceExitWnd@@3PAUaction@@A ; pActAudienceExitWnd
  00bbd	6a 00		 push	 0
  00bbf	68 00 00 00 00	 push	 OFFSET ??_C@_08HHKADIBF@?$LN?C?C?$LL?A?$LO?$LH?a@
  00bc4	6a 00		 push	 0
  00bc6	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00bc9	83 c0 34	 add	 eax, 52			; 00000034H
  00bcc	6a 01		 push	 1
  00bce	50		 push	 eax
  00bcf	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00bd2	83 c0 1e	 add	 eax, 30			; 0000001eH
  00bd5	50		 push	 eax
  00bd6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00bdb	83 c4 30	 add	 esp, 48			; 00000030H
$LN118@BattleProc:

; 1076 : 			}
; 1077 : 		}
; 1078 : 	}
; 1079 : 
; 1080 : }

  00bde	5e		 pop	 esi
  00bdf	5b		 pop	 ebx
  00be0	c3		 ret	 0
  00be1	0f 1f 00	 npad	 3
$LN168@BattleProc:
  00be4	00 00 00 00	 DD	 $LN25@BattleProc
  00be8	00 00 00 00	 DD	 $LN47@BattleProc
  00bec	00 00 00 00	 DD	 $LN50@BattleProc
  00bf0	00 00 00 00	 DD	 $LN68@BattleProc
  00bf4	00 00 00 00	 DD	 $LN76@BattleProc
  00bf8	00 00 00 00	 DD	 $LN80@BattleProc
  00bfc	00 00 00 00	 DD	 $LN89@BattleProc
  00c00	00 00 00 00	 DD	 $LN100@BattleProc
  00c04	00 00 00 00	 DD	 $LN102@BattleProc
?BattleProc@@YAXXZ ENDP					; BattleProc
_TEXT	ENDS
END
