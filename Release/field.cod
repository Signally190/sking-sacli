; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\field.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GMÎ·×â??@@3_NA					; GMÎ·×â??
PUBLIC	???ãáãÓ??@@3HA					; ??ãáãÓ??
PUBLIC	?ÍíÒöÖªøú??@@3HA				; ÍíÒöÖªøú??
PUBLIC	?ñ§óø???@@3HA					; ñ§óø???
PUBLIC	??Ý»ãæäÎ?ßãìÚ@@3PAHA				; ?Ý»ãæäÎ?ßãìÚ
PUBLIC	?drawFieldButtonFlag@@3FA			; drawFieldButtonFlag
PUBLIC	?fieldBtnHitId@@3PAHA				; fieldBtnHitId
PUBLIC	?in817flag@@3_NA				; in817flag
PUBLIC	?BattlingFlag@@3HA				; BattlingFlag
PUBLIC	?jobdaily@@3PAUJOBDAILY@@A			; jobdaily
PUBLIC	?JobdailyGetFlag@@3HA				; JobdailyGetFlag
PUBLIC	?JobdailyGetMax@@3HA				; JobdailyGetMax
PUBLIC	?ani_num@@3HA					; ani_num
PUBLIC	?breadAniFlag@@3HA				; breadAniFlag
PUBLIC	?SPACT@@3PAPAUaction@@A				; SPACT
PUBLIC	?ProduceXY@@3PAY06HA				; ProduceXY
PUBLIC	?delFlag@@3_NA					; delFlag
PUBLIC	?flag22@@3_NA					; flag22
PUBLIC	?Timeflag2@@3_NA				; Timeflag2
PUBLIC	?TimeTick2@@3HA					; TimeTick2
PUBLIC	?TimeTickMax2@@3HA				; TimeTickMax2
PUBLIC	?Timeflag@@3PA_NA				; Timeflag
PUBLIC	?TimeTick@@3PAHA				; TimeTick
PUBLIC	?TimeTickMax@@3PAHA				; TimeTickMax
PUBLIC	?AniFlag@@3_NA					; AniFlag
PUBLIC	?Updownflag@@3_NA				; Updownflag
PUBLIC	?XYposition@@3PAY06HA				; XYposition
PUBLIC	?iOldGX@@3HA					; iOldGX
PUBLIC	?iOldGY@@3HA					; iOldGY
PUBLIC	?pActStreetVendorWnd@@3PAUaction@@A		; pActStreetVendorWnd
PUBLIC	?pActStreetVendorBuyWnd@@3PAUaction@@A		; pActStreetVendorBuyWnd
PUBLIC	?sStreetVendorBtn@@3FA				; sStreetVendorBtn
PUBLIC	?sStreetVendorBuyBtn@@3FA			; sStreetVendorBuyBtn
PUBLIC	?sStreetVendorBtnFocus@@3FA			; sStreetVendorBtnFocus
PUBLIC	?sStreetVendorBtnGraNo@@3PAHA			; sStreetVendorBtnGraNo
PUBLIC	?pShowPet@@3PAUaction@@A			; pShowPet
PUBLIC	?ShowSellItem@@3PAU_Show_Sell_Item@@A		; ShowSellItem
PUBLIC	?str_bufferVendorName@@3USTR_BUFFER@@A		; str_bufferVendorName
PUBLIC	?chatRoomBtn@@3FA				; chatRoomBtn
PUBLIC	?SelRoomBtn@@3FA				; SelRoomBtn
PUBLIC	?angelFlag@@3HA					; angelFlag
PUBLIC	?angelRecvType@@3HA				; angelRecvType
PUBLIC	?angelRecvButton@@3HA				; angelRecvButton
PUBLIC	?angelMsg@@3PADA				; angelMsg
PUBLIC	?drawTimeAnimeFlag@@3FA				; drawTimeAnimeFlag
PUBLIC	?etcSendFlag@@3FA				; etcSendFlag
PUBLIC	?actBtn@@3FA					; actBtn
PUBLIC	?menuBtn@@3FA					; menuBtn
PUBLIC	?mailLamp@@3FA					; mailLamp
PUBLIC	?fieldInfoTime@@3IA				; fieldInfoTime
PUBLIC	?serverAliveTime@@3PAUtm@@A			; serverAliveTime
PUBLIC	?serverAliveLongTime@@3_JA			; serverAliveLongTime
PUBLIC	?ShowVendorItem@@3PAU_Show_Vendor_Item@@A	; ShowVendorItem
PUBLIC	?pChatRoomWnd@@3PAUaction@@A			; pChatRoomWnd
PUBLIC	?chatRoomBtnFocus@@3FA				; chatRoomBtnFocus
PUBLIC	?chatRoomBtnGraNo@@3PAHA			; chatRoomBtnGraNo
PUBLIC	?menuBtnFocus@@3FA				; menuBtnFocus
PUBLIC	?menuBtnGraNo@@3PAHA				; menuBtnGraNo
PUBLIC	?cardBtn@@3FA					; cardBtn
PUBLIC	?cardBtnFocus@@3FA				; cardBtnFocus
PUBLIC	?cardBtnGraNo@@3PAHA				; cardBtnGraNo
PUBLIC	?tradeBtn@@3FA					; tradeBtn
PUBLIC	?tradeBtnFocus@@3FA				; tradeBtnFocus
PUBLIC	?tradeBtnGraNo@@3PAHA				; tradeBtnGraNo
PUBLIC	?angelLampDrawFlag@@3FA				; angelLampDrawFlag
PUBLIC	?angelLampFlashTime@@3IA			; angelLampFlashTime
PUBLIC	?angelBtn@@3FA					; angelBtn
PUBLIC	?angelBtnFocus@@3FA				; angelBtnFocus
PUBLIC	?angelBtnGraNo@@3PAHA				; angelBtnGraNo
PUBLIC	?channelBtn@@3FA				; channelBtn
PUBLIC	?channelBtnFocus@@3FA				; channelBtnFocus
PUBLIC	?channelWNFlag@@3FA				; channelWNFlag
PUBLIC	?channelBtnGraNo@@3PAHA				; channelBtnGraNo
PUBLIC	?partyBtn@@3FA					; partyBtn
PUBLIC	?partyBtnFocus@@3FA				; partyBtnFocus
PUBLIC	?partyBtnEnableFlag@@3FA			; partyBtnEnableFlag
PUBLIC	?partyBtnGraNo@@3PAHA				; partyBtnGraNo
PUBLIC	?mailLampDrawFlag@@3FA				; mailLampDrawFlag
PUBLIC	?helpBtnGraNo@@3PAHA				; helpBtnGraNo
PUBLIC	?helpBtn@@3FA					; helpBtn
PUBLIC	?helpBtnFocus@@3FA				; helpBtnFocus
PUBLIC	?mailLampFlashTime@@3IA				; mailLampFlashTime
PUBLIC	?joinBattleBtn@@3FA				; joinBattleBtn
PUBLIC	?joinBattleBtnFocus@@3FA			; joinBattleBtnFocus
PUBLIC	?joinBattleBtnEnableFlag@@3FA			; joinBattleBtnEnableFlag
PUBLIC	?joinBattleHelpMsgFlag@@3FA			; joinBattleHelpMsgFlag
PUBLIC	?joinBattleBtnGraNo@@3PAHA			; joinBattleBtnGraNo
PUBLIC	?duelBtn@@3FA					; duelBtn
PUBLIC	?duelBtnFocus@@3FA				; duelBtnFocus
PUBLIC	?duelBtnGraNo@@3PAHA				; duelBtnGraNo
PUBLIC	?actBtnForcus@@3FA				; actBtnForcus
PUBLIC	?actBtnUpTime@@3HA				; actBtnUpTime
PUBLIC	?nowActMode@@3HA				; nowActMode
PUBLIC	?actBtnGraNo@@3PAHA				; actBtnGraNo
PUBLIC	?charActionAnimeChangeProcNo@@3FA		; charActionAnimeChangeProcNo
PUBLIC	?charActionAnimeChangeWindowFlag@@3FA		; charActionAnimeChangeWindowFlag
PUBLIC	?etcSwitchProcNo@@3FA				; etcSwitchProcNo
PUBLIC	?etcSwitchChangeFlag@@3FA			; etcSwitchChangeFlag
PUBLIC	?amPmAnimeTime@@3HA				; amPmAnimeTime
PUBLIC	?amPmAnimeX@@3HA				; amPmAnimeX
PUBLIC	?amPmAnimeGraNoIndex0@@3HA			; amPmAnimeGraNoIndex0
PUBLIC	?amPmAnimeGraNoIndex1@@3HA			; amPmAnimeGraNoIndex1
PUBLIC	?amPmAnimeGraNo@@3PAHA				; amPmAnimeGraNo
PUBLIC	?ridelistBtn@@3FA				; ridelistBtn
PUBLIC	?ridelistBtnFocus@@3FA				; ridelistBtnFocus
PUBLIC	?ridelistBtnGraNo@@3PAHA			; ridelistBtnGraNo
PUBLIC	?vipshopBtn@@3FA				; vipshopBtn
PUBLIC	?vipshopBtnFocus@@3FA				; vipshopBtnFocus
PUBLIC	?vipshopBtnGraNo@@3PAHA				; vipshopBtnGraNo
PUBLIC	?sTeacherSystemBtn@@3FA				; sTeacherSystemBtn
PUBLIC	?sTeacherSystemBtnFocus@@3FA			; sTeacherSystemBtnFocus
PUBLIC	?iTeacherSystemBtnGraNo@@3PAHA			; iTeacherSystemBtnGraNo
PUBLIC	?nowFieldMenuOpenFlag@@3FA			; nowFieldMenuOpenFlag
PUBLIC	?fieldBtnPushTime@@3IA				; fieldBtnPushTime
PUBLIC	?onlinegmProcNo@@3FA				; onlinegmProcNo
PUBLIC	?channelName@@3PAY0BE@DA			; channelName
PUBLIC	?pageStr@@3PAY09DA				; pageStr
_BSS	SEGMENT
?GMÎ·×â??@@3_NA DB 01H DUP (?)				; GMÎ·×â??
	ALIGN	4

???ãáãÓ??@@3HA DD 01H DUP (?)				; ??ãáãÓ??
?ÍíÒöÖªøú??@@3HA DD 01H DUP (?)				; ÍíÒöÖªøú??
?ñ§óø???@@3HA DD 01H DUP (?)				; ñ§óø???
??Ý»ãæäÎ?ßãìÚ@@3PAHA DD 0aH DUP (?)			; ?Ý»ãæäÎ?ßãìÚ
?fieldBtnHitId@@3PAHA DD 0fH DUP (?)			; fieldBtnHitId
?in817flag@@3_NA DB 01H DUP (?)				; in817flag
	ALIGN	4

?BattlingFlag@@3HA DD 01H DUP (?)			; BattlingFlag
?jobdaily@@3PAUJOBDAILY@@A DB 0fd20H DUP (?)		; jobdaily
?JobdailyGetFlag@@3HA DD 01H DUP (?)			; JobdailyGetFlag
?JobdailyGetMax@@3HA DD 01H DUP (?)			; JobdailyGetMax
?ani_num@@3HA DD 01H DUP (?)				; ani_num
?breadAniFlag@@3HA DD 01H DUP (?)			; breadAniFlag
?SPACT@@3PAPAUaction@@A DD 0100H DUP (?)		; SPACT
?delFlag@@3_NA DB 01H DUP (?)				; delFlag
	ALIGN	4

?Timeflag2@@3_NA DB 01H DUP (?)				; Timeflag2
	ALIGN	4

?TimeTick2@@3HA DD 01H DUP (?)				; TimeTick2
?TimeTickMax2@@3HA DD 01H DUP (?)			; TimeTickMax2
?Timeflag@@3PA_NA DB 032H DUP (?)			; Timeflag
	ALIGN	4

?TimeTick@@3PAHA DD 032H DUP (?)			; TimeTick
?TimeTickMax@@3PAHA DD 032H DUP (?)			; TimeTickMax
?AniFlag@@3_NA DB 01H DUP (?)				; AniFlag
	ALIGN	4

?Updownflag@@3_NA DB 01H DUP (?)			; Updownflag
	ALIGN	4

?iOldGX@@3HA DD	01H DUP (?)				; iOldGX
?iOldGY@@3HA DD	01H DUP (?)				; iOldGY
?pActStreetVendorWnd@@3PAUaction@@A DD 01H DUP (?)	; pActStreetVendorWnd
?pActStreetVendorBuyWnd@@3PAUaction@@A DD 01H DUP (?)	; pActStreetVendorBuyWnd
?sStreetVendorBtn@@3FA DW 01H DUP (?)			; sStreetVendorBtn
	ALIGN	4

?sStreetVendorBuyBtn@@3FA DW 01H DUP (?)		; sStreetVendorBuyBtn
	ALIGN	4

?sStreetVendorBtnFocus@@3FA DW 01H DUP (?)		; sStreetVendorBtnFocus
	ALIGN	4

?pShowPet@@3PAUaction@@A DD 01H DUP (?)			; pShowPet
?ShowSellItem@@3PAU_Show_Sell_Item@@A DB 05f0H DUP (?)	; ShowSellItem
?str_bufferVendorName@@3USTR_BUFFER@@A DB 0128H DUP (?)	; str_bufferVendorName
?chatRoomBtn@@3FA DW 01H DUP (?)			; chatRoomBtn
	ALIGN	4

?SelRoomBtn@@3FA DW 01H DUP (?)				; SelRoomBtn
	ALIGN	4

?angelFlag@@3HA DD 01H DUP (?)				; angelFlag
?angelRecvType@@3HA DD 01H DUP (?)			; angelRecvType
?angelRecvButton@@3HA DD 01H DUP (?)			; angelRecvButton
?angelMsg@@3PADA DB 02800H DUP (?)			; angelMsg
?drawTimeAnimeFlag@@3FA DW 01H DUP (?)			; drawTimeAnimeFlag
	ALIGN	4

?etcSendFlag@@3FA DW 01H DUP (?)			; etcSendFlag
	ALIGN	4

?actBtn@@3FA DW	01H DUP (?)				; actBtn
	ALIGN	4

?menuBtn@@3FA DW 01H DUP (?)				; menuBtn
	ALIGN	4

?mailLamp@@3FA DW 01H DUP (?)				; mailLamp
	ALIGN	4

?fieldInfoTime@@3IA DD 01H DUP (?)			; fieldInfoTime
?serverAliveTime@@3PAUtm@@A DD 01H DUP (?)		; serverAliveTime
?serverAliveLongTime@@3_JA DQ 01H DUP (?)		; serverAliveLongTime
?ShowVendorItem@@3PAU_Show_Vendor_Item@@A DB 06c20H DUP (?) ; ShowVendorItem
?pChatRoomWnd@@3PAUaction@@A DD 01H DUP (?)		; pChatRoomWnd
?chatRoomBtnFocus@@3FA DW 01H DUP (?)			; chatRoomBtnFocus
	ALIGN	4

?menuBtnFocus@@3FA DW 01H DUP (?)			; menuBtnFocus
	ALIGN	4

?cardBtn@@3FA DW 01H DUP (?)				; cardBtn
	ALIGN	4

?cardBtnFocus@@3FA DW 01H DUP (?)			; cardBtnFocus
	ALIGN	4

?tradeBtn@@3FA DW 01H DUP (?)				; tradeBtn
	ALIGN	4

?tradeBtnFocus@@3FA DW 01H DUP (?)			; tradeBtnFocus
	ALIGN	4

?angelLampDrawFlag@@3FA DW 01H DUP (?)			; angelLampDrawFlag
	ALIGN	4

?angelLampFlashTime@@3IA DD 01H DUP (?)			; angelLampFlashTime
?angelBtn@@3FA DW 01H DUP (?)				; angelBtn
	ALIGN	4

?angelBtnFocus@@3FA DW 01H DUP (?)			; angelBtnFocus
	ALIGN	4

?channelBtn@@3FA DW 01H DUP (?)				; channelBtn
	ALIGN	4

?channelBtnFocus@@3FA DW 01H DUP (?)			; channelBtnFocus
	ALIGN	4

?partyBtn@@3FA DW 01H DUP (?)				; partyBtn
	ALIGN	4

?partyBtnFocus@@3FA DW 01H DUP (?)			; partyBtnFocus
	ALIGN	4

?mailLampDrawFlag@@3FA DW 01H DUP (?)			; mailLampDrawFlag
	ALIGN	4

?helpBtn@@3FA DW 01H DUP (?)				; helpBtn
	ALIGN	4

?helpBtnFocus@@3FA DW 01H DUP (?)			; helpBtnFocus
	ALIGN	4

?mailLampFlashTime@@3IA DD 01H DUP (?)			; mailLampFlashTime
?joinBattleBtn@@3FA DW 01H DUP (?)			; joinBattleBtn
	ALIGN	4

?joinBattleBtnFocus@@3FA DW 01H DUP (?)			; joinBattleBtnFocus
	ALIGN	4

?duelBtn@@3FA DW 01H DUP (?)				; duelBtn
	ALIGN	4

?duelBtnFocus@@3FA DW 01H DUP (?)			; duelBtnFocus
	ALIGN	4

?actBtnForcus@@3FA DW 01H DUP (?)			; actBtnForcus
	ALIGN	4

?actBtnUpTime@@3HA DD 01H DUP (?)			; actBtnUpTime
?nowActMode@@3HA DD 01H DUP (?)				; nowActMode
?charActionAnimeChangeProcNo@@3FA DW 01H DUP (?)	; charActionAnimeChangeProcNo
	ALIGN	4

?charActionAnimeChangeWindowFlag@@3FA DW 01H DUP (?)	; charActionAnimeChangeWindowFlag
	ALIGN	4

?etcSwitchProcNo@@3FA DW 01H DUP (?)			; etcSwitchProcNo
	ALIGN	4

?etcSwitchChangeFlag@@3FA DW 01H DUP (?)		; etcSwitchChangeFlag
	ALIGN	4

?amPmAnimeTime@@3HA DD 01H DUP (?)			; amPmAnimeTime
?amPmAnimeX@@3HA DD 01H DUP (?)				; amPmAnimeX
?amPmAnimeGraNoIndex0@@3HA DD 01H DUP (?)		; amPmAnimeGraNoIndex0
?amPmAnimeGraNoIndex1@@3HA DD 01H DUP (?)		; amPmAnimeGraNoIndex1
?ridelistBtn@@3FA DW 01H DUP (?)			; ridelistBtn
	ALIGN	4

?ridelistBtnFocus@@3FA DW 01H DUP (?)			; ridelistBtnFocus
	ALIGN	4

?vipshopBtn@@3FA DW 01H DUP (?)				; vipshopBtn
	ALIGN	4

?vipshopBtnFocus@@3FA DW 01H DUP (?)			; vipshopBtnFocus
	ALIGN	4

?sTeacherSystemBtn@@3FA DW 01H DUP (?)			; sTeacherSystemBtn
	ALIGN	4

?sTeacherSystemBtnFocus@@3FA DW 01H DUP (?)		; sTeacherSystemBtnFocus
	ALIGN	4

?nowFieldMenuOpenFlag@@3FA DW 01H DUP (?)		; nowFieldMenuOpenFlag
	ALIGN	4

?fieldBtnPushTime@@3IA DD 01H DUP (?)			; fieldBtnPushTime
?onlinegmProcNo@@3FA DW 01H DUP (?)			; onlinegmProcNo
_BSS	ENDS
CONST	SEGMENT
?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
CONST	ENDS
_DATA	SEGMENT
?drawFieldButtonFlag@@3FA DW 01H			; drawFieldButtonFlag
?flag22@@3_NA DB 01H					; flag22
	ORG $+5
?ProduceXY@@3PAY06HA DD 0ffffffffH			; ProduceXY
	ORG $+7164
?XYposition@@3PAY06HA DD 0fcH				; XYposition
	DD	0ffH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0e9H
	DD	010cH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0e3H
	DD	0101H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0d1H
	DD	0feH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0134H
	DD	085H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0131H
	DD	065H
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	013cH
	DD	079H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	012fH
	DD	068H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	011fH
	DD	07aH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0fdH
	DD	035H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	06dH
	DD	062H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	090H
	DD	059H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	072H
	DD	056H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	065H
	DD	054H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	05eH
	DD	05dH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0173H
	DD	06cH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0b7H
	DD	078H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0d2H
	DD	0bbH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	017eH
	DD	0bbH
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0e1H
	DD	0b2H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0163H
	DD	0ceH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	016cH
	DD	0d9H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0efH
	DD	096H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0157H
	DD	0d9H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0f5H
	DD	08bH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	014eH
	DD	0f2H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0144H
	DD	0daH
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0104H
	DD	07cH
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	012dH
	DD	0f6H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0120H
	DD	0109H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0116H
	DD	010bH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0e2H
	DD	017H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0158H
	DD	02bH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0170H
	DD	06eH
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0168H
	DD	091H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	015bH
	DD	0e8H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0147H
	DD	0e6H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	093H
	DD	017H
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	093H
	DD	02aH
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0118H
	DD	026H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	09eH
	DD	02cH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	091H
	DD	044H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0bdH
	DD	042H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0ccH
	DD	037H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0c7H
	DD	037H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0ebH
	DD	034H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0fdH
	DD	022H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0120H
	DD	033H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	012aH
	DD	03eH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	012bH
	DD	048H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0100H
	DD	05eH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	011cH
	DD	06aH
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0158H
	DD	02aH
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0149H
	DD	048H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	015fH
	DD	052H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	017bH
	DD	052H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0a4H
	DD	0108H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	09bH
	DD	0107H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	07cH
	DD	010bH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	07dH
	DD	010aH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	070H
	DD	0122H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	066H
	DD	011fH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	05fH
	DD	0134H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	041H
	DD	014fH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	032H
	DD	014fH
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	030H
	DD	016eH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	048H
	DD	0162H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	04fH
	DD	0178H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	070H
	DD	0174H
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	081H
	DD	019bH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	086H
	DD	01a5H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0a9H
	DD	01a0H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0c9H
	DD	01a2H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0c4H
	DD	0178H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0ceH
	DD	016eH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0caH
	DD	0156H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0acH
	DD	014eH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0c0H
	DD	0143H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	09bH
	DD	0151H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	084H
	DD	02dH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	063H
	DD	01e9H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	063H
	DD	01d2H
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	072H
	DD	01b3H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	077H
	DD	01d1H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	08eH
	DD	01b3H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0a6H
	DD	01abH
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	09fH
	DD	017fH
	DD	018c8eH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	02fH
	DD	09cH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	02fH
	DD	084H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	024H
	DD	07bH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	03dH
	DD	0a2H
	DD	018c8dH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	04fH
	DD	091H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	05dH
	DD	09dH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	06bH
	DD	09aH
	DD	018c87H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	076H
	DD	0a5H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	085H
	DD	0a4H
	DD	018c8fH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	08aH
	DD	0b0H
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	092H
	DD	0cdH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0a2H
	DD	0d3H
	DD	018c8cH
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	0aaH
	DD	0caH
	DD	018c86H
	DD	00H
	DD	0ffffffffH
	DD	01H
	DD	00H
	DD	082H
	DD	0b5H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0113H
	DD	0ffH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07cH
	DD	0a1H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0105H
	DD	0109H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f3H
	DD	05aH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e2H
	DD	0faH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	010dH
	DD	049H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d4H
	DD	0f9H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0124H
	DD	037H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b6H
	DD	0faH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0133H
	DD	06cH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a9H
	DD	0104H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0133H
	DD	066H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	093H
	DD	0106H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b7H
	DD	05fH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	079H
	DD	0119H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09cH
	DD	038H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06dH
	DD	0121H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	089H
	DD	0b7H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	067H
	DD	0129H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	085H
	DD	0a7H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02eH
	DD	0140H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	082H
	DD	0a3H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03fH
	DD	0152H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	070H
	DD	0a4H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	032H
	DD	0168H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	052H
	DD	097H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	05cH
	DD	016dH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	042H
	DD	09aH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07aH
	DD	017cH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02fH
	DD	084H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	097H
	DD	0199H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02bH
	DD	082H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a2H
	DD	01a0H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	034H
	DD	08cH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d1H
	DD	0171H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04cH
	DD	09bH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c0H
	DD	0152H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	078H
	DD	0a9H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a5H
	DD	013bH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	094H
	DD	0dcH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a6H
	DD	0157H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e1H
	DD	0afH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c7H
	DD	0193H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f4H
	DD	090H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0abH
	DD	0198H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e5H
	DD	067H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	091H
	DD	0196H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0eeH
	DD	06eH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a4H
	DD	01cdH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	063H
	DD	058H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bcH
	DD	01fcH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	086H
	DD	050H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09eH
	DD	01c9H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0cfH
	DD	02eH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	094H
	DD	01e7H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013bH
	DD	02bH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	067H
	DD	01ccH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0151H
	DD	024H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06fH
	DD	01beH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0161H
	DD	04bH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07eH
	DD	01bbH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	05aH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	084H
	DD	0199H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	064H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06eH
	DD	017eH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0163H
	DD	064H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	017aH
	DD	0baH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015fH
	DD	098H
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0172H
	DD	0d1H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0168H
	DD	09dH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015dH
	DD	0e1H
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0172H
	DD	0aaH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0155H
	DD	0eaH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	012cH
	DD	0feH
	DD	018cdbH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0137H
	DD	0efH
	DD	018cddH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	081H
	DD	0b9H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016fH
	DD	0ccH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	085H
	DD	0a0H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0154H
	DD	0ddH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f8H
	DD	057H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014aH
	DD	0e3H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0106H
	DD	024H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013cH
	DD	0faH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0100H
	DD	053H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0123H
	DD	0faH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0139H
	DD	073H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0114H
	DD	0105H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	012fH
	DD	06eH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0fcH
	DD	0105H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0adH
	DD	053H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0deH
	DD	0f9H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08eH
	DD	057H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d1H
	DD	0f9H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0fcH
	DD	07eH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b3H
	DD	0f8H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ddH
	DD	0b3H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a7H
	DD	0100H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c7H
	DD	0b6H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08eH
	DD	0105H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	060H
	DD	095H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	071H
	DD	0116H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	055H
	DD	08dH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	067H
	DD	0120H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03dH
	DD	09dH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	054H
	DD	0133H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	027H
	DD	087H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02eH
	DD	0144H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	028H
	DD	083H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03fH
	DD	0157H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	037H
	DD	094H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	035H
	DD	016bH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	05cH
	DD	093H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	064H
	DD	0171H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	081H
	DD	0b0H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	087H
	DD	0186H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	097H
	DD	0d0H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	099H
	DD	0197H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e5H
	DD	0a6H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a9H
	DD	01a3H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0feH
	DD	084H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d4H
	DD	0172H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0135H
	DD	06dH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c4H
	DD	0152H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ecH
	DD	04cH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a1H
	DD	0141H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06fH
	DD	059H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b8H
	DD	014fH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	089H
	DD	04cH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b6H
	DD	019aH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	010dH
	DD	039H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b3H
	DD	01a9H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0134H
	DD	028H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	097H
	DD	018fH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0159H
	DD	03cH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a7H
	DD	01e7H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015aH
	DD	04fH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bbH
	DD	0204H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	062H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06aH
	DD	01e8H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0175H
	DD	06eH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08fH
	DD	01e7H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0175H
	DD	06aH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06aH
	DD	01c7H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0164H
	DD	098H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	068H
	DD	01caH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016dH
	DD	09aH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	092H
	DD	01acH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0168H
	DD	0a9H
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	080H
	DD	0195H
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0175H
	DD	0baH
	DD	018cdaH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	05cH
	DD	017dH
	DD	018cdcH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	094H
	DD	0c7H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0164H
	DD	0daH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	078H
	DD	09eH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0151H
	DD	0deH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ebH
	DD	04eH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013fH
	DD	0e9H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011eH
	DD	031H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0131H
	DD	0f2H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0174H
	DD	079H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0119H
	DD	0104H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015aH
	DD	03eH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	010fH
	DD	0106H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0145H
	DD	050H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f3H
	DD	0f6H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09cH
	DD	034H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0dfH
	DD	0faH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09fH
	DD	04aH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0caH
	DD	0f7H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f0H
	DD	099H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0afH
	DD	0101H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ccH
	DD	0b0H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a3H
	DD	0100H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bdH
	DD	0bdH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	087H
	DD	0107H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	058H
	DD	08eH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	071H
	DD	0120H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04cH
	DD	093H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	063H
	DD	0123H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03aH
	DD	08cH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04cH
	DD	013eH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	027H
	DD	077H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	045H
	DD	0145H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	01bH
	DD	07dH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04aH
	DD	0162H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03cH
	DD	09eH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04dH
	DD	0165H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	064H
	DD	09dH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	064H
	DD	0177H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08dH
	DD	0c0H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07eH
	DD	0193H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bdH
	DD	0c4H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a0H
	DD	018fH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f4H
	DD	0a0H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b0H
	DD	01b1H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0102H
	DD	074H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0cdH
	DD	016cH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0131H
	DD	071H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bfH
	DD	014aH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a9H
	DD	067H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	096H
	DD	0149H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	083H
	DD	054H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0baH
	DD	0158H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c4H
	DD	061H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b7H
	DD	019dH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011dH
	DD	031H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0afH
	DD	01b2H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014aH
	DD	018H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a2H
	DD	01ceH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0163H
	DD	046H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a5H
	DD	01f4H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0148H
	DD	03cH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b4H
	DD	01feH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0170H
	DD	068H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	089H
	DD	01e9H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0173H
	DD	076H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	082H
	DD	01ebH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	08aH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	072H
	DD	01bbH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	0aaH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	063H
	DD	01d6H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015dH
	DD	083H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	084H
	DD	019eH
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0174H
	DD	0b1H
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	089H
	DD	0188H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	017dH
	DD	0cbH
	DD	018cdeH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04fH
	DD	0176H
	DD	018ce0H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08dH
	DD	0caH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0166H
	DD	0d2H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07dH
	DD	0a2H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0158H
	DD	0e6H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f3H
	DD	05eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0146H
	DD	0e5H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011cH
	DD	02eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013eH
	DD	0f8H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013dH
	DD	07eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0120H
	DD	0fcH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0162H
	DD	04bH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0112H
	DD	0ffH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013bH
	DD	074H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f3H
	DD	0107H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09bH
	DD	049H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e0H
	DD	0fdH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a1H
	DD	04eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d0H
	DD	0fcH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0faH
	DD	08bH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b2H
	DD	0feH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ceH
	DD	0c5H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a0H
	DD	0104H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c3H
	DD	0c0H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	087H
	DD	0108H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	05eH
	DD	09bH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	070H
	DD	0119H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04dH
	DD	099H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	067H
	DD	0128H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	037H
	DD	092H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04fH
	DD	0136H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02dH
	DD	07aH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	042H
	DD	0148H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	027H
	DD	078H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	044H
	DD	015fH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	030H
	DD	09dH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04aH
	DD	0161H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	063H
	DD	097H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06bH
	DD	0176H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	088H
	DD	0b6H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08aH
	DD	0189H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0adH
	DD	0cbH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a3H
	DD	018fH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0dfH
	DD	0a0H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0abH
	DD	019bH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0feH
	DD	079H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d6H
	DD	017fH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	013bH
	DD	076H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c0H
	DD	014aH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0eaH
	DD	045H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09bH
	DD	0142H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07bH
	DD	058H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b7H
	DD	0150H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a4H
	DD	050H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b6H
	DD	01a5H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011cH
	DD	02dH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0afH
	DD	01aeH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014dH
	DD	01eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	096H
	DD	019fH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0160H
	DD	03eH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a9H
	DD	01f2H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014fH
	DD	053H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bcH
	DD	0205H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016bH
	DD	064H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	076H
	DD	01ecH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0172H
	DD	067H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	088H
	DD	01eaH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0152H
	DD	05bH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	071H
	DD	01beH
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0167H
	DD	099H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06eH
	DD	01d0H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016bH
	DD	0a2H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	086H
	DD	01a8H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0175H
	DD	0abH
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	07fH
	DD	0193H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0181H
	DD	0c0H
	DD	018cdfH
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	055H
	DD	0179H
	DD	018ce1H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	088H
	DD	0adH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015dH
	DD	0d5H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	076H
	DD	09eH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0153H
	DD	0e1H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e3H
	DD	04bH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0142H
	DD	0f4H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011eH
	DD	039H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	012bH
	DD	0f7H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0161H
	DD	05aH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0119H
	DD	0102H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0142H
	DD	046H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0110H
	DD	0100H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0160H
	DD	028H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0e6H
	DD	0f9H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09bH
	DD	034H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d8H
	DD	0f8H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	098H
	DD	047H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0beH
	DD	0f3H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0eaH
	DD	0a8H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0acH
	DD	0ffH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c7H
	DD	0beH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	096H
	DD	0102H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0afH
	DD	0cbH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	075H
	DD	010fH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	055H
	DD	08dH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06dH
	DD	011cH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	048H
	DD	097H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	064H
	DD	012dH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02cH
	DD	08bH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04bH
	DD	013bH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02dH
	DD	07aH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04aH
	DD	0137H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	01dH
	DD	074H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03dH
	DD	016fH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	048H
	DD	097H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	030H
	DD	015aH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	073H
	DD	09dH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06fH
	DD	0178H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09aH
	DD	0caH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08eH
	DD	018dH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0d4H
	DD	0b7H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a2H
	DD	018eH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f4H
	DD	09dH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bcH
	DD	0181H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0100H
	DD	069H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c7H
	DD	016bH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0119H
	DD	071H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bcH
	DD	0142H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09aH
	DD	049H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a1H
	DD	014aH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	094H
	DD	049H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b9H
	DD	0185H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0fcH
	DD	029H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0adH
	DD	01aeH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0128H
	DD	03bH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	086H
	DD	01b4H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0138H
	DD	043H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bdH
	DD	01d6H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0160H
	DD	03eH
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b8H
	DD	01faH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014dH
	DD	056H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a4H
	DD	01f3H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0173H
	DD	071H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09cH
	DD	01e6H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	018dH
	DD	083H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06eH
	DD	01ebH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0161H
	DD	084H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	075H
	DD	01b6H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016bH
	DD	0a4H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	063H
	DD	01e0H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016dH
	DD	0a5H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08eH
	DD	018eH
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0175H
	DD	0b8H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	069H
	DD	0181H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0174H
	DD	0b9H
	DD	018ce3H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	047H
	DD	0173H
	DD	018ce5H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09aH
	DD	0c8H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	015dH
	DD	0d3H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	077H
	DD	09dH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0159H
	DD	0e7H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0efH
	DD	052H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0146H
	DD	0f3H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0122H
	DD	03bH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0138H
	DD	0f8H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0166H
	DD	063H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0119H
	DD	0fdH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0148H
	DD	045H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0109H
	DD	0101H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0102H
	DD	025H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0ebH
	DD	0f7H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	099H
	DD	033H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0dbH
	DD	0f8H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	099H
	DD	048H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c5H
	DD	0f4H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	084H
	DD	0bbH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0aeH
	DD	0fcH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	083H
	DD	0b3H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a1H
	DD	0101H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	078H
	DD	0a9H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	083H
	DD	010fH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	065H
	DD	097H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06cH
	DD	011dH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	047H
	DD	09eH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	061H
	DD	0126H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	03aH
	DD	08bH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04bH
	DD	0137H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	01dH
	DD	080H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	047H
	DD	0137H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	014H
	DD	077H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	04dH
	DD	0164H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	043H
	DD	09cH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	02fH
	DD	015dH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06cH
	DD	09dH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	057H
	DD	0174H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	095H
	DD	0c8H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	080H
	DD	0196H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bbH
	DD	0beH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08dH
	DD	018cH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0eeH
	DD	09dH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b0H
	DD	01b2H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	010eH
	DD	078H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0c8H
	DD	0166H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	010fH
	DD	078H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0bbH
	DD	0146H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	09bH
	DD	039H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	097H
	DD	014eH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	08cH
	DD	058H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b6H
	DD	0194H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0f0H
	DD	046H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0a5H
	DD	01a3H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	011fH
	DD	033H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	086H
	DD	01b6H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	012eH
	DD	039H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0b6H
	DD	01d7H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0163H
	DD	040H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0aeH
	DD	01f7H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0156H
	DD	05dH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0baH
	DD	01f9H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0171H
	DD	06bH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	094H
	DD	01e7H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0174H
	DD	07bH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	078H
	DD	01ebH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0163H
	DD	08aH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	075H
	DD	01b6H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016eH
	DD	0a1H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	062H
	DD	01dbH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	016bH
	DD	0a3H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	084H
	DD	019bH
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0171H
	DD	0b5H
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	06eH
	DD	0187H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	0176H
	DD	0bdH
	DD	018ce2H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	DD	051H
	DD	0175H
	DD	018ce4H
	DD	00H
	DD	0ffffffffH
	DD	02H
	DD	00H
	ORG $+112
?sStreetVendorBtnGraNo@@3PAHA DD 0d73dH			; sStreetVendorBtnGraNo
	DD	0d73cH
?chatRoomBtnGraNo@@3PAHA DD 06756H			; chatRoomBtnGraNo
	DD	06755H
?menuBtnGraNo@@3PAHA DD 065f5H				; menuBtnGraNo
	DD	065f6H
?cardBtnGraNo@@3PAHA DD 065f7H				; cardBtnGraNo
	DD	065f8H
?tradeBtnGraNo@@3PAHA DD 0667aH				; tradeBtnGraNo
	DD	0667bH
?angelBtnGraNo@@3PAHA DD 089c9H				; angelBtnGraNo
	DD	089c8H
?channelWNFlag@@3FA DW 01H				; channelWNFlag
	ORG $+2
?channelBtnGraNo@@3PAHA DD 0667dH			; channelBtnGraNo
	DD	0667eH
?partyBtnEnableFlag@@3FA DW 01H				; partyBtnEnableFlag
	ORG $+2
?partyBtnGraNo@@3PAHA DD 065f9H				; partyBtnGraNo
	DD	065faH
?helpBtnGraNo@@3PAHA DD 0d7c6H				; helpBtnGraNo
	DD	0d7c5H
?joinBattleBtnEnableFlag@@3FA DW 01H			; joinBattleBtnEnableFlag
	ORG $+2
?joinBattleHelpMsgFlag@@3FA DW 01H			; joinBattleHelpMsgFlag
	ORG $+2
?joinBattleBtnGraNo@@3PAHA DD 065ffH			; joinBattleBtnGraNo
	DD	06600H
?duelBtnGraNo@@3PAHA DD 06601H				; duelBtnGraNo
	DD	06602H
?actBtnGraNo@@3PAHA DD 06603H				; actBtnGraNo
	DD	06604H
?amPmAnimeGraNo@@3PAHA DD 06606H			; amPmAnimeGraNo
	DD	06607H
	DD	06608H
	DD	06605H
?ridelistBtnGraNo@@3PAHA DD 0d7c8H			; ridelistBtnGraNo
	DD	0d7c9H
?vipshopBtnGraNo@@3PAHA DD 0d73dH			; vipshopBtnGraNo
	DD	0d73cH
?iTeacherSystemBtnGraNo@@3PAHA DD 06f8bH		; iTeacherSystemBtnGraNo
	DD	06f8aH
?channelName@@3PAY0BE@DA DB ' ', 0baH, 0ceH, 0c1H, 0b7H, 0c7H, 0c1H, 0b7H
	DB	0ceH, 0c7H, 0caH, ' ', 00H			; channelName
	ORG $+7
	DB	' ', 0c1H, 0b7H, 0c0H, 0e5H, 0b1H, 0e2H, 0b4H, 0c9H, ' ', 00H
	ORG $+9
	DB	0baH, 0ceH, 0c1H, 0b7H, 0b0H, 0d4H, 0bdH, 0c3H, 0c6H, 0c7H
	DB	00H
	ORG $+9
	DB	' ', 0c3H, 0a4H, ' ', 0b3H, 0ceH, ' ', 0c1H, 0beH, ' ', 0b7H
	DB	0e1H, ' ', 00H
	ORG $+6
	DB	00H
	ORG $+19
?pageStr@@3PAY09DA DB 0c0H, 0ccH, 0c0H, 0fcH, 00H	; pageStr
	ORG $+5
	DB	0b4H, 0d9H, 0c0H, 0bdH, 00H
	ORG $+5
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	__snprintf
PUBLIC	?initFieldProc@@YAXXZ				; initFieldProc
PUBLIC	?resetFieldProc@@YAXXZ				; resetFieldProc
PUBLIC	?fieldProc@@YAXXZ				; fieldProc
PUBLIC	?fieldProc2@@YAXXZ				; fieldProc2
PUBLIC	?drawField@@YAXXZ				; drawField
PUBLIC	?checkFieldMenuFlag@@YAHXZ			; checkFieldMenuFlag
PUBLIC	?closeCharActionAnimeChange@@YAXXZ		; closeCharActionAnimeChange
PUBLIC	?closeEtcSwitch@@YAXXZ				; closeEtcSwitch
PUBLIC	?closeJoinChannelWN@@YAXXZ			; closeJoinChannelWN
PUBLIC	?disconnectServer@@YAHXZ			; disconnectServer
PUBLIC	?drawFieldInfoWin@@YAXXZ			; drawFieldInfoWin
PUBLIC	?actionShortCutKeyProc@@YAXXZ			; actionShortCutKeyProc
PUBLIC	?SpecAnim@@YAXH@Z				; SpecAnim
PUBLIC	?ReleaseSpecAnim@@YAXXZ				; ReleaseSpecAnim
PUBLIC	?TeacherSystemWndfunc@@YAXHPAD@Z		; TeacherSystemWndfunc
PUBLIC	?SellPriceWndfunc@@YAHXZ			; SellPriceWndfunc
PUBLIC	?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z ; GetEmptyShowSellItem
PUBLIC	?StreetVendorWndfunc@@YAX_NPAD@Z		; StreetVendorWndfunc
PUBLIC	?StreetVendorBuyWndfunc@@YAXPAD@Z		; StreetVendorBuyWndfunc
PUBLIC	?initCharActionAnimeChange@@YAXXZ		; initCharActionAnimeChange
PUBLIC	?charActionAnimeChange@@YAHXZ			; charActionAnimeChange
PUBLIC	?initEtcSwitch@@YAXXZ				; initEtcSwitch
PUBLIC	?etcSwitch@@YAHXZ				; etcSwitch
PUBLIC	?initJoinChannelWN@@YAXXZ			; initJoinChannelWN
PUBLIC	?joinChannelWN@@YAXXZ				; joinChannelWN
PUBLIC	?initJoinChannel2WN@@YAXPAD@Z			; initJoinChannel2WN
PUBLIC	?closeJoinChannel2WN@@YAXXZ			; closeJoinChannel2WN
PUBLIC	?joinChannel2WN@@YAXXZ				; joinChannel2WN
PUBLIC	?leaderFuncWN@@YAXXZ				; leaderFuncWN
PUBLIC	?crossAniRelease@@YAXXZ				; crossAniRelease
PUBLIC	?ImmobileAniRelease@@YAXXZ			; ImmobileAniRelease
PUBLIC	?AniRandomRelease@@YAXXZ			; AniRandomRelease
PUBLIC	?ReadAniFile@@YAHH@Z				; ReadAniFile
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_01MMEEDKFM@X@				; `string'
PUBLIC	??_C@_0O@MNFNNHCK@?$CF?920sx?$CF3d?$CF13s@	; `string'
PUBLIC	??_C@_0O@MINOFDLM@?$CF?920sx?$CF3d?$CF13d@	; `string'
PUBLIC	??_C@_03CAPDGGPL@?$DP?K?$MA@			; `string'
PUBLIC	??_C@_0O@OKDFECEM@?$CF?917s?$CF?912s?$CF8s@	; `string'
PUBLIC	??_C@_0O@OPLGMGNK@?$CF?917s?$CF?912s?$CF8d@	; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_09CGALFHNJ@?$CFd?$HM?$CFd?$HM?$CFd?$HM@	; `string'
PUBLIC	??_C@_0P@DJCPLGCF@?$LO?n?$LM?$KN?$LP?$MA?$LN?J?$LN?C?$LP?$MA?$CB?$CB@ ; `string'
PUBLIC	??_C@_09KAHBFCEF@S?$HM?$CFd?$HM?$CFs?$CFs@	; `string'
PUBLIC	??_C@_06EFALBHEL@R?$HMP?$HM?91@			; `string'
PUBLIC	??_C@_02PFGFFPDM@E?$HM@				; `string'
PUBLIC	??_C@_04MPOIGBFL@SELL@				; `string'
PUBLIC	??_C@_03IFADCKOJ@?$CFd?$HM@			; `string'
PUBLIC	??_C@_07PKADKLEL@B?$HM?$CFd?$HM?$CFs@		; `string'
PUBLIC	??_C@_02PJDALANN@N?$HM@				; `string'
PUBLIC	??_C@_09HBDNCLCF@?G?y?$LL?s?5?$LA?$KB?$LA?$NN@	; `string'
PUBLIC	??_C@_0L@LDFFIDCJ@?$LD?$LL?$LB?$LI?$LH?B?$CI?$CFs?$CJ@ ; `string'
PUBLIC	??_C@_07HLBLNMPK@?$CFd?5?H?$LI?$MA?$PM@		; `string'
PUBLIC	??_C@_06EGBMLAEA@Lv?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06HJFMPHBK@?$LD?$LL?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06MBHIJFEF@?$LA?x?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06GNDMLDHN@?$LJ?f?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06GNIPPDB@?$LM?x?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06LBGNCPKK@?A?v?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06DMNCJOEB@?$LM?v?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06ECLMJCEN@?H?$KN?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06INCIIBEP@?G?$LD?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_06CFCEDMBI@?C?f?$KD?$LK?$CFd@		; `string'
PUBLIC	??_C@_0M@LGAMIGJ@?$LB?b?$LM?z?5?$CFd?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_0BA@KFKPCCNN@?$LN?$LK?E?f?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BM@PJIKDD@?$LJ?Y?$LF?p?5?$LO?F?$MA?L?E?$NL?5?$LM?$LN?$LM?G?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CH@BCAEDIAE@?G?y?A?$KE?5?$LA?$KB?$LA?$NN?5?$LJ?$LA?G?$LA?$MA?$LK?5?$MA?O?$MA?O?$MA?L?5?$LA?m?$LI?$KG?5?$LM?v@ ; `string'
PUBLIC	??_C@_05LNGOBBOC@D?$HM?$CFd?$HM@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_02PIPCNKOK@O?$HM@				; `string'
PUBLIC	??_C@_02PACKEJLJ@B?$HM@				; `string'
PUBLIC	??_C@_03DDDPELM@D?$HMD@				; `string'
PUBLIC	??_C@_0CB@GPKKMDCO@?$LD?k?A?$KB?$LL?s?$LP?$KB?$LM?$KN?5?$LB?$LD?H?$KP?$MA?$LL?5?G?X?$LM?$KN?$LE?B?5?$LO?H?5?$LF?H?$LE@ ; `string'
PUBLIC	??_C@_02OPIIDOKH@P?$HM@				; `string'
PUBLIC	??_C@_0DA@KIPDLLGN@P?$HM?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?A?v?5?$LO?J?$LO?F?5?A?$KE?$LK?$LI?$LI?$KG?5?H@ ; `string'
PUBLIC	??_C@_03OAFDEMMP@S?$HMP@			; `string'
PUBLIC	??_C@_0CD@HJEPKLDC@?$MA?L?$LA?w?$LP?$KB?$LM?$KN?5?F?D?F?$LM?$LI?$KG?5?$LB?$LI?$LM?$LK?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE@ ; `string'
PUBLIC	??_C@_0BD@KALKBBEH@?$LI?$NO?$LE?$LK?$LI?$KG?5?$LM?$LD?A?$KE?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BM@BDLIIEIH@?$LL?s?$LE?k?$LJ?f?$LA?z?5?$LI?m?G?T?$MA?$LL?5?$LB?$LD?H?$KP?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BJ@CHLJOFEL@?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@ ; `string'
PUBLIC	??_C@_0BM@JPNLKOND@?$LL?s?$LE?k?$LJ?f?$MA?G?5?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BO@NDPFBKJO@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LB?$LD?H?$KP?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0CO@MJKCDDG@?F?m?$LI?$KO?G?O?$LA?T?5?$MA?$KH?D?$KB?$LI?$KG?5?$MA?L?$LF?$LP?G?R?$LM?v?$MA?V?$LE?B?5?$LP?v@ ; `string'
PUBLIC	??_C@_0BJ@EEGCGAJN@CHAOS?5?$LM?$KN?$LJ?v?5VIP?$LL?s?A?$KB?$MA?T?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BO@GJIBCGFI@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LE?k?$MA?$PM?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BD@KFAJKCNC@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BJ@NBCGMCO@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@ ; `string'
PUBLIC	??_C@_0BD@KMDDMCEP@?$MA?$PM?E?u?$LI?$KG?5?$LA?$PM?$MA?$PM?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BK@EJDCDLOD@?D?y?$LN?$LK?F?$KO?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BP@JAGIJNBP@?D?$LD?$LI?$KP?E?M?5?$LO?W?$LM?G?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0CB@NCIEAEIK@?D?$LD?$LI?$KP?E?M?$MA?G?5?E?$LO?$LN?B?5?F?d?F?$KO?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0CD@LEKAGBMD@?G?X?$LE?g?A?v?$LP?$KK?$LP?$KB?5?$MA?V?$LE?B?5?F?D?F?$LM?$LI?$KG?5?$LA?K?$LL?v?G?U?$LE?O@ ; `string'
PUBLIC	??_C@_0L@LEPHHCI@?5?$LO?I?$KB?$KB?$KB?$KB?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0L@LOMDAPBP@?5?$MA?O?$LO?n?$LD?$KK?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0L@FNPFLOKG@?5?$LM?U?H?g?$LF?i?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@CPNFDNI@?5?$LA?H?$KB?$KB?$KB?$KB?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0L@LFKBOHAB@?5?$MA?N?$LL?g?G?O?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@BBJFHFFA@?5?$LO?$LC?$LH?$KP?A?v?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0L@HMKFIAIO@?5?$LB?b?$LL?$LF?G?O?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@EPLKDNIL@?5?$LA?x?$LA?$NN?G?O?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@DDIKGKGC@?5?H?$KN?$LI?$KG?$LD?$LL?$LE?Y?5@ ; `string'
PUBLIC	??_C@_0L@FLKMCCFP@?5?$LJ?f?$LO?n?G?O?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@CHKOFNFO@?5?$LN?$LN?F?$NL?G?O?$LE?Y?5@	; `string'
PUBLIC	??_C@_0L@NJDBIKEM@?$LF?$KF?$KB?$KB?$LJ?L?$KB?$KB?A?v@ ; `string'
PUBLIC	??_C@_0L@GOBFHACF@?$LE?x?$KB?$KB?A?v?$KB?$KB?$LE?Y@ ; `string'
PUBLIC	??_C@_0CI@DLPPPDPB@?A?$KG?$MA?Z?$LI?$KO?$LP?$KB?5?$LO?I?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5@ ; `string'
PUBLIC	??_C@_0CD@HLCPDIKM@?$MA?O?$LO?n?$LM?$KN?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CG@EHJAFDMH@?$LM?U?$MA?$LL?5?H?g?$LF?e?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@ ; `string'
PUBLIC	??_C@_0BP@OCLIPLAL@?$LA?H?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL8?$CJ@ ; `string'
PUBLIC	??_C@_0CD@KEHHLNJC@?$MA?N?$LL?g?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CD@JMKADJMO@?$LO?$LC?$LH?$KP?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CD@CMMPEHFI@?$LB?b?$LL?$LF?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CD@OMLIKOJM@?$LA?x?$LA?$NN?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CE@OIDAHAAG@?H?$KN?$LI?$KG?5?$LD?$LL?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtr@ ; `string'
PUBLIC	??_C@_0CD@MIHLAAOD@?$LJ?f?$LO?n?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CD@NKKFDBOL@?$LN?$LN?F?$NL?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ ; `string'
PUBLIC	??_C@_0CG@FILFJCML@?E?$LI?$LA?$NN?$MA?$LL?5?$MA?T?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@ ; `string'
PUBLIC	??_C@_0CB@DPEEFHJC@?$LE?x?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL?2@ ; `string'
PUBLIC	??_C@_0L@NHKEOPKL@?$MA?$NL?$LO?w?C?$KC?$LE?$NN?$LB?b@ ; `string'
PUBLIC	??_C@_0L@OLEDJDPG@?F?D?5?5?5?5?F?$LM?$KD?$LK@	; `string'
PUBLIC	??_C@_0L@MAOAOHML@?$LF?$OA?5?5?5?5?$LO?s?$KD?$LK@ ; `string'
PUBLIC	??_C@_0L@POPIGLPO@?$LI?m?G?T?$LB?$LD?H?$KP?$KD?$LK@ ; `string'
PUBLIC	??_C@_0BF@IDENONED@?C?$KE?5?5?5?5?$LD?N?5?5?5?5?$LJ?v?5?5?5?5?F?$LA@ ; `string'
PUBLIC	??_C@_0L@HENHCGEF@?$LA?E?5?5?5?5?$LH?$KB?$KD?$LK@ ; `string'
PUBLIC	??_C@_07MIKFFMHF@?5?$KD?N?5?5?$KD?O@		; `string'
PUBLIC	??_C@_07CHOGEIED@?5?$KD?Y?$KD?E?$KD?S@		; `string'
PUBLIC	??_C@_0BJ@NPLNHFNN@?$LE?Y?$LI?$KF?$LL?g?$LG?w?F?$MA?G?U?$LH?y?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BJ@EJIPNKEA@?$LE?Y?$LI?$KF?$LL?g?$LG?w?$LF?$LF?$MA?$PM?$LJ?$NO?$MA?$LL?A?v?$LM?$LD?A?$KE?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BH@GAKCDBLG@?$LI?m?G?T?$LB?$LD?H?$KP?G?c?$LP?k?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BF@NLHMJPHG@?$LA?$KC?C?$KE?$LD?N?$LM?$LD?A?$KE?$LG?G?$LE?B?G?X?A?$KG?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BD@DBDDAFOG@?$LA?E?$LH?$KB?$LM?v?$LG?t?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BL@JJOLNGNO@?$LA?T?$MA?S?$MA?N?E?M?F?d?$MA?L?$LN?$LK?G?X?$LL?s?$LF?$LF?$LM?$LD?A?$KE?$KB?$KD@ ; `string'
PUBLIC	??_C@_06FNJBCBKN@?$LB?S?$LM?S?$LI?$LL@		; `string'
PUBLIC	??_C@_06IAKMCPJ@?$LA?$KB?A?$LH?$LI?$LL@		; `string'
PUBLIC	??_C@_08LIEPCPDK@?$LA?f?$LI?E?C?$KE?$LD?N@	; `string'
PUBLIC	??_C@_08DKNMBPNK@?$LE?k?H?$KN?$MA?z?$MA?e@	; `string'
PUBLIC	??_C@_0BJ@BCJNPCLP@?$LA?$KB?A?$LH?$LP?$KB?$LA?$KB?$MA?T?G?O?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BD@JIKBMICG@?$LA?m?$LP?k?$LF?G?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_02CHHAKFFB@w?$CL@				; `string'
PUBLIC	??_C@_0BB@BLGDDDEM@data?2channel?4dat@		; `string'
PUBLIC	??_C@_0BJ@DLFHHIDJ@?C?$KE?$LD?N?5?$LM?$LD?A?$KE?5?F?D?$MA?O?5?$MA?P?$LB?b?5?$LN?G?F?P@ ; `string'
PUBLIC	??_C@_0BI@JGAFKJCL@?$LI?$NO?$LE?$LK?5?$LM?$LD?A?$KE?C?$KC?$MA?$LL?5?$LE?$NN?$LN?$MA?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0CF@MCKEAICK@?$LD?k?A?$KB?$LP?$KB?$LM?$KN?$LA?E?$LH?$KB?$LP?$KN?$LM?v?$LO?x?$MA?$LN?$KB?$KC?F?D?F?$LM?$LJ?W?$MA?$PM?E@ ; `string'
PUBLIC	??_C@_0N@NBGJJJHP@?$LI?$NO?$LE?$LK?C?$KC?$LE?$NN?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_0L@OCGDIFAB@?5640?5x?5480@		; `string'
PUBLIC	??_C@_0L@FCDLGIBD@?5320?5x?5280@		; `string'
PUBLIC	??_C@_0L@FFMHNIN@?5800?5x?5600@			; `string'
PUBLIC	??_C@_0L@KHKHJBNB@1024?5x?5768@			; `string'
PUBLIC	??_C@_04HDOCAJNK@?$CFs?$CFs@			; `string'
PUBLIC	??_C@_0CA@MLBEKKLD@?$LM?$KN?$LJ?v?$LP?M?$MA?G?5?$LP?$KM?$LA?a?$MA?L?5?A?$LO?$LH?a?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BD@KHIHNLHO@?$LF?$LJ?$LO?F?$LA?$KB?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_04IJNKKJEO@?H?$KO?$MA?N@			; `string'
PUBLIC	??_C@_04PNGENDLA@S?$HMD2@			; `string'
PUBLIC	??_C@_01CKDDGHAB@D@				; `string'
PUBLIC	??_C@_06KOPCAPBC@C?$HMJ?$HM?91@			; `string'
PUBLIC	??_C@_06JEJPCC@S?$HMSELF@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0BD@CBGDDGMA@?$LA?$KB?A?$LH?$LM?$LM?$LK?N?A?$KE?$LK?$LI?$LK?$LI?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BF@MBHIEFGB@?C?$OA?$LK?$LJ?$LL?g?$MA?G?F?$KP?$LK?$LA?G?Q?$LB?b?$LE?I?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BF@EKJBMCBD@?$LK?N?A?$LH?$LA?T?$LN?C?F?G?$LB?b?$LE?I?$LL?g?$LP?k?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BD@BKOBNADD@?A?$LH?$MA?e?$LJ?f?$LM?$NL?$LB?b?$LE?I?$LC?t?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BJ@MOILBLMI@?C?$KE?F?C?C?$KE?$LD?N?$LI?$NO?$LE?$LK?$LP?$KB?$LM?$KN?$LD?$KK?$LA?$KB?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_0P@CBBBPELI@?$MA?L?C?$KE?$LD?N?$LP?$KB?$LA?$KB?$MA?T?$KB?$KD@ ; `string'
PUBLIC	??_C@_0L@EIKLEHBI@?$MA?L?C?$KC?$LE?$NN?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_06GHCNPHLL@C?$HMJ?$HM?$CFd@		; `string'
PUBLIC	??_C@_08JGHLAOEI@?5?B?$PM?5?5?$LA?$KB?5@	; `string'
PUBLIC	??_C@_08CMINFIIP@?5?E?$LL?5?5?E?p?5@		; `string'
PUBLIC	??_C@_0BA@FLCLDJN@?$FL?5?C?$KE?5?$LD?N?5?H?$LI?5?$LP?x?5?$FN@ ; `string'
PUBLIC	??_C@_0BI@COJOKGGA@?G?v?$MA?g?5?$CFd?5?$MA?L?$LK?N?A?$LH?$MA?G?5?$LA?$KB?A?$LH?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BJ@BJPJPJLI@?$MA?V?$LE?Y?5?$CFd?5?$MA?L?C?$KE?$LD?N?$MA?G?$LL?g?$LG?w?$LF?i?$KB?$KD@ ; `string'
PUBLIC	??_C@_05PAKAMAIL@C?$HMJ?$HM5@			; `string'
PUBLIC	??_C@_05CPEMAIOC@L?$HMF?$HM1@			; `string'
PUBLIC	??_C@_05EAPBOIIG@L?$HML?$HM1@			; `string'
PUBLIC	??_C@_05GLNMLLEF@L?$HML?$HM2@			; `string'
PUBLIC	??_C@_0L@CJCIOOAN@L?$HMCHANGE?$HML@		; `string'
PUBLIC	??_C@_0N@NIGFCJOO@?5?5?A?$LH?$MA?e?$LJ?f?$LM?$NL?5?5@ ; `string'
PUBLIC	??_C@_0P@OGFFOIDE@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LA?$PM?$LI?$KO@ ; `string'
PUBLIC	??_C@_0L@DOBBGKCH@?5?$LK?N?A?$LH?C?J?$LE?k?5@	; `string'
PUBLIC	??_C@_0L@MJPGOABE@?5?$LP?$KM?$LB?$LI?$LF?$LP?$MA?G?5@ ; `string'
PUBLIC	??_C@_0BB@BPLOID@?5?5?A?$LH?$MA?e?$LB?G?G?Q?$LK?N?$LP?$KJ?5?5@ ; `string'
PUBLIC	??_C@_0CD@LJIHMIMO@?A?$LH?$MA?e?$MA?$LK?5?$LK?N?A?$LH?$LP?x?$MA?$PM?C?$LM?$LP?$KB?$LA?T?5?$LA?x?A?v?G?U?$LE?O?$LE@ ; `string'
PUBLIC	??_C@_0BB@MGNAPNJL@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LI?q?$LH?O?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BF@CGFLPMMC@?$LK?N?A?$LH?$LJ?f?$LJ?$KO?C?J?C?$LL?$MA?e?$MA?$NL?$LM?$LK?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BL@EJEFDMMK@?E?$LO?$LN?B?$LJ?h?$LP?l?$LB?b?$MA?$KH?G?Q?$LF?$LP?$MA?G?$LM?$KN?$MA?$NL?$LM?$LK?$KB?$KD@ ; `string'
PUBLIC	??_C@_0L@MGMKLDIO@map?2?$CFd?4ani@		; `string'
PUBLIC	??_C@_0BK@GGAGFANJ@?$LE?g?$LN?E?$MA?$LK?$LN?D?$LK?$LA?G?R?$LM?v?$MA?V?$LN?$MA?$LE?O?$LB?n?5?$CFs@ ; `string'
PUBLIC	??_C@_0BD@KCELJCBE@?$LI?$OA?E?d?$LA?$KB?$LF?G?$LO?n?$LK?$LI?$LM?$LM?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@		; `string'
PUBLIC	??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@		; `string'
PUBLIC	??_C@_04PNIAPCPG@O?$HM?$CFd@			; `string'
PUBLIC	??_C@_0BJ@HGNGOOJL@?$LI?$OA?E?d?$LH?N?5?$LE?$KJ?$LB?$LM?5?$LM?$LB?E?C?G?U?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_08OHAGCECG@?$LI?$OA?E?d?$LL?s?E?B@	; `string'
PUBLIC	??_C@_0N@FGGIBINO@?$LI?$OA?E?d?$MA?L?$LI?$KH?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_06OLECLEEB@?$LL?s?E?B?$KD?$LK@		; `string'
PUBLIC	??_C@_06KCABBADG@Online@			; `string'
PUBLIC	??_C@_07BMIEDOEC@Offline@			; `string'
PUBLIC	??_C@_06KFNAOAIJ@?$MA?$LK?G?O?$KD?$LK@		; `string'
PUBLIC	??_C@_04ELDJJCAA@?$LO?F?$LE?O@			; `string'
PUBLIC	??_C@_06MOLOGMLJ@?A?$LO?5?5?$LH?a@		; `string'
PUBLIC	??_C@_0M@KOAEBMHD@?$LI?$OA?E?d?$MA?G?5?$LN?G?$LA?$NN@ ; `string'
PUBLIC	??_C@_0CF@CIJBHHMG@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LI?i?$LI?E?$LH?B?$LA?$KB?D?$KB?$LA?$KB?$LA?$KI?$LM?R?G?U?$LE@ ; `string'
PUBLIC	??_C@_0BJ@NKJNALFN@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_02PBOICDIO@C?$HM@				; `string'
PUBLIC	__real@3f000000
PUBLIC	__real@3f00000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4010000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@401c000000000000
PUBLIC	__real@4082780000000000
PUBLIC	__real@42800000
PUBLIC	__real@c000000000000000
PUBLIC	__real@c010000000000000
PUBLIC	__real@c018000000000000
PUBLIC	__real@c020000000000000
PUBLIC	__real@c028000000000000
PUBLIC	__real@c03f000000000000
PUBLIC	__real@c072d00000000000
PUBLIC	__real@c077d00000000000
PUBLIC	__real@c082780000000000
PUBLIC	__real@c08f480000000000
PUBLIC	__xmm@0000000000000007000000020000000b
PUBLIC	__xmm@00000000000000100000000400000001
PUBLIC	__xmm@00000001000000090000000a00000008
PUBLIC	__xmm@00000004000000060000000300000005
PUBLIC	__xmm@00000200000001000000008000000040
PUBLIC	__xmm@fffffffefffffffefffffffefffffffe
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	___report_rangecheckfailure:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fwrite:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_rand:PROC
EXTRN	_atoi:PROC
EXTRN	_itoa:PROC
EXTRN	_strncpy:PROC
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	__imp__CreateFileA@28:PROC
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SendMessageA@16:PROC
EXTRN	?GetAction@@YAPAUaction@@EI@Z:PROC		; GetAction
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockBoxDispBuffer@@YAXHHHHEHH@Z:PROC		; StockBoxDispBuffer
EXTRN	?rand2@@YAHXZ:PROC				; rand2
EXTRN	?StockChatBufferLine@@YAXPADEH@Z:PROC		; StockChatBufferLine
EXTRN	?GetStrLastByte@@YAHPAD@Z:PROC			; GetStrLastByte
EXTRN	?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z:PROC	; GetKeyInputFocus
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z:PROC	; StockFontBuffer2
EXTRN	?openServerWindow@@YAXHHHHPAD@Z:PROC		; openServerWindow
EXTRN	?selGraId@@YAHPAHH@Z:PROC			; selGraId
EXTRN	?pushGraId@@YAHPAHH@Z:PROC			; pushGraId
EXTRN	?selFontId@@YAHPAHH@Z:PROC			; selFontId
EXTRN	?focusGraId@@YAHPAHH@Z:PROC			; focusGraId
EXTRN	?focusFontId@@YAHPAHH@Z:PROC			; focusFontId
EXTRN	?setPcAction@@YAXH@Z:PROC			; setPcAction
EXTRN	?InitItem@@YAXHHH@Z:PROC			; InitItem
EXTRN	?InitMenu2@@YAXXZ:PROC				; InitMenu2
EXTRN	?CheckMenuFlag@@YAHXZ:PROC			; CheckMenuFlag
EXTRN	?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z:PROC	; MakeWindowDisp
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?SelectChatRoom@@YAXXZ:PROC			; SelectChatRoom
EXTRN	?ChatRoomWnd@@YAXXZ:PROC			; ChatRoomWnd
EXTRN	?getRouteData@@YAXHPAH0@Z:PROC			; getRouteData
EXTRN	?camMapToGamen@@YAXMMPAM0@Z:PROC		; camMapToGamen
EXTRN	?lssproto_SaMenu_send@@YAXHHHH@Z:PROC		; lssproto_SaMenu_send
EXTRN	?lssproto_Partyauto_send@@YAXH@Z:PROC		; lssproto_Partyauto_send
EXTRN	?lssproto_DU_send@@YAXHHH@Z:PROC		; lssproto_DU_send
EXTRN	?lssproto_JB_send@@YAXHHH@Z:PROC		; lssproto_JB_send
EXTRN	?lssproto_LB_send@@YAXHHH@Z:PROC		; lssproto_LB_send
EXTRN	?lssproto_AAB_send@@YAXHHH@Z:PROC		; lssproto_AAB_send
EXTRN	?lssproto_TK_recv@@YAXHHPADH@Z:PROC		; lssproto_TK_recv
EXTRN	?lssproto_FS_send@@YAXHH@Z:PROC			; lssproto_FS_send
EXTRN	?lssproto_PR_send@@YAXHHHH@Z:PROC		; lssproto_PR_send
EXTRN	?lssproto_AC_send@@YAXHHHH@Z:PROC		; lssproto_AC_send
EXTRN	?lssproto_TD_send@@YAXHPAD@Z:PROC		; lssproto_TD_send
EXTRN	?lssproto_FM_send@@YAXHPAD@Z:PROC		; lssproto_FM_send
EXTRN	?lssproto_PETST_send@@YAXHHH@Z:PROC		; lssproto_PETST_send
EXTRN	?lssproto_CHATROOM_send@@YAXHPAD@Z:PROC		; lssproto_CHATROOM_send
EXTRN	?lssproto_STREET_VENDOR_send@@YAXHPAD@Z:PROC	; lssproto_STREET_VENDOR_send
EXTRN	?lssproto_TEACHER_SYSTEM_send@@YAXHPAD@Z:PROC	; lssproto_TEACHER_SYSTEM_send
EXTRN	?old_lssproto_DU_send@@YAXHHH@Z:PROC		; old_lssproto_DU_send
EXTRN	?old_lssproto_JB_send@@YAXHHH@Z:PROC		; old_lssproto_JB_send
EXTRN	?old_lssproto_AAB_send@@YAXHHH@Z:PROC		; old_lssproto_AAB_send
EXTRN	?old_lssproto_FS_send@@YAXHH@Z:PROC		; old_lssproto_FS_send
EXTRN	?old_lssproto_PR_send@@YAXHHHH@Z:PROC		; old_lssproto_PR_send
EXTRN	?old_lssproto_AC_send@@YAXHHHH@Z:PROC		; old_lssproto_AC_send
EXTRN	?old_lssproto_TD_send@@YAXHPAD@Z:PROC		; old_lssproto_TD_send
EXTRN	?old_lssproto_FM_send@@YAXHPAD@Z:PROC		; old_lssproto_FM_send
EXTRN	?createWaterAnimation@@YAPAUaction@@HHHH@Z:PROC	; createWaterAnimation
EXTRN	?checkCharObjPoint@@YAHHHF@Z:PROC		; checkCharObjPoint
EXTRN	?checkCharObjPointStatus@@YAHHHFI@Z:PROC	; checkCharObjPointStatus
EXTRN	?checkCharObjPointNotStatus@@YAHHHFI@Z:PROC	; checkCharObjPointNotStatus
EXTRN	?GetImeString@@YAPADXZ:PROC			; GetImeString
EXTRN	?ShowBottomLineString@@YAXHPAD@Z:PROC		; ShowBottomLineString
EXTRN	?play_se@@YAHHHH@Z:PROC				; play_se
EXTRN	?getStringToken@@YAHPADDHH0@Z:PROC		; getStringToken
EXTRN	?makeStringFromEscaped@@YAPADPAD@Z:PROC		; makeStringFromEscaped
EXTRN	?CheckNumber@@YAXPADH@Z:PROC			; CheckNumber
EXTRN	?CheckSpace@@YAXPAD@Z:PROC			; CheckSpace
EXTRN	?HelpProc@@YAHXZ:PROC				; HelpProc
EXTRN	?SaveChatData@@YAXPADD_N@Z:PROC			; SaveChatData
EXTRN	?JL_RESOMODE@@YAXH@Z:PROC			; JL_RESOMODE
EXTRN	?SetResoMode@@YAXH@Z:PROC			; SetResoMode
EXTRN	?ChangeWindowMode@@YAXXZ:PROC			; ChangeWindowMode
EXTRN	?RecoverDirectDraw@@YAXXZ:PROC			; RecoverDirectDraw
EXTRN	?waterAniProc@@YAXPAUaction@@@Z:PROC		; waterAniProc
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?DISPLACEMENT_X@@3HA:DWORD			; DISPLACEMENT_X
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?hWnd@@3PAUHWND__@@A:DWORD			; hWnd
EXTRN	?ResoMode@@3HA:DWORD				; ResoMode
EXTRN	?gmsv@@3PAUgameserver@@A:BYTE			; gmsv
EXTRN	?ProcNo@@3IA:DWORD				; ProcNo
EXTRN	?joy_trg@@3PAKA:QWORD				; joy_trg
EXTRN	?MyChatBuffer@@3USTR_BUFFER@@A:BYTE		; MyChatBuffer
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitFontNo@@3HA:DWORD				; HitFontNo
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?CG_FIELD_SV_SELL_PANEL@@3HA:DWORD		; CG_FIELD_SV_SELL_PANEL
EXTRN	?CG_FIELD_SV_SELL_PRICE_PANEL@@3HA:DWORD	; CG_FIELD_SV_SELL_PRICE_PANEL
EXTRN	?windowTypeWN@@3HA:DWORD			; windowTypeWN
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?prSendMode@@3FA:WORD				; prSendMode
EXTRN	?prSendFlag@@3FA:WORD				; prSendFlag
EXTRN	?jbSendFlag@@3FA:WORD				; jbSendFlag
EXTRN	?duelSendFlag@@3FA:WORD				; duelSendFlag
EXTRN	?tradeFlag@@3FA:WORD				; tradeFlag
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
EXTRN	?partyModeFlag@@3FA:WORD			; partyModeFlag
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?ItemBuffer@@3PAUITEM_BUFFER@@A:BYTE		; ItemBuffer
EXTRN	?MapWmdFlagBak@@3HA:DWORD			; MapWmdFlagBak
EXTRN	?TalkMode@@3HA:DWORD				; TalkMode
EXTRN	?pChtChanlWnd@@3PAUaction@@A:DWORD		; pChtChanlWnd
EXTRN	?pSelChanlWnd@@3PAUaction@@A:DWORD		; pSelChanlWnd
EXTRN	?nowFloorName@@3PADA:BYTE			; nowFloorName
EXTRN	?nowFloor@@3HA:DWORD				; nowFloor
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?nowVx@@3MA:DWORD				; nowVx
EXTRN	?nowVy@@3MA:DWORD				; nowVy
EXTRN	?moveRouteCnt@@3FA:WORD				; moveRouteCnt
EXTRN	?sendEnFlag@@3FA:WORD				; sendEnFlag
EXTRN	?eventWarpSendFlag@@3FA:WORD			; eventWarpSendFlag
EXTRN	?eventEnemySendFlag@@3FA:WORD			; eventEnemySendFlag
EXTRN	?bNewServer@@3HA:DWORD				; bNewServer
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?disconnectServerFlag@@3HA:DWORD		; disconnectServerFlag
EXTRN	?SaTime@@3UtagLSTIME@@A:BYTE			; SaTime
EXTRN	?SaTimeZoneNo@@3HA:DWORD			; SaTimeZoneNo
EXTRN	?nPetItemEquipBmpNumber@@3PAY01HA:BYTE		; nPetItemEquipBmpNumber
EXTRN	?HelpProcNo@@3FA:WORD				; HelpProcNo
EXTRN	?jumpHelpPage@@3FA:WORD				; jumpHelpPage
EXTRN	?jumpHelpSeg@@3FA:WORD				; jumpHelpSeg
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?WaterAct2@@3PAUaction@@A DD 01H DUP (?)		; WaterAct2
?WaterAct@@3PAPAUaction@@A DD 032H DUP (?)		; WaterAct
?WaterAct3@@3PAPAUaction@@A DD 01eH DUP (?)		; WaterAct3
?pActSellPriceWnd@@3PAUaction@@A DD 01H DUP (?)		; pActSellPriceWnd
_BSS	ENDS
;	COMDAT ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
_BSS	SEGMENT
?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A DB 0128H DUP (?) ; `SellPriceWndfunc'::`2'::str_bufferMoney
_BSS	ENDS
;	COMDAT ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
_BSS	SEGMENT
?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA DD 07H DUP (?) ; `StreetVendorWndfunc'::`2'::iBtn
_BSS	ENDS
;	COMDAT ?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
_BSS	SEGMENT
?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA DD 014H DUP (?) ; `StreetVendorWndfunc'::`2'::iSellItemBtn
_BSS	ENDS
;	COMDAT ?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
_BSS	SEGMENT
?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA DD 0fH DUP (?) ; `StreetVendorWndfunc'::`2'::iItemOnSell
_BSS	ENDS
;	COMDAT ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
_BSS	SEGMENT
?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorWndfunc'::`2'::iShowPet
_BSS	ENDS
;	COMDAT ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
_BSS	SEGMENT
?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA DD 05H DUP (?) ; `StreetVendorWndfunc'::`2'::iPetOnSell
_BSS	ENDS
;	COMDAT ?iGetSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
_BSS	SEGMENT
?iGetSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorWndfunc'::`2'::iGetSellPrice
_BSS	ENDS
;	COMDAT ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
_BSS	SEGMENT
?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorWndfunc'::`2'::iListStart
_BSS	ENDS
;	COMDAT ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
_BSS	SEGMENT
?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A DD 01H DUP (?) ; `StreetVendorWndfunc'::`2'::pItem
_BSS	ENDS
;	COMDAT ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA
_BSS	SEGMENT
?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA DB 01H DUP (?) ; `StreetVendorWndfunc'::`2'::bRunSellPrice
_BSS	ENDS
;	COMDAT ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
_BSS	SEGMENT
?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A DD 01H DUP (?) ; `StreetVendorWndfunc'::`2'::pShowSellItem
_BSS	ENDS
;	COMDAT ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
_BSS	SEGMENT
?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA DD 05H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iBtn
_BSS	ENDS
;	COMDAT ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
_BSS	SEGMENT
?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA DD 014H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iBuyItemBtn
_BSS	ENDS
;	COMDAT ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
_BSS	SEGMENT
?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iListStart
_BSS	ENDS
;	COMDAT ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
_BSS	SEGMENT
?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA DD 02H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iTotalBuy
_BSS	ENDS
;	COMDAT ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
_BSS	SEGMENT
?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA DD 02H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iEmptyNum
_BSS	ENDS
;	COMDAT ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
_BSS	SEGMENT
?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iCurrentShow
_BSS	ENDS
;	COMDAT ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
_BSS	SEGMENT
?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::iTotalBuyMoney
_BSS	ENDS
;	COMDAT ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
_BSS	SEGMENT
?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA DD 01H DUP (?) ; `StreetVendorBuyWndfunc'::`2'::bViewPetItem
_BSS	ENDS
_BSS	SEGMENT
?joinChannel2Proc@@3FA DW 01H DUP (?)			; joinChannel2Proc
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `charActionAnimeChange'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??charActionAnimeChange@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??charActionAnimeChange@@YAHXZ@4HA DD 01H DUP (?)	; `charActionAnimeChange'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??charActionAnimeChange@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??charActionAnimeChange@@YAHXZ@4HA DD 01H DUP (?)	; `charActionAnimeChange'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??charActionAnimeChange@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??charActionAnimeChange@@YAHXZ@4HA DD 01H DUP (?)	; `charActionAnimeChange'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??charActionAnimeChange@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??charActionAnimeChange@@YAHXZ@4HA DD 01H DUP (?)	; `charActionAnimeChange'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA DD 0dH DUP (?) ; `charActionAnimeChange'::`2'::btnId
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `etcSwitch'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `etcSwitch'::`2'::pActChannelWin
_BSS	ENDS
;	COMDAT ?iChannelbtnId@?1??etcSwitch@@YAHXZ@4PAHA
_BSS	SEGMENT
?iChannelbtnId@?1??etcSwitch@@YAHXZ@4PAHA DD 04H DUP (?) ; `etcSwitch'::`2'::iChannelbtnId
_BSS	ENDS
;	COMDAT ?x@?1??etcSwitch@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??etcSwitch@@YAHXZ@4HA DD 01H DUP (?)		; `etcSwitch'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??etcSwitch@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??etcSwitch@@YAHXZ@4HA DD 01H DUP (?)		; `etcSwitch'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??etcSwitch@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??etcSwitch@@YAHXZ@4HA DD 01H DUP (?)		; `etcSwitch'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??etcSwitch@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??etcSwitch@@YAHXZ@4HA DD 01H DUP (?)		; `etcSwitch'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??etcSwitch@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??etcSwitch@@YAHXZ@4PAHA DD 05H DUP (?)	; `etcSwitch'::`2'::btnId
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `disconnectServer'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??disconnectServer@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??disconnectServer@@YAHXZ@4HA DD 01H DUP (?)	; `disconnectServer'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??disconnectServer@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??disconnectServer@@YAHXZ@4HA DD 01H DUP (?)	; `disconnectServer'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??disconnectServer@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??disconnectServer@@YAHXZ@4HA DD 01H DUP (?)	; `disconnectServer'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??disconnectServer@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??disconnectServer@@YAHXZ@4HA DD 01H DUP (?)	; `disconnectServer'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??disconnectServer@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??disconnectServer@@YAHXZ@4PAHA DD 01H DUP (?)	; `disconnectServer'::`2'::btnId
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A DD 01H DUP (?) ; `drawFieldInfoWin'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??drawFieldInfoWin@@YAXXZ@4HA
_BSS	SEGMENT
?x@?1??drawFieldInfoWin@@YAXXZ@4HA DD 01H DUP (?)	; `drawFieldInfoWin'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??drawFieldInfoWin@@YAXXZ@4HA
_BSS	SEGMENT
?y@?1??drawFieldInfoWin@@YAXXZ@4HA DD 01H DUP (?)	; `drawFieldInfoWin'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??drawFieldInfoWin@@YAXXZ@4HA
_BSS	SEGMENT
?w@?1??drawFieldInfoWin@@YAXXZ@4HA DD 01H DUP (?)	; `drawFieldInfoWin'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??drawFieldInfoWin@@YAXXZ@4HA
_BSS	SEGMENT
?h@?1??drawFieldInfoWin@@YAXXZ@4HA DD 01H DUP (?)	; `drawFieldInfoWin'::`2'::h
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?ptActChannelWin@@3PAUaction@@A DD 01H DUP (?)		; ptActChannelWin
?ptActChannel2Win@@3PAUaction@@A DD 01H DUP (?)		; ptActChannel2Win
?ptActLeaderFuncWin@@3PAUaction@@A DD 01H DUP (?)	; ptActLeaderFuncWin
_BSS	ENDS
;	COMDAT ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??joinChannelWN@@YAXXZ@4PAHA DD 05H DUP (?)	; `joinChannelWN'::`2'::btnId
_BSS	ENDS
;	COMDAT ?graId@?1??joinChannelWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?graId@?1??joinChannelWN@@YAXXZ@4PAHA DD 01H DUP (?)	; `joinChannelWN'::`2'::graId
_BSS	ENDS
_BSS	SEGMENT
?channelData@@3UTchannelData@@A DB 096cH DUP (?)	; channelData
?pageNum@@3HA DD 01H DUP (?)				; pageNum
_BSS	ENDS
;	COMDAT ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA DD 04H DUP (?) ; `joinChannel2WN'::`2'::fontBtnId
_BSS	ENDS
;	COMDAT ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA DD 09H DUP (?)	; `leaderFuncWN'::`2'::btnId
_BSS	ENDS
;	COMDAT ?graId@?1??leaderFuncWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?graId@?1??leaderFuncWN@@YAXXZ@4PAHA DD 01H DUP (?)	; `leaderFuncWN'::`2'::graId
_BSS	ENDS
;	COMDAT ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::winH
_BSS	ENDS
;	COMDAT ?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::iOnline
_BSS	ENDS
;	COMDAT ?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::iGetNum
_BSS	ENDS
;	COMDAT ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA
_BSS	SEGMENT
?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA DD 07H DUP (?) ; `TeacherSystemWndfunc'::`2'::iFontId
_BSS	ENDS
;	COMDAT ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA
_BSS	SEGMENT
?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA DD 05H DUP (?) ; `TeacherSystemWndfunc'::`2'::iIndex
_BSS	ENDS
;	COMDAT ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A
_BSS	SEGMENT
?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::pActTeacherSystemWnd
_BSS	ENDS
;	COMDAT ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
_BSS	SEGMENT
?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA DB 0c0H DUP (?) ; `TeacherSystemWndfunc'::`2'::szBuf
_BSS	ENDS
;	COMDAT ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
_BSS	SEGMENT
?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA DD 01H DUP (?) ; `TeacherSystemWndfunc'::`2'::bOpen
_BSS	ENDS
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@fffffffefffffffefffffffefffffffe
CONST	SEGMENT
__xmm@fffffffefffffffefffffffefffffffe DB 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH
	DB	0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00000200000001000000008000000040
CONST	SEGMENT
__xmm@00000200000001000000008000000040 DB '@', 00H, 00H, 00H, 080H, 00H, 00H
	DB	00H, 00H, 01H, 00H, 00H, 00H, 02H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000004000000060000000300000005
CONST	SEGMENT
__xmm@00000004000000060000000300000005 DB 05H, 00H, 00H, 00H, 03H, 00H, 00H
	DB	00H, 06H, 00H, 00H, 00H, 04H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000090000000a00000008
CONST	SEGMENT
__xmm@00000001000000090000000a00000008 DB 08H, 00H, 00H, 00H, 0aH, 00H, 00H
	DB	00H, 09H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000100000000400000001
CONST	SEGMENT
__xmm@00000000000000100000000400000001 DB 01H, 00H, 00H, 00H, 04H, 00H, 00H
	DB	00H, 010H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000000000000007000000020000000b
CONST	SEGMENT
__xmm@0000000000000007000000020000000b DB 0bH, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 07H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c08f480000000000
CONST	SEGMENT
__real@c08f480000000000 DQ 0c08f480000000000r	; -1001
CONST	ENDS
;	COMDAT __real@c082780000000000
CONST	SEGMENT
__real@c082780000000000 DQ 0c082780000000000r	; -591
CONST	ENDS
;	COMDAT __real@c077d00000000000
CONST	SEGMENT
__real@c077d00000000000 DQ 0c077d00000000000r	; -381
CONST	ENDS
;	COMDAT __real@c072d00000000000
CONST	SEGMENT
__real@c072d00000000000 DQ 0c072d00000000000r	; -301
CONST	ENDS
;	COMDAT __real@c03f000000000000
CONST	SEGMENT
__real@c03f000000000000 DQ 0c03f000000000000r	; -31
CONST	ENDS
;	COMDAT __real@c028000000000000
CONST	SEGMENT
__real@c028000000000000 DQ 0c028000000000000r	; -12
CONST	ENDS
;	COMDAT __real@c020000000000000
CONST	SEGMENT
__real@c020000000000000 DQ 0c020000000000000r	; -8
CONST	ENDS
;	COMDAT __real@c018000000000000
CONST	SEGMENT
__real@c018000000000000 DQ 0c018000000000000r	; -6
CONST	ENDS
;	COMDAT __real@c010000000000000
CONST	SEGMENT
__real@c010000000000000 DQ 0c010000000000000r	; -4
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@4082780000000000
CONST	SEGMENT
__real@4082780000000000 DQ 04082780000000000r	; 591
CONST	ENDS
;	COMDAT __real@401c000000000000
CONST	SEGMENT
__real@401c000000000000 DQ 0401c000000000000r	; 7
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f00000000000000
CONST	SEGMENT
__real@3f00000000000000 DQ 03f00000000000000r	; 3.05176e-05
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT ??_C@_02PBOICDIO@C?$HM@
CONST	SEGMENT
??_C@_02PBOICDIO@C?$HM@ DB 'C|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NKJNALFN@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0BJ@NKJNALFN@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ DB 0b8H
	DB	0e0H, 0c5H, 0e4H, 0b8H, 0a6H, 0c3H, 0ebH, 0bcH, 0d2H, 0c7H, 0cfH
	DB	0bdH, 0c3H, 0b0H, 0daH, 0bdH, 0c0H, 0b4H, 0cfH, 0b1H, 0eeH, 0a3H
	DB	0bfH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CIJBHHMG@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LI?i?$LI?E?$LH?B?$LA?$KB?D?$KB?$LA?$KB?$LA?$KI?$LM?R?G?U?$LE@
CONST	SEGMENT
??_C@_0CF@CIJBHHMG@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LI?i?$LI?E?$LH?B?$LA?$KB?D?$KB?$LA?$KB?$LA?$KI?$LM?R?G?U?$LE@ DB 0b8H
	DB	0e0H, 0c5H, 0e4H, 0b8H, 0a6H, 0c3H, 0ebH, 0bcH, 0d2H, 0c7H, 0cfH
	DB	0b8H, 0e9H, 0b8H, 0c5H, 0b7H, 0c2H, 0b0H, 0a1H, 0c4H, 0a1H, 0b0H
	DB	0a1H, 0b0H, 0a8H, 0bcH, 0d2H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H
	DB	0a3H, 0acH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KOAEBMHD@?$LI?$OA?E?d?$MA?G?5?$LN?G?$LA?$NN@
CONST	SEGMENT
??_C@_0M@KOAEBMHD@?$LI?$OA?E?d?$MA?G?5?$LN?G?$LA?$NN@ DB 0b8H, 0e0H, 0c5H
	DB	0e4H, 0c0H, 0c7H, ' ', 0bdH, 0c7H, 0b0H, 0ddH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MOLOGMLJ@?A?$LO?5?5?$LH?a@
CONST	SEGMENT
??_C@_06MOLOGMLJ@?A?$LO?5?5?$LH?a@ DB 0c1H, 0beH, '  ', 0b7H, 0e1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04ELDJJCAA@?$LO?F?$LE?O@
CONST	SEGMENT
??_C@_04ELDJJCAA@?$LO?F?$LE?O@ DB 0beH, 0c6H, 0b4H, 0cfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KFNAOAIJ@?$MA?$LK?G?O?$KD?$LK@
CONST	SEGMENT
??_C@_06KFNAOAIJ@?$MA?$LK?G?O?$KD?$LK@ DB 0c0H, 0baH, 0c7H, 0cfH, 0a3H, 0baH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07BMIEDOEC@Offline@
CONST	SEGMENT
??_C@_07BMIEDOEC@Offline@ DB 'Offline', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KCABBADG@Online@
CONST	SEGMENT
??_C@_06KCABBADG@Online@ DB 'Online', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OLECLEEB@?$LL?s?E?B?$KD?$LK@
CONST	SEGMENT
??_C@_06OLECLEEB@?$LL?s?E?B?$KD?$LK@ DB 0bbH, 0f3H, 0c5H, 0c2H, 0a3H, 0baH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FGGIBINO@?$LI?$OA?E?d?$MA?L?$LI?$KH?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0N@FGGIBINO@?$LI?$OA?E?d?$MA?L?$LI?$KH?$KD?$LK?$CFs@ DB 0b8H, 0e0H, 0c5H
	DB	0e4H, 0c0H, 0ccH, 0b8H, 0a7H, 0a3H, 0baH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08OHAGCECG@?$LI?$OA?E?d?$LL?s?E?B@
CONST	SEGMENT
??_C@_08OHAGCECG@?$LI?$OA?E?d?$LL?s?E?B@ DB 0b8H, 0e0H, 0c5H, 0e4H, 0bbH, 0f3H
	DB	0c5H, 0c2H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HGNGOOJL@?$LI?$OA?E?d?$LH?N?5?$LE?$KJ?$LB?$LM?5?$LM?$LB?E?C?G?U?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0BJ@HGNGOOJL@?$LI?$OA?E?d?$LH?N?5?$LE?$KJ?$LB?$LM?5?$LM?$LB?E?C?G?U?$LE?O?$LB?n?$KD?$LP@ DB 0b8H
	DB	0e0H, 0c5H, 0e4H, 0b7H, 0ceH, ' ', 0b4H, 0a9H, 0b1H, 0bcH, ' ', 0bcH
	DB	0b1H, 0c5H, 0c3H, 0c7H, 0d5H, 0b4H, 0cfH, 0b1H, 0eeH, 0a3H, 0bfH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNIAPCPG@O?$HM?$CFd@
CONST	SEGMENT
??_C@_04PNIAPCPG@O?$HM?$CFd@ DB 'O|%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
CONST	SEGMENT
??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@ DB 0c3H, 0ebH, '  ', 0bcH, 0d2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
CONST	SEGMENT
??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@ DB 0c8H, 0aeH, '  ', 0c0H, 0ceH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KCELJCBE@?$LI?$OA?E?d?$LA?$KB?$LF?G?$LO?n?$LK?$LI?$LM?$LM?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BD@KCELJCBE@?$LI?$OA?E?d?$LA?$KB?$LF?G?$LO?n?$LK?$LI?$LM?$LM?$LP?d?$KD?$LP@ DB 0b8H
	DB	0e0H, 0c5H, 0e4H, 0b0H, 0a1H, 0b5H, 0c7H, 0beH, 0eeH, 0baH, 0b8H
	DB	0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0bfH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@GGAGFANJ@?$LE?g?$LN?E?$MA?$LK?$LN?D?$LK?$LA?G?R?$LM?v?$MA?V?$LN?$MA?$LE?O?$LB?n?5?$CFs@
CONST	SEGMENT
??_C@_0BK@GGAGFANJ@?$LE?g?$LN?E?$MA?$LK?$LN?D?$LK?$LA?G?R?$LM?v?$MA?V?$LN?$MA?$LE?O?$LB?n?5?$CFs@ DB 0b4H
	DB	0e7H, 0bdH, 0c5H, 0c0H, 0baH, 0bdH, 0c4H, 0baH, 0b0H, 0c7H, 0d2H
	DB	0bcH, 0f6H, 0c0H, 0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b1H, 0eeH, ' '
	DB	'%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MGMKLDIO@map?2?$CFd?4ani@
CONST	SEGMENT
??_C@_0L@MGMKLDIO@map?2?$CFd?4ani@ DB 'map\%d.ani', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@EJEFDMMK@?E?$LO?$LN?B?$LJ?h?$LP?l?$LB?b?$MA?$KH?G?Q?$LF?$LP?$MA?G?$LM?$KN?$MA?$NL?$LM?$LK?$KB?$KD@
CONST	SEGMENT
??_C@_0BL@EJEFDMMK@?E?$LO?$LN?B?$LJ?h?$LP?l?$LB?b?$MA?$KH?G?Q?$LF?$LP?$MA?G?$LM?$KN?$MA?$NL?$LM?$LK?$KB?$KD@ DB 0c5H
	DB	0beH, 0bdH, 0c2H, 0b9H, 0e8H, 0bfH, 0ecH, 0b1H, 0e2H, 0c0H, 0a7H
	DB	0c7H, 0d1H, 0b5H, 0bfH, 0c0H, 0c7H, 0bcH, 0adH, 0c0H, 0dbH, 0bcH
	DB	0baH, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CGFLPMMC@?$LK?N?A?$LH?$LJ?f?$LJ?$KO?C?J?C?$LL?$MA?e?$MA?$NL?$LM?$LK?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@CGFLPMMC@?$LK?N?A?$LH?$LJ?f?$LJ?$KO?C?J?C?$LL?$MA?e?$MA?$NL?$LM?$LK?$KB?$KD@ DB 0baH
	DB	0ceH, 0c1H, 0b7H, 0b9H, 0e6H, 0b9H, 0aeH, 0c3H, 0caH, 0c3H, 0bbH
	DB	0c0H, 0e5H, 0c0H, 0dbH, 0bcH, 0baH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGNAPNJL@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LI?q?$LH?O?$KB?$KD@
CONST	SEGMENT
??_C@_0BB@MGNAPNJL@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LI?q?$LH?O?$KB?$KD@ DB 0baH
	DB	0ceH, 0c1H, 0b7H, 0b1H, 0b8H, 0bcH, 0baH, 0bfH, 0f8H, 0b8H, 0f1H
	DB	0b7H, 0cfH, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LJIHMIMO@?A?$LH?$MA?e?$MA?$LK?5?$LK?N?A?$LH?$LP?x?$MA?$PM?C?$LM?$LP?$KB?$LA?T?5?$LA?x?A?v?G?U?$LE?O?$LE@
CONST	SEGMENT
??_C@_0CD@LJIHMIMO@?A?$LH?$MA?e?$MA?$LK?5?$LK?N?A?$LH?$LP?x?$MA?$PM?C?$LM?$LP?$KB?$LA?T?5?$LA?x?A?v?G?U?$LE?O?$LE@ DB 0c1H
	DB	0b7H, 0c0H, 0e5H, 0c0H, 0baH, ' ', 0baH, 0ceH, 0c1H, 0b7H, 0bfH
	DB	0f8H, 0c0H, 0fcH, 0c3H, 0bcH, 0bfH, 0a1H, 0b0H, 0d4H, ' ', 0b0H
	DB	0f8H, 0c1H, 0f6H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPLOID@?5?5?A?$LH?$MA?e?$LB?G?G?Q?$LK?N?$LP?$KJ?5?5@
CONST	SEGMENT
??_C@_0BB@BPLOID@?5?5?A?$LH?$MA?e?$LB?G?G?Q?$LK?N?$LP?$KJ?5?5@ DB '  ', 0c1H
	DB	0b7H, 0c0H, 0e5H, 0b1H, 0c7H, 0c7H, 0d1H, 0baH, 0ceH, 0bfH, 0a9H
	DB	'  ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MJPGOABE@?5?$LP?$KM?$LB?$LI?$LF?$LP?$MA?G?5@
CONST	SEGMENT
??_C@_0L@MJPGOABE@?5?$LP?$KM?$LB?$LI?$LF?$LP?$MA?G?5@ DB ' ', 0bfH, 0acH, 0b1H
	DB	0b8H, 0b5H, 0bfH, 0c0H, 0c7H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DOBBGKCH@?5?$LK?N?A?$LH?C?J?$LE?k?5@
CONST	SEGMENT
??_C@_0L@DOBBGKCH@?5?$LK?N?A?$LH?C?J?$LE?k?5@ DB ' ', 0baH, 0ceH, 0c1H, 0b7H
	DB	0c3H, 0caH, 0b4H, 0ebH, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGFFOIDE@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LA?$PM?$LI?$KO@
CONST	SEGMENT
??_C@_0P@OGFFOIDE@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LA?$PM?$LI?$KO@ DB 0baH
	DB	0ceH, 0c1H, 0b7H, 0b1H, 0b8H, 0bcH, 0baH, 0bfH, 0f8H, 0b0H, 0fcH
	DB	0b8H, 0aeH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NIGFCJOO@?5?5?A?$LH?$MA?e?$LJ?f?$LM?$NL?5?5@
CONST	SEGMENT
??_C@_0N@NIGFCJOO@?5?5?A?$LH?$MA?e?$LJ?f?$LM?$NL?5?5@ DB '  ', 0c1H, 0b7H
	DB	0c0H, 0e5H, 0b9H, 0e6H, 0bcH, 0dbH, '  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CJCIOOAN@L?$HMCHANGE?$HML@
CONST	SEGMENT
??_C@_0L@CJCIOOAN@L?$HMCHANGE?$HML@ DB 'L|CHANGE|L', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05GLNMLLEF@L?$HML?$HM2@
CONST	SEGMENT
??_C@_05GLNMLLEF@L?$HML?$HM2@ DB 'L|L|2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EAPBOIIG@L?$HML?$HM1@
CONST	SEGMENT
??_C@_05EAPBOIIG@L?$HML?$HM1@ DB 'L|L|1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CPEMAIOC@L?$HMF?$HM1@
CONST	SEGMENT
??_C@_05CPEMAIOC@L?$HMF?$HM1@ DB 'L|F|1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PAKAMAIL@C?$HMJ?$HM5@
CONST	SEGMENT
??_C@_05PAKAMAIL@C?$HMJ?$HM5@ DB 'C|J|5', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BJPJPJLI@?$MA?V?$LE?Y?5?$CFd?5?$MA?L?C?$KE?$LD?N?$MA?G?$LL?g?$LG?w?$LF?i?$KB?$KD@
CONST	SEGMENT
??_C@_0BJ@BJPJPJLI@?$MA?V?$LE?Y?5?$CFd?5?$MA?L?C?$KE?$LD?N?$MA?G?$LL?g?$LG?w?$LF?i?$KB?$KD@ DB 0c0H
	DB	0d6H, 0b4H, 0d9H, ' %d ', 0c0H, 0ccH, 0c3H, 0a4H, 0b3H, 0ceH, 0c0H
	DB	0c7H, 0bbH, 0e7H, 0b6H, 0f7H, 0b5H, 0e9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COJOKGGA@?G?v?$MA?g?5?$CFd?5?$MA?L?$LK?N?A?$LH?$MA?G?5?$LA?$KB?A?$LH?$KB?$KD@
CONST	SEGMENT
??_C@_0BI@COJOKGGA@?G?v?$MA?g?5?$CFd?5?$MA?L?$LK?N?A?$LH?$MA?G?5?$LA?$KB?A?$LH?$KB?$KD@ DB 0c7H
	DB	0f6H, 0c0H, 0e7H, ' %d ', 0c0H, 0ccH, 0baH, 0ceH, 0c1H, 0b7H, 0c0H
	DB	0c7H, ' ', 0b0H, 0a1H, 0c1H, 0b7H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FLCLDJN@?$FL?5?C?$KE?5?$LD?N?5?H?$LI?5?$LP?x?5?$FN@
CONST	SEGMENT
??_C@_0BA@FLCLDJN@?$FL?5?C?$KE?5?$LD?N?5?H?$LI?5?$LP?x?5?$FN@ DB '[ ', 0c3H
	DB	0a4H, ' ', 0b3H, 0ceH, ' ', 0c8H, 0b8H, ' ', 0bfH, 0f8H, ' ]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CMINFIIP@?5?E?$LL?5?5?E?p?5@
CONST	SEGMENT
??_C@_08CMINFIIP@?5?E?$LL?5?5?E?p?5@ DB ' ', 0c5H, 0bbH, '  ', 0c5H, 0f0H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08JGHLAOEI@?5?B?$PM?5?5?$LA?$KB?5@
CONST	SEGMENT
??_C@_08JGHLAOEI@?5?B?$PM?5?5?$LA?$KB?5@ DB ' ', 0c2H, 0fcH, '  ', 0b0H, 0a1H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_06GHCNPHLL@C?$HMJ?$HM?$CFd@
CONST	SEGMENT
??_C@_06GHCNPHLL@C?$HMJ?$HM?$CFd@ DB 'C|J|%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIKLEHBI@?$MA?L?C?$KC?$LE?$NN?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0L@EIKLEHBI@?$MA?L?C?$KC?$LE?$NN?$LB?b?$KB?$KD@ DB 0c0H, 0ccH, 0c3H
	DB	0a2H, 0b4H, 0ddH, 0b1H, 0e2H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CBBBPELI@?$MA?L?C?$KE?$LD?N?$LP?$KB?$LA?$KB?$MA?T?$KB?$KD@
CONST	SEGMENT
??_C@_0P@CBBBPELI@?$MA?L?C?$KE?$LD?N?$LP?$KB?$LA?$KB?$MA?T?$KB?$KD@ DB 0c0H
	DB	0ccH, 0c3H, 0a4H, 0b3H, 0ceH, 0bfH, 0a1H, 0b0H, 0a1H, 0c0H, 0d4H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MOILBLMI@?C?$KE?F?C?C?$KE?$LD?N?$LI?$NO?$LE?$LK?$LP?$KB?$LM?$KN?$LD?$KK?$LA?$KB?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0BJ@MOILBLMI@?C?$KE?F?C?C?$KE?$LD?N?$LI?$NO?$LE?$LK?$LP?$KB?$LM?$KN?$LD?$KK?$LA?$KB?$LB?b?$KB?$KD@ DB 0c3H
	DB	0a4H, 0c6H, 0c3H, 0c3H, 0a4H, 0b3H, 0ceH, 0b8H, 0deH, 0b4H, 0baH
	DB	0bfH, 0a1H, 0bcH, 0adH, 0b3H, 0aaH, 0b0H, 0a1H, 0b1H, 0e2H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKOBNADD@?A?$LH?$MA?e?$LJ?f?$LM?$NL?$LB?b?$LE?I?$LC?t?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0BD@BKOBNADD@?A?$LH?$MA?e?$LJ?f?$LM?$NL?$LB?b?$LE?I?$LC?t?$LB?b?$KB?$KD@ DB 0c1H
	DB	0b7H, 0c0H, 0e5H, 0b9H, 0e6H, 0bcH, 0dbH, 0b1H, 0e2H, 0b4H, 0c9H
	DB	0b2H, 0f4H, 0b1H, 0e2H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EKJBMCBD@?$LK?N?A?$LH?$LA?T?$LN?C?F?G?$LB?b?$LE?I?$LL?g?$LP?k?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@EKJBMCBD@?$LK?N?A?$LH?$LA?T?$LN?C?F?G?$LB?b?$LE?I?$LL?g?$LP?k?$KB?$KD@ DB 0baH
	DB	0ceH, 0c1H, 0b7H, 0b0H, 0d4H, 0bdH, 0c3H, 0c6H, 0c7H, 0b1H, 0e2H
	DB	0b4H, 0c9H, 0bbH, 0e7H, 0bfH, 0ebH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MBHIEFGB@?C?$OA?$LK?$LJ?$LL?g?$MA?G?F?$KP?$LK?$LA?G?Q?$LB?b?$LE?I?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@MBHIEFGB@?C?$OA?$LK?$LJ?$LL?g?$MA?G?F?$KP?$LK?$LA?G?Q?$LB?b?$LE?I?$KB?$KD@ DB 0c3H
	DB	0e0H, 0baH, 0b9H, 0bbH, 0e7H, 0c0H, 0c7H, 0c6H, 0afH, 0baH, 0b0H
	DB	0c7H, 0d1H, 0b1H, 0e2H, 0b4H, 0c9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBGDDGMA@?$LA?$KB?A?$LH?$LM?$LM?$LK?N?A?$KE?$LK?$LI?$LK?$LI?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0BD@CBGDDGMA@?$LA?$KB?A?$LH?$LM?$LM?$LK?N?A?$KE?$LK?$LI?$LK?$LI?$LB?b?$KB?$KD@ DB 0b0H
	DB	0a1H, 0c1H, 0b7H, 0bcH, 0bcH, 0baH, 0ceH, 0c1H, 0a4H, 0baH, 0b8H
	DB	0baH, 0b8H, 0b1H, 0e2H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06JEJPCC@S?$HMSELF@
CONST	SEGMENT
??_C@_06JEJPCC@S?$HMSELF@ DB 'S|SELF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06KOPCAPBC@C?$HMJ?$HM?91@
CONST	SEGMENT
??_C@_06KOPCAPBC@C?$HMJ?$HM?91@ DB 'C|J|-1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D@
CONST	SEGMENT
??_C@_01CKDDGHAB@D@ DB 'D', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNGENDLA@S?$HMD2@
CONST	SEGMENT
??_C@_04PNGENDLA@S?$HMD2@ DB 'S|D2', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04IJNKKJEO@?H?$KO?$MA?N@
CONST	SEGMENT
??_C@_04IJNKKJEO@?H?$KO?$MA?N@ DB 0c8H, 0aeH, 0c0H, 0ceH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KHIHNLHO@?$LF?$LJ?$LO?F?$LA?$KB?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0BD@KHIHNLHO@?$LF?$LJ?$LO?F?$LA?$KB?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ DB 0b5H
	DB	0b9H, 0beH, 0c6H, 0b0H, 0a1H, 0bdH, 0c3H, 0b0H, 0daH, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b1H, 0eeH, 0a3H, 0bfH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@MLBEKKLD@?$LM?$KN?$LJ?v?$LP?M?$MA?G?5?$LP?$KM?$LA?a?$MA?L?5?A?$LO?$LH?a?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0CA@MLBEKKLD@?$LM?$KN?$LJ?v?$LP?M?$MA?G?5?$LP?$KM?$LA?a?$MA?L?5?A?$LO?$LH?a?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4@ DB 0bcH
	DB	0adH, 0b9H, 0f6H, 0bfH, 0cdH, 0c0H, 0c7H, ' ', 0bfH, 0acH, 0b0H
	DB	0e1H, 0c0H, 0ccH, ' ', 0c1H, 0beH, 0b7H, 0e1H, 0b5H, 0c7H, 0beH
	DB	0faH, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HDOCAJNK@?$CFs?$CFs@
CONST	SEGMENT
??_C@_04HDOCAJNK@?$CFs?$CFs@ DB '%s%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KHKHJBNB@1024?5x?5768@
CONST	SEGMENT
??_C@_0L@KHKHJBNB@1024?5x?5768@ DB '1024 x 768', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFMHNIN@?5800?5x?5600@
CONST	SEGMENT
??_C@_0L@FFMHNIN@?5800?5x?5600@ DB ' 800 x 600', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FCDLGIBD@?5320?5x?5280@
CONST	SEGMENT
??_C@_0L@FCDLGIBD@?5320?5x?5280@ DB ' 320 x 280', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCGDIFAB@?5640?5x?5480@
CONST	SEGMENT
??_C@_0L@OCGDIFAB@?5640?5x?5480@ DB ' 640 x 480', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NBGJJJHP@?$LI?$NO?$LE?$LK?C?$KC?$LE?$NN?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0N@NBGJJJHP@?$LI?$NO?$LE?$LK?C?$KC?$LE?$NN?$LB?b?$KB?$KD@ DB 0b8H, 0deH
	DB	0b4H, 0baH, 0c3H, 0a2H, 0b4H, 0ddH, 0b1H, 0e2H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MCKEAICK@?$LD?k?A?$KB?$LP?$KB?$LM?$KN?$LA?E?$LH?$KB?$LP?$KN?$LM?v?$LO?x?$MA?$LN?$KB?$KC?F?D?F?$LM?$LJ?W?$MA?$PM?E@
CONST	SEGMENT
??_C@_0CF@MCKEAICK@?$LD?k?A?$KB?$LP?$KB?$LM?$KN?$LA?E?$LH?$KB?$LP?$KN?$LM?v?$LO?x?$MA?$LN?$KB?$KC?F?D?F?$LM?$LJ?W?$MA?$PM?E@ DB 0b3H
	DB	0ebH, 0c1H, 0a1H, 0bfH, 0a1H, 0bcH, 0adH, 0b0H, 0c5H, 0b7H, 0a1H
	DB	0bfH, 0adH, 0bcH, 0f6H, 0beH, 0f8H, 0c0H, 0bdH, 0a1H, 0a2H, 0c6H
	DB	0c4H, 0c6H, 0bcH, 0b9H, 0d7H, 0c0H, 0fcH, 0c5H, 0f5H, 0b1H, 0e2H
	DB	0b4H, 0c9H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JGAFKJCL@?$LI?$NO?$LE?$LK?5?$LM?$LD?A?$KE?C?$KC?$MA?$LL?5?$LE?$NN?$LN?$MA?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BI@JGAFKJCL@?$LI?$NO?$LE?$LK?5?$LM?$LD?A?$KE?C?$KC?$MA?$LL?5?$LE?$NN?$LN?$MA?$LE?O?$LE?Y?4@ DB 0b8H
	DB	0deH, 0b4H, 0baH, ' ', 0bcH, 0b3H, 0c1H, 0a4H, 0c3H, 0a2H, 0c0H
	DB	0bbH, ' ', 0b4H, 0ddH, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DLFHHIDJ@?C?$KE?$LD?N?5?$LM?$LD?A?$KE?5?F?D?$MA?O?5?$MA?P?$LB?b?5?$LN?G?F?P@
CONST	SEGMENT
??_C@_0BJ@DLFHHIDJ@?C?$KE?$LD?N?5?$LM?$LD?A?$KE?5?F?D?$MA?O?5?$MA?P?$LB?b?5?$LN?G?F?P@ DB 0c3H
	DB	0a4H, 0b3H, 0ceH, ' ', 0bcH, 0b3H, 0c1H, 0a4H, ' ', 0c6H, 0c4H
	DB	0c0H, 0cfH, ' ', 0c0H, 0d0H, 0b1H, 0e2H, ' ', 0bdH, 0c7H, 0c6H
	DB	0d0H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BLGDDDEM@data?2channel?4dat@
CONST	SEGMENT
??_C@_0BB@BLGDDDEM@data?2channel?4dat@ DB 'data\channel.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02CHHAKFFB@w?$CL@
CONST	SEGMENT
??_C@_02CHHAKFFB@w?$CL@ DB 'w+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JIKBMICG@?$LA?m?$LP?k?$LF?G?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BD@JIKBMICG@?$LA?m?$LP?k?$LF?G?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@ DB 0b0H
	DB	0edH, 0bfH, 0ebH, 0b5H, 0c7H, 0c1H, 0f6H, 0beH, 0caH, 0beH, 0d2H
	DB	0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BCJNPCLP@?$LA?$KB?A?$LH?$LP?$KB?$LA?$KB?$MA?T?G?O?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BJ@BCJNPCLP@?$LA?$KB?A?$LH?$LP?$KB?$LA?$KB?$MA?T?G?O?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@ DB 0b0H
	DB	0a1H, 0c1H, 0b7H, 0bfH, 0a1H, 0b0H, 0a1H, 0c0H, 0d4H, 0c7H, 0cfH
	DB	0c1H, 0f6H, 0beH, 0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08DKNMBPNK@?$LE?k?H?$KN?$MA?z?$MA?e@
CONST	SEGMENT
??_C@_08DKNMBPNK@?$LE?k?H?$KN?$MA?z?$MA?e@ DB 0b4H, 0ebH, 0c8H, 0adH, 0c0H
	DB	0faH, 0c0H, 0e5H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIEPCPDK@?$LA?f?$LI?E?C?$KE?$LD?N@
CONST	SEGMENT
??_C@_08LIEPCPDK@?$LA?f?$LI?E?C?$KE?$LD?N@ DB 0b0H, 0e6H, 0b8H, 0c5H, 0c3H
	DB	0a4H, 0b3H, 0ceH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06IAKMCPJ@?$LA?$KB?A?$LH?$LI?$LL@
CONST	SEGMENT
??_C@_06IAKMCPJ@?$LA?$KB?A?$LH?$LI?$LL@ DB 0b0H, 0a1H, 0c1H, 0b7H, 0b8H, 0bbH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06FNJBCBKN@?$LB?S?$LM?S?$LI?$LL@
CONST	SEGMENT
??_C@_06FNJBCBKN@?$LB?S?$LM?S?$LI?$LL@ DB 0b1H, 0d3H, 0bcH, 0d3H, 0b8H, 0bbH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@JJOLNGNO@?$LA?T?$MA?S?$MA?N?E?M?F?d?$MA?L?$LN?$LK?G?X?$LL?s?$LF?$LF?$LM?$LD?A?$KE?$KB?$KD@
CONST	SEGMENT
??_C@_0BL@JJOLNGNO@?$LA?T?$MA?S?$MA?N?E?M?F?d?$MA?L?$LN?$LK?G?X?$LL?s?$LF?$LF?$LM?$LD?A?$KE?$KB?$KD@ DB 0b0H
	DB	0d4H, 0c0H, 0d3H, 0c0H, 0ceH, 0c5H, 0cdH, 0c6H, 0e4H, 0c0H, 0ccH
	DB	0bdH, 0baH, 0c7H, 0d8H, 0bbH, 0f3H, 0b5H, 0b5H, 0bcH, 0b3H, 0c1H
	DB	0a4H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DBDDAFOG@?$LA?E?$LH?$KB?$LM?v?$LG?t?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
CONST	SEGMENT
??_C@_0BD@DBDDAFOG@?$LA?E?$LH?$KB?$LM?v?$LG?t?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ DB 0b0H
	DB	0c5H, 0b7H, 0a1H, 0bcH, 0f6H, 0b6H, 0f4H, 0bfH, 0a9H, 0baH, 0ceH
	DB	0bcH, 0b3H, 0c1H, 0a4H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NLHMJPHG@?$LA?$KC?C?$KE?$LD?N?$LM?$LD?A?$KE?$LG?G?$LE?B?G?X?A?$KG?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@NLHMJPHG@?$LA?$KC?C?$KE?$LD?N?$LM?$LD?A?$KE?$LG?G?$LE?B?G?X?A?$KG?$KB?$KD@ DB 0b0H
	DB	0a2H, 0c3H, 0a4H, 0b3H, 0ceH, 0bcH, 0b3H, 0c1H, 0a4H, 0b6H, 0c7H
	DB	0b4H, 0c2H, 0c7H, 0d8H, 0c1H, 0a6H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GAKCDBLG@?$LI?m?G?T?$LB?$LD?H?$KP?G?c?$LP?k?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
CONST	SEGMENT
??_C@_0BH@GAKCDBLG@?$LI?m?G?T?$LB?$LD?H?$KP?G?c?$LP?k?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ DB 0b8H
	DB	0edH, 0c7H, 0d4H, 0b1H, 0b3H, 0c8H, 0afH, 0c7H, 0e3H, 0bfH, 0ebH
	DB	0bfH, 0a9H, 0baH, 0ceH, 0bcH, 0b3H, 0c1H, 0a4H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EJIPNKEA@?$LE?Y?$LI?$KF?$LL?g?$LG?w?$LF?$LF?$MA?$PM?$LJ?$NO?$MA?$LL?A?v?$LM?$LD?A?$KE?$KB?$KD@
CONST	SEGMENT
??_C@_0BJ@EJIPNKEA@?$LE?Y?$LI?$KF?$LL?g?$LG?w?$LF?$LF?$MA?$PM?$LJ?$NO?$MA?$LL?A?v?$LM?$LD?A?$KE?$KB?$KD@ DB 0b4H
	DB	0d9H, 0b8H, 0a5H, 0bbH, 0e7H, 0b6H, 0f7H, 0b5H, 0b5H, 0c0H, 0fcH
	DB	0b9H, 0deH, 0c0H, 0bbH, 0c1H, 0f6H, 0bcH, 0b3H, 0c1H, 0a4H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NPLNHFNN@?$LE?Y?$LI?$KF?$LL?g?$LG?w?F?$MA?G?U?$LH?y?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
CONST	SEGMENT
??_C@_0BJ@NPLNHFNN@?$LE?Y?$LI?$KF?$LL?g?$LG?w?F?$MA?G?U?$LH?y?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@ DB 0b4H
	DB	0d9H, 0b8H, 0a5H, 0bbH, 0e7H, 0b6H, 0f7H, 0c6H, 0c0H, 0c7H, 0d5H
	DB	0b7H, 0f9H, 0bfH, 0a9H, 0baH, 0ceH, 0bcH, 0b3H, 0c1H, 0a4H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07CHOGEIED@?5?$KD?Y?$KD?E?$KD?S@
CONST	SEGMENT
??_C@_07CHOGEIED@?5?$KD?Y?$KD?E?$KD?S@ DB ' ', 0a3H, 0d9H, 0a3H, 0c5H, 0a3H
	DB	0d3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07MIKFFMHF@?5?$KD?N?5?5?$KD?O@
CONST	SEGMENT
??_C@_07MIKFFMHF@?5?$KD?N?5?5?$KD?O@ DB ' ', 0a3H, 0ceH, '  ', 0a3H, 0cfH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HENHCGEF@?$LA?E?5?5?5?5?$LH?$KB?$KD?$LK@
CONST	SEGMENT
??_C@_0L@HENHCGEF@?$LA?E?5?5?5?5?$LH?$KB?$KD?$LK@ DB 0b0H, 0c5H, '    ', 0b7H
	DB	0a1H, 0a3H, 0baH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IDENONED@?C?$KE?5?5?5?5?$LD?N?5?5?5?5?$LJ?v?5?5?5?5?F?$LA@
CONST	SEGMENT
??_C@_0BF@IDENONED@?C?$KE?5?5?5?5?$LD?N?5?5?5?5?$LJ?v?5?5?5?5?F?$LA@ DB 0c3H
	DB	0a4H, '    ', 0b3H, 0ceH, '    ', 0b9H, 0f6H, '    ', 0c6H, 0b0H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POPIGLPO@?$LI?m?G?T?$LB?$LD?H?$KP?$KD?$LK@
CONST	SEGMENT
??_C@_0L@POPIGLPO@?$LI?m?G?T?$LB?$LD?H?$KP?$KD?$LK@ DB 0b8H, 0edH, 0c7H, 0d4H
	DB	0b1H, 0b3H, 0c8H, 0afH, 0a3H, 0baH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MAOAOHML@?$LF?$OA?5?5?5?5?$LO?s?$KD?$LK@
CONST	SEGMENT
??_C@_0L@MAOAOHML@?$LF?$OA?5?5?5?5?$LO?s?$KD?$LK@ DB 0b5H, 0e0H, '    ', 0beH
	DB	0f3H, 0a3H, 0baH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OLEDJDPG@?F?D?5?5?5?5?F?$LM?$KD?$LK@
CONST	SEGMENT
??_C@_0L@OLEDJDPG@?F?D?5?5?5?5?F?$LM?$KD?$LK@ DB 0c6H, 0c4H, '    ', 0c6H
	DB	0bcH, 0a3H, 0baH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHKEOPKL@?$MA?$NL?$LO?w?C?$KC?$LE?$NN?$LB?b@
CONST	SEGMENT
??_C@_0L@NHKEOPKL@?$MA?$NL?$LO?w?C?$KC?$LE?$NN?$LB?b@ DB 0c0H, 0dbH, 0beH
	DB	0f7H, 0c3H, 0a2H, 0b4H, 0ddH, 0b1H, 0e2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DPEEFHJC@?$LE?x?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL?2@
CONST	SEGMENT
??_C@_0CB@DPEEFHJC@?$LE?x?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL?2@ DB 0b4H
	DB	0f8H, 0c1H, 0f6H, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH, 0c7H, 0c0H
	DB	0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '. '
	DB	'(Ctrl+\)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@FILFJCML@?E?$LI?$LA?$NN?$MA?$LL?5?$MA?T?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@
CONST	SEGMENT
??_C@_0CG@FILFJCML@?E?$LI?$LA?$NN?$MA?$LL?5?$MA?T?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@ DB 0c5H
	DB	0b8H, 0b0H, 0ddH, 0c0H, 0bbH, ' ', 0c0H, 0d4H, 0b4H, 0c2H, ' ', 0beH
	DB	0d7H, 0bcH, 0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H
	DB	0cfH, 0b4H, 0d9H, '. (Ctrl+=)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NKKFDBOL@?$LN?$LN?F?$NL?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@NKKFDBOL@?$LN?$LN?F?$NL?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0bdH
	DB	0bdH, 0c6H, 0dbH, 0c7H, 0cfH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+6)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MIHLAAOD@?$LJ?f?$LO?n?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@MIHLAAOD@?$LJ?f?$LO?n?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0b9H
	DB	0e6H, 0beH, 0eeH, 0c7H, 0cfH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+-)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@OIDAHAAG@?H?$KN?$LI?$KG?5?$LD?$LL?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtr@
CONST	SEGMENT
??_C@_0CE@OIDAHAAG@?H?$KN?$LI?$KG?5?$LD?$LL?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtr@ DB 0c8H
	DB	0adH, 0b8H, 0a6H, ' ', 0b3H, 0bbH, 0b4H, 0c2H, ' ', 0beH, 0d7H
	DB	0bcH, 0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH
	DB	0b4H, 0d9H, '. (Ctrl+5)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OMLIKOJM@?$LA?x?$LA?$NN?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@OMLIKOJM@?$LA?x?$LA?$NN?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0b0H
	DB	0f8H, 0b0H, 0ddH, 0c7H, 0cfH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+0)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CMMPEHFI@?$LB?b?$LL?$LF?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@CMMPEHFI@?$LB?b?$LL?$LF?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0b1H
	DB	0e2H, 0bbH, 0b5H, 0c7H, 0cfH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+4)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JMKADJMO@?$LO?$LC?$LH?$KP?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@JMKADJMO@?$LO?$LC?$LH?$KP?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0beH
	DB	0b2H, 0b7H, 0afH, 0c1H, 0f6H, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+9)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KEHHLNJC@?$MA?N?$LL?g?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@KEHHLNJC@?$MA?N?$LL?g?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0c0H
	DB	0ceH, 0bbH, 0e7H, 0c7H, 0cfH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+3)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OCLIPLAL@?$LA?H?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL8?$CJ@
CONST	SEGMENT
??_C@_0BP@OCLIPLAL@?$LA?H?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL8?$CJ@ DB 0b0H
	DB	0c8H, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH, 0c7H, 0c0H, 0bbH, ' ', 0c3H
	DB	0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '. (Ctrl+8)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@EHJAFDMH@?$LM?U?$MA?$LL?5?H?g?$LF?e?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@
CONST	SEGMENT
??_C@_0CG@EHJAFDMH@?$LM?U?$MA?$LL?5?H?g?$LF?e?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@ DB 0bcH
	DB	0d5H, 0c0H, 0bbH, ' ', 0c8H, 0e7H, 0b5H, 0e5H, 0b4H, 0c2H, ' ', 0beH
	DB	0d7H, 0bcH, 0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H
	DB	0cfH, 0b4H, 0d9H, '. (Ctrl+2)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HLCPDIKM@?$MA?O?$LO?n?$LM?$KN?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
CONST	SEGMENT
??_C@_0CD@HLCPDIKM@?$MA?O?$LO?n?$LM?$KN?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@ DB 0c0H
	DB	0cfH, 0beH, 0eeH, 0bcH, 0adH, 0b4H, 0c2H, ' ', 0beH, 0d7H, 0bcH
	DB	0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '. (Ctrl+7)', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@DLPPPDPB@?A?$KG?$MA?Z?$LI?$KO?$LP?$KB?5?$LO?I?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5@
CONST	SEGMENT
??_C@_0CI@DLPPPDPB@?A?$KG?$MA?Z?$LI?$KO?$LP?$KB?5?$LO?I?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5@ DB 0c1H
	DB	0a6H, 0c0H, 0daH, 0b8H, 0aeH, 0bfH, 0a1H, ' ', 0beH, 0c9H, 0b4H
	DB	0c2H, ' ', 0beH, 0d7H, 0bcH, 0c7H, 0c0H, 0bbH, ' ', 0c3H, 0ebH
	DB	0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '. (Ctrl+1)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GOBFHACF@?$LE?x?$KB?$KB?A?v?$KB?$KB?$LE?Y@
CONST	SEGMENT
??_C@_0L@GOBFHACF@?$LE?x?$KB?$KB?A?v?$KB?$KB?$LE?Y@ DB 0b4H, 0f8H, 0a1H, 0a1H
	DB	0c1H, 0f6H, 0a1H, 0a1H, 0b4H, 0d9H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NJDBIKEM@?$LF?$KF?$KB?$KB?$LJ?L?$KB?$KB?A?v@
CONST	SEGMENT
??_C@_0L@NJDBIKEM@?$LF?$KF?$KB?$KB?$LJ?L?$KB?$KB?A?v@ DB 0b5H, 0a5H, 0a1H
	DB	0a1H, 0b9H, 0ccH, 0a1H, 0a1H, 0c1H, 0f6H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CHKOFNFO@?5?$LN?$LN?F?$NL?G?O?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@CHKOFNFO@?5?$LN?$LN?F?$NL?G?O?$LE?Y?5@ DB ' ', 0bdH, 0bdH, 0c6H, 0dbH
	DB	0c7H, 0cfH, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FLKMCCFP@?5?$LJ?f?$LO?n?G?O?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@FLKMCCFP@?5?$LJ?f?$LO?n?G?O?$LE?Y?5@ DB ' ', 0b9H, 0e6H, 0beH, 0eeH
	DB	0c7H, 0cfH, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDIKGKGC@?5?H?$KN?$LI?$KG?$LD?$LL?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@DDIKGKGC@?5?H?$KN?$LI?$KG?$LD?$LL?$LE?Y?5@ DB ' ', 0c8H, 0adH, 0b8H
	DB	0a6H, 0b3H, 0bbH, 0b4H, 0d9H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPLKDNIL@?5?$LA?x?$LA?$NN?G?O?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@EPLKDNIL@?5?$LA?x?$LA?$NN?G?O?$LE?Y?5@ DB ' ', 0b0H, 0f8H, 0b0H, 0ddH
	DB	0c7H, 0cfH, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HMKFIAIO@?5?$LB?b?$LL?$LF?G?O?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@HMKFIAIO@?5?$LB?b?$LL?$LF?G?O?$LE?Y?5@ DB ' ', 0b1H, 0e2H, 0bbH, 0b5H
	DB	0c7H, 0cfH, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBJFHFFA@?5?$LO?$LC?$LH?$KP?A?v?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@BBJFHFFA@?5?$LO?$LC?$LH?$KP?A?v?$LE?Y?5@ DB ' ', 0beH, 0b2H, 0b7H
	DB	0afH, 0c1H, 0f6H, 0b4H, 0d9H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LFKBOHAB@?5?$MA?N?$LL?g?G?O?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@LFKBOHAB@?5?$MA?N?$LL?g?G?O?$LE?Y?5@ DB ' ', 0c0H, 0ceH, 0bbH, 0e7H
	DB	0c7H, 0cfH, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CPNFDNI@?5?$LA?H?$KB?$KB?$KB?$KB?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@CPNFDNI@?5?$LA?H?$KB?$KB?$KB?$KB?$LE?Y?5@ DB ' ', 0b0H, 0c8H, 0a1H
	DB	0a1H, 0a1H, 0a1H, 0b4H, 0d9H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FNPFLOKG@?5?$LM?U?H?g?$LF?i?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@FNPFLOKG@?5?$LM?U?H?g?$LF?i?$LE?Y?5@ DB ' ', 0bcH, 0d5H, 0c8H, 0e7H
	DB	0b5H, 0e9H, 0b4H, 0d9H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LOMDAPBP@?5?$MA?O?$LO?n?$LD?$KK?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@LOMDAPBP@?5?$MA?O?$LO?n?$LD?$KK?$LE?Y?5@ DB ' ', 0c0H, 0cfH, 0beH
	DB	0eeH, 0b3H, 0aaH, 0b4H, 0d9H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LEPHHCI@?5?$LO?I?$KB?$KB?$KB?$KB?$LE?Y?5@
CONST	SEGMENT
??_C@_0L@LEPHHCI@?5?$LO?I?$KB?$KB?$KB?$KB?$LE?Y?5@ DB ' ', 0beH, 0c9H, 0a1H
	DB	0a1H, 0a1H, 0a1H, 0b4H, 0d9H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LEKAGBMD@?G?X?$LE?g?A?v?$LP?$KK?$LP?$KB?5?$MA?V?$LE?B?5?F?D?F?$LM?$LI?$KG?5?$LA?K?$LL?v?G?U?$LE?O@
CONST	SEGMENT
??_C@_0CD@LEKAGBMD@?G?X?$LE?g?A?v?$LP?$KK?$LP?$KB?5?$MA?V?$LE?B?5?F?D?F?$LM?$LI?$KG?5?$LA?K?$LL?v?G?U?$LE?O@ DB 0c7H
	DB	0d8H, 0b4H, 0e7H, 0c1H, 0f6H, 0bfH, 0aaH, 0bfH, 0a1H, ' ', 0c0H
	DB	0d6H, 0b4H, 0c2H, ' ', 0c6H, 0c4H, 0c6H, 0bcH, 0b8H, 0a6H, ' ', 0b0H
	DB	0cbH, 0bbH, 0f6H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@NCIEAEIK@?D?$LD?$LI?$KP?E?M?$MA?G?5?E?$LO?$LN?B?5?F?d?F?$KO?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0CB@NCIEAEIK@?D?$LD?$LI?$KP?E?M?$MA?G?5?E?$LO?$LN?B?5?F?d?F?$KO?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0c0H, 0c7H, ' ', 0c5H, 0beH, 0bdH
	DB	0c2H, ' ', 0c6H, 0e4H, 0c6H, 0aeH, 0b8H, 0a6H, ' ', 0c8H, 0aeH
	DB	0c0H, 0ceH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JAGIJNBP@?D?$LD?$LI?$KP?E?M?5?$LO?W?$LM?G?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BP@JAGIJNBP@?D?$LD?$LI?$KP?E?M?5?$LO?W?$LM?G?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, ' ', 0beH, 0d7H, 0bcH, 0c7H, ' ', 0c1H
	DB	0a4H, 0baH, 0b8H, 0b8H, 0a6H, ' ', 0c8H, 0aeH, 0c0H, 0ceH, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EJDCDLOD@?D?y?$LN?$LK?F?$KO?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BK@EJDCDLOD@?D?y?$LN?$LK?F?$KO?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@ DB 0c4H
	DB	0f9H, 0bdH, 0baH, 0c6H, 0aeH, ' ', 0c1H, 0a4H, 0baH, 0b8H, 0b8H
	DB	0a6H, ' ', 0c8H, 0aeH, 0c0H, 0ceH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KMDDMCEP@?$MA?$PM?E?u?$LI?$KG?5?$LA?$PM?$MA?$PM?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BD@KMDDMCEP@?$MA?$PM?E?u?$LI?$KG?5?$LA?$PM?$MA?$PM?G?U?$LE?O?$LE?Y?4@ DB 0c0H
	DB	0fcH, 0c5H, 0f5H, 0b8H, 0a6H, ' ', 0b0H, 0fcH, 0c0H, 0fcH, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NBCGMCO@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@
CONST	SEGMENT
??_C@_0BJ@NBCGMCO@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@ DB 0c0H
	DB	0fcH, 0c5H, 0f5H, 0bfH, 0a1H, ' ', 0c2H, 0fcH, 0bfH, 0a9H, 0c7H
	DB	0d2H, ' ', 0bcH, 0f6H, ' ', 0beH, 0f8H, 0beH, 0eeH, 0bfH, 0e4H
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KFAJKCNC@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BD@KFAJKCNC@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@ DB 0c0H
	DB	0fcH, 0c5H, 0f5H, 0bfH, 0a1H, ' ', 0c2H, 0fcH, 0bfH, 0a9H, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GJIBCGFI@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LE?k?$MA?$PM?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BO@GJIBCGFI@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LE?k?$MA?$PM?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@ DB 0bbH
	DB	0f3H, 0b4H, 0ebH, 0b9H, 0e6H, 0bfH, 0a1H, 0b0H, 0d4H, ' ', 0b4H
	DB	0ebH, 0c0H, 0fcH, 0c0H, 0bbH, ' ', 0bdH, 0c5H, 0c3H, 0bbH, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EEGCGAJN@CHAOS?5?$LM?$KN?$LJ?v?5VIP?$LL?s?A?$KB?$MA?T?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BJ@EEGCGAJN@CHAOS?5?$LM?$KN?$LJ?v?5VIP?$LL?s?A?$KB?$MA?T?$LE?O?$LE?Y@ DB 'C'
	DB	'HAOS ', 0bcH, 0adH, 0b9H, 0f6H, ' VIP', 0bbH, 0f3H, 0c1H, 0a1H
	DB	0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MJKCDDG@?F?m?$LI?$KO?G?O?$LA?T?5?$MA?$KH?D?$KB?$LI?$KG?5?$MA?L?$LF?$LP?G?R?$LM?v?$MA?V?$LE?B?5?$LP?v@
CONST	SEGMENT
??_C@_0CO@MJKCDDG@?F?m?$LI?$KO?G?O?$LA?T?5?$MA?$KH?D?$KB?$LI?$KG?5?$MA?L?$LF?$LP?G?R?$LM?v?$MA?V?$LE?B?5?$LP?v@ DB 0c6H
	DB	0edH, 0b8H, 0aeH, 0c7H, 0cfH, 0b0H, 0d4H, ' ', 0c0H, 0a7H, 0c4H
	DB	0a1H, 0b8H, 0a6H, ' ', 0c0H, 0ccH, 0b5H, 0bfH, 0c7H, 0d2H, 0bcH
	DB	0f6H, 0c0H, 0d6H, 0b4H, 0c2H, ' ', 0bfH, 0f6H, 0c7H, 0c1H, 0b5H
	DB	0b5H, 0bfH, 0ecH, 0b9H, 0ccH, 0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NDPFBKJO@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LB?$LD?H?$KP?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BO@NDPFBKJO@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LB?$LD?H?$KP?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@ DB 0bbH
	DB	0f3H, 0b4H, 0ebH, 0b9H, 0e6H, 0bfH, 0a1H, 0b0H, 0d4H, ' ', 0b1H
	DB	0b3H, 0c8H, 0afH, 0c0H, 0bbH, ' ', 0bdH, 0c5H, 0c3H, 0bbH, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JPNLKOND@?$LL?s?$LE?k?$LJ?f?$MA?G?5?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BM@JPNLKOND@?$LL?s?$LE?k?$LJ?f?$MA?G?5?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@ DB 0bbH
	DB	0f3H, 0b4H, 0ebH, 0b9H, 0e6H, 0c0H, 0c7H, ' ', 0c6H, 0c4H, 0c6H
	DB	0bcH, 0bfH, 0a1H, ' ', 0c2H, 0fcH, 0bfH, 0a9H, 0c7H, 0d5H, 0b4H
	DB	0cfH, 0b4H, 0d9H, '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CHLJOFEL@?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@
CONST	SEGMENT
??_C@_0BJ@CHLJOFEL@?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@ DB 0c6H
	DB	0c4H, 0c6H, 0bcH, 0bfH, 0a1H, ' ', 0c2H, 0fcH, 0bfH, 0a9H, 0c7H
	DB	0d2H, ' ', 0bcH, 0f6H, ' ', 0beH, 0f8H, 0beH, 0eeH, 0bfH, 0e4H
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BDLIIEIH@?$LL?s?$LE?k?$LJ?f?$LA?z?5?$LI?m?G?T?$MA?$LL?5?$LB?$LD?H?$KP?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BM@BDLIIEIH@?$LL?s?$LE?k?$LJ?f?$LA?z?5?$LI?m?G?T?$MA?$LL?5?$LB?$LD?H?$KP?G?U?$LE?O?$LE?Y?4@ DB 0bbH
	DB	0f3H, 0b4H, 0ebH, 0b9H, 0e6H, 0b0H, 0faH, ' ', 0b8H, 0edH, 0c7H
	DB	0d4H, 0c0H, 0bbH, ' ', 0b1H, 0b3H, 0c8H, 0afH, 0c7H, 0d5H, 0b4H
	DB	0cfH, 0b4H, 0d9H, '.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KALKBBEH@?$LI?$NO?$LE?$LK?$LI?$KG?5?$LM?$LD?A?$KE?G?U?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BD@KALKBBEH@?$LI?$NO?$LE?$LK?$LI?$KG?5?$LM?$LD?A?$KE?G?U?$LE?O?$LE?Y?4@ DB 0b8H
	DB	0deH, 0b4H, 0baH, 0b8H, 0a6H, ' ', 0bcH, 0b3H, 0c1H, 0a4H, 0c7H
	DB	0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HJEPKLDC@?$MA?L?$LA?w?$LP?$KB?$LM?$KN?5?F?D?F?$LM?$LI?$KG?5?$LB?$LI?$LM?$LK?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE@
CONST	SEGMENT
??_C@_0CD@HJEPKLDC@?$MA?L?$LA?w?$LP?$KB?$LM?$KN?5?F?D?F?$LM?$LI?$KG?5?$LB?$LI?$LM?$LK?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE@ DB 0c0H
	DB	0ccH, 0b0H, 0f7H, 0bfH, 0a1H, 0bcH, 0adH, ' ', 0c6H, 0c4H, 0c6H
	DB	0bcH, 0b8H, 0a6H, ' ', 0b1H, 0b8H, 0bcH, 0baH, 0c7H, 0d2H, ' ', 0bcH
	DB	0f6H, ' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03OAFDEMMP@S?$HMP@
CONST	SEGMENT
??_C@_03OAFDEMMP@S?$HMP@ DB 'S|P', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@KIPDLLGN@P?$HM?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?A?v?5?$LO?J?$LO?F?5?A?$KE?$LK?$LI?$LI?$KG?5?H@
CONST	SEGMENT
??_C@_0DA@KIPDLLGN@P?$HM?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?A?v?5?$LO?J?$LO?F?5?A?$KE?$LK?$LI?$LI?$KG?5?H@ DB 'P'
	DB	'|', 0baH, 0ceH, 0c1H, 0b7H, 0bfH, 0a1H, ' ', 0b0H, 0a1H, 0c0H
	DB	0d4H, 0b5H, 0c7H, 0c1H, 0f6H, ' ', 0beH, 0caH, 0beH, 0c6H, ' ', 0c1H
	DB	0a4H, 0baH, 0b8H, 0b8H, 0a6H, ' ', 0c8H, 0aeH, 0c0H, 0ceH, 0c7H
	DB	0d2H, ' ', 0bcH, 0f6H, ' ', 0beH, 0f8H, 0beH, 0eeH, 0bfH, 0e4H
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_02OPIIDOKH@P?$HM@
CONST	SEGMENT
??_C@_02OPIIDOKH@P?$HM@ DB 'P|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@GPKKMDCO@?$LD?k?A?$KB?$LL?s?$LP?$KB?$LM?$KN?5?$LB?$LD?H?$KP?$MA?$LL?5?G?X?$LM?$KN?$LE?B?5?$LO?H?5?$LF?H?$LE@
CONST	SEGMENT
??_C@_0CB@GPKKMDCO@?$LD?k?A?$KB?$LL?s?$LP?$KB?$LM?$KN?5?$LB?$LD?H?$KP?$MA?$LL?5?G?X?$LM?$KN?$LE?B?5?$LO?H?5?$LF?H?$LE@ DB 0b3H
	DB	0ebH, 0c1H, 0a1H, 0bbH, 0f3H, 0bfH, 0a1H, 0bcH, 0adH, ' ', 0b1H
	DB	0b3H, 0c8H, 0afH, 0c0H, 0bbH, ' ', 0c7H, 0d8H, 0bcH, 0adH, 0b4H
	DB	0c2H, ' ', 0beH, 0c8H, ' ', 0b5H, 0c8H, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDDPELM@D?$HMD@
CONST	SEGMENT
??_C@_03DDDPELM@D?$HMD@ DB 'D|D', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PACKEJLJ@B?$HM@
CONST	SEGMENT
??_C@_02PACKEJLJ@B?$HM@ DB 'B|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PIPCNKOK@O?$HM@
CONST	SEGMENT
??_C@_02PIPCNKOK@O?$HM@ DB 'O|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LNGOBBOC@D?$HM?$CFd?$HM@
CONST	SEGMENT
??_C@_05LNGOBBOC@D?$HM?$CFd?$HM@ DB 'D|%d|', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@BCAEDIAE@?G?y?A?$KE?5?$LA?$KB?$LA?$NN?5?$LJ?$LA?G?$LA?$MA?$LK?5?$MA?O?$MA?O?$MA?L?5?$LA?m?$LI?$KG?5?$LM?v@
CONST	SEGMENT
??_C@_0CH@BCAEDIAE@?G?y?A?$KE?5?$LA?$KB?$LA?$NN?5?$LJ?$LA?G?$LA?$MA?$LK?5?$MA?O?$MA?O?$MA?L?5?$LA?m?$LI?$KG?5?$LM?v@ DB 0c7H
	DB	0f9H, 0c1H, 0a4H, ' ', 0b0H, 0a1H, 0b0H, 0ddH, ' ', 0b9H, 0b0H
	DB	0c7H, 0b0H, 0c0H, 0baH, ' ', 0c0H, 0cfH, 0c0H, 0cfH, 0c0H, 0ccH
	DB	' ', 0b0H, 0edH, 0b8H, 0a6H, ' ', 0bcH, 0f6H, ' ', 0beH, 0f8H, 0b4H
	DB	0d9H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@PJIKDD@?$LJ?Y?$LF?p?5?$LO?F?$MA?L?E?$NL?5?$LM?$LN?$LM?G?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@
CONST	SEGMENT
??_C@_0BM@PJIKDD@?$LJ?Y?$LF?p?5?$LO?F?$MA?L?E?$NL?5?$LM?$LN?$LM?G?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@ DB 0b9H
	DB	0d9H, 0b5H, 0f0H, ' ', 0beH, 0c6H, 0c0H, 0ccH, 0c5H, 0dbH, ' ', 0bcH
	DB	0bdH, 0bcH, 0c7H, 0c0H, 0ccH, ' ', 0baH, 0ceH, 0c1H, 0b7H, 0c7H
	DB	0d8H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KFKPCCNN@?$LN?$LK?E?f?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@
CONST	SEGMENT
??_C@_0BA@KFKPCCNN@?$LN?$LK?E?f?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@ DB 0bdH, 0baH
	DB	0c5H, 0e6H, 0c0H, 0ccH, ' ', 0baH, 0ceH, 0c1H, 0b7H, 0c7H, 0d8H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LGAMIGJ@?$LB?b?$LM?z?5?$CFd?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0M@LGAMIGJ@?$LB?b?$LM?z?5?$CFd?$KD?$LK?$CFs@ DB 0b1H, 0e2H, 0bcH, 0faH
	DB	' %d', 0a3H, 0baH, '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06CFCEDMBI@?C?f?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06CFCEDMBI@?C?f?$KD?$LK?$CFd@ DB 0c3H, 0e6H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06INCIIBEP@?G?$LD?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06INCIIBEP@?G?$LD?$KD?$LK?$CFd@ DB 0c7H, 0b3H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ECLMJCEN@?H?$KN?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06ECLMJCEN@?H?$KN?$KD?$LK?$CFd@ DB 0c8H, 0adH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DMNCJOEB@?$LM?v?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06DMNCJOEB@?$LM?v?$KD?$LK?$CFd@ DB 0bcH, 0f6H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LBGNCPKK@?A?v?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06LBGNCPKK@?A?v?$KD?$LK?$CFd@ DB 0c1H, 0f6H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GNIPPDB@?$LM?x?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06GNIPPDB@?$LM?x?$KD?$LK?$CFd@ DB 0bcH, 0f8H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GNDMLDHN@?$LJ?f?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06GNDMLDHN@?$LJ?f?$KD?$LK?$CFd@ DB 0b9H, 0e6H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06MBHIJFEF@?$LA?x?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06MBHIJFEF@?$LA?x?$KD?$LK?$CFd@ DB 0b0H, 0f8H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HJFMPHBK@?$LD?$LL?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06HJFMPHBK@?$LD?$LL?$KD?$LK?$CFd@ DB 0b3H, 0bbH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EGBMLAEA@Lv?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_06EGBMLAEA@Lv?$KD?$LK?$CFd@ DB 'Lv', 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HLBLNMPK@?$CFd?5?H?$LI?$MA?$PM@
CONST	SEGMENT
??_C@_07HLBLNMPK@?$CFd?5?H?$LI?$MA?$PM@ DB '%d ', 0c8H, 0b8H, 0c0H, 0fcH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDFFIDCJ@?$LD?$LL?$LB?$LI?$LH?B?$CI?$CFs?$CJ@
CONST	SEGMENT
??_C@_0L@LDFFIDCJ@?$LD?$LL?$LB?$LI?$LH?B?$CI?$CFs?$CJ@ DB 0b3H, 0bbH, 0b1H
	DB	0b8H, 0b7H, 0c2H, '(%s)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HBDNCLCF@?G?y?$LL?s?5?$LA?$KB?$LA?$NN@
CONST	SEGMENT
??_C@_09HBDNCLCF@?G?y?$LL?s?5?$LA?$KB?$LA?$NN@ DB 0c7H, 0f9H, 0bbH, 0f3H, ' '
	DB	0b0H, 0a1H, 0b0H, 0ddH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PJDALANN@N?$HM@
CONST	SEGMENT
??_C@_02PJDALANN@N?$HM@ DB 'N|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07PKADKLEL@B?$HM?$CFd?$HM?$CFs@
CONST	SEGMENT
??_C@_07PKADKLEL@B?$HM?$CFd?$HM?$CFs@ DB 'B|%d|%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFADCKOJ@?$CFd?$HM@
CONST	SEGMENT
??_C@_03IFADCKOJ@?$CFd?$HM@ DB '%d|', 00H		; `string'
CONST	ENDS
;	COMDAT ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
_DATA	SEGMENT
?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA DD 0ffffffffH ; `StreetVendorBuyWndfunc'::`2'::iMakePetAni
_DATA	ENDS
;	COMDAT ??_C@_04MPOIGBFL@SELL@
CONST	SEGMENT
??_C@_04MPOIGBFL@SELL@ DB 'SELL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PFGFFPDM@E?$HM@
CONST	SEGMENT
??_C@_02PFGFFPDM@E?$HM@ DB 'E|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06EFALBHEL@R?$HMP?$HM?91@
CONST	SEGMENT
??_C@_06EFALBHEL@R?$HMP?$HM?91@ DB 'R|P|-1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KAHBFCEF@S?$HM?$CFd?$HM?$CFs?$CFs@
CONST	SEGMENT
??_C@_09KAHBFCEF@S?$HM?$CFd?$HM?$CFs?$CFs@ DB 'S|%d|%s%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DJCPLGCF@?$LO?n?$LM?$KN?$LP?$MA?$LN?J?$LN?C?$LP?$MA?$CB?$CB@
CONST	SEGMENT
??_C@_0P@DJCPLGCF@?$LO?n?$LM?$KN?$LP?$MA?$LN?J?$LN?C?$LP?$MA?$CB?$CB@ DB 0beH
	DB	0eeH, 0bcH, 0adH, 0bfH, 0c0H, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H
	DB	'!!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09CGALFHNJ@?$CFd?$HM?$CFd?$HM?$CFd?$HM@
CONST	SEGMENT
??_C@_09CGALFHNJ@?$CFd?$HM?$CFd?$HM?$CFd?$HM@ DB '%d|%d|%d|', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OPLGMGNK@?$CF?917s?$CF?912s?$CF8d@
CONST	SEGMENT
??_C@_0O@OPLGMGNK@?$CF?917s?$CF?912s?$CF8d@ DB '%-17s%-12s%8d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OKDFECEM@?$CF?917s?$CF?912s?$CF8s@
CONST	SEGMENT
??_C@_0O@OKDFECEM@?$CF?917s?$CF?912s?$CF8s@ DB '%-17s%-12s%8s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03CAPDGGPL@?$DP?K?$MA@
CONST	SEGMENT
??_C@_03CAPDGGPL@?$DP?K?$MA@ DB '?', 0cbH, 0c0H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MINOFDLM@?$CF?920sx?$CF3d?$CF13d@
CONST	SEGMENT
??_C@_0O@MINOFDLM@?$CF?920sx?$CF3d?$CF13d@ DB '%-20sx%3d%13d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNFNNHCK@?$CF?920sx?$CF3d?$CF13s@
CONST	SEGMENT
??_C@_0O@MNFNNHCK@?$CF?920sx?$CF3d?$CF13s@ DB '%-20sx%3d%13s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01MMEEDKFM@X@
CONST	SEGMENT
??_C@_01MMEEDKFM@X@ DB 'X', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA
_DATA	SEGMENT
?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA DB 01H ; `StreetVendorWndfunc'::`2'::bChangePet
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?ReadAniFile@@YAHH@Z
_TEXT	SEGMENT
_readbyte$ = -40					; size = 4
_fileName$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_floor$ = 8						; size = 4
?ReadAniFile@@YAHH@Z PROC				; ReadAniFile, COMDAT

; 5462 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	57		 push	 edi

; 5463 : 	HANDLE hFile;
; 5464 : 	DWORD readbyte;
; 5465 : 	char fileName[32];
; 5466 : 	ani_num = 0;
; 5467 : 	int col = 0, row = 0;
; 5468 : 	breadAniFlag = TRUE;  //è¯»åæ¡£æ¡ææ 
; 5469 : 	sprintf(fileName, "map\\%d.ani", floor);

  00012	ff 75 08	 push	 DWORD PTR _floor$[ebp]
  00015	8d 45 dc	 lea	 eax, DWORD PTR _fileName$[ebp]
  00018	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ani_num@@3HA, 0 ; ani_num
  00022	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MGMKLDIO@map?2?$CFd?4ani@
  00027	50		 push	 eax
  00028	33 ff		 xor	 edi, edi
  0002a	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?breadAniFlag@@3HA, 1 ; breadAniFlag
  00034	e8 00 00 00 00	 call	 _sprintf
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003c	b8 18 00 00 00	 mov	 eax, OFFSET ?ProduceXY@@3PAY06HA+24
  00041	0f 1f 40 00 66
	66 66 0f 1f 84
	00 00 00 00 00	 npad	 15
$LL4@ReadAniFil:

; 5470 : 	for (int i = 0; i < MAX_ANIM; i++)
; 5471 : 	{
; 5472 : 		ProduceXY[i][5] = -2;

  00050	c7 40 fc fe ff
	ff ff		 mov	 DWORD PTR [eax-4], -2	; fffffffeH

; 5473 : 		ProduceXY[i][6] = -1;

  00057	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  0005d	83 c0 1c	 add	 eax, 28			; 0000001cH
  00060	3d 18 1c 00 00	 cmp	 eax, OFFSET ?ProduceXY@@3PAY06HA+7192
  00065	7c e9		 jl	 SHORT $LL4@ReadAniFil

; 5474 : 	}
; 5475 : 	if ((hFile = CreateFile(fileName, GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, NULL, NULL)) == INVALID_HANDLE_VALUE)

  00067	6a 00		 push	 0
  00069	6a 00		 push	 0
  0006b	6a 03		 push	 3
  0006d	6a 00		 push	 0
  0006f	6a 01		 push	 1
  00071	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00076	8d 45 dc	 lea	 eax, DWORD PTR _fileName$[ebp]
  00079	50		 push	 eax
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateFileA@28
  00080	8b d8		 mov	 ebx, eax
  00082	83 fb ff	 cmp	 ebx, -1
  00085	75 12		 jne	 SHORT $LN10@ReadAniFil

; 5476 : 		return -1;

  00087	5f		 pop	 edi
  00088	0b c0		 or	 eax, eax

; 5485 : 
; 5486 : 	return 1;
; 5487 : }

  0008a	5b		 pop	 ebx
  0008b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0008e	33 cd		 xor	 ecx, ebp
  00090	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00095	8b e5		 mov	 esp, ebp
  00097	5d		 pop	 ebp
  00098	c3		 ret	 0
$LN10@ReadAniFil:

; 5477 : 
; 5478 : 	while (ReadFile(hFile, &ProduceXY[row], sizeof(int) * 5, &readbyte, NULL) && readbyte)

  00099	6a 00		 push	 0
  0009b	8d 45 d8	 lea	 eax, DWORD PTR _readbyte$[ebp]
  0009e	50		 push	 eax
  0009f	6a 14		 push	 20			; 00000014H
  000a1	68 00 00 00 00	 push	 OFFSET ?ProduceXY@@3PAY06HA
  000a6	53		 push	 ebx
  000a7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReadFile@20
  000ad	85 c0		 test	 eax, eax
  000af	74 2c		 je	 SHORT $LN17@ReadAniFil
  000b1	56		 push	 esi
  000b2	be 00 00 00 00	 mov	 esi, OFFSET ?ProduceXY@@3PAY06HA
$LL5@ReadAniFil:
  000b7	83 7d d8 00	 cmp	 DWORD PTR _readbyte$[ebp], 0
  000bb	74 1f		 je	 SHORT $LN18@ReadAniFil
  000bd	6a 00		 push	 0
  000bf	8d 45 d8	 lea	 eax, DWORD PTR _readbyte$[ebp]

; 5479 : 	{
; 5480 : 		ProduceXY[row][5] = 0;

  000c2	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  000c9	50		 push	 eax
  000ca	6a 14		 push	 20			; 00000014H

; 5481 : 		row++;

  000cc	83 c6 1c	 add	 esi, 28			; 0000001cH
  000cf	47		 inc	 edi
  000d0	56		 push	 esi
  000d1	53		 push	 ebx
  000d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ReadFile@20
  000d8	85 c0		 test	 eax, eax
  000da	75 db		 jne	 SHORT $LL5@ReadAniFil
$LN18@ReadAniFil:
  000dc	5e		 pop	 esi
$LN17@ReadAniFil:

; 5482 : 	}
; 5483 : 	ani_num = row; //è¯¥å°å¾æ»å¨ç»æ°
; 5484 : 	CloseHandle(hFile);

  000dd	53		 push	 ebx
  000de	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ani_num@@3HA, edi ; ani_num
  000e4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 5485 : 
; 5486 : 	return 1;
; 5487 : }

  000ea	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ed	b8 01 00 00 00	 mov	 eax, 1
  000f2	5f		 pop	 edi
  000f3	33 cd		 xor	 ecx, ebp
  000f5	5b		 pop	 ebx
  000f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fb	8b e5		 mov	 esp, ebp
  000fd	5d		 pop	 ebp
  000fe	c3		 ret	 0
?ReadAniFile@@YAHH@Z ENDP				; ReadAniFile
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?AniRandomRelease@@YAXXZ
_TEXT	SEGMENT
?AniRandomRelease@@YAXXZ PROC				; AniRandomRelease, COMDAT

; 3063 : {

  00000	56		 push	 esi

; 3064 : 	for (int i = 0; i < 50; i++)

  00001	be 00 00 00 00	 mov	 esi, OFFSET ?WaterAct@@3PAPAUaction@@A
$LL4@AniRandomR:

; 3065 : 	{
; 3066 : 		if (WaterAct[i] != NULL)

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	85 c0		 test	 eax, eax
  0000a	74 0f		 je	 SHORT $LN2@AniRandomR

; 3067 : 		{
; 3068 : 			DeathAction(WaterAct[i]);

  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00012	83 c4 04	 add	 esp, 4

; 3069 : 			WaterAct[i] = NULL;

  00015	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@AniRandomR:

; 3064 : 	for (int i = 0; i < 50; i++)

  0001b	83 c6 04	 add	 esi, 4
  0001e	81 fe c8 00 00
	00		 cmp	 esi, OFFSET ?WaterAct@@3PAPAUaction@@A+200
  00024	7c e0		 jl	 SHORT $LL4@AniRandomR

; 3070 : 		}
; 3071 : 	}
; 3072 : }

  00026	5e		 pop	 esi
  00027	c3		 ret	 0
?AniRandomRelease@@YAXXZ ENDP				; AniRandomRelease
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?ImmobileAniRelease@@YAXXZ
_TEXT	SEGMENT
?ImmobileAniRelease@@YAXXZ PROC				; ImmobileAniRelease, COMDAT

; 3041 : {

  00000	56		 push	 esi

; 3042 : 	Updownflag = false;

  00001	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?Updownflag@@3_NA, 0 ; Updownflag
  00008	be 10 00 00 00	 mov	 esi, OFFSET ?XYposition@@3PAY06HA+16
  0000d	0f 1f 00	 npad	 3
$LL4@ImmobileAn:

; 3044 : 	{
; 3045 : 		if (XYposition[i][3] == 1)

  00010	83 7e fc 01	 cmp	 DWORD PTR [esi-4], 1
  00014	75 37		 jne	 SHORT $LN2@ImmobileAn

; 3046 : 		{
; 3047 : 			if (WaterAct3[XYposition[i][4]] != NULL)

  00016	8b 06		 mov	 eax, DWORD PTR [esi]
  00018	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  0001f	85 c0		 test	 eax, eax
  00021	74 2a		 je	 SHORT $LN2@ImmobileAn

; 3048 : 			{
; 3049 : 				DeathAction(WaterAct3[XYposition[i][4]]);

  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 3050 : 				WaterAct3[XYposition[i][4]] = NULL;

  00029	8b 06		 mov	 eax, DWORD PTR [esi]
  0002b	83 c4 04	 add	 esp, 4

; 3051 : 				XYposition[i][3] = 0;

  0002e	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0

; 3052 : 				XYposition[i][4] = -1;

  00035	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1

; 3053 : 				//				XYposition[i][5] = 1  ; //æ°å¢ä¸æ¼æµ®çææ 2ï¼æä¸å
; 3054 : 				XYposition[i][6] = 0;

  0003b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00042	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4], 0
$LN2@ImmobileAn:

; 3043 : 	for (int i = 0; i < 560; i++)

  0004d	83 c6 1c	 add	 esi, 28			; 0000001cH
  00050	81 fe 50 3d 00
	00		 cmp	 esi, OFFSET ?XYposition@@3PAY06HA+15696
  00056	7c b8		 jl	 SHORT $LL4@ImmobileAn

; 3055 : 			}
; 3056 : 		}
; 3057 : 	}
; 3058 : }

  00058	5e		 pop	 esi
  00059	c3		 ret	 0
?ImmobileAniRelease@@YAXXZ ENDP				; ImmobileAniRelease
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?crossAniRelease@@YAXXZ
_TEXT	SEGMENT
?crossAniRelease@@YAXXZ PROC				; crossAniRelease, COMDAT

; 3031 : 	if (WaterAct2 != NULL) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?WaterAct2@@3PAUaction@@A
  00005	85 c0		 test	 eax, eax
  00007	74 1a		 je	 SHORT $LN2@crossAniRe

; 3032 : 		DeathAction(WaterAct2);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0000f	83 c4 04	 add	 esp, 4

; 3033 : 		WaterAct2 = NULL;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?WaterAct2@@3PAUaction@@A, 0

; 3034 : 		Timeflag2 = false;

  0001c	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?Timeflag2@@3_NA, 0 ; Timeflag2
$LN2@crossAniRe:

; 3035 : 	}
; 3036 : }

  00023	c3		 ret	 0
?crossAniRelease@@YAXXZ ENDP				; crossAniRelease
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?leaderFuncWN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?leaderFuncWN@@YAXXZ PROC				; leaderFuncWN, COMDAT

; 5285 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 04 00
	00		 sub	 esp, 1028		; 00000404H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 5286 : 	//static ACTION *ptActMenuWin = NULL;
; 5287 : 	int x, y, w, h;
; 5288 : 	static int btnId[9];
; 5289 : 	static int graId[1];
; 5290 : 	char buf[1024];
; 5291 : 	int selId;
; 5292 : 	int selgraId;
; 5293 : 
; 5294 : 	x = 160;
; 5295 : 	y = 30;
; 5296 : 	w = 2;
; 5297 : 	h = 7;
; 5298 : 
; 5299 : 	if (ptActLeaderFuncWin == NULL)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A
  00018	85 c0		 test	 eax, eax
  0001a	75 29		 jne	 SHORT $LN2@leaderFunc

; 5300 : 	{
; 5301 : 		ptActLeaderFuncWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001c	6a 01		 push	 1
  0001e	50		 push	 eax
  0001f	6a 07		 push	 7
  00021	6a 02		 push	 2
  00023	6a 1e		 push	 30			; 0000001eH
  00025	68 a0 00 00 00	 push	 160			; 000000a0H
  0002a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0002f	83 c4 18	 add	 esp, 24			; 00000018H
  00032	a3 00 00 00 00	 mov	 DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A, eax

; 5452 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5453 : 		else if (selId == 6)
; 5454 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¶ëì°í­ëª©ìëíì¸ê¸ì¡°ì ã");
; 5455 : #endif
; 5456 : 	}
; 5457 : 
; 5458 : }

  00037	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0003a	33 cd		 xor	 ecx, ebp
  0003c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00041	8b e5		 mov	 esp, ebp
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN2@leaderFunc:

; 5302 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 5303 : 		x = ptActLeaderFuncWin->x;
; 5304 : 		y = ptActLeaderFuncWin->y;
; 5305 : #endif
; 5306 : 	}
; 5307 : 	else if (ptActLeaderFuncWin->hp >= 1)

  00045	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00049	0f 8c ad 02 00
	00		 jl	 $LN37@leaderFunc

; 5308 : 	{
; 5309 : 		// ESC???????î·?
; 5310 : 		if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL))

  0004f	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00059	74 25		 je	 SHORT $LN5@leaderFunc
  0005b	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00060	85 c0		 test	 eax, eax
  00062	75 1c		 jne	 SHORT $LN5@leaderFunc

; 5311 : 		{
; 5312 : 			closeJoinChannelWN();

  00064	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 5313 : 			play_se(203, 320, 240);	// ?????î¼???

  00069	68 f0 00 00 00	 push	 240			; 000000f0H
  0006e	68 40 01 00 00	 push	 320			; 00000140H
  00073	68 cb 00 00 00	 push	 203			; 000000cbH
  00078	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0007d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@leaderFunc:

; 5314 : 		}
; 5315 : 		if (CheckMenuFlag())

  00080	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00085	85 c0		 test	 eax, eax
  00087	74 05		 je	 SHORT $LN6@leaderFunc

; 5316 : 			closeJoinChannelWN();

  00089	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN
$LN6@leaderFunc:
  0008e	56		 push	 esi

; 5317 : 
; 5318 : 		selId = focusFontId(btnId, sizeof(btnId) / sizeof(int));

  0008f	6a 09		 push	 9
  00091	68 00 00 00 00	 push	 OFFSET ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA
  00096	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId

; 5319 : 		selgraId = focusGraId(graId, sizeof(graId) / sizeof(int));

  0009b	6a 01		 push	 1
  0009d	68 00 00 00 00	 push	 OFFSET ?graId@?1??leaderFuncWN@@YAXXZ@4PAHA
  000a2	8b f0		 mov	 esi, eax
  000a4	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  000a9	83 c4 10	 add	 esp, 16			; 00000010H

; 5320 : 
; 5321 : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  000ac	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000b3	0f 84 a6 00 00
	00		 je	 $LN21@leaderFunc

; 5322 : 		{
; 5323 : 			if (selId == 1)

  000b9	83 fe 01	 cmp	 esi, 1
  000bc	75 3e		 jne	 SHORT $LN8@leaderFunc

; 5324 : 			{
; 5325 : #ifdef _FMVER21
; 5326 : 				if (pc.familyleader != FMMEMBER_LEADER)

  000be	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3
  000c5	0f 85 30 02 00
	00		 jne	 $LN41@leaderFunc

; 5327 : #else
; 5328 : 				if (pc.familyleader != 1)
; 5329 : #endif
; 5330 : 					return;
; 5331 : 				sprintf(buf, "C|J|5");

  000cb	68 00 00 00 00	 push	 OFFSET ??_C@_05PAKAMAIL@C?$HMJ?$HM5@
$LN43@leaderFunc:

; 5380 : 				else
; 5381 : 					old_lssproto_FM_send(sockfd, buf);
; 5382 : 				closeJoinChannelWN();

  000d0	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 _sprintf
  000dc	83 c4 08	 add	 esp, 8
  000df	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000e5	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000ec	50		 push	 eax
  000ed	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000f3	74 37		 je	 SHORT $LN10@leaderFunc
  000f5	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  000fa	eb 35		 jmp	 SHORT $LN42@leaderFunc
$LN8@leaderFunc:

; 5332 : 				if (bNewServer)
; 5333 : 					lssproto_FM_send(sockfd, buf);
; 5334 : 				else
; 5335 : 					old_lssproto_FM_send(sockfd, buf);
; 5336 : 				closeJoinChannelWN();
; 5337 : 				play_se(203, 320, 240);	// ?????î¼???
; 5338 : 				return;
; 5339 : 			}
; 5340 : 			if (selId == 2)

  000fc	83 fe 02	 cmp	 esi, 2
  000ff	75 07		 jne	 SHORT $LN12@leaderFunc

; 5341 : 			{
; 5342 : 				sprintf(buf, "L|F|1");

  00101	68 00 00 00 00	 push	 OFFSET ??_C@_05CPEMAIOC@L?$HMF?$HM1@

; 5343 : 				if (bNewServer)
; 5344 : 					lssproto_FM_send(sockfd, buf);

  00106	eb c8		 jmp	 SHORT $LN43@leaderFunc
$LN12@leaderFunc:

; 5345 : 				else
; 5346 : 					old_lssproto_FM_send(sockfd, buf);
; 5347 : 				closeJoinChannelWN();
; 5348 : 				play_se(203, 320, 240);	// ?????î¼???
; 5349 : 				return;
; 5350 : 			}
; 5351 : 
; 5352 : 			if (selId == 3)

  00108	83 fe 03	 cmp	 esi, 3
  0010b	75 07		 jne	 SHORT $LN15@leaderFunc

; 5353 : 			{
; 5354 : 				sprintf(buf, "L|L|1");

  0010d	68 00 00 00 00	 push	 OFFSET ??_C@_05EAPBOIIG@L?$HML?$HM1@

; 5355 : 				if (bNewServer)
; 5356 : 					lssproto_FM_send(sockfd, buf);

  00112	eb bc		 jmp	 SHORT $LN43@leaderFunc
$LN15@leaderFunc:

; 5357 : 				else
; 5358 : 					old_lssproto_FM_send(sockfd, buf);
; 5359 : 				closeJoinChannelWN();
; 5360 : 				play_se(203, 320, 240);	// ?????î¼???
; 5361 : 				return;
; 5362 : 			}
; 5363 : 			if (selId == 4)

  00114	83 fe 04	 cmp	 esi, 4
  00117	75 07		 jne	 SHORT $LN18@leaderFunc

; 5364 : 			{
; 5365 : 				sprintf(buf, "L|L|2");

  00119	68 00 00 00 00	 push	 OFFSET ??_C@_05GLNMLLEF@L?$HML?$HM2@

; 5366 : 				if (bNewServer)
; 5367 : 					lssproto_FM_send(sockfd, buf);

  0011e	eb b0		 jmp	 SHORT $LN43@leaderFunc
$LN18@leaderFunc:

; 5368 : 				else
; 5369 : 					old_lssproto_FM_send(sockfd, buf);
; 5370 : 				closeJoinChannelWN();
; 5371 : 				play_se(203, 320, 240);	// ?????î¼???
; 5372 : 				return;
; 5373 : 			}
; 5374 : 
; 5375 : 			if (selId == 5)

  00120	83 fe 05	 cmp	 esi, 5
  00123	75 3a		 jne	 SHORT $LN21@leaderFunc

; 5376 : 			{
; 5377 : 				sprintf(buf, "L|CHANGE|L");

  00125	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CJCIOOAN@L?$HMCHANGE?$HML@

; 5378 : 				if (bNewServer)
; 5379 : 					lssproto_FM_send(sockfd, buf);

  0012a	eb a4		 jmp	 SHORT $LN43@leaderFunc
$LN10@leaderFunc:

; 5380 : 				else
; 5381 : 					old_lssproto_FM_send(sockfd, buf);
; 5382 : 				closeJoinChannelWN();

  0012c	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN42@leaderFunc:
  00131	83 c4 08	 add	 esp, 8
  00134	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 5383 : 				play_se(203, 320, 240);	// ?????î¼???

  00139	68 f0 00 00 00	 push	 240			; 000000f0H
  0013e	68 40 01 00 00	 push	 320			; 00000140H
  00143	68 cb 00 00 00	 push	 203			; 000000cbH
  00148	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0014d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00150	5e		 pop	 esi

; 5452 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5453 : 		else if (selId == 6)
; 5454 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¶ëì°í­ëª©ìëíì¸ê¸ì¡°ì ã");
; 5455 : #endif
; 5456 : 	}
; 5457 : 
; 5458 : }

  00151	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00154	33 cd		 xor	 ecx, ebp
  00156	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015b	8b e5		 mov	 esp, ebp
  0015d	5d		 pop	 ebp
  0015e	c3		 ret	 0
$LN21@leaderFunc:

; 5384 : 				return;
; 5385 : 			}
; 5386 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5387 : 			if (selId == 6)
; 5388 : 			{
; 5389 : 				sprintf(buf, "L|FMTAX|W");
; 5390 : 				if (bNewServer)
; 5391 : 					lssproto_FM_send(sockfd, buf);
; 5392 : 				else
; 5393 : 					old_lssproto_FM_send(sockfd, buf);
; 5394 : 				closeJoinChannelWN();
; 5395 : 				play_se(203, 320, 240);	// ?????î¼???
; 5396 : 				return;
; 5397 : 			}
; 5398 : #endif
; 5399 : 		}
; 5400 : 		int ä¸´æ¶è¡¥X = 0;
; 5401 : 		if (ResoMode == åè¾¨ç::mode800) {

  0015f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00164	57		 push	 edi
  00165	33 ff		 xor	 edi, edi
  00167	83 f8 03	 cmp	 eax, 3
  0016a	75 05		 jne	 SHORT $LN24@leaderFunc

; 5402 : 			ä¸´æ¶è¡¥X = 80;

  0016c	8d 78 4d	 lea	 edi, DWORD PTR [eax+77]

; 5403 : 		}

  0016f	eb 0b		 jmp	 SHORT $LN26@leaderFunc
$LN24@leaderFunc:

; 5404 : 		else if (ResoMode == åè¾¨ç::mode1024) {

  00171	83 f8 04	 cmp	 eax, 4
  00174	b9 be 00 00 00	 mov	 ecx, 190		; 000000beH
  00179	0f 44 f9	 cmove	 edi, ecx
$LN26@leaderFunc:

; 5405 : 			ä¸´æ¶è¡¥X = 190;
; 5406 : 		}
; 5407 : #ifdef _FMVER21
; 5408 : 		if (pc.familyleader == FMMEMBER_LEADER)

  0017c	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
  00181	81 c7 b6 00 00
	00		 add	 edi, 182		; 000000b6H
  00187	83 f8 03	 cmp	 eax, 3
  0018a	0f 85 9f 00 00
	00		 jne	 $LN39@leaderFunc

; 5409 : #else
; 5410 : 		if (pc.familyleader == 1)
; 5411 : #endif
; 5412 : 		{
; 5413 : 			if (pc.channel == 5)

  00190	83 3d 0c 51 00
	00 05		 cmp	 DWORD PTR ?pc@@3UPC@@A+20748, 5
  00197	6a 02		 push	 2
  00199	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NIGFCJOO@?5?5?A?$LH?$MA?e?$LJ?f?$LM?$NL?5?5@
  0019e	75 04		 jne	 SHORT $LN28@leaderFunc

; 5414 : 				btnId[1] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 0, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  ì¡±ì¥ë°©ì¡  ", 2);

  001a0	6a 04		 push	 4
  001a2	eb 02		 jmp	 SHORT $LN44@leaderFunc
$LN28@leaderFunc:

; 5415 : 			else
; 5416 : 				btnId[1] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 0, FONT_PRIO_FRONT, FONT_PAL_WHITE, "  ì¡±ì¥ë°©ì¡  ", 2);

  001a4	6a 00		 push	 0
$LN44@leaderFunc:

; 5417 : 
; 5418 : 			btnId[2] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 1, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë¶ì¡±êµ¬ì±ìê´ë¦¬", 2);

  001a6	6a 01		 push	 1
  001a8	6a 5f		 push	 95			; 0000005fH
  001aa	57		 push	 edi
  001ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001b0	83 c4 18	 add	 esp, 24			; 00000018H
  001b3	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+4, eax
  001b8	6a 02		 push	 2
  001ba	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OGFFOIDE@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LA?$PM?$LI?$KO@
  001bf	6a 00		 push	 0
  001c1	6a 01		 push	 1
  001c3	68 83 00 00 00	 push	 131			; 00000083H
  001c8	57		 push	 edi
  001c9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5419 : 
; 5420 : 			btnId[3] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 2, FONT_PRIO_FRONT, FONT_PAL_WHITE, " ë¶ì¡±ì´ë ", 2);

  001ce	6a 02		 push	 2
  001d0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DOBBGKCH@?5?$LK?N?A?$LH?C?J?$LE?k?5@
  001d5	6a 00		 push	 0
  001d7	6a 01		 push	 1
  001d9	68 a7 00 00 00	 push	 167			; 000000a7H
  001de	57		 push	 edi
  001df	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+8, eax
  001e4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5421 : 			btnId[4] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 3, FONT_PRIO_FRONT, FONT_PAL_WHITE, " ì°êµ¬ëì ", 2);

  001e9	6a 02		 push	 2
  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MJPGOABE@?5?$LP?$KM?$LB?$LI?$LF?$LP?$MA?G?5@
  001f0	6a 00		 push	 0
  001f2	6a 01		 push	 1
  001f4	68 cb 00 00 00	 push	 203			; 000000cbH
  001f9	57		 push	 edi
  001fa	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+12, eax
  001ff	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00204	83 c4 48	 add	 esp, 72			; 00000048H
  00207	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+16, eax

; 5422 : 			btnId[5] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 4, FONT_PRIO_FRONT, FONT_PAL_WHITE, "  ì¡±ì¥ê¶íë¶ì¬  ", 2);

  0020c	6a 02		 push	 2
  0020e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BPLOID@?5?5?A?$LH?$MA?e?$LB?G?G?Q?$LK?N?$LP?$KJ?5?5@
  00213	6a 00		 push	 0
  00215	6a 01		 push	 1
  00217	68 ef 00 00 00	 push	 239			; 000000efH
  0021c	57		 push	 edi
  0021d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00222	a3 14 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+20, eax
  00227	83 c4 18	 add	 esp, 24			; 00000018H
  0022a	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
$LN39@leaderFunc:

; 5423 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5424 : 			btnId[6] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 5, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ì ì°ì¸ì¨ì¡°ì ", 2);
; 5425 : #endif
; 5426 : 		}
; 5427 : 		// shan begin
; 5428 : #ifdef _FMVER21
; 5429 : 		if (pc.familyleader == FMMEMBER_ELDER)

  0022f	83 f8 04	 cmp	 eax, 4
  00232	0f 85 8a 00 00
	00		 jne	 $LN30@leaderFunc

; 5430 : 		{
; 5431 : 			btnId[1] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 0, FONT_PRIO_FRONT, FONT_PAL_GRAY, "  ì¡±ì¥ë°©ì¡  ", 0);

  00238	6a 00		 push	 0
  0023a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NIGFCJOO@?5?5?A?$LH?$MA?e?$LJ?f?$LM?$NL?5?5@
  0023f	6a 07		 push	 7
  00241	6a 01		 push	 1
  00243	6a 5f		 push	 95			; 0000005fH
  00245	57		 push	 edi
  00246	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5432 : 			btnId[2] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 1, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë¶ì¡±êµ¬ì±ìê´ë¦¬", 2);

  0024b	6a 02		 push	 2
  0024d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OGFFOIDE@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LA?$PM?$LI?$KO@
  00252	6a 00		 push	 0
  00254	6a 01		 push	 1
  00256	68 83 00 00 00	 push	 131			; 00000083H
  0025b	57		 push	 edi
  0025c	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+4, eax
  00261	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5433 : 
; 5434 : 			btnId[3] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 2, FONT_PRIO_FRONT, FONT_PAL_WHITE, " ë¶ì¡±ì´ë ", 2);

  00266	6a 02		 push	 2
  00268	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DOBBGKCH@?5?$LK?N?A?$LH?C?J?$LE?k?5@
  0026d	6a 00		 push	 0
  0026f	6a 01		 push	 1
  00271	68 a7 00 00 00	 push	 167			; 000000a7H
  00276	57		 push	 edi
  00277	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+8, eax
  0027c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00281	83 c4 48	 add	 esp, 72			; 00000048H
  00284	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+12, eax

; 5435 : 			btnId[4] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 3, FONT_PRIO_FRONT, FONT_PAL_WHITE, " ì°êµ¬ëì ", 2);

  00289	6a 02		 push	 2
  0028b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MJPGOABE@?5?$LP?$KM?$LB?$LI?$LF?$LP?$MA?G?5@
  00290	6a 00		 push	 0
  00292	6a 01		 push	 1
  00294	68 cb 00 00 00	 push	 203			; 000000cbH
  00299	57		 push	 edi
  0029a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5436 : 			btnId[5] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 4, FONT_PRIO_FRONT, FONT_PAL_GRAY, "  ì¡±ì¥ê¶íë¶ì¬  ", 0);

  0029f	6a 00		 push	 0
  002a1	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BPLOID@?5?5?A?$LH?$MA?e?$LB?G?G?Q?$LK?N?$LP?$KJ?5?5@
  002a6	6a 07		 push	 7
  002a8	6a 01		 push	 1
  002aa	68 ef 00 00 00	 push	 239			; 000000efH
  002af	57		 push	 edi
  002b0	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+16, eax
  002b5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002ba	83 c4 30	 add	 esp, 48			; 00000030H
  002bd	a3 14 00 00 00	 mov	 DWORD PTR ?btnId@?1??leaderFuncWN@@YAXXZ@4PAHA+20, eax
$LN30@leaderFunc:

; 5437 : 
; 5438 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5439 : 			btnId[6] = StockFontBuffer(x + ä¸´æ¶è¡¥X + 22, y + 65 + 36 * 5, FONT_PRIO_FRONT, FONT_PAL_GRAY, "  ì ì°ì¸ì¨ì¡°ì   ", 0);
; 5440 : #endif
; 5441 : 		}
; 5442 : #endif
; 5443 : 		// shan end
; 5444 : 		if (selId == 1)

  002c2	5f		 pop	 edi
  002c3	83 fe 01	 cmp	 esi, 1
  002c6	75 07		 jne	 SHORT $LN31@leaderFunc

; 5445 : 			ShowBottomLineString(FONT_PAL_WHITE, "ì¡±ì¥ì ë¶ì¡±ìì ì²´ìê² ê³µì§í©ëë¤ã");

  002c8	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LJIHMIMO@?A?$LH?$MA?e?$MA?$LK?5?$LK?N?A?$LH?$LP?x?$MA?$PM?C?$LM?$LP?$KB?$LA?T?5?$LA?x?A?v?G?U?$LE?O?$LE@
  002cd	eb 22		 jmp	 SHORT $LN45@leaderFunc
$LN31@leaderFunc:

; 5446 : 		else if (selId == 2)

  002cf	83 fe 02	 cmp	 esi, 2
  002d2	75 07		 jne	 SHORT $LN33@leaderFunc

; 5447 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¶ì¡±êµ¬ì±ìëª©ë¡ã");

  002d4	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MGNAPNJL@?$LK?N?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$LI?q?$LH?O?$KB?$KD@
  002d9	eb 16		 jmp	 SHORT $LN45@leaderFunc
$LN33@leaderFunc:

; 5448 : 		else if (selId == 3)

  002db	83 fe 03	 cmp	 esi, 3
  002de	75 07		 jne	 SHORT $LN35@leaderFunc

; 5449 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¶ì¡±ë°©ë¬¸ì´ì²­ì¥ìì±ã");

  002e0	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@CGFLPMMC@?$LK?N?A?$LH?$LJ?f?$LJ?$KO?C?J?C?$LL?$MA?e?$MA?$NL?$LM?$LK?$KB?$KD@
  002e5	eb 0a		 jmp	 SHORT $LN45@leaderFunc
$LN35@leaderFunc:

; 5450 : 		else if (selId == 4)

  002e7	83 fe 04	 cmp	 esi, 4
  002ea	75 0f		 jne	 SHORT $LN41@leaderFunc

; 5451 : 			ShowBottomLineString(FONT_PAL_WHITE, "íì¹ë°°ì°ê¸°ìíëìììì±ã");

  002ec	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@EJEFDMMK@?E?$LO?$LN?B?$LJ?h?$LP?l?$LB?b?$MA?$KH?G?Q?$LF?$LP?$MA?G?$LM?$KN?$MA?$NL?$LM?$LK?$KB?$KD@
$LN45@leaderFunc:
  002f1	6a 00		 push	 0
  002f3	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  002f8	83 c4 08	 add	 esp, 8
$LN41@leaderFunc:
  002fb	5e		 pop	 esi
$LN37@leaderFunc:

; 5452 : #ifdef	_ADD_FAMILY_TAX		// WON ADD å¢å åºå­ç¨æ¶
; 5453 : 		else if (selId == 6)
; 5454 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¶ëì°í­ëª©ìëíì¸ê¸ì¡°ì ã");
; 5455 : #endif
; 5456 : 	}
; 5457 : 
; 5458 : }

  002fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ff	33 cd		 xor	 ecx, ebp
  00301	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00306	8b e5		 mov	 esp, ebp
  00308	5d		 pop	 ebp
  00309	c3		 ret	 0
?leaderFuncWN@@YAXXZ ENDP				; leaderFuncWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?joinChannel2WN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?joinChannel2WN@@YAXXZ PROC				; joinChannel2WN, COMDAT

; 5144 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 04 00
	00		 sub	 esp, 1028		; 00000404H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 5145 : 	//static ACTION *ptActMenuWin = NULL;
; 5146 : 	int x, y, w, h, i;
; 5147 : 	static int fontBtnId[4];
; 5148 : 	char buf[1024];
; 5149 : 	int selId;
; 5150 : 
; 5151 : 	x = 160;
; 5152 : 	y = 30;
; 5153 : 	w = 7;
; 5154 : 	h = 8;
; 5155 : 
; 5156 : 	if (ptActChannel2Win == NULL)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActChannel2Win@@3PAUaction@@A
  00018	85 c0		 test	 eax, eax
  0001a	75 3f		 jne	 SHORT $LN11@joinChanne

; 5157 : 	{
; 5158 : 		DeathAction(ptActLeaderFuncWin);

  0001c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A
  00022	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 5159 : 		ptActLeaderFuncWin = NULL;
; 5160 : 		ptActChannel2Win = MakeWindowDisp(x, y, w, h, NULL, 1);

  00027	6a 01		 push	 1
  00029	6a 00		 push	 0
  0002b	6a 08		 push	 8
  0002d	6a 07		 push	 7
  0002f	6a 1e		 push	 30			; 0000001eH
  00031	68 a0 00 00 00	 push	 160			; 000000a0H
  00036	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A, 0
  00040	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00045	83 c4 1c	 add	 esp, 28			; 0000001cH
  00048	a3 00 00 00 00	 mov	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A, eax

; 5278 : 			}
; 5279 : 		}
; 5280 : 	}
; 5281 : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN11@joinChanne:

; 5161 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 5162 : 		x = ptActChannel2Win->x;
; 5163 : 		y = ptActChannel2Win->y;
; 5164 : #endif
; 5165 : 	}
; 5166 : 	else if (ptActChannel2Win->hp >= 1)

  0005b	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0005f	0f 8c 03 04 00
	00		 jl	 $LN9@joinChanne

; 5167 : 	{
; 5168 : 		selId = focusFontId(fontBtnId, sizeof(fontBtnId) / sizeof(int));

  00065	56		 push	 esi
  00066	6a 04		 push	 4
  00068	68 00 00 00 00	 push	 OFFSET ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA
  0006d	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId
  00072	8b f0		 mov	 esi, eax
  00074	83 c4 08	 add	 esp, 8

; 5169 : 
; 5170 : 		switch (selId)

  00077	8b ce		 mov	 ecx, esi
  00079	83 e9 00	 sub	 ecx, 0
  0007c	74 0c		 je	 SHORT $LN14@joinChanne
  0007e	83 e9 01	 sub	 ecx, 1
  00081	75 16		 jne	 SHORT $LN2@joinChanne

; 5174 : 			break;
; 5175 : 		case 1:
; 5176 : 			ShowBottomLineString(FONT_PAL_WHITE, "ì´ì°½ë«ê¸°ã");

  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EIKLEHBI@?$MA?L?C?$KC?$LE?$NN?$LB?b?$KB?$KD@
  00088	eb 05		 jmp	 SHORT $LN63@joinChanne
$LN14@joinChanne:

; 5171 : 		{
; 5172 : 		case 0:
; 5173 : 			ShowBottomLineString(FONT_PAL_WHITE, "ì´ì±ëìê°ìã");

  0008a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CBBBPELI@?$MA?L?C?$KE?$LD?N?$LP?$KB?$LA?$KB?$MA?T?$KB?$KD@
$LN63@joinChanne:

; 5177 : 			break;
; 5178 : 		}
; 5179 : 
; 5180 : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  0008f	6a 00		 push	 0
  00091	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00096	83 c4 08	 add	 esp, 8
$LN2@joinChanne:
  00099	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000a0	0f 84 f0 00 00
	00		 je	 $LN27@joinChanne

; 5181 : 		{
; 5182 : 			switch (selId)

  000a6	83 fe 03	 cmp	 esi, 3
  000a9	0f 87 e7 00 00
	00		 ja	 $LN27@joinChanne
  000af	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN60@joinChanne[esi*4]
$LN17@joinChanne:

; 5183 : 			{
; 5184 : 			case 0:
; 5185 : 				sprintf(buf, "C|J|%d", channelData.index);

  000b6	ff 35 00 00 00
	00		 push	 DWORD PTR ?channelData@@3UTchannelData@@A
  000bc	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000c2	68 00 00 00 00	 push	 OFFSET ??_C@_06GHCNPHLL@C?$HMJ?$HM?$CFd@
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 _sprintf
  000cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5186 : 				if (bNewServer)

  000d0	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000d6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000dd	50		 push	 eax
  000de	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000e4	74 07		 je	 SHORT $LN18@joinChanne

; 5187 : 					lssproto_FM_send(sockfd, buf);

  000e6	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  000eb	eb 05		 jmp	 SHORT $LN64@joinChanne
$LN18@joinChanne:

; 5188 : 				else
; 5189 : 					old_lssproto_FM_send(sockfd, buf);

  000ed	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN64@joinChanne:

; 5190 : 				closeJoinChannelWN();

  000f2	83 c4 08	 add	 esp, 8
  000f5	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 5191 : 				play_se(203, 320, 240);	// ?????î¼???

  000fa	68 f0 00 00 00	 push	 240			; 000000f0H
  000ff	68 40 01 00 00	 push	 320			; 00000140H
  00104	68 cb 00 00 00	 push	 203			; 000000cbH
  00109	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5192 : 				break;

  00111	e9 80 00 00 00	 jmp	 $LN27@joinChanne
$LN20@joinChanne:

; 5193 : 			case 1:
; 5194 : 				if (pc.channel == channelData.index)

  00116	a1 0c 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20748
  0011b	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?channelData@@3UTchannelData@@A
  00121	75 39		 jne	 SHORT $LN23@joinChanne

; 5195 : 				{
; 5196 : 					sprintf(buf, "C|J|-1");

  00123	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00129	68 00 00 00 00	 push	 OFFSET ??_C@_06KOPCAPBC@C?$HMJ?$HM?91@
  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 _sprintf
  00134	83 c4 08	 add	 esp, 8

; 5197 : 					if (bNewServer)

  00137	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0013d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00144	50		 push	 eax
  00145	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0014b	74 07		 je	 SHORT $LN22@joinChanne

; 5198 : 						lssproto_FM_send(sockfd, buf);

  0014d	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00152	eb 05		 jmp	 SHORT $LN65@joinChanne
$LN22@joinChanne:

; 5199 : 					else
; 5200 : 						old_lssproto_FM_send(sockfd, buf);

  00154	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN65@joinChanne:

; 5201 : 				}
; 5202 : 				closeJoinChannel2WN();

  00159	83 c4 08	 add	 esp, 8
$LN23@joinChanne:
  0015c	e8 00 00 00 00	 call	 ?closeJoinChannel2WN@@YAXXZ ; closeJoinChannel2WN

; 5203 : 				play_se(203, 320, 240);	// ?????î¼???

  00161	68 f0 00 00 00	 push	 240			; 000000f0H
  00166	68 40 01 00 00	 push	 320			; 00000140H
  0016b	68 cb 00 00 00	 push	 203			; 000000cbH
  00170	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00175	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5204 : 				break;

  00178	eb 1c		 jmp	 SHORT $LN27@joinChanne
$LN24@joinChanne:

; 5205 : 			case 2:
; 5206 : 				if (pageNum > 0)

  0017a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pageNum@@3HA
  0017f	85 c0		 test	 eax, eax
  00181	7e 13		 jle	 SHORT $LN27@joinChanne

; 5207 : 					pageNum--;

  00183	48		 dec	 eax

; 5208 : 				break;

  00184	eb 0b		 jmp	 SHORT $LN66@joinChanne
$LN26@joinChanne:

; 5209 : 			case 3:
; 5210 : 				if (pageNum < 2)

  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pageNum@@3HA
  0018b	83 f8 02	 cmp	 eax, 2
  0018e	7d 06		 jge	 SHORT $LN27@joinChanne

; 5211 : 					pageNum++;

  00190	40		 inc	 eax
$LN66@joinChanne:

; 5212 : 				break;
; 5213 : 			}
; 5214 : 		}
; 5215 : 
; 5216 : 		fontBtnId[0] = StockFontBuffer(x + 240, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, " ì°¸  ê° ", 2);

  00191	a3 00 00 00 00	 mov	 DWORD PTR ?pageNum@@3HA, eax
$LN27@joinChanne:
  00196	6a 02		 push	 2
  00198	68 00 00 00 00	 push	 OFFSET ??_C@_08JGHLAOEI@?5?B?$PM?5?5?$LA?$KB?5@
  0019d	6a 04		 push	 4
  0019f	6a 01		 push	 1
  001a1	68 72 01 00 00	 push	 370			; 00000172H
  001a6	68 90 01 00 00	 push	 400			; 00000190H
  001ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5217 : 		fontBtnId[1] = StockFontBuffer(x + 340, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, " í  í´ ", 2);

  001b0	6a 02		 push	 2
  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_08CMINFIIP@?5?E?$LL?5?5?E?p?5@
  001b7	6a 04		 push	 4
  001b9	6a 01		 push	 1
  001bb	68 72 01 00 00	 push	 370			; 00000172H
  001c0	68 f4 01 00 00	 push	 500			; 000001f4H
  001c5	a3 00 00 00 00	 mov	 DWORD PTR ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA, eax
  001ca	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001cf	a3 04 00 00 00	 mov	 DWORD PTR ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA+4, eax
  001d4	83 c4 30	 add	 esp, 48			; 00000030H

; 5218 : 
; 5219 : 		switch (pageNum)

  001d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pageNum@@3HA
  001dc	83 e8 00	 sub	 eax, 0
  001df	74 58		 je	 SHORT $LN28@joinChanne
  001e1	83 e8 01	 sub	 eax, 1
  001e4	74 26		 je	 SHORT $LN30@joinChanne
  001e6	83 e8 01	 sub	 eax, 1
  001e9	75 79		 jne	 SHORT $LN29@joinChanne
$LN31@joinChanne:

; 5230 : 		case 2:
; 5231 : 			fontBtnId[2] = StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[0], 2);
; 5232 : 			break;
; 5233 : 		}
; 5234 : 		StockFontBuffer(x + 25, y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[channelData.index], 0);

  001eb	6a 02		 push	 2
  001ed	68 00 00 00 00	 push	 OFFSET ?pageStr@@3PAY09DA ; pageStr
  001f2	6a 04		 push	 4
  001f4	6a 01		 push	 1
  001f6	68 72 01 00 00	 push	 370			; 00000172H
  001fb	68 d2 00 00 00	 push	 210			; 000000d2H
  00200	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00205	a3 08 00 00 00	 mov	 DWORD PTR ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA+8, eax
  0020a	eb 55		 jmp	 SHORT $LN67@joinChanne
$LN30@joinChanne:

; 5224 : 			break;
; 5225 : 		case 1:
; 5226 : 			if (channelData.num > 60)

  0020c	83 3d 04 00 00
	00 3c		 cmp	 DWORD PTR ?channelData@@3UTchannelData@@A+4, 60 ; 0000003cH
  00213	7e d6		 jle	 SHORT $LN31@joinChanne

; 5227 : 				fontBtnId[3] = StockFontBuffer(x + 120, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[1], 2);

  00215	6a 02		 push	 2
  00217	68 0a 00 00 00	 push	 OFFSET ?pageStr@@3PAY09DA+10
  0021c	6a 04		 push	 4
  0021e	6a 01		 push	 1
  00220	68 72 01 00 00	 push	 370			; 00000172H
  00225	68 18 01 00 00	 push	 280			; 00000118H
  0022a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0022f	83 c4 18	 add	 esp, 24			; 00000018H
  00232	a3 0c 00 00 00	 mov	 DWORD PTR ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA+12, eax

; 5228 : 			fontBtnId[2] = StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[0], 2);
; 5229 : 			break;

  00237	eb b2		 jmp	 SHORT $LN31@joinChanne
$LN28@joinChanne:

; 5220 : 		{
; 5221 : 		case 0:
; 5222 : 			if (channelData.num > 30)

  00239	83 3d 04 00 00
	00 1e		 cmp	 DWORD PTR ?channelData@@3UTchannelData@@A+4, 30 ; 0000001eH
  00240	7e 22		 jle	 SHORT $LN29@joinChanne

; 5223 : 				fontBtnId[3] = StockFontBuffer(x + 120, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[1], 2);

  00242	6a 02		 push	 2
  00244	68 0a 00 00 00	 push	 OFFSET ?pageStr@@3PAY09DA+10
  00249	6a 04		 push	 4
  0024b	6a 01		 push	 1
  0024d	68 72 01 00 00	 push	 370			; 00000172H
  00252	68 18 01 00 00	 push	 280			; 00000118H
  00257	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0025c	a3 0c 00 00 00	 mov	 DWORD PTR ?fontBtnId@?1??joinChannel2WN@@YAXXZ@4PAHA+12, eax
$LN67@joinChanne:

; 5230 : 		case 2:
; 5231 : 			fontBtnId[2] = StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[0], 2);
; 5232 : 			break;
; 5233 : 		}
; 5234 : 		StockFontBuffer(x + 25, y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[channelData.index], 0);

  00261	83 c4 18	 add	 esp, 24			; 00000018H
$LN29@joinChanne:
  00264	a1 00 00 00 00	 mov	 eax, DWORD PTR ?channelData@@3UTchannelData@@A
  00269	6a 00		 push	 0
  0026b	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0026e	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?channelName@@3PAY0BE@DA[eax*4]
  00275	50		 push	 eax
  00276	6a 00		 push	 0
  00278	6a 01		 push	 1
  0027a	6a 37		 push	 55			; 00000037H
  0027c	68 b9 00 00 00	 push	 185			; 000000b9H
  00281	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5235 : 
; 5236 : 		StockFontBuffer(x + 25, y + 50, FONT_PRIO_FRONT, FONT_PAL_WHITE, "[ ì± ë í ì ]", 0);

  00286	6a 00		 push	 0
  00288	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FLCLDJN@?$FL?5?C?$KE?5?$LD?N?5?H?$LI?5?$LP?x?5?$FN@
  0028d	6a 00		 push	 0
  0028f	6a 01		 push	 1
  00291	6a 50		 push	 80			; 00000050H
  00293	68 b9 00 00 00	 push	 185			; 000000b9H
  00298	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5237 : 
; 5238 : 		sprintf(buf, "íì¬ %d ì´ë¶ì¡±ì ê°ì¡±ã", channelData.num);

  0029d	ff 35 04 00 00
	00		 push	 DWORD PTR ?channelData@@3UTchannelData@@A+4
  002a3	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@COJOKGGA@?G?v?$MA?g?5?$CFd?5?$MA?L?$LK?N?A?$LH?$MA?G?5?$LA?$KB?A?$LH?$KB?$KD@
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 _sprintf

; 5239 : 		StockFontBuffer(x + 200, y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  002b4	6a 00		 push	 0
  002b6	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002bc	50		 push	 eax
  002bd	6a 00		 push	 0
  002bf	6a 01		 push	 1
  002c1	6a 37		 push	 55			; 00000037H
  002c3	68 68 01 00 00	 push	 360			; 00000168H
  002c8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002cd	83 c4 54	 add	 esp, 84			; 00000054H

; 5240 : 		sprintf(buf, "ìë¤ %d ì´ì±ëìì¬ëë¤ã", channelData.joinNum);

  002d0	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002d6	ff 35 98 01 00
	00		 push	 DWORD PTR ?channelData@@3UTchannelData@@A+408
  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BJPJPJLI@?$MA?V?$LE?Y?5?$CFd?5?$MA?L?C?$KE?$LD?N?$MA?G?$LL?g?$LG?w?$LF?i?$KB?$KD@
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 _sprintf

; 5241 : 		StockFontBuffer(x + 280, y + 50, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  002e7	6a 00		 push	 0
  002e9	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002ef	50		 push	 eax
  002f0	6a 00		 push	 0
  002f2	6a 01		 push	 1
  002f4	6a 50		 push	 80			; 00000050H
  002f6	68 b8 01 00 00	 push	 440			; 000001b8H
  002fb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5242 : 
; 5243 : 		for (i = 0; i < channelData.num; i++)

  00300	33 f6		 xor	 esi, esi
  00302	83 c4 24	 add	 esp, 36			; 00000024H
  00305	39 35 04 00 00
	00		 cmp	 DWORD PTR ?channelData@@3UTchannelData@@A+4, esi
  0030b	0f 8e 56 01 00
	00		 jle	 $LN61@joinChanne

; 5230 : 		case 2:
; 5231 : 			fontBtnId[2] = StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, pageStr[0], 2);
; 5232 : 			break;
; 5233 : 		}
; 5234 : 		StockFontBuffer(x + 25, y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[channelData.index], 0);

  00311	53		 push	 ebx
  00312	57		 push	 edi
  00313	bb 9c 01 00 00	 mov	 ebx, OFFSET ?channelData@@3UTchannelData@@A+412
  00318	bf 74 ff ff ff	 mov	 edi, -140		; ffffff74H
  0031d	0f 1f 00	 npad	 3
$LL10@joinChanne:

; 5244 : 		{
; 5245 : 			int color;
; 5246 : 
; 5247 : 			if (channelData.join[i] == 1)
; 5248 : 				color = FONT_PAL_WHITE;
; 5249 : 			else
; 5250 : 				color = FONT_PAL_GRAY;
; 5251 : 
; 5252 : 			if (pageNum == 0 && i < 30)

  00320	8b 0c b5 08 00
	00 00		 mov	 ecx, DWORD PTR ?channelData@@3UTchannelData@@A[esi*4+8]
  00327	49		 dec	 ecx
  00328	f7 d9		 neg	 ecx
  0032a	1b c9		 sbb	 ecx, ecx
  0032c	83 e1 07	 and	 ecx, 7
  0032f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pageNum@@3HA, 0
  00336	75 57		 jne	 SHORT $LN35@joinChanne
  00338	83 fe 1e	 cmp	 esi, 30			; 0000001eH
  0033b	0f 8d 11 01 00
	00		 jge	 $LN8@joinChanne

; 5253 : 			{
; 5254 : 				if (i < 10)

  00341	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00344	7d 18		 jge	 SHORT $LN37@joinChanne

; 5257 : 					StockFontBuffer(x + 25 + 140, y + 80 + (i - 10) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5258 : 				else if (i < 30)
; 5259 : 					StockFontBuffer(x + 25 + 280, y + 80 + (i - 20) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5260 : 			}

  00346	6a 00		 push	 0
  00348	53		 push	 ebx
  00349	51		 push	 ecx
  0034a	6a 01		 push	 1
  0034c	8d 97 fa 00 00
	00		 lea	 edx, DWORD PTR [edi+250]
  00352	b8 b9 00 00 00	 mov	 eax, 185		; 000000b9H
  00357	52		 push	 edx
  00358	50		 push	 eax
  00359	e9 ec 00 00 00	 jmp	 $LN68@joinChanne
$LN37@joinChanne:

; 5255 : 					StockFontBuffer(x + 25, y + 80 + i * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5256 : 				else if (i < 20)

  0035e	83 fe 14	 cmp	 esi, 20			; 00000014H
  00361	7d 14		 jge	 SHORT $LN39@joinChanne

; 5257 : 					StockFontBuffer(x + 25 + 140, y + 80 + (i - 10) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5258 : 				else if (i < 30)
; 5259 : 					StockFontBuffer(x + 25 + 280, y + 80 + (i - 20) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5260 : 			}

  00363	6a 00		 push	 0
  00365	53		 push	 ebx
  00366	51		 push	 ecx
  00367	6a 01		 push	 1
  00369	8b d7		 mov	 edx, edi
  0036b	b8 45 01 00 00	 mov	 eax, 325		; 00000145H
  00370	52		 push	 edx
  00371	50		 push	 eax
  00372	e9 d3 00 00 00	 jmp	 $LN68@joinChanne
$LN39@joinChanne:
  00377	6a 00		 push	 0
  00379	53		 push	 ebx
  0037a	51		 push	 ecx
  0037b	6a 01		 push	 1
  0037d	8d 97 06 ff ff
	ff		 lea	 edx, DWORD PTR [edi-250]
  00383	b8 d1 01 00 00	 mov	 eax, 465		; 000001d1H
  00388	52		 push	 edx
  00389	50		 push	 eax
  0038a	e9 bb 00 00 00	 jmp	 $LN68@joinChanne
$LN35@joinChanne:

; 5261 : 			else if (pageNum == 1 && i >= 30 && i < 60)

  0038f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?pageNum@@3HA, 1
  00396	75 5b		 jne	 SHORT $LN42@joinChanne
  00398	8d 46 e2	 lea	 eax, DWORD PTR [esi-30]
  0039b	83 f8 1d	 cmp	 eax, 29			; 0000001dH
  0039e	0f 87 ae 00 00
	00		 ja	 $LN8@joinChanne

; 5262 : 			{
; 5263 : 				if (i < 40)

  003a4	83 fe 28	 cmp	 esi, 40			; 00000028H
  003a7	7d 19		 jge	 SHORT $LN44@joinChanne

; 5266 : 					StockFontBuffer(x + 25 + 140, y + 80 + (i - 40) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5267 : 				else if (i < 60)
; 5268 : 					StockFontBuffer(x + 25 + 280, y + 80 + (i - 50) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5269 : 			}

  003a9	6a 00		 push	 0
  003ab	53		 push	 ebx
  003ac	51		 push	 ecx
  003ad	b8 0c fe ff ff	 mov	 eax, -500		; fffffe0cH
  003b2	ba b9 00 00 00	 mov	 edx, 185		; 000000b9H
  003b7	6a 01		 push	 1
  003b9	03 c7		 add	 eax, edi
  003bb	50		 push	 eax
  003bc	52		 push	 edx
  003bd	e9 88 00 00 00	 jmp	 $LN68@joinChanne
$LN44@joinChanne:

; 5264 : 					StockFontBuffer(x + 25, y + 80 + (i - 30) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5265 : 				else if (i < 50)

  003c2	83 fe 32	 cmp	 esi, 50			; 00000032H
  003c5	7d 16		 jge	 SHORT $LN46@joinChanne

; 5266 : 					StockFontBuffer(x + 25 + 140, y + 80 + (i - 40) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5267 : 				else if (i < 60)
; 5268 : 					StockFontBuffer(x + 25 + 280, y + 80 + (i - 50) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);
; 5269 : 			}

  003c7	6a 00		 push	 0
  003c9	53		 push	 ebx
  003ca	51		 push	 ecx
  003cb	b8 12 fd ff ff	 mov	 eax, -750		; fffffd12H
  003d0	ba 45 01 00 00	 mov	 edx, 325		; 00000145H
  003d5	6a 01		 push	 1
  003d7	03 c7		 add	 eax, edi
  003d9	50		 push	 eax
  003da	52		 push	 edx
  003db	eb 6d		 jmp	 SHORT $LN68@joinChanne
$LN46@joinChanne:
  003dd	6a 00		 push	 0
  003df	53		 push	 ebx
  003e0	51		 push	 ecx
  003e1	b8 18 fc ff ff	 mov	 eax, -1000		; fffffc18H
  003e6	ba d1 01 00 00	 mov	 edx, 465		; 000001d1H
  003eb	6a 01		 push	 1
  003ed	03 c7		 add	 eax, edi
  003ef	50		 push	 eax
  003f0	52		 push	 edx
  003f1	eb 57		 jmp	 SHORT $LN68@joinChanne
$LN42@joinChanne:

; 5270 : 			else if (pageNum == 2 && i >= 60)

  003f3	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?pageNum@@3HA, 2
  003fa	75 56		 jne	 SHORT $LN8@joinChanne
  003fc	83 fe 3c	 cmp	 esi, 60			; 0000003cH
  003ff	7c 51		 jl	 SHORT $LN8@joinChanne

; 5271 : 			{
; 5272 : 				if (i < 70)

  00401	83 fe 46	 cmp	 esi, 70			; 00000046H
  00404	7d 14		 jge	 SHORT $LN50@joinChanne

; 5273 : 					StockFontBuffer(x + 25, y + 80 + (i - 60) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);

  00406	6a 00		 push	 0
  00408	53		 push	 ebx
  00409	51		 push	 ecx
  0040a	6a 01		 push	 1
  0040c	8d 87 1e fb ff
	ff		 lea	 eax, DWORD PTR [edi-1250]
  00412	50		 push	 eax
  00413	68 b9 00 00 00	 push	 185			; 000000b9H
  00418	eb 30		 jmp	 SHORT $LN68@joinChanne
$LN50@joinChanne:

; 5274 : 				else if (i < 80)

  0041a	83 fe 50	 cmp	 esi, 80			; 00000050H
  0041d	7d 14		 jge	 SHORT $LN52@joinChanne

; 5275 : 					StockFontBuffer(x + 25 + 140, y + 80 + (i - 70) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);

  0041f	6a 00		 push	 0
  00421	53		 push	 ebx
  00422	51		 push	 ecx
  00423	6a 01		 push	 1
  00425	8d 87 24 fa ff
	ff		 lea	 eax, DWORD PTR [edi-1500]
  0042b	50		 push	 eax
  0042c	68 45 01 00 00	 push	 325			; 00000145H
  00431	eb 17		 jmp	 SHORT $LN68@joinChanne
$LN52@joinChanne:

; 5276 : 				else if (i < 90)

  00433	83 fe 5a	 cmp	 esi, 90			; 0000005aH
  00436	7d 1a		 jge	 SHORT $LN8@joinChanne

; 5277 : 					StockFontBuffer(x + 25 + 280, y + 80 + (i - 80) * 25, FONT_PRIO_FRONT, color, channelData.name[i], 0);

  00438	6a 00		 push	 0
  0043a	53		 push	 ebx
  0043b	51		 push	 ecx
  0043c	6a 01		 push	 1
  0043e	8d 87 2a f9 ff
	ff		 lea	 eax, DWORD PTR [edi-1750]
  00444	50		 push	 eax
  00445	68 d1 01 00 00	 push	 465			; 000001d1H
$LN68@joinChanne:

; 5242 : 
; 5243 : 		for (i = 0; i < channelData.num; i++)

  0044a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0044f	83 c4 18	 add	 esp, 24			; 00000018H
$LN8@joinChanne:
  00452	46		 inc	 esi
  00453	83 c3 14	 add	 ebx, 20			; 00000014H
  00456	83 c7 19	 add	 edi, 25			; 00000019H
  00459	3b 35 04 00 00
	00		 cmp	 esi, DWORD PTR ?channelData@@3UTchannelData@@A+4
  0045f	0f 8c bb fe ff
	ff		 jl	 $LL10@joinChanne
  00465	5f		 pop	 edi
  00466	5b		 pop	 ebx
$LN61@joinChanne:
  00467	5e		 pop	 esi
$LN9@joinChanne:

; 5278 : 			}
; 5279 : 		}
; 5280 : 	}
; 5281 : }

  00468	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0046b	33 cd		 xor	 ecx, ebp
  0046d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00472	8b e5		 mov	 esp, ebp
  00474	5d		 pop	 ebp
  00475	c3		 ret	 0
  00476	66 90		 npad	 2
$LN60@joinChanne:
  00478	00 00 00 00	 DD	 $LN17@joinChanne
  0047c	00 00 00 00	 DD	 $LN20@joinChanne
  00480	00 00 00 00	 DD	 $LN24@joinChanne
  00484	00 00 00 00	 DD	 $LN26@joinChanne
?joinChannel2WN@@YAXXZ ENDP				; joinChannel2WN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?closeJoinChannel2WN@@YAXXZ
_TEXT	SEGMENT
?closeJoinChannel2WN@@YAXXZ PROC			; closeJoinChannel2WN, COMDAT

; 5138 : 	joinChannel2Proc = 0;
; 5139 : 	DeathAction(ptActChannel2Win);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A
  00006	33 c0		 xor	 eax, eax
  00008	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinChannel2Proc@@3FA, ax
  0000e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00013	83 c4 04	 add	 esp, 4

; 5140 : 	ptActChannel2Win = NULL;

  00016	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A, 0

; 5141 : }

  00020	c3		 ret	 0
?closeJoinChannel2WN@@YAXXZ ENDP			; closeJoinChannel2WN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?initJoinChannel2WN@@YAXPAD@Z
_TEXT	SEGMENT
_data$GSCopy$1$ = -264					; size = 4
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initJoinChannel2WN@@YAXPAD@Z PROC			; initJoinChannel2WN, COMDAT

; 5107 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]

; 5108 : 	int i;
; 5109 : 	char buf[256];
; 5110 : 
; 5111 : 	channelData.joinNum = 0;
; 5112 : 	getStringToken(data, '|', 3, sizeof(buf) - 1, buf);

  00017	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0001d	50		 push	 eax
  0001e	68 ff 00 00 00	 push	 255			; 000000ffH
  00023	6a 03		 push	 3
  00025	6a 7c		 push	 124			; 0000007cH
  00027	53		 push	 ebx
  00028	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], ebx
  0002e	c7 05 98 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?channelData@@3UTchannelData@@A+408, 0
  00038	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5113 : 	channelData.index = atoi(buf);

  0003d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00043	50		 push	 eax
  00044	e8 00 00 00 00	 call	 _atoi
  00049	a3 00 00 00 00	 mov	 DWORD PTR ?channelData@@3UTchannelData@@A, eax

; 5114 : 	getStringToken(data, '|', 4, sizeof(buf) - 1, buf);

  0004e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00054	50		 push	 eax
  00055	68 ff 00 00 00	 push	 255			; 000000ffH
  0005a	6a 04		 push	 4
  0005c	6a 7c		 push	 124			; 0000007cH
  0005e	53		 push	 ebx
  0005f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5115 : 	channelData.num = atoi(buf);

  00064	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0006a	50		 push	 eax
  0006b	e8 00 00 00 00	 call	 _atoi
  00070	83 c4 30	 add	 esp, 48			; 00000030H
  00073	a3 04 00 00 00	 mov	 DWORD PTR ?channelData@@3UTchannelData@@A+4, eax

; 5116 : 
; 5117 : 	if (channelData.num > 0)

  00078	85 c0		 test	 eax, eax
  0007a	0f 8e b2 00 00
	00		 jle	 $LN16@initJoinCh

; 5118 : 	{
; 5119 : 		for (i = 0; i < channelData.num && i < FAMILY_MAXMEMBER; i++)

  00080	56		 push	 esi
  00081	57		 push	 edi
  00082	33 ff		 xor	 edi, edi
  00084	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0008a	be 9c 01 00 00	 mov	 esi, OFFSET ?channelData@@3UTchannelData@@A+412
  0008f	2b f0		 sub	 esi, eax
  00091	8d 5f 06	 lea	 ebx, DWORD PTR [edi+6]
$LL4@initJoinCh:
  00094	83 ff 64	 cmp	 edi, 100		; 00000064H
  00097	0f 8d 93 00 00
	00		 jge	 $LN17@initJoinCh

; 5120 : 		{
; 5121 : 			getStringToken(data, '|', 4 + (i * 2) + 1, sizeof(buf) - 1, buf);

  0009d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000a3	50		 push	 eax
  000a4	68 ff 00 00 00	 push	 255			; 000000ffH
  000a9	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000ac	50		 push	 eax
  000ad	6a 7c		 push	 124			; 0000007cH
  000af	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  000b5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5122 : 			channelData.join[i] = atoi(buf);

  000ba	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 _atoi
  000c6	83 c4 18	 add	 esp, 24			; 00000018H
  000c9	89 04 bd 08 00
	00 00		 mov	 DWORD PTR ?channelData@@3UTchannelData@@A[edi*4+8], eax

; 5123 : 			if (channelData.join[i] == 1)

  000d0	83 f8 01	 cmp	 eax, 1
  000d3	75 06		 jne	 SHORT $LN6@initJoinCh

; 5124 : 				channelData.joinNum++;

  000d5	ff 05 98 01 00
	00		 inc	 DWORD PTR ?channelData@@3UTchannelData@@A+408
$LN6@initJoinCh:

; 5125 : 			getStringToken(data, '|', 4 + (i * 2) + 2, sizeof(buf) - 1, buf);

  000db	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000e1	50		 push	 eax
  000e2	68 ff 00 00 00	 push	 255			; 000000ffH
  000e7	53		 push	 ebx
  000e8	6a 7c		 push	 124			; 0000007cH
  000ea	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  000f0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5126 : 			makeStringFromEscaped(buf);

  000f5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000fb	50		 push	 eax
  000fc	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00101	83 c4 18	 add	 esp, 24			; 00000018H

; 5127 : 			strcpy(channelData.name[i], buf);

  00104	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0010a	66 0f 1f 44 00
	00		 npad	 6
$LL8@initJoinCh:
  00110	8a 08		 mov	 cl, BYTE PTR [eax]
  00112	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00115	88 4c 06 ff	 mov	 BYTE PTR [esi+eax-1], cl
  00119	84 c9		 test	 cl, cl
  0011b	75 f3		 jne	 SHORT $LL8@initJoinCh

; 5118 : 	{
; 5119 : 		for (i = 0; i < channelData.num && i < FAMILY_MAXMEMBER; i++)

  0011d	47		 inc	 edi
  0011e	83 c3 02	 add	 ebx, 2
  00121	83 c6 14	 add	 esi, 20			; 00000014H
  00124	3b 3d 04 00 00
	00		 cmp	 edi, DWORD PTR ?channelData@@3UTchannelData@@A+4
  0012a	0f 8c 64 ff ff
	ff		 jl	 $LL4@initJoinCh
$LN17@initJoinCh:
  00130	5f		 pop	 edi
  00131	5e		 pop	 esi
$LN16@initJoinCh:

; 5128 : 		}
; 5129 : 	}
; 5130 : 	pageNum = 0;
; 5131 : 	play_se(202, 320, 240);	// ????????

  00132	68 f0 00 00 00	 push	 240			; 000000f0H
  00137	68 40 01 00 00	 push	 320			; 00000140H
  0013c	68 ca 00 00 00	 push	 202			; 000000caH
  00141	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pageNum@@3HA, 0
  0014b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 5132 : 	joinChannel2Proc = 1000;
; 5133 : 
; 5134 : }

  00150	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH
  00156	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  0015b	33 cd		 xor	 ecx, ebp
  0015d	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinChannel2Proc@@3FA, ax
  00163	5b		 pop	 ebx
  00164	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00169	8b e5		 mov	 esp, ebp
  0016b	5d		 pop	 ebp
  0016c	c3		 ret	 0
?initJoinChannel2WN@@YAXPAD@Z ENDP			; initJoinChannel2WN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?joinChannelWN@@YAXXZ
_TEXT	SEGMENT
_selgraId$1$ = -1096					; size = 4
_buf$ = -1092						; size = 1024
_buf2$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?joinChannelWN@@YAXXZ PROC				; joinChannelWN, COMDAT

; 4849 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 04 00
	00		 sub	 esp, 1096		; 00000448H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 4850 : 	//static ACTION *ptActMenuWin = NULL;
; 4851 : 	int x, y, w, h, i;
; 4852 : #ifndef _FM_MODIFY
; 4853 : 	static int btnId[9];
; 4854 : #else
; 4855 : 	static int btnId[5];
; 4856 : #endif
; 4857 : 	static int graId[1];
; 4858 : 	char buf[1024], buf2[64];
; 4859 : 	int selId = 0;
; 4860 : 	int selgraId;
; 4861 : 
; 4862 : 	x = 20;
; 4863 : 	y = 30;
; 4864 : 	w = 2;
; 4865 : #ifndef _FM_MODIFY
; 4866 : 	h = 8;
; 4867 : #else
; 4868 : 	h = 5;
; 4869 : #endif
; 4870 : 
; 4871 : 
; 4872 : 	if (ptActChannelWin == NULL)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActChannelWin@@3PAUaction@@A
  00018	85 c0		 test	 eax, eax
  0001a	75 3e		 jne	 SHORT $LN12@joinChanne

; 4873 : 	{
; 4874 : 		ptActChannelWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001c	6a 01		 push	 1
  0001e	50		 push	 eax
  0001f	6a 05		 push	 5
  00021	6a 02		 push	 2
  00023	6a 1e		 push	 30			; 0000001eH
  00025	6a 14		 push	 20			; 00000014H
  00027	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 4875 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4876 : 		x = ptActChannelWin->x;
; 4877 : 		y = ptActChannelWin->y;
; 4878 : #endif
; 4879 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 4880 : 			btnId[i] = -2;

  0002c	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00033	83 c4 18	 add	 esp, 24			; 00000018H
  00036	a3 00 00 00 00	 mov	 DWORD PTR ?ptActChannelWin@@3PAUaction@@A, eax
  0003b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA, xmm0
  00042	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA+16, -2 ; fffffffeH

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  0004c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0004f	33 cd		 xor	 ecx, ebp
  00051	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00056	8b e5		 mov	 esp, ebp
  00058	5d		 pop	 ebp
  00059	c3		 ret	 0
$LN12@joinChanne:

; 4881 : 	}
; 4882 : 	else
; 4883 : 	{
; 4884 : 		if (ptActChannelWin->hp >= 1)

  0005a	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0005e	0f 8c 91 03 00
	00		 jl	 $LN39@joinChanne

; 4885 : 		{
; 4886 : 			// ESC???????î·?
; 4887 : 			if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL))

  00064	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0006e	74 25		 je	 SHORT $LN15@joinChanne
  00070	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00075	85 c0		 test	 eax, eax
  00077	75 1c		 jne	 SHORT $LN15@joinChanne

; 4888 : 			{
; 4889 : 				closeJoinChannelWN();

  00079	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 4890 : 				play_se(203, 320, 240);	// ?????î¼???

  0007e	68 f0 00 00 00	 push	 240			; 000000f0H
  00083	68 40 01 00 00	 push	 320			; 00000140H
  00088	68 cb 00 00 00	 push	 203			; 000000cbH
  0008d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00092	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@joinChanne:

; 4891 : 			}
; 4892 : 			if (CheckMenuFlag())

  00095	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0009a	85 c0		 test	 eax, eax
  0009c	74 05		 je	 SHORT $LN16@joinChanne

; 4893 : 				closeJoinChannelWN();

  0009e	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN
$LN16@joinChanne:
  000a3	53		 push	 ebx

; 4894 : 
; 4895 : 			selId = focusFontId(btnId, sizeof(btnId) / sizeof(int));

  000a4	6a 05		 push	 5
  000a6	68 00 00 00 00	 push	 OFFSET ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA
  000ab	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId

; 4896 : 			selgraId = focusGraId(graId, sizeof(graId) / sizeof(int));

  000b0	6a 01		 push	 1
  000b2	68 00 00 00 00	 push	 OFFSET ?graId@?1??joinChannelWN@@YAXXZ@4PAHA
  000b7	8b d8		 mov	 ebx, eax
  000b9	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  000be	83 c4 10	 add	 esp, 16			; 00000010H
  000c1	89 85 b8 fb ff
	ff		 mov	 DWORD PTR _selgraId$1$[ebp], eax

; 4897 : 
; 4898 : 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  000c7	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000ce	0f 84 60 01 00
	00		 je	 $LN25@joinChanne

; 4899 : 			{
; 4900 : 				if (selgraId == 0)

  000d4	85 c0		 test	 eax, eax
  000d6	75 2b		 jne	 SHORT $LN18@joinChanne

; 4901 : 				{
; 4902 : 					closeJoinChannelWN();

  000d8	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 4903 : 					play_se(203, 320, 240);

  000dd	68 f0 00 00 00	 push	 240			; 000000f0H
  000e2	68 40 01 00 00	 push	 320			; 00000140H
  000e7	68 cb 00 00 00	 push	 203			; 000000cbH
  000ec	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f4	5b		 pop	 ebx

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  000f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f8	33 cd		 xor	 ecx, ebp
  000fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
$LN18@joinChanne:

; 4904 : 					return;
; 4905 : 				}
; 4906 : #ifndef _FM_MODIFY
; 4907 : 				switch (selId)
; 4908 : 				{
; 4909 : 				case 0:
; 4910 : 					sprintf(buf, "S|D2", selId);
; 4911 : 					break;
; 4912 : 				case 1:
; 4913 : 				case 2:
; 4914 : 				case 3:
; 4915 : 					sprintf(buf, "C|L|%d", selId);
; 4916 : 					break;
; 4917 : 				case 5:
; 4918 : #ifdef _FMVER21
; 4919 : 					if (pc.familyleader != FMMEMBER_LEADER)
; 4920 : 						return;
; 4921 : #else
; 4922 : 					if (pc.familyleader != 1)
; 4923 : 						return;
; 4924 : #endif
; 4925 : 					sprintf(buf, "C|J|5");
; 4926 : 					closeJoinChannelWN();
; 4927 : 					play_se(203, 320, 240);
; 4928 : 					break;
; 4929 : 				case 6:
; 4930 : 					sprintf(buf, "C|J|-1");
; 4931 : 					closeJoinChannelWN();
; 4932 : 					play_se(203, 320, 240);
; 4933 : 					break;
; 4934 : 				case 7:
; 4935 : 					DeathAction(ptActChannel2Win);
; 4936 : 					ptActChannel2Win = NULL;
; 4937 : 					joinChannel2Proc = 2000;
; 4938 : 					play_se(203, 320, 240);
; 4939 : 					return;
; 4940 : 				case 8:
; 4941 : 					sprintf(buf, "S|SELF");
; 4942 : 					closeJoinChannelWN();
; 4943 : 					play_se(203, 320, 240);
; 4944 : 					break;
; 4945 : 				}
; 4946 : #else
; 4947 : 				switch (selId)

  00103	83 fb 03	 cmp	 ebx, 3
  00106	0f 87 df 00 00
	00		 ja	 $LN5@joinChanne
  0010c	ff 24 9d 00 00
	00 00		 jmp	 DWORD PTR $LN55@joinChanne[ebx*4]
$LN19@joinChanne:

; 4948 : 				{
; 4949 : 				case 0:
; 4950 : 					sprintf(buf, "S|D2", selId);

  00113	6a 00		 push	 0
  00115	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0011b	68 00 00 00 00	 push	 OFFSET ??_C@_04PNGENDLA@S?$HMD2@
  00120	50		 push	 eax
  00121	e8 00 00 00 00	 call	 _sprintf
  00126	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4951 : 					break;

  00129	e9 c2 00 00 00	 jmp	 $LN54@joinChanne
$LN20@joinChanne:

; 4952 : 				case 1:
; 4953 : 					DeathAction(ptActChannel2Win);

  0012e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A
  00134	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4954 : 					ptActChannel2Win = NULL;
; 4955 : 					joinChannel2Proc = 2000;
; 4956 : 					play_se(203, 320, 240);

  00139	68 f0 00 00 00	 push	 240			; 000000f0H
  0013e	b8 d0 07 00 00	 mov	 eax, 2000		; 000007d0H
  00143	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A, 0
  0014d	68 40 01 00 00	 push	 320			; 00000140H
  00152	68 cb 00 00 00	 push	 203			; 000000cbH
  00157	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinChannel2Proc@@3FA, ax
  0015d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00162	83 c4 10	 add	 esp, 16			; 00000010H
  00165	5b		 pop	 ebx

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  00166	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00169	33 cd		 xor	 ecx, ebp
  0016b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c3		 ret	 0
$LN21@joinChanne:

; 4957 : 					return;
; 4958 : 				case 2:
; 4959 : 					sprintf(buf, "D");

  00174	68 00 00 00 00	 push	 OFFSET ??_C@_01CKDDGHAB@D@
$LN63@joinChanne:

; 4976 : 				{
; 4977 : 					if (bNewServer)

  00179	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 _sprintf
  00185	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN
  0018a	68 f0 00 00 00	 push	 240			; 000000f0H
  0018f	68 40 01 00 00	 push	 320			; 00000140H
  00194	68 cb 00 00 00	 push	 203			; 000000cbH
  00199	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0019e	83 c4 14	 add	 esp, 20			; 00000014H
  001a1	eb 4d		 jmp	 SHORT $LN54@joinChanne
$LN22@joinChanne:

; 4960 : 					closeJoinChannelWN();
; 4961 : 					play_se(203, 320, 240);
; 4962 : 					break;
; 4963 : 				case 3:
; 4964 : 					sprintf(buf, "C|J|-1");

  001a3	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001a9	68 00 00 00 00	 push	 OFFSET ??_C@_06KOPCAPBC@C?$HMJ?$HM?91@
  001ae	50		 push	 eax
  001af	e8 00 00 00 00	 call	 _sprintf
  001b4	83 c4 08	 add	 esp, 8

; 4965 : 					if (bNewServer)

  001b7	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001bd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001c4	50		 push	 eax
  001c5	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001cb	74 0f		 je	 SHORT $LN23@joinChanne

; 4966 : 						lssproto_FM_send(sockfd, buf);

  001cd	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send

; 4969 : 					sprintf(buf, "S|SELF");

  001d2	83 c4 08	 add	 esp, 8
  001d5	68 00 00 00 00	 push	 OFFSET ??_C@_06JEJPCC@S?$HMSELF@

; 4970 : 					closeJoinChannelWN();
; 4971 : 					play_se(203, 320, 240);
; 4972 : 					break;
; 4973 : 				}
; 4974 : #endif
; 4975 : 				if (selId != -1)

  001da	eb 9d		 jmp	 SHORT $LN63@joinChanne
$LN23@joinChanne:

; 4967 : 					else
; 4968 : 						old_lssproto_FM_send(sockfd, buf);

  001dc	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send

; 4969 : 					sprintf(buf, "S|SELF");

  001e1	83 c4 08	 add	 esp, 8
  001e4	68 00 00 00 00	 push	 OFFSET ??_C@_06JEJPCC@S?$HMSELF@

; 4970 : 					closeJoinChannelWN();
; 4971 : 					play_se(203, 320, 240);
; 4972 : 					break;
; 4973 : 				}
; 4974 : #endif
; 4975 : 				if (selId != -1)

  001e9	eb 8e		 jmp	 SHORT $LN63@joinChanne
$LN5@joinChanne:
  001eb	83 fb ff	 cmp	 ebx, -1
  001ee	74 44		 je	 SHORT $LN25@joinChanne
$LN54@joinChanne:

; 4976 : 				{
; 4977 : 					if (bNewServer)

  001f0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001f7	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001fd	50		 push	 eax
  001fe	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00204	74 17		 je	 SHORT $LN26@joinChanne

; 4978 : 						lssproto_FM_send(sockfd, buf);

  00206	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  0020b	83 c4 08	 add	 esp, 8
  0020e	5b		 pop	 ebx

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  0020f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00212	33 cd		 xor	 ecx, ebp
  00214	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00219	8b e5		 mov	 esp, ebp
  0021b	5d		 pop	 ebp
  0021c	c3		 ret	 0
$LN26@joinChanne:

; 4979 : 					else
; 4980 : 						old_lssproto_FM_send(sockfd, buf);

  0021d	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  00222	83 c4 08	 add	 esp, 8
  00225	5b		 pop	 ebx

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  00226	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00229	33 cd		 xor	 ecx, ebp
  0022b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00230	8b e5		 mov	 esp, ebp
  00232	5d		 pop	 ebp
  00233	c3		 ret	 0
$LN25@joinChanne:

; 4986 : 			for (i = 0; i < (int)(16 - strlen(pc.familyName)) / 2; i++)

  00234	b9 f6 50 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+20726
  00239	c6 45 bc 00	 mov	 BYTE PTR _buf2$[ebp], 0
  0023d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL56@joinChanne:
  00240	8a 01		 mov	 al, BYTE PTR [ecx]
  00242	41		 inc	 ecx
  00243	84 c0		 test	 al, al
  00245	75 f9		 jne	 SHORT $LL56@joinChanne
  00247	2b ca		 sub	 ecx, edx
  00249	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0024e	2b c1		 sub	 eax, ecx
  00250	99		 cdq
  00251	2b c2		 sub	 eax, edx
  00253	8b d0		 mov	 edx, eax
  00255	d1 fa		 sar	 edx, 1
  00257	56		 push	 esi
  00258	57		 push	 edi
  00259	85 d2		 test	 edx, edx
  0025b	7e 1d		 jle	 SHORT $LN8@joinChanne

; 4981 : 					return;
; 4982 : 				}
; 4983 : 			}
; 4984 : 
; 4985 : 			strcpy(buf2, "");

  0025d	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ??_C@_01CLKCMJKC@?5@
$LL9@joinChanne:

; 4987 : 				strcat(buf2, " ");

  00264	8d 7d bc	 lea	 edi, DWORD PTR _buf2$[ebp]
  00267	4f		 dec	 edi
$LL57@joinChanne:
  00268	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  0026b	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  0026e	84 c0		 test	 al, al
  00270	75 f6		 jne	 SHORT $LL57@joinChanne
  00272	66 89 0f	 mov	 WORD PTR [edi], cx
  00275	83 ea 01	 sub	 edx, 1
  00278	75 ea		 jne	 SHORT $LL9@joinChanne
$LN8@joinChanne:

; 4988 : 			strcat(buf2, pc.familyName);

  0027a	ba f6 50 00 00	 mov	 edx, OFFSET ?pc@@3UPC@@A+20726
  0027f	8b f2		 mov	 esi, edx
$LL58@joinChanne:
  00281	8a 02		 mov	 al, BYTE PTR [edx]
  00283	42		 inc	 edx
  00284	84 c0		 test	 al, al
  00286	75 f9		 jne	 SHORT $LL58@joinChanne
  00288	8d 7d bc	 lea	 edi, DWORD PTR _buf2$[ebp]
  0028b	2b d6		 sub	 edx, esi
  0028d	4f		 dec	 edi
  0028e	66 90		 npad	 2
$LL59@joinChanne:
  00290	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00293	47		 inc	 edi
  00294	84 c0		 test	 al, al
  00296	75 f8		 jne	 SHORT $LL59@joinChanne
  00298	8b ca		 mov	 ecx, edx

; 4989 : 
; 4990 : #ifndef _FM_MODIFY
; 4991 : 			btnId[8] = StockFontBuffer(x + 7, y + 30, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf2, 0);
; 4992 : #else
; 4993 : 			btnId[4] = StockFontBuffer(x + 7, y + 30, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf2, 0);

  0029a	8d 45 bc	 lea	 eax, DWORD PTR _buf2$[ebp]
  0029d	c1 e9 02	 shr	 ecx, 2
  002a0	f3 a5		 rep movsd
  002a2	6a 00		 push	 0
  002a4	50		 push	 eax
  002a5	6a 05		 push	 5
  002a7	8b ca		 mov	 ecx, edx
  002a9	6a 01		 push	 1
  002ab	83 e1 03	 and	 ecx, 3
  002ae	6a 3c		 push	 60			; 0000003cH
  002b0	f3 a4		 rep movsb
  002b2	6a 1b		 push	 27			; 0000001bH
  002b4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 4994 : 			btnId[2] = StockFontBuffer(x + 25, y + 65 + 36 * 2, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[2], 2);

  002b9	6a 02		 push	 2
  002bb	68 28 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA+40
  002c0	6a 00		 push	 0
  002c2	6a 01		 push	 1
  002c4	68 a7 00 00 00	 push	 167			; 000000a7H
  002c9	6a 2d		 push	 45			; 0000002dH
  002cb	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA+16, eax
  002d0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 4995 : #endif
; 4996 : 			btnId[0] = StockFontBuffer(x + 25, y + 65, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[0], 2);

  002d5	6a 02		 push	 2
  002d7	68 00 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA ; channelName
  002dc	6a 00		 push	 0
  002de	6a 01		 push	 1
  002e0	6a 5f		 push	 95			; 0000005fH
  002e2	6a 2d		 push	 45			; 0000002dH
  002e4	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA+8, eax
  002e9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002ee	83 c4 48	 add	 esp, 72			; 00000048H
  002f1	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA, eax

; 4997 : 
; 4998 : #ifndef _FM_MODIFY
; 4999 : 			for (i = 1; i < 4; i++)
; 5000 : 			{
; 5001 : 				if (pc.channel == i)
; 5002 : 					btnId[i] = StockFontBuffer(x + 25, y + 65 + 36 * i, FONT_PRIO_FRONT, FONT_PAL_YELLOW, channelName[i], 2);
; 5003 : 				else
; 5004 : 					btnId[i] = StockFontBuffer(x + 25, y + 65 + 36 * i, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[i], 2);
; 5005 : 			}
; 5006 : 			btnId[6] = StockFontBuffer(x + 25, y + 65 + 36 * 4, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[6], 2);
; 5007 : #endif
; 5008 : #ifdef _FMVER21
; 5009 : 			// shan add		
; 5010 : 			if (pc.familyleader == FMMEMBER_LEADER || pc.familyleader == FMMEMBER_ELDER)

  002f6	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
  002fb	5f		 pop	 edi
  002fc	5e		 pop	 esi
  002fd	83 f8 03	 cmp	 eax, 3
  00300	74 27		 je	 SHORT $LN30@joinChanne
  00302	83 f8 04	 cmp	 eax, 4
  00305	74 22		 je	 SHORT $LN30@joinChanne

; 5023 : 			}
; 5024 : 			else
; 5025 : 			{
; 5026 : 				btnId[1] = StockFontBuffer(x + 25, y + 65 + 36, FONT_PRIO_FRONT, FONT_PAL_GRAY, channelName[1], 0);

  00307	6a 00		 push	 0
  00309	68 14 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA+20
  0030e	6a 07		 push	 7
  00310	6a 01		 push	 1
  00312	68 83 00 00 00	 push	 131			; 00000083H
  00317	6a 2d		 push	 45			; 0000002dH
  00319	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5027 : 				btnId[3] = StockFontBuffer(x + 25, y + 65 + 36 * 3, FONT_PRIO_FRONT, FONT_PAL_GRAY, channelName[3], 0);

  0031e	6a 00		 push	 0
  00320	68 3c 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA+60
  00325	6a 07		 push	 7
  00327	eb 20		 jmp	 SHORT $LN64@joinChanne
$LN30@joinChanne:

; 5011 : #else
; 5012 : 			if (pc.familyleader == 1)
; 5013 : #endif
; 5014 : #ifndef _FM_MODIFY
; 5015 : 				btnId[7] = StockFontBuffer(x + 25, y + 65 + 36 * 5, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[7], 2);
; 5016 : 			else
; 5017 : 				btnId[7] = StockFontBuffer(x + 25, y + 65 + 36 * 5, FONT_PRIO_FRONT, FONT_PAL_GRAY, channelName[7], 0);
; 5018 : 			graId[0] = StockDispBuffer(x + 65, y + 13 + 320, DISP_PRIO_IME3, CG_CLOSE_BTN, 2);
; 5019 : #else
; 5020 : 			{
; 5021 : 				btnId[1] = StockFontBuffer(x + 25, y + 65 + 36, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[1], 2);

  00329	6a 02		 push	 2
  0032b	68 14 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA+20
  00330	6a 00		 push	 0
  00332	6a 01		 push	 1
  00334	68 83 00 00 00	 push	 131			; 00000083H
  00339	6a 2d		 push	 45			; 0000002dH
  0033b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5022 : 				btnId[3] = StockFontBuffer(x + 25, y + 65 + 36 * 3, FONT_PRIO_FRONT, FONT_PAL_WHITE, channelName[3], 2);

  00340	6a 02		 push	 2
  00342	68 3c 00 00 00	 push	 OFFSET ?channelName@@3PAY0BE@DA+60
  00347	6a 00		 push	 0
$LN64@joinChanne:

; 5028 : 			}
; 5029 : 			graId[0] = StockDispBuffer(x + 65, y + 13 + 200, DISP_PRIO_IME3, CG_CLOSE_BTN, 2);

  00349	6a 01		 push	 1
  0034b	68 cb 00 00 00	 push	 203			; 000000cbH
  00350	6a 2d		 push	 45			; 0000002dH
  00352	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA+4, eax
  00357	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0035c	83 c4 30	 add	 esp, 48			; 00000030H
  0035f	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??joinChannelWN@@YAXXZ@4PAHA+12, eax
  00364	6a 02		 push	 2
  00366	68 ba 65 00 00	 push	 26042			; 000065baH
  0036b	6a 69		 push	 105			; 00000069H
  0036d	68 f3 00 00 00	 push	 243			; 000000f3H
  00372	6a 55		 push	 85			; 00000055H
  00374	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00379	83 c4 14	 add	 esp, 20			; 00000014H
  0037c	a3 00 00 00 00	 mov	 DWORD PTR ?graId@?1??joinChannelWN@@YAXXZ@4PAHA, eax

; 5030 : #endif
; 5031 : 
; 5032 : #ifndef _FM_MODIFY
; 5033 : 			switch (selId)
; 5034 : 			{
; 5035 : 			case 0:
; 5036 : 				ShowBottomLineString(FONT_PAL_WHITE, "ë¶ì¡±ì¸ë¶ì ë³´ë³´ê¸°ã");
; 5037 : 				break;
; 5038 : 			case 1:
; 5039 : 			case 2:
; 5040 : 			case 3:
; 5041 : 				if (pc.channel == selId)
; 5042 : 					sprintf(buf, "íì¬ì±ëìììµëë¤ã");
; 5043 : 				else
; 5044 : 					sprintf(buf, "íì¬ì±í ì±ëë³´ê¸°ã");
; 5045 : 				ShowBottomLineString(FONT_PAL_WHITE, buf);
; 5046 : 				break;
; 5047 : 			case 5:
; 5048 : 				ShowBottomLineString(FONT_PAL_WHITE, "ë¶ì¡±ì¥ì´ ë¶ì¡±ì ì ì²´ìê² ë°©ì¡ã");
; 5049 : 				break;
; 5050 : 			case 6:
; 5051 : 				ShowBottomLineString(FONT_PAL_WHITE, "íì¬ì±ëì¢ë£ã");
; 5052 : 				break;
; 5053 : 			case 7:
; 5054 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì¶ë³µì¬ìí¹ë³ê¸°ë¥ã");
; 5055 : 				break;
; 5056 : 			default:
; 5057 : 				if (selgraId == 0)
; 5058 : 					ShowBottomLineString(FONT_PAL_WHITE, "ì±íì±ëë©ë´ììëê°ê¸°ã");
; 5059 : 				break;
; 5060 : 			}
; 5061 : #else
; 5062 : 			switch (selId)

  00381	83 fb 03	 cmp	 ebx, 3
  00384	77 23		 ja	 SHORT $LN35@joinChanne
  00386	ff 24 9d 00 00
	00 00		 jmp	 DWORD PTR $LN60@joinChanne[ebx*4]
$LN31@joinChanne:

; 5063 : 			{
; 5064 : 			case 0:
; 5065 : 				ShowBottomLineString(FONT_PAL_WHITE, "ê°ì¡±ì¸ë¶ì ë³´ë³´ê¸°ã");

  0038d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CBGDDGMA@?$LA?$KB?A?$LH?$LM?$LM?$LK?N?A?$KE?$LK?$LI?$LK?$LI?$LB?b?$KB?$KD@

; 5066 : 				break;

  00392	eb 23		 jmp	 SHORT $LN65@joinChanne
$LN32@joinChanne:

; 5067 : 			case 1:
; 5068 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì¶ë³µì¬ìí¹ë³íê¸°ë¥ã");

  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MBHIEFGB@?C?$OA?$LK?$LJ?$LL?g?$MA?G?F?$KP?$LK?$LA?G?Q?$LB?b?$LE?I?$KB?$KD@

; 5069 : 				break;

  00399	eb 1c		 jmp	 SHORT $LN65@joinChanne
$LN33@joinChanne:

; 5070 : 			case 2:
; 5071 : 				ShowBottomLineString(FONT_PAL_WHITE, "ë¶ì¡±ê²ìíê¸°ë¥ì¬ì©ã");

  0039b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EKJBMCBD@?$LK?N?A?$LH?$LA?T?$LN?C?F?G?$LB?b?$LE?I?$LL?g?$LP?k?$KB?$KD@

; 5072 : 				break;

  003a0	eb 15		 jmp	 SHORT $LN65@joinChanne
$LN34@joinChanne:

; 5073 : 			case 3:
; 5074 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì¡±ì¥ë°©ì¡ê¸°ë¥ëê¸°ã");

  003a2	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BKOBNADD@?A?$LH?$MA?e?$LJ?f?$LM?$NL?$LB?b?$LE?I?$LC?t?$LB?b?$KB?$KD@

; 5075 : 				break;

  003a7	eb 0e		 jmp	 SHORT $LN65@joinChanne
$LN35@joinChanne:

; 5076 : 			default:
; 5077 : 				if (selgraId == 0)

  003a9	83 bd b8 fb ff
	ff 00		 cmp	 DWORD PTR _selgraId$1$[ebp], 0
  003b0	75 0f		 jne	 SHORT $LN36@joinChanne

; 5078 : 					ShowBottomLineString(FONT_PAL_WHITE, "ì±íì±ëë©ë´ììëê°ê¸°ã");

  003b2	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@MOILBLMI@?C?$KE?F?C?C?$KE?$LD?N?$LI?$NO?$LE?$LK?$LP?$KB?$LM?$KN?$LD?$KK?$LA?$KB?$LB?b?$KB?$KD@
$LN65@joinChanne:

; 5079 : 				break;
; 5080 : 			}
; 5081 : #endif
; 5082 : 			if (joinChannel2Proc == 1000)

  003b7	6a 00		 push	 0
  003b9	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  003be	83 c4 08	 add	 esp, 8
$LN36@joinChanne:
  003c1	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?joinChannel2Proc@@3FA
  003c7	b9 e8 03 00 00	 mov	 ecx, 1000		; 000003e8H
  003cc	66 3b c1	 cmp	 ax, cx
  003cf	75 14		 jne	 SHORT $LN37@joinChanne

; 5083 : 				joinChannel2WN();

  003d1	e8 00 00 00 00	 call	 ?joinChannel2WN@@YAXXZ	; joinChannel2WN
  003d6	5b		 pop	 ebx

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  003d7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003da	33 cd		 xor	 ecx, ebp
  003dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003e1	8b e5		 mov	 esp, ebp
  003e3	5d		 pop	 ebp
  003e4	c3		 ret	 0
$LN37@joinChanne:

; 5084 : 			else if (joinChannel2Proc == 2000)

  003e5	b9 d0 07 00 00	 mov	 ecx, 2000		; 000007d0H
  003ea	66 3b c1	 cmp	 ax, cx
  003ed	75 05		 jne	 SHORT $LN61@joinChanne

; 5085 : 				leaderFuncWN();

  003ef	e8 00 00 00 00	 call	 ?leaderFuncWN@@YAXXZ	; leaderFuncWN
$LN61@joinChanne:
  003f4	5b		 pop	 ebx
$LN39@joinChanne:

; 5086 : 		}
; 5087 : 	}
; 5088 : }

  003f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003f8	33 cd		 xor	 ecx, ebp
  003fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ff	8b e5		 mov	 esp, ebp
  00401	5d		 pop	 ebp
  00402	c3		 ret	 0
  00403	90		 npad	 1
$LN55@joinChanne:
  00404	00 00 00 00	 DD	 $LN19@joinChanne
  00408	00 00 00 00	 DD	 $LN20@joinChanne
  0040c	00 00 00 00	 DD	 $LN21@joinChanne
  00410	00 00 00 00	 DD	 $LN22@joinChanne
$LN60@joinChanne:
  00414	00 00 00 00	 DD	 $LN31@joinChanne
  00418	00 00 00 00	 DD	 $LN32@joinChanne
  0041c	00 00 00 00	 DD	 $LN33@joinChanne
  00420	00 00 00 00	 DD	 $LN34@joinChanne
?joinChannelWN@@YAXXZ ENDP				; joinChannelWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?initJoinChannelWN@@YAXXZ
_TEXT	SEGMENT
?initJoinChannelWN@@YAXXZ PROC				; initJoinChannelWN, COMDAT

; 4815 : 	channelWNFlag = 1;

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	66 a3 00 00 00
	00		 mov	 WORD PTR ?channelWNFlag@@3FA, ax ; channelWNFlag

; 4816 : 	//joinChannelProc = 1000;
; 4817 : }

  0000b	c3		 ret	 0
?initJoinChannelWN@@YAXXZ ENDP				; initJoinChannelWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?etcSwitch@@YAHXZ
_TEXT	SEGMENT
_msg2$ = -184						; size = 8
tv1257 = -176						; size = 4
tv1241 = -172						; size = 4
_buf$1 = -172						; size = 3
_mask$ = -168						; size = 20
_msg4$ = -148						; size = 24
_msg$ = -124						; size = 20
_pszChannel$ = -104					; size = 16
_ResoModeMsg$2 = -88					; size = 20
_iChannelSwitch$ = -84					; size = 16
_buf$3 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?etcSwitch@@YAHXZ PROC					; etcSwitch, COMDAT

; 4197 : int etcSwitch(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b8 00 00
	00		 sub	 esp, 184		; 000000b8H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 4198 : 	static ACTION* ptActMenuWin = NULL;
; 4199 : #ifdef _CHANNEL_MODIFY
; 4200 : 	static ACTION* pActChannelWin = NULL;
; 4201 : 	static int iChannelbtnId[4];
; 4202 : 	FILE* pf = NULL;
; 4203 : #endif
; 4204 : 	static int x, y, w, h;
; 4205 : #ifdef _AUCPROTOCOL				// (ä¸å¯å¼) Syu ADD æåé¢éå¼å³Protocol
; 4206 : 	static int btnId[6];
; 4207 : #else
; 4208 : 	static int btnId[5];
; 4209 : #endif
; 4210 : 	int id = 0;
; 4211 : 	int focusId = 0;
; 4212 : 	char* msg[] =
; 4213 : 	{
; 4214 : 		"í    í°ï¼",
; 4215 : 		"ë    ì¼ï¼",
; 4216 : 		"ëªí¨êµíï¼",
; 4217 : #ifndef _CHANNEL_MODIFY
; 4218 : 		"ì±ííê¸°ï¼",
; 4219 : #else
; 4220 : 		"ì±    ë    ë²    í¼",
; 4221 : #endif
; 4222 : 		"ê±°    ëï¼",
; 4223 : #ifdef _AUCPROTOCOL				// (ä¸å¯å¼) Syu ADD æåé¢éå¼å³Protocol
; 4224 : 		"ê²½ããë§¤ï¼",
; 4225 : #endif
; 4226 : #ifdef _NB_SetResoMode
; 4227 : 		//"í´ ì ëï¼",//5
; 4228 : #endif
; 4229 : 	};
; 4230 : 
; 4231 : 	char* msg2[] =
; 4232 : 	{
; 4233 : 		" ï¼®  ï¼¯",
; 4234 : 		" ï¼¹ï¼¥ï¼³",
; 4235 : 		//" Other"
; 4236 : 	};
; 4237 : #ifndef _CHANNEL_MODIFY
; 4238 : 	char* msg3[] =
; 4239 : 	{
; 4240 : 		" ì ì§ì",
; 4241 : 		" 5  í"
; 4242 : 	};
; 4243 : #endif
; 4244 : 	char* msg4[] =
; 4245 : 	{
; 4246 : 		"ë¤ë¥¸ì¬ëíí©ë¥ì¬ë¶ì¤ì ã",
; 4247 : 		"ë¤ë¥¸ì¬ëëì ë°ìì§ì¤ì ã",
; 4248 : 		"ëªí¨êµííì©ì¬ë¶ì¤ì ã",
; 4249 : #ifndef _CHANNEL_MODIFY
; 4250 : 		"ì±íë´ì©ìë¤ìììëë²ìì¤ì ã",
; 4251 : #else
; 4252 : 		"ê°ì±ëì¤ì ëëí´ì ã",
; 4253 : #endif
; 4254 : 		"ê±°ëìë½ì¬ë¶ì¤ì ã"
; 4255 : #ifdef _AUCPROTOCOL				// (ä¸å¯å¼) Syu ADD æåé¢éå¼å³Protocol
; 4256 : 		,
; 4257 : 		"ê²½ë§¤ì±ëë©ìì§ìì ì¬ë¶ã"
; 4258 : #endif
; 4259 : #ifdef _NB_SetResoMode
; 4260 : 		,"ê²ìì¸í°íì´ì¤í´ìëì¤ì ã"//5
; 4261 : #endif
; 4262 : 
; 4263 : 	};
; 4264 : 
; 4265 : 	int mask[] =
; 4266 : 	{
; 4267 : 		PC_ETCFLAG_PARTY,

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000000000000100000000400000001

; 4268 : 		PC_ETCFLAG_DUEL,
; 4269 : 		PC_ETCFLAG_MAIL,
; 4270 : #ifndef _CHANNEL_MODIFY
; 4271 : 		PC_ETCFLAG_CHAT_MODE,
; 4272 : #else
; 4273 : 		0,
; 4274 : #endif
; 4275 : 		PC_ETCFLAG_TRADE
; 4276 : #ifdef _AUCPROTOCOL				// (ä¸å¯å¼) Syu ADD æåé¢éå¼å³Protocol
; 4277 : 		,PC_ETCFLAG_AUC
; 4278 : #endif
; 4279 : 
; 4280 : 	};
; 4281 : #ifdef _CHANNEL_MODIFY
; 4282 : 	char* pszChannel[] = {
; 4283 : 		"ê·ìë§",
; 4284 : 		"ê°ì¡±ë§",
; 4285 : 		"ê²½ë§¤ì±ë",
; 4286 : 		"ëíì ì¥"
; 4287 : 	};
; 4288 : 	int iChannelSwitch[] = {
; 4289 : 		PC_ETCFLAG_CHAT_TELL,
; 4290 : 		PC_ETCFLAG_CHAT_FM,
; 4291 : 		PC_ETCFLAG_CHAT_OCC,
; 4292 : 		PC_ETCFLAG_CHAT_SAVE
; 4293 : 	};
; 4294 : #endif
; 4295 : 
; 4296 : 	/*#ifdef _JOBDAILY
; 4297 : 		char *msg5[] = {
; 4298 : 			"ì¢  ë£",
; 4299 : 			"ì´ì íì´ì§",
; 4300 : 			"ë¤ìíì´ì§"
; 4301 : 		};
; 4302 : 	#endif*/
; 4303 : 
; 4304 : 	int i;
; 4305 : 	int x1, y1, x2, y2;
; 4306 : 
; 4307 : 	if (etcSwitchProcNo == 0)

  0001a	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?etcSwitchProcNo@@3FA ; etcSwitchProcNo
  00021	c7 45 84 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp], OFFSET ??_C@_0L@OLEDJDPG@?F?D?5?5?5?5?F?$LM?$KD?$LK@
  00028	c7 45 88 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+4], OFFSET ??_C@_0L@MAOAOHML@?$LF?$OA?5?5?5?5?$LO?s?$KD?$LK@
  0002f	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+8], OFFSET ??_C@_0L@POPIGLPO@?$LI?m?G?T?$LB?$LD?H?$KP?$KD?$LK@
  00036	c7 45 90 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+12], OFFSET ??_C@_0BF@IDENONED@?C?$KE?5?5?5?5?$LD?N?5?5?5?5?$LJ?v?5?5?5?5?F?$LA@
  0003d	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+16], OFFSET ??_C@_0L@HENHCGEF@?$LA?E?5?5?5?5?$LH?$KB?$KD?$LK@
  00044	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg2$[ebp], OFFSET ??_C@_07MIKFFMHF@?5?$KD?N?5?5?$KD?O@
  0004e	c7 85 4c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg2$[ebp+4], OFFSET ??_C@_07CHOGEIED@?5?$KD?Y?$KD?E?$KD?S@
  00058	c7 85 6c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg4$[ebp], OFFSET ??_C@_0BJ@NPLNHFNN@?$LE?Y?$LI?$KF?$LL?g?$LG?w?F?$MA?G?U?$LH?y?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
  00062	c7 85 70 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg4$[ebp+4], OFFSET ??_C@_0BJ@EJIPNKEA@?$LE?Y?$LI?$KF?$LL?g?$LG?w?$LF?$LF?$MA?$PM?$LJ?$NO?$MA?$LL?A?v?$LM?$LD?A?$KE?$KB?$KD@
  0006c	c7 85 74 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg4$[ebp+8], OFFSET ??_C@_0BH@GAKCDBLG@?$LI?m?G?T?$LB?$LD?H?$KP?G?c?$LP?k?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
  00076	c7 85 78 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg4$[ebp+12], OFFSET ??_C@_0BF@NLHMJPHG@?$LA?$KC?C?$KE?$LD?N?$LM?$LD?A?$KE?$LG?G?$LE?B?G?X?A?$KG?$KB?$KD@
  00080	c7 85 7c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _msg4$[ebp+16], OFFSET ??_C@_0BD@DBDDAFOG@?$LA?E?$LH?$KB?$LM?v?$LG?t?$LP?$KJ?$LK?N?$LM?$LD?A?$KE?$KB?$KD@
  0008a	c7 45 80 00 00
	00 00		 mov	 DWORD PTR _msg4$[ebp+20], OFFSET ??_C@_0BL@JJOLNGNO@?$LA?T?$MA?S?$MA?N?E?M?F?d?$MA?L?$LN?$LK?G?X?$LL?s?$LF?$LF?$LM?$LD?A?$KE?$KB?$KD@
  00091	c7 85 68 ff ff
	ff 20 00 00 00	 mov	 DWORD PTR _mask$[ebp+16], 32 ; 00000020H
  0009b	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _pszChannel$[ebp], OFFSET ??_C@_06FNJBCBKN@?$LB?S?$LM?S?$LI?$LL@
  000a2	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _pszChannel$[ebp+4], OFFSET ??_C@_06IAKMCPJ@?$LA?$KB?A?$LH?$LI?$LL@
  000a9	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _pszChannel$[ebp+8], OFFSET ??_C@_08LIEPCPDK@?$LA?f?$LI?E?C?$KE?$LD?N@
  000b0	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _pszChannel$[ebp+12], OFFSET ??_C@_08DKNMBPNK@?$LE?k?H?$KN?$MA?z?$MA?e@
  000b7	0f 11 85 58 ff
	ff ff		 movups	 XMMWORD PTR _mask$[ebp], xmm0
  000be	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000200000001000000008000000040
  000c5	0f 11 45 ac	 movups	 XMMWORD PTR _iChannelSwitch$[ebp], xmm0
  000c9	66 85 c9	 test	 cx, cx
  000cc	75 7d		 jne	 SHORT $LN124@etcSwitch

; 4308 : 	{
; 4309 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 4310 : 			btnId[i] = -2;

  000ce	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 4311 : 
; 4312 : 		// ??????î
; 4313 : 		w = 3;
; 4314 : 		h = 5;
; 4315 : 		x = 5;
; 4316 : 		//x = 440;
; 4317 : 		//y = 72;
; 4318 : 		y = 5;
; 4319 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1); //ptActMenuWin = MakeWindowDisp(x, y, w, h+1, NULL, 1);

  000d5	6a 01		 push	 1
  000d7	6a 00		 push	 0
  000d9	6a 05		 push	 5
  000db	6a 03		 push	 3
  000dd	6a 05		 push	 5
  000df	6a 05		 push	 5
  000e1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??etcSwitch@@YAHXZ@4PAHA, xmm0
  000e8	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??etcSwitch@@YAHXZ@4PAHA+16, -2 ; fffffffeH
  000f2	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?w@?1??etcSwitch@@YAHXZ@4HA, 3
  000fc	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?h@?1??etcSwitch@@YAHXZ@4HA, 5
  00106	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA, 5
  00110	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA, 5
  0011a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0011f	83 c4 18	 add	 esp, 24			; 00000018H
  00122	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A, eax

; 4320 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4321 : 		x = ptActMenuWin->x;

  00127	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0012a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA, ecx

; 4322 : 		y = ptActMenuWin->y;

  00130	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00133	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA, ecx

; 4323 : #endif
; 4324 : 		etcSwitchProcNo++;

  00139	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?etcSwitchProcNo@@3FA ; etcSwitchProcNo
  00140	66 41		 inc	 cx
  00142	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?etcSwitchProcNo@@3FA, cx ; etcSwitchProcNo
  00149	eb 05		 jmp	 SHORT $LN19@etcSwitch
$LN124@etcSwitch:

; 4268 : 		PC_ETCFLAG_DUEL,
; 4269 : 		PC_ETCFLAG_MAIL,
; 4270 : #ifndef _CHANNEL_MODIFY
; 4271 : 		PC_ETCFLAG_CHAT_MODE,
; 4272 : #else
; 4273 : 		0,
; 4274 : #endif
; 4275 : 		PC_ETCFLAG_TRADE
; 4276 : #ifdef _AUCPROTOCOL				// (ä¸å¯å¼) Syu ADD æåé¢éå¼å³Protocol
; 4277 : 		,PC_ETCFLAG_AUC
; 4278 : #endif
; 4279 : 
; 4280 : 	};
; 4281 : #ifdef _CHANNEL_MODIFY
; 4282 : 	char* pszChannel[] = {
; 4283 : 		"ê·ìë§",
; 4284 : 		"ê°ì¡±ë§",
; 4285 : 		"ê²½ë§¤ì±ë",
; 4286 : 		"ëíì ì¥"
; 4287 : 	};
; 4288 : 	int iChannelSwitch[] = {
; 4289 : 		PC_ETCFLAG_CHAT_TELL,
; 4290 : 		PC_ETCFLAG_CHAT_FM,
; 4291 : 		PC_ETCFLAG_CHAT_OCC,
; 4292 : 		PC_ETCFLAG_CHAT_SAVE
; 4293 : 	};
; 4294 : #endif
; 4295 : 
; 4296 : 	/*#ifdef _JOBDAILY
; 4297 : 		char *msg5[] = {
; 4298 : 			"ì¢  ë£",
; 4299 : 			"ì´ì íì´ì§",
; 4300 : 			"ë¤ìíì´ì§"
; 4301 : 		};
; 4302 : 	#endif*/
; 4303 : 
; 4304 : 	int i;
; 4305 : 	int x1, y1, x2, y2;
; 4306 : 
; 4307 : 	if (etcSwitchProcNo == 0)

  0014b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
$LN19@etcSwitch:

; 4325 : 	}
; 4326 : #ifdef _CHANNEL_MODIFY
; 4327 : 	// [ì±ë ìëì° ì¤ìì¹]
; 4328 : 	if (etcSwitchProcNo == 100)

  00150	66 83 f9 64	 cmp	 cx, 100			; 00000064H
  00154	75 52		 jne	 SHORT $LN125@etcSwitch

; 4329 : 	{
; 4330 : 		w = 3;
; 4331 : 		h = 4;
; 4332 : 		x = 16;
; 4333 : 		y = 16;
; 4334 : 		pActChannelWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00156	6a 01		 push	 1
  00158	6a 00		 push	 0
  0015a	6a 04		 push	 4
  0015c	6a 03		 push	 3
  0015e	6a 10		 push	 16			; 00000010H
  00160	6a 10		 push	 16			; 00000010H
  00162	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?w@?1??etcSwitch@@YAHXZ@4HA, 3
  0016c	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?h@?1??etcSwitch@@YAHXZ@4HA, 4
  00176	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA, 16 ; 00000010H
  00180	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA, 16 ; 00000010H
  0018a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0018f	8b c8		 mov	 ecx, eax
  00191	83 c4 18	 add	 esp, 24			; 00000018H

; 4335 : 		etcSwitchProcNo++;

  00194	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?etcSwitchProcNo@@3FA ; etcSwitchProcNo
  0019b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
  001a0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A, ecx
  001a6	eb 06		 jmp	 SHORT $LN20@etcSwitch
$LN125@etcSwitch:

; 4325 : 	}
; 4326 : #ifdef _CHANNEL_MODIFY
; 4327 : 	// [ì±ë ìëì° ì¤ìì¹]
; 4328 : 	if (etcSwitchProcNo == 100)

  001a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
$LN20@etcSwitch:
  001ae	53		 push	 ebx
  001af	56		 push	 esi
  001b0	57		 push	 edi

; 4336 : 	}
; 4337 : 
; 4338 : 	if (pActChannelWin != NULL)

  001b1	85 c9		 test	 ecx, ecx
  001b3	0f 84 1b 03 00
	00		 je	 $LN11@etcSwitch

; 4339 : 	{
; 4340 : 		id = -1;
; 4341 : 		focusId = -1;
; 4342 : 		if (pActChannelWin->hp >= 1)

  001b9	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  001bd	0f 8c 11 03 00
	00		 jl	 $LN11@etcSwitch

; 4343 : 		{
; 4344 : 			id = selGraId(iChannelbtnId, sizeof(iChannelbtnId) / sizeof(int));

  001c3	6a 04		 push	 4
  001c5	68 00 00 00 00	 push	 OFFSET ?iChannelbtnId@?1??etcSwitch@@YAHXZ@4PAHA
  001ca	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId

; 4345 : 			focusId = focusGraId(iChannelbtnId, sizeof(iChannelbtnId) / sizeof(int));

  001cf	6a 04		 push	 4
  001d1	68 00 00 00 00	 push	 OFFSET ?iChannelbtnId@?1??etcSwitch@@YAHXZ@4PAHA
  001d6	8b f8		 mov	 edi, eax
  001d8	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  001dd	83 c4 10	 add	 esp, 16			; 00000010H
  001e0	8b d8		 mov	 ebx, eax
  001e2	33 f6		 xor	 esi, esi
$LL7@etcSwitch:

; 4347 : 			{
; 4348 : 				x1 = x + 18;

  001e4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA

; 4349 : 				y1 = y + i * 30 + 23;

  001ea	8b ce		 mov	 ecx, esi
  001ec	c1 e1 04	 shl	 ecx, 4
  001ef	83 c2 12	 add	 edx, 18			; 00000012H
  001f2	2b ce		 sub	 ecx, esi

; 4350 : 				x2 = x1 + 157;
; 4351 : 				y2 = y1 + 22;
; 4352 : 				if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001f4	6a 6b		 push	 107			; 0000006bH
  001f6	8d 0c 4d 17 00
	00 00		 lea	 ecx, DWORD PTR [ecx*2+23]
  001fd	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  00203	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  00206	50		 push	 eax
  00207	8d 82 9d 00 00
	00		 lea	 eax, DWORD PTR [edx+157]
  0020d	50		 push	 eax
  0020e	51		 push	 ecx
  0020f	52		 push	 edx
  00210	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00215	83 c4 14	 add	 esp, 20			; 00000014H
  00218	85 c0		 test	 eax, eax
  0021a	74 11		 je	 SHORT $LN5@etcSwitch

; 4353 : 				{
; 4354 : 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  0021c	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1

; 4355 : 						id = i + 1;
; 4356 : 					focusId = i + 1;

  00223	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
  00226	8b c3		 mov	 eax, ebx
  00228	0f 44 c7	 cmove	 eax, edi
  0022b	8b f8		 mov	 edi, eax
$LN5@etcSwitch:

; 4346 : 			for (i = 0; i < sizeof(pszChannel) / sizeof(char*); i++)

  0022d	46		 inc	 esi
  0022e	83 fe 04	 cmp	 esi, 4
  00231	72 b1		 jb	 SHORT $LL7@etcSwitch

; 4357 : 				}
; 4358 : 			}
; 4359 : 
; 4360 : 			if (CheckMenuFlag())

  00233	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00238	85 c0		 test	 eax, eax
  0023a	75 3e		 jne	 SHORT $LN118@etcSwitch

; 4361 : 				id = 100;
; 4362 : 			else if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL))

  0023c	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00246	74 09		 je	 SHORT $LN27@etcSwitch
  00248	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  0024d	85 c0		 test	 eax, eax
  0024f	74 12		 je	 SHORT $LN123@etcSwitch
$LN27@etcSwitch:

; 4363 : 			{
; 4364 : 				id = 100;
; 4365 : 				play_se(203, 320, 240);
; 4366 : 			}
; 4367 : 			else if (etcSwitchProcNo == 1000)

  00251	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00256	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?etcSwitchProcNo@@3FA, ax ; etcSwitchProcNo
  0025d	74 1b		 je	 SHORT $LN118@etcSwitch

; 4368 : 				id = 100;
; 4369 : 
; 4370 : 			if (id == 0)

  0025f	85 ff		 test	 edi, edi
  00261	75 6c		 jne	 SHORT $LN30@etcSwitch
$LN123@etcSwitch:

; 4371 : 				play_se(203, 320, 240);

  00263	68 f0 00 00 00	 push	 240			; 000000f0H
  00268	68 40 01 00 00	 push	 320			; 00000140H
  0026d	68 cb 00 00 00	 push	 203			; 000000cbH
  00272	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00277	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN118@etcSwitch:

; 4423 : 				DeathAction(pActChannelWin);

  0027a	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
  00280	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4424 : 				pActChannelWin = NULL;
; 4425 : 				if ((pf = fopen("data\\channel.dat", "w+")) == NULL)

  00285	68 00 00 00 00	 push	 OFFSET ??_C@_02CHHAKFFB@w?$CL@
  0028a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BLGDDDEM@data?2channel?4dat@
  0028f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActChannelWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A, 0
  00299	e8 00 00 00 00	 call	 _fopen
  0029e	8b f0		 mov	 esi, eax
  002a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  002a3	85 f6		 test	 esi, esi
  002a5	0f 85 2d 03 00
	00		 jne	 $LN47@etcSwitch

; 4426 : 					StockChatBufferLine("ì±ë ì¤ì  íì¼ ì½ê¸° ì¤í¨", FONT_PAL_RED);

  002ab	50		 push	 eax
  002ac	6a 06		 push	 6
  002ae	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DLFHHIDJ@?C?$KE?$LD?N?5?$LM?$LD?A?$KE?5?F?D?$MA?O?5?$MA?P?$LB?b?5?$LN?G?F?P@
  002b3	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  002b8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4435 : 				}
; 4436 : 				return 1;

  002bb	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  002be	5f		 pop	 edi

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  002bf	5e		 pop	 esi
  002c0	5b		 pop	 ebx
  002c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c4	33 cd		 xor	 ecx, ebp
  002c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002cb	8b e5		 mov	 esp, ebp
  002cd	5d		 pop	 ebp
  002ce	c3		 ret	 0
$LN30@etcSwitch:

; 4372 : 			else if (1 <= id && id <= sizeof(msg) / sizeof(char*))

  002cf	83 ff 01	 cmp	 edi, 1
  002d2	0f 8c 44 01 00
	00		 jl	 $LN32@etcSwitch
  002d8	83 ff 05	 cmp	 edi, 5
  002db	77 9d		 ja	 SHORT $LN118@etcSwitch

; 4373 : 			{
; 4374 : 				id--;
; 4375 : 				if (pc.etcFlag & iChannelSwitch[id])

  002dd	8b 74 bd a8	 mov	 esi, DWORD PTR _iChannelSwitch$[ebp+edi*4-4]
  002e1	4f		 dec	 edi
  002e2	66 8b 0d a8 00
	00 00		 mov	 cx, WORD PTR ?pc@@3UPC@@A+168
  002e9	0f b7 c6	 movzx	 eax, si
  002ec	89 85 54 ff ff
	ff		 mov	 DWORD PTR tv1241[ebp], eax
  002f2	f7 d0		 not	 eax
  002f4	0f b7 d0	 movzx	 edx, ax
  002f7	0f b7 c1	 movzx	 eax, cx
  002fa	89 b5 50 ff ff
	ff		 mov	 DWORD PTR tv1257[ebp], esi
  00300	85 c6		 test	 eax, esi
  00302	74 0f		 je	 SHORT $LN33@etcSwitch

; 4376 : 				{
; 4377 : 					pc.etcFlag &= ~iChannelSwitch[id];

  00304	66 23 ca	 and	 cx, dx

; 4378 : 					TalkMode = 0;

  00307	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?TalkMode@@3HA, 0 ; TalkMode

; 4379 : 				}

  00311	eb 07		 jmp	 SHORT $LN126@etcSwitch
$LN33@etcSwitch:

; 4380 : 				else
; 4381 : 					pc.etcFlag |= iChannelSwitch[id];

  00313	66 0b 8d 54 ff
	ff ff		 or	 cx, WORD PTR tv1241[ebp]
$LN126@etcSwitch:

; 4382 : 				switch (id)

  0031a	66 89 0d a8 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+168, cx
  00321	0f b7 c1	 movzx	 eax, cx
  00324	8b ca		 mov	 ecx, edx
  00326	0f b7 f1	 movzx	 esi, cx
  00329	83 ef 01	 sub	 edi, 1
  0032c	74 37		 je	 SHORT $LN35@etcSwitch
  0032e	83 ef 01	 sub	 edi, 1
  00331	74 1e		 je	 SHORT $LN37@etcSwitch
  00333	83 ef 01	 sub	 edi, 1
  00336	75 4e		 jne	 SHORT $LN36@etcSwitch

; 4400 : 				case 3:
; 4401 : 					if (!(pc.etcFlag & iChannelSwitch[id]))

  00338	0f b7 c0	 movzx	 eax, ax
  0033b	85 85 50 ff ff
	ff		 test	 eax, DWORD PTR tv1257[ebp]
  00341	75 43		 jne	 SHORT $LN36@etcSwitch

; 4402 : 						SaveChatData(NULL, 0, true);

  00343	6a 01		 push	 1
  00345	57		 push	 edi
  00346	57		 push	 edi
  00347	e8 00 00 00 00	 call	 ?SaveChatData@@YAXPADD_N@Z ; SaveChatData
  0034c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0034f	eb 35		 jmp	 SHORT $LN36@etcSwitch
$LN37@etcSwitch:

; 4388 : 						pc.etcFlag &= ~iChannelSwitch[id];
; 4389 : 					}
; 4390 : 					break;
; 4391 : 					//2.5çå»é¤èä¸ç¸å³åè½
; 4392 : 
; 4393 : 				case 2:
; 4394 : 					if (pc.profession_class == 0)

  00351	83 3d 84 a1 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+41348, 0
  00358	75 2c		 jne	 SHORT $LN36@etcSwitch

; 4395 : 					{
; 4396 : 						StockChatBufferLine("ê³ ì©ëì§ìììµëë¤", FONT_PAL_RED);

  0035a	6a 00		 push	 0
  0035c	6a 06		 push	 6
  0035e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JIKBMICG@?$LA?m?$LP?k?$LF?G?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@

; 4397 : 						pc.etcFlag &= ~iChannelSwitch[id];
; 4398 : 					}
; 4399 : 					break;

  00363	eb 12		 jmp	 SHORT $LN127@etcSwitch
$LN35@etcSwitch:

; 4383 : 				{
; 4384 : 				case 1:
; 4385 : 					if (pc.familyleader <= 0)

  00365	83 3d 08 51 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 0
  0036c	7f 18		 jg	 SHORT $LN36@etcSwitch

; 4386 : 					{
; 4387 : 						StockChatBufferLine("ê°ì¡±ìê°ìíì§ìììµëë¤", FONT_PAL_RED);

  0036e	6a 00		 push	 0
  00370	6a 06		 push	 6
  00372	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BCJNPCLP@?$LA?$KB?A?$LH?$LP?$KB?$LA?$KB?$MA?T?G?O?A?v?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y@
$LN127@etcSwitch:

; 4403 : 					break;
; 4404 : 				}
; 4405 : 				if (eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0)

  00377	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  0037c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0037f	66 21 35 a8 00
	00 00		 and	 WORD PTR ?pc@@3UPC@@A+168, si
$LN36@etcSwitch:
  00386	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  0038e	75 73		 jne	 SHORT $LN43@etcSwitch
  00390	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  00398	75 69		 jne	 SHORT $LN43@etcSwitch
  0039a	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  003a2	75 5f		 jne	 SHORT $LN43@etcSwitch

; 4406 : 				{
; 4407 : 					if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())

  003a4	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  003a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  003af	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  003b5	3b c8		 cmp	 ecx, eax
  003b7	73 3f		 jae	 SHORT $LN42@etcSwitch

; 4408 : 					{
; 4409 : 						if (bNewServer)

  003b9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  003c0	0f b7 05 a8 00
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A+168
  003c7	50		 push	 eax
  003c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003ce	74 14		 je	 SHORT $LN44@etcSwitch

; 4410 : 							lssproto_FS_send(sockfd, pc.etcFlag);

  003d0	e8 00 00 00 00	 call	 ?lssproto_FS_send@@YAXHH@Z ; lssproto_FS_send

; 4413 : 
; 4414 : 						fieldBtnPushTime = TimeGetTime();

  003d5	83 c4 08	 add	 esp, 8
  003d8	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  003dd	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 4415 : 					}

  003e2	eb 1f		 jmp	 SHORT $LN43@etcSwitch
$LN44@etcSwitch:

; 4411 : 						else
; 4412 : 							old_lssproto_FS_send(sockfd, pc.etcFlag);

  003e4	e8 00 00 00 00	 call	 ?old_lssproto_FS_send@@YAXHH@Z ; old_lssproto_FS_send

; 4413 : 
; 4414 : 						fieldBtnPushTime = TimeGetTime();

  003e9	83 c4 08	 add	 esp, 8
  003ec	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  003f1	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 4415 : 					}

  003f6	eb 0b		 jmp	 SHORT $LN43@etcSwitch
$LN42@etcSwitch:

; 4416 : 					else
; 4417 : 						etcSwitchChangeFlag = 1;

  003f8	b8 01 00 00 00	 mov	 eax, 1
  003fd	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchChangeFlag@@3FA, ax ; etcSwitchChangeFlag
$LN43@etcSwitch:

; 4418 : 				}
; 4419 : 				id = -1;
; 4420 : 				play_se(217, 320, 240);

  00403	68 f0 00 00 00	 push	 240			; 000000f0H
  00408	68 40 01 00 00	 push	 320			; 00000140H
  0040d	68 d9 00 00 00	 push	 217			; 000000d9H
  00412	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00417	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4421 : 			}
; 4422 : 			if (id >= 0) {

  0041a	eb 08		 jmp	 SHORT $LN46@etcSwitch
$LN32@etcSwitch:
  0041c	85 ff		 test	 edi, edi
  0041e	0f 89 56 fe ff
	ff		 jns	 $LN118@etcSwitch
$LN46@etcSwitch:

; 4437 : 			}
; 4438 : 
; 4439 : 			iChannelbtnId[0] = StockDispBuffer(x + 96, y + 160, DISP_PRIO_IME3, CG_CLOSE_BTN, 2);

  00424	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  00429	6a 02		 push	 2
  0042b	68 ba 65 00 00	 push	 26042			; 000065baH
  00430	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  00435	6a 69		 push	 105			; 00000069H
  00437	50		 push	 eax
  00438	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  0043d	83 c0 60	 add	 eax, 96			; 00000060H
  00440	50		 push	 eax
  00441	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00446	83 c4 14	 add	 esp, 20			; 00000014H
  00449	a3 00 00 00 00	 mov	 DWORD PTR ?iChannelbtnId@?1??etcSwitch@@YAHXZ@4PAHA, eax

; 4440 : 			if (focusId == 0)

  0044e	85 db		 test	 ebx, ebx
  00450	75 0e		 jne	 SHORT $LN49@etcSwitch

; 4441 : 				ShowBottomLineString(FONT_PAL_WHITE, "ë©ë´ ì¤ì ì°½ì ë«ìµëë¤.");

  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JGAFKJCL@?$LI?$NO?$LE?$LK?5?$LM?$LD?A?$KE?C?$KC?$MA?$LL?5?$LE?$NN?$LN?$MA?$LE?O?$LE?Y?4@
  00457	53		 push	 ebx
  00458	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0045d	83 c4 08	 add	 esp, 8
$LN49@etcSwitch:

; 4442 : 			for (i = 0; i < sizeof(pszChannel) / sizeof(char*); i++) {

  00460	33 ff		 xor	 edi, edi
  00462	33 f6		 xor	 esi, esi
$LL12@etcSwitch:

; 4443 : 				StockFontBuffer(x + 20, y + i * 30 + 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, pszChannel[i], 0);

  00464	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  00469	6a 00		 push	 0
  0046b	ff 74 35 98	 push	 DWORD PTR _pszChannel$[ebp+esi]
  0046f	83 c0 1a	 add	 eax, 26			; 0000001aH
  00472	6a 00		 push	 0
  00474	03 c7		 add	 eax, edi
  00476	6a 01		 push	 1
  00478	50		 push	 eax
  00479	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  0047e	83 c0 14	 add	 eax, 20			; 00000014H
  00481	50		 push	 eax
  00482	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 4444 : 				StockFontBuffer(x + 105, y + i * 30 + 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg2[((pc.etcFlag & iChannelSwitch[i]) ? 1 : 0)], 0);

  00487	0f b7 05 a8 00
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A+168
  0048e	8b 4c 35 ac	 mov	 ecx, DWORD PTR _iChannelSwitch$[ebp+esi]
  00492	23 c8		 and	 ecx, eax
  00494	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  00499	f7 d9		 neg	 ecx
  0049b	6a 00		 push	 0
  0049d	1b c9		 sbb	 ecx, ecx
  0049f	83 c0 1a	 add	 eax, 26			; 0000001aH
  004a2	83 e1 04	 and	 ecx, 4
  004a5	03 c7		 add	 eax, edi
  004a7	ff b4 0d 48 ff
	ff ff		 push	 DWORD PTR _msg2$[ebp+ecx]
  004ae	6a 00		 push	 0
  004b0	6a 01		 push	 1
  004b2	50		 push	 eax
  004b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  004b8	83 c0 69	 add	 eax, 105		; 00000069H
  004bb	50		 push	 eax
  004bc	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004c1	83 c6 04	 add	 esi, 4
  004c4	83 c4 30	 add	 esp, 48			; 00000030H
  004c7	83 c7 1e	 add	 edi, 30			; 0000001eH
  004ca	83 fe 10	 cmp	 esi, 16			; 00000010H
  004cd	72 95		 jb	 SHORT $LL12@etcSwitch

; 4442 : 			for (i = 0; i < sizeof(pszChannel) / sizeof(char*); i++) {

  004cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
$LN11@etcSwitch:

; 4445 : 			}
; 4446 : 		}
; 4447 : 	}
; 4448 : #endif
; 4449 : 
; 4450 : 
; 4451 : 
; 4452 : 
; 4453 : 	if (ptActMenuWin != NULL)

  004d4	85 c0		 test	 eax, eax
  004d6	0f 84 85 01 00
	00		 je	 $LN17@etcSwitch

; 4454 : 	{
; 4455 : 		id = -1;

  004dc	83 cf ff	 or	 edi, -1

; 4456 : 		focusId = -1;

  004df	0b df		 or	 ebx, edi

; 4457 : 		if (ptActMenuWin->hp >= 1)

  004e1	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  004e5	7c 78		 jl	 SHORT $LN14@etcSwitch

; 4458 : 		{
; 4459 : 			// ????î±î¶îî
; 4460 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  004e7	6a 05		 push	 5
  004e9	68 00 00 00 00	 push	 OFFSET ?btnId@?1??etcSwitch@@YAHXZ@4PAHA
  004ee	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId

; 4461 : 			focusId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  004f3	6a 05		 push	 5
  004f5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??etcSwitch@@YAHXZ@4PAHA
  004fa	8b f8		 mov	 edi, eax
  004fc	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  00501	83 c4 10	 add	 esp, 16			; 00000010H
  00504	8b d8		 mov	 ebx, eax
  00506	33 f6		 xor	 esi, esi
  00508	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL15@etcSwitch:

; 4464 : 			{
; 4465 : 				x1 = x + 18;

  00510	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA

; 4466 : 				y1 = y + i * 30 + 23;

  00516	8b ce		 mov	 ecx, esi
  00518	c1 e1 04	 shl	 ecx, 4
  0051b	83 c2 12	 add	 edx, 18			; 00000012H
  0051e	2b ce		 sub	 ecx, esi

; 4467 : 				x2 = x1 + 157;
; 4468 : 				y2 = y1 + 22;
; 4469 : 				if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00520	6a 6b		 push	 107			; 0000006bH
  00522	8d 0c 4d 17 00
	00 00		 lea	 ecx, DWORD PTR [ecx*2+23]
  00529	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  0052f	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  00532	50		 push	 eax
  00533	8d 82 9d 00 00
	00		 lea	 eax, DWORD PTR [edx+157]
  00539	50		 push	 eax
  0053a	51		 push	 ecx
  0053b	52		 push	 edx
  0053c	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00541	83 c4 14	 add	 esp, 20			; 00000014H
  00544	85 c0		 test	 eax, eax
  00546	74 11		 je	 SHORT $LN13@etcSwitch

; 4470 : 				{
; 4471 : 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  00548	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1

; 4472 : 						id = i + 1;
; 4473 : 					focusId = i + 1;

  0054f	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
  00552	8b c3		 mov	 eax, ebx
  00554	0f 44 c7	 cmove	 eax, edi
  00557	8b f8		 mov	 edi, eax
$LN13@etcSwitch:

; 4462 : 
; 4463 : 			for (i = 0; i < sizeof(msg) / sizeof(char*); i++)

  00559	46		 inc	 esi
  0055a	83 fe 05	 cmp	 esi, 5
  0055d	72 b1		 jb	 SHORT $LL15@etcSwitch
$LN14@etcSwitch:

; 4474 : 				}
; 4475 : 			}
; 4476 : 		}
; 4477 : 		if (CheckMenuFlag())

  0055f	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00564	85 c0		 test	 eax, eax
  00566	75 42		 jne	 SHORT $LN120@etcSwitch

; 4478 : 			id = 100;
; 4479 : 		else if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL)) {

  00568	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00572	74 09		 je	 SHORT $LN56@etcSwitch
  00574	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00579	85 c0		 test	 eax, eax
  0057b	74 16		 je	 SHORT $LN122@etcSwitch
$LN56@etcSwitch:

; 4480 : 			id = 100;
; 4481 : 			play_se(203, 320, 240);
; 4482 : 		}
; 4483 : 		else if (etcSwitchProcNo == 1000)

  0057d	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00582	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?etcSwitchProcNo@@3FA, ax ; etcSwitchProcNo
  00589	74 1f		 je	 SHORT $LN120@etcSwitch

; 4484 : 			id = 100;
; 4485 : 		if (id == 0)

  0058b	85 ff		 test	 edi, edi
  0058d	0f 85 a6 00 00
	00		 jne	 $LN59@etcSwitch
$LN122@etcSwitch:

; 4486 : 			play_se(203, 320, 240);

  00593	68 f0 00 00 00	 push	 240			; 000000f0H
  00598	68 40 01 00 00	 push	 320			; 00000140H
  0059d	68 cb 00 00 00	 push	 203			; 000000cbH
  005a2	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  005a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN120@etcSwitch:

; 4558 : 			DeathAction(ptActMenuWin);

  005aa	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
  005b0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  005b5	83 c4 04	 add	 esp, 4

; 4559 : 			ptActMenuWin = NULL;

  005b8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A, 0

; 4560 : 			return 1;

  005c2	b8 01 00 00 00	 mov	 eax, 1
  005c7	5f		 pop	 edi

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  005c8	5e		 pop	 esi
  005c9	5b		 pop	 ebx
  005ca	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005cd	33 cd		 xor	 ecx, ebp
  005cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005d4	8b e5		 mov	 esp, ebp
  005d6	5d		 pop	 ebp
  005d7	c3		 ret	 0
$LN47@etcSwitch:

; 4427 : 				else {
; 4428 : 					char buf[3];
; 4429 : 
; 4430 : 					buf[0] = (pc.etcFlag & PC_ETCFLAG_CHAT_TELL) ? 1 : 0;

  005d8	0f b6 05 a8 00
	00 00		 movzx	 eax, BYTE PTR ?pc@@3UPC@@A+168
  005df	c0 e8 06	 shr	 al, 6
  005e2	24 01		 and	 al, 1
  005e4	88 85 54 ff ff
	ff		 mov	 BYTE PTR _buf$1[ebp], al

; 4431 : 					buf[1] = (pc.etcFlag & PC_ETCFLAG_CHAT_SAVE) ? 1 : 0;

  005ea	a1 a8 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+168
  005ef	c1 e8 09	 shr	 eax, 9
  005f2	24 01		 and	 al, 1
  005f4	88 85 55 ff ff
	ff		 mov	 BYTE PTR _buf$1[ebp+1], al

; 4432 : 					buf[2] = (pc.etcFlag & PC_ETCFLAG_CHAT_OCC) ? 1 : 0;

  005fa	0f b6 05 a9 00
	00 00		 movzx	 eax, BYTE PTR ?pc@@3UPC@@A+169

; 4433 : 					fwrite(buf, 1, sizeof(buf), pf);

  00601	56		 push	 esi
  00602	24 01		 and	 al, 1
  00604	6a 03		 push	 3
  00606	88 85 56 ff ff
	ff		 mov	 BYTE PTR _buf$1[ebp+2], al
  0060c	8d 85 54 ff ff
	ff		 lea	 eax, DWORD PTR _buf$1[ebp]
  00612	6a 01		 push	 1
  00614	50		 push	 eax
  00615	e8 00 00 00 00	 call	 _fwrite

; 4434 : 					fclose(pf);

  0061a	56		 push	 esi
  0061b	e8 00 00 00 00	 call	 _fclose
  00620	83 c4 14	 add	 esp, 20			; 00000014H

; 4435 : 				}
; 4436 : 				return 1;

  00623	b8 01 00 00 00	 mov	 eax, 1
  00628	5f		 pop	 edi

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  00629	5e		 pop	 esi
  0062a	5b		 pop	 ebx
  0062b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0062e	33 cd		 xor	 ecx, ebp
  00630	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00635	8b e5		 mov	 esp, ebp
  00637	5d		 pop	 ebp
  00638	c3		 ret	 0
$LN59@etcSwitch:

; 4487 : 		else
; 4488 : #ifdef _CHANNEL_MODIFY
; 4489 : 			if (id == 4)

  00639	83 ff 04	 cmp	 edi, 4
  0063c	75 36		 jne	 SHORT $LN61@etcSwitch

; 4490 : 			{
; 4491 : 				DeathAction(ptActMenuWin);

  0063e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
  00644	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4492 : 				ptActMenuWin = NULL;
; 4493 : 				etcSwitchProcNo = 100;

  00649	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  0064e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A, 0
  00658	83 c4 04	 add	 esp, 4
  0065b	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchProcNo@@3FA, ax ; etcSwitchProcNo
$LN17@etcSwitch:

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  00661	5f		 pop	 edi
  00662	5e		 pop	 esi
  00663	33 c0		 xor	 eax, eax
  00665	5b		 pop	 ebx
  00666	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00669	33 cd		 xor	 ecx, ebp
  0066b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00670	8b e5		 mov	 esp, ebp
  00672	5d		 pop	 ebp
  00673	c3		 ret	 0
$LN61@etcSwitch:

; 4494 : 				return 0;
; 4495 : 			}
; 4496 : 			else
; 4497 : #endif
; 4498 : #ifdef _NB_SetResoMode
; 4499 : 				if (id == 6) {

  00674	83 ff 06	 cmp	 edi, 6
  00677	0f 85 89 00 00
	00		 jne	 $LN63@etcSwitch

; 4500 : 					if (ProcNo == PROC_BATTLE) {

  0067d	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?ProcNo@@3IA, 10 ; ProcNo, 0000000aH
  00684	74 db		 je	 SHORT $LN17@etcSwitch

; 4501 : 						return 0;
; 4502 : 					}
; 4503 : 					if (ResoMode == 0) {

  00686	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ResoMode@@3HA ; ResoMode
  0068c	85 c9		 test	 ecx, ecx
  0068e	75 05		 jne	 SHORT $LN66@etcSwitch

; 4504 : 						ResoMode = 3;

  00690	8d 47 fd	 lea	 eax, DWORD PTR [edi-3]

; 4505 : 					}

  00693	eb 0d		 jmp	 SHORT $LN129@etcSwitch
$LN66@etcSwitch:

; 4506 : 					else if (ResoMode == 3) {

  00695	33 c0		 xor	 eax, eax
  00697	ba 04 00 00 00	 mov	 edx, 4
  0069c	83 f9 03	 cmp	 ecx, 3
  0069f	0f 44 c2	 cmove	 eax, edx
$LN129@etcSwitch:

; 4507 : 						ResoMode = 4;
; 4508 : 					}
; 4509 : 					else {
; 4510 : 						ResoMode = 0;
; 4511 : 					}
; 4512 : 					JL_RESOMODE(ResoMode);

  006a2	50		 push	 eax
  006a3	a3 00 00 00 00	 mov	 DWORD PTR ?ResoMode@@3HA, eax ; ResoMode
  006a8	e8 00 00 00 00	 call	 ?JL_RESOMODE@@YAXH@Z	; JL_RESOMODE

; 4513 : 					SetResoMode(ResoMode);

  006ad	ff 35 00 00 00
	00		 push	 DWORD PTR ?ResoMode@@3HA ; ResoMode
  006b3	e8 00 00 00 00	 call	 ?SetResoMode@@YAXH@Z	; SetResoMode
  006b8	83 c4 08	 add	 esp, 8

; 4514 : 					ChangeWindowMode();

  006bb	e8 00 00 00 00	 call	 ?ChangeWindowMode@@YAXXZ ; ChangeWindowMode

; 4515 : 					RecoverDirectDraw();

  006c0	e8 00 00 00 00	 call	 ?RecoverDirectDraw@@YAXXZ ; RecoverDirectDraw

; 4516 : 					SendMessage(hWnd, WM_SYSCOMMAND, SC_MINIMIZE, 0);

  006c5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SendMessageA@16
  006cb	6a 00		 push	 0
  006cd	68 20 f0 00 00	 push	 61472			; 0000f020H
  006d2	68 12 01 00 00	 push	 274			; 00000112H
  006d7	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  006dd	ff d6		 call	 esi

; 4517 : 					SendMessage(hWnd, WM_SYSCOMMAND, SC_RESTORE, 0);

  006df	6a 00		 push	 0
  006e1	68 20 f1 00 00	 push	 61728			; 0000f120H
  006e6	68 12 01 00 00	 push	 274			; 00000112H
  006eb	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  006f1	ff d6		 call	 esi
  006f3	5f		 pop	 edi

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  006f4	5e		 pop	 esi
  006f5	33 c0		 xor	 eax, eax
  006f7	5b		 pop	 ebx
  006f8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006fb	33 cd		 xor	 ecx, ebp
  006fd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00702	8b e5		 mov	 esp, ebp
  00704	5d		 pop	 ebp
  00705	c3		 ret	 0
$LN63@etcSwitch:

; 4518 : 					return 0;
; 4519 : 				}
; 4520 : 				else
; 4521 : #endif
; 4522 : 					if (1 <= id && id <= sizeof(msg) / sizeof(char*)) {

  00706	83 ff 01	 cmp	 edi, 1
  00709	0f 8c 12 01 00
	00		 jl	 $LN70@etcSwitch
  0070f	83 ff 05	 cmp	 edi, 5
  00712	0f 87 92 fe ff
	ff		 ja	 $LN120@etcSwitch

; 4523 : 						id--;
; 4524 : 						if (pc.etcFlag & mask[id])

  00718	66 8b 0d a8 00
	00 00		 mov	 cx, WORD PTR ?pc@@3UPC@@A+168
  0071f	8b 94 bd 54 ff
	ff ff		 mov	 edx, DWORD PTR _mask$[ebp+edi*4-4]
  00726	0f b7 c1	 movzx	 eax, cx
  00729	0f b7 fa	 movzx	 edi, dx
  0072c	8b f7		 mov	 esi, edi
  0072e	85 c2		 test	 eax, edx
  00730	74 0e		 je	 SHORT $LN71@etcSwitch

; 4525 : 							pc.etcFlag &= ~mask[id];

  00732	f7 d6		 not	 esi
  00734	66 23 ce	 and	 cx, si
  00737	66 89 0d a8 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+168, cx
  0073e	eb 4b		 jmp	 SHORT $LN77@etcSwitch
$LN71@etcSwitch:

; 4526 : 						else {
; 4527 : #ifdef _STREET_VENDOR
; 4528 : 							if (pc.iOnStreetVendor == 1 || sStreetVendorBuyBtn == 2)

  00740	83 3d b8 a1 00
	00 01		 cmp	 DWORD PTR ?pc@@3UPC@@A+41400, 1
  00747	74 16		 je	 SHORT $LN75@etcSwitch
  00749	66 83 3d 00 00
	00 00 02	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 2 ; sStreetVendorBuyBtn
  00751	74 0c		 je	 SHORT $LN75@etcSwitch

; 4534 : 							}
; 4535 : 							else
; 4536 : 								pc.etcFlag |= mask[id];

  00753	66 0b cf	 or	 cx, di
  00756	66 89 0d a8 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+168, cx
  0075d	eb 2c		 jmp	 SHORT $LN77@etcSwitch
$LN75@etcSwitch:

; 4529 : 							{
; 4530 : 								if (mask[id] == PC_ETCFLAG_TRADE || mask[id] == PC_ETCFLAG_PARTY || mask[id] == PC_ETCFLAG_DUEL)

  0075f	83 fa 20	 cmp	 edx, 32			; 00000020H
  00762	74 16		 je	 SHORT $LN78@etcSwitch
  00764	83 fa 01	 cmp	 edx, 1
  00767	74 11		 je	 SHORT $LN78@etcSwitch
  00769	83 fa 04	 cmp	 edx, 4
  0076c	74 0c		 je	 SHORT $LN78@etcSwitch

; 4532 : 								else
; 4533 : 									pc.etcFlag |= mask[id];

  0076e	66 0b cf	 or	 cx, di
  00771	66 89 0d a8 00
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A+168, cx
  00778	eb 11		 jmp	 SHORT $LN77@etcSwitch
$LN78@etcSwitch:

; 4531 : 									StockChatBufferLine("ë¸ì ììê±°ëì´ìììãíí°ë°ì í¬ê¸°ë¥", FONT_PAL_RED);

  0077a	6a 00		 push	 0
  0077c	6a 06		 push	 6
  0077e	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@MCKEAICK@?$LD?k?A?$KB?$LP?$KB?$LM?$KN?$LA?E?$LH?$KB?$LP?$KN?$LM?v?$LO?x?$MA?$LN?$KB?$KC?F?D?F?$LM?$LJ?W?$MA?$PM?E@
  00783	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  00788	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN77@etcSwitch:

; 4537 : #else
; 4538 : 							pc.etcFlag |= mask[id];
; 4539 : #endif
; 4540 : 						}
; 4541 : 						if (eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0)

  0078b	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  00793	75 73		 jne	 SHORT $LN81@etcSwitch
  00795	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  0079d	75 69		 jne	 SHORT $LN81@etcSwitch
  0079f	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  007a7	75 5f		 jne	 SHORT $LN81@etcSwitch

; 4542 : 						{
; 4543 : 							if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  007a9	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  007ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  007b4	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  007ba	3b c8		 cmp	 ecx, eax
  007bc	73 3f		 jae	 SHORT $LN80@etcSwitch

; 4544 : 							{
; 4545 : 								if (bNewServer)

  007be	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  007c5	0f b7 05 a8 00
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A+168
  007cc	50		 push	 eax
  007cd	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  007d3	74 14		 je	 SHORT $LN82@etcSwitch

; 4546 : 									lssproto_FS_send(sockfd, pc.etcFlag);

  007d5	e8 00 00 00 00	 call	 ?lssproto_FS_send@@YAXHH@Z ; lssproto_FS_send

; 4549 : 								fieldBtnPushTime = TimeGetTime();

  007da	83 c4 08	 add	 esp, 8
  007dd	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  007e2	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 4550 : 							}

  007e7	eb 1f		 jmp	 SHORT $LN81@etcSwitch
$LN82@etcSwitch:

; 4547 : 								else
; 4548 : 									old_lssproto_FS_send(sockfd, pc.etcFlag);

  007e9	e8 00 00 00 00	 call	 ?old_lssproto_FS_send@@YAXHH@Z ; old_lssproto_FS_send

; 4549 : 								fieldBtnPushTime = TimeGetTime();

  007ee	83 c4 08	 add	 esp, 8
  007f1	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  007f6	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 4550 : 							}

  007fb	eb 0b		 jmp	 SHORT $LN81@etcSwitch
$LN80@etcSwitch:

; 4551 : 							else etcSwitchChangeFlag = 1;

  007fd	b8 01 00 00 00	 mov	 eax, 1
  00802	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchChangeFlag@@3FA, ax ; etcSwitchChangeFlag
$LN81@etcSwitch:

; 4552 : 						}
; 4553 : 						id = -1;
; 4554 : 						play_se(217, 320, 240);

  00808	68 f0 00 00 00	 push	 240			; 000000f0H
  0080d	68 40 01 00 00	 push	 320			; 00000140H
  00812	68 d9 00 00 00	 push	 217			; 000000d9H
  00817	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0081c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4555 : 					}
; 4556 : 
; 4557 : 		if (id >= 0) {

  0081f	eb 08		 jmp	 SHORT $LN84@etcSwitch
$LN70@etcSwitch:
  00821	85 ff		 test	 edi, edi
  00823	0f 89 81 fd ff
	ff		 jns	 $LN120@etcSwitch
$LN84@etcSwitch:

; 4561 : 		}
; 4562 : 
; 4563 : 		if (ptActMenuWin->hp >= 1) {

  00829	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??etcSwitch@@YAHXZ@4PAUaction@@A
  0082e	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00832	0f 8c 29 fe ff
	ff		 jl	 $LN17@etcSwitch

; 4564 : 			btnId[0] = StockDispBuffer(x + 96, y + 210, DISP_PRIO_IME3, CG_CLOSE_BTN, 2);

  00838	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  0083d	6a 02		 push	 2
  0083f	68 ba 65 00 00	 push	 26042			; 000065baH
  00844	05 d2 00 00 00	 add	 eax, 210		; 000000d2H
  00849	6a 69		 push	 105			; 00000069H
  0084b	50		 push	 eax
  0084c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  00851	83 c0 60	 add	 eax, 96			; 00000060H
  00854	50		 push	 eax
  00855	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0085a	83 c4 14	 add	 esp, 20			; 00000014H
  0085d	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??etcSwitch@@YAHXZ@4PAHA, eax

; 4565 : 			if (focusId == 0)

  00862	85 db		 test	 ebx, ebx
  00864	75 0e		 jne	 SHORT $LN86@etcSwitch

; 4566 : 				ShowBottomLineString(FONT_PAL_WHITE, "ë©ë´ì°½ë«ê¸°ã");

  00866	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NBGJJJHP@?$LI?$NO?$LE?$LK?C?$KC?$LE?$NN?$LB?b?$KB?$KD@
  0086b	53		 push	 ebx
  0086c	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00871	83 c4 08	 add	 esp, 8
$LN86@etcSwitch:

; 4567 : 			for (i = 0; i < sizeof(msg) / sizeof(char*); i++) {

  00874	33 f6		 xor	 esi, esi
  00876	4b		 dec	 ebx
$LL18@etcSwitch:

; 4568 : #ifdef _NB_SetResoMode
; 4569 : 				char* ResoModeMsg[] = { " 640 x 480"
; 4570 : 										," 320 x 280"
; 4571 : 										," 640 x 480"
; 4572 : 										," 800 x 600"
; 4573 : 										,"1024 x 768" };
; 4574 : #endif
; 4575 : 				if (i == 5) {

  00877	8b 4c b5 84	 mov	 ecx, DWORD PTR _msg$[ebp+esi*4]
  0087b	8b fe		 mov	 edi, esi
  0087d	c1 e7 04	 shl	 edi, 4
  00880	2b fe		 sub	 edi, esi
  00882	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _ResoModeMsg$2[ebp], OFFSET ??_C@_0L@OCGDIFAB@?5640?5x?5480@
  00889	03 ff		 add	 edi, edi
  0088b	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _ResoModeMsg$2[ebp+4], OFFSET ??_C@_0L@FCDLGIBD@?5320?5x?5280@
  00892	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _ResoModeMsg$2[ebp+8], OFFSET ??_C@_0L@OCGDIFAB@?5640?5x?5480@
  00899	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _ResoModeMsg$2[ebp+12], OFFSET ??_C@_0L@FFMHNIN@?5800?5x?5600@
  008a0	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _ResoModeMsg$2[ebp+16], OFFSET ??_C@_0L@KHKHJBNB@1024?5x?5768@
  008a7	83 fe 05	 cmp	 esi, 5
  008aa	75 40		 jne	 SHORT $LN87@etcSwitch

; 4576 : 					char buf[64];
; 4577 : 					sprintf(buf, "%s%s", msg[i], ResoModeMsg[ResoMode]);

  008ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  008b1	ff 74 85 a8	 push	 DWORD PTR _ResoModeMsg$2[ebp+eax*4]
  008b5	8d 45 bc	 lea	 eax, DWORD PTR _buf$3[ebp]
  008b8	51		 push	 ecx
  008b9	68 00 00 00 00	 push	 OFFSET ??_C@_04HDOCAJNK@?$CFs?$CFs@
  008be	50		 push	 eax
  008bf	e8 00 00 00 00	 call	 _sprintf

; 4578 : 					StockFontBuffer(x + 20, y + i * 30 + 26, FONT_PRIO_FRONT, 1, buf, 0);

  008c4	6a 00		 push	 0
  008c6	8d 45 bc	 lea	 eax, DWORD PTR _buf$3[ebp]
  008c9	50		 push	 eax
  008ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  008cf	83 c0 1a	 add	 eax, 26			; 0000001aH
  008d2	6a 01		 push	 1
  008d4	03 c7		 add	 eax, edi
  008d6	6a 01		 push	 1
  008d8	50		 push	 eax
  008d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  008de	83 c0 14	 add	 eax, 20			; 00000014H
  008e1	50		 push	 eax
  008e2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  008e7	83 c4 28	 add	 esp, 40			; 00000028H

; 4579 : 				}

  008ea	eb 6d		 jmp	 SHORT $LN89@etcSwitch
$LN87@etcSwitch:

; 4580 : 				else {
; 4581 : 					StockFontBuffer(x + 20, y + i * 30 + 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg[i], 0);

  008ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  008f1	6a 00		 push	 0
  008f3	51		 push	 ecx
  008f4	83 c0 1a	 add	 eax, 26			; 0000001aH
  008f7	6a 00		 push	 0
  008f9	03 c7		 add	 eax, edi
  008fb	6a 01		 push	 1
  008fd	50		 push	 eax
  008fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  00903	83 c0 14	 add	 eax, 20			; 00000014H
  00906	50		 push	 eax
  00907	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0090c	83 c4 18	 add	 esp, 24			; 00000018H

; 4582 : 				}
; 4583 : 				if (i != 3 && i != 5 && i != 6)    //[ì£¼ì ì íìë¥¼ ìì í  ëë ë°ëì ì£¼ìí´ì¼ íë¤]

  0090f	83 fe 03	 cmp	 esi, 3
  00912	74 45		 je	 SHORT $LN89@etcSwitch
  00914	83 fe 06	 cmp	 esi, 6
  00917	74 40		 je	 SHORT $LN89@etcSwitch

; 4584 : 					StockFontBuffer(x + 105, y + i * 30 + 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg2[((pc.etcFlag & mask[i]) ? 1 : 0)], 0);

  00919	0f b7 05 a8 00
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A+168
  00920	8b 8c b5 58 ff
	ff ff		 mov	 ecx, DWORD PTR _mask$[ebp+esi*4]
  00927	23 c8		 and	 ecx, eax
  00929	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??etcSwitch@@YAHXZ@4HA
  0092e	f7 d9		 neg	 ecx
  00930	6a 00		 push	 0
  00932	1b c9		 sbb	 ecx, ecx
  00934	83 c0 1a	 add	 eax, 26			; 0000001aH
  00937	83 e1 04	 and	 ecx, 4
  0093a	03 c7		 add	 eax, edi
  0093c	ff b4 0d 48 ff
	ff ff		 push	 DWORD PTR _msg2$[ebp+ecx]
  00943	6a 00		 push	 0
  00945	6a 01		 push	 1
  00947	50		 push	 eax
  00948	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??etcSwitch@@YAHXZ@4HA
  0094d	83 c0 69	 add	 eax, 105		; 00000069H
  00950	50		 push	 eax
  00951	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00956	83 c4 18	 add	 esp, 24			; 00000018H
$LN89@etcSwitch:

; 4585 : #ifndef _CHANNEL_MODIFY
; 4586 : 				else
; 4587 : 					StockFontBuffer(x + 105, y + i * 30 + 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg3[((pc.etcFlag & mask[i]) ? 1 : 0)], 0);
; 4588 : #endif
; 4589 : 				if (i == focusId - 1)

  00959	3b f3		 cmp	 esi, ebx
  0095b	75 11		 jne	 SHORT $LN16@etcSwitch

; 4590 : 					ShowBottomLineString(FONT_PAL_WHITE, msg4[i]);

  0095d	ff b4 b5 6c ff
	ff ff		 push	 DWORD PTR _msg4$[ebp+esi*4]
  00964	6a 00		 push	 0
  00966	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0096b	83 c4 08	 add	 esp, 8
$LN16@etcSwitch:

; 4567 : 			for (i = 0; i < sizeof(msg) / sizeof(char*); i++) {

  0096e	46		 inc	 esi
  0096f	83 fe 05	 cmp	 esi, 5
  00972	0f 82 ff fe ff
	ff		 jb	 $LL18@etcSwitch

; 4591 : 			}
; 4592 : 		}
; 4593 : 	}
; 4594 : 
; 4595 : 	return 0;
; 4596 : }

  00978	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0097b	33 c0		 xor	 eax, eax
  0097d	5f		 pop	 edi
  0097e	5e		 pop	 esi
  0097f	33 cd		 xor	 ecx, ebp
  00981	5b		 pop	 ebx
  00982	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00987	8b e5		 mov	 esp, ebp
  00989	5d		 pop	 ebp
  0098a	c3		 ret	 0
?etcSwitch@@YAHXZ ENDP					; etcSwitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?initEtcSwitch@@YAXXZ
_TEXT	SEGMENT
?initEtcSwitch@@YAXXZ PROC				; initEtcSwitch, COMDAT

; 4172 : 	etcSwitchProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchProcNo@@3FA, ax ; etcSwitchProcNo

; 4173 : }

  00008	c3		 ret	 0
?initEtcSwitch@@YAXXZ ENDP				; initEtcSwitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?charActionAnimeChange@@YAHXZ
_TEXT	SEGMENT
tv909 = -172						; size = 4
tv906 = -172						; size = 4
_focusId$1$ = -168					; size = 4
tv895 = -164						; size = 4
_id$1$ = -164						; size = 4
_chgTbl$ = -160						; size = 52
_msg2$ = -108						; size = 52
_msg$ = -56						; size = 52
__$ArrayPad$ = -4					; size = 4
?charActionAnimeChange@@YAHXZ PROC			; charActionAnimeChange, COMDAT

; 3952 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec ac 00 00
	00		 sub	 esp, 172		; 000000acH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3953 : 	static ACTION* ptActMenuWin = NULL;
; 3954 : 	static int x, y, w, h;
; 3955 : 	static int btnId[13];
; 3956 : 	int id = 0;
; 3957 : 	int focusId = 0;
; 3958 : 	char* msg[] =
; 3959 : 	{
; 3960 : 		" ìããë¤ ",
; 3961 : 		" ì¼ì´ëë¤ ",
; 3962 : 		" ìíë¤ë¤ ",
; 3963 : 		" ê±·ããë¤ ",
; 3964 : 		" ì¸ì¬íë¤ ",
; 3965 : 		" ì°ë¬ì§ë¤ ",
; 3966 : 		" ê¸°ë»íë¤ ",
; 3967 : 		" ê³µê²©íë¤ ",
; 3968 : 		" íë¥¼ë´ë¤ ",
; 3969 : 		" ë°©ì´íë¤ ",
; 3970 : 		" ì¬í¼íë¤ ",
; 3971 : 		"ë°ãë¯¸ãì§",
; 3972 : 		"ëãì§ãë¤"
; 3973 : #ifdef __EMOTION
; 3974 : 		," ì ìëíë "
; 3975 : 		," ì½ëì¡ì "
; 3976 : #endif
; 3977 : 	};
; 3978 : 	char* msg2[] =
; 3979 : 	{
; 3980 : 		"ì ìë¦¬ì ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+1)",
; 3981 : 		"ì¼ì´ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+7)",
; 3982 : 		"ìì íëë ì¡ìì ì·¨í©ëë¤. (Ctrl+2)",
; 3983 : 		"ê±·ë ì¡ìì ì·¨í©ëë¤. (Ctrl+8)",
; 3984 : 		"ì¸ì¬íë ì¡ìì ì·¨í©ëë¤. (Ctrl+3)",
; 3985 : 		"ì°ë¬ì§ë ì¡ìì ì·¨í©ëë¤. (Ctrl+9)",
; 3986 : 		"ê¸°ë»íë ì¡ìì ì·¨í©ëë¤. (Ctrl+4)",
; 3987 : 		"ê³µê²©íë ì¡ìì ì·¨í©ëë¤. (Ctrl+0)",
; 3988 : 		"íë¥¼ ë´ë ì¡ìì ì·¨í©ëë¤. (Ctrl+5)",
; 3989 : 		"ë°©ì´íë ì¡ìì ì·¨í©ëë¤. (Ctrl+-)",
; 3990 : 		"ì¬í¼íë ì¡ìì ì·¨í©ëë¤. (Ctrl+6)",
; 3991 : 		"íê²©ì ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+=)",
; 3992 : 		"ëì§ë ì¡ìì ì·¨í©ëë¤. (Ctrl+\\)"
; 3993 : #ifdef __EMOTION
; 3994 : 		,"ì ìëíëã"
; 3995 : 		,"ì½ëì¡ìã"
; 3996 : #endif
; 3997 : 	};
; 3998 : 	int i, j;
; 3999 : 	int x1, y1, x2, y2;
; 4000 : 	int chgTbl[] =
; 4001 : 	{
; 4002 : 	   5,	//  ?  ? 
; 4003 : 	   3,	//  ?  ? 
; 4004 : 	   6,	// î?î ?
; 4005 : 	   4,	//  î  ? 
; 4006 : 	  11,	// ????
; 4007 : 	   2,	//  î?? 
; 4008 : 	   7,	//  ?  ? 
; 4009 : 	   0,	//  ?  ? 
; 4010 : 	   8,	//  î  ? 
; 4011 : 	  10,	//  ??? 
; 4012 : 	   9,	//  î¼?? 
; 4013 : 	   1,	// ????
; 4014 : 	  12	// ???
; 4015 : 	};
; 4016 : #ifdef __EMOTION
; 4017 : 	int emotion[] = { SPR_sleep, SPR_stone };
; 4018 : #endif
; 4019 : 
; 4020 : 	if (charActionAnimeChangeProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?charActionAnimeChangeProcNo@@3FA, 0 ; charActionAnimeChangeProcNo
  0001b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000004000000060000000300000005
  00022	0f 11 85 60 ff
	ff ff		 movups	 XMMWORD PTR _chgTbl$[ebp], xmm0
  00029	c7 45 c8 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp], OFFSET ??_C@_0L@LEPHHCI@?5?$LO?I?$KB?$KB?$KB?$KB?$LE?Y?5@
  00030	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000000000000007000000020000000b
  00037	0f 11 85 70 ff
	ff ff		 movups	 XMMWORD PTR _chgTbl$[ebp+16], xmm0
  0003e	c7 45 cc 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+4], OFFSET ??_C@_0L@LOMDAPBP@?5?$MA?O?$LO?n?$LD?$KK?$LE?Y?5@
  00045	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000001000000090000000a00000008
  0004c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+8], OFFSET ??_C@_0L@FNPFLOKG@?5?$LM?U?H?g?$LF?i?$LE?Y?5@
  00053	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+12], OFFSET ??_C@_0L@CPNFDNI@?5?$LA?H?$KB?$KB?$KB?$KB?$LE?Y?5@
  0005a	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+16], OFFSET ??_C@_0L@LFKBOHAB@?5?$MA?N?$LL?g?G?O?$LE?Y?5@
  00061	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+20], OFFSET ??_C@_0L@BBJFHFFA@?5?$LO?$LC?$LH?$KP?A?v?$LE?Y?5@
  00068	c7 45 e0 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+24], OFFSET ??_C@_0L@HMKFIAIO@?5?$LB?b?$LL?$LF?G?O?$LE?Y?5@
  0006f	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+28], OFFSET ??_C@_0L@EPLKDNIL@?5?$LA?x?$LA?$NN?G?O?$LE?Y?5@
  00076	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+32], OFFSET ??_C@_0L@DDIKGKGC@?5?H?$KN?$LI?$KG?$LD?$LL?$LE?Y?5@
  0007d	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+36], OFFSET ??_C@_0L@FLKMCCFP@?5?$LJ?f?$LO?n?G?O?$LE?Y?5@
  00084	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+40], OFFSET ??_C@_0L@CHKOFNFO@?5?$LN?$LN?F?$NL?G?O?$LE?Y?5@
  0008b	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+44], OFFSET ??_C@_0L@NJDBIKEM@?$LF?$KF?$KB?$KB?$LJ?L?$KB?$KB?A?v@
  00092	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+48], OFFSET ??_C@_0L@GOBFHACF@?$LE?x?$KB?$KB?A?v?$KB?$KB?$LE?Y@
  00099	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp], OFFSET ??_C@_0CI@DLPPPDPB@?A?$KG?$MA?Z?$LI?$KO?$LP?$KB?5?$LO?I?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5@
  000a0	c7 45 98 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+4], OFFSET ??_C@_0CD@HLCPDIKM@?$MA?O?$LO?n?$LM?$KN?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000a7	c7 45 9c 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+8], OFFSET ??_C@_0CG@EHJAFDMH@?$LM?U?$MA?$LL?5?H?g?$LF?e?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@
  000ae	c7 45 a0 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+12], OFFSET ??_C@_0BP@OCLIPLAL@?$LA?H?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL8?$CJ@
  000b5	c7 45 a4 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+16], OFFSET ??_C@_0CD@KEHHLNJC@?$MA?N?$LL?g?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000bc	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+20], OFFSET ??_C@_0CD@JMKADJMO@?$LO?$LC?$LH?$KP?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000c3	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+24], OFFSET ??_C@_0CD@CMMPEHFI@?$LB?b?$LL?$LF?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000ca	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+28], OFFSET ??_C@_0CD@OMLIKOJM@?$LA?x?$LA?$NN?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000d1	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+32], OFFSET ??_C@_0CE@OIDAHAAG@?H?$KN?$LI?$KG?5?$LD?$LL?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtr@
  000d8	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+36], OFFSET ??_C@_0CD@MIHLAAOD@?$LJ?f?$LO?n?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000df	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+40], OFFSET ??_C@_0CD@NKKFDBOL@?$LN?$LN?F?$NL?G?O?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl@
  000e6	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+44], OFFSET ??_C@_0CG@FILFJCML@?E?$LI?$LA?$NN?$MA?$LL?5?$MA?T?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CIC@
  000ed	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _msg2$[ebp+48], OFFSET ??_C@_0CB@DPEEFHJC@?$LE?x?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL?2@
  000f4	0f 11 45 80	 movups	 XMMWORD PTR _chgTbl$[ebp+32], xmm0
  000f8	c7 45 90 0c 00
	00 00		 mov	 DWORD PTR _chgTbl$[ebp+48], 12 ; 0000000cH
  000ff	0f 85 85 00 00
	00		 jne	 $LN68@charAction

; 4021 : 	{
; 4022 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)

  00105	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 4023 : 			btnId[i] = -2;
; 4024 : 
; 4025 : 		// ??????î
; 4026 : 		w = 3;
; 4027 : 		h = 6;
; 4028 : 		x = 440;
; 4029 : 		y = 16;
; 4030 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0010c	6a 01		 push	 1
  0010e	6a 00		 push	 0
  00110	6a 06		 push	 6
  00112	6a 03		 push	 3
  00114	6a 10		 push	 16			; 00000010H
  00116	68 b8 01 00 00	 push	 440			; 000001b8H
  0011b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA, xmm0
  00122	c7 05 30 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA+48, -2 ; fffffffeH
  0012c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA+16, xmm0
  00133	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?w@?1??charActionAnimeChange@@YAHXZ@4HA, 3
  0013d	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA+32, xmm0
  00144	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?h@?1??charActionAnimeChange@@YAHXZ@4HA, 6
  0014e	c7 05 00 00 00
	00 b8 01 00 00	 mov	 DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA, 440 ; 000001b8H
  00158	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA, 16 ; 00000010H
  00162	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00167	83 c4 18	 add	 esp, 24			; 00000018H
  0016a	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A, eax

; 4031 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4032 : 		x = ptActMenuWin->x;

  0016f	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00172	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA, ecx

; 4033 : 		y = ptActMenuWin->y;

  00178	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 4034 : #endif
; 4035 : 		charActionAnimeChangeProcNo++;

  0017b	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?charActionAnimeChangeProcNo@@3FA ; charActionAnimeChangeProcNo
  00182	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA, ecx
  00188	eb 05		 jmp	 SHORT $LN17@charAction
$LN68@charAction:

; 3953 : 	static ACTION* ptActMenuWin = NULL;
; 3954 : 	static int x, y, w, h;
; 3955 : 	static int btnId[13];
; 3956 : 	int id = 0;
; 3957 : 	int focusId = 0;
; 3958 : 	char* msg[] =
; 3959 : 	{
; 3960 : 		" ìããë¤ ",
; 3961 : 		" ì¼ì´ëë¤ ",
; 3962 : 		" ìíë¤ë¤ ",
; 3963 : 		" ê±·ããë¤ ",
; 3964 : 		" ì¸ì¬íë¤ ",
; 3965 : 		" ì°ë¬ì§ë¤ ",
; 3966 : 		" ê¸°ë»íë¤ ",
; 3967 : 		" ê³µê²©íë¤ ",
; 3968 : 		" íë¥¼ë´ë¤ ",
; 3969 : 		" ë°©ì´íë¤ ",
; 3970 : 		" ì¬í¼íë¤ ",
; 3971 : 		"ë°ãë¯¸ãì§",
; 3972 : 		"ëãì§ãë¤"
; 3973 : #ifdef __EMOTION
; 3974 : 		," ì ìëíë "
; 3975 : 		," ì½ëì¡ì "
; 3976 : #endif
; 3977 : 	};
; 3978 : 	char* msg2[] =
; 3979 : 	{
; 3980 : 		"ì ìë¦¬ì ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+1)",
; 3981 : 		"ì¼ì´ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+7)",
; 3982 : 		"ìì íëë ì¡ìì ì·¨í©ëë¤. (Ctrl+2)",
; 3983 : 		"ê±·ë ì¡ìì ì·¨í©ëë¤. (Ctrl+8)",
; 3984 : 		"ì¸ì¬íë ì¡ìì ì·¨í©ëë¤. (Ctrl+3)",
; 3985 : 		"ì°ë¬ì§ë ì¡ìì ì·¨í©ëë¤. (Ctrl+9)",
; 3986 : 		"ê¸°ë»íë ì¡ìì ì·¨í©ëë¤. (Ctrl+4)",
; 3987 : 		"ê³µê²©íë ì¡ìì ì·¨í©ëë¤. (Ctrl+0)",
; 3988 : 		"íë¥¼ ë´ë ì¡ìì ì·¨í©ëë¤. (Ctrl+5)",
; 3989 : 		"ë°©ì´íë ì¡ìì ì·¨í©ëë¤. (Ctrl+-)",
; 3990 : 		"ì¬í¼íë ì¡ìì ì·¨í©ëë¤. (Ctrl+6)",
; 3991 : 		"íê²©ì ìë ì¡ìì ì·¨í©ëë¤. (Ctrl+=)",
; 3992 : 		"ëì§ë ì¡ìì ì·¨í©ëë¤. (Ctrl+\\)"
; 3993 : #ifdef __EMOTION
; 3994 : 		,"ì ìëíëã"
; 3995 : 		,"ì½ëì¡ìã"
; 3996 : #endif
; 3997 : 	};
; 3998 : 	int i, j;
; 3999 : 	int x1, y1, x2, y2;
; 4000 : 	int chgTbl[] =
; 4001 : 	{
; 4002 : 	   5,	//  ?  ? 
; 4003 : 	   3,	//  ?  ? 
; 4004 : 	   6,	// î?î ?
; 4005 : 	   4,	//  î  ? 
; 4006 : 	  11,	// ????
; 4007 : 	   2,	//  î?? 
; 4008 : 	   7,	//  ?  ? 
; 4009 : 	   0,	//  ?  ? 
; 4010 : 	   8,	//  î  ? 
; 4011 : 	  10,	//  ??? 
; 4012 : 	   9,	//  î¼?? 
; 4013 : 	   1,	// ????
; 4014 : 	  12	// ???
; 4015 : 	};
; 4016 : #ifdef __EMOTION
; 4017 : 	int emotion[] = { SPR_sleep, SPR_stone };
; 4018 : #endif
; 4019 : 
; 4020 : 	if (charActionAnimeChangeProcNo == 0)

  0018a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A
$LN17@charAction:
  0018f	53		 push	 ebx
  00190	56		 push	 esi
  00191	57		 push	 edi

; 4036 : 	}
; 4037 : 
; 4038 : 	if (ptActMenuWin != NULL)

  00192	85 c0		 test	 eax, eax
  00194	0f 84 49 03 00
	00		 je	 $LN40@charAction

; 4039 : 	{
; 4040 : 		id = -1;

  0019a	83 ce ff	 or	 esi, -1

; 4041 : 		focusId = -1;

  0019d	0b de		 or	 ebx, esi

; 4042 : 		if (ptActMenuWin->hp >= 1)

  0019f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001a3	89 9d 58 ff ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx
  001a9	0f 8c 0b 01 00
	00		 jl	 $LN22@charAction

; 4043 : 		{
; 4044 : 			// ????î±î¶îî
; 4045 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  001af	6a 0d		 push	 13			; 0000000dH
  001b1	68 00 00 00 00	 push	 OFFSET ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA
  001b6	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId

; 4046 : 			focusId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  001bb	6a 0d		 push	 13			; 0000000dH
  001bd	68 00 00 00 00	 push	 OFFSET ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA
  001c2	89 85 5c ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  001c8	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  001cd	83 c4 10	 add	 esp, 16			; 00000010H
  001d0	89 85 58 ff ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], eax
  001d6	33 db		 xor	 ebx, ebx
  001d8	33 c9		 xor	 ecx, ecx
  001da	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv906[ebp], ecx
$LL7@charAction:

; 4052 : #endif
; 4053 : 			{
; 4054 : 				for (j = 0; j < 2; j++)

  001e0	33 f6		 xor	 esi, esi
  001e2	33 ff		 xor	 edi, edi
  001e4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL10@charAction:

; 4055 : 				{
; 4056 : 					x1 = x + 84 * j + 18;
; 4057 : 					y1 = y + i * 30 + 21;

  001f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA
  001f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA
  001fb	83 c0 15	 add	 eax, 21			; 00000015H
  001fe	03 c8		 add	 ecx, eax
  00200	83 c2 12	 add	 edx, 18			; 00000012H
  00203	03 d7		 add	 edx, edi

; 4058 : 					x2 = x1 + 73;
; 4059 : 					y2 = y1 + 22;
; 4060 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00205	6a 6b		 push	 107			; 0000006bH
  00207	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  0020a	50		 push	 eax
  0020b	8d 42 49	 lea	 eax, DWORD PTR [edx+73]
  0020e	50		 push	 eax
  0020f	51		 push	 ecx
  00210	52		 push	 edx
  00211	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00216	83 c4 14	 add	 esp, 20			; 00000014H
  00219	85 c0		 test	 eax, eax
  0021b	74 21		 je	 SHORT $LN8@charAction

; 4061 : 					{
; 4062 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  0021d	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00224	74 0e		 je	 SHORT $LN66@charAction

; 4063 : 							id = i * 2 + j + 1;

  00226	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  00229	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  0022c	89 8d 5c ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ecx
  00232	eb 03		 jmp	 SHORT $LN57@charAction
$LN66@charAction:
  00234	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
$LN57@charAction:

; 4064 : 						focusId = i * 2 + j + 1;

  00237	40		 inc	 eax
  00238	89 85 58 ff ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], eax
$LN8@charAction:

; 4052 : #endif
; 4053 : 			{
; 4054 : 				for (j = 0; j < 2; j++)

  0023e	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR tv906[ebp]
  00244	83 c7 54	 add	 edi, 84			; 00000054H
  00247	46		 inc	 esi
  00248	81 ff a8 00 00
	00		 cmp	 edi, 168		; 000000a8H
  0024e	7c a0		 jl	 SHORT $LL10@charAction

; 4047 : 
; 4048 : #ifdef __EMOTION
; 4049 : 			for (i = 0; i < 7; i++)
; 4050 : #else
; 4051 : 			for (i = 0; i < 6; i++)

  00250	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00253	83 c3 02	 add	 ebx, 2
  00256	89 8d 54 ff ff
	ff		 mov	 DWORD PTR tv906[ebp], ecx
  0025c	81 f9 b4 00 00
	00		 cmp	 ecx, 180		; 000000b4H
  00262	0f 8c 78 ff ff
	ff		 jl	 $LL7@charAction

; 4065 : 					}
; 4066 : 				}
; 4067 : 			}
; 4068 : 
; 4069 : #ifdef __EMOTION
; 4070 : 			i = 7;
; 4071 : #else
; 4072 : 			i = 6;
; 4073 : #endif
; 4074 : 			j = 0;
; 4075 : 			x1 = x + 42 + 18;
; 4076 : 			y1 = y + i * 30 + 21;

  00268	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA
  0026e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA
  00274	81 c1 c9 00 00
	00		 add	 ecx, 201		; 000000c9H
  0027a	83 c2 3c	 add	 edx, 60			; 0000003cH

; 4077 : 			x2 = x1 + 73;
; 4078 : 			y2 = y1 + 22;
; 4079 : 			if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  0027d	6a 6b		 push	 107			; 0000006bH
  0027f	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  00282	50		 push	 eax
  00283	8d 42 49	 lea	 eax, DWORD PTR [edx+73]
  00286	50		 push	 eax
  00287	51		 push	 ecx
  00288	52		 push	 edx
  00289	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0028e	8b b5 5c ff ff
	ff		 mov	 esi, DWORD PTR _id$1$[ebp]
  00294	83 c4 14	 add	 esp, 20			; 00000014H
  00297	85 c0		 test	 eax, eax
  00299	74 19		 je	 SHORT $LN69@charAction

; 4080 : 			{
; 4081 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  0029b	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  002a2	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH

; 4082 : 					id = i * 2 + j + 1;
; 4083 : 				focusId = i * 2 + j + 1;

  002a7	8b d8		 mov	 ebx, eax
  002a9	0f 45 f0	 cmovne	 esi, eax
  002ac	89 9d 58 ff ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx
  002b2	eb 06		 jmp	 SHORT $LN22@charAction
$LN69@charAction:

; 4077 : 			x2 = x1 + 73;
; 4078 : 			y2 = y1 + 22;
; 4079 : 			if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  002b4	8b 9d 58 ff ff
	ff		 mov	 ebx, DWORD PTR _focusId$1$[ebp]
$LN22@charAction:

; 4084 : 			}
; 4085 : 		}
; 4086 : 
; 4087 : 		// î??????î?????????????î¼??
; 4088 : 		if (CheckMenuFlag())

  002ba	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002bf	85 c0		 test	 eax, eax
  002c1	75 3e		 jne	 SHORT $LN65@charAction

; 4089 : 			id = 100;
; 4090 : 		else if ((joy_trg[0] & JOY_ESC) && GetImeString() == NULL)	// ESC???????î·?

  002c3	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002cd	74 09		 je	 SHORT $LN26@charAction
  002cf	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  002d4	85 c0		 test	 eax, eax
  002d6	74 12		 je	 SHORT $LN67@charAction
$LN26@charAction:

; 4091 : 		{
; 4092 : 			id = 100;
; 4093 : 			play_se(203, 320, 240);	// ?????î¼???
; 4094 : 		}
; 4095 : 		else if (charActionAnimeChangeProcNo == 1000)	// î·??????????î·?

  002d8	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  002dd	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?charActionAnimeChangeProcNo@@3FA, ax ; charActionAnimeChangeProcNo
  002e4	74 1b		 je	 SHORT $LN65@charAction

; 4096 : 			id = 100;
; 4097 : 
; 4098 : 		// ?????
; 4099 : 		if (id == 0)

  002e6	85 f6		 test	 esi, esi
  002e8	75 45		 jne	 SHORT $LN29@charAction
$LN67@charAction:

; 4100 : 			play_se(203, 320, 240);	// ?????î¼???

  002ea	68 f0 00 00 00	 push	 240			; 000000f0H
  002ef	68 40 01 00 00	 push	 320			; 00000140H
  002f4	68 cb 00 00 00	 push	 203			; 000000cbH
  002f9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002fe	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN65@charAction:

; 4130 : 		{
; 4131 : 			DeathAction(ptActMenuWin);

  00301	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A
  00307	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0030c	83 c4 04	 add	 esp, 4

; 4132 : 			ptActMenuWin = NULL;

  0030f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A, 0

; 4133 : 			return 1;

  00319	b8 01 00 00 00	 mov	 eax, 1
  0031e	5f		 pop	 edi

; 4162 : 		}
; 4163 : 	}
; 4164 : 
; 4165 : 	return 0;
; 4166 : }

  0031f	5e		 pop	 esi
  00320	5b		 pop	 ebx
  00321	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00324	33 cd		 xor	 ecx, ebp
  00326	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032b	8b e5		 mov	 esp, ebp
  0032d	5d		 pop	 ebp
  0032e	c3		 ret	 0
$LN29@charAction:

; 4101 : 		else if (1 <= id && id <= 13)

  0032f	83 fe 01	 cmp	 esi, 1
  00332	0f 8c 96 00 00
	00		 jl	 $LN31@charAction
  00338	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  0033b	7f c4		 jg	 SHORT $LN65@charAction

; 4102 : 		{
; 4103 : 			id--;
; 4104 : 			if (eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0)

  0033d	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  00345	75 6e		 jne	 SHORT $LN33@charAction
  00347	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  0034f	75 64		 jne	 SHORT $LN33@charAction
  00351	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  00359	75 5a		 jne	 SHORT $LN33@charAction

; 4105 : 			{
; 4106 : 				if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  0035b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00360	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  00366	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  0036c	3b c8		 cmp	 ecx, eax
  0036e	73 45		 jae	 SHORT $LN33@charAction

; 4107 : 				{
; 4108 : 					if (bNewServer)

  00370	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00377	8b b4 b5 5c ff
	ff ff		 mov	 esi, DWORD PTR _chgTbl$[ebp+esi*4-4]
  0037e	56		 push	 esi
  0037f	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00385	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0038b	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00391	74 07		 je	 SHORT $LN34@charAction

; 4109 : 						lssproto_AC_send(sockfd, nowGx, nowGy, chgTbl[id]);

  00393	e8 00 00 00 00	 call	 ?lssproto_AC_send@@YAXHHHH@Z ; lssproto_AC_send
  00398	eb 05		 jmp	 SHORT $LN70@charAction
$LN34@charAction:

; 4110 : 					else
; 4111 : 						old_lssproto_AC_send(sockfd, nowGx, nowGy, chgTbl[id]);

  0039a	e8 00 00 00 00	 call	 ?old_lssproto_AC_send@@YAXHHHH@Z ; old_lssproto_AC_send
$LN70@charAction:

; 4112 : 					setPcAction(chgTbl[id]);

  0039f	83 c4 10	 add	 esp, 16			; 00000010H
  003a2	56		 push	 esi
  003a3	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  003a8	83 c4 04	 add	 esp, 4

; 4113 : 					fieldBtnPushTime = TimeGetTime();

  003ab	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  003b0	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN33@charAction:

; 4114 : 				}
; 4115 : 			}
; 4116 : 			// ????????î±?????????î¼????????
; 4117 : 			id = -1;
; 4118 : 			play_se(217, 320, 240);	// ?????

  003b5	68 f0 00 00 00	 push	 240			; 000000f0H
  003ba	68 40 01 00 00	 push	 320			; 00000140H
  003bf	68 d9 00 00 00	 push	 217			; 000000d9H
  003c4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003c9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 4119 : 		}
; 4120 : #ifdef __EMOTION
; 4121 : 		if (14 <= id && id <= 15)
; 4122 : 		{
; 4123 : 			id -= 14;
; 4124 : 			setPcEmotion(emotion[id]);
; 4125 : 			id = -1;
; 4126 : 			play_se(217, 320, 240);	// ?????
; 4127 : 		}
; 4128 : #endif
; 4129 : 		if (id >= 0)

  003cc	eb 08		 jmp	 SHORT $LN36@charAction
$LN31@charAction:
  003ce	85 f6		 test	 esi, esi
  003d0	0f 89 2b ff ff
	ff		 jns	 $LN65@charAction
$LN36@charAction:

; 4134 : 		}
; 4135 : 		if (ptActMenuWin->hp >= 1)

  003d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??charActionAnimeChange@@YAHXZ@4PAUaction@@A
  003db	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003df	0f 8c fe 00 00
	00		 jl	 $LN40@charAction

; 4136 : 		{
; 4137 : 			btnId[0] = StockDispBuffer(x + 96, y + 258, DISP_PRIO_MENU, CG_CLOSE_BTN, 2);

  003e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA
  003ea	6a 02		 push	 2
  003ec	68 ba 65 00 00	 push	 26042			; 000065baH
  003f1	05 02 01 00 00	 add	 eax, 258		; 00000102H
  003f6	6a 68		 push	 104			; 00000068H
  003f8	50		 push	 eax
  003f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA
  003fe	83 c0 60	 add	 eax, 96			; 00000060H
  00401	50		 push	 eax
  00402	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00407	83 c4 14	 add	 esp, 20			; 00000014H
  0040a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??charActionAnimeChange@@YAHXZ@4PAHA, eax

; 4138 : 			if (focusId == 0)

  0040f	85 db		 test	 ebx, ebx
  00411	75 0e		 jne	 SHORT $LN38@charAction

; 4139 : 				ShowBottomLineString(FONT_PAL_WHITE, "ììì°½ë«ê¸°");

  00413	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NHKEOPKL@?$MA?$NL?$LO?w?C?$KC?$LE?$NN?$LB?b@
  00418	53		 push	 ebx
  00419	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0041e	83 c4 08	 add	 esp, 8
$LN38@charAction:

; 4140 : #ifdef __EMOTION
; 4141 : 			for (i = 0; i < 7; i++)
; 4142 : #else
; 4143 : 			for (i = 0; i < 6; i++)

  00421	4b		 dec	 ebx
  00422	33 f6		 xor	 esi, esi
  00424	89 9d 54 ff ff
	ff		 mov	 DWORD PTR tv909[ebp], ebx
  0042a	33 db		 xor	 ebx, ebx
  0042c	33 c9		 xor	 ecx, ecx
  0042e	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv895[ebp], ecx
$LL13@charAction:

; 4144 : #endif
; 4145 : 			{
; 4146 : 				for (j = 0; j < 2; j++)

  00434	33 ff		 xor	 edi, edi
  00436	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL16@charAction:

; 4147 : 				{
; 4148 : 					StockFontBuffer(x + 84 * j + 20, y + i * 30 + 24, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg[i * 2 + j], 0);

  00440	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA
  00445	6a 00		 push	 0
  00447	ff 74 35 c8	 push	 DWORD PTR _msg$[ebp+esi]
  0044b	83 c0 18	 add	 eax, 24			; 00000018H
  0044e	6a 00		 push	 0
  00450	03 c1		 add	 eax, ecx
  00452	6a 01		 push	 1
  00454	50		 push	 eax
  00455	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA
  0045a	83 c0 14	 add	 eax, 20			; 00000014H
  0045d	03 c7		 add	 eax, edi
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00465	83 c4 18	 add	 esp, 24			; 00000018H

; 4149 : 					if ((i * 2 + j) == (focusId - 1))

  00468	3b 9d 54 ff ff
	ff		 cmp	 ebx, DWORD PTR tv909[ebp]
  0046e	75 0e		 jne	 SHORT $LN14@charAction

; 4150 : 						ShowBottomLineString(FONT_PAL_WHITE, msg2[i * 2 + j]);

  00470	ff 74 35 94	 push	 DWORD PTR _msg2$[ebp+esi]
  00474	6a 00		 push	 0
  00476	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0047b	83 c4 08	 add	 esp, 8
$LN14@charAction:

; 4144 : #endif
; 4145 : 			{
; 4146 : 				for (j = 0; j < 2; j++)

  0047e	8b 8d 5c ff ff
	ff		 mov	 ecx, DWORD PTR tv895[ebp]
  00484	83 c7 54	 add	 edi, 84			; 00000054H
  00487	83 c6 04	 add	 esi, 4
  0048a	43		 inc	 ebx
  0048b	81 ff a8 00 00
	00		 cmp	 edi, 168		; 000000a8H
  00491	7c ad		 jl	 SHORT $LL16@charAction

; 4140 : #ifdef __EMOTION
; 4141 : 			for (i = 0; i < 7; i++)
; 4142 : #else
; 4143 : 			for (i = 0; i < 6; i++)

  00493	83 c1 1e	 add	 ecx, 30			; 0000001eH
  00496	89 8d 5c ff ff
	ff		 mov	 DWORD PTR tv895[ebp], ecx
  0049c	81 f9 b4 00 00
	00		 cmp	 ecx, 180		; 000000b4H
  004a2	7c 90		 jl	 SHORT $LL13@charAction

; 4151 : 				}
; 4152 : 			}
; 4153 : #ifdef __EMOTION
; 4154 : 			i = 7;
; 4155 : #else
; 4156 : 			i = 6;
; 4157 : #endif
; 4158 : 			j = 0;
; 4159 : 			StockFontBuffer(x + 42 + 20, y + i * 30 + 24, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg[i * 2 + j], 0);

  004a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??charActionAnimeChange@@YAHXZ@4HA
  004a9	6a 00		 push	 0
  004ab	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GOBFHACF@?$LE?x?$KB?$KB?A?v?$KB?$KB?$LE?Y@
  004b0	6a 00		 push	 0
  004b2	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  004b7	6a 01		 push	 1
  004b9	50		 push	 eax
  004ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??charActionAnimeChange@@YAHXZ@4HA
  004bf	83 c0 3e	 add	 eax, 62			; 0000003eH
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004c8	83 c4 18	 add	 esp, 24			; 00000018H

; 4160 : 			if ((i * 2 + j) == (focusId - 1))

  004cb	83 bd 58 ff ff
	ff 0d		 cmp	 DWORD PTR _focusId$1$[ebp], 13 ; 0000000dH
  004d2	75 0f		 jne	 SHORT $LN40@charAction

; 4161 : 				ShowBottomLineString(FONT_PAL_WHITE, msg2[i * 2 + j]);

  004d4	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@DPEEFHJC@?$LE?x?A?v?$LE?B?5?$LO?W?$LM?G?$MA?$LL?5?C?k?G?U?$LE?O?$LE?Y?4?5?$CICtrl?$CL?2@
  004d9	6a 00		 push	 0
  004db	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  004e0	83 c4 08	 add	 esp, 8
$LN40@charAction:

; 4162 : 		}
; 4163 : 	}
; 4164 : 
; 4165 : 	return 0;
; 4166 : }

  004e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004e6	33 c0		 xor	 eax, eax
  004e8	5f		 pop	 edi
  004e9	5e		 pop	 esi
  004ea	33 cd		 xor	 ecx, ebp
  004ec	5b		 pop	 ebx
  004ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004f2	8b e5		 mov	 esp, ebp
  004f4	5d		 pop	 ebp
  004f5	c3		 ret	 0
?charActionAnimeChange@@YAHXZ ENDP			; charActionAnimeChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?initCharActionAnimeChange@@YAXXZ
_TEXT	SEGMENT
?initCharActionAnimeChange@@YAXXZ PROC			; initCharActionAnimeChange, COMDAT

; 3939 : 	charActionAnimeChangeProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?charActionAnimeChangeProcNo@@3FA, ax ; charActionAnimeChangeProcNo

; 3940 : }

  00008	c3		 ret	 0
?initCharActionAnimeChange@@YAXXZ ENDP			; initCharActionAnimeChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?StreetVendorBuyWndfunc@@YAXPAD@Z
_TEXT	SEGMENT
tv3918 = -1320						; size = 4
_selId$1$ = -1320					; size = 4
_data$GSCopy$1$ = -1316					; size = 4
_x$1$ = -1312						; size = 4
_y$1$ = -1308						; size = 4
tv3983 = -1304						; size = 4
tv3928 = -1304						; size = 4
tv3917 = -1304						; size = 4
_index$1$ = -1304					; size = 4
_count$1$ = -1304					; size = 4
_color$1$ = -1304					; size = 4
tv3952 = -1300						; size = 4
tv3922 = -1300						; size = 4
_nY$1$ = -1300						; size = 4
_iy$1$ = -1300						; size = 4
_count$1$ = -1300					; size = 4
_i$2$ = -1300						; size = 4
$T1 = -1296						; size = 4
tv3977 = -1296						; size = 4
tv3975 = -1296						; size = 4
tv3935 = -1296						; size = 4
tv3930 = -1296						; size = 4
_szMsg$2 = -1292					; size = 128
_szTemp$3 = -1164					; size = 128
_szMsg$ = -1036						; size = 1024
_szTemp1$4 = -12					; size = 8
tv3982 = -8						; size = 4
_count$2$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?StreetVendorBuyWndfunc@@YAXPAD@Z PROC			; StreetVendorBuyWndfunc, COMDAT

; 1045 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 05 00
	00		 sub	 esp, 1320		; 00000528H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]
  00017	56		 push	 esi

; 1046 : 	int i, j, x, y, selId = 0;
; 1047 : 	const int	iMaxBtnNum = 5;
; 1048 : 	static int	iBtn[iMaxBtnNum], iBuyItemBtn[MAX_SELL_ITEM], iListStart, iTotalBuy[2]; //iTotalBuy[0]:ä¹°å¥éå·æ°é iTotalBuy[1]:å® ç©ä¹°å¥æ°é [íí¸ êµ¬ë§¤ìë]
; 1049 : 	static int	iEmptyNum[2], iCurrentShow, iTotalBuyMoney; // iEmptyNum[0]:èº«ä¸éå·æ ç©ºä½æ°é iEmptyNum[1]:å® ç©æ ç©ºä½æ°é [í« ì¹¸ ê³µì ì]
; 1050 : 	static int	iMakePetAni = -1;
; 1051 : #ifdef _PET_ITEM
; 1052 : 	static BOOL	bViewPetItem = FALSE;
; 1053 : #endif
; 1054 : 	char szMsg[1024];
; 1055 : 
; 1056 : 	if (pActStreetVendorBuyWnd == NULL)

  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A ; pActStreetVendorBuyWnd
  0001e	89 9d dc fa ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], ebx
  00024	57		 push	 edi
  00025	85 f6		 test	 esi, esi
  00027	0f 85 78 01 00
	00		 jne	 $LN47@StreetVend

; 1057 : 	{
; 1058 : 		pActStreetVendorBuyWnd = MakeWindowDisp((DEF_APPSIZEX >> 1) - (617 >> 1), 0, 617, 405, CG_FIELD_SV_BUY_PANEL, -1);

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00032	6a ff		 push	 -1
  00034	68 a8 89 00 00	 push	 35240			; 000089a8H
  00039	68 95 01 00 00	 push	 405			; 00000195H
  0003e	68 69 02 00 00	 push	 617			; 00000269H
  00043	d1 f8		 sar	 eax, 1
  00045	2d 34 01 00 00	 sub	 eax, 308		; 00000134H
  0004a	56		 push	 esi
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 1059 : 		memset(ShowVendorItem, 0, sizeof(ShowVendorItem));

  00051	68 20 6c 00 00	 push	 27680			; 00006c20H
  00056	8b f0		 mov	 esi, eax
  00058	6a 00		 push	 0
  0005a	68 00 00 00 00	 push	 OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A
  0005f	89 35 00 00 00
	00		 mov	 DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A, esi ; pActStreetVendorBuyWnd
  00065	e8 00 00 00 00	 call	 _memset

; 1060 : 		memset(iBuyItemBtn, 0, sizeof(iBuyItemBtn));

  0006a	6a 50		 push	 80			; 00000050H
  0006c	6a 00		 push	 0
  0006e	68 00 00 00 00	 push	 OFFSET ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
  00073	e8 00 00 00 00	 call	 _memset
  00078	83 c4 30	 add	 esp, 48			; 00000030H

; 1061 : 		iTotalBuy[0] = iTotalBuy[1] = iListStart = iEmptyNum[0] = iEmptyNum[1] = iCurrentShow = iTotalBuyMoney = 0;

  0007b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0
  00085	33 d2		 xor	 edx, edx
  00087	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0
  00091	33 c0		 xor	 eax, eax

; 1062 : 		iMakePetAni = -1;

  00093	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, -1
  0009d	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
  000a2	b9 78 10 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+4216
  000a7	a3 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
  000ac	a3 04 00 00 00	 mov	 DWORD PTR ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, eax
  000b1	a3 00 00 00 00	 mov	 DWORD PTR ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LL4@StreetVend:

; 1064 : 		{
; 1065 : 			if (pc.item[i].useFlag == FALSE)

  000b6	66 39 91 84 fe
	ff ff		 cmp	 WORD PTR [ecx-380], dx
  000bd	75 06		 jne	 SHORT $LN2@StreetVend

; 1066 : 				iEmptyNum[0]++;

  000bf	40		 inc	 eax
  000c0	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LN2@StreetVend:

; 1064 : 		{
; 1065 : 			if (pc.item[i].useFlag == FALSE)

  000c5	66 39 11	 cmp	 WORD PTR [ecx], dx
  000c8	75 06		 jne	 SHORT $LN198@StreetVend

; 1066 : 				iEmptyNum[0]++;

  000ca	40		 inc	 eax
  000cb	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LN198@StreetVend:

; 1064 : 		{
; 1065 : 			if (pc.item[i].useFlag == FALSE)

  000d0	66 39 91 7c 01
	00 00		 cmp	 WORD PTR [ecx+380], dx
  000d7	75 06		 jne	 SHORT $LN199@StreetVend

; 1066 : 				iEmptyNum[0]++;

  000d9	40		 inc	 eax
  000da	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LN199@StreetVend:

; 1064 : 		{
; 1065 : 			if (pc.item[i].useFlag == FALSE)

  000df	66 39 91 f8 02
	00 00		 cmp	 WORD PTR [ecx+760], dx
  000e6	75 06		 jne	 SHORT $LN200@StreetVend

; 1066 : 				iEmptyNum[0]++;

  000e8	40		 inc	 eax
  000e9	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LN200@StreetVend:

; 1064 : 		{
; 1065 : 			if (pc.item[i].useFlag == FALSE)

  000ee	66 39 91 74 04
	00 00		 cmp	 WORD PTR [ecx+1140], dx
  000f5	75 06		 jne	 SHORT $LN201@StreetVend

; 1066 : 				iEmptyNum[0]++;

  000f7	40		 inc	 eax
  000f8	a3 00 00 00 00	 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
$LN201@StreetVend:

; 1063 : 		for (i = MAX_ITEMSTART; i < MAX_ITEM; i++)

  000fd	81 c1 6c 07 00
	00		 add	 ecx, 1900		; 0000076cH
  00103	81 f9 44 53 00
	00		 cmp	 ecx, OFFSET ?pc@@3UPC@@A+21316
  00109	7c ab		 jl	 SHORT $LL4@StreetVend

; 1067 : 		}
; 1068 : 		for (i = 0; i < MAX_PET; i++)
; 1069 : 		{
; 1070 : 			if (pet[i].useFlag == 0)

  0010b	66 39 15 76 00
	00 00		 cmp	 WORD PTR ?pet@@3PAUPET@@A+118, dx
  00112	b8 01 00 00 00	 mov	 eax, 1
  00117	0f 44 d0	 cmove	 edx, eax
  0011a	66 83 3d ee 0b
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A+3054, 0
  00122	89 15 04 00 00
	00		 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, edx
  00128	75 07		 jne	 SHORT $LN206@StreetVend

; 1071 : 				iEmptyNum[1]++;

  0012a	42		 inc	 edx
  0012b	89 15 04 00 00
	00		 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, edx
$LN206@StreetVend:

; 1067 : 		}
; 1068 : 		for (i = 0; i < MAX_PET; i++)
; 1069 : 		{
; 1070 : 			if (pet[i].useFlag == 0)

  00131	66 83 3d 66 17
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A+5990, 0
  00139	75 07		 jne	 SHORT $LN208@StreetVend

; 1071 : 				iEmptyNum[1]++;

  0013b	42		 inc	 edx
  0013c	89 15 04 00 00
	00		 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, edx
$LN208@StreetVend:

; 1067 : 		}
; 1068 : 		for (i = 0; i < MAX_PET; i++)
; 1069 : 		{
; 1070 : 			if (pet[i].useFlag == 0)

  00142	66 83 3d de 22
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A+8926, 0
  0014a	75 07		 jne	 SHORT $LN210@StreetVend

; 1071 : 				iEmptyNum[1]++;

  0014c	42		 inc	 edx
  0014d	89 15 04 00 00
	00		 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, edx
$LN210@StreetVend:

; 1067 : 		}
; 1068 : 		for (i = 0; i < MAX_PET; i++)
; 1069 : 		{
; 1070 : 			if (pet[i].useFlag == 0)

  00153	66 83 3d 56 2e
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A+11862, 0
  0015b	75 07		 jne	 SHORT $LN212@StreetVend

; 1071 : 				iEmptyNum[1]++;

  0015d	42		 inc	 edx
  0015e	89 15 04 00 00
	00		 mov	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, edx
$LN212@StreetVend:

; 1072 : 		}
; 1073 : 		if (pShowPet != NULL)

  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00169	85 c0		 test	 eax, eax
  0016b	74 19		 je	 SHORT $LN51@StreetVend

; 1074 : 		{
; 1075 : 			DeathAction(pShowPet);

  0016d	50		 push	 eax
  0016e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1076 : 			pShowPet = NULL;

  00173	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A ; pActStreetVendorBuyWnd
  00179	83 c4 04	 add	 esp, 4
  0017c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN51@StreetVend:

; 1077 : 		}
; 1078 : #ifdef _PET_ITEM
; 1079 : 		InitItem(pActStreetVendorBuyWnd->x + 310, pActStreetVendorBuyWnd->y + 20, TRUE);

  00186	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00189	83 c0 14	 add	 eax, 20			; 00000014H
  0018c	6a 01		 push	 1
  0018e	50		 push	 eax
  0018f	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00192	05 36 01 00 00	 add	 eax, 310		; 00000136H
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 ?InitItem@@YAXHHH@Z	; InitItem
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1080 : #endif
; 1081 : 	}

  001a0	e9 f2 0e 00 00	 jmp	 $LN52@StreetVend
$LN47@StreetVend:

; 1082 : 	else
; 1083 : 	{
; 1084 : 		if (pActStreetVendorBuyWnd->hp > 0)

  001a5	83 7e 78 00	 cmp	 DWORD PTR [esi+120], 0
  001a9	0f 8e e8 0e 00
	00		 jle	 $LN52@StreetVend

; 1085 : 		{
; 1086 : 			x = pActStreetVendorBuyWnd->x;

  001af	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]

; 1087 : 			y = pActStreetVendorBuyWnd->y;

  001b2	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]

; 1088 : 			selId = focusFontId(iBuyItemBtn, sizeof(iBuyItemBtn) / sizeof(int));

  001b5	6a 14		 push	 20			; 00000014H
  001b7	68 00 00 00 00	 push	 OFFSET ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
  001bc	89 bd e0 fa ff
	ff		 mov	 DWORD PTR _x$1$[ebp], edi
  001c2	89 b5 e4 fa ff
	ff		 mov	 DWORD PTR _y$1$[ebp], esi
  001c8	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId

; 1089 : 			// [buttonì´ ëíëë ìì¹ íì ë° ì¤ì ]
; 1090 : 			// [íì íë¤]
; 1091 : 			iBtn[0] = StockDispBuffer(x + 410, y + 378, DISP_PRIO_IME3, 26289, 2);

  001cd	6a 02		 push	 2
  001cf	68 b1 66 00 00	 push	 26289			; 000066b1H
  001d4	6a 69		 push	 105			; 00000069H
  001d6	81 c6 7a 01 00
	00		 add	 esi, 378		; 0000017aH
  001dc	89 85 d8 fa ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], eax
  001e2	8d 8f 9a 01 00
	00		 lea	 ecx, DWORD PTR [edi+410]
  001e8	56		 push	 esi
  001e9	51		 push	 ecx
  001ea	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1092 : 			// [ì·¨ì]
; 1093 : 			iBtn[1] = StockDispBuffer(x + 535, y + 378, DISP_PRIO_IME3, 26291, 2);

  001ef	6a 02		 push	 2
  001f1	68 b3 66 00 00	 push	 26291			; 000066b3H
  001f6	6a 69		 push	 105			; 00000069H
  001f8	a3 00 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA, eax
  001fd	8d 87 17 02 00
	00		 lea	 eax, DWORD PTR [edi+535]
  00203	56		 push	 esi
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1094 : 			// [ìê¶ íì´í]
; 1095 : 			iBtn[2] = StockDispBuffer(x + 300, y + 34, DISP_PRIO_IME3, 26331, 2);

  0020a	6a 02		 push	 2
  0020c	a3 04 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+4, eax
  00211	8d b7 2c 01 00
	00		 lea	 esi, DWORD PTR [edi+300]
  00217	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  0021d	68 db 66 00 00	 push	 26331			; 000066dbH
  00222	6a 69		 push	 105			; 00000069H
  00224	83 c0 22	 add	 eax, 34			; 00000022H
  00227	50		 push	 eax
  00228	56		 push	 esi
  00229	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0022e	83 c4 44	 add	 esp, 68			; 00000044H
  00231	a3 08 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+8, eax

; 1096 : 			// [íê¶ íì´í]
; 1097 : 			iBtn[3] = StockDispBuffer(x + 300, y + 374, DISP_PRIO_IME3, 26332, 2);

  00236	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  0023c	05 76 01 00 00	 add	 eax, 374		; 00000176H
  00241	6a 02		 push	 2
  00243	68 dc 66 00 00	 push	 26332			; 000066dcH
  00248	6a 69		 push	 105			; 00000069H
  0024a	50		 push	 eax
  0024b	56		 push	 esi
  0024c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00251	83 c4 14	 add	 esp, 20			; 00000014H
  00254	a3 0c 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+12, eax
  00259	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  0025f	8d 8f 30 02 00
	00		 lea	 ecx, DWORD PTR [edi+560]
  00265	05 3e 01 00 00	 add	 eax, 318		; 0000013eH

; 1098 : #ifdef _PET_ITEM
; 1099 : 			if (bViewPetItem)

  0026a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0
  00271	6a 02		 push	 2
  00273	74 07		 je	 SHORT $LN53@StreetVend

; 1100 : 				iBtn[4] = StockDispBuffer(x + 560, y + 318, DISP_PRIO_IME3, 26472, 2);

  00275	68 68 67 00 00	 push	 26472			; 00006768H
  0027a	eb 05		 jmp	 SHORT $LN250@StreetVend
$LN53@StreetVend:

; 1101 : 			else
; 1102 : 				iBtn[4] = StockDispBuffer(x + 560, y + 318, DISP_PRIO_IME3, 26471, 2);

  0027c	68 67 67 00 00	 push	 26471			; 00006767H
$LN250@StreetVend:

; 1103 : #endif
; 1104 : 			for (i = 0; i < iMaxBtnNum; i++)

  00281	6a 69		 push	 105			; 00000069H
  00283	50		 push	 eax
  00284	51		 push	 ecx
  00285	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0028a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00290	83 c4 14	 add	 esp, 20			; 00000014H
  00293	a3 10 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA+16, eax
  00298	33 f6		 xor	 esi, esi
  0029a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0029f	83 e0 01	 and	 eax, 1
$LL10@StreetVend:

; 1105 : 			{
; 1106 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  002a2	85 c0		 test	 eax, eax
  002a4	74 09		 je	 SHORT $LN8@StreetVend

; 1107 : 				{
; 1108 : 					if (HitDispNo == iBtn[i])

  002a6	3b 0c b5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?iBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[esi*4]
  002ad	74 0b		 je	 SHORT $LN163@StreetVend
$LN8@StreetVend:

; 1103 : #endif
; 1104 : 			for (i = 0; i < iMaxBtnNum; i++)

  002af	46		 inc	 esi
  002b0	83 fe 05	 cmp	 esi, 5
  002b3	7c ed		 jl	 SHORT $LL10@StreetVend
  002b5	e9 ae 01 00 00	 jmp	 $LN243@StreetVend
$LN163@StreetVend:

; 1109 : 					{
; 1110 : 						play_se(217, 320, 240);

  002ba	68 f0 00 00 00	 push	 240			; 000000f0H
  002bf	68 40 01 00 00	 push	 320			; 00000140H
  002c4	68 d9 00 00 00	 push	 217			; 000000d9H
  002c9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002ce	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1111 : 						switch (i)

  002d1	83 fe 04	 cmp	 esi, 4
  002d4	0f 87 8e 01 00
	00		 ja	 $LN243@StreetVend
  002da	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN235@StreetVend[esi*4]
$LN57@StreetVend:

; 1112 : 						{
; 1113 : 							// [íì íë¤]
; 1114 : 						case 0:
; 1115 : 						{
; 1116 : 							int count = 0;

  002e1	33 f6		 xor	 esi, esi

; 1117 : 							char szMsg[128], szTemp[128], szTemp1[8];
; 1118 : 
; 1119 : 							memset(szMsg, 0, sizeof(szMsg));

  002e3	8d 85 f4 fa ff
	ff		 lea	 eax, DWORD PTR _szMsg$2[ebp]
  002e9	68 80 00 00 00	 push	 128			; 00000080H
  002ee	56		 push	 esi
  002ef	50		 push	 eax
  002f0	89 b5 ec fa ff
	ff		 mov	 DWORD PTR _count$1$[ebp], esi
  002f6	e8 00 00 00 00	 call	 _memset

; 1120 : 							memset(szTemp, 0, sizeof(szTemp));

  002fb	68 80 00 00 00	 push	 128			; 00000080H
  00300	8d 85 74 fb ff
	ff		 lea	 eax, DWORD PTR _szTemp$3[ebp]
  00306	56		 push	 esi
  00307	50		 push	 eax
  00308	e8 00 00 00 00	 call	 _memset
  0030d	83 c4 18	 add	 esp, 24			; 00000018H
  00310	bb 3c 00 00 00	 mov	 ebx, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+60
$LL15@StreetVend:

; 1123 : 							{
; 1124 : 								if (ShowVendorItem[j].bBuy)

  00315	80 7b 05 00	 cmp	 BYTE PTR [ebx+5], 0
  00319	74 4b		 je	 SHORT $LN13@StreetVend

; 1125 : 								{
; 1126 : 									sprintf(szTemp1, "%d|", ShowVendorItem[j].index);

  0031b	ff 33		 push	 DWORD PTR [ebx]
  0031d	8d 45 f4	 lea	 eax, DWORD PTR _szTemp1$4[ebp]
  00320	68 00 00 00 00	 push	 OFFSET ??_C@_03IFADCKOJ@?$CFd?$HM@
  00325	50		 push	 eax
  00326	e8 00 00 00 00	 call	 _sprintf

; 1127 : 									strcat(szTemp, szTemp1);

  0032b	8d 55 f4	 lea	 edx, DWORD PTR _szTemp1$4[ebp]
  0032e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00331	8b f2		 mov	 esi, edx
$LL236@StreetVend:
  00333	8a 02		 mov	 al, BYTE PTR [edx]
  00335	42		 inc	 edx
  00336	84 c0		 test	 al, al
  00338	75 f9		 jne	 SHORT $LL236@StreetVend
  0033a	8d bd 74 fb ff
	ff		 lea	 edi, DWORD PTR _szTemp$3[ebp]
  00340	2b d6		 sub	 edx, esi
  00342	4f		 dec	 edi
$LL237@StreetVend:
  00343	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00346	47		 inc	 edi
  00347	84 c0		 test	 al, al
  00349	75 f8		 jne	 SHORT $LL237@StreetVend
  0034b	8b ca		 mov	 ecx, edx
  0034d	c1 e9 02	 shr	 ecx, 2
  00350	f3 a5		 rep movsd
  00352	8b ca		 mov	 ecx, edx
  00354	83 e1 03	 and	 ecx, 3
  00357	f3 a4		 rep movsb

; 1128 : 									count++;	//[ì´ìíµê³]

  00359	8b b5 ec fa ff
	ff		 mov	 esi, DWORD PTR _count$1$[ebp]
  0035f	46		 inc	 esi
  00360	89 b5 ec fa ff
	ff		 mov	 DWORD PTR _count$1$[ebp], esi
$LN13@StreetVend:

; 1121 : 							// [ì¬ë ¤ë ë¬¼ê±´ì ìì¸ì serverìê² ì íë¤.]
; 1122 : 							for (j = 0; j < MAX_SELL_ITEM; j++)

  00366	81 c3 68 05 00
	00		 add	 ebx, 1384		; 00000568H
  0036c	81 fb 5c 6c 00
	00		 cmp	 ebx, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+27740
  00372	7c a1		 jl	 SHORT $LL15@StreetVend

; 1129 : 								}
; 1130 : 							}
; 1131 : 							if (count != 0)

  00374	8b 9d dc fa ff
	ff		 mov	 ebx, DWORD PTR _data$GSCopy$1$[ebp]
  0037a	85 f6		 test	 esi, esi
  0037c	74 36		 je	 SHORT $LN59@StreetVend

; 1132 : 							{
; 1133 : 								sprintf(szMsg, "B|%d|%s", count, szTemp);

  0037e	8d 85 74 fb ff
	ff		 lea	 eax, DWORD PTR _szTemp$3[ebp]
  00384	50		 push	 eax
  00385	56		 push	 esi
  00386	8d 85 f4 fa ff
	ff		 lea	 eax, DWORD PTR _szMsg$2[ebp]
  0038c	68 00 00 00 00	 push	 OFFSET ??_C@_07PKADKLEL@B?$HM?$CFd?$HM?$CFs@
  00391	50		 push	 eax
  00392	e8 00 00 00 00	 call	 _sprintf

; 1134 : 								lssproto_STREET_VENDOR_send(sockfd, szMsg);

  00397	8d 85 f4 fa ff
	ff		 lea	 eax, DWORD PTR _szMsg$2[ebp]
  0039d	50		 push	 eax
  0039e	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003a4	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send

; 1135 : 							}

  003a9	8b bd e0 fa ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  003af	83 c4 18	 add	 esp, 24			; 00000018H
  003b2	eb 2b		 jmp	 SHORT $LN62@StreetVend
$LN59@StreetVend:

; 1136 : 							else
; 1137 : 								lssproto_STREET_VENDOR_send(sockfd, "N|");

  003b4	68 00 00 00 00	 push	 OFFSET ??_C@_02PJDALANN@N?$HM@
  003b9	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003bf	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send

; 1138 : 						}
; 1139 : 						// [ì·¨ì]
; 1140 : 						case 1:
; 1141 : 							if (i == 1)

  003c4	8b bd e0 fa ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  003ca	eb 10		 jmp	 SHORT $LN251@StreetVend
$LN230@StreetVend:

; 1142 : 								lssproto_STREET_VENDOR_send(sockfd, "N|");

  003cc	68 00 00 00 00	 push	 OFFSET ??_C@_02PJDALANN@N?$HM@
  003d1	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003d7	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
$LN251@StreetVend:

; 1143 : 							sStreetVendorBuyBtn = 0;

  003dc	83 c4 08	 add	 esp, 8
$LN62@StreetVend:
  003df	33 c0		 xor	 eax, eax
  003e1	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 1144 : 							actBtn = 0;

  003e7	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 1145 : 							if (pShowPet != NULL)

  003ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  003f2	85 c0		 test	 eax, eax
  003f4	74 13		 je	 SHORT $LN63@StreetVend

; 1146 : 							{
; 1147 : 								DeathAction(pShowPet);

  003f6	50		 push	 eax
  003f7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  003fc	83 c4 04	 add	 esp, 4

; 1148 : 								pShowPet = NULL;

  003ff	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN63@StreetVend:

; 1149 : 							}
; 1150 : 							if (pActSellPriceWnd != NULL)

  00409	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A
  0040e	85 c0		 test	 eax, eax
  00410	74 09		 je	 SHORT $LN64@StreetVend

; 1151 : 								DeathAction(pActSellPriceWnd);

  00412	50		 push	 eax
  00413	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00418	83 c4 04	 add	 esp, 4
$LN64@StreetVend:

; 1152 : 							pActSellPriceWnd = NULL;

  0041b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A, 0

; 1153 : 							break;

  00425	eb 41		 jmp	 SHORT $LN243@StreetVend
$LN65@StreetVend:

; 1154 : 							// [ìê¶]
; 1155 : 						case 2:
; 1156 : 							iListStart--;

  00427	83 2d 00 00 00
	00 01		 sub	 DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1

; 1157 : 							if (iListStart < 0)

  0042e	79 38		 jns	 SHORT $LN243@StreetVend

; 1158 : 								iListStart = 0;

  00430	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0

; 1159 : 							break;

  0043a	eb 2c		 jmp	 SHORT $LN243@StreetVend
$LN67@StreetVend:

; 1160 : 							// [íê¶]
; 1161 : 						case 3:
; 1162 : 							iListStart++;

  0043c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00441	40		 inc	 eax
  00442	a3 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
  00447	83 f8 0d	 cmp	 eax, 13			; 0000000dH

; 1163 : 							if (iListStart > 13)

  0044a	7e 1c		 jle	 SHORT $LN243@StreetVend

; 1164 : 								iListStart = 13;

  0044c	c7 05 00 00 00
	00 0d 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 13 ; 0000000dH

; 1165 : 							break;

  00456	eb 10		 jmp	 SHORT $LN243@StreetVend
$LN69@StreetVend:

; 1166 : #ifdef _PET_ITEM
; 1167 : 						case 4:
; 1168 : 							bViewPetItem = !bViewPetItem;

  00458	33 c0		 xor	 eax, eax
  0045a	39 05 00 00 00
	00		 cmp	 DWORD PTR ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
  00460	0f 94 c0	 sete	 al
  00463	a3 00 00 00 00	 mov	 DWORD PTR ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
$LN243@StreetVend:

; 1169 : 							break;
; 1170 : #endif
; 1171 : 						}
; 1172 : 						break;
; 1173 : 					}
; 1174 : 				}
; 1175 : 			}
; 1176 : 
; 1177 : 			// [ì¼ìª½ì ìë ë¬¼ê±´ ëª©ë¡ íì]
; 1178 : 			for (i = iListStart, j = 0; i < iListStart + 13; i++, j++)

  00468	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  0046e	89 8d ec fa ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  00474	8d 41 0d	 lea	 eax, DWORD PTR [ecx+13]
  00477	3b c8		 cmp	 ecx, eax
  00479	0f 8d 43 01 00
	00		 jge	 $LN17@StreetVend
  0047f	69 f1 68 05 00
	00		 imul	 esi, ecx, 1384
  00485	8d 57 14	 lea	 edx, DWORD PTR [edi+20]
  00488	8b bd e4 fa ff
	ff		 mov	 edi, DWORD PTR _y$1$[ebp]
  0048e	bb 00 00 00 00	 mov	 ebx, OFFSET ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA
  00493	89 95 e8 fa ff
	ff		 mov	 DWORD PTR tv3983[ebp], edx
  00499	81 c6 91 01 00
	00		 add	 esi, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+401
  0049f	83 c7 16	 add	 edi, 22			; 00000016H
$LL18@StreetVend:

; 1179 : 			{
; 1180 : 				if (ShowVendorItem[i].usage)

  004a2	80 be af fe ff
	ff 00		 cmp	 BYTE PTR [esi-337], 0
  004a9	0f 84 c7 00 00
	00		 je	 $LN70@StreetVend

; 1181 : 				{
; 1182 : 					if (ShowVendorItem[i].kind == 0)

  004af	80 3e 00	 cmp	 BYTE PTR [esi], 0
  004b2	8b 86 77 fe ff
	ff		 mov	 eax, DWORD PTR [esi-393]
  004b8	75 25		 jne	 SHORT $LN72@StreetVend

; 1183 : 					{
; 1184 : 						if (ShowVendorItem[i].price == 0)

  004ba	8b 8e 73 fe ff
	ff		 mov	 ecx, DWORD PTR [esi-397]
  004c0	85 c0		 test	 eax, eax
  004c2	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_09HBDNCLCF@?G?y?$LL?s?5?$LA?$KB?$LA?$NN@
  004c7	89 8d f0 fa ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  004cd	0f 45 d0	 cmovne	 edx, eax

; 1185 : 							sprintf(szMsg, "%-20sx%3d%13s", ShowVendorItem[i].name, ShowVendorItem[i].pile, "íì ê°ê²©");
; 1186 : 						else
; 1187 : 							sprintf(szMsg, "%-20sx%3d%13d", ShowVendorItem[i].name, ShowVendorItem[i].pile, ShowVendorItem[i].price);
; 1188 : 					}

  004d0	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@MINOFDLM@?$CF?920sx?$CF3d?$CF13d@
  004d5	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0O@MNFNNHCK@?$CF?920sx?$CF3d?$CF13s@
  004da	0f 44 c8	 cmove	 ecx, eax
  004dd	eb 29		 jmp	 SHORT $LN77@StreetVend
$LN72@StreetVend:

; 1189 : 					else
; 1190 : 					{
; 1191 : 						if (ShowVendorItem[i].price == 0)

  004df	8d 96 cf fe ff
	ff		 lea	 edx, DWORD PTR [esi-305]
  004e5	89 95 f0 fa ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  004eb	85 c0		 test	 eax, eax
  004ed	75 0c		 jne	 SHORT $LN76@StreetVend

; 1192 : 							sprintf(szMsg, "%-17s%-12s%8s", ShowVendorItem[i].name, ShowVendorItem[i].freeName, "íì ê°ê²©");

  004ef	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OKDFECEM@?$CF?917s?$CF?912s?$CF8s@
  004f4	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_09HBDNCLCF@?G?y?$LL?s?5?$LA?$KB?$LA?$NN@
  004f9	eb 0d		 jmp	 SHORT $LN77@StreetVend
$LN76@StreetVend:

; 1193 : 						else
; 1194 : 							sprintf(szMsg, "%-17s%-12s%8d", ShowVendorItem[i].name, ShowVendorItem[i].freeName, ShowVendorItem[i].price);

  004fb	89 95 f0 fa ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  00501	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OPLGMGNK@?$CF?917s?$CF?912s?$CF8d@
  00506	8b d0		 mov	 edx, eax
$LN77@StreetVend:

; 1195 : 					}
; 1196 : 					iBuyItemBtn[j] = StockFontBuffer(x + 20, y + 22 + 28 * j, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 2);

  00508	52		 push	 edx
  00509	ff b5 f0 fa ff
	ff		 push	 DWORD PTR $T1[ebp]
  0050f	8d 86 b2 fe ff
	ff		 lea	 eax, DWORD PTR [esi-334]
  00515	50		 push	 eax
  00516	51		 push	 ecx
  00517	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0051d	50		 push	 eax
  0051e	e8 00 00 00 00	 call	 _sprintf
  00523	6a 02		 push	 2
  00525	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0052b	50		 push	 eax
  0052c	6a 00		 push	 0
  0052e	6a 01		 push	 1
  00530	57		 push	 edi
  00531	ff b5 e8 fa ff
	ff		 push	 DWORD PTR tv3983[ebp]
  00537	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0053c	83 c4 2c	 add	 esp, 44			; 0000002cH
  0053f	89 03		 mov	 DWORD PTR [ebx], eax

; 1197 : 					if (ShowVendorItem[i].bBuy)

  00541	80 be b0 fe ff
	ff 00		 cmp	 BYTE PTR [esi-336], 0
  00548	74 43		 je	 SHORT $LN16@StreetVend

; 1198 : 						StockBoxDispBuffer(x + 18, y + 19 + 28 * j, x + 280, y + 39 + 28 * j, DISP_PRIO_BOX2, SYSTEM_PAL_RED, 0);

  0054a	8b 95 e0 fa ff
	ff		 mov	 edx, DWORD PTR _x$1$[ebp]
  00550	8d 4f fd	 lea	 ecx, DWORD PTR [edi-3]
  00553	6a 00		 push	 0
  00555	68 f9 00 00 00	 push	 249			; 000000f9H
  0055a	6a 6b		 push	 107			; 0000006bH
  0055c	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0055f	50		 push	 eax
  00560	8d 82 18 01 00
	00		 lea	 eax, DWORD PTR [edx+280]
  00566	50		 push	 eax
  00567	51		 push	 ecx
  00568	8d 42 12	 lea	 eax, DWORD PTR [edx+18]
  0056b	50		 push	 eax
  0056c	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer
  00571	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1199 : 				}

  00574	eb 17		 jmp	 SHORT $LN16@StreetVend
$LN70@StreetVend:

; 1200 : 				else
; 1201 : 					iBuyItemBtn[j] = StockFontBuffer(x + 20, y + 22 + 28 * j, FONT_PRIO_FRONT, FONT_PAL_WHITE, "", 0);

  00576	6a 00		 push	 0
  00578	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0057d	6a 00		 push	 0
  0057f	6a 01		 push	 1
  00581	57		 push	 edi
  00582	52		 push	 edx
  00583	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00588	83 c4 18	 add	 esp, 24			; 00000018H
  0058b	89 03		 mov	 DWORD PTR [ebx], eax
$LN16@StreetVend:

; 1169 : 							break;
; 1170 : #endif
; 1171 : 						}
; 1172 : 						break;
; 1173 : 					}
; 1174 : 				}
; 1175 : 			}
; 1176 : 
; 1177 : 			// [ì¼ìª½ì ìë ë¬¼ê±´ ëª©ë¡ íì]
; 1178 : 			for (i = iListStart, j = 0; i < iListStart + 13; i++, j++)

  0058d	8b 8d ec fa ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]
  00593	81 c6 68 05 00
	00		 add	 esi, 1384		; 00000568H
  00599	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  0059e	41		 inc	 ecx
  0059f	8b 95 e8 fa ff
	ff		 mov	 edx, DWORD PTR tv3983[ebp]
  005a5	83 c0 0d	 add	 eax, 13			; 0000000dH
  005a8	83 c7 1c	 add	 edi, 28			; 0000001cH
  005ab	89 8d ec fa ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  005b1	83 c3 04	 add	 ebx, 4
  005b4	3b c8		 cmp	 ecx, eax
  005b6	0f 8c e6 fe ff
	ff		 jl	 $LL18@StreetVend
  005bc	8b 9d dc fa ff
	ff		 mov	 ebx, DWORD PTR _data$GSCopy$1$[ebp]
$LN17@StreetVend:

; 1202 : 			}
; 1203 : 
; 1204 : 			// [íë¡ì í¸ ìì¸ ìë£ íì]
; 1205 : 			if (ShowVendorItem[iCurrentShow].bGetData) {

  005c2	69 0d 00 00 00
	00 68 05 00 00	 imul	 ecx, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  005cc	89 4d f8	 mov	 DWORD PTR tv3982[ebp], ecx
  005cf	80 b9 42 00 00
	00 00		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+66], 0
  005d6	0f 84 3a 08 00
	00		 je	 $LN30@StreetVend

; 1206 : 				// [ìí ìì¸ ìë£ íì]
; 1207 : 				if (ShowVendorItem[iCurrentShow].kind == 0) {

  005dc	80 b9 91 01 00
	00 00		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+401], 0
  005e3	0f 85 e5 01 00
	00		 jne	 $LN80@StreetVend

; 1208 : 					int		iy = y + 198, color = ShowVendorItem[iCurrentShow].color;

  005e9	8b b5 e4 fa ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  005ef	8d 86 c6 00 00
	00		 lea	 eax, DWORD PTR [esi+198]
  005f5	89 85 ec fa ff
	ff		 mov	 DWORD PTR _iy$1$[ebp], eax
  005fb	8b 81 0c 00 00
	00		 mov	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+12]
  00601	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _color$1$[ebp], eax

; 1209 : 					char* splitPoint = ShowVendorItem[iCurrentShow].memo;
; 1210 : 					// [ì ìëë¬¼ ì ê±°ë]
; 1211 : 					if (pShowPet != NULL) {

  00607	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  0060c	85 c0		 test	 eax, eax
  0060e	74 13		 je	 SHORT $LN82@StreetVend

; 1212 : 						DeathAction(pShowPet);

  00610	50		 push	 eax
  00611	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00616	83 c4 04	 add	 esp, 4

; 1213 : 						pShowPet = NULL;

  00619	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN82@StreetVend:

; 1214 : 					}
; 1215 : 					// [ëì¤íë ì´ ëêµ¬]
; 1216 : 					StockDispBuffer(x + 415, y + 100, DISP_PRIO_ITEM, ShowVendorItem[iCurrentShow].bmpNo, 0);

  00623	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  0062d	83 c6 64	 add	 esi, 100		; 00000064H
  00630	8b bd e0 fa ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  00636	6a 00		 push	 0
  00638	81 c7 9f 01 00
	00		 add	 edi, 415		; 0000019fH
  0063e	ff b0 00 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax]
  00644	6a 6c		 push	 108			; 0000006cH
  00646	56		 push	 esi
  00647	57		 push	 edi
  00648	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1217 : 					// [ëêµ¬ì ë°ë°ë¥ì ëíë´ë ìí]
; 1218 : 					StockDispBuffer(x + 415, y + 100, DISP_PRIO_IME3, 26269, 0);

  0064d	6a 00		 push	 0
  0064f	68 9d 66 00 00	 push	 26269			; 0000669dH
  00654	6a 69		 push	 105			; 00000069H
  00656	56		 push	 esi
  00657	57		 push	 edi
  00658	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1219 : 					// [ëì¤íë ì´ ëêµ¬ ì´ë¦]
; 1220 : 					StockFontBuffer(x + 325, y + 150, FONT_PRIO_FRONT, color, ShowVendorItem[iCurrentShow].name, 0);

  0065d	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00667	8b b5 e4 fa ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  0066d	8b bd e0 fa ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  00673	6a 00		 push	 0
  00675	81 c7 45 01 00
	00		 add	 edi, 325		; 00000145H
  0067b	05 43 00 00 00	 add	 eax, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+67
  00680	89 bd f0 fa ff
	ff		 mov	 DWORD PTR tv3977[ebp], edi
  00686	50		 push	 eax
  00687	ff b5 e8 fa ff
	ff		 push	 DWORD PTR _color$1$[ebp]
  0068d	8d 86 96 00 00
	00		 lea	 eax, DWORD PTR [esi+150]
  00693	6a 01		 push	 1
  00695	50		 push	 eax
  00696	57		 push	 edi
  00697	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1221 : 
; 1222 : 
; 1223 : 					// [ëêµ¬ ë´êµ¬ë íì]
; 1224 : 					sprintf(szMsg, "ë´êµ¬ë ¥(%s)", ShowVendorItem[iCurrentShow].damage);

  0069c	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  006a6	83 c4 40	 add	 esp, 64			; 00000040H
  006a9	05 d2 00 00 00	 add	 eax, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+210
  006ae	50		 push	 eax
  006af	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  006b5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LDFFIDCJ@?$LD?$LL?$LB?$LI?$LH?B?$CI?$CFs?$CJ@
  006ba	50		 push	 eax
  006bb	e8 00 00 00 00	 call	 _sprintf

; 1225 : 					StockFontBuffer(x + 325, y + 174, FONT_PRIO_FRONT, color, szMsg, 0);

  006c0	6a 00		 push	 0
  006c2	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  006c8	50		 push	 eax
  006c9	ff b5 e8 fa ff
	ff		 push	 DWORD PTR _color$1$[ebp]
  006cf	8d 86 ae 00 00
	00		 lea	 eax, DWORD PTR [esi+174]
  006d5	6a 01		 push	 1
  006d7	50		 push	 eax
  006d8	57		 push	 edi
  006d9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1226 : 
; 1227 : 					// [ëì¤íë ì´ ëêµ¬ ìì ]
; 1228 : 					while (1) {
; 1229 : 						if (strlen(splitPoint) > 28) {

  006de	8b 4d f8	 mov	 ecx, DWORD PTR tv3982[ebp]
  006e1	83 c4 24	 add	 esp, 36			; 00000024H
  006e4	8d b1 7d 00 00
	00		 lea	 esi, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+125]
  006ea	8b ce		 mov	 ecx, esi
  006ec	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  006ef	90		 npad	 1
$LL238@StreetVend:
  006f0	8a 01		 mov	 al, BYTE PTR [ecx]
  006f2	41		 inc	 ecx
  006f3	84 c0		 test	 al, al
  006f5	75 f9		 jne	 SHORT $LL238@StreetVend
  006f7	8b bd ec fa ff
	ff		 mov	 edi, DWORD PTR _iy$1$[ebp]
  006fd	2b ca		 sub	 ecx, edx
  006ff	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  00702	0f 86 8c 00 00
	00		 jbe	 $LN83@StreetVend
  00708	8b 9d f0 fa ff
	ff		 mov	 ebx, DWORD PTR tv3977[ebp]
  0070e	66 90		 npad	 2
$LL19@StreetVend:

; 1230 : 							_snprintf(szMsg, 28, "%s", splitPoint);

  00710	56		 push	 esi
  00711	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00716	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0071c	6a 1c		 push	 28			; 0000001cH
  0071e	50		 push	 eax
  0071f	e8 00 00 00 00	 call	 __snprintf

; 1231 : 							szMsg[28] = NULL;
; 1232 : 							if (GetStrLastByte(szMsg) == 3) {

  00724	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0072a	c6 85 10 fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+28], 0
  00731	50		 push	 eax
  00732	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00737	83 c4 14	 add	 esp, 20			; 00000014H
  0073a	83 f8 03	 cmp	 eax, 3
  0073d	75 0e		 jne	 SHORT $LN85@StreetVend

; 1233 : 								szMsg[27] = NULL;

  0073f	c6 85 0f fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+27], 0

; 1234 : 								splitPoint += 27;

  00746	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH

; 1235 : 							}

  0074b	eb 0c		 jmp	 SHORT $LN86@StreetVend
$LN85@StreetVend:

; 1236 : 							else {
; 1237 : 								szMsg[28] = NULL;

  0074d	c6 85 10 fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+28], 0

; 1238 : 								splitPoint += 28;

  00754	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
$LN86@StreetVend:

; 1239 : 							}
; 1240 : 							StockFontBuffer(x + 325, iy, FONT_PRIO_FRONT, 0, szMsg, 0);

  00759	6a 00		 push	 0
  0075b	03 f0		 add	 esi, eax
  0075d	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00763	50		 push	 eax
  00764	6a 00		 push	 0
  00766	6a 01		 push	 1
  00768	57		 push	 edi
  00769	53		 push	 ebx
  0076a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0076f	8b ce		 mov	 ecx, esi
  00771	83 c4 18	 add	 esp, 24			; 00000018H

; 1241 : 							iy += 24;

  00774	83 c7 18	 add	 edi, 24			; 00000018H
  00777	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0077a	66 0f 1f 44 00
	00		 npad	 6
$LL239@StreetVend:

; 1226 : 
; 1227 : 					// [ëì¤íë ì´ ëêµ¬ ìì ]
; 1228 : 					while (1) {
; 1229 : 						if (strlen(splitPoint) > 28) {

  00780	8a 01		 mov	 al, BYTE PTR [ecx]
  00782	41		 inc	 ecx
  00783	84 c0		 test	 al, al
  00785	75 f9		 jne	 SHORT $LL239@StreetVend
  00787	2b ca		 sub	 ecx, edx
  00789	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0078c	77 82		 ja	 SHORT $LL19@StreetVend
  0078e	8b 9d dc fa ff
	ff		 mov	 ebx, DWORD PTR _data$GSCopy$1$[ebp]
$LN83@StreetVend:

; 1242 : 						}
; 1243 : 						else {
; 1244 : 							strcpy(szMsg, splitPoint);

  00794	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  0079a	2b ce		 sub	 ecx, esi
  0079c	0f 1f 40 00	 npad	 4
$LL138@StreetVend:
  007a0	8a 06		 mov	 al, BYTE PTR [esi]
  007a2	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  007a5	88 44 0e ff	 mov	 BYTE PTR [esi+ecx-1], al
  007a9	84 c0		 test	 al, al
  007ab	75 f3		 jne	 SHORT $LL138@StreetVend

; 1245 : 							StockFontBuffer(x + 325, iy, FONT_PRIO_FRONT, 0, szMsg, 0);

  007ad	6a 00		 push	 0
  007af	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  007b5	50		 push	 eax
  007b6	6a 00		 push	 0
  007b8	6a 01		 push	 1
  007ba	57		 push	 edi
  007bb	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3977[ebp]
  007c1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  007c6	83 c4 18	 add	 esp, 24			; 00000018H

; 1246 : 							break;
; 1247 : 						}
; 1248 : 					}
; 1249 : 				}

  007c9	e9 48 06 00 00	 jmp	 $LN30@StreetVend
$LN80@StreetVend:

; 1250 : 				else {// [íí¸ ìì¸ ìë£ íì]
; 1251 : 					if (pShowPet != NULL) {

  007ce	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
  007d5	0f 84 3b 06 00
	00		 je	 $LN30@StreetVend

; 1252 : #ifdef _PET_ITEM
; 1253 : 						// [íí¸ì ëª¸íµ ëêµ¬ë¥¼ íì]
; 1254 : 						if (bViewPetItem) {

  007db	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0
  007e2	0f 84 68 02 00
	00		 je	 $LN88@StreetVend

; 1255 : 							int		nY = 251, nColor;

  007e8	c7 85 ec fa ff
	ff fb 00 00 00	 mov	 DWORD PTR _nY$1$[ebp], 251 ; 000000fbH
  007f2	be 08 00 00 00	 mov	 esi, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+8
  007f7	c7 85 f0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR tv3935[ebp], 0
  00801	bf 00 00 00 00	 mov	 edi, OFFSET ?nPetItemEquipBmpNumber@@3PAY01HA ; nPetItemEquipBmpNumber
$LL23@StreetVend:

; 1260 : 								StockDispBuffer(ItemBuffer[i].defX, ItemBuffer[i].defY, DISP_PRIO_IME3, nPetItemEquipBmpNumber[i][0], 0);

  00806	6a 00		 push	 0
  00808	ff 37		 push	 DWORD PTR [edi]
  0080a	6a 69		 push	 105			; 00000069H
  0080c	ff 76 04	 push	 DWORD PTR [esi+4]
  0080f	ff 36		 push	 DWORD PTR [esi]
  00811	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1261 : 								if (ShowVendorItem[iCurrentShow].oPetItemInfo[i].bmpNo > 0)

  00816	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00820	83 c4 14	 add	 esp, 20			; 00000014H
  00823	8b 8d f0 fa ff
	ff		 mov	 ecx, DWORD PTR tv3935[ebp]
  00829	8b 84 08 94 01
	00 00		 mov	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+ecx+404]
  00830	85 c0		 test	 eax, eax
  00832	7e 12		 jle	 SHORT $LN21@StreetVend

; 1262 : 									StockDispBuffer(ItemBuffer[i].defX, ItemBuffer[i].defY, DISP_PRIO_ITEM, ShowVendorItem[iCurrentShow].oPetItemInfo[i].bmpNo, 0);

  00834	6a 00		 push	 0
  00836	50		 push	 eax
  00837	6a 6c		 push	 108			; 0000006cH
  00839	ff 76 04	 push	 DWORD PTR [esi+4]
  0083c	ff 36		 push	 DWORD PTR [esi]
  0083e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00843	83 c4 14	 add	 esp, 20			; 00000014H
$LN21@StreetVend:

; 1256 : 							char* splitPoint;
; 1257 : 
; 1258 : 							// [íí¸ ì¥ë¹ íìì¤ì ë°ê·¸ë¦¼ ë° ì¥ë¹]
; 1259 : 							for (i = 0; i < PET_EQUIPNUM; i++) {

  00846	81 85 f0 fa ff
	ff 8c 00 00 00	 add	 DWORD PTR tv3935[ebp], 140 ; 0000008cH
  00850	83 c7 08	 add	 edi, 8
  00853	83 c6 20	 add	 esi, 32			; 00000020H
  00856	81 ff 38 00 00
	00		 cmp	 edi, OFFSET ?nPetItemEquipBmpNumber@@3PAY01HA+56
  0085c	7c a8		 jl	 SHORT $LL23@StreetVend

; 1263 : 							}
; 1264 : 							for (i = 0; i < PET_EQUIPNUM; i++) {

  0085e	33 db		 xor	 ebx, ebx
  00860	b8 08 00 00 00	 mov	 eax, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+8
  00865	89 9d f0 fa ff
	ff		 mov	 DWORD PTR tv3930[ebp], ebx
  0086b	89 85 e8 fa ff
	ff		 mov	 DWORD PTR tv3928[ebp], eax
$LL26@StreetVend:

; 1265 : 								// ëì¤íë ì´ ì¥ë¹ ë´ì©]
; 1266 : 								if (MakeHitBox(ItemBuffer[i].defX - 26, ItemBuffer[i].defY - 26, ItemBuffer[i].defX + 26, ItemBuffer[i].defY + 23, DISP_PRIO_IME3) == TRUE) {

  00871	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00874	8b 10		 mov	 edx, DWORD PTR [eax]
  00876	6a 69		 push	 105			; 00000069H
  00878	8d 41 17	 lea	 eax, DWORD PTR [ecx+23]
  0087b	50		 push	 eax
  0087c	8d 42 1a	 lea	 eax, DWORD PTR [edx+26]
  0087f	50		 push	 eax
  00880	8d 41 e6	 lea	 eax, DWORD PTR [ecx-26]
  00883	50		 push	 eax
  00884	8d 42 e6	 lea	 eax, DWORD PTR [edx-26]
  00887	50		 push	 eax
  00888	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0088d	83 c4 14	 add	 esp, 20			; 00000014H
  00890	83 f8 01	 cmp	 eax, 1
  00893	0f 85 8c 01 00
	00		 jne	 $LN24@StreetVend

; 1267 : 									if (ShowVendorItem[iCurrentShow].oPetItemInfo[i].bmpNo > 0) {

  00899	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  008a3	83 bc 18 94 01
	00 00 00	 cmp	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+ebx+404], 0
  008ab	0f 8e 74 01 00
	00		 jle	 $LN24@StreetVend

; 1268 : 										nColor = ShowVendorItem[iCurrentShow].oPetItemInfo[i].color;

  008b1	8b b4 18 98 01
	00 00		 mov	 esi, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+ebx+408]

; 1269 : 										splitPoint = ShowVendorItem[iCurrentShow].oPetItemInfo[i].memo;

  008b8	8d b8 9c 01 00
	00		 lea	 edi, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+412]

; 1270 : 										// [ì¥ë¹ëªì¹­]
; 1271 : 										StockFontBuffer(x + 325, y + 195, FONT_PRIO_FRONT, nColor, ShowVendorItem[iCurrentShow].oPetItemInfo[i].name, 0);

  008be	8b 8d e0 fa ff
	ff		 mov	 ecx, DWORD PTR _x$1$[ebp]
  008c4	8d 80 f1 01 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+497]
  008ca	6a 00		 push	 0
  008cc	03 c3		 add	 eax, ebx
  008ce	81 c1 45 01 00
	00		 add	 ecx, 325		; 00000145H
  008d4	50		 push	 eax
  008d5	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  008db	03 fb		 add	 edi, ebx
  008dd	56		 push	 esi
  008de	6a 01		 push	 1
  008e0	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  008e5	50		 push	 eax
  008e6	51		 push	 ecx
  008e7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1272 : 										// [ë´êµ¬ë]
; 1273 : 										sprintf(szMsg, "ë´êµ¬ë ¥(%s)", ShowVendorItem[iCurrentShow].oPetItemInfo[i].damage);

  008ec	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  008f6	8d 80 0e 02 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+526]
  008fc	03 c3		 add	 eax, ebx
  008fe	50		 push	 eax
  008ff	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00905	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LDFFIDCJ@?$LD?$LL?$LB?$LI?$LH?B?$CI?$CFs?$CJ@
  0090a	50		 push	 eax
  0090b	e8 00 00 00 00	 call	 _sprintf

; 1274 : 										StockFontBuffer(x + 325, y + 215, FONT_PRIO_FRONT, nColor, szMsg, 0);

  00910	8b 9d e0 fa ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00916	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0091c	6a 00		 push	 0
  0091e	50		 push	 eax
  0091f	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  00925	81 c3 45 01 00
	00		 add	 ebx, 325		; 00000145H
  0092b	56		 push	 esi
  0092c	6a 01		 push	 1
  0092e	05 d7 00 00 00	 add	 eax, 215		; 000000d7H
  00933	50		 push	 eax
  00934	53		 push	 ebx
  00935	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1275 : 										// [ëì¤íë ì´ ëêµ¬ ìì ]
; 1276 : 										while (1)
; 1277 : 										{
; 1278 : 											if (strlen(splitPoint) > 28)

  0093a	8b cf		 mov	 ecx, edi
  0093c	83 c4 3c	 add	 esp, 60			; 0000003cH
  0093f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL240@StreetVend:
  00942	8a 01		 mov	 al, BYTE PTR [ecx]
  00944	41		 inc	 ecx
  00945	84 c0		 test	 al, al
  00947	75 f9		 jne	 SHORT $LL240@StreetVend
  00949	8b b5 ec fa ff
	ff		 mov	 esi, DWORD PTR _nY$1$[ebp]
  0094f	2b ca		 sub	 ecx, edx
  00951	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  00954	0f 86 8a 00 00
	00		 jbe	 $LN93@StreetVend
  0095a	66 0f 1f 44 00
	00		 npad	 6
$LL27@StreetVend:

; 1279 : 											{
; 1280 : 												_snprintf(szMsg, 28, "%s", splitPoint);

  00960	57		 push	 edi
  00961	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00966	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0096c	6a 1c		 push	 28			; 0000001cH
  0096e	50		 push	 eax
  0096f	e8 00 00 00 00	 call	 __snprintf

; 1281 : 												szMsg[28] = NULL;
; 1282 : 												if (GetStrLastByte(szMsg) == 3)

  00974	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0097a	c6 85 10 fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+28], 0
  00981	50		 push	 eax
  00982	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00987	83 c4 14	 add	 esp, 20			; 00000014H
  0098a	83 f8 03	 cmp	 eax, 3
  0098d	75 0e		 jne	 SHORT $LN95@StreetVend

; 1283 : 												{
; 1284 : 													szMsg[27] = NULL;

  0098f	c6 85 0f fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+27], 0

; 1285 : 													splitPoint += 27;

  00996	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH

; 1286 : 												}

  0099b	eb 0c		 jmp	 SHORT $LN96@StreetVend
$LN95@StreetVend:

; 1287 : 												else
; 1288 : 												{
; 1289 : 													szMsg[28] = NULL;

  0099d	c6 85 10 fc ff
	ff 00		 mov	 BYTE PTR _szMsg$[ebp+28], 0

; 1290 : 													splitPoint += 28;

  009a4	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
$LN96@StreetVend:

; 1291 : 												}
; 1292 : 												StockFontBuffer(x + 325, nY, FONT_PRIO_FRONT, 0, szMsg, 0);

  009a9	6a 00		 push	 0
  009ab	03 f8		 add	 edi, eax
  009ad	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  009b3	50		 push	 eax
  009b4	6a 00		 push	 0
  009b6	6a 01		 push	 1
  009b8	56		 push	 esi
  009b9	53		 push	 ebx
  009ba	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  009bf	8b c7		 mov	 eax, edi
  009c1	83 c4 18	 add	 esp, 24			; 00000018H

; 1293 : 												nY += 24;

  009c4	83 c6 18	 add	 esi, 24			; 00000018H
  009c7	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  009ca	66 0f 1f 44 00
	00		 npad	 6
$LL241@StreetVend:

; 1275 : 										// [ëì¤íë ì´ ëêµ¬ ìì ]
; 1276 : 										while (1)
; 1277 : 										{
; 1278 : 											if (strlen(splitPoint) > 28)

  009d0	8a 08		 mov	 cl, BYTE PTR [eax]
  009d2	40		 inc	 eax
  009d3	84 c9		 test	 cl, cl
  009d5	75 f9		 jne	 SHORT $LL241@StreetVend
  009d7	2b c2		 sub	 eax, edx
  009d9	83 f8 1c	 cmp	 eax, 28			; 0000001cH
  009dc	77 82		 ja	 SHORT $LL27@StreetVend
  009de	89 b5 ec fa ff
	ff		 mov	 DWORD PTR _nY$1$[ebp], esi
$LN93@StreetVend:

; 1294 : 											}
; 1295 : 											else
; 1296 : 											{
; 1297 : 												strcpy(szMsg, splitPoint);

  009e4	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  009ea	2b cf		 sub	 ecx, edi
  009ec	0f 1f 40 00	 npad	 4
$LL145@StreetVend:
  009f0	8a 07		 mov	 al, BYTE PTR [edi]
  009f2	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  009f5	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  009f9	84 c0		 test	 al, al
  009fb	75 f3		 jne	 SHORT $LL145@StreetVend

; 1298 : 												StockFontBuffer(x + 325, nY, FONT_PRIO_FRONT, 0, szMsg, 0);

  009fd	6a 00		 push	 0
  009ff	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00a05	50		 push	 eax
  00a06	8b 85 e0 fa ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00a0c	6a 00		 push	 0
  00a0e	6a 01		 push	 1
  00a10	05 45 01 00 00	 add	 eax, 325		; 00000145H
  00a15	56		 push	 esi
  00a16	50		 push	 eax
  00a17	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00a1c	8b 9d f0 fa ff
	ff		 mov	 ebx, DWORD PTR tv3930[ebp]
  00a22	83 c4 18	 add	 esp, 24			; 00000018H
$LN24@StreetVend:

; 1263 : 							}
; 1264 : 							for (i = 0; i < PET_EQUIPNUM; i++) {

  00a25	8b 85 e8 fa ff
	ff		 mov	 eax, DWORD PTR tv3928[ebp]
  00a2b	81 c3 8c 00 00
	00		 add	 ebx, 140		; 0000008cH
  00a31	83 c0 20	 add	 eax, 32			; 00000020H
  00a34	89 9d f0 fa ff
	ff		 mov	 DWORD PTR tv3930[ebp], ebx
  00a3a	89 85 e8 fa ff
	ff		 mov	 DWORD PTR tv3928[ebp], eax
  00a40	3d e8 00 00 00	 cmp	 eax, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+232
  00a45	0f 8c 26 fe ff
	ff		 jl	 $LL26@StreetVend

; 1299 : 												break;
; 1300 : 											}
; 1301 : 										}
; 1302 : 									}
; 1303 : 								}
; 1304 : 							}
; 1305 : 						}

  00a4b	e9 c0 03 00 00	 jmp	 $LN246@StreetVend
$LN88@StreetVend:

; 1306 : 						else
; 1307 : #endif
; 1308 : 						{
; 1309 : 							// [íí¸ ì´ë¦ íì]
; 1310 : 							StockFontBuffer(x + 325, y + 35, FONT_PRIO_FRONT, FONT_PAL_WHITE, ShowVendorItem[iCurrentShow].name, 0);

  00a50	8b 9d e0 fa ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00a56	8d 81 43 00 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+67]
  00a5c	8b b5 e4 fa ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  00a62	6a 00		 push	 0
  00a64	50		 push	 eax
  00a65	6a 00		 push	 0
  00a67	6a 01		 push	 1
  00a69	83 c6 23	 add	 esi, 35			; 00000023H
  00a6c	8d bb 45 01 00
	00		 lea	 edi, DWORD PTR [ebx+325]
  00a72	56		 push	 esi
  00a73	57		 push	 edi
  00a74	89 bd f0 fa ff
	ff		 mov	 DWORD PTR tv3975[ebp], edi
  00a7a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1311 : 							// [íí¸ ì¬ì ìë¥¼ íìíë¤]
; 1312 : 							sprintf(szMsg, "%d íì ", ShowVendorItem[iCurrentShow].trans);

  00a7f	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00a89	0f be 80 92 01
	00 00		 movsx	 eax, BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+402]
  00a90	50		 push	 eax
  00a91	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00a97	68 00 00 00 00	 push	 OFFSET ??_C@_07HLBLNMPK@?$CFd?5?H?$LI?$MA?$PM@
  00a9c	50		 push	 eax
  00a9d	e8 00 00 00 00	 call	 _sprintf

; 1313 : 							StockFontBuffer(x + 570, y + 35, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00aa2	6a 00		 push	 0
  00aa4	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00aaa	50		 push	 eax
  00aab	6a 00		 push	 0
  00aad	6a 01		 push	 1
  00aaf	8d 83 3a 02 00
	00		 lea	 eax, DWORD PTR [ebx+570]
  00ab5	56		 push	 esi
  00ab6	50		 push	 eax
  00ab7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1314 : 							// [íí¸ ê°íë¥¼ ëíë´ë ì´ë¦]
; 1315 : 							StockFontBuffer(x + 325, y + 55, FONT_PRIO_FRONT, FONT_PAL_RED, ShowVendorItem[iCurrentShow].freeName, 0);

  00abc	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00ac6	8b b5 e4 fa ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  00acc	6a 00		 push	 0
  00ace	05 60 00 00 00	 add	 eax, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+96
  00ad3	50		 push	 eax
  00ad4	6a 06		 push	 6
  00ad6	6a 01		 push	 1
  00ad8	8d 46 37	 lea	 eax, DWORD PTR [esi+55]
  00adb	50		 push	 eax
  00adc	57		 push	 edi
  00add	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1316 : 							// [íí¸ ë±ê¸, ë´êµ¬ë ¥, ê³µê²©, ë°©, ë¯¼ ë¤ ê°ì§ ìì±ì íìíë¤.]
; 1317 : 							sprintf(szMsg, "Lvï¼%d", ShowVendorItem[iCurrentShow].level);

  00ae2	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00aec	83 c4 54	 add	 esp, 84			; 00000054H
  00aef	ff b0 10 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+16]
  00af5	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00afb	68 00 00 00 00	 push	 OFFSET ??_C@_06EGBMLAEA@Lv?$KD?$LK?$CFd@
  00b00	50		 push	 eax
  00b01	e8 00 00 00 00	 call	 _sprintf

; 1318 : 							StockFontBuffer(x + 325, y + 80, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00b06	6a 00		 push	 0
  00b08	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00b0e	50		 push	 eax
  00b0f	6a 00		 push	 0
  00b11	6a 01		 push	 1
  00b13	8d 7e 50	 lea	 edi, DWORD PTR [esi+80]
  00b16	8d 83 45 01 00
	00		 lea	 eax, DWORD PTR [ebx+325]
  00b1c	57		 push	 edi
  00b1d	50		 push	 eax
  00b1e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1319 : 							sprintf(szMsg, "ë´ï¼%d", ShowVendorItem[iCurrentShow].maxhp);

  00b23	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00b2d	ff b0 14 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+20]
  00b33	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00b39	68 00 00 00 00	 push	 OFFSET ??_C@_06HJFMPHBK@?$LD?$LL?$KD?$LK?$CFd@
  00b3e	50		 push	 eax
  00b3f	e8 00 00 00 00	 call	 _sprintf

; 1320 : 							StockFontBuffer(x + 325, y + 100, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00b44	6a 00		 push	 0
  00b46	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00b4c	50		 push	 eax
  00b4d	6a 00		 push	 0
  00b4f	6a 01		 push	 1
  00b51	8d 5e 64	 lea	 ebx, DWORD PTR [esi+100]
  00b54	53		 push	 ebx
  00b55	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3975[ebp]
  00b5b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1321 : 							sprintf(szMsg, "ê³µï¼%d", ShowVendorItem[iCurrentShow].attack);

  00b60	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00b6a	83 c4 48	 add	 esp, 72			; 00000048H
  00b6d	ff b0 18 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+24]
  00b73	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00b79	68 00 00 00 00	 push	 OFFSET ??_C@_06MBHIJFEF@?$LA?x?$KD?$LK?$CFd@
  00b7e	50		 push	 eax
  00b7f	e8 00 00 00 00	 call	 _sprintf

; 1322 : 							StockFontBuffer(x + 325, y + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00b84	8d 46 78	 lea	 eax, DWORD PTR [esi+120]
  00b87	6a 00		 push	 0
  00b89	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  00b8f	51		 push	 ecx
  00b90	6a 00		 push	 0
  00b92	6a 01		 push	 1
  00b94	50		 push	 eax
  00b95	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3975[ebp]
  00b9b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1323 : 							sprintf(szMsg, "ë°©ï¼%d", ShowVendorItem[iCurrentShow].defence);

  00ba0	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00baa	ff b0 1c 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+28]
  00bb0	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00bb6	68 00 00 00 00	 push	 OFFSET ??_C@_06GNDMLDHN@?$LJ?f?$KD?$LK?$CFd@
  00bbb	50		 push	 eax
  00bbc	e8 00 00 00 00	 call	 _sprintf

; 1324 : 							StockFontBuffer(x + 325, y + 140, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00bc1	6a 00		 push	 0
  00bc3	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  00bc9	51		 push	 ecx
  00bca	6a 00		 push	 0
  00bcc	8d 86 8c 00 00
	00		 lea	 eax, DWORD PTR [esi+140]
  00bd2	6a 01		 push	 1
  00bd4	50		 push	 eax
  00bd5	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3975[ebp]
  00bdb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1325 : 							sprintf(szMsg, "ìï¼%d", ShowVendorItem[iCurrentShow].dex);

  00be0	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00bea	83 c4 48	 add	 esp, 72			; 00000048H
  00bed	ff b0 20 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+32]
  00bf3	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00bf9	68 00 00 00 00	 push	 OFFSET ??_C@_06GNIPPDB@?$LM?x?$KD?$LK?$CFd@
  00bfe	50		 push	 eax
  00bff	e8 00 00 00 00	 call	 _sprintf

; 1326 : 							StockFontBuffer(x + 325, y + 160, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00c04	6a 00		 push	 0
  00c06	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  00c0c	51		 push	 ecx
  00c0d	6a 00		 push	 0
  00c0f	8d 86 a0 00 00
	00		 lea	 eax, DWORD PTR [esi+160]
  00c15	6a 01		 push	 1
  00c17	50		 push	 eax
  00c18	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3975[ebp]
  00c1e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1327 : 							sprintf(szMsg, "ì§ï¼%d", ShowVendorItem[iCurrentShow].earth / 10);

  00c23	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00c2d	8b 88 24 00 00
	00		 mov	 ecx, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+36]
  00c33	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00c38	f7 e9		 imul	 ecx
  00c3a	c1 fa 02	 sar	 edx, 2
  00c3d	8b c2		 mov	 eax, edx
  00c3f	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00c42	03 c2		 add	 eax, edx
  00c44	50		 push	 eax
  00c45	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00c4b	68 00 00 00 00	 push	 OFFSET ??_C@_06LBGNCPKK@?A?v?$KD?$LK?$CFd@
  00c50	50		 push	 eax
  00c51	e8 00 00 00 00	 call	 _sprintf

; 1328 : 							StockFontBuffer(x + 390, y + 80, FONT_PRIO_FRONT, FONT_PAL_GREEN, szMsg, 0);

  00c56	8b b5 e0 fa ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
  00c5c	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00c62	6a 00		 push	 0
  00c64	50		 push	 eax
  00c65	6a 05		 push	 5
  00c67	6a 01		 push	 1
  00c69	81 c6 86 01 00
	00		 add	 esi, 390		; 00000186H
  00c6f	57		 push	 edi
  00c70	56		 push	 esi
  00c71	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1329 : 							sprintf(szMsg, "ìï¼%d", ShowVendorItem[iCurrentShow].water / 10);

  00c76	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00c80	83 c4 48	 add	 esp, 72			; 00000048H
  00c83	8b 88 28 00 00
	00		 mov	 ecx, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+40]
  00c89	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00c8e	f7 e9		 imul	 ecx
  00c90	c1 fa 02	 sar	 edx, 2
  00c93	8b c2		 mov	 eax, edx
  00c95	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00c98	03 c2		 add	 eax, edx
  00c9a	50		 push	 eax
  00c9b	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00ca1	68 00 00 00 00	 push	 OFFSET ??_C@_06DMNCJOEB@?$LM?v?$KD?$LK?$CFd@
  00ca6	50		 push	 eax
  00ca7	e8 00 00 00 00	 call	 _sprintf

; 1330 : 							StockFontBuffer(x + 390, y + 100, FONT_PRIO_FRONT, FONT_PAL_BLUE, szMsg, 0);

  00cac	6a 00		 push	 0
  00cae	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00cb4	50		 push	 eax
  00cb5	6a 03		 push	 3
  00cb7	6a 01		 push	 1
  00cb9	53		 push	 ebx
  00cba	56		 push	 esi
  00cbb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1331 : 							sprintf(szMsg, "íï¼%d", ShowVendorItem[iCurrentShow].fire / 10);

  00cc0	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00cca	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+44]
  00cd0	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00cd5	f7 e9		 imul	 ecx
  00cd7	c1 fa 02	 sar	 edx, 2
  00cda	8b c2		 mov	 eax, edx
  00cdc	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00cdf	03 c2		 add	 eax, edx
  00ce1	50		 push	 eax
  00ce2	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00ce8	68 00 00 00 00	 push	 OFFSET ??_C@_06ECLMJCEN@?H?$KN?$KD?$LK?$CFd@
  00ced	50		 push	 eax
  00cee	e8 00 00 00 00	 call	 _sprintf

; 1332 : 							StockFontBuffer(x + 390, y + 120, FONT_PRIO_FRONT, FONT_PAL_RED, szMsg, 0);

  00cf3	8b 9d e4 fa ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  00cf9	8d 8d f4 fb ff
	ff		 lea	 ecx, DWORD PTR _szMsg$[ebp]
  00cff	6a 00		 push	 0
  00d01	51		 push	 ecx
  00d02	6a 06		 push	 6
  00d04	6a 01		 push	 1
  00d06	8d 4b 78	 lea	 ecx, DWORD PTR [ebx+120]
  00d09	51		 push	 ecx
  00d0a	56		 push	 esi
  00d0b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1333 : 							sprintf(szMsg, "íï¼%d", ShowVendorItem[iCurrentShow].wind / 10);

  00d10	69 0d 00 00 00
	00 68 05 00 00	 imul	 ecx, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00d1a	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00d1f	83 c4 48	 add	 esp, 72			; 00000048H
  00d22	f7 a9 30 00 00
	00		 imul	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[ecx+48]
  00d28	c1 fa 02	 sar	 edx, 2
  00d2b	8b c2		 mov	 eax, edx
  00d2d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00d30	03 c2		 add	 eax, edx
  00d32	50		 push	 eax
  00d33	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00d39	68 00 00 00 00	 push	 OFFSET ??_C@_06INCIIBEP@?G?$LD?$KD?$LK?$CFd@
  00d3e	50		 push	 eax
  00d3f	e8 00 00 00 00	 call	 _sprintf

; 1334 : 							StockFontBuffer(x + 390, y + 140, FONT_PRIO_FRONT, FONT_PAL_YELLOW, szMsg, 0);

  00d44	6a 00		 push	 0
  00d46	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00d4c	50		 push	 eax
  00d4d	6a 04		 push	 4
  00d4f	6a 01		 push	 1
  00d51	8d 83 8c 00 00
	00		 lea	 eax, DWORD PTR [ebx+140]
  00d57	50		 push	 eax
  00d58	56		 push	 esi
  00d59	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1335 : 							sprintf(szMsg, "ì¶©ï¼%d", ShowVendorItem[iCurrentShow].fidelity);

  00d5e	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00d68	ff b0 34 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+52]
  00d6e	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00d74	68 00 00 00 00	 push	 OFFSET ??_C@_06CFCEDMBI@?C?f?$KD?$LK?$CFd@
  00d79	50		 push	 eax
  00d7a	e8 00 00 00 00	 call	 _sprintf

; 1336 : 							StockFontBuffer(x + 390, y + 160, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00d7f	6a 00		 push	 0
  00d81	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00d87	50		 push	 eax
  00d88	6a 00		 push	 0
  00d8a	6a 01		 push	 1
  00d8c	8d 83 a0 00 00
	00		 lea	 eax, DWORD PTR [ebx+160]
  00d92	50		 push	 eax
  00d93	56		 push	 esi
  00d94	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1337 : 							// [ì´ì ë¥¼ ê³¼ìíë¤]
; 1338 : 							for (i = 0; i < ShowVendorItem[iCurrentShow].maxSkill; i++)

  00d99	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00da3	33 f6		 xor	 esi, esi
  00da5	83 c4 48	 add	 esp, 72			; 00000048H
  00da8	39 b0 38 00 00
	00		 cmp	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+56], esi
  00dae	7e 60		 jle	 SHORT $LN246@StreetVend

; 1306 : 						else
; 1307 : #endif
; 1308 : 						{
; 1309 : 							// [íí¸ ì´ë¦ íì]
; 1310 : 							StockFontBuffer(x + 325, y + 35, FONT_PRIO_FRONT, FONT_PAL_WHITE, ShowVendorItem[iCurrentShow].name, 0);

  00db0	33 ff		 xor	 edi, edi
  00db2	81 c3 be 00 00
	00		 add	 ebx, 190		; 000000beH
  00db8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL31@StreetVend:

; 1339 : 							{
; 1340 : 								sprintf(szMsg, "ê¸°ì  %dï¼%s", i + 1, ShowVendorItem[iCurrentShow].skillname[i]);

  00dc0	8d 80 e2 00 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+226]
  00dc6	46		 inc	 esi
  00dc7	03 c7		 add	 eax, edi
  00dc9	50		 push	 eax
  00dca	56		 push	 esi
  00dcb	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00dd1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LGAMIGJ@?$LB?b?$LM?z?5?$CFd?$KD?$LK?$CFs@
  00dd6	50		 push	 eax
  00dd7	e8 00 00 00 00	 call	 _sprintf

; 1341 : 								StockFontBuffer(x + 325, y + 190 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00ddc	6a 00		 push	 0
  00dde	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00de4	50		 push	 eax
  00de5	6a 00		 push	 0
  00de7	6a 01		 push	 1
  00de9	53		 push	 ebx
  00dea	ff b5 f0 fa ff
	ff		 push	 DWORD PTR tv3975[ebp]
  00df0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00df5	69 05 00 00 00
	00 68 05 00 00	 imul	 eax, DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 1384
  00dff	83 c4 28	 add	 esp, 40			; 00000028H
  00e02	83 c7 19	 add	 edi, 25			; 00000019H
  00e05	83 c3 14	 add	 ebx, 20			; 00000014H
  00e08	3b b0 38 00 00
	00		 cmp	 esi, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+56]
  00e0e	7c b0		 jl	 SHORT $LL31@StreetVend
$LN246@StreetVend:

; 1342 : 							}
; 1343 : 						}
; 1344 : 					}
; 1345 : 				}
; 1346 : 			}
; 1347 : 
; 1348 : 			// [ì¢ì¸¡ í­ëª©ì ì²ë¦¬íë¤]
; 1349 : 			int kind;
; 1350 : 
; 1351 : 			for (i = 0; i < 13; i++)

  00e10	8b 9d dc fa ff
	ff		 mov	 ebx, DWORD PTR _data$GSCopy$1$[ebp]
$LN30@StreetVend:
  00e16	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00e1b	33 f6		 xor	 esi, esi
  00e1d	8b 8d d8 fa ff
	ff		 mov	 ecx, DWORD PTR _selId$1$[ebp]
  00e23	83 e0 01	 and	 eax, 1
$LL34@StreetVend:

; 1352 : 			{
; 1353 : 				// [ë§¤ìë¥¼ ì ì íë¤]
; 1354 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  00e26	85 c0		 test	 eax, eax
  00e28	74 45		 je	 SHORT $LN97@StreetVend

; 1355 : 				{
; 1356 : 					if (selId == iBuyItemBtn[i])

  00e2a	3b 0c b5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[esi*4]
  00e31	75 52		 jne	 SHORT $LN32@StreetVend

; 1357 : 					{
; 1358 : 						kind = ShowVendorItem[i + iListStart].kind;

  00e33	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00e38	03 c6		 add	 eax, esi
  00e3a	69 d0 68 05 00
	00		 imul	 edx, eax, 1384

; 1359 : 
; 1360 : 						// [ì´ë¯¸ ì ííë¤ë©´ ì·¨ìíë¤]
; 1361 : 						if (ShowVendorItem[i + iListStart].bBuy)

  00e40	80 ba 41 00 00
	00 00		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+65], 0
  00e47	0f be 8a 91 01
	00 00		 movsx	 ecx, BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+401]
  00e4e	74 40		 je	 SHORT $LN100@StreetVend

; 1362 : 						{
; 1363 : 							ShowVendorItem[i + iListStart].bBuy = false;
; 1364 : 							iTotalBuy[kind]--;

  00e50	ff 0c 8d 00 00
	00 00		 dec	 DWORD PTR ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[ecx*4]
  00e57	c6 82 41 00 00
	00 00		 mov	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+65], 0

; 1365 : 							iTotalBuyMoney -= ShowVendorItem[i + iListStart].price;

  00e5e	8b 82 08 00 00
	00		 mov	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+8]
  00e64	29 05 00 00 00
	00		 sub	 DWORD PTR ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax

; 1366 : 						}

  00e6a	e9 50 01 00 00	 jmp	 $LN247@StreetVend
$LN97@StreetVend:

; 1400 : 					}
; 1401 : 				}
; 1402 : 				// çé¡¹ç®åå®¹
; 1403 : 				else if (mouse.onceState & MOUSE_RIGHT_CRICK)

  00e6f	f6 05 2c 00 00
	00 02		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 2
  00e76	74 0d		 je	 SHORT $LN32@StreetVend

; 1404 : 				{
; 1405 : 					if (selId == iBuyItemBtn[i])

  00e78	3b 0c b5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?iBuyItemBtn@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[esi*4]
  00e7f	0f 84 a6 00 00
	00		 je	 $LN165@StreetVend
$LN32@StreetVend:

; 1342 : 							}
; 1343 : 						}
; 1344 : 					}
; 1345 : 				}
; 1346 : 			}
; 1347 : 
; 1348 : 			// [ì¢ì¸¡ í­ëª©ì ì²ë¦¬íë¤]
; 1349 : 			int kind;
; 1350 : 
; 1351 : 			for (i = 0; i < 13; i++)

  00e85	46		 inc	 esi
  00e86	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  00e89	7c 9b		 jl	 SHORT $LL34@StreetVend
  00e8b	e9 2f 01 00 00	 jmp	 $LN247@StreetVend
$LN100@StreetVend:

; 1367 : 						// [ê°ê²©ê²°ì  íëª©ì¸ì§ ì¬ë¶]
; 1368 : 						else if (ShowVendorItem[i + iListStart].price > 0)

  00e90	8b 82 08 00 00
	00		 mov	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+8]
  00e96	85 c0		 test	 eax, eax
  00e98	7e 7b		 jle	 SHORT $LN102@StreetVend

; 1369 : 						{
; 1370 : 							// [ëª¸ì ìì§ ë¹ ìë¦¬ê° ìë¤]
; 1371 : 							if (iEmptyNum[kind] > iTotalBuy[kind])

  00e9a	8b 3c 8d 00 00
	00 00		 mov	 edi, DWORD PTR ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[ecx*4]
  00ea1	39 3c 8d 00 00
	00 00		 cmp	 DWORD PTR ?iEmptyNum@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[ecx*4], edi
  00ea8	7e 48		 jle	 SHORT $LN104@StreetVend

; 1372 : 							{
; 1373 : 								// [ëª¸ì ëì´ ì¶©ë¶íë¤]
; 1374 : 								if ((iTotalBuyMoney + ShowVendorItem[i + iListStart].price) <= pc.gold)

  00eaa	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00eb0	03 c6		 add	 eax, esi
  00eb2	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  00eb8	7f 22		 jg	 SHORT $LN106@StreetVend

; 1375 : 								{
; 1376 : 									// [ìºë¦­í°ê° íí¸ë³´ë¤ ë±ê¸ì´ ëìì§ íì¸íë¤] íí¸ë±ê¸
; 1377 : 									//if (kind == 1 && (ShowVendorItem[i + iListStart].level > (pc.level + 5) && pc.transmigration < 1))
; 1378 : 									//{
; 1379 : 									//	StockChatBufferLine("ë¹ì ì ì´ íí¸ë¥¼ ì¬ì©í ììì´ï¼", FONT_PAL_RED);
; 1380 : 									//	break;
; 1381 : 									//}
; 1382 : 									ShowVendorItem[i + iListStart].bBuy = true;

  00eba	c6 82 41 00 00
	00 01		 mov	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+65], 1

; 1383 : 									iTotalBuy[kind]++;

  00ec1	8d 47 01	 lea	 eax, DWORD PTR [edi+1]

; 1384 : 									iTotalBuyMoney += ShowVendorItem[i + iListStart].price;

  00ec4	03 b2 08 00 00
	00		 add	 esi, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[edx+8]
  00eca	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?iTotalBuy@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4PAHA[ecx*4], eax
  00ed1	89 35 00 00 00
	00		 mov	 DWORD PTR ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, esi

; 1385 : 								}

  00ed7	e9 e3 00 00 00	 jmp	 $LN247@StreetVend
$LN106@StreetVend:

; 1386 : 								else
; 1387 : 									StockChatBufferLine("ì¤í¤ì´ ë¶ì¡±í´ï¼", FONT_PAL_RED);

  00edc	6a 00		 push	 0
  00ede	6a 06		 push	 6
  00ee0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KFKPCCNN@?$LN?$LK?E?f?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@
  00ee5	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  00eea	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1388 : 							}

  00eed	e9 cd 00 00 00	 jmp	 $LN247@StreetVend
$LN104@StreetVend:

; 1389 : 							else
; 1390 : 							{
; 1391 : 								if (kind == 0)

  00ef2	85 c9		 test	 ecx, ecx
  00ef4	74 09		 je	 SHORT $LN231@StreetVend

; 1392 : 									StockChatBufferLine("ë°ë ìì´í ì¹ìì´ ë¶ì¡±í´ï¼", FONT_PAL_RED);
; 1393 : 								else if (kind == 1)

  00ef6	83 f9 01	 cmp	 ecx, 1
  00ef9	0f 85 c0 00 00
	00		 jne	 $LN247@StreetVend
$LN231@StreetVend:

; 1394 : 									StockChatBufferLine("ë°ë ìì´í ì¹ìì´ ë¶ì¡±í´ï¼", FONT_PAL_RED);

  00eff	6a 00		 push	 0
  00f01	6a 06		 push	 6
  00f03	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@PJIKDD@?$LJ?Y?$LF?p?5?$LO?F?$MA?L?E?$NL?5?$LM?$LN?$LM?G?$MA?L?5?$LK?N?A?$LH?G?X?$KD?$KB@
  00f08	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  00f0d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1395 : 							}
; 1396 : 						}

  00f10	e9 aa 00 00 00	 jmp	 $LN247@StreetVend
$LN102@StreetVend:

; 1397 : 						else
; 1398 : 							StockChatBufferLine("íì  ê°ê²© ë¬¼íì ì¼ì¼ì´ ê³ ë¥¼ ì ìë¤ï¼", FONT_PAL_RED);

  00f15	6a 00		 push	 0
  00f17	6a 06		 push	 6
  00f19	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@BCAEDIAE@?G?y?A?$KE?5?$LA?$KB?$LA?$NN?5?$LJ?$LA?G?$LA?$MA?$LK?5?$MA?O?$MA?O?$MA?L?5?$LA?m?$LI?$KG?5?$LM?v@
  00f1e	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  00f23	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1399 : 						break;

  00f26	e9 94 00 00 00	 jmp	 $LN247@StreetVend
$LN165@StreetVend:

; 1406 : 					{
; 1407 : 						if (!ShowVendorItem[i + iListStart].bGetData)

  00f2b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00f31	03 ce		 add	 ecx, esi
  00f33	69 c1 68 05 00
	00		 imul	 eax, ecx, 1384
  00f39	80 b8 42 00 00
	00 00		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+66], 0
  00f40	75 2e		 jne	 SHORT $LN113@StreetVend

; 1408 : 						{
; 1409 : 							sprintf(szMsg, "D|%d|", ShowVendorItem[i + iListStart].index);

  00f42	ff b0 3c 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+60]
  00f48	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00f4e	68 00 00 00 00	 push	 OFFSET ??_C@_05LNGOBBOC@D?$HM?$CFd?$HM@
  00f53	50		 push	 eax
  00f54	e8 00 00 00 00	 call	 _sprintf

; 1410 : 							lssproto_STREET_VENDOR_send(sockfd, szMsg);

  00f59	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00f5f	50		 push	 eax
  00f60	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00f66	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00f6b	83 c4 14	 add	 esp, 20			; 00000014H

; 1411 : 						}

  00f6e	eb 39		 jmp	 SHORT $LN116@StreetVend
$LN113@StreetVend:

; 1412 : 						else if (ShowVendorItem[i + iListStart].kind == 1)

  00f70	80 b8 91 01 00
	00 01		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax+401], 1
  00f77	75 30		 jne	 SHORT $LN116@StreetVend

; 1413 : 						{
; 1414 : 							if (iCurrentShow != i + iListStart)

  00f79	39 0d 00 00 00
	00		 cmp	 DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, ecx
  00f7f	74 28		 je	 SHORT $LN116@StreetVend

; 1415 : 							{
; 1416 : 								if (pShowPet != NULL)

  00f81	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00f86	85 c0		 test	 eax, eax
  00f88	74 13		 je	 SHORT $LN117@StreetVend

; 1417 : 								{
; 1418 : 									DeathAction(pShowPet);

  00f8a	50		 push	 eax
  00f8b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00f90	83 c4 04	 add	 esp, 4

; 1419 : 									pShowPet = NULL;

  00f93	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN117@StreetVend:

; 1420 : 								}
; 1421 : 								iMakePetAni = i + iListStart;

  00f9d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00fa2	03 c6		 add	 eax, esi
  00fa4	a3 00 00 00 00	 mov	 DWORD PTR ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
$LN116@StreetVend:

; 1422 : 							}
; 1423 : 						}
; 1424 : 						iCurrentShow = i + iListStart;

  00fa9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  00fae	03 c6		 add	 eax, esi

; 1425 : #ifdef _PET_ITEM
; 1426 : 						bViewPetItem = FALSE;

  00fb0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bViewPetItem@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, 0
  00fba	a3 00 00 00 00	 mov	 DWORD PTR ?iCurrentShow@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
$LN247@StreetVend:

; 1427 : #endif
; 1428 : 						break;
; 1429 : 					}
; 1430 : 				}
; 1431 : 			}
; 1432 : 
; 1433 : 			// [ëª¸ì ì§ëê³  ìë ëì ê³¼ìíë¤]
; 1434 : 			sprintf(szMsg, "%d", pc.gold);

  00fbf	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  00fc5	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00fcb	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00fd0	50		 push	 eax
  00fd1	e8 00 00 00 00	 call	 _sprintf

; 1435 : 			StockFontBuffer(x + 380, y + 336, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00fd6	8b bd e0 fa ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  00fdc	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00fe2	8b b5 e4 fa ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  00fe8	6a 00		 push	 0
  00fea	50		 push	 eax
  00feb	6a 00		 push	 0
  00fed	6a 01		 push	 1
  00fef	81 c6 50 01 00
	00		 add	 esi, 336		; 00000150H
  00ff5	8d 87 7c 01 00
	00		 lea	 eax, DWORD PTR [edi+380]
  00ffb	56		 push	 esi
  00ffc	50		 push	 eax
  00ffd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1436 : 			// ì íí íëª©ì ì´ê°ê²©ì íìí©ëë¤.
; 1437 : 			sprintf(szMsg, "%d", iTotalBuyMoney);

  01002	ff 35 00 00 00
	00		 push	 DWORD PTR ?iTotalBuyMoney@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  01008	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0100e	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  01013	50		 push	 eax
  01014	e8 00 00 00 00	 call	 _sprintf

; 1438 : 			StockFontBuffer(x + 525, y + 336, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  01019	6a 00		 push	 0
  0101b	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01021	50		 push	 eax
  01022	6a 00		 push	 0
  01024	6a 01		 push	 1
  01026	8d 87 0d 02 00
	00		 lea	 eax, DWORD PTR [edi+525]
  0102c	56		 push	 esi
  0102d	50		 push	 eax
  0102e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1439 : 			if (iMakePetAni > -1)

  01033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA
  01038	83 c4 48	 add	 esp, 72			; 00000048H
  0103b	83 f8 ff	 cmp	 eax, -1
  0103e	7e 38		 jle	 SHORT $LN118@StreetVend

; 1440 : 			{
; 1441 : 				pShowPet = MakeAnimDisp(x + 520, y + 230, ShowVendorItem[iMakePetAni].bmpNo, 0);

  01040	69 c0 68 05 00
	00		 imul	 eax, eax, 1384
  01046	6a 00		 push	 0
  01048	ff b0 00 00 00
	00		 push	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[eax]
  0104e	8b 85 e4 fa ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  01054	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  01059	50		 push	 eax
  0105a	8d 87 08 02 00
	00		 lea	 eax, DWORD PTR [edi+520]
  01060	50		 push	 eax
  01061	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  01066	83 c4 10	 add	 esp, 16			; 00000010H
  01069	a3 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, eax ; pShowPet

; 1442 : 				iMakePetAni = -1;

  0106e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, -1
$LN118@StreetVend:

; 1443 : 			}
; 1444 : 			StockDispBuffer(((WINDOW_DISP*)pActStreetVendorBuyWnd->pYobi)->mx,

  01078	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A ; pActStreetVendorBuyWnd
  0107d	6a 01		 push	 1
  0107f	68 a8 89 00 00	 push	 35240			; 000089a8H
  01084	6a 68		 push	 104			; 00000068H
  01086	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  01089	ff 70 18	 push	 DWORD PTR [eax+24]
  0108c	ff 70 14	 push	 DWORD PTR [eax+20]
  0108f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  01094	83 c4 14	 add	 esp, 20			; 00000014H
$LN52@StreetVend:

; 1445 : 				((WINDOW_DISP*)pActStreetVendorBuyWnd->pYobi)->my,
; 1446 : 				DISP_PRIO_MENU, CG_FIELD_SV_BUY_PANEL, 1);
; 1447 : 		}
; 1448 : 	}
; 1449 : 	if (data != NULL)

  01097	85 db		 test	 ebx, ebx
  01099	0f 84 6b 06 00
	00		 je	 $LN126@StreetVend

; 1450 : 	{
; 1451 : 		int count, index;
; 1452 : #ifdef _PET_ITEM
; 1453 : 		int nPetItemPlace;
; 1454 : #endif
; 1455 : 		getStringToken(data, '|', 1, sizeof(szMsg) - 1, szMsg);

  0109f	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  010a5	50		 push	 eax
  010a6	68 ff 03 00 00	 push	 1023			; 000003ffH
  010ab	6a 01		 push	 1
  010ad	6a 7c		 push	 124			; 0000007cH
  010af	53		 push	 ebx
  010b0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1456 : 		// [íë§¤ë¬¼ ê¸°ë³¸ ìë£]
; 1457 : 		if (szMsg[0] == 'B')

  010b5	8a 85 f4 fb ff
	ff		 mov	 al, BYTE PTR _szMsg$[ebp]
  010bb	83 c4 14	 add	 esp, 20			; 00000014H
  010be	3c 42		 cmp	 al, 66			; 00000042H
  010c0	0f 85 78 01 00
	00		 jne	 $LN120@StreetVend

; 1458 : 		{
; 1459 : 			getStringToken(data, '|', 2, sizeof(szMsg) - 1, szMsg);

  010c6	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  010cc	50		 push	 eax
  010cd	68 ff 03 00 00	 push	 1023			; 000003ffH
  010d2	6a 02		 push	 2
  010d4	6a 7c		 push	 124			; 0000007cH
  010d6	53		 push	 ebx
  010d7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1460 : 			count = atoi(szMsg);

  010dc	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  010e2	50		 push	 eax
  010e3	e8 00 00 00 00	 call	 _atoi
  010e8	83 c4 18	 add	 esp, 24			; 00000018H
  010eb	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _count$1$[ebp], eax

; 1461 : 			for (i = 0; i < count; i++)

  010f1	85 c0		 test	 eax, eax
  010f3	0f 8e 11 06 00
	00		 jle	 $LN126@StreetVend

; 1458 : 		{
; 1459 : 			getStringToken(data, '|', 2, sizeof(szMsg) - 1, szMsg);

  010f9	be 04 00 00 00	 mov	 esi, 4
  010fe	bf 91 01 00 00	 mov	 edi, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+401
  01103	89 b5 ec fa ff
	ff		 mov	 DWORD PTR tv3922[ebp], esi
  01109	0f 1f 80 00 00
	00 00		 npad	 7
$LL37@StreetVend:

; 1462 : 			{
; 1463 : 				getStringToken(data, '|', 3 + i * 5, sizeof(szMsg) - 1, szMsg);

  01110	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01116	50		 push	 eax
  01117	68 ff 03 00 00	 push	 1023			; 000003ffH
  0111c	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  0111f	50		 push	 eax
  01120	6a 7c		 push	 124			; 0000007cH
  01122	53		 push	 ebx
  01123	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1464 : 				ShowVendorItem[i].kind = atoi(szMsg);

  01128	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0112e	50		 push	 eax
  0112f	e8 00 00 00 00	 call	 _atoi
  01134	88 07		 mov	 BYTE PTR [edi], al

; 1465 : 				getStringToken(data, '|', 4 + i * 5, sizeof(szMsg) - 1, szMsg);

  01136	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0113c	50		 push	 eax
  0113d	68 ff 03 00 00	 push	 1023			; 000003ffH
  01142	56		 push	 esi
  01143	6a 7c		 push	 124			; 0000007cH
  01145	53		 push	 ebx
  01146	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1466 : 				ShowVendorItem[i].price = atoi(szMsg);

  0114b	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01151	50		 push	 eax
  01152	8d b7 b2 fe ff
	ff		 lea	 esi, DWORD PTR [edi-334]
  01158	e8 00 00 00 00	 call	 _atoi
  0115d	89 46 c5	 mov	 DWORD PTR [esi-59], eax

; 1467 : 				getStringToken(data, '|', 5 + i * 5, sizeof(szMsg) - 1, szMsg);

  01160	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01166	50		 push	 eax
  01167	8b 85 ec fa ff
	ff		 mov	 eax, DWORD PTR tv3922[ebp]
  0116d	68 ff 03 00 00	 push	 1023			; 000003ffH
  01172	40		 inc	 eax
  01173	50		 push	 eax
  01174	6a 7c		 push	 124			; 0000007cH
  01176	53		 push	 ebx
  01177	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0117c	83 c4 44	 add	 esp, 68			; 00000044H

; 1468 : 				strncpy(ShowVendorItem[i].name, szMsg, sizeof(ShowVendorItem[i].name));

  0117f	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01185	6a 1d		 push	 29			; 0000001dH
  01187	50		 push	 eax
  01188	56		 push	 esi
  01189	e8 00 00 00 00	 call	 _strncpy

; 1469 : 				getStringToken(data, '|', 6 + i * 5, sizeof(szMsg) - 1, szMsg);

  0118e	8b b5 ec fa ff
	ff		 mov	 esi, DWORD PTR tv3922[ebp]
  01194	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0119a	50		 push	 eax
  0119b	68 ff 03 00 00	 push	 1023			; 000003ffH
  011a0	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  011a3	50		 push	 eax
  011a4	6a 7c		 push	 124			; 0000007cH
  011a6	53		 push	 ebx
  011a7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  011ac	83 c4 20	 add	 esp, 32			; 00000020H

; 1470 : 				if (ShowVendorItem[i].kind == 0)

  011af	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  011b5	80 3f 00	 cmp	 BYTE PTR [edi], 0
  011b8	75 11		 jne	 SHORT $LN122@StreetVend

; 1471 : 					ShowVendorItem[i].pile = atoi(szMsg);

  011ba	50		 push	 eax
  011bb	e8 00 00 00 00	 call	 _atoi
  011c0	83 c4 04	 add	 esp, 4
  011c3	89 87 73 fe ff
	ff		 mov	 DWORD PTR [edi-397], eax
  011c9	eb 12		 jmp	 SHORT $LN123@StreetVend
$LN122@StreetVend:

; 1472 : 				else
; 1473 : 					strncpy(ShowVendorItem[i].freeName, szMsg, sizeof(ShowVendorItem[i].freeName));

  011cb	6a 1d		 push	 29			; 0000001dH
  011cd	50		 push	 eax
  011ce	8d 87 cf fe ff
	ff		 lea	 eax, DWORD PTR [edi-305]
  011d4	50		 push	 eax
  011d5	e8 00 00 00 00	 call	 _strncpy
  011da	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN123@StreetVend:

; 1474 : 				getStringToken(data, '|', 7 + i * 5, sizeof(szMsg) - 1, szMsg);

  011dd	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  011e3	50		 push	 eax
  011e4	68 ff 03 00 00	 push	 1023			; 000003ffH
  011e9	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  011ec	50		 push	 eax
  011ed	6a 7c		 push	 124			; 0000007cH
  011ef	53		 push	 ebx
  011f0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1475 : 				ShowVendorItem[i].index = atoi(szMsg);

  011f5	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  011fb	50		 push	 eax
  011fc	e8 00 00 00 00	 call	 _atoi
  01201	89 87 ab fe ff
	ff		 mov	 DWORD PTR [edi-341], eax
  01207	83 c6 05	 add	 esi, 5

; 1476 : 				ShowVendorItem[i].usage = true;

  0120a	c6 87 af fe ff
	ff 01		 mov	 BYTE PTR [edi-337], 1
  01211	83 c4 18	 add	 esp, 24			; 00000018H
  01214	81 c7 68 05 00
	00		 add	 edi, 1384		; 00000568H
  0121a	89 b5 ec fa ff
	ff		 mov	 DWORD PTR tv3922[ebp], esi
  01220	83 ad e8 fa ff
	ff 01		 sub	 DWORD PTR _count$1$[ebp], 1
  01227	0f 85 e3 fe ff
	ff		 jne	 $LL37@StreetVend

; 1576 : 			}
; 1577 : 		}
; 1578 : 	}
; 1579 : }

  0122d	5f		 pop	 edi
  0122e	5e		 pop	 esi
  0122f	5b		 pop	 ebx
  01230	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01233	33 cd		 xor	 ecx, ebp
  01235	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0123a	8b e5		 mov	 esp, ebp
  0123c	5d		 pop	 ebp
  0123d	c3		 ret	 0
$LN120@StreetVend:

; 1477 : 			}
; 1478 : 		}
; 1479 : 		// [íë§¤ë¬¼ ìì¸ ìë£]
; 1480 : 		else if (szMsg[0] == 'D')

  0123e	3c 44		 cmp	 al, 68			; 00000044H
  01240	0f 85 c4 04 00
	00		 jne	 $LN126@StreetVend

; 1481 : 		{
; 1482 : 			getStringToken(data, '|', 2, sizeof(szMsg) - 1, szMsg);

  01246	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0124c	50		 push	 eax
  0124d	68 ff 03 00 00	 push	 1023			; 000003ffH
  01252	6a 02		 push	 2
  01254	6a 7c		 push	 124			; 0000007cH
  01256	53		 push	 ebx
  01257	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1483 : 			index = atoi(szMsg);

  0125c	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01262	50		 push	 eax
  01263	e8 00 00 00 00	 call	 _atoi
  01268	83 c4 18	 add	 esp, 24			; 00000018H
  0126b	89 85 e8 fa ff
	ff		 mov	 DWORD PTR _index$1$[ebp], eax

; 1484 : 			for (i = 0; i < MAX_SELL_ITEM; i++)

  01271	33 d2		 xor	 edx, edx
  01273	b9 3c 00 00 00	 mov	 ecx, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+60
$LL40@StreetVend:

; 1485 : 			{
; 1486 : 				if (ShowVendorItem[i].usage && ShowVendorItem[i].index == index)

  01278	80 79 04 00	 cmp	 BYTE PTR [ecx+4], 0
  0127c	74 04		 je	 SHORT $LN38@StreetVend
  0127e	39 01		 cmp	 DWORD PTR [ecx], eax
  01280	74 11		 je	 SHORT $LN166@StreetVend
$LN38@StreetVend:

; 1484 : 			for (i = 0; i < MAX_SELL_ITEM; i++)

  01282	81 c1 68 05 00
	00		 add	 ecx, 1384		; 00000568H
  01288	42		 inc	 edx
  01289	81 f9 5c 6c 00
	00		 cmp	 ecx, OFFSET ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A+27740
  0128f	7c e7		 jl	 SHORT $LL40@StreetVend
  01291	eb 08		 jmp	 SHORT $LN234@StreetVend
$LN166@StreetVend:

; 1487 : 				{
; 1488 : 					index = i;

  01293	8b c2		 mov	 eax, edx
  01295	89 95 e8 fa ff
	ff		 mov	 DWORD PTR _index$1$[ebp], edx
$LN234@StreetVend:

; 1489 : 					break;
; 1490 : 				}
; 1491 : 			}
; 1492 : 			if (index >= 0 && index < MAX_SELL_ITEM)

  0129b	83 f8 13	 cmp	 eax, 19			; 00000013H
  0129e	0f 87 66 04 00
	00		 ja	 $LN126@StreetVend

; 1493 : 			{
; 1494 : 				if (ShowVendorItem[index].kind == 0)

  012a4	69 f0 68 05 00
	00		 imul	 esi, eax, 1384
  012aa	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  012b0	50		 push	 eax
  012b1	68 ff 03 00 00	 push	 1023			; 000003ffH
  012b6	6a 03		 push	 3
  012b8	6a 7c		 push	 124			; 0000007cH
  012ba	89 b5 ec fa ff
	ff		 mov	 DWORD PTR tv3952[ebp], esi
  012c0	53		 push	 ebx
  012c1	80 be 91 01 00
	00 00		 cmp	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+401], 0
  012c8	0f 85 a0 00 00
	00		 jne	 $LN127@StreetVend

; 1495 : 				{
; 1496 : 					getStringToken(data, '|', 3, sizeof(szMsg) - 1, szMsg);

  012ce	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1497 : 					strncpy(ShowVendorItem[index].memo, szMsg, sizeof(ShowVendorItem[index].memo));

  012d3	6a 55		 push	 85			; 00000055H
  012d5	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  012db	50		 push	 eax
  012dc	8d 86 7d 00 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+125]
  012e2	50		 push	 eax
  012e3	e8 00 00 00 00	 call	 _strncpy

; 1498 : 					getStringToken(data, '|', 4, sizeof(szMsg) - 1, szMsg);

  012e8	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  012ee	50		 push	 eax
  012ef	68 ff 03 00 00	 push	 1023			; 000003ffH
  012f4	6a 04		 push	 4
  012f6	6a 7c		 push	 124			; 0000007cH
  012f8	53		 push	 ebx
  012f9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1499 : 					strncpy(ShowVendorItem[index].damage, szMsg, sizeof(ShowVendorItem[index].damage));

  012fe	6a 10		 push	 16			; 00000010H
  01300	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01306	50		 push	 eax
  01307	8d 86 d2 00 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+210]
  0130d	50		 push	 eax
  0130e	e8 00 00 00 00	 call	 _strncpy
  01313	83 c4 40	 add	 esp, 64			; 00000040H

; 1500 : 					getStringToken(data, '|', 5, sizeof(szMsg) - 1, szMsg);

  01316	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0131c	50		 push	 eax
  0131d	68 ff 03 00 00	 push	 1023			; 000003ffH
  01322	6a 05		 push	 5
  01324	6a 7c		 push	 124			; 0000007cH
  01326	53		 push	 ebx
  01327	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1501 : 					ShowVendorItem[index].color = atoi(szMsg);

  0132c	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01332	50		 push	 eax
  01333	e8 00 00 00 00	 call	 _atoi
  01338	89 86 0c 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+12], eax

; 1502 : 					getStringToken(data, '|', 6, sizeof(szMsg) - 1, szMsg);

  0133e	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01344	50		 push	 eax
  01345	68 ff 03 00 00	 push	 1023			; 000003ffH
  0134a	6a 06		 push	 6
  0134c	6a 7c		 push	 124			; 0000007cH
  0134e	53		 push	 ebx
  0134f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1503 : 					ShowVendorItem[index].bmpNo = atoi(szMsg);

  01354	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0135a	50		 push	 eax
  0135b	e8 00 00 00 00	 call	 _atoi
  01360	83 c4 30	 add	 esp, 48			; 00000030H
  01363	89 86 00 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi], eax

; 1504 : 				}

  01369	e9 95 03 00 00	 jmp	 $LN45@StreetVend
$LN127@StreetVend:

; 1505 : 				else
; 1506 : 				{
; 1507 : 					int size = sizeof(ShowVendorItem[index].skillname[0]);
; 1508 : 
; 1509 : 					getStringToken(data, '|', 3, sizeof(szMsg) - 1, szMsg);

  0136e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1510 : 					count = atoi(szMsg);

  01373	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01379	50		 push	 eax
  0137a	e8 00 00 00 00	 call	 _atoi
  0137f	83 c4 18	 add	 esp, 24			; 00000018H
  01382	89 45 f8	 mov	 DWORD PTR _count$2$[ebp], eax

; 1511 : 					for (i = 0; i < count; i++)

  01385	33 ff		 xor	 edi, edi
  01387	85 c0		 test	 eax, eax
  01389	7e 50		 jle	 SHORT $LN42@StreetVend

; 1505 : 				else
; 1506 : 				{
; 1507 : 					int size = sizeof(ShowVendorItem[index].skillname[0]);
; 1508 : 
; 1509 : 					getStringToken(data, '|', 3, sizeof(szMsg) - 1, szMsg);

  0138b	8d 8e e2 00 00
	00		 lea	 ecx, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+226]
  01391	89 8d d8 fa ff
	ff		 mov	 DWORD PTR tv3918[ebp], ecx
  01397	8b f1		 mov	 esi, ecx
  01399	0f 1f 80 00 00
	00 00		 npad	 7
$LL43@StreetVend:

; 1512 : 					{
; 1513 : 						getStringToken(data, '|', 4 + i, sizeof(szMsg) - 1, szMsg);

  013a0	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  013a6	50		 push	 eax
  013a7	68 ff 03 00 00	 push	 1023			; 000003ffH
  013ac	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  013af	50		 push	 eax
  013b0	6a 7c		 push	 124			; 0000007cH
  013b2	53		 push	 ebx
  013b3	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1514 : 						strncpy(ShowVendorItem[index].skillname[i], szMsg, size);

  013b8	6a 19		 push	 25			; 00000019H
  013ba	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  013c0	50		 push	 eax
  013c1	56		 push	 esi
  013c2	e8 00 00 00 00	 call	 _strncpy
  013c7	8b 45 f8	 mov	 eax, DWORD PTR _count$2$[ebp]
  013ca	47		 inc	 edi
  013cb	83 c4 20	 add	 esp, 32			; 00000020H
  013ce	83 c6 19	 add	 esi, 25			; 00000019H
  013d1	3b f8		 cmp	 edi, eax
  013d3	7c cb		 jl	 SHORT $LL43@StreetVend
  013d5	8b b5 ec fa ff
	ff		 mov	 esi, DWORD PTR tv3952[ebp]
$LN42@StreetVend:

; 1515 : 					}
; 1516 : 					ShowVendorItem[index].maxSkill = count;

  013db	89 86 38 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+56], eax

; 1517 : 					getStringToken(data, '|', 4 + i, sizeof(szMsg) - 1, szMsg);

  013e1	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  013e7	50		 push	 eax
  013e8	68 ff 03 00 00	 push	 1023			; 000003ffH
  013ed	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  013f0	50		 push	 eax
  013f1	6a 7c		 push	 124			; 0000007cH
  013f3	53		 push	 ebx
  013f4	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1518 : 					ShowVendorItem[index].level = atoi(szMsg);

  013f9	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  013ff	50		 push	 eax
  01400	e8 00 00 00 00	 call	 _atoi
  01405	89 86 10 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+16], eax

; 1519 : 					getStringToken(data, '|', 5 + i, sizeof(szMsg) - 1, szMsg);

  0140b	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01411	50		 push	 eax
  01412	68 ff 03 00 00	 push	 1023			; 000003ffH
  01417	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  0141a	50		 push	 eax
  0141b	6a 7c		 push	 124			; 0000007cH
  0141d	53		 push	 ebx
  0141e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1520 : 					ShowVendorItem[index].maxhp = atoi(szMsg);

  01423	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01429	50		 push	 eax
  0142a	e8 00 00 00 00	 call	 _atoi
  0142f	89 86 14 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+20], eax

; 1521 : 					getStringToken(data, '|', 6 + i, sizeof(szMsg) - 1, szMsg);

  01435	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0143b	50		 push	 eax
  0143c	68 ff 03 00 00	 push	 1023			; 000003ffH
  01441	8d 47 06	 lea	 eax, DWORD PTR [edi+6]
  01444	50		 push	 eax
  01445	6a 7c		 push	 124			; 0000007cH
  01447	53		 push	 ebx
  01448	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0144d	83 c4 44	 add	 esp, 68			; 00000044H

; 1522 : 					ShowVendorItem[index].attack = atoi(szMsg);

  01450	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01456	50		 push	 eax
  01457	e8 00 00 00 00	 call	 _atoi
  0145c	89 86 18 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+24], eax

; 1523 : 					getStringToken(data, '|', 7 + i, sizeof(szMsg) - 1, szMsg);

  01462	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01468	50		 push	 eax
  01469	68 ff 03 00 00	 push	 1023			; 000003ffH
  0146e	8d 47 07	 lea	 eax, DWORD PTR [edi+7]
  01471	50		 push	 eax
  01472	6a 7c		 push	 124			; 0000007cH
  01474	53		 push	 ebx
  01475	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1524 : 					ShowVendorItem[index].defence = atoi(szMsg);

  0147a	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01480	50		 push	 eax
  01481	e8 00 00 00 00	 call	 _atoi
  01486	89 86 1c 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+28], eax

; 1525 : 					getStringToken(data, '|', 8 + i, sizeof(szMsg) - 1, szMsg);

  0148c	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01492	50		 push	 eax
  01493	68 ff 03 00 00	 push	 1023			; 000003ffH
  01498	8d 47 08	 lea	 eax, DWORD PTR [edi+8]
  0149b	50		 push	 eax
  0149c	6a 7c		 push	 124			; 0000007cH
  0149e	53		 push	 ebx
  0149f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1526 : 					ShowVendorItem[index].dex = atoi(szMsg);

  014a4	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  014aa	50		 push	 eax
  014ab	e8 00 00 00 00	 call	 _atoi
  014b0	89 86 20 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+32], eax

; 1527 : 					getStringToken(data, '|', 9 + i, sizeof(szMsg) - 1, szMsg);

  014b6	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  014bc	50		 push	 eax
  014bd	68 ff 03 00 00	 push	 1023			; 000003ffH
  014c2	8d 47 09	 lea	 eax, DWORD PTR [edi+9]
  014c5	50		 push	 eax
  014c6	6a 7c		 push	 124			; 0000007cH
  014c8	53		 push	 ebx
  014c9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  014ce	83 c4 48	 add	 esp, 72			; 00000048H

; 1528 : 					ShowVendorItem[index].earth = atoi(szMsg);

  014d1	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  014d7	50		 push	 eax
  014d8	e8 00 00 00 00	 call	 _atoi
  014dd	89 86 24 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+36], eax

; 1529 : 					getStringToken(data, '|', 10 + i, sizeof(szMsg) - 1, szMsg);

  014e3	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  014e9	50		 push	 eax
  014ea	68 ff 03 00 00	 push	 1023			; 000003ffH
  014ef	8d 47 0a	 lea	 eax, DWORD PTR [edi+10]
  014f2	50		 push	 eax
  014f3	6a 7c		 push	 124			; 0000007cH
  014f5	53		 push	 ebx
  014f6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1530 : 					ShowVendorItem[index].water = atoi(szMsg);

  014fb	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01501	50		 push	 eax
  01502	e8 00 00 00 00	 call	 _atoi
  01507	89 86 28 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+40], eax

; 1531 : 					getStringToken(data, '|', 11 + i, sizeof(szMsg) - 1, szMsg);

  0150d	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01513	50		 push	 eax
  01514	68 ff 03 00 00	 push	 1023			; 000003ffH
  01519	8d 47 0b	 lea	 eax, DWORD PTR [edi+11]
  0151c	50		 push	 eax
  0151d	6a 7c		 push	 124			; 0000007cH
  0151f	53		 push	 ebx
  01520	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1532 : 					ShowVendorItem[index].fire = atoi(szMsg);

  01525	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0152b	50		 push	 eax
  0152c	e8 00 00 00 00	 call	 _atoi
  01531	89 86 2c 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+44], eax

; 1533 : 					getStringToken(data, '|', 12 + i, sizeof(szMsg) - 1, szMsg);

  01537	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0153d	50		 push	 eax
  0153e	68 ff 03 00 00	 push	 1023			; 000003ffH
  01543	8d 47 0c	 lea	 eax, DWORD PTR [edi+12]
  01546	50		 push	 eax
  01547	6a 7c		 push	 124			; 0000007cH
  01549	53		 push	 ebx
  0154a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0154f	83 c4 48	 add	 esp, 72			; 00000048H

; 1534 : 					ShowVendorItem[index].wind = atoi(szMsg);

  01552	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01558	50		 push	 eax
  01559	e8 00 00 00 00	 call	 _atoi
  0155e	89 86 30 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+48], eax

; 1535 : 					getStringToken(data, '|', 13 + i, sizeof(szMsg) - 1, szMsg);

  01564	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0156a	50		 push	 eax
  0156b	68 ff 03 00 00	 push	 1023			; 000003ffH
  01570	8d 47 0d	 lea	 eax, DWORD PTR [edi+13]
  01573	50		 push	 eax
  01574	6a 7c		 push	 124			; 0000007cH
  01576	53		 push	 ebx
  01577	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1536 : 					ShowVendorItem[index].fidelity = atoi(szMsg);

  0157c	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01582	50		 push	 eax
  01583	e8 00 00 00 00	 call	 _atoi
  01588	89 86 34 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+52], eax

; 1537 : 					getStringToken(data, '|', 14 + i, sizeof(szMsg) - 1, szMsg);

  0158e	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01594	50		 push	 eax
  01595	68 ff 03 00 00	 push	 1023			; 000003ffH
  0159a	8d 47 0e	 lea	 eax, DWORD PTR [edi+14]
  0159d	50		 push	 eax
  0159e	6a 7c		 push	 124			; 0000007cH
  015a0	53		 push	 ebx
  015a1	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1538 : 					ShowVendorItem[index].trans = atoi(szMsg);

  015a6	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  015ac	50		 push	 eax
  015ad	e8 00 00 00 00	 call	 _atoi
  015b2	88 86 92 01 00
	00		 mov	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+402], al

; 1539 : 					getStringToken(data, '|', 15 + i, sizeof(szMsg) - 1, szMsg);

  015b8	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  015be	50		 push	 eax
  015bf	68 ff 03 00 00	 push	 1023			; 000003ffH
  015c4	8d 47 0f	 lea	 eax, DWORD PTR [edi+15]
  015c7	50		 push	 eax
  015c8	6a 7c		 push	 124			; 0000007cH
  015ca	53		 push	 ebx
  015cb	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  015d0	83 c4 48	 add	 esp, 72			; 00000048H

; 1540 : 					ShowVendorItem[index].bmpNo = atoi(szMsg);

  015d3	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  015d9	50		 push	 eax
  015da	e8 00 00 00 00	 call	 _atoi
  015df	89 86 00 00 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi], eax
  015e5	83 c4 04	 add	 esp, 4

; 1541 : 					if (pShowPet != NULL)

  015e8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  015ed	85 c0		 test	 eax, eax
  015ef	74 13		 je	 SHORT $LN129@StreetVend

; 1542 : 					{
; 1543 : 						DeathAction(pShowPet);

  015f1	50		 push	 eax
  015f2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  015f7	83 c4 04	 add	 esp, 4

; 1544 : 						pShowPet = NULL;

  015fa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN129@StreetVend:

; 1545 : 					}
; 1546 : 					iMakePetAni = index;

  01604	8b 85 e8 fa ff
	ff		 mov	 eax, DWORD PTR _index$1$[ebp]
  0160a	83 c7 11	 add	 edi, 17			; 00000011H
  0160d	a3 00 00 00 00	 mov	 DWORD PTR ?iMakePetAni@?1??StreetVendorBuyWndfunc@@YAXPAD@Z@4HA, eax
  01612	c7 85 e8 fa ff
	ff 07 00 00 00	 mov	 DWORD PTR tv3917[ebp], 7
  0161c	0f 1f 40 00	 npad	 4
$LL46@StreetVend:

; 1549 : 					{
; 1550 : 						// [ì¥ë¹ìì¹]
; 1551 : 						if (getStringToken(data, '|', 16 + i + j * 6, sizeof(szMsg) - 1, szMsg))

  01620	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01626	50		 push	 eax
  01627	68 ff 03 00 00	 push	 1023			; 000003ffH
  0162c	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  0162f	50		 push	 eax
  01630	6a 7c		 push	 124			; 0000007cH
  01632	53		 push	 ebx
  01633	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  01638	83 c4 14	 add	 esp, 20			; 00000014H
  0163b	85 c0		 test	 eax, eax
  0163d	0f 85 b0 00 00
	00		 jne	 $LN44@StreetVend

; 1552 : 							continue;
; 1553 : 						nPetItemPlace = atoi(szMsg);

  01643	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  01649	50		 push	 eax
  0164a	e8 00 00 00 00	 call	 _atoi

; 1554 : 						// ì´ë¦
; 1555 : 						getStringToken(data, '|', 17 + i + j * 6,

  0164f	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  01655	03 f0		 add	 esi, eax
  01657	8d 86 f1 01 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+497]
  0165d	50		 push	 eax
  0165e	6a 1c		 push	 28			; 0000001cH
  01660	57		 push	 edi
  01661	6a 7c		 push	 124			; 0000007cH
  01663	53		 push	 ebx
  01664	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1556 : 							sizeof(ShowVendorItem[index].oPetItemInfo[nPetItemPlace].name) - 1,
; 1557 : 							ShowVendorItem[index].oPetItemInfo[nPetItemPlace].name);
; 1558 : 						// ê¸°ì 
; 1559 : 						getStringToken(data, '|', 18 + i + j * 6,

  01669	8d 86 9c 01 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+412]
  0166f	50		 push	 eax
  01670	6a 54		 push	 84			; 00000054H
  01672	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  01675	50		 push	 eax
  01676	6a 7c		 push	 124			; 0000007cH
  01678	53		 push	 ebx
  01679	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1560 : 							sizeof(ShowVendorItem[index].oPetItemInfo[nPetItemPlace].memo) - 1,
; 1561 : 							ShowVendorItem[index].oPetItemInfo[nPetItemPlace].memo);
; 1562 : 						// ë´êµ¬ë ¥
; 1563 : 						getStringToken(data, '|', 19 + i + j * 6,

  0167e	8d 86 0e 02 00
	00		 lea	 eax, DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+526]
  01684	50		 push	 eax
  01685	6a 0f		 push	 15			; 0000000fH
  01687	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  0168a	50		 push	 eax
  0168b	6a 7c		 push	 124			; 0000007cH
  0168d	53		 push	 ebx
  0168e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  01693	83 c4 40	 add	 esp, 64			; 00000040H

; 1564 : 							sizeof(ShowVendorItem[index].oPetItemInfo[nPetItemPlace].damage) - 1,
; 1565 : 							ShowVendorItem[index].oPetItemInfo[nPetItemPlace].damage);
; 1566 : 						// íì¤í¸ìì
; 1567 : 						getStringToken(data, '|', 20 + i + j * 6, sizeof(szMsg) - 1, szMsg);

  01696	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0169c	50		 push	 eax
  0169d	68 ff 03 00 00	 push	 1023			; 000003ffH
  016a2	8d 47 03	 lea	 eax, DWORD PTR [edi+3]
  016a5	50		 push	 eax
  016a6	6a 7c		 push	 124			; 0000007cH
  016a8	53		 push	 ebx
  016a9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1568 : 						ShowVendorItem[index].oPetItemInfo[nPetItemPlace].color = atoi(szMsg);

  016ae	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  016b4	50		 push	 eax
  016b5	e8 00 00 00 00	 call	 _atoi
  016ba	89 86 98 01 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+408], eax

; 1569 : 						// ëë©´ë²í¸
; 1570 : 						getStringToken(data, '|', 21 + i + j * 6, sizeof(szMsg) - 1, szMsg);

  016c0	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  016c6	50		 push	 eax
  016c7	68 ff 03 00 00	 push	 1023			; 000003ffH
  016cc	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  016cf	50		 push	 eax
  016d0	6a 7c		 push	 124			; 0000007cH
  016d2	53		 push	 ebx
  016d3	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 1571 : 						ShowVendorItem[index].oPetItemInfo[nPetItemPlace].bmpNo = atoi(szMsg);

  016d8	8d 85 f4 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  016de	50		 push	 eax
  016df	e8 00 00 00 00	 call	 _atoi
  016e4	89 86 94 01 00
	00		 mov	 DWORD PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+404], eax
  016ea	83 c4 30	 add	 esp, 48			; 00000030H
  016ed	8b b5 ec fa ff
	ff		 mov	 esi, DWORD PTR tv3952[ebp]
$LN44@StreetVend:

; 1547 : #ifdef _PET_ITEM
; 1548 : 					for (int j = 0; j < MAX_PET_ITEM; j++)

  016f3	83 c7 06	 add	 edi, 6
  016f6	83 ad e8 fa ff
	ff 01		 sub	 DWORD PTR tv3917[ebp], 1
  016fd	0f 85 1d ff ff
	ff		 jne	 $LL46@StreetVend
$LN45@StreetVend:

; 1572 : 					}
; 1573 : #endif
; 1574 : 				}
; 1575 : 				ShowVendorItem[index].bGetData = true;

  01703	c6 86 42 00 00
	00 01		 mov	 BYTE PTR ?ShowVendorItem@@3PAU_Show_Vendor_Item@@A[esi+66], 1
$LN126@StreetVend:

; 1576 : 			}
; 1577 : 		}
; 1578 : 	}
; 1579 : }

  0170a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0170d	5f		 pop	 edi
  0170e	5e		 pop	 esi
  0170f	33 cd		 xor	 ecx, ebp
  01711	5b		 pop	 ebx
  01712	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01717	8b e5		 mov	 esp, ebp
  01719	5d		 pop	 ebp
  0171a	c3		 ret	 0
  0171b	90		 npad	 1
$LN235@StreetVend:
  0171c	00 00 00 00	 DD	 $LN57@StreetVend
  01720	00 00 00 00	 DD	 $LN230@StreetVend
  01724	00 00 00 00	 DD	 $LN65@StreetVend
  01728	00 00 00 00	 DD	 $LN67@StreetVend
  0172c	00 00 00 00	 DD	 $LN69@StreetVend
?StreetVendorBuyWndfunc@@YAXPAD@Z ENDP			; StreetVendorBuyWndfunc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?StreetVendorWndfunc@@YAX_NPAD@Z
_TEXT	SEGMENT
tv3698 = -1268						; size = 4
tv3621 = -1268						; size = 4
_x$1$ = -1264						; size = 4
_price$1$ = -1264					; size = 4
_y$1$ = -1260						; size = 4
_count$1$ = -1260					; size = 4
tv3709 = -1256						; size = 4
tv3694 = -1256						; size = 4
tv3699 = -1252						; size = 4
_selId$1$ = -1252					; size = 4
_data$GSCopy$1$ = -1248					; size = 4
_count$1$ = -1248					; size = 4
tv3710 = -1248						; size = 4
tv3695 = -1248						; size = 4
_szMsg$1 = -1244					; size = 512
_szTemp$2 = -732					; size = 512
_buf$3 = -220						; size = 64
_szMsg$ = -156						; size = 128
_szTemp1$4 = -28					; size = 16
_temp$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_bReset$ = 8						; size = 1
_data$ = 12						; size = 4
?StreetVendorWndfunc@@YAX_NPAD@Z PROC			; StreetVendorWndfunc, COMDAT

; 582  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f4 04 00
	00		 sub	 esp, 1268		; 000004f4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 583  : 	int i, j, x, y, itemx, itemy, selId = 0;
; 584  : 	char temp[8], szMsg[128];
; 585  : 	static int iBtn[7], iSellItemBtn[MAX_SELL_ITEM], iItemOnSell[15], iShowPet, iPetOnSell[MAX_PET], iGetSellPrice, iListStart;
; 586  : 	static ITEM* pItem = NULL;
; 587  : 	static bool bChangePet = true, bRunSellPrice = false;
; 588  : 	static Show_Sell_Item* pShowSellItem = NULL;
; 589  : 
; 590  : 	if (pActStreetVendorWnd == NULL)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A ; pActStreetVendorWnd
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	8b 75 0c	 mov	 esi, DWORD PTR _data$[ebp]
  0001d	89 b5 20 fb ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], esi
  00023	57		 push	 edi
  00024	85 c0		 test	 eax, eax
  00026	0f 85 3c 03 00
	00		 jne	 $LN34@StreetVend

; 591  : 	{
; 592  : 		//JL800600
; 593  : 		int tempX, tempY;
; 594  : 		if (DISPLACEMENT_X == 0)

  0002c	39 05 00 00 00
	00		 cmp	 DWORD PTR ?DISPLACEMENT_X@@3HA, eax ; DISPLACEMENT_X
  00032	75 13		 jne	 SHORT $LN36@StreetVend

; 595  : 		{
; 596  : 			tempX = (DEF_APPSIZEX >> 1) - (622 >> 1);

  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX

; 597  : 			tempY = 20;

  00039	b9 14 00 00 00	 mov	 ecx, 20			; 00000014H
  0003e	d1 f8		 sar	 eax, 1
  00040	2d 37 01 00 00	 sub	 eax, 311		; 00000137H

; 598  : 		}

  00045	eb 07		 jmp	 SHORT $LN37@StreetVend
$LN36@StreetVend:

; 599  : 		else
; 600  : 		{
; 601  : 			tempX = 41;

  00047	b8 29 00 00 00	 mov	 eax, 41			; 00000029H

; 602  : 			tempY = 41;

  0004c	8b c8		 mov	 ecx, eax
$LN37@StreetVend:

; 603  : 		}
; 604  : 
; 605  : 		pActStreetVendorWnd = MakeWindowDisp(tempX, tempY, 622, 413, CG_FIELD_SV_SELL_PANEL, -1);

  0004e	6a ff		 push	 -1
  00050	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FIELD_SV_SELL_PANEL@@3HA ; CG_FIELD_SV_SELL_PANEL
  00056	68 9d 01 00 00	 push	 413			; 0000019dH
  0005b	68 6e 02 00 00	 push	 622			; 0000026eH
  00060	51		 push	 ecx
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 606  : 
; 607  : 
; 608  : 		memset(iBtn, -1, sizeof(iBtn));

  00067	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  0006e	8b f8		 mov	 edi, eax

; 609  : 		memset(iItemOnSell, -1, sizeof(iItemOnSell));

  00070	6a 3c		 push	 60			; 0000003cH
  00072	6a ff		 push	 -1
  00074	68 00 00 00 00	 push	 OFFSET ?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
  00079	89 3d 00 00 00
	00		 mov	 DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A, edi ; pActStreetVendorWnd
  0007f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA, xmm0
  00086	c7 05 18 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+24, -1
  00090	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+16, xmm0
  00098	e8 00 00 00 00	 call	 _memset

; 610  : 		memset(iPetOnSell, -1, sizeof(iPetOnSell));

  0009d	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  000a4	83 c4 24	 add	 esp, 36			; 00000024H
  000a7	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA, xmm0
  000ae	c7 05 10 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+16, -1
  000b8	b8 2b 00 00 00	 mov	 eax, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+43
  000bd	0f 1f 00	 npad	 3
$LL4@StreetVend:

; 611  : 		for (i = 0; i < MAX_SELL_ITEM; i++)
; 612  : 		{
; 613  : 			ShowSellItem[i].name[0] = '\0';
; 614  : 			ShowSellItem[i].freeName[0] = '\0';
; 615  : 			ShowSellItem[i].needGetPrice = false;
; 616  : 			ShowSellItem[i].pile = 0;
; 617  : 			ShowSellItem[i].price = 0;
; 618  : 			ShowSellItem[i].usage = false;

  000c0	66 c7 40 e2 00
	00		 mov	 WORD PTR [eax-30], 0
  000c6	c6 00 00	 mov	 BYTE PTR [eax], 0
  000c9	c6 40 e1 00	 mov	 BYTE PTR [eax-31], 0
  000cd	c7 40 d9 00 00
	00 00		 mov	 DWORD PTR [eax-39], 0
  000d4	c7 40 dd 00 00
	00 00		 mov	 DWORD PTR [eax-35], 0

; 619  : 			ShowSellItem[i].kind = -1;

  000db	c6 40 1d ff	 mov	 BYTE PTR [eax+29], -1

; 620  : 			ShowSellItem[i].index = -1;

  000df	c7 40 d5 ff ff
	ff ff		 mov	 DWORD PTR [eax-43], -1
  000e6	83 c0 4c	 add	 eax, 76			; 0000004cH
  000e9	3d 1b 06 00 00	 cmp	 eax, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+1563
  000ee	7c d0		 jl	 SHORT $LL4@StreetVend

; 621  : 		}
; 622  : 		if (bReset)

  000f0	80 7d 08 00	 cmp	 BYTE PTR _bReset$[ebp], 0
  000f4	74 56		 je	 SHORT $LN38@StreetVend

; 623  : 		{
; 624  : 			//[ì í¸ ë¬¸ì ì´ê¸°í]
; 625  : 			ZeroMemory(str_bufferVendorName.buffer, sizeof(str_bufferVendorName.buffer));

  000f6	68 04 01 00 00	 push	 260			; 00000104H
  000fb	6a 00		 push	 0
  000fd	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  00102	e8 00 00 00 00	 call	 _memset

; 626  : 			str_bufferVendorName.cnt = 0;

  00107	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+263, 0
  00110	83 c4 0c	 add	 esp, 12			; 0000000cH

; 627  : 			str_bufferVendorName.cursor = 0;

  00113	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+265, 0

; 628  : 			str_bufferVendorName.color = 0;
; 629  : 			str_bufferVendorName.len = 20;

  0011a	66 c7 05 04 01
	00 00 14 14	 mov	 WORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+260, 5140 ; 00001414H

; 630  : 			str_bufferVendorName.lineLen = 20;
; 631  : 			str_bufferVendorName.lineDist = 0;

  00123	c6 05 06 01 00
	00 00		 mov	 BYTE PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+262, 0

; 632  : 			str_bufferVendorName.x = pActStreetVendorWnd->x + 25;

  0012a	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0012d	83 c0 19	 add	 eax, 25			; 00000019H
  00130	a3 0c 01 00 00	 mov	 DWORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+268, eax

; 633  : 			str_bufferVendorName.y = pActStreetVendorWnd->y + 346;

  00135	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00138	05 5a 01 00 00	 add	 eax, 346		; 0000015aH

; 634  : 			str_bufferVendorName.fontPrio = FONT_PRIO_FRONT;

  0013d	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+284, 1
  00147	a3 10 01 00 00	 mov	 DWORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+272, eax
$LN38@StreetVend:

; 635  : 		}
; 636  : 		pItem = pc.item;
; 637  : 		iShowPet = 0;
; 638  : 		iListStart = 0;
; 639  : 		bChangePet = true;
; 640  : 		bRunSellPrice = false;
; 641  : 		if (pShowPet != NULL)

  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00151	c7 05 00 00 00
	00 c4 00 00 00	 mov	 DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A, OFFSET ?pc@@3UPC@@A+196
  0015b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 0
  00165	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 0
  0016f	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  00176	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  0017d	85 c0		 test	 eax, eax
  0017f	74 13		 je	 SHORT $LN39@StreetVend

; 642  : 		{
; 643  : 			DeathAction(pShowPet);

  00181	50		 push	 eax
  00182	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00187	83 c4 04	 add	 esp, 4

; 644  : 			pShowPet = NULL;

  0018a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN39@StreetVend:

; 645  : 		}
; 646  : 		pShowSellItem = NULL;

  00194	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A, 0

; 647  : 		if (data != NULL)

  0019e	85 f6		 test	 esi, esi
  001a0	0f 84 c5 0d 00
	00		 je	 $LN45@StreetVend

; 648  : 		{
; 649  : 			int count = 0, kind, index, price;
; 650  : 
; 651  : 			getStringToken(data, '|', 2, sizeof(szMsg) - 1, szMsg);

  001a6	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  001ac	50		 push	 eax
  001ad	6a 7f		 push	 127			; 0000007fH
  001af	6a 02		 push	 2
  001b1	6a 7c		 push	 124			; 0000007cH
  001b3	56		 push	 esi
  001b4	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 652  : 			count = atoi(szMsg);

  001b9	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 _atoi
  001c5	83 c4 18	 add	 esp, 24			; 00000018H
  001c8	89 85 14 fb ff
	ff		 mov	 DWORD PTR _count$1$[ebp], eax

; 653  : 			for (i = 0; i < count; i++)

  001ce	85 c0		 test	 eax, eax
  001d0	0f 8e 95 0d 00
	00		 jle	 $LN45@StreetVend

; 648  : 		{
; 649  : 			int count = 0, kind, index, price;
; 650  : 
; 651  : 			getStringToken(data, '|', 2, sizeof(szMsg) - 1, szMsg);

  001d6	bf 04 00 00 00	 mov	 edi, 4
  001db	0f 1f 44 00 00	 npad	 5
$LL7@StreetVend:

; 654  : 			{
; 655  : 				getStringToken(data, '|', 3 + i * 3, sizeof(szMsg) - 1, szMsg);

  001e0	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  001e6	50		 push	 eax
  001e7	6a 7f		 push	 127			; 0000007fH
  001e9	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  001ec	50		 push	 eax
  001ed	6a 7c		 push	 124			; 0000007cH
  001ef	56		 push	 esi
  001f0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 656  : 				kind = atoi(szMsg);

  001f5	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  001fb	50		 push	 eax
  001fc	e8 00 00 00 00	 call	 _atoi
  00201	8b d8		 mov	 ebx, eax

; 657  : 				getStringToken(data, '|', 4 + i * 3, sizeof(szMsg) - 1, szMsg);

  00203	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00209	50		 push	 eax
  0020a	6a 7f		 push	 127			; 0000007fH
  0020c	57		 push	 edi
  0020d	6a 7c		 push	 124			; 0000007cH
  0020f	56		 push	 esi
  00210	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 658  : 				index = atoi(szMsg);

  00215	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0021b	50		 push	 eax
  0021c	e8 00 00 00 00	 call	 _atoi
  00221	8b f0		 mov	 esi, eax

; 659  : 				getStringToken(data, '|', 5 + i * 3, sizeof(szMsg) - 1, szMsg);

  00223	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  00226	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0022c	50		 push	 eax
  0022d	6a 7f		 push	 127			; 0000007fH
  0022f	51		 push	 ecx
  00230	6a 7c		 push	 124			; 0000007cH
  00232	ff b5 20 fb ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  00238	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0023d	83 c4 44	 add	 esp, 68			; 00000044H

; 660  : 				price = atoi(szMsg);

  00240	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 _atoi

; 661  : 				pShowSellItem = GetEmptyShowSellItem(ShowSellItem);

  0024c	68 00 00 00 00	 push	 OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A
  00251	89 85 10 fb ff
	ff		 mov	 DWORD PTR _price$1$[ebp], eax
  00257	e8 00 00 00 00	 call	 ?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z ; GetEmptyShowSellItem
  0025c	8b c8		 mov	 ecx, eax
  0025e	83 c4 08	 add	 esp, 8
  00261	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A, ecx
  00267	85 c9		 test	 ecx, ecx

; 662  : 				if (pShowSellItem != NULL)

  00269	0f 84 d2 00 00
	00		 je	 $LN5@StreetVend

; 663  : 				{
; 664  : 					// ìí
; 665  : 					if (kind == 0 && pItem[index].useFlag)

  0026f	85 db		 test	 ebx, ebx
  00271	75 61		 jne	 SHORT $LN42@StreetVend
  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  00278	69 de 7c 01 00
	00		 imul	 ebx, esi, 380
  0027e	66 83 bc 03 dc
	00 00 00 00	 cmp	 WORD PTR [ebx+eax+220], 0
  00287	0f 84 b4 00 00
	00		 je	 $LN5@StreetVend

; 666  : 					{
; 667  : 						pShowSellItem->kind = kind;
; 668  : 						pShowSellItem->index = index;
; 669  : 						pShowSellItem->price = price;

  0028d	8b 95 10 fb ff
	ff		 mov	 edx, DWORD PTR _price$1$[ebp]

; 670  : 						sprintf(pShowSellItem->name, "%s", pItem[index].name);

  00293	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  00298	03 c3		 add	 eax, ebx
  0029a	c6 41 48 00	 mov	 BYTE PTR [ecx+72], 0
  0029e	50		 push	 eax
  0029f	8d 41 0e	 lea	 eax, DWORD PTR [ecx+14]
  002a2	89 31		 mov	 DWORD PTR [ecx], esi
  002a4	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  002a9	50		 push	 eax
  002aa	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  002ad	e8 00 00 00 00	 call	 _sprintf

; 671  : 						pShowSellItem->pile = pItem[index].pile;

  002b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  002b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  002ba	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  002c0	8b 44 03 0c	 mov	 eax, DWORD PTR [ebx+eax+12]
  002c4	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 672  : 						pShowSellItem->usage = true;

  002c7	c6 41 0d 01	 mov	 BYTE PTR [ecx+13], 1

; 673  : 						iItemOnSell[index - 9] = index;

  002cb	89 34 b5 dc ff
	ff ff		 mov	 DWORD PTR ?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[esi*4-36], esi

; 674  : 					}

  002d2	eb 6d		 jmp	 SHORT $LN5@StreetVend
$LN42@StreetVend:

; 675  : 					// íí¸
; 676  : 					else if (kind == 1 && pet[index].useFlag)

  002d4	83 fb 01	 cmp	 ebx, 1
  002d7	75 68		 jne	 SHORT $LN5@StreetVend
  002d9	69 de 78 0b 00
	00		 imul	 ebx, esi, 2936
  002df	66 83 bb 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[ebx+118], 0
  002e7	74 58		 je	 SHORT $LN5@StreetVend

; 677  : 					{
; 678  : 						pShowSellItem->kind = kind;
; 679  : 						pShowSellItem->index = index;
; 680  : 						pShowSellItem->price = price;

  002e9	8b 95 10 fb ff
	ff		 mov	 edx, DWORD PTR _price$1$[ebp]

; 681  : 						sprintf(pShowSellItem->name, "%s", pet[index].name);

  002ef	8d 83 54 00 00
	00		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[ebx+84]
  002f5	50		 push	 eax
  002f6	8d 41 0e	 lea	 eax, DWORD PTR [ecx+14]
  002f9	c6 41 48 01	 mov	 BYTE PTR [ecx+72], 1
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00302	50		 push	 eax
  00303	89 31		 mov	 DWORD PTR [ecx], esi
  00305	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00308	e8 00 00 00 00	 call	 _sprintf

; 682  : 						sprintf(pShowSellItem->freeName, "%s", pet[index].freeName);

  0030d	8d 83 65 00 00
	00		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[ebx+101]
  00313	50		 push	 eax
  00314	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  00319	83 c0 2b	 add	 eax, 43			; 0000002bH
  0031c	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 _sprintf

; 683  : 						pShowSellItem->pile = 1;

  00327	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  0032c	83 c4 18	 add	 esp, 24			; 00000018H
  0032f	c7 40 04 01 00
	00 00		 mov	 DWORD PTR [eax+4], 1

; 684  : 						pShowSellItem->usage = true;

  00336	c6 40 0d 01	 mov	 BYTE PTR [eax+13], 1

; 685  : 						iPetOnSell[index] = index;

  0033a	89 34 b5 00 00
	00 00		 mov	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[esi*4], esi
$LN5@StreetVend:

; 653  : 			for (i = 0; i < count; i++)

  00341	8b b5 20 fb ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  00347	83 c7 03	 add	 edi, 3
  0034a	83 ad 14 fb ff
	ff 01		 sub	 DWORD PTR _count$1$[ebp], 1
  00351	0f 85 89 fe ff
	ff		 jne	 $LL7@StreetVend

; 1035 : 				((WINDOW_DISP*)pActStreetVendorWnd->pYobi)->my,
; 1036 : 				DISP_PRIO_MENU, CG_FIELD_SV_SELL_PANEL, 1);
; 1037 : 		}
; 1038 : 	}
; 1039 : }

  00357	5f		 pop	 edi
  00358	5e		 pop	 esi
  00359	5b		 pop	 ebx
  0035a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0035d	33 cd		 xor	 ecx, ebp
  0035f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00364	8b e5		 mov	 esp, ebp
  00366	5d		 pop	 ebp
  00367	c3		 ret	 0
$LN34@StreetVend:

; 686  : 					}
; 687  : 				}
; 688  : 			}
; 689  : 		}
; 690  : 	}
; 691  : 	else
; 692  : 	{
; 693  : 		if (pActStreetVendorWnd->hp > 0)

  00368	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0036c	0f 8e f9 0b 00
	00		 jle	 $LN45@StreetVend

; 694  : 		{
; 695  : 			if (bRunSellPrice)

  00372	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00379	0f 84 88 00 00
	00		 je	 $LN47@StreetVend

; 696  : 			{
; 697  : 				iGetSellPrice = SellPriceWndfunc();

  0037f	e8 00 00 00 00	 call	 ?SellPriceWndfunc@@YAHXZ ; SellPriceWndfunc
  00384	a3 00 00 00 00	 mov	 DWORD PTR ?iGetSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, eax

; 698  : 				if (iGetSellPrice != -1)

  00389	83 f8 ff	 cmp	 eax, -1
  0038c	74 74		 je	 SHORT $LN194@StreetVend

; 699  : 				{
; 700  : 					for (i = 0; i < MAX_SELL_ITEM; i++)

  0038e	b9 0c 00 00 00	 mov	 ecx, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+12
$LL10@StreetVend:

; 701  : 					{
; 702  : 						if (ShowSellItem[i].needGetPrice)

  00393	80 39 00	 cmp	 BYTE PTR [ecx], 0
  00396	74 06		 je	 SHORT $LN8@StreetVend

; 703  : 						{
; 704  : 							ShowSellItem[i].price = iGetSellPrice;

  00398	89 41 fc	 mov	 DWORD PTR [ecx-4], eax

; 705  : 							ShowSellItem[i].needGetPrice = false;

  0039b	c6 01 00	 mov	 BYTE PTR [ecx], 0
$LN8@StreetVend:

; 701  : 					{
; 702  : 						if (ShowSellItem[i].needGetPrice)

  0039e	80 79 4c 00	 cmp	 BYTE PTR [ecx+76], 0
  003a2	74 07		 je	 SHORT $LN183@StreetVend

; 703  : 						{
; 704  : 							ShowSellItem[i].price = iGetSellPrice;

  003a4	89 41 48	 mov	 DWORD PTR [ecx+72], eax

; 705  : 							ShowSellItem[i].needGetPrice = false;

  003a7	c6 41 4c 00	 mov	 BYTE PTR [ecx+76], 0
$LN183@StreetVend:

; 701  : 					{
; 702  : 						if (ShowSellItem[i].needGetPrice)

  003ab	80 b9 98 00 00
	00 00		 cmp	 BYTE PTR [ecx+152], 0
  003b2	74 0d		 je	 SHORT $LN184@StreetVend

; 703  : 						{
; 704  : 							ShowSellItem[i].price = iGetSellPrice;

  003b4	89 81 94 00 00
	00		 mov	 DWORD PTR [ecx+148], eax

; 705  : 							ShowSellItem[i].needGetPrice = false;

  003ba	c6 81 98 00 00
	00 00		 mov	 BYTE PTR [ecx+152], 0
$LN184@StreetVend:

; 701  : 					{
; 702  : 						if (ShowSellItem[i].needGetPrice)

  003c1	80 b9 e4 00 00
	00 00		 cmp	 BYTE PTR [ecx+228], 0
  003c8	74 0d		 je	 SHORT $LN185@StreetVend

; 703  : 						{
; 704  : 							ShowSellItem[i].price = iGetSellPrice;

  003ca	89 81 e0 00 00
	00		 mov	 DWORD PTR [ecx+224], eax

; 705  : 							ShowSellItem[i].needGetPrice = false;

  003d0	c6 81 e4 00 00
	00 00		 mov	 BYTE PTR [ecx+228], 0
$LN185@StreetVend:

; 701  : 					{
; 702  : 						if (ShowSellItem[i].needGetPrice)

  003d7	80 b9 30 01 00
	00 00		 cmp	 BYTE PTR [ecx+304], 0
  003de	74 0d		 je	 SHORT $LN166@StreetVend

; 703  : 						{
; 704  : 							ShowSellItem[i].price = iGetSellPrice;

  003e0	89 81 2c 01 00
	00		 mov	 DWORD PTR [ecx+300], eax

; 705  : 							ShowSellItem[i].needGetPrice = false;

  003e6	c6 81 30 01 00
	00 00		 mov	 BYTE PTR [ecx+304], 0
$LN166@StreetVend:

; 699  : 				{
; 700  : 					for (i = 0; i < MAX_SELL_ITEM; i++)

  003ed	81 c1 7c 01 00
	00		 add	 ecx, 380		; 0000017cH
  003f3	81 f9 fc 05 00
	00		 cmp	 ecx, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+1532
  003f9	7c 98		 jl	 SHORT $LL10@StreetVend

; 706  : 						}
; 707  : 					}
; 708  : 					bRunSellPrice = false;

  003fb	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
$LN194@StreetVend:

; 709  : 				}
; 710  : 			}
; 711  : 			x = pActStreetVendorWnd->x;

  00402	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A ; pActStreetVendorWnd
$LN47@StreetVend:
  00407	8b 78 18	 mov	 edi, DWORD PTR [eax+24]

; 712  : 			y = pActStreetVendorWnd->y;

  0040a	8b 58 1c	 mov	 ebx, DWORD PTR [eax+28]

; 713  : 			selId = focusFontId(iSellItemBtn, sizeof(iSellItemBtn) / sizeof(int));

  0040d	6a 14		 push	 20			; 00000014H
  0040f	68 00 00 00 00	 push	 OFFSET ?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
  00414	89 bd 10 fb ff
	ff		 mov	 DWORD PTR _x$1$[ebp], edi
  0041a	89 9d 14 fb ff
	ff		 mov	 DWORD PTR _y$1$[ebp], ebx
  00420	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId

; 714  : 
; 715  : 			// [buttonì´ ëíëë ìì¹ íì ë° ì¤ì ]
; 716  : 			// [íì íë¤]
; 717  : 			iBtn[0] = StockDispBuffer(x + 80, y + 388, DISP_PRIO_IME3, 26289, 2);

  00425	6a 02		 push	 2
  00427	68 b1 66 00 00	 push	 26289			; 000066b1H
  0042c	6a 69		 push	 105			; 00000069H
  0042e	8d b3 84 01 00
	00		 lea	 esi, DWORD PTR [ebx+388]
  00434	89 85 1c fb ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], eax
  0043a	8d 4f 50	 lea	 ecx, DWORD PTR [edi+80]
  0043d	56		 push	 esi
  0043e	51		 push	 ecx
  0043f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 718  : 			// [ì·¨ì]
; 719  : 			iBtn[1] = StockDispBuffer(x + 230, y + 388, DISP_PRIO_IME3, 26291, 2);

  00444	6a 02		 push	 2
  00446	68 b3 66 00 00	 push	 26291			; 000066b3H
  0044b	6a 69		 push	 105			; 00000069H
  0044d	a3 00 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA, eax
  00452	8d 87 e6 00 00
	00		 lea	 eax, DWORD PTR [edi+230]
  00458	56		 push	 esi
  00459	50		 push	 eax
  0045a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 720  : 			// [ìê¶ íì´í]
; 721  : 			iBtn[2] = StockDispBuffer(x + 305, y + 44, DISP_PRIO_IME3, 26331, 2);

  0045f	6a 02		 push	 2
  00461	68 db 66 00 00	 push	 26331			; 000066dbH
  00466	a3 04 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+4, eax
  0046b	8d b7 31 01 00
	00		 lea	 esi, DWORD PTR [edi+305]
  00471	6a 69		 push	 105			; 00000069H
  00473	8d 43 2c	 lea	 eax, DWORD PTR [ebx+44]
  00476	50		 push	 eax
  00477	56		 push	 esi
  00478	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0047d	83 c4 44	 add	 esp, 68			; 00000044H
  00480	a3 08 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+8, eax

; 722  : 			// [íê¶ íì´í]
; 723  : 			iBtn[3] = StockDispBuffer(x + 305, y + 304, DISP_PRIO_IME3, 26332, 2);

  00485	8d 83 30 01 00
	00		 lea	 eax, DWORD PTR [ebx+304]
  0048b	6a 02		 push	 2
  0048d	68 dc 66 00 00	 push	 26332			; 000066dcH
  00492	6a 69		 push	 105			; 00000069H
  00494	50		 push	 eax
  00495	56		 push	 esi
  00496	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 724  : 			// [ë°©ì¹ ë²í¼]
; 725  : 			iBtn[4] = StockDispBuffer(x + 335, y + 300, DISP_PRIO_IME3, 26062, 2);

  0049b	6a 02		 push	 2
  0049d	68 ce 65 00 00	 push	 26062			; 000065ceH
  004a2	a3 0c 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+12, eax
  004a7	8d 83 2c 01 00
	00		 lea	 eax, DWORD PTR [ebx+300]
  004ad	6a 69		 push	 105			; 00000069H
  004af	50		 push	 eax
  004b0	8d 87 4f 01 00
	00		 lea	 eax, DWORD PTR [edi+335]
  004b6	50		 push	 eax
  004b7	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 726  : 			// [ì¼ìª½ íì´í]
; 727  : 			iBtn[5] = StockDispBuffer(x + 520, y + 60, DISP_PRIO_IME3, 26047, 2);

  004bc	6a 02		 push	 2
  004be	68 bf 65 00 00	 push	 26047			; 000065bfH
  004c3	6a 69		 push	 105			; 00000069H
  004c5	a3 10 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+16, eax
  004ca	8d 73 3c	 lea	 esi, DWORD PTR [ebx+60]
  004cd	8d 87 08 02 00
	00		 lea	 eax, DWORD PTR [edi+520]
  004d3	56		 push	 esi
  004d4	50		 push	 eax
  004d5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 728  : 			// [ì¤ë¥¸ìª½ íì´í]
; 729  : 			iBtn[6] = StockDispBuffer(x + 570, y + 60, DISP_PRIO_IME3, 26048, 2);

  004da	6a 02		 push	 2
  004dc	68 c0 65 00 00	 push	 26048			; 000065c0H
  004e1	6a 69		 push	 105			; 00000069H
  004e3	a3 14 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+20, eax
  004e8	8d 87 3a 02 00
	00		 lea	 eax, DWORD PTR [edi+570]
  004ee	56		 push	 esi
  004ef	50		 push	 eax
  004f0	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 730  : 
; 731  : 			// [ì¼ìª½ì ìë ë¬¼ê±´ ëª©ë¡ íì]
; 732  : 			for (i = iListStart, j = 0; i < iListStart + 10; i++, j++)

  004f5	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  004fb	83 c4 50	 add	 esp, 80			; 00000050H
  004fe	a3 18 00 00 00	 mov	 DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+24, eax
  00503	8d 43 0a	 lea	 eax, DWORD PTR [ebx+10]
  00506	3b d8		 cmp	 ebx, eax
  00508	0f 8d e8 00 00
	00		 jge	 $LN12@StreetVend

; 709  : 				}
; 710  : 			}
; 711  : 			x = pActStreetVendorWnd->x;

  0050e	6b f3 4c	 imul	 esi, ebx, 76
  00511	33 ff		 xor	 edi, edi
  00513	89 bd 20 fb ff
	ff		 mov	 DWORD PTR tv3710[ebp], edi
  00519	c7 85 18 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv3709[ebp], OFFSET ?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
  00523	81 c6 48 00 00
	00		 add	 esi, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+72
  00529	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@StreetVend:

; 733  : 			{
; 734  : 				if (ShowSellItem[i].usage)

  00530	80 7e c5 00	 cmp	 BYTE PTR [esi-59], 0
  00534	74 67		 je	 SHORT $LN49@StreetVend

; 735  : 				{
; 736  : 					if (ShowSellItem[i].kind == 0)

  00536	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00539	8b 46 c0	 mov	 eax, DWORD PTR [esi-64]
  0053c	75 1c		 jne	 SHORT $LN51@StreetVend

; 737  : 					{
; 738  : 						if (ShowSellItem[i].price == 0)

  0053e	8b 7e bc	 mov	 edi, DWORD PTR [esi-68]
  00541	85 c0		 test	 eax, eax
  00543	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_01MMEEDKFM@X@

; 739  : 							sprintf(szMsg, "%-20sx%3d%13s", ShowSellItem[i].name, ShowSellItem[i].pile, "X");
; 740  : 						else
; 741  : 							sprintf(szMsg, "%-20sx%3d%13d", ShowSellItem[i].name, ShowSellItem[i].pile, ShowSellItem[i].price);
; 742  : 					}

  00548	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@MINOFDLM@?$CF?920sx?$CF3d?$CF13d@
  0054d	0f 45 d0	 cmovne	 edx, eax
  00550	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_0O@MNFNNHCK@?$CF?920sx?$CF3d?$CF13s@
  00555	0f 44 c8	 cmove	 ecx, eax
  00558	eb 1a		 jmp	 SHORT $LN56@StreetVend
$LN51@StreetVend:

; 743  : 					else
; 744  : 					{
; 745  : 						if (ShowSellItem[i].price == 0)

  0055a	8d 7e e3	 lea	 edi, DWORD PTR [esi-29]
  0055d	85 c0		 test	 eax, eax
  0055f	75 0c		 jne	 SHORT $LN55@StreetVend

; 746  : 							sprintf(szMsg, "%-17s%-12s%8s", ShowSellItem[i].name, ShowSellItem[i].freeName, "è®®ä»·");

  00561	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OKDFECEM@?$CF?917s?$CF?912s?$CF8s@
  00566	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_03CAPDGGPL@?$DP?K?$MA@
  0056b	eb 07		 jmp	 SHORT $LN56@StreetVend
$LN55@StreetVend:

; 747  : 						else
; 748  : 							sprintf(szMsg, "%-17s%-12s%8d", ShowSellItem[i].name, ShowSellItem[i].freeName, ShowSellItem[i].price);

  0056d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@OPLGMGNK@?$CF?917s?$CF?912s?$CF8d@
  00572	8b d0		 mov	 edx, eax
$LN56@StreetVend:

; 749  : 					}
; 750  : 					iSellItemBtn[j] = StockFontBuffer(x + 20, y + 32 + 28 * j, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 2);

  00574	52		 push	 edx
  00575	57		 push	 edi
  00576	8d 46 c6	 lea	 eax, DWORD PTR [esi-58]
  00579	50		 push	 eax
  0057a	51		 push	 ecx
  0057b	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 _sprintf

; 751  : 				}

  00587	8b bd 20 fb ff
	ff		 mov	 edi, DWORD PTR tv3710[ebp]
  0058d	8d 85 64 ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00593	83 c4 14	 add	 esp, 20			; 00000014H
  00596	b9 02 00 00 00	 mov	 ecx, 2
  0059b	eb 07		 jmp	 SHORT $LN11@StreetVend
$LN49@StreetVend:

; 752  : 				else
; 753  : 					iSellItemBtn[j] = StockFontBuffer(x + 20, y + 32 + 28 * j, FONT_PRIO_FRONT, FONT_PAL_WHITE, "", 0);

  0059d	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_00CNPNBAHC@@
  005a2	33 c9		 xor	 ecx, ecx
$LN11@StreetVend:

; 730  : 
; 731  : 			// [ì¼ìª½ì ìë ë¬¼ê±´ ëª©ë¡ íì]
; 732  : 			for (i = iListStart, j = 0; i < iListStart + 10; i++, j++)

  005a4	51		 push	 ecx
  005a5	50		 push	 eax
  005a6	8b 85 14 fb ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  005ac	83 c0 20	 add	 eax, 32			; 00000020H
  005af	6a 00		 push	 0
  005b1	03 c7		 add	 eax, edi
  005b3	6a 01		 push	 1
  005b5	50		 push	 eax
  005b6	8b 85 10 fb ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  005bc	83 c0 14	 add	 eax, 20			; 00000014H
  005bf	50		 push	 eax
  005c0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005c5	8b 8d 18 fb ff
	ff		 mov	 ecx, DWORD PTR tv3709[ebp]
  005cb	43		 inc	 ebx
  005cc	83 c7 1c	 add	 edi, 28			; 0000001cH
  005cf	83 c4 18	 add	 esp, 24			; 00000018H
  005d2	83 c6 4c	 add	 esi, 76			; 0000004cH
  005d5	89 bd 20 fb ff
	ff		 mov	 DWORD PTR tv3710[ebp], edi
  005db	89 01		 mov	 DWORD PTR [ecx], eax
  005dd	83 c1 04	 add	 ecx, 4
  005e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  005e5	83 c0 0a	 add	 eax, 10			; 0000000aH
  005e8	89 8d 18 fb ff
	ff		 mov	 DWORD PTR tv3709[ebp], ecx
  005ee	3b d8		 cmp	 ebx, eax
  005f0	0f 8c 3a ff ff
	ff		 jl	 $LL13@StreetVend
$LN12@StreetVend:
  005f6	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44

; 754  : 			}
; 755  : 
; 756  : 			for (i = 0; i < 7; i++)

  005fb	33 f6		 xor	 esi, esi
  005fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00603	83 e0 01	 and	 eax, 1
$LL16@StreetVend:

; 757  : 			{
; 758  : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  00606	bb 04 00 00 00	 mov	 ebx, 4
  0060b	85 c0		 test	 eax, eax
  0060d	74 09		 je	 SHORT $LN14@StreetVend

; 759  : 				{
; 760  : 					if (HitDispNo == iBtn[i])

  0060f	3b 0c b5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[esi*4]
  00616	74 5a		 je	 SHORT $LN138@StreetVend
$LN14@StreetVend:

; 754  : 			}
; 755  : 
; 756  : 			for (i = 0; i < 7; i++)

  00618	46		 inc	 esi
  00619	83 fe 07	 cmp	 esi, 7
  0061c	7c e8		 jl	 SHORT $LL16@StreetVend
$LN195@StreetVend:

; 880  : 							}
; 881  : 							break;
; 882  : 						}
; 883  : 						break;
; 884  : 					}
; 885  : 				}
; 886  : 			}
; 887  : 			if (!bRunSellPrice)

  0061e	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00625	0f 85 1a 04 00
	00		 jne	 $LN188@StreetVend
$LN181@StreetVend:
  0062b	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44

; 888  : 			{
; 889  : 				for (i = 0; i < 10; i++)

  00630	33 c9		 xor	 ecx, ecx
  00632	8b 95 1c fb ff
	ff		 mov	 edx, DWORD PTR _selId$1$[ebp]
  00638	83 e0 01	 and	 eax, 1
  0063b	0f 1f 44 00 00	 npad	 5
$LL24@StreetVend:

; 890  : 				{
; 891  : 					// [ê°ê²©ìì ]
; 892  : 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  00640	85 c0		 test	 eax, eax
  00642	0f 84 72 03 00
	00		 je	 $LN86@StreetVend

; 893  : 					{
; 894  : 						if (selId == iSellItemBtn[i])

  00648	3b 14 8d 00 00
	00 00		 cmp	 edx, DWORD PTR ?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[ecx*4]
  0064f	0f 85 77 03 00
	00		 jne	 $LN22@StreetVend

; 895  : 						{
; 896  : 							ShowSellItem[i + iListStart].needGetPrice = true;

  00655	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  0065a	03 c1		 add	 eax, ecx

; 897  : 							bRunSellPrice = true;

  0065c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  00663	6b c0 4c	 imul	 eax, eax, 76
  00666	c6 80 0c 00 00
	00 01		 mov	 BYTE PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+12], 1

; 898  : 							break;

  0066d	e9 d3 03 00 00	 jmp	 $LN188@StreetVend
$LN138@StreetVend:

; 761  : 					{
; 762  : 						play_se(217, 320, 240);

  00672	68 f0 00 00 00	 push	 240			; 000000f0H
  00677	68 40 01 00 00	 push	 320			; 00000140H
  0067c	68 d9 00 00 00	 push	 217			; 000000d9H
  00681	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00686	83 c4 0c	 add	 esp, 12			; 0000000cH

; 763  : 						switch (i)

  00689	83 fe 06	 cmp	 esi, 6
  0068c	77 90		 ja	 SHORT $LN195@StreetVend
  0068e	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN190@StreetVend[esi*4]
$LN59@StreetVend:

; 764  : 						{
; 765  : 							// [íì íë¤]
; 766  : 						case 0:
; 767  : 							if (!bRunSellPrice)

  00695	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  0069c	0f 85 a3 03 00
	00		 jne	 $LN188@StreetVend

; 768  : 							{
; 769  : 								int count = 0;

  006a2	33 f6		 xor	 esi, esi

; 770  : 								char szMsg[512], szTemp[512], szTemp1[16];
; 771  : 
; 772  : 								memset(szMsg, 0, sizeof(szMsg));

  006a4	8d 85 24 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$1[ebp]
  006aa	68 00 02 00 00	 push	 512			; 00000200H
  006af	56		 push	 esi
  006b0	50		 push	 eax
  006b1	89 b5 20 fb ff
	ff		 mov	 DWORD PTR _count$1$[ebp], esi
  006b7	e8 00 00 00 00	 call	 _memset

; 773  : 								memset(szTemp, 0, sizeof(szTemp));

  006bc	68 00 02 00 00	 push	 512			; 00000200H
  006c1	8d 85 24 fd ff
	ff		 lea	 eax, DWORD PTR _szTemp$2[ebp]
  006c7	56		 push	 esi
  006c8	50		 push	 eax
  006c9	e8 00 00 00 00	 call	 _memset
  006ce	83 c4 18	 add	 esp, 24			; 00000018H
  006d1	bb 08 00 00 00	 mov	 ebx, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+8
$LL21@StreetVend:

; 776  : 								{
; 777  : 									if (ShowSellItem[j].usage)

  006d6	80 7b 05 00	 cmp	 BYTE PTR [ebx+5], 0
  006da	74 57		 je	 SHORT $LN19@StreetVend

; 778  : 									{
; 779  : 										sprintf(szTemp1, "%d|%d|%d|", ShowSellItem[j].kind, ShowSellItem[j].index, ShowSellItem[j].price);

  006dc	ff 33		 push	 DWORD PTR [ebx]
  006de	0f be 43 40	 movsx	 eax, BYTE PTR [ebx+64]
  006e2	ff 73 f8	 push	 DWORD PTR [ebx-8]
  006e5	50		 push	 eax
  006e6	8d 45 e4	 lea	 eax, DWORD PTR _szTemp1$4[ebp]
  006e9	68 00 00 00 00	 push	 OFFSET ??_C@_09CGALFHNJ@?$CFd?$HM?$CFd?$HM?$CFd?$HM@
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 _sprintf

; 780  : 										strcat(szTemp, szTemp1);

  006f4	8d 55 e4	 lea	 edx, DWORD PTR _szTemp1$4[ebp]
  006f7	83 c4 14	 add	 esp, 20			; 00000014H
  006fa	8b f2		 mov	 esi, edx
  006fc	0f 1f 40 00	 npad	 4
$LL191@StreetVend:
  00700	8a 02		 mov	 al, BYTE PTR [edx]
  00702	42		 inc	 edx
  00703	84 c0		 test	 al, al
  00705	75 f9		 jne	 SHORT $LL191@StreetVend
  00707	8d bd 24 fd ff
	ff		 lea	 edi, DWORD PTR _szTemp$2[ebp]
  0070d	2b d6		 sub	 edx, esi
  0070f	4f		 dec	 edi
$LL192@StreetVend:
  00710	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00713	47		 inc	 edi
  00714	84 c0		 test	 al, al
  00716	75 f8		 jne	 SHORT $LL192@StreetVend
  00718	8b ca		 mov	 ecx, edx
  0071a	c1 e9 02	 shr	 ecx, 2
  0071d	f3 a5		 rep movsd
  0071f	8b ca		 mov	 ecx, edx
  00721	83 e1 03	 and	 ecx, 3
  00724	f3 a4		 rep movsb

; 781  : 										count++;	// [ì´ìíµê³]

  00726	8b b5 20 fb ff
	ff		 mov	 esi, DWORD PTR _count$1$[ebp]
  0072c	46		 inc	 esi
  0072d	89 b5 20 fb ff
	ff		 mov	 DWORD PTR _count$1$[ebp], esi
$LN19@StreetVend:

; 774  : 								//[íë ¤ê³  íë ë¬¼ê±´ì ìì¸ì serverìê² ì íë¤]
; 775  : 								for (j = 0; j < MAX_SELL_ITEM; j++)

  00733	83 c3 4c	 add	 ebx, 76			; 0000004cH
  00736	81 fb f8 05 00
	00		 cmp	 ebx, OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A+1528
  0073c	7c 98		 jl	 SHORT $LL21@StreetVend

; 782  : 									}
; 783  : 								}
; 784  : 								if (count != 0)

  0073e	85 f6		 test	 esi, esi
  00740	0f 84 b0 00 00
	00		 je	 $LN186@StreetVend

; 785  : 								{
; 786  : 									if (str_bufferVendorName.cnt == 0)

  00746	80 3d 07 01 00
	00 00		 cmp	 BYTE PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+263, 0
  0074d	75 19		 jne	 SHORT $LN65@StreetVend

; 787  : 									{
; 788  : 										sprintf(str_bufferVendorName.buffer, "ì´ìì¤ì­ìì¤!!");

  0074f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DJCPLGCF@?$LO?n?$LM?$KN?$LP?$MA?$LN?J?$LN?C?$LP?$MA?$CB?$CB@
  00754	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  00759	e8 00 00 00 00	 call	 _sprintf
  0075e	83 c4 08	 add	 esp, 8

; 789  : 										str_bufferVendorName.cnt = 10;

  00761	c6 05 07 01 00
	00 0a		 mov	 BYTE PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+263, 10 ; 0000000aH
$LN65@StreetVend:

; 790  : 									}
; 791  : 									sprintf(szMsg, "S|%d|%s%s", count, szTemp, str_bufferVendorName.buffer);

  00768	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  0076d	8d 85 24 fd ff
	ff		 lea	 eax, DWORD PTR _szTemp$2[ebp]
  00773	50		 push	 eax
  00774	56		 push	 esi
  00775	8d 85 24 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$1[ebp]
  0077b	68 00 00 00 00	 push	 OFFSET ??_C@_09KAHBFCEF@S?$HM?$CFd?$HM?$CFs?$CFs@
  00780	50		 push	 eax
  00781	e8 00 00 00 00	 call	 _sprintf

; 792  : 									lssproto_STREET_VENDOR_send(sockfd, szMsg);

  00786	8d 85 24 fb ff
	ff		 lea	 eax, DWORD PTR _szMsg$1[ebp]
  0078c	50		 push	 eax
  0078d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00793	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00798	83 c4 1c	 add	 esp, 28			; 0000001cH

; 793  : 									// [ë¸ì ì ë²ì¬ ëê³  ë§ìì ë´ë ¤ì¼ íë¤]
; 794  : 									if (pc.ridePetNo > -1)

  0079b	83 3d 18 51 00
	00 ff		 cmp	 DWORD PTR ?pc@@3UPC@@A+20760, -1
  007a2	7e 6f		 jle	 SHORT $LN71@StreetVend

; 795  : 									{
; 796  : 										char buf[64];
; 797  : 
; 798  : 										sprintf(buf, "R|P|-1");

  007a4	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$3[ebp]
  007aa	68 00 00 00 00	 push	 OFFSET ??_C@_06EFALBHEL@R?$HMP?$HM?91@
  007af	50		 push	 eax
  007b0	e8 00 00 00 00	 call	 _sprintf
  007b5	83 c4 08	 add	 esp, 8

; 799  : 										if (bNewServer)

  007b8	8d 85 24 ff ff
	ff		 lea	 eax, DWORD PTR _buf$3[ebp]
  007be	50		 push	 eax
  007bf	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd

; 800  : 											lssproto_FM_send(sockfd, buf);
; 801  : 										else
; 802  : 											lssproto_FM_send(sockfd, buf);
; 803  : 										if ((bNewServer & 0xf000000) == 0xf000000)

  007c5	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  007ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bNewServer@@3HA ; bNewServer
  007cf	83 c4 08	 add	 esp, 8
  007d2	25 00 00 00 0f	 and	 eax, 251658240		; 0f000000H
  007d7	3d 00 00 00 0f	 cmp	 eax, 251658240		; 0f000000H
  007dc	75 35		 jne	 SHORT $LN71@StreetVend

; 804  : 											lssproto_PETST_send(sockfd, pc.ridePetNo, 0);

  007de	6a 00		 push	 0
  007e0	ff 35 18 51 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20760
  007e6	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  007ec	e8 00 00 00 00	 call	 ?lssproto_PETST_send@@YAXHHH@Z ; lssproto_PETST_send
  007f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 805  : 									}
; 806  : 								}

  007f4	eb 1d		 jmp	 SHORT $LN71@StreetVend
$LN186@StreetVend:

; 807  : 								else
; 808  : 								{
; 809  : 									lssproto_STREET_VENDOR_send(sockfd, "E|");
; 810  : 									pc.iOnStreetVendor = 0;
; 811  : 								}
; 812  : 							}
; 813  : 							else
; 814  : 								break;
; 815  : 							// [ì·¨ì]
; 816  : 						case 1:
; 817  : 							if (i == 1)
; 818  : 							{
; 819  : 								lssproto_STREET_VENDOR_send(sockfd, "E|");
; 820  : 								pc.iOnStreetVendor = 0;
; 821  : 							}
; 822  : 							sStreetVendorBtn = 0;

  007f6	68 00 00 00 00	 push	 OFFSET ??_C@_02PFGFFPDM@E?$HM@
  007fb	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00801	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00806	c7 05 b8 a1 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41400, 0
  00810	83 c4 08	 add	 esp, 8
$LN71@StreetVend:
  00813	33 c0		 xor	 eax, eax
  00815	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 823  : 							actBtn = 0;

  0081b	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 824  : 							if (pShowPet != NULL)

  00821	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00826	85 c0		 test	 eax, eax
  00828	74 13		 je	 SHORT $LN72@StreetVend

; 825  : 							{
; 826  : 								DeathAction(pShowPet);

  0082a	50		 push	 eax
  0082b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00830	83 c4 04	 add	 esp, 4

; 827  : 								pShowPet = NULL;

  00833	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN72@StreetVend:

; 828  : 							}
; 829  : 							if (pActSellPriceWnd != NULL)

  0083d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A
  00842	85 c0		 test	 eax, eax
  00844	74 09		 je	 SHORT $LN73@StreetVend

; 830  : 								DeathAction(pActSellPriceWnd);

  00846	50		 push	 eax
  00847	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0084c	83 c4 04	 add	 esp, 4
$LN73@StreetVend:

; 831  : 							pActSellPriceWnd = NULL;
; 832  : 							GetKeyInputFocus(&MyChatBuffer);

  0084f	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00854	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A, 0
  0085e	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00863	83 c4 04	 add	 esp, 4

; 833  : 							break;

  00866	e9 b3 fd ff ff	 jmp	 $LN195@StreetVend
$LN74@StreetVend:

; 834  : 							// [ìê¶]
; 835  : 						case 2:
; 836  : 							iListStart--;

  0086b	83 2d 00 00 00
	00 01		 sub	 DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 1

; 837  : 							if (iListStart < 0)

  00872	0f 89 a6 fd ff
	ff		 jns	 $LN195@StreetVend

; 838  : 								iListStart = 0;

  00878	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 0

; 839  : 							break;

  00882	e9 97 fd ff ff	 jmp	 $LN195@StreetVend
$LN76@StreetVend:

; 840  : 							// [íê¶]
; 841  : 						case 3:
; 842  : 							iListStart++;

  00887	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  0088c	40		 inc	 eax
  0088d	a3 00 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, eax
  00892	83 f8 0a	 cmp	 eax, 10			; 0000000aH

; 843  : 							if (iListStart > 10)

  00895	0f 8e 83 fd ff
	ff		 jle	 $LN195@StreetVend

; 844  : 								iListStart = 10;

  0089b	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 10 ; 0000000aH

; 845  : 							break;

  008a5	e9 74 fd ff ff	 jmp	 $LN195@StreetVend
$LN78@StreetVend:

; 846  : 							// [ë°©ì¹]
; 847  : 						case 4:
; 848  : 							if (!bRunSellPrice)

  008aa	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  008b1	0f 85 8e 01 00
	00		 jne	 $LN188@StreetVend

; 849  : 							{
; 850  : 								pShowSellItem = GetEmptyShowSellItem(ShowSellItem);

  008b7	68 00 00 00 00	 push	 OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A
  008bc	e8 00 00 00 00	 call	 ?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z ; GetEmptyShowSellItem
  008c1	8b c8		 mov	 ecx, eax
  008c3	83 c4 04	 add	 esp, 4
  008c6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A, ecx
  008cc	85 c9		 test	 ecx, ecx

; 851  : 								// [ê·¸ë¦¬ê³  í ì ìë ê³µê°ë ìì´]
; 852  : 								if (pShowSellItem != NULL && iPetOnSell[iShowPet] == -1 && pShowPet != NULL)

  008ce	0f 84 57 fd ff
	ff		 je	 $LN181@StreetVend
  008d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  008d9	83 3c 85 00 00
	00 00 ff	 cmp	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[eax*4], -1
  008e1	0f 85 44 fd ff
	ff		 jne	 $LN181@StreetVend
  008e7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
  008ee	0f 84 37 fd ff
	ff		 je	 $LN181@StreetVend

; 853  : 								{
; 854  : 									iPetOnSell[iShowPet] = iShowPet;

  008f4	89 04 85 00 00
	00 00		 mov	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[eax*4], eax

; 855  : 									bRunSellPrice = true;
; 856  : 									pShowSellItem->usage = true;
; 857  : 									pShowSellItem->needGetPrice = true;
; 858  : 									sprintf(pShowSellItem->name, "%s", pet[iShowPet].name);

  008fb	69 c0 78 0b 00
	00		 imul	 eax, eax, 2936
  00901	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  00908	66 c7 41 0c 01
	01		 mov	 WORD PTR [ecx+12], 257	; 00000101H
  0090e	05 54 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+84
  00913	50		 push	 eax
  00914	8d 41 0e	 lea	 eax, DWORD PTR [ecx+14]
  00917	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0091c	50		 push	 eax
  0091d	e8 00 00 00 00	 call	 _sprintf

; 859  : 									sprintf(pShowSellItem->freeName, "%s", pet[iShowPet].freeName);

  00922	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  0092c	05 65 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+101
  00931	50		 push	 eax
  00932	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  00937	83 c0 2b	 add	 eax, 43			; 0000002bH
  0093a	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0093f	50		 push	 eax
  00940	e8 00 00 00 00	 call	 _sprintf

; 860  : 									pShowSellItem->pile = 1;

  00945	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  0094b	83 c4 18	 add	 esp, 24			; 00000018H

; 861  : 									pShowSellItem->kind = 1;
; 862  : 									pShowSellItem->index = iShowPet;

  0094e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  00953	c7 41 04 01 00
	00 00		 mov	 DWORD PTR [ecx+4], 1
  0095a	c6 41 48 01	 mov	 BYTE PTR [ecx+72], 1
  0095e	89 01		 mov	 DWORD PTR [ecx], eax

; 863  : 								}
; 864  : 							}
; 865  : 							break;

  00960	e9 b9 fc ff ff	 jmp	 $LN195@StreetVend
$LN81@StreetVend:

; 866  : 							// [ì¼ìª½ íì´í]
; 867  : 						case 5:
; 868  : 							if (!bRunSellPrice)

  00965	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  0096c	0f 85 d3 00 00
	00		 jne	 $LN188@StreetVend

; 869  : 							{
; 870  : 								iShowPet = (iShowPet + 1 > 4 ? 0 : iShowPet + 1);

  00972	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA

; 871  : 								bChangePet = true;

  00978	33 c0		 xor	 eax, eax
  0097a	41		 inc	 ecx
  0097b	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  00982	3b cb		 cmp	 ecx, ebx
  00984	0f 4e c1	 cmovle	 eax, ecx
  00987	a3 00 00 00 00	 mov	 DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, eax

; 872  : 							}
; 873  : 							break;

  0098c	e9 9a fc ff ff	 jmp	 $LN181@StreetVend
$LN83@StreetVend:

; 874  : 							// [ì¤ë¥¸ìª½ íì´í]
; 875  : 						case 6:
; 876  : 							if (!bRunSellPrice)

  00991	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00998	0f 85 a7 00 00
	00		 jne	 $LN188@StreetVend

; 877  : 							{
; 878  : 								iShowPet = (iShowPet - 1 < 0 ? 4 : iShowPet - 1);

  0099e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  009a3	83 c0 ff	 add	 eax, -1

; 879  : 								bChangePet = true;

  009a6	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  009ad	0f 48 c3	 cmovs	 eax, ebx
  009b0	a3 00 00 00 00	 mov	 DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, eax

; 880  : 							}
; 881  : 							break;
; 882  : 						}
; 883  : 						break;
; 884  : 					}
; 885  : 				}
; 886  : 			}
; 887  : 			if (!bRunSellPrice)

  009b5	e9 71 fc ff ff	 jmp	 $LN181@StreetVend
$LN86@StreetVend:

; 899  : 						}
; 900  : 					}
; 901  : 					// [ì·¨ìë¶ë§¤]
; 902  : 					else if (mouse.onceState & MOUSE_RIGHT_CRICK)

  009ba	f6 05 2c 00 00
	00 02		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 2
  009c1	74 09		 je	 SHORT $LN22@StreetVend

; 903  : 					{
; 904  : 						if (selId == iSellItemBtn[i])

  009c3	3b 14 8d 00 00
	00 00		 cmp	 edx, DWORD PTR ?iSellItemBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[ecx*4]
  009ca	74 0c		 je	 SHORT $LN140@StreetVend
$LN22@StreetVend:

; 888  : 			{
; 889  : 				for (i = 0; i < 10; i++)

  009cc	41		 inc	 ecx
  009cd	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  009d0	0f 8c 6a fc ff
	ff		 jl	 $LL24@StreetVend
  009d6	eb 6d		 jmp	 SHORT $LN188@StreetVend
$LN140@StreetVend:

; 905  : 						{
; 906  : 							if (ShowSellItem[i + iListStart].kind == 0)

  009d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iListStart@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  009dd	03 c1		 add	 eax, ecx
  009df	6b c0 4c	 imul	 eax, eax, 76
  009e2	80 b8 48 00 00
	00 00		 cmp	 BYTE PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+72], 0
  009e9	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax]
  009ef	75 0d		 jne	 SHORT $LN91@StreetVend

; 907  : 								iItemOnSell[ShowSellItem[i + iListStart].index - 9] = -1;

  009f1	c7 04 8d dc ff
	ff ff ff ff ff
	ff		 mov	 DWORD PTR ?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[ecx*4-36], -1
  009fc	eb 0b		 jmp	 SHORT $LN92@StreetVend
$LN91@StreetVend:

; 908  : 							else
; 909  : 								iPetOnSell[ShowSellItem[i + iListStart].index] = -1;

  009fe	c7 04 8d 00 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[ecx*4], -1
$LN92@StreetVend:

; 910  : 							ShowSellItem[i + iListStart].name[0] = '\0';
; 911  : 							ShowSellItem[i + iListStart].freeName[0] = '\0';
; 912  : 							ShowSellItem[i + iListStart].needGetPrice = false;
; 913  : 							ShowSellItem[i + iListStart].pile = 0;
; 914  : 							ShowSellItem[i + iListStart].price = 0;
; 915  : 							ShowSellItem[i + iListStart].usage = false;

  00a09	66 c7 80 0d 00
	00 00 00 00	 mov	 WORD PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+13], 0
  00a12	c6 80 2b 00 00
	00 00		 mov	 BYTE PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+43], 0
  00a19	c6 80 0c 00 00
	00 00		 mov	 BYTE PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+12], 0
  00a20	c7 80 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+4], 0
  00a2a	c7 80 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+8], 0

; 916  : 							ShowSellItem[i + iListStart].kind = -1;

  00a34	c6 80 48 00 00
	00 ff		 mov	 BYTE PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax+72], -1

; 917  : 							ShowSellItem[i + iListStart].index = -1;

  00a3b	c7 80 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?ShowSellItem@@3PAU_Show_Sell_Item@@A[eax], -1
$LN188@StreetVend:

; 918  : 							break;
; 919  : 						}
; 920  : 					}
; 921  : 				}
; 922  : 			}
; 923  : 			for (j = 0; j < 3; j++)

  00a45	8b 95 10 fb ff
	ff		 mov	 edx, DWORD PTR _x$1$[ebp]
  00a4b	33 ff		 xor	 edi, edi
  00a4d	8b 8d 14 fb ff
	ff		 mov	 ecx, DWORD PTR _y$1$[ebp]
  00a53	81 c2 5c 01 00
	00		 add	 edx, 348		; 0000015cH
  00a59	81 c1 10 01 00
	00		 add	 ecx, 272		; 00000110H
  00a5f	89 95 0c fb ff
	ff		 mov	 DWORD PTR tv3698[ebp], edx
  00a65	bb 00 00 00 00	 mov	 ebx, OFFSET ?iItemOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA
  00a6a	89 8d 18 fb ff
	ff		 mov	 DWORD PTR tv3694[ebp], ecx
  00a70	b8 09 00 00 00	 mov	 eax, 9
  00a75	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL27@StreetVend:

; 924  : 			{
; 925  : 				for (i = 0; i < 5; i++)

  00a80	8b f2		 mov	 esi, edx
  00a82	89 85 20 fb ff
	ff		 mov	 DWORD PTR tv3695[ebp], eax
  00a88	ba 05 00 00 00	 mov	 edx, 5
  00a8d	89 95 1c fb ff
	ff		 mov	 DWORD PTR tv3699[ebp], edx
  00a93	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL30@StreetVend:

; 926  : 				{
; 927  : 					itemx = x + 323 + i * 51;
; 928  : 					itemy = y + 247 + j * 48;
; 929  : 					// [íë ì´ì´ì ëª¸íµì ë³´ì¬ì£¼ë ìí]
; 930  : 					if (pItem[j * 5 + i + 9].useFlag)

  00aa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  00aa5	66 83 bc 07 38
	0e 00 00 00	 cmp	 WORD PTR [edi+eax+3640], 0
  00aae	74 2f		 je	 SHORT $LN95@StreetVend

; 931  : 					{
; 932  : 						if (!bRunSellPrice)

  00ab0	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00ab7	8b 84 07 60 0d
	00 00		 mov	 eax, DWORD PTR [edi+eax+3424]
  00abe	6a 00		 push	 0
  00ac0	50		 push	 eax
  00ac1	75 04		 jne	 SHORT $LN94@StreetVend

; 933  : 							StockDispBuffer(itemx + 25, itemy + 25, DISP_PRIO_ITEM, pItem[j * 5 + i + 9].graNo, 0);

  00ac3	6a 6c		 push	 108			; 0000006cH
  00ac5	eb 02		 jmp	 SHORT $LN207@StreetVend
$LN94@StreetVend:

; 934  : 						// [ê°ê²© ìë ¥ ìëì°ê° ì´ë¦¬ë©´ disp_prio menuë¡ ì¤ì í´ì¼ ê°ê²© ìëì°ì elseë¥¼ ë®ì´ì°ì§ ìì.]
; 935  : 						else
; 936  : 							StockDispBuffer(itemx + 25, itemy + 25, DISP_PRIO_MENU, pItem[j * 5 + i + 9].graNo, 0);

  00ac7	6a 68		 push	 104			; 00000068H
$LN207@StreetVend:

; 937  : 					}
; 938  : 					if (iItemOnSell[j * 5 + i] != -1)

  00ac9	51		 push	 ecx
  00aca	56		 push	 esi
  00acb	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00ad0	8b 95 1c fb ff
	ff		 mov	 edx, DWORD PTR tv3699[ebp]
  00ad6	83 c4 14	 add	 esp, 20			; 00000014H
  00ad9	8b 8d 18 fb ff
	ff		 mov	 ecx, DWORD PTR tv3694[ebp]
$LN95@StreetVend:
  00adf	83 3b ff	 cmp	 DWORD PTR [ebx], -1
  00ae2	74 22		 je	 SHORT $LN97@StreetVend

; 939  : 					{
; 940  : 						// [ê°ê²© ìë ¥ ìëì°ê° ì´ë¦¬ë©´ ìì´ íìëì§ ìì]
; 941  : 						if (!bRunSellPrice)

  00ae4	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00aeb	0f 85 ff 00 00
	00		 jne	 $LN28@StreetVend

; 942  : 							StockFontBuffer(itemx + 25, itemy + 25, FONT_PRIO_FRONT, FONT_PAL_RED, "SELL", 0);

  00af1	6a 00		 push	 0
  00af3	68 00 00 00 00	 push	 OFFSET ??_C@_04MPOIGBFL@SELL@
  00af8	6a 06		 push	 6
  00afa	6a 01		 push	 1
  00afc	51		 push	 ecx
  00afd	56		 push	 esi
  00afe	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00b03	83 c4 18	 add	 esp, 24			; 00000018H
$LN97@StreetVend:

; 943  : 					}
; 944  : 					if (!bRunSellPrice)

  00b06	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00b0d	0f 85 d7 00 00
	00		 jne	 $LN205@StreetVend

; 945  : 					{
; 946  : 						if (MakeHitBox(itemx, itemy, itemx + 50, itemy + 47, DISP_PRIO_IME3) == TRUE)

  00b13	8b 8d 18 fb ff
	ff		 mov	 ecx, DWORD PTR tv3694[ebp]
  00b19	6a 69		 push	 105			; 00000069H
  00b1b	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  00b1e	50		 push	 eax
  00b1f	8d 46 19	 lea	 eax, DWORD PTR [esi+25]
  00b22	50		 push	 eax
  00b23	8d 41 e7	 lea	 eax, DWORD PTR [ecx-25]
  00b26	50		 push	 eax
  00b27	8d 46 e7	 lea	 eax, DWORD PTR [esi-25]
  00b2a	50		 push	 eax
  00b2b	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00b30	83 c4 14	 add	 esp, 20			; 00000014H
  00b33	83 f8 01	 cmp	 eax, 1
  00b36	0f 85 ae 00 00
	00		 jne	 $LN205@StreetVend

; 947  : 						{
; 948  : 							// [ì´ ëêµ¬ê° ìì´]
; 949  : 							if (pItem[j * 5 + i + 9].useFlag &&
; 950  : 								// [ëêµ¬ê° ì íëìëì§ ì¬ë¶ë¥¼ íë¨íë¤]
; 951  : 								(mouse.onceState & MOUSE_LEFT_DBL_CRICK) &&

  00b3c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  00b41	66 83 bc 07 38
	0e 00 00 00	 cmp	 WORD PTR [edi+eax+3640], 0
  00b4a	0f 84 9a 00 00
	00		 je	 $LN205@StreetVend
  00b50	f6 05 2c 00 00
	00 10		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 16 ; 00000010H
  00b57	0f 84 8d 00 00
	00		 je	 $LN205@StreetVend
  00b5d	83 3b ff	 cmp	 DWORD PTR [ebx], -1
  00b60	0f 85 84 00 00
	00		 jne	 $LN205@StreetVend

; 952  : 								//  [ìì§ íì§]
; 953  : 								(iItemOnSell[j * 5 + i] == -1)
; 954  : 								)
; 955  : 							{
; 956  : 								pShowSellItem = GetEmptyShowSellItem(ShowSellItem);

  00b66	68 00 00 00 00	 push	 OFFSET ?ShowSellItem@@3PAU_Show_Sell_Item@@A
  00b6b	e8 00 00 00 00	 call	 ?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z ; GetEmptyShowSellItem
  00b70	83 c4 04	 add	 esp, 4
  00b73	a3 00 00 00 00	 mov	 DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A, eax
  00b78	85 c0		 test	 eax, eax

; 957  : 								// [ê·¸ë¦¬ê³  í ì ìë ê³µê°ë ìì´]
; 958  : 								if (pShowSellItem != NULL)

  00b7a	74 6e		 je	 SHORT $LN205@StreetVend

; 959  : 								{
; 960  : 									iItemOnSell[j * 5 + i] = j * 5 + i + 9; //[ê¸°ë¡ìì¼ë¡ë ê·¸ ëêµ¬ê° íë¦´ ê² ê°ë¤]

  00b7c	8b 85 20 fb ff
	ff		 mov	 eax, DWORD PTR tv3695[ebp]

; 961  : 									play_se(217, 320, 240);

  00b82	68 f0 00 00 00	 push	 240			; 000000f0H
  00b87	68 40 01 00 00	 push	 320			; 00000140H
  00b8c	68 d9 00 00 00	 push	 217			; 000000d9H
  00b91	89 03		 mov	 DWORD PTR [ebx], eax
  00b93	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 962  : 									bRunSellPrice = true;
; 963  : 									pShowSellItem->usage = true;
; 964  : 									pShowSellItem->needGetPrice = true;
; 965  : 									sprintf(pShowSellItem->name, "%s", pItem[j * 5 + i + 9].name);

  00b98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  00b9d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  00ba3	05 42 0e 00 00	 add	 eax, 3650		; 00000e42H
  00ba8	03 c7		 add	 eax, edi
  00baa	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 1
  00bb1	50		 push	 eax
  00bb2	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00bb7	8d 41 0e	 lea	 eax, DWORD PTR [ecx+14]
  00bba	66 c7 41 0c 01
	01		 mov	 WORD PTR [ecx+12], 257	; 00000101H
  00bc0	50		 push	 eax
  00bc1	e8 00 00 00 00	 call	 _sprintf

; 966  : 									pShowSellItem->pile = pItem[j * 5 + i + 9].pile;

  00bc6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pShowSellItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAU_Show_Sell_Item@@A
  00bcc	83 c4 18	 add	 esp, 24			; 00000018H
  00bcf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pItem@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAUITEM@@A
  00bd4	8b 84 07 68 0d
	00 00		 mov	 eax, DWORD PTR [edi+eax+3432]
  00bdb	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 967  : 									pShowSellItem->kind = 0;
; 968  : 									pShowSellItem->index = j * 5 + i + 9;

  00bde	8b 85 20 fb ff
	ff		 mov	 eax, DWORD PTR tv3695[ebp]
  00be4	c6 41 48 00	 mov	 BYTE PTR [ecx+72], 0
  00be8	89 01		 mov	 DWORD PTR [ecx], eax
$LN205@StreetVend:

; 924  : 			{
; 925  : 				for (i = 0; i < 5; i++)

  00bea	8b 95 1c fb ff
	ff		 mov	 edx, DWORD PTR tv3699[ebp]
$LN28@StreetVend:
  00bf0	ff 85 20 fb ff
	ff		 inc	 DWORD PTR tv3695[ebp]
  00bf6	83 c3 04	 add	 ebx, 4
  00bf9	8b 8d 18 fb ff
	ff		 mov	 ecx, DWORD PTR tv3694[ebp]
  00bff	81 c7 7c 01 00
	00		 add	 edi, 380		; 0000017cH
  00c05	83 c6 33	 add	 esi, 51			; 00000033H
  00c08	83 ea 01	 sub	 edx, 1
  00c0b	89 95 1c fb ff
	ff		 mov	 DWORD PTR tv3699[ebp], edx
  00c11	0f 85 89 fe ff
	ff		 jne	 $LL30@StreetVend

; 918  : 							break;
; 919  : 						}
; 920  : 					}
; 921  : 				}
; 922  : 			}
; 923  : 			for (j = 0; j < 3; j++)

  00c17	8b 85 20 fb ff
	ff		 mov	 eax, DWORD PTR tv3695[ebp]
  00c1d	83 c1 30	 add	 ecx, 48			; 00000030H
  00c20	8b 95 0c fb ff
	ff		 mov	 edx, DWORD PTR tv3698[ebp]
  00c26	89 8d 18 fb ff
	ff		 mov	 DWORD PTR tv3694[ebp], ecx
  00c2c	83 f8 18	 cmp	 eax, 24			; 00000018H
  00c2f	0f 8c 4b fe ff
	ff		 jl	 $LL27@StreetVend

; 969  : 								}
; 970  : 							}
; 971  : 						}
; 972  : 					}
; 973  : 				}
; 974  : 			}
; 975  : 			// íí¸ë³´ê¸°
; 976  : 			for (i = 0; i < MAX_PET; i++) {

  00c35	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  00c3b	33 ff		 xor	 edi, edi
  00c3d	8a 1d 00 00 00
	00		 mov	 bl, BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA
  00c43	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00c49	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00c4f	90		 npad	 1
$LL33@StreetVend:

; 977  : 				if (bChangePet && !bRunSellPrice) {

  00c50	84 db		 test	 bl, bl
  00c52	74 7d		 je	 SHORT $LN126@StreetVend
  00c54	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?bRunSellPrice@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0
  00c5b	75 74		 jne	 SHORT $LN126@StreetVend

; 978  : 					// [ì´ë ê² ì´ì ë¥¼ ë°ë ê²ì ê¸°ì¹ ë° ì¤ì ì ìì´ì ì´ì ë¥¼ ë°ë ê²ì´ ìëì´]
; 979  : 					if (pet[iShowPet].useFlag == 1 && (pc.ridePetNo != iShowPet) && (pc.mailPetNo != iShowPet)) {

  00c5d	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00c63	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  00c6b	75 17		 jne	 SHORT $LN103@StreetVend
  00c6d	39 0d 18 51 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20760, ecx
  00c73	74 0f		 je	 SHORT $LN103@StreetVend
  00c75	0f bf 05 b6 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+182
  00c7c	3b c1		 cmp	 eax, ecx
  00c7e	0f 85 fc 01 00
	00		 jne	 $LN141@StreetVend
$LN103@StreetVend:

; 986  : 						break;
; 987  : 					}
; 988  : 					else {
; 989  : 						if (HitDispNo == iBtn[5])

  00c84	3b 35 14 00 00
	00		 cmp	 esi, DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+20
  00c8a	75 0d		 jne	 SHORT $LN106@StreetVend

; 990  : 							iShowPet = (iShowPet + 1 > 4 ? 0 : iShowPet + 1);

  00c8c	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00c8f	33 c9		 xor	 ecx, ecx
  00c91	83 f8 04	 cmp	 eax, 4
  00c94	0f 4e c8	 cmovle	 ecx, eax
  00c97	eb 32		 jmp	 SHORT $LN208@StreetVend
$LN106@StreetVend:

; 991  : 						else if (HitDispNo == iBtn[6])

  00c99	3b 35 18 00 00
	00		 cmp	 esi, DWORD PTR ?iBtn@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA+24
  00c9f	75 11		 jne	 SHORT $LN108@StreetVend

; 992  : 							iShowPet = (iShowPet - 1 < 0 ? 4 : iShowPet - 1);

  00ca1	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00ca4	8b c8		 mov	 ecx, eax
  00ca6	85 c0		 test	 eax, eax
  00ca8	b8 04 00 00 00	 mov	 eax, 4
  00cad	0f 48 c8	 cmovs	 ecx, eax
  00cb0	eb 19		 jmp	 SHORT $LN208@StreetVend
$LN108@StreetVend:

; 993  : 						else
; 994  : 							iShowPet = (iShowPet + 1 > 4 ? 0 : iShowPet + 1);

  00cb2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00cb5	c7 85 0c fb ff
	ff 00 00 00 00	 mov	 DWORD PTR tv3621[ebp], 0
  00cbf	83 f8 04	 cmp	 eax, 4
  00cc2	8b c8		 mov	 ecx, eax
  00cc4	0f 4f 8d 0c fb
	ff ff		 cmovg	 ecx, DWORD PTR tv3621[ebp]
$LN208@StreetVend:

; 995  : 					}
; 996  : 				}
; 997  : 				if (pShowPet != NULL) {

  00ccb	89 0d 00 00 00
	00		 mov	 DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, ecx
$LN126@StreetVend:
  00cd1	85 d2		 test	 edx, edx
  00cd3	0f 84 9b 01 00
	00		 je	 $LN31@StreetVend

; 998  : 					// íí¸ì ë³´ë³´ê¸°
; 999  : 					if (iPetOnSell[iShowPet] != -1)

  00cd9	83 3c 8d 00 00
	00 00 ff	 cmp	 DWORD PTR ?iPetOnSell@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4PAHA[ecx*4], -1
  00ce1	8b 9d 14 fb ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  00ce7	74 2c		 je	 SHORT $LN111@StreetVend

; 1000 : 						StockFontBuffer(x + 440, y + 195, FONT_PRIO_FRONT, FONT_PAL_RED, "SELL", 0);

  00ce9	6a 00		 push	 0
  00ceb	68 00 00 00 00	 push	 OFFSET ??_C@_04MPOIGBFL@SELL@
  00cf0	6a 06		 push	 6
  00cf2	6a 01		 push	 1
  00cf4	8d 83 c3 00 00
	00		 lea	 eax, DWORD PTR [ebx+195]
  00cfa	50		 push	 eax
  00cfb	8b 85 10 fb ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00d01	05 b8 01 00 00	 add	 eax, 440		; 000001b8H
  00d06	50		 push	 eax
  00d07	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00d0c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  00d12	83 c4 18	 add	 esp, 24			; 00000018H
$LN111@StreetVend:

; 1001 : 					// íí¸ì´ë¦íì
; 1002 : 					if (strlen(pet[iShowPet].freeName) > 0)

  00d15	69 d1 78 0b 00
	00		 imul	 edx, ecx, 2936
  00d1b	8d 8a 65 00 00
	00		 lea	 ecx, DWORD PTR ?pet@@3PAUPET@@A[edx+101]
  00d21	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL193@StreetVend:
  00d24	8a 01		 mov	 al, BYTE PTR [ecx]
  00d26	41		 inc	 ecx
  00d27	84 c0		 test	 al, al
  00d29	75 f9		 jne	 SHORT $LL193@StreetVend
  00d2b	2b ce		 sub	 ecx, esi

; 1003 : 						StockFontBuffer(x + 336, y + 28, FONT_PRIO_FRONT, 0, pet[iShowPet].freeName, 0);
; 1004 : 					else
; 1005 : 						StockFontBuffer(x + 336, y + 28, FONT_PRIO_FRONT, 0, pet[iShowPet].name, 0);
; 1006 : 					// íí¸ìì±ë³´ê¸°
; 1007 : 					itoa(pet[iShowPet].level, temp, 10);

  00d2d	b8 54 00 00 00	 mov	 eax, OFFSET ?pet@@3PAUPET@@A+84
  00d32	8b b5 10 fb ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
  00d38	b9 65 00 00 00	 mov	 ecx, OFFSET ?pet@@3PAUPET@@A+101
  00d3d	0f 45 c1	 cmovne	 eax, ecx
  00d40	6a 00		 push	 0
  00d42	03 c2		 add	 eax, edx
  00d44	50		 push	 eax
  00d45	6a 00		 push	 0
  00d47	6a 01		 push	 1
  00d49	8d 43 1c	 lea	 eax, DWORD PTR [ebx+28]
  00d4c	50		 push	 eax
  00d4d	8d 86 50 01 00
	00		 lea	 eax, DWORD PTR [esi+336]
  00d53	50		 push	 eax
  00d54	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00d59	6a 0a		 push	 10			; 0000000aH
  00d5b	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00d5e	50		 push	 eax
  00d5f	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  00d69	ff b0 20 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+32]
  00d6f	e8 00 00 00 00	 call	 _itoa

; 1008 : 					StockFontBuffer(x + 542, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, temp, 0);

  00d74	6a 00		 push	 0
  00d76	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00d79	81 c6 1e 02 00
	00		 add	 esi, 542		; 0000021eH
  00d7f	50		 push	 eax
  00d80	6a 00		 push	 0
  00d82	6a 01		 push	 1
  00d84	8d 43 5c	 lea	 eax, DWORD PTR [ebx+92]
  00d87	50		 push	 eax
  00d88	56		 push	 esi
  00d89	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1009 : 					itoa(pet[iShowPet].atk, temp, 10);

  00d8e	6a 0a		 push	 10			; 0000000aH
  00d90	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00d93	50		 push	 eax
  00d94	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  00d9e	ff b0 24 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+36]
  00da4	e8 00 00 00 00	 call	 _itoa
  00da9	83 c4 48	 add	 esp, 72			; 00000048H

; 1010 : 					StockFontBuffer(x + 542, y + 92 + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, temp, 0);

  00dac	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00daf	6a 00		 push	 0
  00db1	50		 push	 eax
  00db2	6a 00		 push	 0
  00db4	6a 01		 push	 1
  00db6	8d 43 75	 lea	 eax, DWORD PTR [ebx+117]
  00db9	50		 push	 eax
  00dba	56		 push	 esi
  00dbb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1011 : 					itoa(pet[iShowPet].def, temp, 10);

  00dc0	6a 0a		 push	 10			; 0000000aH
  00dc2	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00dc5	50		 push	 eax
  00dc6	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  00dd0	ff b0 28 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+40]
  00dd6	e8 00 00 00 00	 call	 _itoa

; 1012 : 					StockFontBuffer(x + 542, y + 92 + 50, FONT_PRIO_FRONT, FONT_PAL_WHITE, temp, 0);

  00ddb	6a 00		 push	 0
  00ddd	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00de0	50		 push	 eax
  00de1	6a 00		 push	 0
  00de3	6a 01		 push	 1
  00de5	8d 83 8e 00 00
	00		 lea	 eax, DWORD PTR [ebx+142]
  00deb	50		 push	 eax
  00dec	56		 push	 esi
  00ded	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1013 : 					itoa(pet[iShowPet].quick, temp, 10);

  00df2	6a 0a		 push	 10			; 0000000aH
  00df4	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00df7	50		 push	 eax
  00df8	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  00e02	ff b0 2c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+44]
  00e08	e8 00 00 00 00	 call	 _itoa
  00e0d	83 c4 48	 add	 esp, 72			; 00000048H

; 1014 : 					StockFontBuffer(x + 542, y + 92 + 73, FONT_PRIO_FRONT, FONT_PAL_WHITE, temp, 0);

  00e10	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00e13	6a 00		 push	 0
  00e15	50		 push	 eax
  00e16	6a 00		 push	 0
  00e18	6a 01		 push	 1
  00e1a	8d 83 a5 00 00
	00		 lea	 eax, DWORD PTR [ebx+165]
  00e20	50		 push	 eax
  00e21	56		 push	 esi
  00e22	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1015 : 					itoa(pet[iShowPet].maxHp, temp, 10);

  00e27	6a 0a		 push	 10			; 0000000aH
  00e29	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00e2c	50		 push	 eax
  00e2d	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA, 2936
  00e37	ff b0 0c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+12]
  00e3d	e8 00 00 00 00	 call	 _itoa

; 1016 : 					StockFontBuffer(x + 542, y + 92 + 97, FONT_PRIO_FRONT, FONT_PAL_WHITE, temp, 0);

  00e42	6a 00		 push	 0
  00e44	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00e47	50		 push	 eax
  00e48	6a 00		 push	 0
  00e4a	6a 01		 push	 1
  00e4c	8d 83 bd 00 00
	00		 lea	 eax, DWORD PTR [ebx+189]
  00e52	50		 push	 eax
  00e53	56		 push	 esi
  00e54	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00e59	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  00e5f	83 c4 3c	 add	 esp, 60			; 0000003cH
  00e62	8a 1d 00 00 00
	00		 mov	 bl, BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA
  00e68	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00e6e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
$LN31@StreetVend:

; 969  : 								}
; 970  : 							}
; 971  : 						}
; 972  : 					}
; 973  : 				}
; 974  : 			}
; 975  : 			// íí¸ë³´ê¸°
; 976  : 			for (i = 0; i < MAX_PET; i++) {

  00e74	47		 inc	 edi
  00e75	83 ff 05	 cmp	 edi, 5
  00e78	0f 8c d2 fd ff
	ff		 jl	 $LL33@StreetVend
  00e7e	eb 5b		 jmp	 SHORT $LN189@StreetVend
$LN141@StreetVend:

; 980  : 						if (pShowPet != NULL) {

  00e80	85 d2		 test	 edx, edx
  00e82	74 19		 je	 SHORT $LN105@StreetVend

; 981  : 							DeathAction(pShowPet);

  00e84	52		 push	 edx
  00e85	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 982  : 							pShowPet = NULL;

  00e8a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?iShowPet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4HA
  00e90	83 c4 04	 add	 esp, 4
  00e93	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN105@StreetVend:

; 983  : 						}
; 984  : 						pShowPet = MakeAnimDisp(x + 396, y + 170, pet[iShowPet].graNo, 0);

  00e9d	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00ea3	6a 00		 push	 0
  00ea5	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  00eab	8b 85 14 fb ff
	ff		 mov	 eax, DWORD PTR _y$1$[ebp]
  00eb1	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  00eb6	50		 push	 eax
  00eb7	8b 85 10 fb ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00ebd	05 8c 01 00 00	 add	 eax, 396		; 0000018cH
  00ec2	50		 push	 eax
  00ec3	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00ec8	83 c4 10	 add	 esp, 16			; 00000010H
  00ecb	8b d0		 mov	 edx, eax

; 985  : 						bChangePet = false;

  00ecd	32 db		 xor	 bl, bl
  00ecf	89 15 00 00 00
	00		 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, edx ; pShowPet
  00ed5	88 1d 00 00 00
	00		 mov	 BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, bl
$LN189@StreetVend:

; 1017 : 				}
; 1018 : 			}
; 1019 : 			// [ëª¸ì ì´ì ê° ìë¤.]
; 1020 : 			if (i == MAX_PET && bChangePet) {

  00edb	83 ff 05	 cmp	 edi, 5
  00ede	75 22		 jne	 SHORT $LN115@StreetVend
  00ee0	84 db		 test	 bl, bl
  00ee2	74 1e		 je	 SHORT $LN115@StreetVend

; 1021 : 				bChangePet = false;

  00ee4	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?bChangePet@?1??StreetVendorWndfunc@@YAX_NPAD@Z@4_NA, 0

; 1022 : 				if (pShowPet != NULL) {

  00eeb	85 d2		 test	 edx, edx
  00eed	74 13		 je	 SHORT $LN115@StreetVend

; 1023 : 					DeathAction(pShowPet);

  00eef	52		 push	 edx
  00ef0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00ef5	83 c4 04	 add	 esp, 4

; 1024 : 					pShowPet = NULL;

  00ef8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN115@StreetVend:

; 1025 : 				}
; 1026 : 			}
; 1027 : 			// [ë§ì°ì¤ë ìì ëªêµ¬ ë´ì ìë¤]
; 1028 : 			if (MakeHitBox(str_bufferVendorName.x, str_bufferVendorName.y, str_bufferVendorName.x + 250,
; 1029 : 				str_bufferVendorName.y + 24, DISP_PRIO_BOX2) == TRUE)

  00f02	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+272
  00f08	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?str_bufferVendorName@@3USTR_BUFFER@@A+268
  00f0e	6a 6b		 push	 107			; 0000006bH
  00f10	8d 42 18	 lea	 eax, DWORD PTR [edx+24]
  00f13	50		 push	 eax
  00f14	8d 81 fa 00 00
	00		 lea	 eax, DWORD PTR [ecx+250]
  00f1a	50		 push	 eax
  00f1b	52		 push	 edx
  00f1c	51		 push	 ecx
  00f1d	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00f22	83 c4 14	 add	 esp, 20			; 00000014H
  00f25	83 f8 01	 cmp	 eax, 1
  00f28	75 0d		 jne	 SHORT $LN116@StreetVend

; 1030 : 				GetKeyInputFocus(&str_bufferVendorName);

  00f2a	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  00f2f	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00f34	83 c4 04	 add	 esp, 4
$LN116@StreetVend:

; 1031 : 			CheckSpace(str_bufferVendorName.buffer);

  00f37	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  00f3c	e8 00 00 00 00	 call	 ?CheckSpace@@YAXPAD@Z	; CheckSpace

; 1032 : 			// ìì ì´ë¦íì
; 1033 : 			StockFontBuffer2(&str_bufferVendorName);

  00f41	68 00 00 00 00	 push	 OFFSET ?str_bufferVendorName@@3USTR_BUFFER@@A ; str_bufferVendorName
  00f46	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 1034 : 			StockDispBuffer(((WINDOW_DISP*)pActStreetVendorWnd->pYobi)->mx,

  00f4b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A ; pActStreetVendorWnd
  00f50	6a 01		 push	 1
  00f52	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FIELD_SV_SELL_PANEL@@3HA ; CG_FIELD_SV_SELL_PANEL
  00f58	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00f5b	6a 68		 push	 104			; 00000068H
  00f5d	ff 70 18	 push	 DWORD PTR [eax+24]
  00f60	ff 70 14	 push	 DWORD PTR [eax+20]
  00f63	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00f68	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN45@StreetVend:

; 1035 : 				((WINDOW_DISP*)pActStreetVendorWnd->pYobi)->my,
; 1036 : 				DISP_PRIO_MENU, CG_FIELD_SV_SELL_PANEL, 1);
; 1037 : 		}
; 1038 : 	}
; 1039 : }

  00f6b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00f6e	5f		 pop	 edi
  00f6f	5e		 pop	 esi
  00f70	33 cd		 xor	 ecx, ebp
  00f72	5b		 pop	 ebx
  00f73	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00f78	8b e5		 mov	 esp, ebp
  00f7a	5d		 pop	 ebp
  00f7b	c3		 ret	 0
$LN190@StreetVend:
  00f7c	00 00 00 00	 DD	 $LN59@StreetVend
  00f80	00 00 00 00	 DD	 $LN186@StreetVend
  00f84	00 00 00 00	 DD	 $LN74@StreetVend
  00f88	00 00 00 00	 DD	 $LN76@StreetVend
  00f8c	00 00 00 00	 DD	 $LN78@StreetVend
  00f90	00 00 00 00	 DD	 $LN81@StreetVend
  00f94	00 00 00 00	 DD	 $LN83@StreetVend
?StreetVendorWndfunc@@YAX_NPAD@Z ENDP			; StreetVendorWndfunc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z
_TEXT	SEGMENT
_ShowSellItem$ = 8					; size = 4
?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z PROC ; GetEmptyShowSellItem, COMDAT

; 572  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 573  : 	for (int i = 0; i < MAX_SELL_ITEM; i++)

  00003	8b 45 08	 mov	 eax, DWORD PTR _ShowSellItem$[ebp]
  00006	33 c9		 xor	 ecx, ecx
$LL4@GetEmptySh:

; 574  : 	{
; 575  : 		if (ShowSellItem[i].usage == false)

  00008	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  0000c	74 0b		 je	 SHORT $LN1@GetEmptySh

; 573  : 	for (int i = 0; i < MAX_SELL_ITEM; i++)

  0000e	41		 inc	 ecx
  0000f	83 c0 4c	 add	 eax, 76			; 0000004cH
  00012	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00015	7c f1		 jl	 SHORT $LL4@GetEmptySh

; 576  : 			return ShowSellItem + i;
; 577  : 	}
; 578  : 	return NULL;

  00017	33 c0		 xor	 eax, eax
$LN1@GetEmptySh:

; 579  : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?GetEmptyShowSellItem@@YAPAU_Show_Sell_Item@@PAU1@@Z ENDP ; GetEmptyShowSellItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?SellPriceWndfunc@@YAHXZ
_TEXT	SEGMENT
?SellPriceWndfunc@@YAHXZ PROC				; SellPriceWndfunc, COMDAT

; 513  : 	static STR_BUFFER str_bufferMoney;		// [íë§¤ê°ê²© ìë ¥ë, ìµë ì²ë§ìì´ë¤.]
; 514  : 	int x, y, iConfirm;
; 515  : 
; 516  : 	if (pActSellPriceWnd == NULL)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A
  00005	56		 push	 esi
  00006	85 c0		 test	 eax, eax
  00008	0f 85 8c 00 00
	00		 jne	 $LN2@SellPriceW

; 517  : 	{
; 518  : 		pActSellPriceWnd = MakeWindowDisp((DEF_APPSIZEX >> 1) - (106 >> 1) + 10, 350,

  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00013	6a ff		 push	 -1
  00015	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FIELD_SV_SELL_PRICE_PANEL@@3HA ; CG_FIELD_SV_SELL_PRICE_PANEL
  0001b	d1 f8		 sar	 eax, 1
  0001d	6a 50		 push	 80			; 00000050H
  0001f	6a 6a		 push	 106			; 0000006aH
  00021	83 e8 2b	 sub	 eax, 43			; 0000002bH
  00024	68 5e 01 00 00	 push	 350			; 0000015eH
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 519  : 			106, 80, CG_FIELD_SV_SELL_PRICE_PANEL, -1);
; 520  : 		//[íë§¤ê°ê²©ë¬¸ìì´ê¸°í]
; 521  : 		ZeroMemory(str_bufferMoney.buffer, sizeof(str_bufferMoney.buffer));

  0002f	68 04 01 00 00	 push	 260			; 00000104H
  00034	8b f0		 mov	 esi, eax
  00036	6a 00		 push	 0
  00038	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  0003d	89 35 00 00 00
	00		 mov	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A, esi
  00043	e8 00 00 00 00	 call	 _memset

; 522  : 		str_bufferMoney.cnt = 0;

  00048	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+263, 0

; 523  : 		str_bufferMoney.cursor = 0;

  00051	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+265, 0

; 524  : 		str_bufferMoney.color = 0;
; 525  : 		str_bufferMoney.len = 8;

  00058	66 c7 05 04 01
	00 00 08 08	 mov	 WORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+260, 2056 ; 00000808H

; 526  : 		str_bufferMoney.lineLen = 8;
; 527  : 		str_bufferMoney.lineDist = 0;

  00061	c6 05 06 01 00
	00 00		 mov	 BYTE PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+262, 0

; 528  : 		str_bufferMoney.x = pActSellPriceWnd->x + 10;

  00068	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  0006b	83 c0 0a	 add	 eax, 10			; 0000000aH
  0006e	a3 0c 01 00 00	 mov	 DWORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+268, eax

; 529  : 		str_bufferMoney.y = pActSellPriceWnd->y + 28;

  00073	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00076	83 c0 1c	 add	 eax, 28			; 0000001cH

; 530  : 		str_bufferMoney.fontPrio = FONT_PRIO_FRONT;

  00079	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+284, 1

; 531  : 		GetKeyInputFocus(&str_bufferMoney);

  00083	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  00088	a3 10 01 00 00	 mov	 DWORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+272, eax
  0008d	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00092	83 c4 28	 add	 esp, 40			; 00000028H

; 558  : 		}
; 559  : 	}
; 560  : 
; 561  : 	return -1;

  00095	83 c8 ff	 or	 eax, -1
  00098	5e		 pop	 esi

; 562  : }

  00099	c3		 ret	 0
$LN2@SellPriceW:

; 532  : 	}
; 533  : 	else
; 534  : 	{
; 535  : 		if (pActSellPriceWnd->hp > 0)

  0009a	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0009e	0f 8e c6 00 00
	00		 jle	 $LN4@SellPriceW

; 536  : 		{
; 537  : 			x = pActSellPriceWnd->x;
; 538  : 			y = pActSellPriceWnd->y;

  000a4	8b 70 1c	 mov	 esi, DWORD PTR [eax+28]
  000a7	57		 push	 edi
  000a8	8b 78 18	 mov	 edi, DWORD PTR [eax+24]

; 539  : 			StockDispBuffer(((WINDOW_DISP*)pActSellPriceWnd->pYobi)->mx,

  000ab	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000ae	6a 01		 push	 1
  000b0	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FIELD_SV_SELL_PRICE_PANEL@@3HA ; CG_FIELD_SV_SELL_PRICE_PANEL
  000b6	6a 68		 push	 104			; 00000068H
  000b8	ff 70 18	 push	 DWORD PTR [eax+24]
  000bb	ff 70 14	 push	 DWORD PTR [eax+20]
  000be	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 540  : 				((WINDOW_DISP*)pActSellPriceWnd->pYobi)->my,
; 541  : 				DISP_PRIO_MENU, CG_FIELD_SV_SELL_PRICE_PANEL, 1);
; 542  : 			iConfirm = StockDispBuffer(x + 55, y + 67, DISP_PRIO_IME3, 26289, 2);

  000c3	6a 02		 push	 2
  000c5	68 b1 66 00 00	 push	 26289			; 000066b1H
  000ca	6a 69		 push	 105			; 00000069H
  000cc	8d 46 43	 lea	 eax, DWORD PTR [esi+67]
  000cf	50		 push	 eax
  000d0	8d 47 37	 lea	 eax, DWORD PTR [edi+55]
  000d3	50		 push	 eax
  000d4	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000d9	83 c4 28	 add	 esp, 40			; 00000028H

; 543  : 
; 544  : 			//[íì¸ì ëë¥´ë¤]
; 545  : 			if ((mouse.onceState & MOUSE_LEFT_CRICK) && HitDispNo == iConfirm)

  000dc	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000e3	5f		 pop	 edi
  000e4	74 36		 je	 SHORT $LN5@SellPriceW
  000e6	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  000ec	75 2e		 jne	 SHORT $LN5@SellPriceW

; 546  : 			{
; 547  : 				DeathAction(pActSellPriceWnd);

  000ee	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A
  000f4	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 548  : 				pActSellPriceWnd = NULL;
; 549  : 				GetKeyInputFocus(&MyChatBuffer);

  000f9	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  000fe	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A, 0
  00108	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 550  : 				return atoi(str_bufferMoney.buffer);

  0010d	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  00112	e8 00 00 00 00	 call	 _atoi
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
  0011a	5e		 pop	 esi

; 562  : }

  0011b	c3		 ret	 0
$LN5@SellPriceW:

; 551  : 			}
; 552  : 			//[ë§ì°ì¤ë íë§¤ê°ê²© êµ¬ë´ì ìë¤]
; 553  : 			if (MakeHitBox(str_bufferMoney.x, str_bufferMoney.y, str_bufferMoney.x + 88, str_bufferMoney.y + 22, DISP_PRIO_BOX2) == TRUE)

  0011c	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+272
  00122	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A+268
  00128	6a 6b		 push	 107			; 0000006bH
  0012a	8d 42 16	 lea	 eax, DWORD PTR [edx+22]
  0012d	50		 push	 eax
  0012e	8d 41 58	 lea	 eax, DWORD PTR [ecx+88]
  00131	50		 push	 eax
  00132	52		 push	 edx
  00133	51		 push	 ecx
  00134	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00139	83 c4 14	 add	 esp, 20			; 00000014H
  0013c	83 f8 01	 cmp	 eax, 1
  0013f	75 0d		 jne	 SHORT $LN6@SellPriceW

; 554  : 				GetKeyInputFocus(&str_bufferMoney);

  00141	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  00146	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0014b	83 c4 04	 add	 esp, 4
$LN6@SellPriceW:

; 555  : 			CheckNumber(str_bufferMoney.buffer, 10000000);

  0014e	68 80 96 98 00	 push	 10000000		; 00989680H
  00153	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  00158	e8 00 00 00 00	 call	 ?CheckNumber@@YAXPADH@Z	; CheckNumber

; 556  : 			// [íìê°ê²©]
; 557  : 			StockFontBuffer2(&str_bufferMoney);

  0015d	68 00 00 00 00	 push	 OFFSET ?str_bufferMoney@?1??SellPriceWndfunc@@YAHXZ@4USTR_BUFFER@@A
  00162	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  00167	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN4@SellPriceW:

; 558  : 		}
; 559  : 	}
; 560  : 
; 561  : 	return -1;

  0016a	83 c8 ff	 or	 eax, -1
  0016d	5e		 pop	 esi

; 562  : }

  0016e	c3		 ret	 0
?SellPriceWndfunc@@YAHXZ ENDP				; SellPriceWndfunc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?TeacherSystemWndfunc@@YAXHPAD@Z
_TEXT	SEGMENT
tv732 = -136						; size = 4
_szMsg$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_flag$ = 8						; size = 4
_data$ = 12						; size = 4
?TeacherSystemWndfunc@@YAXHPAD@Z PROC			; TeacherSystemWndfunc, COMDAT

; 5674 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 5675 : 	int i;
; 5676 : 	static int winX, winY, winW, winH, iOnline = 0, iGetNum = 0;
; 5677 : 	static int iFontId[7], iIndex[5];
; 5678 : 	static ACTION* pActTeacherSystemWnd = NULL;
; 5679 : 	static char szBuf[6][32];
; 5680 : 	static BOOL bOpen = FALSE;
; 5681 : 	char szMsg[128];
; 5682 : 
; 5683 : 	if (pActTeacherSystemWnd == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A, 0
  0001a	53		 push	 ebx
  0001b	8b 5d 0c	 mov	 ebx, DWORD PTR _data$[ebp]
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	0f 85 27 02 00
	00		 jne	 $LN25@TeacherSys

; 5684 : 	{
; 5685 : 		memset(iFontId, -1, sizeof(iFontId));

  00026	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff

; 5686 : 		memset(iIndex, -1, sizeof(iIndex));
; 5687 : 		memset(szBuf, 0, sizeof(szBuf));

  0002d	68 c0 00 00 00	 push	 192			; 000000c0H
  00032	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, xmm0
  00039	6a 00		 push	 0
  0003b	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+16, xmm0
  00043	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  0004a	68 00 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  0004f	c7 05 18 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+24, -1
  00059	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, xmm0
  00060	c7 05 10 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+16, -1
  0006a	e8 00 00 00 00	 call	 _memset

; 5688 : 		switch (flag)

  0006f	8b 45 08	 mov	 eax, DWORD PTR _flag$[ebp]
  00072	83 c4 0c	 add	 esp, 12			; 0000000cH
  00075	83 f8 03	 cmp	 eax, 3
  00078	0f 87 62 01 00
	00		 ja	 $LN101@TeacherSys
  0007e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN96@TeacherSys[eax*4]
$LN27@TeacherSys:

; 5689 : 		{
; 5690 : 			// åªæä¸ä¸ªäºº
; 5691 : 		case 0:
; 5692 : 			winW = 5;
; 5693 : 			winH = 2;
; 5694 : 			// get name
; 5695 : 			getStringToken(data, '|', 2, sizeof(szBuf[0]) - 1, szBuf[0]); // å­å¯¼å¸çåå­

  00085	68 00 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  0008a	6a 1f		 push	 31			; 0000001fH
  0008c	6a 02		 push	 2
  0008e	6a 7c		 push	 124			; 0000007cH
  00090	53		 push	 ebx
  00091	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 5
  0009b	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 2
  000a5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5696 : 			getStringToken(data, '|', 3, sizeof(szBuf[6]) - 1, szBuf[6]); // ååºå¯¼å¸ index

  000aa	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  000af	6a 1f		 push	 31			; 0000001fH
  000b1	6a 03		 push	 3
  000b3	6a 7c		 push	 124			; 0000007cH
  000b5	53		 push	 ebx
  000b6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5697 : 			iIndex[0] = atoi(szBuf[6]);

  000bb	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  000c0	e8 00 00 00 00	 call	 _atoi
  000c5	83 c4 2c	 add	 esp, 44			; 0000002cH
  000c8	a3 00 00 00 00	 mov	 DWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, eax

; 5698 : 			break;

  000cd	e9 0e 01 00 00	 jmp	 $LN101@TeacherSys
$LN28@TeacherSys:

; 5702 : 			winH = 5;
; 5703 : 			getStringToken(data, '|', 2, sizeof(szBuf[6]) - 1, szBuf[6]);

  000d2	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  000d7	6a 1f		 push	 31			; 0000001fH
  000d9	6a 02		 push	 2
  000db	6a 7c		 push	 124			; 0000007cH
  000dd	53		 push	 ebx
  000de	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 5
  000e8	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 5
  000f2	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5704 : 			iGetNum = atoi(szBuf[6]);

  000f7	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  000fc	e8 00 00 00 00	 call	 _atoi
  00101	83 c4 18	 add	 esp, 24			; 00000018H
  00104	a3 00 00 00 00	 mov	 DWORD PTR ?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, eax

; 5705 : 			// get name
; 5706 : 			for (i = 0; i < iGetNum; i++)

  00109	33 ff		 xor	 edi, edi
  0010b	85 c0		 test	 eax, eax
  0010d	0f 8e cd 00 00
	00		 jle	 $LN101@TeacherSys

; 5699 : 			// ä¸äººä»¥ä¸å¨åä¸æ ¼
; 5700 : 		case 1:
; 5701 : 			winW = 5;

  00113	b8 00 00 00 00	 mov	 eax, OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  00118	8d 77 04	 lea	 esi, DWORD PTR [edi+4]
  0011b	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv732[ebp], eax
$LL6@TeacherSys:

; 5707 : 			{
; 5708 : 				getStringToken(data, '|', 3 + i * 2, sizeof(szBuf[i]) - 1, szBuf[i]); // å­å¯¼å¸çåå­

  00121	50		 push	 eax
  00122	6a 1f		 push	 31			; 0000001fH
  00124	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00127	50		 push	 eax
  00128	6a 7c		 push	 124			; 0000007cH
  0012a	53		 push	 ebx
  0012b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5709 : 				getStringToken(data, '|', 4 + i * 2, sizeof(szBuf[6]) - 1, szBuf[6]); // ååºå¯¼å¸ index

  00130	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  00135	6a 1f		 push	 31			; 0000001fH
  00137	56		 push	 esi
  00138	6a 7c		 push	 124			; 0000007cH
  0013a	53		 push	 ebx
  0013b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5710 : 				iIndex[i] = atoi(szBuf[6]);

  00140	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  00145	e8 00 00 00 00	 call	 _atoi
  0014a	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[edi*4], eax
  00151	83 c4 2c	 add	 esp, 44			; 0000002cH
  00154	8b 85 78 ff ff
	ff		 mov	 eax, DWORD PTR tv732[ebp]
  0015a	47		 inc	 edi
  0015b	83 c0 20	 add	 eax, 32			; 00000020H
  0015e	83 c6 02	 add	 esi, 2
  00161	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv732[ebp], eax
  00167	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0016d	7c b2		 jl	 SHORT $LL6@TeacherSys

; 5711 : 			}
; 5712 : 			break;

  0016f	eb 6f		 jmp	 SHORT $LN101@TeacherSys
$LN29@TeacherSys:

; 5713 : 			// æ¾ç¤ºå¯¼å¸èµæ
; 5714 : 		case 2:
; 5715 : 			winW = 5;
; 5716 : 			winH = 3;
; 5717 : 			getStringToken(data, '|', 2, sizeof(szBuf[0]) - 1, szBuf[0]);	// å­å¯¼å¸çåå­

  00171	68 00 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  00176	6a 1f		 push	 31			; 0000001fH
  00178	6a 02		 push	 2
  0017a	6a 7c		 push	 124			; 0000007cH
  0017c	53		 push	 ebx
  0017d	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 5
  00187	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 3
  00191	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5718 : 			getStringToken(data, '|', 3, sizeof(szBuf[6]) - 1, szBuf[6]); // ååºå¨ä¸å¨çº¿ç¶æ

  00196	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  0019b	6a 1f		 push	 31			; 0000001fH
  0019d	6a 03		 push	 3
  0019f	6a 7c		 push	 124			; 0000007cH
  001a1	53		 push	 ebx
  001a2	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5719 : 			iOnline = atoi(szBuf[6]);

  001a7	68 c0 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+192
  001ac	e8 00 00 00 00	 call	 _atoi

; 5720 : 			getStringToken(data, '|', 4, sizeof(szBuf[1]) - 1, szBuf[1]); // å­æç³» ip

  001b1	68 20 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+32
  001b6	6a 1f		 push	 31			; 0000001fH
  001b8	6a 04		 push	 4
  001ba	6a 7c		 push	 124			; 0000007cH
  001bc	53		 push	 ebx
  001bd	a3 00 00 00 00	 mov	 DWORD PTR ?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, eax
  001c2	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  001c7	83 c4 40	 add	 esp, 64			; 00000040H

; 5721 : 			break;

  001ca	eb 14		 jmp	 SHORT $LN101@TeacherSys
$LN30@TeacherSys:

; 5722 : 		case 3:
; 5723 : 			winW = 5;

  001cc	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 5

; 5724 : 			winH = 2;

  001d6	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 2
$LN101@TeacherSys:

; 5725 : 			break;
; 5726 : 		}
; 5727 : 		iOldGX = nowGx;
; 5728 : 		iOldGY = nowGy;
; 5729 : 		winX = (640 - winW * 64) / 2;
; 5730 : 		winY = (456 - winH * 48) / 2;

  001e0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  001e6	bb 0a 00 00 00	 mov	 ebx, 10			; 0000000aH
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  001f0	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  001f6	2b df		 sub	 ebx, edi
  001f8	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGX@@3HA, eax ; iOldGX
  001fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00202	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  00205	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGY@@3HA, eax ; iOldGY
  0020a	b8 c8 01 00 00	 mov	 eax, 456		; 000001c8H

; 5731 : 		pActTeacherSystemWnd = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0020f	6a 01		 push	 1
  00211	c1 e1 04	 shl	 ecx, 4
  00214	2b c1		 sub	 eax, ecx
  00216	c1 e3 05	 shl	 ebx, 5
  00219	6a 00		 push	 0
  0021b	99		 cdq
  0021c	56		 push	 esi
  0021d	2b c2		 sub	 eax, edx
  0021f	89 1d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, ebx
  00225	d1 f8		 sar	 eax, 1
  00227	57		 push	 edi
  00228	50		 push	 eax
  00229	53		 push	 ebx
  0022a	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, eax
  0022f	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00234	83 c4 18	 add	 esp, 24			; 00000018H
  00237	a3 00 00 00 00	 mov	 DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A, eax
  0023c	5f		 pop	 edi

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  0023d	5e		 pop	 esi
  0023e	5b		 pop	 ebx
  0023f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00242	33 cd		 xor	 ecx, ebp
  00244	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00249	8b e5		 mov	 esp, ebp
  0024b	5d		 pop	 ebp
  0024c	c3		 ret	 0
$LN25@TeacherSys:

; 5732 : 	}
; 5733 : 	else
; 5734 : 	{
; 5735 : 		// close window
; 5736 : 		if (CheckMenuFlag() || (joy_trg[0] & JOY_ESC) || actBtn == 1 || menuBtn == 1 ||
; 5737 : 			disconnectServerFlag == TRUE || (iOldGX != nowGx || iOldGY != nowGy))

  0024d	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00252	85 c0		 test	 eax, eax
  00254	0f 85 dd 01 00
	00		 jne	 $LN33@TeacherSys
  0025a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00264	0f 85 cd 01 00
	00		 jne	 $LN33@TeacherSys
  0026a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00272	0f 84 bf 01 00
	00		 je	 $LN33@TeacherSys
  00278	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00280	0f 84 b1 01 00
	00		 je	 $LN33@TeacherSys
  00286	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0028d	0f 84 a4 01 00
	00		 je	 $LN33@TeacherSys
  00293	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iOldGX@@3HA ; iOldGX
  00298	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0029e	0f 85 93 01 00
	00		 jne	 $LN33@TeacherSys
  002a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iOldGY@@3HA ; iOldGY
  002a9	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  002af	0f 85 82 01 00
	00		 jne	 $LN33@TeacherSys

; 5738 : 		{
; 5739 : 			DeathAction(pActTeacherSystemWnd);
; 5740 : 			pActTeacherSystemWnd = NULL;
; 5741 : 			sTeacherSystemBtn = 0;
; 5742 : 			bOpen = FALSE;
; 5743 : 			return;
; 5744 : 		}
; 5745 : 		if (pActTeacherSystemWnd->hp >= 1)

  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A
  002ba	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002be	0f 8c 98 06 00
	00		 jl	 $LN34@TeacherSys

; 5746 : 		{
; 5747 : 			if (!bOpen)

  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  002c9	b9 01 00 00 00	 mov	 ecx, 1
  002ce	85 c0		 test	 eax, eax
  002d0	0f 44 c1	 cmove	 eax, ecx
  002d3	a3 00 00 00 00	 mov	 DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, eax

; 5748 : 				bOpen = TRUE;
; 5749 : 			// åªæä¸ä¸ªäººè¯¢é®æ¯å¦è¦å¯¹æ¹å½ä½ çå¯¼å¸
; 5750 : 			if (flag == 0)

  002d8	8b 45 08	 mov	 eax, DWORD PTR _flag$[ebp]
  002db	85 c0		 test	 eax, eax
  002dd	0f 85 8a 01 00
	00		 jne	 $LN37@TeacherSys

; 5751 : 			{
; 5752 : 				sprintf(szMsg, "ë¹ì ììë³í ìììµëê¹ %s", szBuf[0]);

  002e3	68 00 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  002e8	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  002ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@GGAGFANJ@?$LE?g?$LN?E?$MA?$LK?$LN?D?$LK?$LA?G?R?$LM?v?$MA?V?$LN?$MA?$LE?O?$LB?n?5?$CFs@
  002f3	50		 push	 eax
  002f4	e8 00 00 00 00	 call	 _sprintf

; 5753 : 				StockFontBuffer(winX + 20, winY + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  002f9	6a 00		 push	 0
  002fb	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00301	50		 push	 eax
  00302	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00307	6a 00		 push	 0
  00309	83 c0 14	 add	 eax, 20			; 00000014H
  0030c	6a 01		 push	 1
  0030e	50		 push	 eax
  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00314	83 c0 14	 add	 eax, 20			; 00000014H
  00317	50		 push	 eax
  00318	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5754 : 				StockFontBuffer(winX + 20, winY + 36, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë©í ê°ëì´ë³´ì¸ìï¼", 0);

  0031d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00322	6a 00		 push	 0
  00324	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KCELJCBE@?$LI?$OA?E?d?$LA?$KB?$LF?G?$LO?n?$LK?$LI?$LM?$LM?$LP?d?$KD?$LP@
  00329	6a 00		 push	 0
  0032b	83 c0 24	 add	 eax, 36			; 00000024H
  0032e	6a 01		 push	 1
  00330	50		 push	 eax
  00331	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00336	83 c0 14	 add	 eax, 20			; 00000014H
  00339	50		 push	 eax
  0033a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5755 : 				iFontId[0] = StockFontBuffer(winX + 64, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "í  ì¸", 2);

  0033f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0034a	6a 02		 push	 2
  0034c	c1 e1 04	 shl	 ecx, 4
  0034f	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00355	68 00 00 00 00	 push	 OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  0035a	6a 04		 push	 4
  0035c	6a 01		 push	 1
  0035e	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00361	50		 push	 eax
  00362	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00367	83 c0 40	 add	 eax, 64			; 00000040H
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5756 : 				iFontId[1] = StockFontBuffer(winX + (winW + 1) * 32, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ì·¨  ì", 2);

  00370	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00376	83 c4 54	 add	 esp, 84			; 00000054H
  00379	a3 00 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, eax
  0037e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00383	c1 e1 04	 shl	 ecx, 4
  00386	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0038c	6a 02		 push	 2
  0038e	68 00 00 00 00	 push	 OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  00393	6a 04		 push	 4
  00395	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00398	6a 01		 push	 1
  0039a	50		 push	 eax
  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  003a0	40		 inc	 eax
  003a1	c1 e0 05	 shl	 eax, 5
  003a4	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003b0	83 c4 18	 add	 esp, 24			; 00000018H
  003b3	a3 04 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+4, eax

; 5757 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  003b8	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  003bf	0f 84 97 00 00
	00		 je	 $LN60@TeacherSys

; 5758 : 				{
; 5759 : 					for (i = 0; i < 2; i++)

  003c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  003ca	33 f6		 xor	 esi, esi
  003cc	0f 1f 40 00	 npad	 4
$LL9@TeacherSys:

; 5760 : 					{
; 5761 : 						if (HitFontNo == iFontId[i])

  003d0	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4]
  003d7	74 17		 je	 SHORT $LN69@TeacherSys

; 5758 : 				{
; 5759 : 					for (i = 0; i < 2; i++)

  003d9	46		 inc	 esi
  003da	83 fe 02	 cmp	 esi, 2
  003dd	7c f1		 jl	 SHORT $LL9@TeacherSys

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  003df	5f		 pop	 edi
  003e0	5e		 pop	 esi
  003e1	5b		 pop	 ebx
  003e2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e5	33 cd		 xor	 ecx, ebp
  003e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ec	8b e5		 mov	 esp, ebp
  003ee	5d		 pop	 ebp
  003ef	c3		 ret	 0
$LN69@TeacherSys:

; 5762 : 						{
; 5763 : 							play_se(217, 320, 240);

  003f0	68 f0 00 00 00	 push	 240			; 000000f0H
  003f5	68 40 01 00 00	 push	 320			; 00000140H
  003fa	68 d9 00 00 00	 push	 217			; 000000d9H
  003ff	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00404	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5764 : 							// íì¸
; 5765 : 							if (i == 0)

  00407	85 f6		 test	 esi, esi
  00409	75 2c		 jne	 SHORT $LN33@TeacherSys

; 5766 : 							{
; 5767 : 								sprintf(szMsg, "O|%d", iIndex[0]);

  0040b	ff 35 00 00 00
	00		 push	 DWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA
$LN105@TeacherSys:

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  00411	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00417	68 00 00 00 00	 push	 OFFSET ??_C@_04PNIAPCPG@O?$HM?$CFd@
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 _sprintf
  00422	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  00428	50		 push	 eax
  00429	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0042f	e8 00 00 00 00	 call	 ?lssproto_TEACHER_SYSTEM_send@@YAXHPAD@Z ; lssproto_TEACHER_SYSTEM_send
  00434	83 c4 14	 add	 esp, 20			; 00000014H
$LN33@TeacherSys:
  00437	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A
  0043d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00442	83 c4 04	 add	 esp, 4
  00445	33 c0		 xor	 eax, eax
  00447	a3 00 00 00 00	 mov	 DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, eax
$LN104@TeacherSys:
  0044c	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn
$LN103@TeacherSys:
  00452	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A, 0
$LN60@TeacherSys:
  0045c	5f		 pop	 edi
  0045d	5e		 pop	 esi
  0045e	5b		 pop	 ebx
  0045f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00462	33 cd		 xor	 ecx, ebp
  00464	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00469	8b e5		 mov	 esp, ebp
  0046b	5d		 pop	 ebp
  0046c	c3		 ret	 0
$LN37@TeacherSys:

; 5768 : 								lssproto_TEACHER_SYSTEM_send(sockfd, szMsg);
; 5769 : 							}
; 5770 : 							DeathAction(pActTeacherSystemWnd);
; 5771 : 							pActTeacherSystemWnd = NULL;
; 5772 : 							sTeacherSystemBtn = 0;
; 5773 : 							bOpen = FALSE;
; 5774 : 							return;
; 5775 : 						}
; 5776 : 					}
; 5777 : 				}
; 5778 : 			}
; 5779 : 			// ä¸äººä»¥ä¸å¨åä¸æ ¼è¯¢é®æ¯å¦è¦å¯¹æ¹å½ä½ çå¯¼å¸
; 5780 : 			else if (flag == 1)

  0046d	83 f8 01	 cmp	 eax, 1
  00470	0f 85 25 01 00
	00		 jne	 $LN42@TeacherSys

; 5781 : 			{
; 5782 : 				sprintf(szMsg, "ë©í ë¡ ëêµ´ ì íí©ëê¹ï¼");

  00476	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0047c	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HGNGOOJL@?$LI?$OA?E?d?$LH?N?5?$LE?$KJ?$LB?$LM?5?$LM?$LB?E?C?G?U?$LE?O?$LB?n?$KD?$LP@
  00481	50		 push	 eax
  00482	e8 00 00 00 00	 call	 _sprintf

; 5783 : 				StockFontBuffer(winX + 20, winY + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  00487	6a 00		 push	 0
  00489	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  0048f	50		 push	 eax
  00490	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00495	6a 00		 push	 0
  00497	83 c0 14	 add	 eax, 20			; 00000014H
  0049a	6a 01		 push	 1
  0049c	50		 push	 eax
  0049d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  004a2	83 c0 14	 add	 eax, 20			; 00000014H
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5784 : 				iFontId[0] = StockFontBuffer(winX + winW / 2 * 64, winY + (winH - 1) * 48, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ì·¨  ì", 2);

  004ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  004b0	6a 02		 push	 2
  004b2	68 00 00 00 00	 push	 OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  004b7	6a 04		 push	 4
  004b9	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  004bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  004c1	83 c0 d0	 add	 eax, -48		; ffffffd0H
  004c4	c1 e1 04	 shl	 ecx, 4
  004c7	03 c1		 add	 eax, ecx
  004c9	6a 01		 push	 1
  004cb	50		 push	 eax
  004cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  004d1	99		 cdq
  004d2	2b c2		 sub	 eax, edx
  004d4	d1 f8		 sar	 eax, 1
  004d6	c1 e0 06	 shl	 eax, 6
  004d9	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  004df	50		 push	 eax
  004e0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5785 : 				for (i = 0; i < iGetNum; i++)

  004e5	33 f6		 xor	 esi, esi
  004e7	a3 00 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, eax
  004ec	83 c4 38	 add	 esp, 56			; 00000038H
  004ef	39 35 00 00 00
	00		 cmp	 DWORD PTR ?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, esi
  004f5	7e 42		 jle	 SHORT $LN11@TeacherSys

; 5781 : 			{
; 5782 : 				sprintf(szMsg, "ë©í ë¡ ëêµ´ ì íí©ëê¹ï¼");

  004f7	33 ff		 xor	 edi, edi
  004f9	bb 00 00 00 00	 mov	 ebx, OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  004fe	66 90		 npad	 2
$LL12@TeacherSys:

; 5786 : 					iFontId[i + 1] = StockFontBuffer(winX + 20, winY + 46 + i * 24, FONT_PRIO_FRONT, FONT_PAL_WHITE, szBuf[i], 2);

  00500	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00505	6a 02		 push	 2
  00507	53		 push	 ebx
  00508	83 c0 2e	 add	 eax, 46			; 0000002eH
  0050b	6a 00		 push	 0
  0050d	03 c7		 add	 eax, edi
  0050f	6a 01		 push	 1
  00511	50		 push	 eax
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00517	83 c0 14	 add	 eax, 20			; 00000014H
  0051a	50		 push	 eax
  0051b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00520	89 04 b5 04 00
	00 00		 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4+4], eax
  00527	83 c4 18	 add	 esp, 24			; 00000018H
  0052a	46		 inc	 esi
  0052b	83 c3 20	 add	 ebx, 32			; 00000020H
  0052e	83 c7 18	 add	 edi, 24			; 00000018H
  00531	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?iGetNum@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00537	7c c7		 jl	 SHORT $LL12@TeacherSys
$LN11@TeacherSys:

; 5787 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  00539	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00540	0f 84 16 ff ff
	ff		 je	 $LN60@TeacherSys

; 5788 : 				{
; 5789 : 					for (i = 0; i < 7; i++)

  00546	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  0054b	33 f6		 xor	 esi, esi
  0054d	0f 1f 00	 npad	 3
$LL15@TeacherSys:

; 5790 : 					{
; 5791 : 						if (HitFontNo == iFontId[i])

  00550	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4]
  00557	74 17		 je	 SHORT $LN70@TeacherSys

; 5788 : 				{
; 5789 : 					for (i = 0; i < 7; i++)

  00559	46		 inc	 esi
  0055a	83 fe 07	 cmp	 esi, 7
  0055d	7c f1		 jl	 SHORT $LL15@TeacherSys

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  0055f	5f		 pop	 edi
  00560	5e		 pop	 esi
  00561	5b		 pop	 ebx
  00562	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00565	33 cd		 xor	 ecx, ebp
  00567	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0056c	8b e5		 mov	 esp, ebp
  0056e	5d		 pop	 ebp
  0056f	c3		 ret	 0
$LN70@TeacherSys:

; 5792 : 						{
; 5793 : 							play_se(217, 320, 240);

  00570	68 f0 00 00 00	 push	 240			; 000000f0H
  00575	68 40 01 00 00	 push	 320			; 00000140H
  0057a	68 d9 00 00 00	 push	 217			; 000000d9H
  0057f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00584	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5794 : 							// éå¥½äºå¯¼å¸
; 5795 : 							if (i != 0)

  00587	85 f6		 test	 esi, esi
  00589	0f 84 a8 fe ff
	ff		 je	 $LN33@TeacherSys

; 5796 : 							{
; 5797 : 								sprintf(szMsg, "O|%d", iIndex[i - 1]);

  0058f	ff 34 b5 fc ff
	ff ff		 push	 DWORD PTR ?iIndex@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4-4]

; 5798 : 								lssproto_TEACHER_SYSTEM_send(sockfd, szMsg);
; 5799 : 							}
; 5800 : 							DeathAction(pActTeacherSystemWnd);
; 5801 : 							pActTeacherSystemWnd = NULL;
; 5802 : 							sTeacherSystemBtn = 0;
; 5803 : 							bOpen = FALSE;
; 5804 : 							return;

  00596	e9 76 fe ff ff	 jmp	 $LN105@TeacherSys
$LN42@TeacherSys:

; 5805 : 						}
; 5806 : 					}
; 5807 : 				}
; 5808 : 			}
; 5809 : 			// æ¾ç¤ºå¯¼å¸èµæ
; 5810 : 			else if (flag == 2)

  0059b	83 f8 02	 cmp	 eax, 2
  0059e	0f 85 87 02 00
	00		 jne	 $LN47@TeacherSys

; 5811 : 			{
; 5812 : 				sprintf(szMsg, "ë©í ìí");

  005a4	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  005aa	68 00 00 00 00	 push	 OFFSET ??_C@_08OHAGCECG@?$LI?$OA?E?d?$LL?s?E?B@
  005af	50		 push	 eax
  005b0	e8 00 00 00 00	 call	 _sprintf

; 5813 : 				StockFontBuffer(winX + 130, winY + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  005b5	6a 00		 push	 0
  005b7	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  005bd	50		 push	 eax
  005be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  005c3	6a 00		 push	 0
  005c5	83 c0 14	 add	 eax, 20			; 00000014H
  005c8	6a 01		 push	 1
  005ca	50		 push	 eax
  005cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  005d0	05 82 00 00 00	 add	 eax, 130		; 00000082H
  005d5	50		 push	 eax
  005d6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5814 : 				sprintf(szMsg, "ë©í ì´ë¦ï¼%s", szBuf[0]);

  005db	68 00 00 00 00	 push	 OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA
  005e0	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  005e6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FGGIBINO@?$LI?$OA?E?d?$MA?L?$LI?$KH?$KD?$LK?$CFs@
  005eb	50		 push	 eax
  005ec	e8 00 00 00 00	 call	 _sprintf

; 5815 : 				StockFontBuffer(winX + 20, winY + 36, FONT_PRIO_FRONT, FONT_PAL_WHITE, szMsg, 0);

  005f1	6a 00		 push	 0
  005f3	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMsg$[ebp]
  005f9	50		 push	 eax
  005fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  005ff	6a 00		 push	 0
  00601	83 c0 24	 add	 eax, 36			; 00000024H
  00604	6a 01		 push	 1
  00606	50		 push	 eax
  00607	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0060c	83 c0 14	 add	 eax, 20			; 00000014H
  0060f	50		 push	 eax
  00610	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5816 : 				StockFontBuffer(winX + 20, winY + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ìíï¼", 0);

  00615	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0061a	83 c4 44	 add	 esp, 68			; 00000044H
  0061d	83 c0 34	 add	 eax, 52			; 00000034H
  00620	6a 00		 push	 0
  00622	68 00 00 00 00	 push	 OFFSET ??_C@_06OLECLEEB@?$LL?s?E?B?$KD?$LK@
  00627	6a 00		 push	 0
  00629	6a 01		 push	 1
  0062b	50		 push	 eax
  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00631	83 c0 14	 add	 eax, 20			; 00000014H
  00634	50		 push	 eax
  00635	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5817 : 				StockFontBuffer(winX + 66, winY + 52, FONT_PRIO_FRONT,

  0063a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 1
  00641	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_07BMIEDOEC@Offline@
  00646	6a 00		 push	 0
  00648	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_06KCABBADG@Online@
  0064d	0f 45 c2	 cmovne	 eax, edx
  00650	50		 push	 eax
  00651	33 c0		 xor	 eax, eax
  00653	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 1
  0065a	0f 95 c0	 setne	 al
  0065d	8d 04 45 04 00
	00 00		 lea	 eax, DWORD PTR [eax*2+4]
  00664	50		 push	 eax
  00665	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0066a	83 c0 34	 add	 eax, 52			; 00000034H
  0066d	6a 01		 push	 1
  0066f	50		 push	 eax
  00670	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00675	83 c0 42	 add	 eax, 66			; 00000042H
  00678	50		 push	 eax
  00679	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5818 : 					iOnline == 1 ? FONT_PAL_YELLOW : FONT_PAL_RED, iOnline == 1 ? "Online" : "Offline", 0);
; 5819 : 				StockFontBuffer(winX + 148, winY + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ìíï¼", 0);

  0067e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00683	6a 00		 push	 0
  00685	68 00 00 00 00	 push	 OFFSET ??_C@_06KFNAOAIJ@?$MA?$LK?G?O?$KD?$LK@
  0068a	6a 00		 push	 0
  0068c	83 c0 34	 add	 eax, 52			; 00000034H
  0068f	6a 01		 push	 1
  00691	50		 push	 eax
  00692	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00697	05 94 00 00 00	 add	 eax, 148		; 00000094H
  0069c	50		 push	 eax
  0069d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  006a2	83 c4 48	 add	 esp, 72			; 00000048H

; 5820 : 				if (iOnline == 1)

  006a5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?iOnline@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 1
  006ac	75 5e		 jne	 SHORT $LN49@TeacherSys

; 5821 : 				{
; 5822 : 					for (i = 0; i < MAX_GMSV; i++)

  006ae	33 ff		 xor	 edi, edi
  006b0	be 01 00 00 00	 mov	 esi, OFFSET ?gmsv@@3PAUgameserver@@A+1
$LL18@TeacherSys:

; 5823 : 					{
; 5824 : 						if (gmsv[i].used == '1')

  006b5	80 7e ff 31	 cmp	 BYTE PTR [esi-1], 49	; 00000031H
  006b9	75 30		 jne	 SHORT $LN16@TeacherSys

; 5825 : 						{
; 5826 : 							if (strcmp(szBuf[1], gmsv[i].ipaddr) == 0)

  006bb	8b c6		 mov	 eax, esi
  006bd	b9 20 00 00 00	 mov	 ecx, OFFSET ?szBuf@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAY0CA@DA+32
$LL97@TeacherSys:
  006c2	8a 11		 mov	 dl, BYTE PTR [ecx]
  006c4	3a 10		 cmp	 dl, BYTE PTR [eax]
  006c6	75 1a		 jne	 SHORT $LN98@TeacherSys
  006c8	84 d2		 test	 dl, dl
  006ca	74 12		 je	 SHORT $LN99@TeacherSys
  006cc	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  006cf	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  006d2	75 0e		 jne	 SHORT $LN98@TeacherSys
  006d4	83 c1 02	 add	 ecx, 2
  006d7	83 c0 02	 add	 eax, 2
  006da	84 d2		 test	 dl, dl
  006dc	75 e4		 jne	 SHORT $LL97@TeacherSys
$LN99@TeacherSys:
  006de	33 c0		 xor	 eax, eax
  006e0	eb 05		 jmp	 SHORT $LN100@TeacherSys
$LN98@TeacherSys:
  006e2	1b c0		 sbb	 eax, eax
  006e4	83 c8 01	 or	 eax, 1
$LN100@TeacherSys:
  006e7	85 c0		 test	 eax, eax
  006e9	74 11		 je	 SHORT $LN71@TeacherSys
$LN16@TeacherSys:

; 5821 : 				{
; 5822 : 					for (i = 0; i < MAX_GMSV; i++)

  006eb	81 c6 00 01 00
	00		 add	 esi, 256		; 00000100H
  006f1	47		 inc	 edi
  006f2	81 fe 01 96 00
	00		 cmp	 esi, OFFSET ?gmsv@@3PAUgameserver@@A+38401
  006f8	7c bb		 jl	 SHORT $LL18@TeacherSys
  006fa	eb 37		 jmp	 SHORT $LN50@TeacherSys
$LN71@TeacherSys:

; 5827 : 							{
; 5828 : 								StockFontBuffer(winX + 190, winY + 52, FONT_PRIO_FRONT, FONT_PAL_GREEN, gmsv[i].name, 0);

  006fc	c1 e7 08	 shl	 edi, 8
  006ff	6a 00		 push	 0
  00701	81 c7 c0 00 00
	00		 add	 edi, OFFSET ?gmsv@@3PAUgameserver@@A+192
  00707	57		 push	 edi
  00708	6a 05		 push	 5

; 5829 : 								break;
; 5830 : 							}
; 5831 : 						}
; 5832 : 					}
; 5833 : 				}

  0070a	eb 09		 jmp	 SHORT $LN102@TeacherSys
$LN49@TeacherSys:

; 5834 : 				else
; 5835 : 					StockFontBuffer(winX + 190, winY + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ìë", 0);

  0070c	6a 00		 push	 0
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_04ELDJJCAA@?$LO?F?$LE?O@
  00713	6a 00		 push	 0
$LN102@TeacherSys:

; 5836 : 				iFontId[0] = StockFontBuffer(winX + 64, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ì¢  ë£", 2);

  00715	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0071a	83 c0 34	 add	 eax, 52			; 00000034H
  0071d	6a 01		 push	 1
  0071f	50		 push	 eax
  00720	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00725	05 be 00 00 00	 add	 eax, 190		; 000000beH
  0072a	50		 push	 eax
  0072b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00730	83 c4 18	 add	 esp, 24			; 00000018H
$LN50@TeacherSys:
  00733	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00739	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0073e	6a 02		 push	 2
  00740	c1 e1 04	 shl	 ecx, 4
  00743	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00749	68 00 00 00 00	 push	 OFFSET ??_C@_06MOLOGMLJ@?A?$LO?5?5?$LH?a@
  0074e	6a 04		 push	 4
  00750	6a 01		 push	 1
  00752	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  00755	50		 push	 eax
  00756	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0075b	83 c0 40	 add	 eax, 64			; 00000040H
  0075e	50		 push	 eax
  0075f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5837 : 				iFontId[1] = StockFontBuffer(winX + (winW + 1) * 32, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ë©í ì ì¤ê²©", 2);

  00764	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0076a	a3 00 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, eax
  0076f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00774	6a 02		 push	 2
  00776	c1 e1 04	 shl	 ecx, 4
  00779	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0077f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KOAEBMHD@?$LI?$OA?E?d?$MA?G?5?$LN?G?$LA?$NN@
  00784	6a 04		 push	 4
  00786	6a 01		 push	 1
  00788	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0078b	50		 push	 eax
  0078c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00791	40		 inc	 eax
  00792	c1 e0 05	 shl	 eax, 5
  00795	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0079b	50		 push	 eax
  0079c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  007a1	83 c4 30	 add	 esp, 48			; 00000030H
  007a4	a3 04 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+4, eax

; 5838 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  007a9	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  007b0	0f 84 a6 fc ff
	ff		 je	 $LN60@TeacherSys

; 5839 : 				{
; 5840 : 					for (i = 0; i < 2; i++)

  007b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  007bb	33 f6		 xor	 esi, esi
  007bd	0f 1f 00	 npad	 3
$LL21@TeacherSys:

; 5841 : 					{
; 5842 : 						if (HitFontNo == iFontId[i])

  007c0	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4]
  007c7	74 17		 je	 SHORT $LN72@TeacherSys

; 5839 : 				{
; 5840 : 					for (i = 0; i < 2; i++)

  007c9	46		 inc	 esi
  007ca	83 fe 02	 cmp	 esi, 2
  007cd	7c f1		 jl	 SHORT $LL21@TeacherSys

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  007cf	5f		 pop	 edi
  007d0	5e		 pop	 esi
  007d1	5b		 pop	 ebx
  007d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007d5	33 cd		 xor	 ecx, ebp
  007d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007dc	8b e5		 mov	 esp, ebp
  007de	5d		 pop	 ebp
  007df	c3		 ret	 0
$LN72@TeacherSys:

; 5843 : 						{
; 5844 : 							play_se(217, 320, 240);

  007e0	68 f0 00 00 00	 push	 240			; 000000f0H
  007e5	68 40 01 00 00	 push	 320			; 00000140H
  007ea	68 d9 00 00 00	 push	 217			; 000000d9H
  007ef	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 5845 : 							sTeacherSystemBtn = 0;

  007f4	33 c0		 xor	 eax, eax
  007f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  007f9	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn

; 5846 : 							// ì·¨ìå¯¼å¸èµæ ¼
; 5847 : 							if (i != 0)

  007ff	85 f6		 test	 esi, esi
  00801	74 0b		 je	 SHORT $LN55@TeacherSys

; 5848 : 								sTeacherSystemBtn = 5;

  00803	b8 05 00 00 00	 mov	 eax, 5
  00808	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn
$LN55@TeacherSys:

; 5849 : 							DeathAction(pActTeacherSystemWnd);

  0080e	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActTeacherSystemWnd@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAUaction@@A
  00814	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00819	83 c4 04	 add	 esp, 4

; 5850 : 							pActTeacherSystemWnd = NULL;
; 5851 : 							bOpen = FALSE;

  0081c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 0

; 5852 : 							return;

  00826	e9 27 fc ff ff	 jmp	 $LN103@TeacherSys
$LN47@TeacherSys:

; 5853 : 						}
; 5854 : 					}
; 5855 : 				}
; 5856 : 			}
; 5857 : 			// ç¡®è®¤æ¯å¦ççè¦ì·¨ìå¯¼å¸
; 5858 : 			else if (flag == 3)

  0082b	83 f8 03	 cmp	 eax, 3
  0082e	0f 85 28 fc ff
	ff		 jne	 $LN60@TeacherSys

; 5859 : 			{
; 5860 : 				StockFontBuffer(winX + 20, winY + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë©í ë¥¼ì·¨ìíë©´ë§¤ë ¥ê°ì¹ê°ê°ìí©ëë¤ï¼", 0);

  00834	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00839	6a 00		 push	 0
  0083b	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@CIJBHHMG@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LI?i?$LI?E?$LH?B?$LA?$KB?D?$KB?$LA?$KB?$LA?$KI?$LM?R?G?U?$LE@
  00840	6a 00		 push	 0
  00842	83 c0 14	 add	 eax, 20			; 00000014H
  00845	6a 01		 push	 1
  00847	50		 push	 eax
  00848	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0084d	83 c0 14	 add	 eax, 20			; 00000014H
  00850	50		 push	 eax
  00851	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5861 : 				StockFontBuffer(winX + 20, winY + 40, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë©í ë¥¼ì·¨ìíìê² ìµëê¹ï¼", 0);

  00856	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0085b	6a 00		 push	 0
  0085d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NKJNALFN@?$LI?$OA?E?d?$LI?$KG?C?k?$LM?R?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
  00862	6a 00		 push	 0
  00864	83 c0 28	 add	 eax, 40			; 00000028H
  00867	6a 01		 push	 1
  00869	50		 push	 eax
  0086a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0086f	83 c0 14	 add	 eax, 20			; 00000014H
  00872	50		 push	 eax
  00873	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5862 : 				iFontId[0] = StockFontBuffer(winX + 64, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "í  ì¸", 2);

  00878	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0087e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  00883	6a 02		 push	 2
  00885	c1 e1 04	 shl	 ecx, 4
  00888	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  0088e	68 00 00 00 00	 push	 OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  00893	6a 04		 push	 4
  00895	6a 01		 push	 1
  00897	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0089a	50		 push	 eax
  0089b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008a0	83 c0 40	 add	 eax, 64			; 00000040H
  008a3	50		 push	 eax
  008a4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 5863 : 				iFontId[1] = StockFontBuffer(winX + (winW + 1) * 32, winY + winH * 30, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ì·¨  ì", 2);

  008a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008af	83 c4 48	 add	 esp, 72			; 00000048H
  008b2	a3 00 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA, eax
  008b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008bc	c1 e1 04	 shl	 ecx, 4
  008bf	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?winH@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008c5	6a 02		 push	 2
  008c7	68 00 00 00 00	 push	 OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  008cc	6a 04		 push	 4
  008ce	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  008d1	6a 01		 push	 1
  008d3	50		 push	 eax
  008d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008d9	40		 inc	 eax
  008da	c1 e0 05	 shl	 eax, 5
  008dd	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA
  008e3	50		 push	 eax
  008e4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  008e9	83 c4 18	 add	 esp, 24			; 00000018H
  008ec	a3 04 00 00 00	 mov	 DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA+4, eax

; 5864 : 				if (mouse.onceState & MOUSE_LEFT_CRICK)

  008f1	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  008f8	0f 84 5e fb ff
	ff		 je	 $LN60@TeacherSys

; 5865 : 				{
; 5866 : 					for (i = 0; i < 2; i++)

  008fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00903	33 f6		 xor	 esi, esi
$LL24@TeacherSys:

; 5867 : 					{
; 5868 : 						if (HitFontNo == iFontId[i])

  00905	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?iFontId@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4PAHA[esi*4]
  0090c	74 17		 je	 SHORT $LN73@TeacherSys

; 5865 : 				{
; 5866 : 					for (i = 0; i < 2; i++)

  0090e	46		 inc	 esi
  0090f	83 fe 02	 cmp	 esi, 2
  00912	7c f1		 jl	 SHORT $LL24@TeacherSys

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  00914	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00917	5f		 pop	 edi
  00918	5e		 pop	 esi
  00919	33 cd		 xor	 ecx, ebp
  0091b	5b		 pop	 ebx
  0091c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00921	8b e5		 mov	 esp, ebp
  00923	5d		 pop	 ebp
  00924	c3		 ret	 0
$LN73@TeacherSys:

; 5869 : 						{
; 5870 : 							play_se(217, 320, 240);

  00925	68 f0 00 00 00	 push	 240			; 000000f0H
  0092a	68 40 01 00 00	 push	 320			; 00000140H
  0092f	68 d9 00 00 00	 push	 217			; 000000d9H
  00934	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00939	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5871 : 							// ì·¨ìå¯¼å¸èµæ ¼
; 5872 : 							if (i == 0)

  0093c	85 f6		 test	 esi, esi
  0093e	0f 85 f3 fa ff
	ff		 jne	 $LN33@TeacherSys

; 5873 : 								lssproto_TEACHER_SYSTEM_send(sockfd, "C|");

  00944	68 00 00 00 00	 push	 OFFSET ??_C@_02PBOICDIO@C?$HM@
  00949	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0094f	e8 00 00 00 00	 call	 ?lssproto_TEACHER_SYSTEM_send@@YAXHPAD@Z ; lssproto_TEACHER_SYSTEM_send
  00954	83 c4 08	 add	 esp, 8

; 5874 : 							DeathAction(pActTeacherSystemWnd);
; 5875 : 							pActTeacherSystemWnd = NULL;
; 5876 : 							sTeacherSystemBtn = 0;
; 5877 : 							bOpen = FALSE;
; 5878 : 							return;

  00957	e9 db fa ff ff	 jmp	 $LN33@TeacherSys
$LN34@TeacherSys:

; 5879 : 						}
; 5880 : 					}
; 5881 : 				}
; 5882 : 			}
; 5883 : 		}
; 5884 : 		else
; 5885 : 		{
; 5886 : 			if (bOpen)

  0095c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 0
  00963	0f 84 f3 fa ff
	ff		 je	 $LN60@TeacherSys

; 5887 : 			{
; 5888 : 				bOpen = FALSE;
; 5889 : 				DeathAction(pActTeacherSystemWnd);

  00969	50		 push	 eax
  0096a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bOpen@?1??TeacherSystemWndfunc@@YAXHPAD@Z@4HA, 0
  00974	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00979	83 c4 04	 add	 esp, 4

; 5890 : 				pActTeacherSystemWnd = NULL;
; 5891 : 				sTeacherSystemBtn = 0;

  0097c	33 c0		 xor	 eax, eax
  0097e	e9 c9 fa ff ff	 jmp	 $LN104@TeacherSys
  00983	90		 npad	 1
$LN96@TeacherSys:

; 5892 : 			}
; 5893 : 		}
; 5894 : 	}
; 5895 : }

  00984	00 00 00 00	 DD	 $LN27@TeacherSys
  00988	00 00 00 00	 DD	 $LN28@TeacherSys
  0098c	00 00 00 00	 DD	 $LN29@TeacherSys
  00990	00 00 00 00	 DD	 $LN30@TeacherSys
?TeacherSystemWndfunc@@YAXHPAD@Z ENDP			; TeacherSystemWndfunc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?ReleaseSpecAnim@@YAXXZ
_TEXT	SEGMENT
?ReleaseSpecAnim@@YAXXZ PROC				; ReleaseSpecAnim, COMDAT

; 5575 : 	breadAniFlag = FALSE;
; 5576 : 	for (int i = 0; i < ani_num; i++)

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ani_num@@3HA ; ani_num
  00006	57		 push	 edi
  00007	33 ff		 xor	 edi, edi
  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?breadAniFlag@@3HA, 0 ; breadAniFlag
  00013	85 c9		 test	 ecx, ecx
  00015	7e 4e		 jle	 SHORT $LN3@ReleaseSpe
  00017	56		 push	 esi
  00018	be 18 00 00 00	 mov	 esi, OFFSET ?ProduceXY@@3PAY06HA+24
  0001d	0f 1f 00	 npad	 3
$LL4@ReleaseSpe:

; 5577 : 	{
; 5578 : 		if (ProduceXY[i][5] == 1)

  00020	83 7e fc 01	 cmp	 DWORD PTR [esi-4], 1
  00024	75 36		 jne	 SHORT $LN2@ReleaseSpe

; 5579 : 		{
; 5580 : 			if (SPACT[ProduceXY[i][6]] != NULL)

  00026	8b 06		 mov	 eax, DWORD PTR [esi]
  00028	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[eax*4]
  0002f	85 c0		 test	 eax, eax
  00031	74 29		 je	 SHORT $LN2@ReleaseSpe

; 5581 : 			{
; 5582 : 				DeathAction(SPACT[ProduceXY[i][6]]);

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 5583 : 				SPACT[ProduceXY[i][6]] = NULL;

  00039	8b 06		 mov	 eax, DWORD PTR [esi]
  0003b	83 c4 04	 add	 esp, 4

; 5584 : 				ProduceXY[i][6] = -1;
; 5585 : 				ProduceXY[i][5] = 0;

  0003e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ani_num@@3HA ; ani_num
  00044	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  0004a	c7 46 fc 00 00
	00 00		 mov	 DWORD PTR [esi-4], 0
  00051	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?SPACT@@3PAPAUaction@@A[eax*4], 0
$LN2@ReleaseSpe:

; 5575 : 	breadAniFlag = FALSE;
; 5576 : 	for (int i = 0; i < ani_num; i++)

  0005c	47		 inc	 edi
  0005d	83 c6 1c	 add	 esi, 28			; 0000001cH
  00060	3b f9		 cmp	 edi, ecx
  00062	7c bc		 jl	 SHORT $LL4@ReleaseSpe
  00064	5e		 pop	 esi
$LN3@ReleaseSpe:
  00065	5f		 pop	 edi

; 5586 : 			}
; 5587 : 		}
; 5588 : 	}
; 5589 : }

  00066	c3		 ret	 0
?ReleaseSpecAnim@@YAXXZ ENDP				; ReleaseSpecAnim
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?SpecAnim@@YAXH@Z
_TEXT	SEGMENT
_my$1 = -8						; size = 4
_mx$2 = -4						; size = 4
_floor$ = 8						; size = 4
?SpecAnim@@YAXH@Z PROC					; SpecAnim, COMDAT

; 5489 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 5490 : 	int j = 0;
; 5491 : 
; 5492 : 	if (breadAniFlag && ProduceXY[0][5] == -2)

  00006	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?breadAniFlag@@3HA, 0 ; breadAniFlag
  0000d	74 09		 je	 SHORT $LN41@SpecAnim
  0000f	83 3d 14 00 00
	00 fe		 cmp	 DWORD PTR ?ProduceXY@@3PAY06HA+20, -2 ; fffffffeH

; 5493 : 		return;
; 5494 : 	else if (breadAniFlag == FALSE && ReadAniFile(floor) == -1)

  00016	eb 0e		 jmp	 SHORT $LN48@SpecAnim
$LN41@SpecAnim:
  00018	ff 75 08	 push	 DWORD PTR _floor$[ebp]
  0001b	e8 00 00 00 00	 call	 ?ReadAniFile@@YAHH@Z	; ReadAniFile
  00020	83 c4 04	 add	 esp, 4
  00023	83 f8 ff	 cmp	 eax, -1
$LN48@SpecAnim:

; 5495 : 		return;
; 5496 : 
; 5497 : 	for (int i = 0; i < ani_num; i++)

  00026	0f 84 59 02 00
	00		 je	 $LN3@SpecAnim
  0002c	53		 push	 ebx
  0002d	33 db		 xor	 ebx, ebx
  0002f	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?ani_num@@3HA, ebx ; ani_num
  00035	0f 8e 49 02 00
	00		 jle	 $LN46@SpecAnim
  0003b	56		 push	 esi
  0003c	57		 push	 edi
  0003d	bf 14 00 00 00	 mov	 edi, OFFSET ?ProduceXY@@3PAY06HA+20
$LL4@SpecAnim:

; 5498 : 	{
; 5499 : 		switch (SaTimeZoneNo)

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SaTimeZoneNo@@3HA ; SaTimeZoneNo
  00047	83 f8 03	 cmp	 eax, 3
  0004a	77 6a		 ja	 SHORT $LN24@SpecAnim
  0004c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN44@SpecAnim[eax*4]
$LN13@SpecAnim:

; 5500 : 		{
; 5501 : 		case LS_NIGHT:
; 5502 : 			if (ProduceXY[i][3] == 1 && ProduceXY[i][5] == 1)

  00053	8b 47 f8	 mov	 eax, DWORD PTR [edi-8]
  00056	83 f8 01	 cmp	 eax, 1
  00059	74 0d		 je	 SHORT $LN51@SpecAnim

; 5503 : 			{
; 5504 : 				if (SPACT[ProduceXY[i][6]] != NULL)
; 5505 : 				{
; 5506 : 					DeathAction(SPACT[ProduceXY[i][6]]);
; 5507 : 					SPACT[ProduceXY[i][6]] = NULL;
; 5508 : 					ProduceXY[i][6] = -1;
; 5509 : 				}
; 5510 : 				ProduceXY[i][5] = -1;
; 5511 : 			}
; 5512 : 			else if (ProduceXY[i][3] == 2 && ProduceXY[i][5] == -1)

  0005b	83 f8 02	 cmp	 eax, 2
  0005e	eb 47		 jmp	 SHORT $LN53@SpecAnim
$LN18@SpecAnim:

; 5513 : 				ProduceXY[i][5] = 0;
; 5514 : 			break;
; 5515 : 		case LS_MORNING:
; 5516 : 		case LS_NOON:
; 5517 : 		case LS_EVENING:
; 5518 : 			if (ProduceXY[i][3] == 2 && ProduceXY[i][5] == 1)

  00060	8b 47 f8	 mov	 eax, DWORD PTR [edi-8]
  00063	83 f8 02	 cmp	 eax, 2
  00066	75 3c		 jne	 SHORT $LN36@SpecAnim
$LN51@SpecAnim:

; 5519 : 			{
; 5520 : 				if (SPACT[ProduceXY[i][6]] != NULL)
; 5521 : 				{
; 5522 : 					DeathAction(SPACT[ProduceXY[i][6]]);
; 5523 : 					SPACT[ProduceXY[i][6]] = NULL;
; 5524 : 					ProduceXY[i][6] = -1;
; 5525 : 				}
; 5526 : 				ProduceXY[i][5] = -1;

  00068	83 3f 01	 cmp	 DWORD PTR [edi], 1
  0006b	75 49		 jne	 SHORT $LN24@SpecAnim
  0006d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00070	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[eax*4]
  00077	85 c0		 test	 eax, eax
  00079	74 1e		 je	 SHORT $LN23@SpecAnim
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	83 c4 04	 add	 esp, 4
  00087	c7 47 04 ff ff
	ff ff		 mov	 DWORD PTR [edi+4], -1
  0008e	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?SPACT@@3PAPAUaction@@A[eax*4], 0
$LN23@SpecAnim:
  00099	c7 07 ff ff ff
	ff		 mov	 DWORD PTR [edi], -1

; 5527 : 			}

  0009f	e9 ce 01 00 00	 jmp	 $LN2@SpecAnim
$LN36@SpecAnim:

; 5528 : 			else if (ProduceXY[i][3] == 1 && ProduceXY[i][5] == -1)

  000a4	83 f8 01	 cmp	 eax, 1
$LN53@SpecAnim:

; 5529 : 				ProduceXY[i][5] = 0;

  000a7	75 0d		 jne	 SHORT $LN24@SpecAnim
  000a9	83 3f ff	 cmp	 DWORD PTR [edi], -1
  000ac	75 08		 jne	 SHORT $LN24@SpecAnim
  000ae	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 5530 : 			break;
; 5531 : 		}
; 5532 : 
; 5533 : 		if (ProduceXY[i][5] == 0)

  000b4	eb 09		 jmp	 SHORT $LN42@SpecAnim
$LN24@SpecAnim:
  000b6	83 3f 00	 cmp	 DWORD PTR [edi], 0
  000b9	0f 85 b3 01 00
	00		 jne	 $LN2@SpecAnim
$LN42@SpecAnim:

; 5534 : 		{
; 5535 : 			for (j = 0; j < MAX_ANIM; j++)

  000bf	33 f6		 xor	 esi, esi
$LL9@SpecAnim:

; 5536 : 			{
; 5537 : 				if (SPACT[j] == NULL)

  000c1	83 3c b5 00 00
	00 00 00	 cmp	 DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4], 0
  000c9	74 0e		 je	 SHORT $LN31@SpecAnim

; 5534 : 		{
; 5535 : 			for (j = 0; j < MAX_ANIM; j++)

  000cb	46		 inc	 esi
  000cc	81 fe 00 01 00
	00		 cmp	 esi, 256		; 00000100H
  000d2	7c ed		 jl	 SHORT $LL9@SpecAnim

; 5536 : 			{
; 5537 : 				if (SPACT[j] == NULL)

  000d4	e9 99 01 00 00	 jmp	 $LN2@SpecAnim
$LN31@SpecAnim:

; 5538 : 				{
; 5539 : 					float mx, my;
; 5540 : 					//SPACT[j] = createWaterAnimation( ProduceXY[i][0] , ProduceXY[i][1] , ProduceXY[i][2] , ProduceXY[i][4] );
; 5541 : 					SPACT[j] = GetAction(DISP_PRIO_BOX3, sizeof(CHAREXTRA));

  000d9	6a 40		 push	 64			; 00000040H
  000db	6a 6f		 push	 111			; 0000006fH
  000dd	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  000e2	83 c4 08	 add	 esp, 8
  000e5	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4], eax

; 5542 : 					if (SPACT[j] == NULL)

  000ec	85 c0		 test	 eax, eax
  000ee	0f 84 7e 01 00
	00		 je	 $LN2@SpecAnim

; 5543 : 						break;
; 5544 : 					SPACT[j]->anim_chr_no = ProduceXY[i][0];

  000f4	8b 4f ec	 mov	 ecx, DWORD PTR [edi-20]
  000f7	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 5545 : 					SPACT[j]->anim_no = ANIM_STAND;

  000fd	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00104	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3

; 5546 : 					SPACT[j]->anim_ang = 1;

  0010e	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00115	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1

; 5547 : 					SPACT[j]->dispPrio = ProduceXY[i][4];

  0011f	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00126	8a 47 fc	 mov	 al, BYTE PTR [edi-4]
  00129	88 41 15	 mov	 BYTE PTR [ecx+21], al

; 5548 : 					SPACT[j]->atr |= ACT_ATR_HIT;

  0012c	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00133	83 88 a4 00 00
	00 04		 or	 DWORD PTR [eax+164], 4

; 5549 : 					SPACT[j]->nextGx = ProduceXY[i][1];

  0013a	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00141	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  00144	89 81 bc 00 00
	00		 mov	 DWORD PTR [ecx+188], eax

; 5550 : 					SPACT[j]->nextGy = ProduceXY[i][2];

  0014a	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00151	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  00154	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax

; 5551 : 					SPACT[j]->bufCount = 0;

  0015a	33 c9		 xor	 ecx, ecx
  0015c	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00163	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx

; 5552 : 					SPACT[j]->gx = ProduceXY[i][1];

  0016a	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00171	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  00174	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 5553 : 					SPACT[j]->gy = ProduceXY[i][2];

  0017a	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00181	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  00184	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 5554 : 					SPACT[j]->mx = (float)ProduceXY[i][1] * GRID_SIZE;
; 5555 : 					SPACT[j]->my = (float)ProduceXY[i][2] * GRID_SIZE;
; 5556 : 					SPACT[j]->vx = 0;
; 5557 : 					SPACT[j]->vy = 0;
; 5558 : 					camMapToGamen(SPACT[j]->mx, SPACT[j]->my, &mx, &my);

  0018a	8d 4d f8	 lea	 ecx, DWORD PTR _my$1[ebp]
  0018d	66 0f 6e 47 f0	 movd	 xmm0, DWORD PTR [edi-16]
  00192	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00199	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0019c	51		 push	 ecx
  0019d	8d 4d fc	 lea	 ecx, DWORD PTR _mx$2[ebp]
  001a0	51		 push	 ecx
  001a1	83 ec 08	 sub	 esp, 8
  001a4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42800000
  001ac	f3 0f 11 80 18
	01 00 00	 movss	 DWORD PTR [eax+280], xmm0
  001b4	66 0f 6e 47 f4	 movd	 xmm0, DWORD PTR [edi-12]
  001b9	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  001c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  001c3	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42800000
  001cb	f3 0f 11 80 1c
	01 00 00	 movss	 DWORD PTR [eax+284], xmm0
  001d3	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  001da	c7 80 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+288], 0
  001e4	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  001eb	c7 80 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+292], 0
  001f5	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  001fc	f3 0f 10 80 1c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+284]
  00204	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0020a	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  00212	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00217	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  0021c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$2[ebp]
  00221	83 c4 10	 add	 esp, 16			; 00000010H

; 5559 : 					SPACT[j]->x = (int)(mx + .5);

  00224	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  0022b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0022e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00236	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  0023a	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  0023d	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$1[ebp]

; 5560 : 					SPACT[j]->y = (int)(my + .5);

  00242	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00249	0f 5a c0	 cvtps2pd xmm0, xmm0
  0024c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00254	f2 0f 2c c8	 cvttsd2si ecx, xmm0
  00258	89 48 1c	 mov	 DWORD PTR [eax+28], ecx

; 5561 : 					extern void waterAniProc(ACTION * ptAct);
; 5562 : 					SPACT[j]->func = waterAniProc;

  0025b	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?SPACT@@3PAPAUaction@@A[esi*4]
  00262	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], OFFSET ?waterAniProc@@YAXPAUaction@@@Z ; waterAniProc

; 5563 : 					//pattern(SPACT[j], ANM_NOMAL_SPD, ANM_LOOP);
; 5564 : 					ProduceXY[i][5] = 1;

  00269	c7 07 01 00 00
	00		 mov	 DWORD PTR [edi], 1

; 5565 : 					ProduceXY[i][6] = j;

  0026f	89 77 04	 mov	 DWORD PTR [edi+4], esi
$LN2@SpecAnim:

; 5495 : 		return;
; 5496 : 
; 5497 : 	for (int i = 0; i < ani_num; i++)

  00272	43		 inc	 ebx
  00273	83 c7 1c	 add	 edi, 28			; 0000001cH
  00276	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?ani_num@@3HA ; ani_num
  0027c	0f 8c c0 fd ff
	ff		 jl	 $LL4@SpecAnim
  00282	5f		 pop	 edi
  00283	5e		 pop	 esi
$LN46@SpecAnim:
  00284	5b		 pop	 ebx
$LN3@SpecAnim:

; 5566 : 					break;
; 5567 : 				}
; 5568 : 			}
; 5569 : 		}
; 5570 : 	}
; 5571 : }

  00285	8b e5		 mov	 esp, ebp
  00287	5d		 pop	 ebp
  00288	c3		 ret	 0
  00289	0f 1f 00	 npad	 3
$LN44@SpecAnim:
  0028c	00 00 00 00	 DD	 $LN18@SpecAnim
  00290	00 00 00 00	 DD	 $LN18@SpecAnim
  00294	00 00 00 00	 DD	 $LN13@SpecAnim
  00298	00 00 00 00	 DD	 $LN18@SpecAnim
?SpecAnim@@YAXH@Z ENDP					; SpecAnim
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?actionShortCutKeyProc@@YAXXZ
_TEXT	SEGMENT
_key$ = -56						; size = 52
__$ArrayPad$ = -4					; size = 4
?actionShortCutKeyProc@@YAXXZ PROC			; actionShortCutKeyProc, COMDAT

; 4735 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 38	 sub	 esp, 56			; 00000038H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 4736 : 	unsigned int key[] =
; 4737 : 	{
; 4738 : 		JOY_CTRL_0,				// 0
; 4739 : 		JOY_CTRL_CIRCUMFLEX,	// 1
; 4740 : 		JOY_CTRL_9,				// 2
; 4741 : 		JOY_CTRL_7,				// 3
; 4742 : 		JOY_CTRL_8,				// 4
; 4743 : 		JOY_CTRL_1,				// 5
; 4744 : 		JOY_CTRL_2,				// 6
; 4745 : 		JOY_CTRL_4,				// 7
; 4746 : 		JOY_CTRL_5,				// 8
; 4747 : 		JOY_CTRL_6,				// 9
; 4748 : 		JOY_CTRL_MINUS,			// 10
; 4749 : 		JOY_CTRL_3,				// 11
; 4750 : 		JOY_CTRL_YEN			// 12
; 4751 : 	};
; 4752 : 	int i;
; 4753 : 	BOOL pushFlag = FALSE;
; 4754 : 
; 4755 : 	// ????î®??????????
; 4756 : 	if (moveRouteCnt != 0 || nowVx != 0 || nowVy != 0)

  00010	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?moveRouteCnt@@3FA, 0 ; moveRouteCnt
  00018	c7 45 c8 00 00
	20 00		 mov	 DWORD PTR _key$[ebp], 2097152 ; 00200000H
  0001f	c7 45 cc 00 00
	80 00		 mov	 DWORD PTR _key$[ebp+4], 8388608 ; 00800000H
  00026	c7 45 d0 00 00
	10 00		 mov	 DWORD PTR _key$[ebp+8], 1048576 ; 00100000H
  0002d	c7 45 d4 00 00
	04 00		 mov	 DWORD PTR _key$[ebp+12], 262144 ; 00040000H
  00034	c7 45 d8 00 00
	08 00		 mov	 DWORD PTR _key$[ebp+16], 524288 ; 00080000H
  0003b	c7 45 dc 00 10
	00 00		 mov	 DWORD PTR _key$[ebp+20], 4096 ; 00001000H
  00042	c7 45 e0 00 20
	00 00		 mov	 DWORD PTR _key$[ebp+24], 8192 ; 00002000H
  00049	c7 45 e4 00 80
	00 00		 mov	 DWORD PTR _key$[ebp+28], 32768 ; 00008000H
  00050	c7 45 e8 00 00
	01 00		 mov	 DWORD PTR _key$[ebp+32], 65536 ; 00010000H
  00057	c7 45 ec 00 00
	02 00		 mov	 DWORD PTR _key$[ebp+36], 131072 ; 00020000H
  0005e	c7 45 f0 00 00
	40 00		 mov	 DWORD PTR _key$[ebp+40], 4194304 ; 00400000H
  00065	c7 45 f4 00 40
	00 00		 mov	 DWORD PTR _key$[ebp+44], 16384 ; 00004000H
  0006c	c7 45 f8 00 00
	00 10		 mov	 DWORD PTR _key$[ebp+48], 268435456 ; 10000000H
  00073	0f 85 c4 00 00
	00		 jne	 $LN6@actionShor
  00079	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVx@@3MA
  00081	0f 57 c9	 xorps	 xmm1, xmm1
  00084	0f 2e c1	 ucomiss xmm0, xmm1
  00087	9f		 lahf
  00088	f6 c4 44	 test	 ah, 68			; 00000044H
  0008b	0f 8a ac 00 00
	00		 jp	 $LN6@actionShor
  00091	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVy@@3MA
  00099	0f 2e c1	 ucomiss xmm0, xmm1
  0009c	9f		 lahf
  0009d	f6 c4 44	 test	 ah, 68			; 00000044H
  000a0	0f 8a 97 00 00
	00		 jp	 $LN6@actionShor

; 4760 : 	{
; 4761 : 		if (joy_trg[1] & key[i])

  000a6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?joy_trg@@3PAKA+4
  000ab	56		 push	 esi
  000ac	33 f6		 xor	 esi, esi
  000ae	66 90		 npad	 2
$LL4@actionShor:
  000b0	85 44 b5 c8	 test	 DWORD PTR _key$[ebp+esi*4], eax
  000b4	75 15		 jne	 SHORT $LN15@actionShor

; 4757 : 		return;
; 4758 : 
; 4759 : 	for (i = 0; i < sizeof(key) / sizeof(unsigned int); i++)

  000b6	46		 inc	 esi
  000b7	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  000ba	72 f4		 jb	 SHORT $LL4@actionShor
  000bc	5e		 pop	 esi

; 4781 : 		}
; 4782 : 	}
; 4783 : }

  000bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c0	33 cd		 xor	 ecx, ebp
  000c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000c7	8b e5		 mov	 esp, ebp
  000c9	5d		 pop	 ebp
  000ca	c3		 ret	 0
$LN15@actionShor:

; 4762 : 		{
; 4763 : 			pushFlag = TRUE;
; 4764 : 			break;
; 4765 : 		}
; 4766 : 	}
; 4767 : 
; 4768 : 	if (!pushFlag)
; 4769 : 		return;
; 4770 : 
; 4771 : 	if (eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0)

  000cb	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  000d3	75 67		 jne	 SHORT $LN20@actionShor
  000d5	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  000dd	75 5d		 jne	 SHORT $LN20@actionShor
  000df	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  000e7	75 53		 jne	 SHORT $LN20@actionShor

; 4772 : 	{
; 4773 : 		if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  000e9	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  000ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  000f4	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  000fa	3b c8		 cmp	 ecx, eax
  000fc	73 3e		 jae	 SHORT $LN20@actionShor

; 4774 : 		{
; 4775 : 			if (bNewServer)

  000fe	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00105	56		 push	 esi
  00106	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0010c	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00112	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00118	74 07		 je	 SHORT $LN11@actionShor

; 4776 : 				lssproto_AC_send(sockfd, nowGx, nowGy, i);

  0011a	e8 00 00 00 00	 call	 ?lssproto_AC_send@@YAXHHHH@Z ; lssproto_AC_send
  0011f	eb 05		 jmp	 SHORT $LN21@actionShor
$LN11@actionShor:

; 4777 : 			else
; 4778 : 				old_lssproto_AC_send(sockfd, nowGx, nowGy, i);

  00121	e8 00 00 00 00	 call	 ?old_lssproto_AC_send@@YAXHHHH@Z ; old_lssproto_AC_send
$LN21@actionShor:

; 4779 : 			setPcAction(i);

  00126	83 c4 10	 add	 esp, 16			; 00000010H
  00129	56		 push	 esi
  0012a	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  0012f	83 c4 04	 add	 esp, 4

; 4780 : 			fieldBtnPushTime = TimeGetTime();

  00132	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00137	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN20@actionShor:
  0013c	5e		 pop	 esi
$LN6@actionShor:

; 4781 : 		}
; 4782 : 	}
; 4783 : }

  0013d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00140	33 cd		 xor	 ecx, ebp
  00142	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00147	8b e5		 mov	 esp, ebp
  00149	5d		 pop	 ebp
  0014a	c3		 ret	 0
?actionShortCutKeyProc@@YAXXZ ENDP			; actionShortCutKeyProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?drawFieldInfoWin@@YAXXZ
_TEXT	SEGMENT
?drawFieldInfoWin@@YAXXZ PROC				; drawFieldInfoWin, COMDAT

; 4679 : 	static ACTION* ptActMenuWin = NULL;
; 4680 : 	static int x, y, w, h;
; 4681 : 	int xx, yy;
; 4682 : 
; 4683 : 	if (fieldInfoTime == 0) {

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?fieldInfoTime@@3IA, 0 ; fieldInfoTime
  00007	75 21		 jne	 SHORT $LN2@drawFieldI

; 4684 : 		if (ptActMenuWin != NULL) {

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A
  0000e	85 c0		 test	 eax, eax
  00010	0f 84 b0 01 00
	00		 je	 $LN11@drawFieldI

; 4685 : 			DeathAction(ptActMenuWin);

  00016	50		 push	 eax
  00017	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4728 : 		}
; 4729 : 	}
; 4730 : 
; 4731 : }

  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A, 0
  00026	83 c4 04	 add	 esp, 4
  00029	c3		 ret	 0
$LN2@drawFieldI:

; 4686 : 			ptActMenuWin = NULL;
; 4687 : 		}
; 4688 : 		return;
; 4689 : 	}
; 4690 : 
; 4691 : 	if (MapWmdFlagBak)

  0002a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?MapWmdFlagBak@@3HA, 0 ; MapWmdFlagBak
  00031	0f 85 8f 01 00
	00		 jne	 $LN11@drawFieldI

; 4692 : 		return;
; 4693 : 
; 4694 : 	if (ptActMenuWin == NULL) {

  00037	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A, 0
  0003e	0f 85 b2 00 00
	00		 jne	 $LN13@drawFieldI

; 4695 : 		if (CheckMenuFlag()) {

  00044	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00049	85 c0		 test	 eax, eax
  0004b	74 21		 je	 SHORT $LN6@drawFieldI

; 4696 : 			if (MenuToggleFlag & JOY_CTRL_M)

  0004d	f7 05 00 00 00
	00 00 00 00 40	 test	 DWORD PTR ?MenuToggleFlag@@3IA, 1073741824 ; MenuToggleFlag, 40000000H
  00057	b9 01 00 00 00	 mov	 ecx, 1
  0005c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MapWmdFlagBak@@3HA ; MapWmdFlagBak
  00061	0f 45 c1	 cmovne	 eax, ecx
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?MapWmdFlagBak@@3HA, eax ; MapWmdFlagBak

; 4697 : 				MapWmdFlagBak = TRUE;
; 4698 : 			InitMenu2();

  00069	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN6@drawFieldI:

; 4699 : 		}
; 4700 : 		closeEtcSwitch();

  0006e	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 4701 : 		closeCharActionAnimeChange();

  00073	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange

; 4702 : 		closeJoinChannelWN();

  00078	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 4703 : 
; 4704 : 		// ??????î
; 4705 : 		w = 4;
; 4706 : 		h = 2;
; 4707 : 		x = (640 - w * 64) / 2;
; 4708 : 		y = (456 - h * 48) / 2;
; 4709 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 3);

  0007d	6a 03		 push	 3
  0007f	6a 00		 push	 0
  00081	6a 02		 push	 2
  00083	6a 04		 push	 4
  00085	68 b4 00 00 00	 push	 180			; 000000b4H
  0008a	68 c0 00 00 00	 push	 192			; 000000c0H
  0008f	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?w@?1??drawFieldInfoWin@@YAXXZ@4HA, 4
  00099	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??drawFieldInfoWin@@YAXXZ@4HA, 2
  000a3	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?x@?1??drawFieldInfoWin@@YAXXZ@4HA, 192 ; 000000c0H
  000ad	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??drawFieldInfoWin@@YAXXZ@4HA, 180 ; 000000b4H
  000b7	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 4710 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4711 : 		x = ptActMenuWin->x;
; 4712 : 		y = ptActMenuWin->y;
; 4713 : #endif
; 4714 : 		play_se(202, 320, 240);	// ????????

  000bc	68 f0 00 00 00	 push	 240			; 000000f0H
  000c1	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A, eax
  000c6	68 40 01 00 00	 push	 320			; 00000140H
  000cb	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ce	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000d1	68 ca 00 00 00	 push	 202			; 000000caH
  000d6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??drawFieldInfoWin@@YAXXZ@4HA, ecx
  000dc	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??drawFieldInfoWin@@YAXXZ@4HA, eax
  000e1	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000e6	83 c4 24	 add	 esp, 36			; 00000024H

; 4715 : 	}
; 4716 : 
; 4717 : 	if (ptActMenuWin != NULL) {

  000e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A, 0
  000f0	0f 84 d0 00 00
	00		 je	 $LN11@drawFieldI
$LN13@drawFieldI:

; 4718 : 		if (fieldInfoTime + 2000 <= TimeGetTime() || CheckMenuFlag() || windowTypeWN > -1 || actBtn == 1 || menuBtn == 1) {

  000f6	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  000fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldInfoTime@@3IA ; fieldInfoTime
  00101	81 c1 d0 07 00
	00		 add	 ecx, 2000		; 000007d0H
  00107	3b c8		 cmp	 ecx, eax
  00109	0f 86 95 00 00
	00		 jbe	 $LN10@drawFieldI
  0010f	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00114	85 c0		 test	 eax, eax
  00116	0f 85 88 00 00
	00		 jne	 $LN10@drawFieldI
  0011c	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00123	7f 7f		 jg	 SHORT $LN10@drawFieldI
  00125	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0012d	74 75		 je	 SHORT $LN10@drawFieldI
  0012f	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00137	74 6b		 je	 SHORT $LN10@drawFieldI

; 4722 : 			return;
; 4723 : 		}
; 4724 : 		if (ptActMenuWin->hp >= 1) {

  00139	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A
  0013e	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00142	0f 8c 7e 00 00
	00		 jl	 $LN11@drawFieldI

; 4725 : 			xx = (w * 64 - strlen(nowFloorName) / 2 * 17) / 2;

  00148	b9 00 00 00 00	 mov	 ecx, OFFSET ?nowFloorName@@3PADA ; nowFloorName
  0014d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL14@drawFieldI:
  00150	8a 01		 mov	 al, BYTE PTR [ecx]
  00152	41		 inc	 ecx
  00153	84 c0		 test	 al, al
  00155	75 f9		 jne	 SHORT $LL14@drawFieldI

; 4726 : 			yy = (h * 48 - 16) / 2;

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??drawFieldInfoWin@@YAXXZ@4HA
  0015c	2b ca		 sub	 ecx, edx

; 4727 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, nowFloorName, 0);

  0015e	6a 00		 push	 0
  00160	68 00 00 00 00	 push	 OFFSET ?nowFloorName@@3PADA ; nowFloorName
  00165	d1 e9		 shr	 ecx, 1
  00167	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0016a	c1 e0 04	 shl	 eax, 4
  0016d	83 e8 10	 sub	 eax, 16			; 00000010H
  00170	99		 cdq
  00171	2b c2		 sub	 eax, edx
  00173	d1 f8		 sar	 eax, 1
  00175	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??drawFieldInfoWin@@YAXXZ@4HA
  0017b	6a 00		 push	 0
  0017d	6a 01		 push	 1
  0017f	50		 push	 eax
  00180	8b c1		 mov	 eax, ecx
  00182	c1 e0 04	 shl	 eax, 4
  00185	03 c1		 add	 eax, ecx
  00187	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??drawFieldInfoWin@@YAXXZ@4HA
  0018d	c1 e1 06	 shl	 ecx, 6
  00190	2b c8		 sub	 ecx, eax
  00192	d1 e9		 shr	 ecx, 1
  00194	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??drawFieldInfoWin@@YAXXZ@4HA
  0019a	51		 push	 ecx
  0019b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001a0	83 c4 18	 add	 esp, 24			; 00000018H

; 4728 : 		}
; 4729 : 	}
; 4730 : 
; 4731 : }

  001a3	c3		 ret	 0
$LN10@drawFieldI:

; 4719 : 			DeathAction(ptActMenuWin);

  001a4	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A
  001aa	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4720 : 			ptActMenuWin = NULL;
; 4721 : 			fieldInfoTime = 0;

  001af	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fieldInfoTime@@3IA, 0 ; fieldInfoTime

; 4728 : 		}
; 4729 : 	}
; 4730 : 
; 4731 : }

  001b9	83 c4 04	 add	 esp, 4
  001bc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??drawFieldInfoWin@@YAXXZ@4PAUaction@@A, 0
$LN11@drawFieldI:
  001c6	c3		 ret	 0
?drawFieldInfoWin@@YAXXZ ENDP				; drawFieldInfoWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?disconnectServer@@YAHXZ
_TEXT	SEGMENT
_msg$ = -16						; size = 8
_yy$1$ = -8						; size = 4
_ret$1$ = -4						; size = 4
?disconnectServer@@YAHXZ PROC				; disconnectServer, COMDAT

; 4599 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 4600 : 	static ACTION* ptActMenuWin = NULL;
; 4601 : 	static int x, y, w, h;
; 4602 : 	static int btnId[1];
; 4603 : 	int id = 0;
; 4604 : 	char* msg[] =
; 4605 : 	{
; 4606 : 		"ìë²ìì ì°ê²°ì´ ì¢ë£ëììµëë¤.",
; 4607 : 		"ëìê°ìê² ìµëê¹ï¼"
; 4608 : 	};
; 4609 : 	int i;
; 4610 : 	int ret = 0;
; 4611 : 	int xx, yy;
; 4612 : 
; 4613 : 	if (ptActMenuWin == NULL)

  00006	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A
  0000c	57		 push	 edi
  0000d	33 ff		 xor	 edi, edi
  0000f	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp], OFFSET ??_C@_0CA@MLBEKKLD@?$LM?$KN?$LJ?v?$LP?M?$MA?G?5?$LP?$KM?$LA?a?$MA?L?5?A?$LO?$LH?a?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4@
  00016	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _msg$[ebp+4], OFFSET ??_C@_0BD@KHIHNLHO@?$LF?$LJ?$LO?F?$LA?$KB?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
  0001d	89 7d fc	 mov	 DWORD PTR _ret$1$[ebp], edi
  00020	85 c9		 test	 ecx, ecx
  00022	0f 85 81 00 00
	00		 jne	 $LN23@disconnect

; 4614 : 	{
; 4615 : 		if (CheckMenuFlag()) {

  00028	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0002d	85 c0		 test	 eax, eax
  0002f	74 05		 je	 SHORT $LN9@disconnect

; 4616 : 			InitMenu2();

  00031	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN9@disconnect:

; 4617 : 		}
; 4618 : 		closeEtcSwitch();

  00036	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 4619 : 		closeCharActionAnimeChange();

  0003b	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange

; 4620 : 		closeJoinChannelWN();

  00040	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 4621 : 
; 4622 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 4623 : 			btnId[i] = -2;
; 4624 : 		}
; 4625 : 		w = 5;
; 4626 : 		h = 3;
; 4627 : 		x = (640 - w * 64) / 2;
; 4628 : 		y = (456 - h * 48) / 2;
; 4629 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00045	6a 01		 push	 1
  00047	6a 00		 push	 0
  00049	6a 03		 push	 3
  0004b	6a 05		 push	 5
  0004d	68 9c 00 00 00	 push	 156			; 0000009cH
  00052	68 a0 00 00 00	 push	 160			; 000000a0H
  00057	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??disconnectServer@@YAHXZ@4PAHA, -2 ; fffffffeH
  00061	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?w@?1??disconnectServer@@YAHXZ@4HA, 5
  0006b	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?h@?1??disconnectServer@@YAHXZ@4HA, 3
  00075	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?x@?1??disconnectServer@@YAHXZ@4HA, 160 ; 000000a0H
  0007f	c7 05 00 00 00
	00 9c 00 00 00	 mov	 DWORD PTR ?y@?1??disconnectServer@@YAHXZ@4HA, 156 ; 0000009cH
  00089	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0008e	8b c8		 mov	 ecx, eax
  00090	83 c4 18	 add	 esp, 24			; 00000018H
  00093	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A, ecx

; 4630 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4631 : 		x = ptActMenuWin->x;

  00099	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0009c	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??disconnectServer@@YAHXZ@4HA, eax

; 4632 : 		y = ptActMenuWin->y;

  000a1	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000a4	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??disconnectServer@@YAHXZ@4HA, eax
$LN23@disconnect:

; 4633 : #endif
; 4634 : 	}
; 4635 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 4636 : 	extern int èªå¨ç»éæ¯å¦å¼å¯;
; 4637 : #endif
; 4638 : 	if (ptActMenuWin != NULL) {
; 4639 : 		id = -1;
; 4640 : 		if (ptActMenuWin->hp >= 1) {

  000a9	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000ad	0f 8c ec 00 00
	00		 jl	 $LN25@disconnect

; 4641 : 			//JL add æ­çº¿èªå¨ç¹OK
; 4642 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 4643 : 			id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  000b3	6a 01		 push	 1
  000b5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??disconnectServer@@YAHXZ@4PAHA
  000ba	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000bf	83 c4 08	 add	 esp, 8

; 4644 : #else
; 4645 : 			int JL_æ­çº¿èªå¨ç¹OK();
; 4646 : 
; 4647 : 			id = JL_æ­çº¿èªå¨ç¹OK();
; 4648 : 			if (id == -1) {
; 4649 : 				id = selFontId(btnId, sizeof(btnId) / sizeof(int));
; 4650 : 			}
; 4651 : 
; 4652 : #endif
; 4653 : 			if (id >= 0
; 4654 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 4655 : 				|| èªå¨ç»éæ¯å¦å¼å¯

  000c2	85 c0		 test	 eax, eax
  000c4	79 08		 jns	 SHORT $LN13@disconnect
  000c6	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, edi ; í»?Ôô?ãÀÜú??
  000cc	74 1b		 je	 SHORT $LN12@disconnect
$LN13@disconnect:

; 4656 : #endif
; 4657 : 				) {
; 4658 : 				DeathAction(ptActMenuWin);

  000ce	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A
  000d4	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000d9	83 c4 04	 add	 esp, 4

; 4659 : 				ptActMenuWin = NULL;

  000dc	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??disconnectServer@@YAHXZ@4PAUaction@@A, edi

; 4660 : 				ret = 1;

  000e2	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 1
$LN12@disconnect:

; 4661 : 			}
; 4662 : 
; 4663 : 			yy = (h * 48) / 4;

  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??disconnectServer@@YAHXZ@4HA
  000ee	53		 push	 ebx
  000ef	56		 push	 esi
  000f0	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000f3	c1 e0 04	 shl	 eax, 4
  000f6	99		 cdq
  000f7	83 e2 03	 and	 edx, 3
  000fa	03 c2		 add	 eax, edx
  000fc	c1 f8 02	 sar	 eax, 2
  000ff	33 f6		 xor	 esi, esi
  00101	89 45 f8	 mov	 DWORD PTR _yy$1$[ebp], eax
  00104	8b d8		 mov	 ebx, eax
$LL7@disconnect:

; 4664 : 			for (i = 0; i < sizeof(msg) / sizeof(char*); i++) {
; 4665 : 				xx = (w * 64 - strlen(msg[i]) / 2 * 17) / 2;

  00106	8b 54 b5 f0	 mov	 edx, DWORD PTR _msg$[ebp+esi*4]
  0010a	8b c2		 mov	 eax, edx
  0010c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0010f	90		 npad	 1
$LL24@disconnect:
  00110	8a 08		 mov	 cl, BYTE PTR [eax]
  00112	40		 inc	 eax
  00113	84 c9		 test	 cl, cl
  00115	75 f9		 jne	 SHORT $LL24@disconnect

; 4666 : 				StockFontBuffer(x + xx, y + (i + 1) * yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg[i], 0);

  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??disconnectServer@@YAHXZ@4HA
  0011d	2b c7		 sub	 eax, edi
  0011f	6a 00		 push	 0
  00121	52		 push	 edx
  00122	d1 e8		 shr	 eax, 1
  00124	03 cb		 add	 ecx, ebx
  00126	6a 00		 push	 0
  00128	6a 01		 push	 1
  0012a	51		 push	 ecx
  0012b	8b c8		 mov	 ecx, eax
  0012d	c1 e1 04	 shl	 ecx, 4
  00130	03 c8		 add	 ecx, eax
  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??disconnectServer@@YAHXZ@4HA
  00137	c1 e0 06	 shl	 eax, 6
  0013a	2b c1		 sub	 eax, ecx
  0013c	d1 e8		 shr	 eax, 1
  0013e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??disconnectServer@@YAHXZ@4HA
  00144	50		 push	 eax
  00145	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0014a	8b 7d f8	 mov	 edi, DWORD PTR _yy$1$[ebp]
  0014d	46		 inc	 esi
  0014e	83 c4 18	 add	 esp, 24			; 00000018H
  00151	03 df		 add	 ebx, edi
  00153	83 fe 02	 cmp	 esi, 2
  00156	72 ae		 jb	 SHORT $LL7@disconnect

; 4667 : 			}
; 4668 : 
; 4669 : 			xx = (w * 64 - strlen("íì¸") / 2 * 17) / 2;

  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??disconnectServer@@YAHXZ@4HA

; 4670 : 			btnId[0] = StockFontBuffer(x + xx, y + 3 * yy, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "íì¸", 2);

  0015d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??disconnectServer@@YAHXZ@4HA
  00163	6a 02		 push	 2
  00165	c1 e0 06	 shl	 eax, 6
  00168	68 00 00 00 00	 push	 OFFSET ??_C@_04IJNKKJEO@?H?$KO?$MA?N@
  0016d	83 e8 22	 sub	 eax, 34			; 00000022H
  00170	8d 0c 79	 lea	 ecx, DWORD PTR [ecx+edi*2]
  00173	6a 04		 push	 4
  00175	99		 cdq
  00176	03 cf		 add	 ecx, edi
  00178	6a 01		 push	 1
  0017a	51		 push	 ecx
  0017b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??disconnectServer@@YAHXZ@4HA
  00181	2b c2		 sub	 eax, edx
  00183	d1 f8		 sar	 eax, 1
  00185	03 c8		 add	 ecx, eax
  00187	51		 push	 ecx
  00188	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0018d	83 c4 18	 add	 esp, 24			; 00000018H
  00190	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??disconnectServer@@YAHXZ@4PAHA, eax

; 4671 : 		}
; 4672 : 	}
; 4673 : 
; 4674 : 	return ret;

  00195	8b 45 fc	 mov	 eax, DWORD PTR _ret$1$[ebp]
  00198	5e		 pop	 esi
  00199	5b		 pop	 ebx
  0019a	5f		 pop	 edi

; 4675 : }

  0019b	8b e5		 mov	 esp, ebp
  0019d	5d		 pop	 ebp
  0019e	c3		 ret	 0
$LN25@disconnect:

; 4671 : 		}
; 4672 : 	}
; 4673 : 
; 4674 : 	return ret;

  0019f	8b c7		 mov	 eax, edi
  001a1	5f		 pop	 edi

; 4675 : }

  001a2	8b e5		 mov	 esp, ebp
  001a4	5d		 pop	 ebp
  001a5	c3		 ret	 0
?disconnectServer@@YAHXZ ENDP				; disconnectServer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?closeJoinChannelWN@@YAXXZ
_TEXT	SEGMENT
?closeJoinChannelWN@@YAXXZ PROC				; closeJoinChannelWN, COMDAT

; 4821 : 	channelWNFlag = 0;
; 4822 : 	//joinChannelProc = 0;
; 4823 : 	DeathAction(ptActChannelWin);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActChannelWin@@3PAUaction@@A
  00006	33 c0		 xor	 eax, eax
  00008	66 a3 00 00 00
	00		 mov	 WORD PTR ?channelWNFlag@@3FA, ax ; channelWNFlag
  0000e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4824 : 	ptActChannelWin = NULL;
; 4825 : 	joinChannel2Proc = 0;
; 4826 : 	DeathAction(ptActChannel2Win);

  00013	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A
  00019	33 c0		 xor	 eax, eax
  0001b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActChannelWin@@3PAUaction@@A, 0
  00025	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinChannel2Proc@@3FA, ax
  0002b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4827 : 	ptActChannel2Win = NULL;
; 4828 : 	DeathAction(ptActLeaderFuncWin);

  00030	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A
  00036	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActChannel2Win@@3PAUaction@@A, 0
  00040	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 4829 : 	ptActLeaderFuncWin = NULL;
; 4830 : #ifdef _FRIENDCHANNEL
; 4831 : 	chatRoomBtn = 0;

  00045	33 c0		 xor	 eax, eax
  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActLeaderFuncWin@@3PAUaction@@A, 0
  00051	83 c4 0c	 add	 esp, 12			; 0000000cH
  00054	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtn@@3FA, ax ; chatRoomBtn

; 4832 : 	SelRoomBtn = 0;
; 4833 : #ifdef _STREET_VENDOR
; 4834 : 	if (sStreetVendorBtn != 3)

  0005a	66 83 3d 00 00
	00 00 03	 cmp	 WORD PTR ?sStreetVendorBtn@@3FA, 3 ; sStreetVendorBtn
  00062	66 a3 00 00 00
	00		 mov	 WORD PTR ?SelRoomBtn@@3FA, ax ; SelRoomBtn
  00068	74 18		 je	 SHORT $LN2@closeJoinC

; 4835 : 	{
; 4836 : 		DeathAction(pActStreetVendorWnd);

  0006a	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A ; pActStreetVendorWnd
  00070	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00075	83 c4 04	 add	 esp, 4

; 4837 : 		pActStreetVendorWnd = NULL;

  00078	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A, 0 ; pActStreetVendorWnd
$LN2@closeJoinC:

; 4838 : 	}
; 4839 : #else
; 4840 : #ifdef _TABLEOFSKILL
; 4841 : 	DeathAction(pActSkillWnd);
; 4842 : 	pActSkillWnd = NULL;
; 4843 : #endif
; 4844 : #endif
; 4845 : #endif
; 4846 : }

  00082	c3		 ret	 0
?closeJoinChannelWN@@YAXXZ ENDP				; closeJoinChannelWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?closeEtcSwitch@@YAXXZ
_TEXT	SEGMENT
?closeEtcSwitch@@YAXXZ PROC				; closeEtcSwitch, COMDAT

; 4178 : 	etcSwitchProcNo = 1000;

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchProcNo@@3FA, ax ; etcSwitchProcNo

; 4179 : }

  0000b	c3		 ret	 0
?closeEtcSwitch@@YAXXZ ENDP				; closeEtcSwitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?closeCharActionAnimeChange@@YAXXZ
_TEXT	SEGMENT
?closeCharActionAnimeChange@@YAXXZ PROC			; closeCharActionAnimeChange, COMDAT

; 3945 : 	charActionAnimeChangeProcNo = 1000;

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	66 a3 00 00 00
	00		 mov	 WORD PTR ?charActionAnimeChangeProcNo@@3FA, ax ; charActionAnimeChangeProcNo

; 3946 : }

  0000b	c3		 ret	 0
?closeCharActionAnimeChange@@YAXXZ ENDP			; closeCharActionAnimeChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?checkFieldMenuFlag@@YAHXZ
_TEXT	SEGMENT
?checkFieldMenuFlag@@YAHXZ PROC				; checkFieldMenuFlag, COMDAT

; 3934 : 	return nowFieldMenuOpenFlag;

  00000	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?nowFieldMenuOpenFlag@@3FA ; nowFieldMenuOpenFlag

; 3935 : }

  00007	c3		 ret	 0
?checkFieldMenuFlag@@YAHXZ ENDP				; checkFieldMenuFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?drawField@@YAXXZ
_TEXT	SEGMENT
__real@c020000000000000$1$ = -20			; size = 8
__real@3f00000000000000$1$ = -12			; size = 8
_rightUpPanelX$1$ = -4					; size = 4
?drawField@@YAXXZ PROC					; drawField, COMDAT

; 3078 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H

; 3079 : 	int leftUpPanelX = 0;		// ?î¯????îª???î³
; 3080 : 	int leftUpPanelY = 0;
; 3081 : 	int rightUpPanelX = 504 + DISPLACEMENT_X;	// ?î¯????îª???î³

  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi

; 3082 : 	int rightUpPanelY = 0;
; 3083 : 	int i;
; 3084 : #ifdef _WATERANIMATION //Syu ADD æ³ªä¹æµ·å¨ç»å±
; 3085 : 	int Createflag = 0;
; 3086 : 	int RandAnimate = 0;
; 3087 : #endif
; 3088 : #ifdef _AniRandom   // Syu ADD éæºäº§çç¯å¢å¨ç»
; 3089 : 	int x1, y1;
; 3090 : #endif
; 3091 : #ifdef _AniCrossFrame	  // Syu ADD å¨ç»å±æ¸¸è¿ç»é¢çç©
; 3092 : 	int x2, y2;
; 3093 : #endif
; 3094 : 
; 3095 : #if 0
; 3096 : #ifdef  _STONDEBUG__MSG
; 3097 : 
; 3098 : 	char msg[256];
; 3099 : 	// ?????Echo?î¢î?????????î¸î
; 3100 : 	//  î­î¹???????????î????????î¡????
; 3101 : 	sprintf(msg, "%s Server Alive -> %02d/%02d/%02d %02d:%02d:%02d",
; 3102 : 		selectServerName2[selectServerIndex],
; 3103 : 		(serverAliveTime->tm_year % 100), serverAliveTime->tm_mon + 1, serverAliveTime->tm_mday,
; 3104 : 		serverAliveTime->tm_hour, serverAliveTime->tm_min, serverAliveTime->tm_sec);
; 3105 : 	StockFontBuffer(108, 8, FONT_PRIO_FRONT, 0, msg, 0);
; 3106 : 
; 3107 : #endif
; 3108 : #endif
; 3109 : 
; 3110 : #ifdef _SPECIALSPACEANIM	// Syu ADD ç¹æ®åºæ¯å¨ç»éç½®
; 3111 : 	SpecAnim(nowFloor);

  0000e	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowFloor@@3HA ; nowFloor
  00014	05 f8 01 00 00	 add	 eax, 504		; 000001f8H
  00019	89 45 fc	 mov	 DWORD PTR _rightUpPanelX$1$[ebp], eax
  0001c	e8 00 00 00 00	 call	 ?SpecAnim@@YAXH@Z	; SpecAnim

; 3112 : #endif
; 3113 : #ifdef _AniCrossFrame	  // Syu ADD å¨ç»å±æ¸¸è¿ç»é¢çç©
; 3114 : 	if ((nowFloor == 817) || (nowFloor == 8007) || (nowFloor == 8101) || (nowFloor == 8100) ||
; 3115 : 		(nowFloor == 8027) || (nowFloor == 8028) || (nowFloor == 8029) || (nowFloor == 8015) || (nowFloor == 8113) || (nowFloor == 8114))

  00021	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c020000000000000
  00029	83 c4 04	 add	 esp, 4
  0002c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
  00032	f2 0f 11 45 ec	 movsd	 QWORD PTR __real@c020000000000000$1$[ebp], xmm0
  00037	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3f00000000000000
  0003f	f2 0f 11 45 f4	 movsd	 QWORD PTR __real@3f00000000000000$1$[ebp], xmm0
  00044	81 f9 31 03 00
	00		 cmp	 ecx, 817		; 00000331H
  0004a	74 4c		 je	 SHORT $LN24@drawField
  0004c	81 f9 47 1f 00
	00		 cmp	 ecx, 8007		; 00001f47H
  00052	74 44		 je	 SHORT $LN24@drawField
  00054	81 f9 a5 1f 00
	00		 cmp	 ecx, 8101		; 00001fa5H
  0005a	74 3c		 je	 SHORT $LN24@drawField
  0005c	81 f9 a4 1f 00
	00		 cmp	 ecx, 8100		; 00001fa4H
  00062	74 34		 je	 SHORT $LN24@drawField
  00064	81 f9 5b 1f 00
	00		 cmp	 ecx, 8027		; 00001f5bH
  0006a	74 2c		 je	 SHORT $LN24@drawField
  0006c	81 f9 5c 1f 00
	00		 cmp	 ecx, 8028		; 00001f5cH
  00072	74 24		 je	 SHORT $LN24@drawField
  00074	81 f9 5d 1f 00
	00		 cmp	 ecx, 8029		; 00001f5dH
  0007a	74 1c		 je	 SHORT $LN24@drawField
  0007c	81 f9 4f 1f 00
	00		 cmp	 ecx, 8015		; 00001f4fH
  00082	74 14		 je	 SHORT $LN24@drawField
  00084	81 f9 b1 1f 00
	00		 cmp	 ecx, 8113		; 00001fb1H
  0008a	74 0c		 je	 SHORT $LN24@drawField
  0008c	81 f9 b2 1f 00
	00		 cmp	 ecx, 8114		; 00001fb2H
  00092	0f 85 3c 03 00
	00		 jne	 $LN57@drawField
$LN24@drawField:

; 3116 : 	{
; 3117 : 		//æ¸¸è¿ç»é¢å¨ç» Start
; 3118 : 		if (flag22 == false)

  00098	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?flag22@@3_NA, 0 ; flag22
  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?WaterAct2@@3PAUaction@@A
  000a5	75 5e		 jne	 SHORT $LN26@drawField

; 3119 : 		{
; 3120 : 			if (WaterAct2 != NULL && Timeflag2 == false)

  000a7	85 d2		 test	 edx, edx
  000a9	74 5a		 je	 SHORT $LN26@drawField
  000ab	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?Timeflag2@@3_NA, 0 ; Timeflag2
  000b2	75 51		 jne	 SHORT $LN26@drawField

; 3121 : 			{
; 3122 : 				DeathAction(WaterAct2);

  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000ba	83 c4 04	 add	 esp, 4

; 3123 : 				WaterAct2 = NULL;

  000bd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?WaterAct2@@3PAUaction@@A, 0

; 3124 : 				Timeflag2 = true;

  000c7	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?Timeflag2@@3_NA, 1 ; Timeflag2

; 3125 : 				//ç»æåä¸ä¸æ¬¡åºç°çç­å¾æ¶é´
; 3126 : 				TimeTickMax2 = RAND(500, 1500);

  000ce	e8 00 00 00 00	 call	 _rand
  000d3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?WaterAct2@@3PAUaction@@A
  000d9	b9 f4 01 00 00	 mov	 ecx, 500		; 000001f4H
  000de	66 0f 6e c0	 movd	 xmm0, eax
  000e2	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c08f480000000000
  000ee	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  000f3	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000f7	2b c8		 sub	 ecx, eax
  000f9	89 0d 00 00 00
	00		 mov	 DWORD PTR ?TimeTickMax2@@3HA, ecx ; TimeTickMax2
  000ff	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
$LN26@drawField:

; 3127 : 			}
; 3128 : 		}
; 3129 : 		if (Timeflag2 == true)

  00105	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?Timeflag2@@3_NA, 1 ; Timeflag2
  0010c	75 24		 jne	 SHORT $LN28@drawField

; 3130 : 		{
; 3131 : 			TimeTick2++;

  0010e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?TimeTick2@@3HA ; TimeTick2
  00113	40		 inc	 eax
  00114	a3 00 00 00 00	 mov	 DWORD PTR ?TimeTick2@@3HA, eax ; TimeTick2
  00119	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?TimeTickMax2@@3HA ; TimeTickMax2

; 3132 : 			if (TimeTick2 > TimeTickMax2)

  0011f	7e 11		 jle	 SHORT $LN28@drawField

; 3133 : 			{
; 3134 : 				Timeflag2 = false;

  00121	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?Timeflag2@@3_NA, 0 ; Timeflag2

; 3135 : 				TimeTick2 = 0;

  00128	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?TimeTick2@@3HA, 0 ; TimeTick2
$LN28@drawField:

; 3136 : 			}
; 3137 : 		}
; 3138 : 		if (WaterAct2 == NULL || delFlag == false)

  00132	85 d2		 test	 edx, edx
  00134	74 0d		 je	 SHORT $LN30@drawField
  00136	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?delFlag@@3_NA, 0 ; delFlag
  0013d	0f 85 91 02 00
	00		 jne	 $LN57@drawField
$LN30@drawField:

; 3139 : 		{
; 3140 : 			delFlag = true;

  00143	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?delFlag@@3_NA, 1 ; delFlag

; 3141 : 			flag22 = true;

  0014a	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?flag22@@3_NA, 1 ; flag22

; 3142 : 			x2 = RAND(0, 1);

  00151	e8 00 00 00 00	 call	 _rand
  00156	66 0f 6e c0	 movd	 xmm0, eax
  0015a	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0015e	f2 0f 58 c0	 addsd	 xmm0, xmm0
  00162	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00167	f2 0f 2c f8	 cvttsd2si edi, xmm0

; 3143 : 			RandAnimate = RAND(0, 2);

  0016b	e8 00 00 00 00	 call	 _rand
  00170	66 0f 6e c0	 movd	 xmm0, eax
  00174	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00178	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4008000000000000
  00180	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00185	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 3144 : 			if (RandAnimate > 1)

  00189	83 f8 01	 cmp	 eax, 1
  0018c	7e 2a		 jle	 SHORT $LN31@drawField

; 3145 : 				RandAnimate = RAND(101512, 101515);

  0018e	e8 00 00 00 00	 call	 _rand
  00193	be 88 8c 01 00	 mov	 esi, 101512		; 00018c88H
  00198	66 0f 6e c0	 movd	 xmm0, eax
  0019c	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  001a0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c010000000000000
  001a8	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  001ad	f2 0f 2c c0	 cvttsd2si eax, xmm0
  001b1	2b f0		 sub	 esi, eax
  001b3	e9 e9 00 00 00	 jmp	 $LN41@drawField
$LN31@drawField:

; 3146 : 			//æå³ä¸ãå·¦ä¸ãå³ä¸ãå·¦ä¸åä¸ªæ¹å
; 3147 : 			else
; 3148 : 			{
; 3149 : 				RandAnimate = RAND(0, 4);

  001b8	e8 00 00 00 00	 call	 _rand
  001bd	66 0f 6e c0	 movd	 xmm0, eax
  001c1	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  001c5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4014000000000000
  001cd	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  001d2	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 3150 : 				if (RandAnimate > 2)

  001d6	83 f8 02	 cmp	 eax, 2
  001d9	7e 1c		 jle	 SHORT $LN33@drawField

; 3151 : 					RandAnimate = RAND(101582, 101593);

  001db	e8 00 00 00 00	 call	 _rand
  001e0	be ce 8c 01 00	 mov	 esi, 101582		; 00018cceH
  001e5	66 0f 6e c0	 movd	 xmm0, eax
  001e9	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  001ed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c028000000000000
  001f5	eb 17		 jmp	 SHORT $LN170@drawField
$LN33@drawField:

; 3152 : 				else
; 3153 : 					RandAnimate = RAND(101516, 101523);

  001f7	e8 00 00 00 00	 call	 _rand
  001fc	be 8c 8c 01 00	 mov	 esi, 101516		; 00018c8cH
  00201	66 0f 6e c0	 movd	 xmm0, eax
  00205	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00209	f2 0f 59 45 ec	 mulsd	 xmm0, QWORD PTR __real@c020000000000000$1$[ebp]
$LN170@drawField:

; 3154 : 				if (RandAnimate == 101516 || RandAnimate == 101518)

  0020e	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00213	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00217	2b f0		 sub	 esi, eax
  00219	81 fe 8c 8c 01
	00		 cmp	 esi, 101516		; 00018c8cH
  0021f	74 5b		 je	 SHORT $LN37@drawField
  00221	81 fe 8e 8c 01
	00		 cmp	 esi, 101518		; 00018c8eH
  00227	74 53		 je	 SHORT $LN37@drawField

; 3156 : 				else if (RandAnimate == 101521 || RandAnimate == 101523 ||

  00229	81 fe 91 8c 01
	00		 cmp	 esi, 101521		; 00018c91H
  0022f	74 3f		 je	 SHORT $LN40@drawField
  00231	81 fe 93 8c 01
	00		 cmp	 esi, 101523		; 00018c93H
  00237	74 37		 je	 SHORT $LN40@drawField
  00239	81 fe d3 8c 01
	00		 cmp	 esi, 101587		; 00018cd3H
  0023f	7f 08		 jg	 SHORT $LN38@drawField
  00241	81 fe ce 8c 01
	00		 cmp	 esi, 101582		; 00018cceH
  00247	7d 27		 jge	 SHORT $LN40@drawField
$LN38@drawField:

; 3159 : 				else if (RandAnimate == 101522 || RandAnimate == 101520 ||

  00249	81 fe 92 8c 01
	00		 cmp	 esi, 101522		; 00018c92H
  0024f	74 13		 je	 SHORT $LN42@drawField
  00251	81 fe 90 8c 01
	00		 cmp	 esi, 101520		; 00018c90H
  00257	74 0b		 je	 SHORT $LN42@drawField
  00259	8d 86 2c 73 fe
	ff		 lea	 eax, DWORD PTR [esi-101588]
  0025f	83 f8 05	 cmp	 eax, 5
  00262	77 3d		 ja	 SHORT $LN41@drawField
$LN42@drawField:

; 3160 : 					(RandAnimate <= 101593 && RandAnimate >= 101588))
; 3161 : 					x2 = RAND(6, 7); //å³ä¸

  00264	e8 00 00 00 00	 call	 _rand
  00269	bf 06 00 00 00	 mov	 edi, 6
  0026e	eb 16		 jmp	 SHORT $LN171@drawField
$LN40@drawField:

; 3157 : 					(RandAnimate <= 101587 && RandAnimate >= 101582))
; 3158 : 					x2 = RAND(4, 5); //å·¦ä¸

  00270	e8 00 00 00 00	 call	 _rand
  00275	bf 04 00 00 00	 mov	 edi, 4
  0027a	eb 0a		 jmp	 SHORT $LN171@drawField
$LN37@drawField:

; 3155 : 					x2 = RAND(2, 3);

  0027c	e8 00 00 00 00	 call	 _rand
  00281	bf 02 00 00 00	 mov	 edi, 2
$LN171@drawField:

; 3162 : 			}
; 3163 : 			//ê²°ì è¿å¥ç»é¢çä½ç½®
; 3164 : 			if (x2 == 0)  // å·¦ä¸

  00286	66 0f 6e c0	 movd	 xmm0, eax
  0028a	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0028e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c000000000000000
  00296	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  0029b	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0029f	2b f8		 sub	 edi, eax
$LN41@drawField:
  002a1	85 ff		 test	 edi, edi
  002a3	75 2f		 jne	 SHORT $LN43@drawField

; 3165 : 			{
; 3166 : 				x2 = RAND(50, 640);

  002a5	e8 00 00 00 00	 call	 _rand

; 3167 : 				y2 = 0;
; 3168 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);

  002aa	6a 12		 push	 18			; 00000012H
  002ac	56		 push	 esi
  002ad	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  002b2	66 0f 6e c0	 movd	 xmm0, eax
  002b6	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  002ba	57		 push	 edi
  002bb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c082780000000000
  002c3	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  002c8	f2 0f 2c c0	 cvttsd2si eax, xmm0
  002cc	2b c8		 sub	 ecx, eax
  002ce	51		 push	 ecx

; 3169 : 			}

  002cf	e9 ed 00 00 00	 jmp	 $LN181@drawField
$LN43@drawField:

; 3170 : 			else if (x2 == 1)

  002d4	83 ff 01	 cmp	 edi, 1
  002d7	75 33		 jne	 SHORT $LN45@drawField
$LN172@drawField:

; 3211 : 			}
; 3212 : 		}
; 3213 : 	}
; 3214 : 	if ((nowFloor != 817) && (nowFloor != 8007) && (nowFloor != 8100) && (nowFloor != 8101) &&
; 3215 : 		(nowFloor != 8027) && (nowFloor != 8028) && (nowFloor != 8029) && (nowFloor != 8015) && (nowFloor != 8113) && (nowFloor != 8114))

  002d9	e8 00 00 00 00	 call	 _rand
  002de	6a 12		 push	 18			; 00000012H
  002e0	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  002e5	56		 push	 esi
  002e6	66 0f 6e c0	 movd	 xmm0, eax
  002ea	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  002ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c077d00000000000
  002f6	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  002fb	f2 0f 2c c0	 cvttsd2si eax, xmm0
  002ff	2b c8		 sub	 ecx, eax
  00301	51		 push	 ecx
  00302	68 80 02 00 00	 push	 640			; 00000280H
  00307	e9 b5 00 00 00	 jmp	 $LN181@drawField
$LN45@drawField:

; 3171 : 			{
; 3172 : 				x2 = 640;
; 3173 : 				y2 = RAND(50, 430);
; 3174 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);
; 3175 : 			}
; 3176 : 			else if (x2 == 2) // å³ä¸ 

  0030c	83 ff 02	 cmp	 edi, 2
  0030f	75 0f		 jne	 SHORT $LN47@drawField

; 3177 : 			{
; 3178 : 				x2 = RAND(0, 590);

  00311	e8 00 00 00 00	 call	 _rand

; 3179 : 				y2 = 0;
; 3180 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);

  00316	6a 12		 push	 18			; 00000012H
  00318	56		 push	 esi
  00319	6a 00		 push	 0

; 3181 : 			}

  0031b	e9 87 00 00 00	 jmp	 $LN182@drawField
$LN47@drawField:

; 3182 : 			else if (x2 == 3)

  00320	83 ff 03	 cmp	 edi, 3
  00323	74 43		 je	 SHORT $LN183@drawField

; 3183 : 			{
; 3184 : 				x2 = 0;
; 3185 : 				y2 = RAND(50, 430);
; 3186 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);
; 3187 : 			}
; 3188 : 			else if (x2 == 4) // å·¦ä¸

  00325	83 ff 04	 cmp	 edi, 4
  00328	75 30		 jne	 SHORT $LN51@drawField

; 3189 : 			{
; 3190 : 				x2 = RAND(50, 640);

  0032a	e8 00 00 00 00	 call	 _rand

; 3191 : 				y2 = 480;
; 3192 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);

  0032f	6a 12		 push	 18			; 00000012H
  00331	56		 push	 esi
  00332	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00337	66 0f 6e c0	 movd	 xmm0, eax
  0033b	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0033f	68 e0 01 00 00	 push	 480			; 000001e0H
  00344	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c082780000000000
  0034c	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00351	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00355	2b c8		 sub	 ecx, eax
  00357	51		 push	 ecx

; 3193 : 			}

  00358	eb 67		 jmp	 SHORT $LN181@drawField
$LN51@drawField:

; 3194 : 			else if (x2 == 5)

  0035a	83 ff 05	 cmp	 edi, 5
  0035d	0f 84 76 ff ff
	ff		 je	 $LN172@drawField

; 3195 : 			{
; 3196 : 				x2 = 640;
; 3197 : 				y2 = RAND(50, 430);
; 3198 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);
; 3199 : 			}
; 3200 : 			else if (x2 == 6) // å³ä¸

  00363	83 ff 06	 cmp	 edi, 6
  00366	75 2d		 jne	 SHORT $LN55@drawField
$LN183@drawField:

; 3211 : 			}
; 3212 : 		}
; 3213 : 	}
; 3214 : 	if ((nowFloor != 817) && (nowFloor != 8007) && (nowFloor != 8100) && (nowFloor != 8101) &&
; 3215 : 		(nowFloor != 8027) && (nowFloor != 8028) && (nowFloor != 8029) && (nowFloor != 8015) && (nowFloor != 8113) && (nowFloor != 8114))

  00368	e8 00 00 00 00	 call	 _rand
  0036d	6a 12		 push	 18			; 00000012H
  0036f	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  00374	56		 push	 esi
  00375	66 0f 6e c0	 movd	 xmm0, eax
  00379	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0037d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c077d00000000000
  00385	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  0038a	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0038e	2b c8		 sub	 ecx, eax
  00390	51		 push	 ecx
  00391	6a 00		 push	 0
  00393	eb 2c		 jmp	 SHORT $LN181@drawField
$LN55@drawField:

; 3201 : 			{
; 3202 : 				x2 = 0;
; 3203 : 				y2 = RAND(50, 430);
; 3204 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);
; 3205 : 			}
; 3206 : 			else if (x2 == 7)

  00395	83 ff 07	 cmp	 edi, 7
  00398	75 34		 jne	 SHORT $LN168@drawField

; 3207 : 			{
; 3208 : 				x2 = RAND(0, 590);

  0039a	e8 00 00 00 00	 call	 _rand

; 3209 : 				y2 = 480;
; 3210 : 				WaterAct2 = MakeAnimDisp(x2, y2, RandAnimate, 18);

  0039f	6a 12		 push	 18			; 00000012H
  003a1	56		 push	 esi
  003a2	68 e0 01 00 00	 push	 480			; 000001e0H
$LN182@drawField:

; 3211 : 			}
; 3212 : 		}
; 3213 : 	}
; 3214 : 	if ((nowFloor != 817) && (nowFloor != 8007) && (nowFloor != 8100) && (nowFloor != 8101) &&
; 3215 : 		(nowFloor != 8027) && (nowFloor != 8028) && (nowFloor != 8029) && (nowFloor != 8015) && (nowFloor != 8113) && (nowFloor != 8114))

  003a7	66 0f 6e c0	 movd	 xmm0, eax
  003ab	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  003af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4082780000000000
  003b7	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  003bc	f2 0f 2c c0	 cvttsd2si eax, xmm0
  003c0	50		 push	 eax
$LN181@drawField:
  003c1	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  003c6	a3 00 00 00 00	 mov	 DWORD PTR ?WaterAct2@@3PAUaction@@A, eax
  003cb	83 c4 10	 add	 esp, 16			; 00000010H
$LN168@drawField:
  003ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
$LN57@drawField:
  003d4	81 f9 31 03 00
	00		 cmp	 ecx, 817		; 00000331H
  003da	0f 84 b7 00 00
	00		 je	 $LN158@drawField
  003e0	81 f9 47 1f 00
	00		 cmp	 ecx, 8007		; 00001f47H
  003e6	74 55		 je	 SHORT $LN59@drawField
  003e8	81 f9 a4 1f 00
	00		 cmp	 ecx, 8100		; 00001fa4H
  003ee	74 4d		 je	 SHORT $LN59@drawField
  003f0	81 f9 a5 1f 00
	00		 cmp	 ecx, 8101		; 00001fa5H
  003f6	74 45		 je	 SHORT $LN59@drawField
  003f8	81 f9 5b 1f 00
	00		 cmp	 ecx, 8027		; 00001f5bH
  003fe	74 3d		 je	 SHORT $LN59@drawField
  00400	81 f9 5c 1f 00
	00		 cmp	 ecx, 8028		; 00001f5cH
  00406	74 35		 je	 SHORT $LN59@drawField
  00408	81 f9 5d 1f 00
	00		 cmp	 ecx, 8029		; 00001f5dH
  0040e	74 2d		 je	 SHORT $LN59@drawField
  00410	81 f9 4f 1f 00
	00		 cmp	 ecx, 8015		; 00001f4fH
  00416	74 25		 je	 SHORT $LN59@drawField
  00418	81 f9 b1 1f 00
	00		 cmp	 ecx, 8113		; 00001fb1H
  0041e	74 1d		 je	 SHORT $LN59@drawField
  00420	81 f9 b2 1f 00
	00		 cmp	 ecx, 8114		; 00001fb2H
  00426	74 15		 je	 SHORT $LN59@drawField

; 3216 : 	{
; 3217 : 		delFlag = false;

  00428	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?delFlag@@3_NA, 0 ; delFlag

; 3218 : 		flag22 = true;

  0042f	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?flag22@@3_NA, 1 ; flag22

; 3219 : 		Timeflag2 = false;

  00436	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?Timeflag2@@3_NA, 0 ; Timeflag2
$LN59@drawField:

; 3288 : 					}
; 3289 : 				}
; 3290 : 			}
; 3291 : 		}
; 3292 : 	}
; 3293 : 	else {
; 3294 : 		if (in817flag == true) {

  0043d	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?in817flag@@3_NA, 1 ; in817flag
  00444	0f 85 17 02 00
	00		 jne	 $LN78@drawField

; 3295 : 			for (i = 0; i < 560; i++) {

  0044a	be 0c 00 00 00	 mov	 esi, OFFSET ?XYposition@@3PAY06HA+12
  0044f	90		 npad	 1
$LL10@drawField:

; 3296 : 				if (XYposition[i][3] == 1) {

  00450	83 3e 01	 cmp	 DWORD PTR [esi], 1
  00453	75 2b		 jne	 SHORT $LN8@drawField

; 3297 : 					if (WaterAct3[XYposition[i][4]] != NULL) {

  00455	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00458	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  0045f	85 c0		 test	 eax, eax
  00461	74 1d		 je	 SHORT $LN8@drawField

; 3298 : 						DeathAction(WaterAct3[XYposition[i][4]]);

  00463	50		 push	 eax
  00464	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 3299 : 						WaterAct3[XYposition[i][4]] = NULL;

  00469	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0046c	83 c4 04	 add	 esp, 4

; 3300 : 						XYposition[i][3] = 0;

  0046f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00475	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4], 0
$LN8@drawField:

; 3295 : 			for (i = 0; i < 560; i++) {

  00480	83 c6 1c	 add	 esi, 28			; 0000001cH
  00483	81 fe 4c 3d 00
	00		 cmp	 esi, OFFSET ?XYposition@@3PAY06HA+15692
  00489	7c c5		 jl	 SHORT $LL10@drawField

; 3301 : 					}
; 3302 : 				}
; 3303 : 			}
; 3304 : 			in817flag = false;

  0048b	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?in817flag@@3_NA, 0 ; in817flag
  00492	e9 c4 01 00 00	 jmp	 $LN174@drawField
$LN158@drawField:

; 3220 : 	}
; 3221 : #endif
; 3222 : 
; 3223 : #ifdef _AniImmobile	 // Syu ADD å®ç¹äº§çç¹å®å¨ç»
; 3224 : 	if (nowFloor == 817)
; 3225 : 	{
; 3226 : 		in817flag = true;

  00497	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  0049f	be 14 00 00 00	 mov	 esi, OFFSET ?XYposition@@3PAY06HA+20
  004a4	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?in817flag@@3_NA, 1 ; in817flag
  004ab	0f 1f 44 00 00	 npad	 5
$LL4@drawField:

; 3228 : 		{
; 3229 : 			//å¤æ­å®ç¹å¨ç»äº§çç¹æ¯å¦å¨äººç© 32 * 32èå´å
; 3230 : 			if ((nowGx > XYposition[i][0] - 16) && (nowGx < XYposition[i][0] + 16) &&
; 3231 : 				(nowGy > XYposition[i][1] - 16) && (nowGy < XYposition[i][1] + 16))

  004b0	8b 56 ec	 mov	 edx, DWORD PTR [esi-20]
  004b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowGx@@3HA ; nowGx
  004b9	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  004bc	3b c8		 cmp	 ecx, eax
  004be	0f 8e 20 01 00
	00		 jle	 $LN73@drawField
  004c4	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  004c7	3b c8		 cmp	 ecx, eax
  004c9	0f 8d 15 01 00
	00		 jge	 $LN73@drawField
  004cf	8b 5e f0	 mov	 ebx, DWORD PTR [esi-16]
  004d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowGy@@3HA ; nowGy
  004d8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  004db	3b c8		 cmp	 ecx, eax
  004dd	0f 8e 01 01 00
	00		 jle	 $LN73@drawField
  004e3	8d 43 10	 lea	 eax, DWORD PTR [ebx+16]
  004e6	3b c8		 cmp	 ecx, eax
  004e8	0f 8d f6 00 00
	00		 jge	 $LN73@drawField

; 3232 : 			{
; 3233 : 				//å¤æ­æ¯å¦å·²äº§ç
; 3234 : 				if (XYposition[i][3] == 0)

  004ee	83 7e f8 00	 cmp	 DWORD PTR [esi-8], 0
  004f2	75 48		 jne	 SHORT $LN62@drawField

; 3235 : 				{
; 3236 : 					//éç½®ACTION
; 3237 : 					for (int j = 0; j < 30; j++)

  004f4	33 ff		 xor	 edi, edi
$LL7@drawField:

; 3238 : 					{
; 3239 : 						if (WaterAct3[j] == NULL)

  004f6	83 3c bd 00 00
	00 00 00	 cmp	 DWORD PTR ?WaterAct3@@3PAPAUaction@@A[edi*4], 0
  004fe	74 0b		 je	 SHORT $LN134@drawField

; 3235 : 				{
; 3236 : 					//éç½®ACTION
; 3237 : 					for (int j = 0; j < 30; j++)

  00500	47		 inc	 edi
  00501	83 ff 1e	 cmp	 edi, 30			; 0000001eH
  00504	7c f0		 jl	 SHORT $LL7@drawField

; 3238 : 					{
; 3239 : 						if (WaterAct3[j] == NULL)

  00506	e9 d9 00 00 00	 jmp	 $LN73@drawField
$LN134@drawField:

; 3240 : 						{
; 3241 : 							if (XYposition[i][5] == 2)
; 3242 : 								WaterAct3[j] = createWaterAnimation(XYposition[i][2], XYposition[i][0], XYposition[i][1], 0);
; 3243 : 							else
; 3244 : 								WaterAct3[j] = createWaterAnimation(XYposition[i][2], XYposition[i][0], XYposition[i][1], 30);
; 3245 : 							XYposition[i][3] = 1;

  0050b	33 c0		 xor	 eax, eax
  0050d	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00512	83 3e 02	 cmp	 DWORD PTR [esi], 2
  00515	0f 45 c1	 cmovne	 eax, ecx
  00518	50		 push	 eax
  00519	53		 push	 ebx
  0051a	52		 push	 edx
  0051b	ff 76 f4	 push	 DWORD PTR [esi-12]
  0051e	e8 00 00 00 00	 call	 ?createWaterAnimation@@YAPAUaction@@HHHH@Z ; createWaterAnimation
  00523	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?WaterAct3@@3PAPAUaction@@A[edi*4], eax
  0052a	83 c4 10	 add	 esp, 16			; 00000010H
  0052d	c7 46 f8 01 00
	00 00		 mov	 DWORD PTR [esi-8], 1

; 3246 : 							XYposition[i][4] = j;

  00534	89 7e fc	 mov	 DWORD PTR [esi-4], edi

; 3247 : 							break;
; 3248 : 						}
; 3249 : 					}
; 3250 : 				}

  00537	e9 a8 00 00 00	 jmp	 $LN73@drawField
$LN62@drawField:

; 3251 : 				else
; 3252 : 				{
; 3253 : 					//åå®ç¹å¨ç»çæ¼æµ®
; 3254 : 					XYposition[i][6]++;

  0053c	ff 46 04	 inc	 DWORD PTR [esi+4]

; 3255 : 					//æ¶é´åºå®
; 3256 : 					if (XYposition[i][6] > 65)

  0053f	83 7e 04 41	 cmp	 DWORD PTR [esi+4], 65	; 00000041H
  00543	7e 22		 jle	 SHORT $LN160@drawField

; 3257 : 					{
; 3258 : 						XYposition[i][6] = 0;
; 3259 : 						//(XYposition[i][5]== 1 ) ? 0 : 1;
; 3260 : 						if (XYposition[i][5] == 1)

  00545	8b 06		 mov	 eax, DWORD PTR [esi]
  00547	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0054e	83 f8 01	 cmp	 eax, 1
  00551	75 08		 jne	 SHORT $LN68@drawField

; 3261 : 							XYposition[i][5] = 0;

  00553	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00559	eb 4d		 jmp	 SHORT $LN163@drawField
$LN68@drawField:

; 3262 : 						else if (XYposition[i][5] == 0)

  0055b	85 c0		 test	 eax, eax
  0055d	75 08		 jne	 SHORT $LN160@drawField

; 3263 : 							XYposition[i][5] = 1;

  0055f	c7 06 01 00 00
	00		 mov	 DWORD PTR [esi], 1

; 3264 : 					}
; 3265 : 					if (XYposition[i][5] == 1)

  00565	eb 07		 jmp	 SHORT $LN159@drawField
$LN160@drawField:
  00567	8b 06		 mov	 eax, DWORD PTR [esi]
  00569	83 f8 01	 cmp	 eax, 1
  0056c	75 36		 jne	 SHORT $LN71@drawField
$LN159@drawField:

; 3266 : 					{
; 3267 : 						WaterAct3[XYposition[i][4]]->mx = WaterAct3[XYposition[i][4]]->mx + float(0.5);

  0056e	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  00571	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  00578	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  00580	f3 0f 58 c1	 addss	 xmm0, xmm1
  00584	f3 0f 11 80 18
	01 00 00	 movss	 DWORD PTR [eax+280], xmm0

; 3268 : 						WaterAct3[XYposition[i][4]]->my = WaterAct3[XYposition[i][4]]->my - float(0.5);

  0058c	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  0058f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  00596	f3 0f 10 80 1c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+284]
  0059e	f3 0f 5c c1	 subss	 xmm0, xmm1

; 3269 : 					}

  005a2	eb 38		 jmp	 SHORT $LN175@drawField
$LN71@drawField:

; 3270 : 					else if (XYposition[i][5] == 0)

  005a4	85 c0		 test	 eax, eax
  005a6	75 3c		 jne	 SHORT $LN73@drawField
$LN163@drawField:

; 3271 : 					{
; 3272 : 						WaterAct3[XYposition[i][4]]->mx = WaterAct3[XYposition[i][4]]->mx - float(0.5);

  005a8	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  005ab	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  005b2	f3 0f 10 80 18
	01 00 00	 movss	 xmm0, DWORD PTR [eax+280]
  005ba	f3 0f 5c c1	 subss	 xmm0, xmm1
  005be	f3 0f 11 80 18
	01 00 00	 movss	 DWORD PTR [eax+280], xmm0

; 3273 : 						WaterAct3[XYposition[i][4]]->my = WaterAct3[XYposition[i][4]]->my + float(0.5);

  005c6	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  005c9	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  005d0	f3 0f 10 80 1c
	01 00 00	 movss	 xmm0, DWORD PTR [eax+284]
  005d8	f3 0f 58 c1	 addss	 xmm0, xmm1
$LN175@drawField:

; 3274 : 					}
; 3275 : 				}
; 3276 : 			}
; 3277 : 			// åå¹¶
; 3278 : 			if (XYposition[i][3] == 1)

  005dc	f3 0f 11 80 1c
	01 00 00	 movss	 DWORD PTR [eax+284], xmm0
$LN73@drawField:
  005e4	83 7e f8 01	 cmp	 DWORD PTR [esi-8], 1
  005e8	75 5a		 jne	 SHORT $LN2@drawField

; 3279 : 			{
; 3280 : 				if ((nowGx < XYposition[i][0] - 16) || (nowGx > XYposition[i][0] + 16) ||
; 3281 : 					(nowGy < XYposition[i][1] - 16) || (nowGy > XYposition[i][1] + 16))

  005ea	8b 56 ec	 mov	 edx, DWORD PTR [esi-20]
  005ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowGx@@3HA ; nowGx
  005f3	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  005f6	3b c8		 cmp	 ecx, eax
  005f8	7c 1e		 jl	 SHORT $LN76@drawField
  005fa	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  005fd	3b c8		 cmp	 ecx, eax
  005ff	7f 17		 jg	 SHORT $LN76@drawField
  00601	8b 56 f0	 mov	 edx, DWORD PTR [esi-16]
  00604	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowGy@@3HA ; nowGy
  0060a	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  0060d	3b c8		 cmp	 ecx, eax
  0060f	7c 07		 jl	 SHORT $LN76@drawField
  00611	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  00614	3b c8		 cmp	 ecx, eax
  00616	7e 2c		 jle	 SHORT $LN2@drawField
$LN76@drawField:

; 3282 : 				{
; 3283 : 					if (WaterAct3[XYposition[i][4]] != NULL)

  00618	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  0061b	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4]
  00622	85 c0		 test	 eax, eax
  00624	74 1e		 je	 SHORT $LN2@drawField

; 3284 : 					{
; 3285 : 						DeathAction(WaterAct3[XYposition[i][4]]);

  00626	50		 push	 eax
  00627	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 3286 : 						WaterAct3[XYposition[i][4]] = NULL;

  0062c	8b 46 fc	 mov	 eax, DWORD PTR [esi-4]
  0062f	83 c4 04	 add	 esp, 4

; 3287 : 						XYposition[i][3] = 0;

  00632	c7 46 f8 00 00
	00 00		 mov	 DWORD PTR [esi-8], 0
  00639	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?WaterAct3@@3PAPAUaction@@A[eax*4], 0
$LN2@drawField:

; 3227 : 		for (i = 0; i < 560; i++)

  00644	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@3f000000
  0064c	83 c6 1c	 add	 esi, 28			; 0000001cH
  0064f	81 fe 54 3d 00
	00		 cmp	 esi, OFFSET ?XYposition@@3PAY06HA+15700
  00655	0f 8c 55 fe ff
	ff		 jl	 $LL4@drawField
$LN174@drawField:

; 3305 : 		}
; 3306 : 	}
; 3307 : #endif
; 3308 : 
; 3309 : #ifdef _AniRandom   // Syu ADD éæºäº§çç¯å¢å¨ç»
; 3310 : 	if ((nowFloor == 817) || (nowFloor == 8007) || (nowFloor == 8100) || (nowFloor == 8101) ||
; 3311 : 		(nowFloor == 8029) || (nowFloor == 8028) || (nowFloor == 8027) || (nowFloor == 8015) || (nowFloor == 8113) || (nowFloor == 8114))  //å¤æ­å°å¾

  0065b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
$LN78@drawField:
  00661	81 f9 31 03 00
	00		 cmp	 ecx, 817		; 00000331H
  00667	0f 84 83 01 00
	00		 je	 $LN83@drawField
  0066d	81 f9 47 1f 00
	00		 cmp	 ecx, 8007		; 00001f47H
  00673	0f 84 77 01 00
	00		 je	 $LN83@drawField
  00679	81 f9 a4 1f 00
	00		 cmp	 ecx, 8100		; 00001fa4H
  0067f	0f 84 6b 01 00
	00		 je	 $LN83@drawField
  00685	81 f9 a5 1f 00
	00		 cmp	 ecx, 8101		; 00001fa5H
  0068b	0f 84 5f 01 00
	00		 je	 $LN83@drawField
  00691	81 f9 5d 1f 00
	00		 cmp	 ecx, 8029		; 00001f5dH
  00697	0f 84 53 01 00
	00		 je	 $LN83@drawField
  0069d	81 f9 5c 1f 00
	00		 cmp	 ecx, 8028		; 00001f5cH
  006a3	0f 84 47 01 00
	00		 je	 $LN83@drawField
  006a9	81 f9 5b 1f 00
	00		 cmp	 ecx, 8027		; 00001f5bH
  006af	0f 84 3b 01 00
	00		 je	 $LN83@drawField
  006b5	81 f9 4f 1f 00
	00		 cmp	 ecx, 8015		; 00001f4fH
  006bb	0f 84 2f 01 00
	00		 je	 $LN83@drawField
  006c1	81 f9 b1 1f 00
	00		 cmp	 ecx, 8113		; 00001fb1H
  006c7	0f 84 23 01 00
	00		 je	 $LN83@drawField
  006cd	81 f9 b2 1f 00
	00		 cmp	 ecx, 8114		; 00001fb2H
  006d3	0f 84 17 01 00
	00		 je	 $LN83@drawField

; 3355 : 			}
; 3356 : 		}
; 3357 : 	}
; 3358 : 	//æ¶ç­å¨ç»
; 3359 : 	else if (((nowFloor != 817) && (nowFloor != 8007) && (nowFloor != 8100) && (nowFloor != 8101) && (nowFloor != 8113) && (nowFloor != 8114) &&
; 3360 : 		(nowFloor != 8027) && (nowFloor != 8028) && (nowFloor != 8029) && (nowFloor != 8015)) && (AniFlag == true))

  006d9	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?AniFlag@@3_NA, 1 ; AniFlag
  006e0	75 2e		 jne	 SHORT $LN164@drawField

; 3361 : 	{
; 3362 : 		AniFlag = false;

  006e2	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?AniFlag@@3_NA, 0 ; AniFlag
  006e9	be 00 00 00 00	 mov	 esi, OFFSET ?WaterAct@@3PAPAUaction@@A
  006ee	66 90		 npad	 2
$LL19@drawField:

; 3364 : 		{
; 3365 : 			if (WaterAct[i] != NULL)

  006f0	8b 06		 mov	 eax, DWORD PTR [esi]
  006f2	85 c0		 test	 eax, eax
  006f4	74 0f		 je	 SHORT $LN17@drawField

; 3366 : 			{
; 3367 : 				DeathAction(WaterAct[i]);

  006f6	50		 push	 eax
  006f7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006fc	83 c4 04	 add	 esp, 4

; 3368 : 				WaterAct[i] = NULL;

  006ff	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN17@drawField:

; 3363 : 		for (i = 0; i < 50; i++)

  00705	83 c6 04	 add	 esi, 4
  00708	81 fe c8 00 00
	00		 cmp	 esi, OFFSET ?WaterAct@@3PAPAUaction@@A+200
  0070e	7c e0		 jl	 SHORT $LL19@drawField
$LN164@drawField:

; 3369 : 			}
; 3370 : 		}
; 3371 : 	}
; 3372 : #endif
; 3373 : 	int ä¸´æ¶å¾æ X, ä¸´æ¶å¾æ Y;					//[ìì ìì´ì½X, ìì ìì´ì½Y]
; 3374 : 	if (ResoMode == åè¾¨ç::mode800) {			//[í´ìë]
; 3375 : 		ä¸´æ¶å¾æ X = 785;						//[ìì ìì´ì½]
; 3376 : 		ä¸´æ¶å¾æ Y = 505;						//[ìì ìì´ì½]
; 3377 : 	}
; 3378 : 	else if (ResoMode == åè¾¨ç::mode1024) {	//[í´ìë]
; 3379 : 		ä¸´æ¶å¾æ X = 1009;						//[ìì ìì´ì½]
; 3380 : 		ä¸´æ¶å¾æ Y = 673;						//[ìì ìì´ì½]
; 3381 : 	}
; 3382 : 	else {
; 3383 : 		ä¸´æ¶å¾æ X = 625;						//[ìì ìì´ì½]
; 3384 : 		ä¸´æ¶å¾æ Y = 385;						//[ìì ìì´ì½]
; 3385 : 	}
; 3386 : 	if (drawFieldButtonFlag) {

  00710	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?drawFieldButtonFlag@@3FA, 0 ; drawFieldButtonFlag
  00718	0f 84 9c 05 00
	00		 je	 $LN98@drawField

; 3387 : #ifdef _NB_SA_LIAOTIAN
; 3388 : 		static int èå¤©ç¶æ1 = 0;						//[ì±í ìí 1]
; 3389 : 		static int èå¤©ç¶æ2 = 0;						//[ì±í ìí1]
; 3390 : 		static int èå¤©ç¶æ3 = 0;						//[ì±íìí 2]
; 3391 : 		char èå¤©æç¤º[128];							//[ì±í íí¸]
; 3392 : 		int èå¤©ä¸´æ¶;								//[ì±í ìê°]
; 3393 : 		/*èå¤©ä¸´æ¶ = StockDispBuffer(ä¸´æ¶å¾æ X, ä¸´æ¶å¾æ Y, DISP_PRIO_IME3, 52001, 2);			//[ìì ìì´ì½X, ìì ìì´ì½]
; 3394 : 		if( HitDispNo == èå¤©ä¸´æ¶){
; 3395 : 			sprintf(èå¤©æç¤º,"èå¤©ä¿¡æ¯ä¸æ,å½åèå¤©ä¿¡æ¯ä½ç½®%dï¼",NowChatLine);				//[ì±í íí¸, " ì±í ë©ìì§ ì¬ë¦¬ê¸°, íì¬ ì±í ë©ìì§ ì
; 3396 : 			ShowBottomLineString(FONT_PAL_WHITE, èå¤©æç¤º);				//[ì±í íí¸]
; 3397 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3398 : 				if(NowChatLine > NowMaxChatLine){
; 3399 : 					NowChatLine--;
; 3400 : 					if (NowChatLine <= 0){
; 3401 : 						NowChatLine = 1;
; 3402 : 					}
; 3403 : 				}
; 3404 : 				play_se(203, 320, 240);
; 3405 : 			}
; 3406 : 		}*/
; 3407 : 
; 3408 : 		èå¤©ä¸´æ¶ = StockDispBuffer(ä¸´æ¶å¾æ X, ä¸´æ¶å¾æ Y + 25, DISP_PRIO_IME3, 52002, 2);
; 3409 : 		if (HitDispNo == èå¤©ä¸´æ¶) {
; 3410 : 			sprintf(èå¤©æç¤º, "ì±í ì ë³´ ëë¡­ ë¤ì´, íì¬ ì±í ì ë³´ ìì¹%dï¼", NowChatLine);
; 3411 : 			ShowBottomLineString(FONT_PAL_WHITE, èå¤©æç¤º);
; 3412 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 3413 : 				if (*ChatBuffer[NowChatLine].buffer) {
; 3414 : 					NowChatLine++;
; 3415 : 					if (NowChatLine > MAX_CHAT_LINE)
; 3416 : 						NowChatLine = MAX_CHAT_LINE;
; 3417 : 				}
; 3418 : 				play_se(203, 320, 240);
; 3419 : 			}
; 3420 : 		}
; 3421 : 
; 3422 : 		èå¤©ä¸´æ¶ = StockDispBuffer(ä¸´æ¶å¾æ X, ä¸´æ¶å¾æ Y + 50, DISP_PRIO_IME3, 52003, 2);
; 3423 : 		if (HitDispNo == èå¤©ä¸´æ¶) {
; 3424 : 			sprintf(èå¤©æç¤º, "ì±í ì ë³´ ëë¡­ ë¤ì´, íì¬ ì±í ì ë³´ ìì¹%dï¼", NowChatLine);
; 3425 : 			ShowBottomLineString(FONT_PAL_WHITE, èå¤©æç¤º);
; 3426 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 3427 : 				extern int NowChatLine_Bak;
; 3428 : 				NowChatLine = NowChatLine_Bak;
; 3429 : 				play_se(203, 320, 240);
; 3430 : 			}
; 3431 : 		}
; 3432 : #endif
; 3433 : 
; 3434 : 		/*#ifdef _NB_ç®¡çæ¨¡å¼				//[#ifdef _NB_ê´ë¦¬ëª¨ë]
; 3435 : 		VMProtectBegin("GmMake");
; 3436 : 				int GMç®¡çé¡¹[6];
; 3437 : 				if (GMç®¡çå¼å³){
; 3438 : 					GMç®¡çé¡¹[0] = StockDispBuffer(ä¸´æ¶å¾æ X-145, leftUpPanelY+20, DISP_PRIO_MENU, IMAGE_æ¶çº³æé®å, 2);
; 3439 : 				}else{
; 3440 : 					GMç®¡çé¡¹[0] = StockDispBuffer(ä¸´æ¶å¾æ X-145, leftUpPanelY+20, DISP_PRIO_MENU, IMAGE_æ¶çº³æé®å, 2);
; 3441 : 				}
; 3442 : 				if( HitDispNo == GMç®¡çé¡¹[0]){
; 3443 : 					ShowBottomLineString(11, "ë¹ë°ê¸°ë¥ï¼");
; 3444 : 					if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3445 : 						GMç®¡çå¼å³ = !GMç®¡çå¼å³;
; 3446 : 					}
; 3447 : 					HitDispNo = -1;
; 3448 : 				}
; 3449 : 				if (GMç®¡çå¼å³){
; 3450 : 					GMç®¡çé¡¹[1] = StockFontBuffer( leftUpPanelX + 120, leftUpPanelY +80, FONT_PRIO_FRONT, 1, "í´ë¼ì´ì¸í¸ìë¡ê³ ì¹¨LUA",2);
; 3451 : 					GMç®¡çé¡¹[2] = StockFontBuffer( leftUpPanelX + 120, leftUpPanelY +100, FONT_PRIO_FRONT, 1, "ëª¨ëì­ì GMê¶ìï¼ìì ìë¤ìê³¼ê°ì´ì¤ì GM",2);
; 3452 : 					GMç®¡çé¡¹[3] = StockFontBuffer( leftUpPanelX + 120, leftUpPanelY +120, FONT_PRIO_FRONT, 1, "ì­ì íì§ìê¸°GMê¶ìï¼ìì ìë¤ìê³¼ê°ì´ì¤ì GM",2);
; 3453 : 					GMç®¡çé¡¹[4] = StockFontBuffer( leftUpPanelX + 120, leftUpPanelY +140, FONT_PRIO_FRONT, 1, "ëë©´ì ë³´ì»ê¸°",2);
; 3454 : 					GMç®¡çé¡¹[5] = StockFontBuffer( leftUpPanelX + 120, leftUpPanelY +160, FONT_PRIO_FRONT, 1, "ì¼êµ´ê°ì ¸ì¤ê¸°NPCíµë¡",2);
; 3455 : 					if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3456 : 						if( HitFontNo == GMç®¡çé¡¹[1]){
; 3457 : 							ReLoadStoneAgeLUA(_LUA_PATCH_);
; 3458 : 							StockChatBufferLine("í´ë¼ì´ì¸í¸ì¬ì½ê¸°LUAìíï¼", 4);
; 3459 : 							GMç®¡çå¼å³ = false;
; 3460 : 							HitFontNo = -1;
; 3461 : 						}
; 3462 : 						if( HitFontNo == GMç®¡çé¡¹[2]){
; 3463 : 							lssproto_Gmset_send(sockfd,1,"New Version");
; 3464 : 							StockChatBufferLine("ëª¨ëì­ì GMê¶ìï¼ìì ìë¤ìê³¼ê°ì´ì¤ì GMï¼", 4);
; 3465 : 							GMç®¡çå¼å³ = false;
; 3466 : 							HitFontNo = -1;
; 3467 : 						}
; 3468 : 						if( HitFontNo == GMç®¡çé¡¹[3]){
; 3469 : 							lssproto_Gmset_send(sockfd,2,"New Version");
; 3470 : 							StockChatBufferLine("ì­ì íì§ìê¸°GMê¶ìï¼ìì ìë¤ìê³¼ê°ì´ì¤ì GMï¼", 4);
; 3471 : 							GMç®¡çå¼å³ = false;
; 3472 : 							HitFontNo = -1;
; 3473 : 						}
; 3474 : 						if( HitFontNo == GMç®¡çé¡¹[4]){
; 3475 : 							lssproto_Gmset_send(sockfd,3,"");
; 3476 : 							GMç®¡çå¼å³ = false;
; 3477 : 							HitFontNo = -1;
; 3478 : 						}
; 3479 : 						if( HitFontNo == GMç®¡çé¡¹[5]){
; 3480 : 							lssproto_Gmset_send(sockfd,4,"");
; 3481 : 							GMç®¡çå¼å³ = false;
; 3482 : 							HitFontNo = -1;DISP_PRIO_IME3
; 3483 : 						}
; 3484 : 					}
; 3485 : 					StockDispBuffer(leftUpPanelX+300, leftUpPanelY+200, DISP_PRIO_MENU, 26258, 1);
; 3486 : 				}
; 3487 : 		VMProtectEnd();
; 3488 : 		#endif*/
; 3489 : 
; 3490 : #ifdef _NB_é¡¶é¨è¯¦æ
; 3491 : 		char moji[128];
; 3492 : 		char é¡¶é¨ä¿¡æ¯æç¤º[128];
; 3493 : 		//	if (å·¦èåå¼å³){
; 3494 : 			//	é¡¶é¨æ°æé®ç´¢å¼[0] = StockDispBuffer(leftUpPanelX+20, leftUpPanelY+20, DISP_PRIO_MENU, IMAGE_æ¶çº³æé®å, 2);
; 3495 : 		StockDispBuffer(leftUpPanelX + 148, leftUpPanelY + 27, DISP_PRIO_MENU, IMAGE_LEFTMENU, 0);

  0071e	6a 00		 push	 0
  00720	68 89 6f 00 00	 push	 28553			; 00006f89H
  00725	6a 68		 push	 104			; 00000068H
  00727	6a 1b		 push	 27			; 0000001bH
  00729	68 94 00 00 00	 push	 148			; 00000094H
  0072e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3496 : 		/*	}else{
; 3497 : 				é¡¶é¨æ°æé®ç´¢å¼[0] = StockDispBuffer(leftUpPanelX+20, leftUpPanelY+20, DISP_PRIO_MENU, IMAGE_æ¶çº³æé®å, 2);
; 3498 : 			}
; 3499 : 			if (é¡¶é¨æ°æé®ç´¢å¼[0]){
; 3500 : 				if( HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[0]){
; 3501 : 					ShowBottomLineString(11, "ê¸°ë¥ìµìã");
; 3502 : 					//sprintf(é¡¶é¨ä¿¡æ¯æç¤º,"åè½éé¡¹ï¼");
; 3503 : 					//NewShowBottomLineString(11, é¡¶é¨ä¿¡æ¯æç¤º);
; 3504 : 					if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3505 : 						å·¦èåå¼å³ = !å·¦èåå¼å³;
; 3506 : 					}
; 3507 : 					if (!å·¦èåå¼å³){
; 3508 : 						for (i = 0; i < FIELD_FUNC_END; i++){
; 3509 : 							fieldBtnHitId[i] = -2;
; 3510 : 						}
; 3511 : 					}
; 3512 : 					HitDispNo = -1;
; 3513 : 				}
; 3514 : 			}
; 3515 : 			if (å·¦èåå¼å³){ */
; 3516 : 			/*char mapname[128];
; 3517 : 			sprintf(mapname, "[%s]ë:%d ë¨:%d", nowFloorName , nowGx, nowGy);
; 3518 : 			StockFontBuffer(leftUpPanelX + 380, leftUpPanelY + 580, FONT_PRIO_FRONT, 4, mapname, 0);*/
; 3519 : 
; 3520 : 		fieldBtnHitId[FIELD_FUNC_MENU] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 27, DISP_PRIO_IME3, menuBtnGraNo[menuBtn], 2);

  00733	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?menuBtn@@3FA ; menuBtn
  0073a	6a 02		 push	 2
  0073c	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?menuBtnGraNo@@3PAHA[eax*4]
  00743	6a 69		 push	 105			; 00000069H
  00745	6a 1b		 push	 27			; 0000001bH
  00747	6a 34		 push	 52			; 00000034H
  00749	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0074e	83 c4 28	 add	 esp, 40			; 00000028H
  00751	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA, eax

; 3521 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_MENU]) {

  00756	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  0075c	75 0f		 jne	 SHORT $LN100@drawField

; 3522 : 			ShowBottomLineString(0, "ë©ë´ë¥¼ ì¤ì í©ëë¤.");

  0075e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KALKBBEH@?$LI?$NO?$LE?$LK?$LI?$KG?5?$LM?$LD?A?$KE?G?U?$LE?O?$LE?Y?4@
  00763	6a 00		 push	 0
  00765	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0076a	83 c4 08	 add	 esp, 8
$LN100@drawField:

; 3523 : 		}
; 3524 : 		fieldBtnHitId[FIELD_FUNC_CARD] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 27, DISP_PRIO_IME3, cardBtnGraNo[cardBtn], 2);

  0076d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?cardBtn@@3FA ; cardBtn
  00774	6a 02		 push	 2
  00776	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?cardBtnGraNo@@3PAHA[eax*4]
  0077d	6a 69		 push	 105			; 00000069H
  0077f	6a 1b		 push	 27			; 0000001bH
  00781	6a 34		 push	 52			; 00000034H
  00783	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00788	83 c4 14	 add	 esp, 20			; 00000014H
  0078b	a3 04 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+4, eax

; 3525 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_CARD]) {

  00790	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00796	75 0f		 jne	 SHORT $LN101@drawField

; 3526 : 			ShowBottomLineString(0, "ìëë°©ê³¼ ëªí¨ì êµíí©ëë¤.");

  00798	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@BDLIIEIH@?$LL?s?$LE?k?$LJ?f?$LA?z?5?$LI?m?G?T?$MA?$LL?5?$LB?$LD?H?$KP?G?U?$LE?O?$LE?Y?4@
  0079d	6a 00		 push	 0
  0079f	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  007a4	83 c4 08	 add	 esp, 8
$LN101@drawField:

; 3527 : 		}
; 3528 : 		fieldBtnHitId[FIELD_FUNC_PARTY] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 27, DISP_PRIO_IME3, partyBtnGraNo[partyBtn], 2);

  007a7	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?partyBtn@@3FA ; partyBtn
  007ae	6a 02		 push	 2
  007b0	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?partyBtnGraNo@@3PAHA[eax*4]
  007b7	6a 69		 push	 105			; 00000069H
  007b9	6a 1b		 push	 27			; 0000001bH
  007bb	6a 34		 push	 52			; 00000034H
  007bd	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  007c2	83 c4 14	 add	 esp, 20			; 00000014H
  007c5	a3 08 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+8, eax

; 3529 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_PARTY]) {

  007ca	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  007d0	0f 85 f9 01 00
	00		 jne	 $LN104@drawField

; 3530 : 			if (partyBtnEnableFlag == 0) {

  007d6	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyBtnEnableFlag@@3FA, 0 ; partyBtnEnableFlag
  007de	0f 85 dc 01 00
	00		 jne	 $LN103@drawField

; 3531 : 				ShowBottomLineString(6, "íí°ì ì°¸ì¬í  ì ìì´ì.");

  007e4	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@CHLJOFEL@?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@
  007e9	6a 06		 push	 6

; 3532 : 			}

  007eb	e9 d7 01 00 00	 jmp	 $LN178@drawField
$LN83@drawField:

; 3312 : 	{
; 3313 : 		AniFlag = true;

  007f0	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?AniFlag@@3_NA, 1 ; AniFlag
  007f7	33 f6		 xor	 esi, esi
  007f9	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@drawField:

; 3315 : 		{
; 3316 : 			if (Timeflag[i] == false)

  00800	80 be 00 00 00
	00 00		 cmp	 BYTE PTR ?Timeflag@@3PA_NA[esi], 0
  00807	0f 85 41 01 00
	00		 jne	 $LN11@drawField

; 3317 : 			{
; 3318 : 				//éæºê²°ì äº§çä¸å¦ï¼ä¸è®ºä¸å¦é½äº§çç­å¾æ¶é´
; 3319 : 				Createflag = RAND(0, 3);

  0080d	e8 00 00 00 00	 call	 _rand
  00812	66 0f 6e c0	 movd	 xmm0, eax
  00816	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0081a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4010000000000000
  00822	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00827	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 3320 : 				if (Createflag > 0)

  0082b	85 c0		 test	 eax, eax
  0082d	0f 8e e8 00 00
	00		 jle	 $LN85@drawField

; 3321 : 				{
; 3322 : 					if (WaterAct[i] == NULL)

  00833	83 3c b5 00 00
	00 00 00	 cmp	 DWORD PTR ?WaterAct@@3PAPAUaction@@A[esi*4], 0
  0083b	0f 85 0d 01 00
	00		 jne	 $LN11@drawField

; 3323 : 					{
; 3324 : 						//äº§çèå´å¨äººç© 30 * 30 èå´ä¸­
; 3325 : 						x1 = RAND(nowGx - 15, nowGx + 15);

  00841	e8 00 00 00 00	 call	 _rand
  00846	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?nowGx@@3HA ; nowGx
  0084c	66 0f 6e c0	 movd	 xmm0, eax
  00850	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00854	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c03f000000000000
  0085c	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00861	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00865	2b f8		 sub	 edi, eax
  00867	83 ef 0f	 sub	 edi, 15			; 0000000fH

; 3326 : 						y1 = RAND(nowGy - 15, nowGy + 15);

  0086a	e8 00 00 00 00	 call	 _rand
  0086f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?nowGy@@3HA ; nowGy
  00875	66 0f 6e c0	 movd	 xmm0, eax
  00879	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0087d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c03f000000000000
  00885	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  0088a	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0088e	2b d8		 sub	 ebx, eax
  00890	83 eb 0f	 sub	 ebx, 15			; 0000000fH

; 3327 : 						RandAnimate = RAND(0, 6);

  00893	e8 00 00 00 00	 call	 _rand
  00898	66 0f 6e c0	 movd	 xmm0, eax
  0089c	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  008a0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@401c000000000000
  008a8	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  008ad	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 3328 : 						if (RandAnimate > 2)

  008b1	83 f8 02	 cmp	 eax, 2
  008b4	7e 19		 jle	 SHORT $LN88@drawField

; 3329 : 							RandAnimate = RAND(101502, 101509);

  008b6	e8 00 00 00 00	 call	 _rand
  008bb	b9 7e 8c 01 00	 mov	 ecx, 101502		; 00018c7eH
  008c0	66 0f 6e c0	 movd	 xmm0, eax
  008c4	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  008c8	f2 0f 59 45 ec	 mulsd	 xmm0, QWORD PTR __real@c020000000000000$1$[ebp]
  008cd	eb 1a		 jmp	 SHORT $LN176@drawField
$LN88@drawField:

; 3330 : 						else
; 3331 : 							RandAnimate = RAND(101524, 101529);

  008cf	e8 00 00 00 00	 call	 _rand
  008d4	b9 94 8c 01 00	 mov	 ecx, 101524		; 00018c94H
  008d9	66 0f 6e c0	 movd	 xmm0, eax
  008dd	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  008e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c018000000000000
$LN176@drawField:

; 3332 : 						WaterAct[i] = createWaterAnimation(RandAnimate, x1, y1, 103);

  008e9	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  008ee	6a 67		 push	 103			; 00000067H
  008f0	53		 push	 ebx
  008f1	57		 push	 edi
  008f2	f2 0f 2c c0	 cvttsd2si eax, xmm0
  008f6	2b c8		 sub	 ecx, eax
  008f8	51		 push	 ecx
  008f9	e8 00 00 00 00	 call	 ?createWaterAnimation@@YAPAUaction@@HHHH@Z ; createWaterAnimation
  008fe	83 c4 10	 add	 esp, 16			; 00000010H
  00901	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?WaterAct@@3PAPAUaction@@A[esi*4], eax

; 3333 : 						Timeflag[i] = true;

  00908	c6 86 00 00 00
	00 01		 mov	 BYTE PTR ?Timeflag@@3PA_NA[esi], 1

; 3334 : 						TimeTickMax[i] = RAND(100, 400);

  0090f	e8 00 00 00 00	 call	 _rand
  00914	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H

; 3335 : 					}
; 3336 : 				}

  00919	eb 11		 jmp	 SHORT $LN177@drawField
$LN85@drawField:

; 3337 : 				else
; 3338 : 				{
; 3339 : 					Timeflag[i] = true;

  0091b	c6 86 00 00 00
	00 01		 mov	 BYTE PTR ?Timeflag@@3PA_NA[esi], 1

; 3340 : 					TimeTickMax[i] = RAND(300, 600);

  00922	e8 00 00 00 00	 call	 _rand
  00927	b9 2c 01 00 00	 mov	 ecx, 300		; 0000012cH
$LN177@drawField:

; 3314 : 		for (i = 0; i < 50; i++)

  0092c	66 0f 6e c0	 movd	 xmm0, eax
  00930	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00934	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c072d00000000000
  0093c	f2 0f 59 45 f4	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000$1$[ebp]
  00941	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00945	2b c8		 sub	 ecx, eax
  00947	89 0c b5 00 00
	00 00		 mov	 DWORD PTR ?TimeTickMax@@3PAHA[esi*4], ecx
$LN11@drawField:
  0094e	46		 inc	 esi
  0094f	83 fe 32	 cmp	 esi, 50			; 00000032H
  00952	0f 8c a8 fe ff
	ff		 jl	 $LL13@drawField

; 3341 : 				}
; 3342 : 			}
; 3343 : 		}
; 3344 : 		//æ´»ççç¯å¢å¨ç»è®¡æ¶
; 3345 : 		for (i = 0; i < 50; i++)

  00958	33 f6		 xor	 esi, esi
  0095a	66 0f 1f 44 00
	00		 npad	 6
$LL16@drawField:

; 3346 : 		{
; 3347 : 			if (Timeflag[i] == true)

  00960	80 be 00 00 00
	00 01		 cmp	 BYTE PTR ?Timeflag@@3PA_NA[esi], 1
  00967	75 07		 jne	 SHORT $LN162@drawField

; 3348 : 				TimeTick[i]++;

  00969	ff 04 b5 00 00
	00 00		 inc	 DWORD PTR ?TimeTick@@3PAHA[esi*4]
$LN162@drawField:

; 3349 : 			if (TimeTick[i] > TimeTickMax[i])

  00970	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?TimeTick@@3PAHA[esi*4]
  00977	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?TimeTickMax@@3PAHA[esi*4]
  0097e	7e 35		 jle	 SHORT $LN14@drawField

; 3350 : 			{
; 3351 : 				TimeTick[i] = -100;

  00980	c7 04 b5 00 00
	00 00 9c ff ff
	ff		 mov	 DWORD PTR ?TimeTick@@3PAHA[esi*4], -100 ; ffffff9cH

; 3352 : 				Timeflag[i] = false;

  0098b	83 fe 32	 cmp	 esi, 50			; 00000032H
  0098e	0f 83 5b 03 00
	00		 jae	 $LN125@drawField

; 3353 : 				DeathAction(WaterAct[i]);

  00994	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?WaterAct@@3PAPAUaction@@A[esi*4]
  0099b	c6 86 00 00 00
	00 00		 mov	 BYTE PTR ?Timeflag@@3PA_NA[esi], 0
  009a2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  009a7	83 c4 04	 add	 esp, 4

; 3354 : 				WaterAct[i] = NULL;

  009aa	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?WaterAct@@3PAPAUaction@@A[esi*4], 0
$LN14@drawField:

; 3341 : 				}
; 3342 : 			}
; 3343 : 		}
; 3344 : 		//æ´»ççç¯å¢å¨ç»è®¡æ¶
; 3345 : 		for (i = 0; i < 50; i++)

  009b5	46		 inc	 esi
  009b6	83 fe 32	 cmp	 esi, 50			; 00000032H
  009b9	7c a5		 jl	 SHORT $LL16@drawField
  009bb	e9 50 fd ff ff	 jmp	 $LN164@drawField
$LN103@drawField:

; 3533 : 			else {
; 3534 : 				ShowBottomLineString(0, "ìëë°©ì íí°ì ì°¸ì¬í©ëë¤.");

  009c0	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JPNLKOND@?$LL?s?$LE?k?$LJ?f?$MA?G?5?F?D?F?$LM?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@
  009c5	6a 00		 push	 0
$LN178@drawField:

; 3535 : 			}
; 3536 : 		}
; 3537 : 		fieldBtnHitId[FIELD_FUNC_TRADE] = StockDispBuffer(leftUpPanelX + 114, leftUpPanelY + 17, DISP_PRIO_IME3, tradeBtnGraNo[tradeBtn], 2);

  009c7	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  009cc	83 c4 08	 add	 esp, 8
$LN104@drawField:
  009cf	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?tradeBtn@@3FA ; tradeBtn
  009d6	6a 02		 push	 2
  009d8	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?tradeBtnGraNo@@3PAHA[eax*4]
  009df	6a 69		 push	 105			; 00000069H
  009e1	6a 11		 push	 17			; 00000011H
  009e3	6a 72		 push	 114			; 00000072H
  009e5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  009ea	83 c4 14	 add	 esp, 20			; 00000014H
  009ed	a3 18 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+24, eax

; 3538 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_TRADE]) {

  009f2	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  009f8	75 0f		 jne	 SHORT $LN105@drawField

; 3539 : 			ShowBottomLineString(0, "ìëë°©ìê² êµíì ì ì²­í©ëë¤.");

  009fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NDPFBKJO@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LB?$LD?H?$KP?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@
  009ff	6a 00		 push	 0
  00a01	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00a06	83 c4 08	 add	 esp, 8
$LN105@drawField:

; 3540 : 		}
; 3541 : 		
; 3542 : 		/*fieldBtnHitId[FIELD_FUNC_STREET_VENDOR] = StockDispBuffer(leftUpPanelX + 175, leftUpPanelY + 18, DISP_PRIO_IME3, sStreetVendorBtnGraNo[pc.iOnStreetVendor], 2);
; 3543 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_STREET_VENDOR]) {
; 3544 : 			ShowBottomLineString(0, "ê°ì¸ìì ì ê°ì¤í©ëë¤.");
; 3545 : 		}*/
; 3546 : 		fieldBtnHitId[FIELD_FUNC_WARP_] = StockDispBuffer(leftUpPanelX + 172, leftUpPanelY + 50, DISP_PRIO_IME3, 66750, 2);

  00a09	6a 02		 push	 2
  00a0b	68 be 04 01 00	 push	 66750			; 000104beH
  00a10	6a 69		 push	 105			; 00000069H
  00a12	6a 32		 push	 50			; 00000032H
  00a14	68 ac 00 00 00	 push	 172			; 000000acH
  00a19	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a1e	83 c4 14	 add	 esp, 20			; 00000014H
  00a21	a3 34 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+52, eax

; 3547 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_WARP_]) {

  00a26	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00a2c	75 0f		 jne	 SHORT $LN106@drawField

; 3548 : 			ShowBottomLineString(0, "í¸ë¦¬íê² ìì¹ë¥¼ ì´ëí ììë ìíëì°ë¯¸ìëë¤");

  00a2e	68 00 00 00 00	 push	 OFFSET ??_C@_0CO@MJKCDDG@?F?m?$LI?$KO?G?O?$LA?T?5?$MA?$KH?D?$KB?$LI?$KG?5?$MA?L?$LF?$LP?G?R?$LM?v?$MA?V?$LE?B?5?$LP?v@
  00a33	6a 00		 push	 0
  00a35	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00a3a	83 c4 08	 add	 esp, 8
$LN106@drawField:

; 3549 : 		}
; 3550 : 		fieldBtnHitId[FIELD_FUNC_VIPSHOP] = StockDispBuffer(leftUpPanelX + 175, leftUpPanelY + 18, DISP_PRIO_IME3, sStreetVendorBtnGraNo[pc.iOnStreetVendor], 2);

  00a3d	a1 b8 a1 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+41400
  00a42	6a 02		 push	 2
  00a44	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?sStreetVendorBtnGraNo@@3PAHA[eax*4]
  00a4b	6a 69		 push	 105			; 00000069H
  00a4d	6a 12		 push	 18			; 00000012H
  00a4f	68 af 00 00 00	 push	 175			; 000000afH
  00a54	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a59	83 c4 14	 add	 esp, 20			; 00000014H
  00a5c	a3 38 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+56, eax

; 3551 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_VIPSHOP]) {

  00a61	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00a67	75 0f		 jne	 SHORT $LN107@drawField

; 3552 : 			ShowBottomLineString(0, "CHAOS ìë² VIPìì ìëë¤");

  00a69	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EEGCGAJN@CHAOS?5?$LM?$KN?$LJ?v?5VIP?$LL?s?A?$KB?$MA?T?$LE?O?$LE?Y@
  00a6e	6a 00		 push	 0
  00a70	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00a75	83 c4 08	 add	 esp, 8
$LN107@drawField:

; 3553 : 		}
; 3554 : 
; 3555 : 		/*fieldBtnHitId[FIELD_FUNC_HELP] = StockDispBuffer(leftUpPanelX + 230, leftUpPanelY + 33, DISP_PRIO_IME3, helpBtnGraNo[helpBtn], 2);
; 3556 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_HELP]) {
; 3557 : 			ShowBottomLineString(5, "íì¤í¸ ì ë³´ë¥¼ íì¸í©ëë¤.");
; 3558 : 		}*/
; 3559 : 
; 3560 : 		/*fieldBtnHitId[FIELD_FUNC_CHANNEL] = StockDispBuffer(leftUpPanelX + 115, leftUpPanelY + 27, DISP_PRIO_IME3, channelBtnGraNo[channelBtn], 2);
; 3561 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_CHANNEL]) {
; 3562 : 			ShowBottomLineString(0, "ë¶ì¡±ì ëí ì ë³´ë¥¼ íì¸í©ëë¤.");
; 3563 : 		}*/
; 3564 : 
; 3565 : 		StockDispBuffer(rightUpPanelX + 55, rightUpPanelY + 31, DISP_PRIO_MENU, CG_FIELD_MENU_RIGHT, 0);

  00a78	8b 5d fc	 mov	 ebx, DWORD PTR _rightUpPanelX$1$[ebp]
  00a7b	6a 00		 push	 0
  00a7d	68 94 66 00 00	 push	 26260			; 00006694H
  00a82	6a 68		 push	 104			; 00000068H
  00a84	8d 43 37	 lea	 eax, DWORD PTR [ebx+55]
  00a87	6a 1f		 push	 31			; 0000001fH
  00a89	50		 push	 eax
  00a8a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3566 : 		StockDispBuffer(rightUpPanelX + 106 - amPmAnimeX, rightUpPanelY + 19, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex0], 0);

  00a8f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?amPmAnimeGraNoIndex0@@3HA ; amPmAnimeGraNoIndex0
  00a94	6a 00		 push	 0
  00a96	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?amPmAnimeGraNo@@3PAHA[eax*4]
  00a9d	8b c3		 mov	 eax, ebx
  00a9f	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?amPmAnimeX@@3HA ; amPmAnimeX
  00aa5	6a 68		 push	 104			; 00000068H
  00aa7	83 c0 6a	 add	 eax, 106		; 0000006aH
  00aaa	6a 13		 push	 19			; 00000013H
  00aac	50		 push	 eax
  00aad	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3567 : 		StockDispBuffer(rightUpPanelX + 106 + 64 - amPmAnimeX, rightUpPanelY + 19, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex1], 0);

  00ab2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?amPmAnimeGraNoIndex1@@3HA ; amPmAnimeGraNoIndex1
  00ab7	6a 00		 push	 0
  00ab9	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?amPmAnimeGraNo@@3PAHA[eax*4]
  00ac0	8b c3		 mov	 eax, ebx
  00ac2	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?amPmAnimeX@@3HA ; amPmAnimeX
  00ac8	6a 68		 push	 104			; 00000068H
  00aca	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  00acf	6a 13		 push	 19			; 00000013H
  00ad1	50		 push	 eax
  00ad2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3568 : 
; 3569 : 		fieldBtnHitId[FIELD_FUNC_DUEL] = StockDispBuffer(rightUpPanelX + 38, rightUpPanelY + 31, DISP_PRIO_IME3, duelBtnGraNo[duelBtn], 2);

  00ad7	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?duelBtn@@3FA ; duelBtn
  00ade	8d 73 26	 lea	 esi, DWORD PTR [ebx+38]
  00ae1	6a 02		 push	 2
  00ae3	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?duelBtnGraNo@@3PAHA[eax*4]
  00aea	6a 69		 push	 105			; 00000069H
  00aec	6a 1f		 push	 31			; 0000001fH
  00aee	56		 push	 esi
  00aef	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00af4	83 c4 50	 add	 esp, 80			; 00000050H
  00af7	a3 10 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+16, eax

; 3570 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_DUEL]) {

  00afc	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00b02	75 0f		 jne	 SHORT $LN108@drawField

; 3571 : 			ShowBottomLineString(0, "ìëë°©ìê² ëì ì ì ì²­í©ëë¤.");

  00b04	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@GJIBCGFI@?$LL?s?$LE?k?$LJ?f?$LP?$KB?$LA?T?5?$LE?k?$MA?$PM?$MA?$LL?5?$LN?E?C?$LL?G?U?$LE?O?$LE?Y?4@
  00b09	6a 00		 push	 0
  00b0b	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00b10	83 c4 08	 add	 esp, 8
$LN108@drawField:

; 3572 : 		}
; 3573 : 		fieldBtnHitId[FIELD_FUNC_JOIN_BATTLE] = StockDispBuffer(rightUpPanelX + 38, rightUpPanelY + 31, DISP_PRIO_IME3, joinBattleBtnGraNo[joinBattleBtn], 2);

  00b13	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?joinBattleBtn@@3FA ; joinBattleBtn
  00b1a	6a 02		 push	 2
  00b1c	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?joinBattleBtnGraNo@@3PAHA[eax*4]
  00b23	6a 69		 push	 105			; 00000069H
  00b25	6a 1f		 push	 31			; 0000001fH
  00b27	56		 push	 esi
  00b28	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00b2d	83 c4 14	 add	 esp, 20			; 00000014H
  00b30	a3 0c 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+12, eax

; 3574 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_JOIN_BATTLE]) {

  00b35	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00b3b	75 31		 jne	 SHORT $LN113@drawField

; 3575 : 			if (joinBattleHelpMsgFlag == 1) {

  00b3d	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?joinBattleHelpMsgFlag@@3FA ; joinBattleHelpMsgFlag
  00b43	66 83 f8 01	 cmp	 ax, 1
  00b47	75 07		 jne	 SHORT $LN110@drawField

; 3576 : 				ShowBottomLineString(0, "ì í¬ì ì°¸ì¬í©ëë¤.");

  00b49	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KFAJKCNC@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?U?$LE?O?$LE?Y?4@

; 3577 : 			}

  00b4e	eb 14		 jmp	 SHORT $LN179@drawField
$LN110@drawField:

; 3578 : 			else if (joinBattleHelpMsgFlag == 2) {

  00b50	66 83 f8 02	 cmp	 ax, 2
  00b54	75 09		 jne	 SHORT $LN112@drawField

; 3579 : 				ShowBottomLineString(6, "ì í¬ì ì°¸ì¬í  ì ìì´ì.");

  00b56	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NBCGMCO@?$MA?$PM?E?u?$LP?$KB?5?B?$PM?$LP?$KJ?G?R?5?$LM?v?5?$LO?x?$LO?n?$LP?d?4@
  00b5b	6a 06		 push	 6

; 3580 : 			}

  00b5d	eb 07		 jmp	 SHORT $LN180@drawField
$LN112@drawField:

; 3581 : 			else {
; 3582 : 				ShowBottomLineString(0, "ì í¬ë¥¼ ê´ì í©ëë¤.");

  00b5f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KMDDMCEP@?$MA?$PM?E?u?$LI?$KG?5?$LA?$PM?$MA?$PM?G?U?$LE?O?$LE?Y?4@
$LN179@drawField:

; 3583 : 			}
; 3584 : 		}
; 3585 : 		fieldBtnHitId[FIELD_FUNC_HELP] = StockDispBuffer(rightUpPanelX + 115, rightUpPanelY + 32, DISP_PRIO_IME3, helpBtnGraNo[helpBtn], 2);

  00b64	6a 00		 push	 0
$LN180@drawField:
  00b66	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00b6b	83 c4 08	 add	 esp, 8
$LN113@drawField:
  00b6e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?helpBtn@@3FA ; helpBtn
  00b75	6a 02		 push	 2
  00b77	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?helpBtnGraNo@@3PAHA[eax*4]
  00b7e	8d 43 73	 lea	 eax, DWORD PTR [ebx+115]
  00b81	6a 69		 push	 105			; 00000069H
  00b83	6a 20		 push	 32			; 00000020H
  00b85	50		 push	 eax
  00b86	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00b8b	83 c4 14	 add	 esp, 20			; 00000014H
  00b8e	a3 20 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+32, eax

; 3586 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_HELP]) {

  00b93	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00b99	75 0f		 jne	 SHORT $LN114@drawField

; 3587 : 			ShowBottomLineString(5, "íì¤í¸ ì ë³´ë¥¼ íì¸í©ëë¤.");

  00b9b	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EJDCDLOD@?D?y?$LN?$LK?F?$KO?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@
  00ba0	6a 05		 push	 5
  00ba2	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00ba7	83 c4 08	 add	 esp, 8
$LN114@drawField:

; 3588 : 		}
; 3589 : 
; 3590 : 		fieldBtnHitId[FIELD_FUNC_ACT] = StockDispBuffer(rightUpPanelX + 68, rightUpPanelY + 30, DISP_PRIO_IME3, actBtnGraNo[actBtn], 2);

  00baa	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?actBtn@@3FA ; actBtn
  00bb1	6a 02		 push	 2
  00bb3	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?actBtnGraNo@@3PAHA[eax*4]
  00bba	8d 43 44	 lea	 eax, DWORD PTR [ebx+68]
  00bbd	6a 69		 push	 105			; 00000069H
  00bbf	6a 1e		 push	 30			; 0000001eH
  00bc1	50		 push	 eax
  00bc2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00bc7	83 c4 14	 add	 esp, 20			; 00000014H
  00bca	a3 14 00 00 00	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+20, eax

; 3591 : 		if (HitDispNo == fieldBtnHitId[FIELD_FUNC_ACT]) {

  00bcf	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00bd5	75 0f		 jne	 SHORT $LN115@drawField

; 3592 : 			ShowBottomLineString(0, "ìºë¦­í° ì¡ì ì ë³´ë¥¼ íì¸í©ëë¤.");

  00bd7	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@JAGIJNBP@?D?$LD?$LI?$KP?E?M?5?$LO?W?$LM?G?5?A?$KE?$LK?$LI?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y?4@
  00bdc	6a 00		 push	 0
  00bde	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00be3	83 c4 08	 add	 esp, 8
$LN115@drawField:

; 3593 : 		}
; 3594 : 
; 3595 : 		/*é¡¶é¨æ°æé®ç´¢å¼[1] = StockDispBuffer(leftUpPanelX+20, leftUpPanelY + 220, DISP_PRIO_IME3,IMAGE_æé®è§æ, 2);
; 3596 : 		if( HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[1]){
; 3597 : 			ShowBottomLineString(11, "ê´ì ã");
; 3598 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3599 : 				lssproto_SaMenu_send(sockfd,3, 4, 0);
; 3600 : 				play_se(217, 320, 240);
; 3601 : 			}
; 3602 : 		}*/
; 3603 : 
; 3604 : 		/*é¡¶é¨æ°æé®ç´¢å¼[2] = StockDispBuffer(rightUpPanelX-400, rightUpPanelY + 19, DISP_PRIO_IME3, 60012, 2);
; 3605 : 		if( HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[2]){
; 3606 : 			ShowBottomLineString(4, "ì§ì í¬ì¸í¸ ìµì ì´ëí©ëë¤.");
; 3607 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3608 : 				lssproto_SaMenu_send(sockfd,3, 2, 0);
; 3609 : 				play_se(217, 320, 240);
; 3610 : 			}
; 3611 : 		}*/
; 3612 : 
; 3613 : 		é¡¶é¨æ°æé®ç´¢å¼[3] = StockDispBuffer(leftUpPanelX + 143, leftUpPanelY + 18, DISP_PRIO_IME3, ridelistBtnGraNo[ridelistBtn], 2);

  00be6	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?ridelistBtn@@3FA ; ridelistBtn
  00bed	6a 02		 push	 2
  00bef	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?ridelistBtnGraNo@@3PAHA[eax*4]
  00bf6	6a 69		 push	 105			; 00000069H
  00bf8	6a 12		 push	 18			; 00000012H
  00bfa	68 8f 00 00 00	 push	 143			; 0000008fH
  00bff	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00c04	83 c4 14	 add	 esp, 20			; 00000014H
  00c07	a3 0c 00 00 00	 mov	 DWORD PTR ??Ý»ãæäÎ?ßãìÚ@@3PAHA+12, eax

; 3614 : 		if (HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[3]) {

  00c0c	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00c12	75 40		 jne	 SHORT $LN117@drawField

; 3615 : 			ShowBottomLineString(0, "ìºë¦­í°ì íì¹ íí¸ë¥¼ íì¸í©ëë¤.");

  00c14	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@NCIEAEIK@?D?$LD?$LI?$KP?E?M?$MA?G?5?E?$LO?$LN?B?5?F?d?F?$KO?$LI?$KG?5?H?$KO?$MA?N?G?U?$LE?O?$LE?Y@
  00c19	6a 00		 push	 0
  00c1b	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00c20	83 c4 08	 add	 esp, 8

; 3616 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00c23	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00c2a	74 28		 je	 SHORT $LN117@drawField

; 3617 : 				lssproto_SaMenu_send(sockfd, 3, 1, 0);

  00c2c	6a 00		 push	 0
  00c2e	6a 01		 push	 1
  00c30	6a 03		 push	 3
  00c32	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00c38	e8 00 00 00 00	 call	 ?lssproto_SaMenu_send@@YAXHHHH@Z ; lssproto_SaMenu_send

; 3618 : 				play_se(217, 320, 240);

  00c3d	68 f0 00 00 00	 push	 240			; 000000f0H
  00c42	68 40 01 00 00	 push	 320			; 00000140H
  00c47	68 d9 00 00 00	 push	 217			; 000000d9H
  00c4c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00c51	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN117@drawField:

; 3619 : 			}
; 3620 : 		}
; 3621 : 		é¡¶é¨æ°æé®ç´¢å¼[4] = StockDispBuffer(leftUpPanelX + 632, leftUpPanelY + 18, DISP_PRIO_IME3, 60011, 2);

  00c54	6a 02		 push	 2
  00c56	68 6b ea 00 00	 push	 60011			; 0000ea6bH
  00c5b	6a 69		 push	 105			; 00000069H
  00c5d	6a 12		 push	 18			; 00000012H
  00c5f	68 78 02 00 00	 push	 632			; 00000278H
  00c64	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00c69	83 c4 14	 add	 esp, 20			; 00000014H
  00c6c	a3 10 00 00 00	 mov	 DWORD PTR ??Ý»ãæäÎ?ßãìÚ@@3PAHA+16, eax

; 3622 : 		if (HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[4]) {

  00c71	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00c77	75 6f		 jne	 SHORT $LN21@drawField

; 3623 : 			ShowBottomLineString(0, "í´ë¹ì§ì­ì ìë íí°ë¥¼ ê²ìí©ëë¤.");

  00c79	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@LEKAGBMD@?G?X?$LE?g?A?v?$LP?$KK?$LP?$KB?5?$MA?V?$LE?B?5?F?D?F?$LM?$LI?$KG?5?$LA?K?$LL?v?G?U?$LE?O@
  00c7e	6a 00		 push	 0
  00c80	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00c85	83 c4 08	 add	 esp, 8

; 3624 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00c88	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00c8f	74 57		 je	 SHORT $LN21@drawField

; 3625 : 				lssproto_Partyauto_send(sockfd);

  00c91	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00c97	e8 00 00 00 00	 call	 ?lssproto_Partyauto_send@@YAXH@Z ; lssproto_Partyauto_send

; 3626 : 				play_se(217, 320, 240);

  00c9c	68 f0 00 00 00	 push	 240			; 000000f0H
  00ca1	68 40 01 00 00	 push	 320			; 00000140H
  00ca6	68 d9 00 00 00	 push	 217			; 000000d9H
  00cab	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00cb0	83 c4 10	 add	 esp, 16			; 00000010H
  00cb3	5f		 pop	 edi

; 3928 : 			fieldBtnHitId[i] = -2;
; 3929 : 	}
; 3930 : 
; 3931 : }

  00cb4	5e		 pop	 esi
  00cb5	5b		 pop	 ebx
  00cb6	8b e5		 mov	 esp, ebp
  00cb8	5d		 pop	 ebp
  00cb9	c3		 ret	 0
$LN98@drawField:

; 3627 : 			}
; 3628 : 		}
; 3629 : 		//é¡¶é¨æ°æé®ç´¢å¼[5] = StockDispBuffer(leftUpPanelX + 340, leftUpPanelY + 20, DISP_PRIO_IME3, 56040, 2);
; 3630 : 		/*if (HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[5]) {
; 3631 : 			ShowBottomLineString(0, "ê²½íì¹ êµ¬ì¬ì ì¬ì©íê±°ë ì¬ì©ì ì¢ë£í©ëë¤.");
; 3632 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 3633 : 				lssproto_Expup_send(sockfd);
; 3634 : 				play_se(217, 320, 240);
; 3635 : 			}
; 3636 : 		}*/
; 3637 : 		/*é¡¶é¨æ°æé®ç´¢å¼[6] = StockDispBuffer(leftUpPanelX + 450, leftUpPanelY + 20, DISP_PRIO_IME3, 56039, 2);
; 3638 : 		if (HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[6]) {
; 3639 : 			ShowBottomLineString(0, "ë²½ì²­ì ìë¼ë¥¼ ì¬ì©íê±°ë ì¬ì©ì ì¢ë£í©ëë¤.");
; 3640 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 3641 : 				lssproto_Noenemy_send(sockfd);
; 3642 : 				play_se(217, 320, 240);
; 3643 : 			}
; 3644 : 		}*/
; 3645 : 
; 3646 : 		/*é¡¶é¨æ°æé®ç´¢å¼[4] = StockDispBuffer(leftUpPanelX+340, leftUpPanelY+20, DISP_PRIO_IME3, IMAGE_æé®ä¿¡ç®±, 2);//å°å¾
; 3647 : 		if( HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[4]){
; 3648 : 			ShowBottomLineString(11, "ì°í¸ã");
; 3649 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3650 : 				lssproto_SaMenu_send(sockfd,3, 5, 0);
; 3651 : 				play_se(217, 320, 240);
; 3652 : 			}
; 3653 : 		}*/
; 3654 : #ifdef _NB_çº¢åç³»ç»
; 3655 : 		/*é¡¶é¨æ°æé®ç´¢å¼[5] = StockDispBuffer(leftUpPanelX+380, leftUpPanelY+20, DISP_PRIO_IME3, IMAGE_æé®çº¢å, 2);//çº¢å
; 3656 : 		if( HitDispNo == é¡¶é¨æ°æé®ç´¢å¼[5]){
; 3657 : 			ShowBottomLineString(11, "ë¹¨ê°ë´í¬ã");
; 3658 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){
; 3659 : 				lssproto_SaMenu_send(sockfd,3, 6, 0);
; 3660 : 				play_se(217, 320, 240);
; 3661 : 			}
; 3662 : 		}*/
; 3663 : #endif
; 3664 : 		/*	}else{
; 3665 : 				extern int ç¶ææ¾ç¤ºå¼å³;
; 3666 : 				if (ç¶ææ¾ç¤ºå¼å³){
; 3667 : 					sprintf( moji,"[ìºë¦­í°]%-s Lv:%d",pc.name, pc.level);
; 3668 : 					StockFontBuffer( leftUpPanelX + 6, leftUpPanelY +60, FONT_PRIO_FRONT, 1, moji, 0 );//æå°ç­çº§
; 3669 : 
; 3670 : 					int è¡éç¾åæ¯ = (int)float(pc.hp)/float(pc.maxHp)*100;
; 3671 : 					sprintf( moji,"HP:%d/%d(%d%%)",pc.hp,pc.maxHp,è¡éç¾åæ¯);
; 3672 : 					StockFontBuffer( leftUpPanelX + 6, leftUpPanelY + 76, FONT_PRIO_FRONT, 4, moji, 0 );
; 3673 : 					//StockBoxDispBuffer( leftUpPanelX + 114, leftUpPanelY+27,leftUpPanelX+114 + è¡éç¾åæ¯, leftUpPanelY + 27 + 12, DISP_PRIO_IME3, SYSTEM_PAL_RED, 1 );
; 3674 : 
; 3675 : 					int æ°åç¾åæ¯ = (int)float(pc.mp)/float(pc.maxMp)*100;
; 3676 : 					sprintf( moji,"MP:%d/%d(%d%%)",pc.mp,pc.maxMp,æ°åç¾åæ¯);
; 3677 : 					StockFontBuffer( leftUpPanelX + 6, leftUpPanelY + 92, FONT_PRIO_FRONT, 4, moji, 0 );
; 3678 : 					//StockBoxDispBuffer( leftUpPanelX + 114, leftUpPanelY+45,leftUpPanelX+114 + æ°åç¾åæ¯, leftUpPanelY + 45 + 12, DISP_PRIO_IME3, SYSTEM_PAL_AQUA, 1 );
; 3679 : 
; 3680 : 					int ç»éªç¾åæ¯ = (int)float(pc.exp)/float(pc.maxExp)*100;
; 3681 : 					if (pc.maxExp == -1){
; 3682 : 						sprintf( moji,"Exp:Max");
; 3683 : 					}else{
; 3684 : 						sprintf( moji,"Exp:%d%%", ç»éªç¾åæ¯);
; 3685 : 					}
; 3686 : 
; 3687 : 					StockFontBuffer( leftUpPanelX + 6, leftUpPanelY + 108, FONT_PRIO_FRONT, 4, moji, 0 );
; 3688 : 					//StockBoxDispBuffer( leftUpPanelX + 114, leftUpPanelY+63,leftUpPanelX+114 + ç»éªç¾åæ¯, leftUpPanelY + 63 + 12, DISP_PRIO_IME3, SYSTEM_PAL_YELLOW, 1 );
; 3689 : 
; 3690 : 					if (pc.battlePetNo >= 0){
; 3691 : 						sprintf( moji,"[íí¸]%s Lv:%d",pet[pc.battlePetNo].name,pet[pc.battlePetNo].level);//æå°æå® åå­
; 3692 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 124, FONT_PRIO_FRONT, 1, moji, 0 );
; 3693 : 
; 3694 : 						int ä¸´æ¶ç¾åæ¯ = (int)float(pet[pc.battlePetNo].hp)/float(pet[pc.battlePetNo].maxHp)*100;
; 3695 : 						sprintf( moji,"HP:%d%/%d(%d%%)", pet[pc.battlePetNo].hp,pet[pc.battlePetNo].maxHp,ä¸´æ¶ç¾åæ¯);
; 3696 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 140, FONT_PRIO_FRONT, 4, moji, 0 );
; 3697 : 						if (pet[pc.battlePetNo].maxExp == -1){
; 3698 : 							sprintf( moji,"Exp:Max");
; 3699 : 						}else{
; 3700 : 							ä¸´æ¶ç¾åæ¯ = (int)float(pet[pc.battlePetNo].exp)/float(pet[pc.battlePetNo].maxExp)*100;
; 3701 : 							sprintf( moji,"Exp:%d%%", ä¸´æ¶ç¾åæ¯);
; 3702 : 						}
; 3703 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 156, FONT_PRIO_FRONT, 4, moji, 0 );
; 3704 : 					}
; 3705 : 					//æå°éªå® ä¿¡æ¯
; 3706 : 					if (pc.ridePetNo >= 0){
; 3707 : 						sprintf( moji,"[íì¹]%s Lv:%d",pet[pc.ridePetNo].name,pet[pc.ridePetNo].level);
; 3708 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 172, FONT_PRIO_FRONT, 1, moji, 0 );
; 3709 : 
; 3710 : 						int ä¸´æ¶ç¾åæ¯ = (int)float(pet[pc.ridePetNo].hp)/float(pet[pc.ridePetNo].maxHp)*100;
; 3711 : 						sprintf( moji,"HP:%d%/%d(%d%%)", pet[pc.ridePetNo].hp,pet[pc.ridePetNo].maxHp,ä¸´æ¶ç¾åæ¯);
; 3712 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 188, FONT_PRIO_FRONT, 4, moji, 0 );
; 3713 : 
; 3714 : 						if (pet[pc.ridePetNo].maxExp == -1){
; 3715 : 							sprintf( moji,"Exp:Max");
; 3716 : 						}else{
; 3717 : 							ä¸´æ¶ç¾åæ¯ = (int)float(pet[pc.ridePetNo].exp)/float(pet[pc.ridePetNo].maxExp)*100;
; 3718 : 							sprintf( moji,"Exp:%d%%", ä¸´æ¶ç¾åæ¯);
; 3719 : 						}
; 3720 : 						StockFontBuffer( leftUpPanelX+6, leftUpPanelY + 204, FONT_PRIO_FRONT, 4, moji, 0 );
; 3721 : 					}
; 3722 : 				}
; 3723 : 
; 3724 : 
; 3725 : 			}*/
; 3726 : 
; 3727 : 			//ì¤ë¥¸ìª½ì ê¸°ë¥ë©ë´
; 3728 : 		if (ResoMode == åè¾¨ç::mode800) {
; 3729 : 			ä¸´æ¶å¾æ X = 784;
; 3730 : 			ä¸´æ¶å¾æ Y = 60;
; 3731 : 		}
; 3732 : 		else if (ResoMode == åè¾¨ç::mode1024) {
; 3733 : 			ä¸´æ¶å¾æ X = 1008;
; 3734 : 			ä¸´æ¶å¾æ Y = 60;
; 3735 : 		}
; 3736 : 		else {
; 3737 : 			ä¸´æ¶å¾æ X = 624;
; 3738 : 			ä¸´æ¶å¾æ Y = 60;
; 3739 : 		}
; 3740 : 		//æ¾ç¤ºPINGå¼
; 3741 : 		char tmp[64];
; 3742 : 		/*
; 3743 : 		if( dwPingState & 0x80000000){
; 3744 : 			wsprintf( tmp, "PING:%d", dwPingTime);
; 3745 : 			dwPingState++;
; 3746 : 			if( (dwPingState&0xff) > 40)
; 3747 : 				dwPingState = 0;
; 3748 : 		}else{
; 3749 : 			wsprintf( tmp, "PING:%d", dwPingTime);
; 3750 : 		}
; 3751 : 		if (dwPingTime > 125){
; 3752 : 			StockFontBuffer( ä¸´æ¶å¾æ X-100, ä¸´æ¶å¾æ Y -58, FONT_PRIO_FRONT, 4, tmp, 0 );
; 3753 : 		}else if (dwPingTime > 180){
; 3754 : 			StockFontBuffer( ä¸´æ¶å¾æ X-100, ä¸´æ¶å¾æ Y -58, FONT_PRIO_FRONT, 6, tmp, 0 );
; 3755 : 		}else{
; 3756 : 			StockFontBuffer( ä¸´æ¶å¾æ X-100, ä¸´æ¶å¾æ Y -58, FONT_PRIO_FRONT, 5, tmp, 0 );
; 3757 : 		}*/
; 3758 : 		//,nowGx,nowGy
; 3759 : 		//wsprintf( tmp, "ë:%d", nowGx);
; 3760 : 		//StockFontBuffer(ä¸´æ¶å¾æ X-95, ä¸´æ¶å¾æ Y-54, FONT_PRIO_FRONT, 1, tmp, 0);
; 3761 : 		//wsprintf( tmp, "ë¨:%d", nowGy);
; 3762 : 		//StockFontBuffer(ä¸´æ¶å¾æ X-95, ä¸´æ¶å¾æ Y-40, FONT_PRIO_FRONT, 1, tmp, 0);
; 3763 : 		//wsprintf(tmp, "Time:%d", SaTime.hour * 24 / 1200);
; 3764 : 		//StockFontBuffer( ä¸´æ¶å¾æ X-100, ä¸´æ¶å¾æ Y -40, FONT_PRIO_FRONT, 4, tmp, 0 );
; 3765 : 
; 3766 : 
; 3767 : 		//ìê°íê¸°
; 3768 : 		//StockDispBuffer(ä¸´æ¶å¾æ X-54, ä¸´æ¶å¾æ Y-38, DISP_PRIO_MENU, 52108, 0);
; 3769 : 		//if (drawTimeAnimeFlag){ì§ëìê´ê³ìì´ìê°íì]
; 3770 : 			//StockDispBuffer(rightUpPanelX + 106 - amPmAnimeX, rightUpPanelY + 20, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex0], 0);
; 3771 : 			//StockDispBuffer(rightUpPanelX + 106 + 64 - amPmAnimeX, rightUpPanelY + 20, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex1], 0);
; 3772 : 
; 3773 : 		//}else{
; 3774 : 			//StockDispBuffer(rightUpPanelX + 68, rightUpPanelY + 31, DISP_PRIO_MENU, CG_FIELD_MENU_RIGHT_BACK, 0);
; 3775 : 		//}
; 3776 : 
; 3777 : #else
; 3778 : #ifdef __PHONEMESSAGE
; 3779 : 		// LeiBoy 2002 Jan.26 --- Cell Phone's Messages Button -- BEGIN
; 3780 : #ifdef _TABLEOFSKILL
; 3781 : #ifdef _ANGEL_SUMMON
; 3782 : #ifdef _TEACHER_SYSTEM
; 3783 : 		StockDispBuffer(leftUpPanelX + 148, leftUpPanelY + 25, DISP_PRIO_MENU, CG_FIELD_TS_LEFT_MENU, 0);
; 3784 : #else
; 3785 : 		StockDispBuffer(leftUpPanelX + 150, leftUpPanelY + 27, DISP_PRIO_MENU, CG_FIELD_MENU_LEFT_75, 0);
; 3786 : #endif
; 3787 : 		if (angelLampDrawFlag)
; 3788 : 			StockDispBuffer(leftUpPanelX + 64, leftUpPanelY + 42, DISP_PRIO_IME3, CG_FIELD_ANGEL_LAMP, 0);
; 3789 : #else
; 3790 : #ifdef _FRIENDCHANNEL
; 3791 : 		StockDispBuffer(leftUpPanelX + 141, leftUpPanelY + 27, DISP_PRIO_MENU, CG_FIELD_CHANNEL_MENU, 0);
; 3792 : #else
; 3793 : 		StockDispBuffer(leftUpPanelX + 141, leftUpPanelY + 27, DISP_PRIO_MENU, CG_FIELD_SKILL_MENU, 0);
; 3794 : #endif
; 3795 : #endif
; 3796 : #else
; 3797 : 		StockDispBuffer(leftUpPanelX + 100, leftUpPanelY + 26, DISP_PRIO_MENU, CG_FIELD_MENU_LEFT, 0);
; 3798 : #endif
; 3799 : 		// LeiBoy 2002 Jan.26 --- Cell Phone's Messages Button -- END
; 3800 : #else
; 3801 : 
; 3802 : 		//#ifdef __FAMILY_UI_
; 3803 : 		if (bNewServer)
; 3804 : 			StockDispBuffer(leftUpPanelX + 140, leftUpPanelY + 27, DISP_PRIO_MENU, CG_FIELD_MENU_LEFT_NEW, 0);
; 3805 : 		else
; 3806 : 			//#else
; 3807 : 			StockDispBuffer(leftUpPanelX + 26 + 52, leftUpPanelY + 28, DISP_PRIO_MENU, CG_FIELD_MENU_LEFT, 0);
; 3808 : 		//#endif
; 3809 : #endif
; 3810 : 
; 3811 : 
; 3812 : 		// ê²ìì¤ì ë²í¼
; 3813 : 		fieldBtnHitId[FIELD_FUNC_MENU] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 25, DISP_PRIO_IME3, menuBtnGraNo[menuBtn], 2);
; 3814 : 		if (menuBtnFocus)
; 3815 : 			ShowBottomLineString(FONT_PAL_WHITE, "ê²ìì¤ì ã");
; 3816 : 		// ëªí¨êµíë²í¼
; 3817 : 		fieldBtnHitId[FIELD_FUNC_CARD] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 25, DISP_PRIO_IME3, cardBtnGraNo[cardBtn], 2);
; 3818 : 		if (cardBtnFocus)
; 3819 : 			ShowBottomLineString(FONT_PAL_WHITE, "ëªí¨êµíã");
; 3820 : 
; 3821 : 		// íí°ì°¸ì¬ë²í¼
; 3822 : 		fieldBtnHitId[FIELD_FUNC_PARTY] = StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 25, DISP_PRIO_IME3, partyBtnGraNo[partyBtn], 2);
; 3823 : 		if (partyBtnFocus) {
; 3824 : 			if (partyBtnEnableFlag == 0)
; 3825 : 				ShowBottomLineString(FONT_PAL_WHITE, "íí°í©ë¥ë¶ê°ã");
; 3826 : 			else
; 3827 : 				ShowBottomLineString(FONT_PAL_WHITE, "íí°í©ë¥ã");
; 3828 : 		}
; 3829 : 		// ê±°ëíê¸°ë²í¼
; 3830 : 		fieldBtnHitId[FIELD_FUNC_TRADE] = StockDispBuffer(leftUpPanelX + 104 + 10, leftUpPanelY + 25 - 10, DISP_PRIO_IME3, tradeBtnGraNo[tradeBtn], 2);
; 3831 : 		if (tradeBtnFocus)
; 3832 : 			ShowBottomLineString(FONT_PAL_WHITE, "ê±°ëã");
; 3833 : 
; 3834 : 		// ê°ì¡±ê¸°ë¥ë²í¼
; 3835 : 		if (bNewServer) {
; 3836 : #ifndef _CHANNEL_MODIFY
; 3837 : 			if (pc.channel != -1)
; 3838 : 				channelBtn = 1;
; 3839 : 			else
; 3840 : 				channelBtn = 0;
; 3841 : #else
; 3842 : 			if (pc.channel == 5)
; 3843 : 				channelBtn = 1;
; 3844 : 			else
; 3845 : 				channelBtn = 0;
; 3846 : #endif
; 3847 : 			fieldBtnHitId[FIELD_FUNC_CHANNEL] = StockDispBuffer(leftUpPanelX + 115, leftUpPanelY + 25, DISP_PRIO_IME3, channelBtnGraNo[channelBtn], 2);
; 3848 : 			if (channelBtnFocus)
; 3849 : 				ShowBottomLineString(FONT_PAL_WHITE, "ê°ì¡±ê¸°ë¥ã");
; 3850 : 		}
; 3851 : 
; 3852 : 
; 3853 : #ifdef _STREET_VENDOR
; 3854 : 		// ì¤í¨ê¸°ë¥ë²í¼
; 3855 : 		fieldBtnHitId[FIELD_FUNC_STREET_VENDOR] = StockDispBuffer(leftUpPanelX + 176, leftUpPanelY + 16, DISP_PRIO_IME3, sStreetVendorBtnGraNo[pc.iOnStreetVendor], 2);
; 3856 : 		if (sStreetVendorBtnFocus)
; 3857 : 			ShowBottomLineString(FONT_PAL_WHITE, "ë¸ì ê¸°ë¥ã");
; 3858 : #else
; 3859 : #ifdef _TABLEOFSKILL
; 3860 : 		fieldBtnHitId[FIELD_FUNC_SKILL] = StockDispBuffer(leftUpPanelX + 108, leftUpPanelY + 26, DISP_PRIO_IME3, skillBtnGraNo[skillBtn], 2);
; 3861 : 		if (skillBtnFocus)
; 3862 : 			ShowBottomLineString(FONT_PAL_WHITE, "ì§ìê¸°ë¥ã");
; 3863 : #endif
; 3864 : #endif
; 3865 : #ifdef __PHONEMESSAGE
; 3866 : 		// LeiBoy 2002 Jan.26 --- Cell Phone's Messages Button -- BEGIN
; 3867 : #ifdef _TABLEOFSKILL
; 3868 : 		fieldBtnHitId[FIELD_FUNC_MSG] = StockDispBuffer(leftUpPanelX + 132, leftUpPanelY + 28, DISP_PRIO_IME3, msgBtnGraNo[msgBtn], 2);
; 3869 : #else
; 3870 : 		fieldBtnHitId[FIELD_FUNC_MSG] = StockDispBuffer(leftUpPanelX + 101, leftUpPanelY + 28, DISP_PRIO_IME3, msgBtnGraNo[msgBtn], 2);
; 3871 : #endif
; 3872 : #endif
; 3873 : 
; 3874 : 		if (mailLampDrawFlag)
; 3875 : 			StockDispBuffer(leftUpPanelX + 52, leftUpPanelY + 26, DISP_PRIO_IME3, CG_FIELD_MAIL_LAMP, 0);
; 3876 : 
; 3877 : 		StockDispBuffer(rightUpPanelX + 24, rightUpPanelY + 30, DISP_PRIO_MENU, CG_FIELD_MENU_RIGHT, 0);
; 3878 : 		fieldBtnHitId[FIELD_FUNC_JOIN_BATTLE] = StockDispBuffer(rightUpPanelX + 38, rightUpPanelY + 30, DISP_PRIO_IME3, joinBattleBtnGraNo[joinBattleBtn], 2);
; 3879 : 		if (joinBattleBtnFocus) {
; 3880 : 			if (joinBattleHelpMsgFlag == 1)
; 3881 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì í¬ì°¸ì¬ã");
; 3882 : 			else if (joinBattleHelpMsgFlag == 2)
; 3883 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì í¬ì°¸ì¬ë¶ê°ã");
; 3884 : 			else
; 3885 : 				ShowBottomLineString(FONT_PAL_WHITE, "ê´ì ã");
; 3886 : 		}
; 3887 : 
; 3888 : 		fieldBtnHitId[FIELD_FUNC_DUEL] = StockDispBuffer(rightUpPanelX + 38, rightUpPanelY + 30, DISP_PRIO_IME3, duelBtnGraNo[duelBtn], 2);
; 3889 : 		if (duelBtnFocus)
; 3890 : 			ShowBottomLineString(FONT_PAL_WHITE, "ëì¼ì ì²­ã");
; 3891 : 
; 3892 : 		fieldBtnHitId[FIELD_FUNC_HELP] = StockDispBuffer(rightUpPanelX + 115, rightUpPanelY + 31, DISP_PRIO_IME3, helpBtnGraNo[helpBtn], 2);
; 3893 : 		if (helpBtnFocus)
; 3894 : 			ShowBottomLineString(FONT_PAL_WHITE, "ê²ìê°ì´ëã");
; 3895 : 
; 3896 : 		fieldBtnHitId[FIELD_FUNC_ACT] = StockDispBuffer(rightUpPanelX + 68, rightUpPanelY + 30, DISP_PRIO_IME3, actBtnGraNo[actBtn], 2);
; 3897 : 		if (actBtnForcus)
; 3898 : 			ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í°ì¡ìã");
; 3899 : 
; 3900 : 		if (drawTimeAnimeFlag) {
; 3901 : 			StockDispBuffer(rightUpPanelX + 106 - amPmAnimeX, rightUpPanelY + 19, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex0], 0);
; 3902 : 			StockDispBuffer(rightUpPanelX + 106 + 64 - amPmAnimeX, rightUpPanelY + 19, DISP_PRIO_MENU, amPmAnimeGraNo[amPmAnimeGraNoIndex1], 0);
; 3903 : 		}
; 3904 : 		else
; 3905 : 			// ??????î¸î????????????????????î?
; 3906 : 			StockDispBuffer(rightUpPanelX + 68, rightUpPanelY + 30, DISP_PRIO_MENU, CG_FIELD_MENU_RIGHT_BACK, 0);
; 3907 : 
; 3908 : #ifdef _ANGEL_SUMMON
; 3909 : 		/*
; 3910 : 		fieldBtnHitId[FIELD_FUNC_ANGEL] = StockDispBuffer(leftUpPanelX + 207, leftUpPanelY + 19, DISP_PRIO_IME3, angelBtnGraNo[angelBtn], 2);
; 3911 : 		if (angelBtnFocus)
; 3912 : 			ShowBottomLineString(FONT_PAL_WHITE, "ç²¾çµçå¬å¤ã");
; 3913 : 		*/
; 3914 : #endif
; 3915 : #ifdef _TEACHER_SYSTEM//åä¸º235
; 3916 : 		/*
; 3917 : 		fieldBtnHitId[FIELD_FUNC_TEACHER] = StockDispBuffer(leftUpPanelX + 238, leftUpPanelY + 20, DISP_PRIO_IME3, iTeacherSystemBtnGraNo[sTeacherSystemBtn > 0 ? 1:0], 2);
; 3918 : 		if (sTeacherSystemBtnFocus)
; 3919 : 			ShowBottomLineString(FONT_PAL_WHITE, "å¯¼å¸ç³»ç»ã");
; 3920 : 		*/
; 3921 : #endif
; 3922 : 
; 3923 : 
; 3924 : #endif
; 3925 : 	}
; 3926 : 	else {
; 3927 : 		for (i = 0; i < FIELD_FUNC_END; i++)

  00cba	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00cc1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA, xmm0
  00cc8	c7 05 38 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+56, -2 ; fffffffeH
  00cd2	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA+16, xmm0
  00cd9	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA+32, xmm0
  00ce0	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?fieldBtnHitId@@3PAHA+48, xmm0
$LN21@drawField:

; 3928 : 			fieldBtnHitId[i] = -2;
; 3929 : 	}
; 3930 : 
; 3931 : }

  00ce8	5f		 pop	 edi
  00ce9	5e		 pop	 esi
  00cea	5b		 pop	 ebx
  00ceb	8b e5		 mov	 esp, ebp
  00ced	5d		 pop	 ebp
  00cee	c3		 ret	 0
$LN125@drawField:

; 3352 : 				Timeflag[i] = false;

  00cef	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN169@drawField:
  00cf4	cc		 int	 3
?drawField@@YAXXZ ENDP					; drawField
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?fieldProc2@@YAXXZ
_TEXT	SEGMENT
?fieldProc2@@YAXXZ PROC					; fieldProc2, COMDAT

; 3012 : 	if ((joy_trg[1] & JOY_CTRL_Q)) {

  00000	f7 05 04 00 00
	00 00 00 00 20	 test	 DWORD PTR ?joy_trg@@3PAKA+4, 536870912 ; 20000000H
  0000a	74 50		 je	 SHORT $LN8@fieldProc2

; 3013 : 		if (menuBtn == 0) {

  0000c	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?menuBtn@@3FA, 0 ; menuBtn
  00014	75 41		 jne	 SHORT $LN3@fieldProc2

; 3014 : 			closeCharActionAnimeChange();

  00016	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange

; 3015 : 			closeJoinChannelWN();

  0001b	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 3016 : 			if (CheckMenuFlag())

  00020	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00025	85 c0		 test	 eax, eax
  00027	74 05		 je	 SHORT $LN5@fieldProc2

; 3017 : 				InitMenu2();

  00029	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN5@fieldProc2:

; 3018 : 			initEtcSwitch();

  0002e	e8 00 00 00 00	 call	 ?initEtcSwitch@@YAXXZ	; initEtcSwitch

; 3019 : 			menuBtn = 1;
; 3020 : 			play_se(202, 320, 240);

  00033	68 f0 00 00 00	 push	 240			; 000000f0H
  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	68 40 01 00 00	 push	 320			; 00000140H
  00042	68 ca 00 00 00	 push	 202			; 000000caH
  00047	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtn@@3FA, ax ; menuBtn
  0004d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00052	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3021 : 		}

  00055	eb 05		 jmp	 SHORT $LN8@fieldProc2
$LN3@fieldProc2:

; 3022 : 		else
; 3023 : 			closeEtcSwitch();

  00057	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch
$LN8@fieldProc2:

; 3024 : 	}
; 3025 : 	if (menuBtn == 1 && etcSwitch())

  0005c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00064	75 11		 jne	 SHORT $LN6@fieldProc2
  00066	e8 00 00 00 00	 call	 ?etcSwitch@@YAHXZ	; etcSwitch
  0006b	85 c0		 test	 eax, eax
  0006d	74 08		 je	 SHORT $LN6@fieldProc2

; 3026 : 		menuBtn = 0;

  0006f	33 c0		 xor	 eax, eax
  00071	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtn@@3FA, ax ; menuBtn
$LN6@fieldProc2:

; 3027 : }

  00077	c3		 ret	 0
?fieldProc2@@YAXXZ ENDP					; fieldProc2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?fieldProc@@YAXXZ
_TEXT	SEGMENT
_dy$1 = -76						; size = 4
_dy$2 = -76						; size = 4
_dy$3 = -76						; size = 4
_dy$4 = -76						; size = 4
_dx$5 = -76						; size = 4
_pushId$1$ = -72					; size = 4
_dx$6 = -72						; size = 4
_dx$7 = -72						; size = 4
_dx$8 = -72						; size = 4
_dx$9 = -72						; size = 4
_dy$10 = -72						; size = 4
_buf$11 = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?fieldProc@@YAXXZ PROC					; fieldProc, COMDAT

; 2118 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2119 : 	int selId;
; 2120 : 	int pushId;
; 2121 : 	int focusId;
; 2122 : 	BOOL walkFlag = FALSE;
; 2123 : 	rand2();

  00010	e8 00 00 00 00	 call	 ?rand2@@YAHXZ		; rand2

; 2124 : 	actionShortCutKeyProc();

  00015	e8 00 00 00 00	 call	 ?actionShortCutKeyProc@@YAXXZ ; actionShortCutKeyProc

; 2125 : 	if (etcSwitchChangeFlag && eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0) {

  0001a	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?etcSwitchChangeFlag@@3FA, 0 ; etcSwitchChangeFlag
  00022	74 6b		 je	 SHORT $LN3@fieldProc
  00024	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  0002c	75 61		 jne	 SHORT $LN3@fieldProc
  0002e	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  00036	75 57		 jne	 SHORT $LN3@fieldProc
  00038	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  00040	75 4d		 jne	 SHORT $LN3@fieldProc

; 2126 : 		if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime()) {

  00042	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00047	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  0004d	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00053	3b c8		 cmp	 ecx, eax
  00055	73 38		 jae	 SHORT $LN3@fieldProc

; 2127 : 			if (bNewServer)

  00057	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0005e	0f b7 05 a8 00
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A+168
  00065	50		 push	 eax
  00066	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0006c	74 07		 je	 SHORT $LN4@fieldProc

; 2128 : 				lssproto_FS_send(sockfd, pc.etcFlag);

  0006e	e8 00 00 00 00	 call	 ?lssproto_FS_send@@YAXHH@Z ; lssproto_FS_send
  00073	eb 05		 jmp	 SHORT $LN256@fieldProc
$LN4@fieldProc:

; 2129 : 			else
; 2130 : 				old_lssproto_FS_send(sockfd, pc.etcFlag);

  00075	e8 00 00 00 00	 call	 ?old_lssproto_FS_send@@YAXHH@Z ; old_lssproto_FS_send
$LN256@fieldProc:

; 2131 : 			fieldBtnPushTime = TimeGetTime();

  0007a	83 c4 08	 add	 esp, 8
  0007d	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00082	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 2132 : 			etcSwitchChangeFlag = 0;

  00087	33 c0		 xor	 eax, eax
  00089	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchChangeFlag@@3FA, ax ; etcSwitchChangeFlag
$LN3@fieldProc:

; 2133 : 		}
; 2134 : 	}
; 2135 : 	if (CheckMenuFlag() || windowTypeWN > -1 || actBtn == 1 || menuBtn == 1 || channelWNFlag == 1)

  0008f	53		 push	 ebx
  00090	56		 push	 esi
  00091	57		 push	 edi
  00092	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00097	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  0009d	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?actBtn@@3FA ; actBtn
  000a4	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?menuBtn@@3FA ; menuBtn
  000ab	85 c0		 test	 eax, eax
  000ad	75 22		 jne	 SHORT $LN8@fieldProc
  000af	83 fe ff	 cmp	 esi, -1
  000b2	7f 1d		 jg	 SHORT $LN8@fieldProc
  000b4	66 83 f9 01	 cmp	 cx, 1
  000b8	74 17		 je	 SHORT $LN8@fieldProc
  000ba	66 83 fa 01	 cmp	 dx, 1
  000be	74 11		 je	 SHORT $LN8@fieldProc
  000c0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?channelWNFlag@@3FA, 1 ; channelWNFlag
  000c8	74 07		 je	 SHORT $LN8@fieldProc

; 2137 : 	else
; 2138 : 		drawFieldButtonFlag = 1;

  000ca	b8 01 00 00 00	 mov	 eax, 1
  000cf	eb 02		 jmp	 SHORT $LN7@fieldProc
$LN8@fieldProc:

; 2136 : 		drawFieldButtonFlag = 0;

  000d1	33 c0		 xor	 eax, eax
$LN7@fieldProc:

; 2139 : 
; 2140 : 	nowFieldMenuOpenFlag = 0;

  000d3	66 a3 00 00 00
	00		 mov	 WORD PTR ?drawFieldButtonFlag@@3FA, ax ; drawFieldButtonFlag
  000d9	33 c0		 xor	 eax, eax
  000db	66 a3 00 00 00
	00		 mov	 WORD PTR ?nowFieldMenuOpenFlag@@3FA, ax ; nowFieldMenuOpenFlag

; 2141 : 	if (windowTypeWN != -1)

  000e1	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  000e4	83 fe ff	 cmp	 esi, -1
  000e7	74 07		 je	 SHORT $LN9@fieldProc

; 2142 : 		nowFieldMenuOpenFlag = 1;

  000e9	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?nowFieldMenuOpenFlag@@3FA, bx ; nowFieldMenuOpenFlag
$LN9@fieldProc:

; 2143 : 	if (actBtn == 1)

  000f0	66 83 f9 01	 cmp	 cx, 1
  000f4	75 07		 jne	 SHORT $LN10@fieldProc

; 2144 : 		nowFieldMenuOpenFlag = 1;

  000f6	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?nowFieldMenuOpenFlag@@3FA, bx ; nowFieldMenuOpenFlag
$LN10@fieldProc:

; 2145 : 	if (menuBtn == 1)

  000fd	66 83 fa 01	 cmp	 dx, 1
  00101	75 07		 jne	 SHORT $LN11@fieldProc

; 2146 : 		nowFieldMenuOpenFlag = 1;

  00103	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?nowFieldMenuOpenFlag@@3FA, bx ; nowFieldMenuOpenFlag
$LN11@fieldProc:

; 2147 : 	amPmAnimeTime = (SaTime.hour + 832) % 1024;

  0010a	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?SaTime@@3UtagLSTIME@@A+8
  00110	81 c1 40 03 00
	00		 add	 ecx, 832		; 00000340H
  00116	81 e1 ff 03 00
	80		 and	 ecx, -2147482625	; 800003ffH
  0011c	79 08		 jns	 SHORT $LN253@fieldProc
  0011e	49		 dec	 ecx
  0011f	81 c9 00 fc ff
	ff		 or	 ecx, -1024		; fffffc00H
  00125	41		 inc	 ecx
$LN253@fieldProc:
  00126	8b c1		 mov	 eax, ecx
  00128	89 0d 00 00 00
	00		 mov	 DWORD PTR ?amPmAnimeTime@@3HA, ecx ; amPmAnimeTime
  0012e	99		 cdq
  0012f	81 e2 ff 00 00
	00		 and	 edx, 255		; 000000ffH
  00135	03 c2		 add	 eax, edx
  00137	c1 f8 08	 sar	 eax, 8

; 2148 : 	amPmAnimeGraNoIndex0 = amPmAnimeTime / 256;

  0013a	a3 00 00 00 00	 mov	 DWORD PTR ?amPmAnimeGraNoIndex0@@3HA, eax ; amPmAnimeGraNoIndex0
  0013f	40		 inc	 eax

; 2149 : 	amPmAnimeGraNoIndex1 = (amPmAnimeGraNoIndex0 + 1) % 4;

  00140	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00145	79 05		 jns	 SHORT $LN254@fieldProc
  00147	48		 dec	 eax
  00148	83 c8 fc	 or	 eax, -4			; fffffffcH
  0014b	40		 inc	 eax
$LN254@fieldProc:
  0014c	a3 00 00 00 00	 mov	 DWORD PTR ?amPmAnimeGraNoIndex1@@3HA, eax ; amPmAnimeGraNoIndex1
  00151	81 e1 ff 00 00
	80		 and	 ecx, -2147483393	; 800000ffH
  00157	79 08		 jns	 SHORT $LN255@fieldProc
  00159	49		 dec	 ecx
  0015a	81 c9 00 ff ff
	ff		 or	 ecx, -256		; ffffff00H
  00160	41		 inc	 ecx
$LN255@fieldProc:

; 2150 : 	amPmAnimeX = (amPmAnimeTime % 256) / 4;
; 2151 : 
; 2152 : 	if (nowVx != 0 || nowVy != 0)

  00161	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVx@@3MA
  00169	8b c1		 mov	 eax, ecx
  0016b	99		 cdq
  0016c	0f 57 c9	 xorps	 xmm1, xmm1
  0016f	83 e2 03	 and	 edx, 3
  00172	03 c2		 add	 eax, edx
  00174	c1 f8 02	 sar	 eax, 2
  00177	0f 2e c1	 ucomiss xmm0, xmm1
  0017a	a3 00 00 00 00	 mov	 DWORD PTR ?amPmAnimeX@@3HA, eax ; amPmAnimeX
  0017f	9f		 lahf
  00180	f6 c4 44	 test	 ah, 68			; 00000044H
  00183	7a 11		 jp	 SHORT $LN13@fieldProc
  00185	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVy@@3MA
  0018d	0f 2e c1	 ucomiss xmm0, xmm1
  00190	9f		 lahf
  00191	f6 c4 44	 test	 ah, 68			; 00000044H
  00194	7b 04		 jnp	 SHORT $LN251@fieldProc
$LN13@fieldProc:

; 2153 : 		walkFlag = TRUE;

  00196	8b f3		 mov	 esi, ebx
  00198	eb 02		 jmp	 SHORT $LN12@fieldProc
$LN251@fieldProc:

; 2150 : 	amPmAnimeX = (amPmAnimeTime % 256) / 4;
; 2151 : 
; 2152 : 	if (nowVx != 0 || nowVy != 0)

  0019a	33 f6		 xor	 esi, esi
$LN12@fieldProc:

; 2154 : 
; 2155 : 	if (etcSendFlag)

  0019c	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?etcSendFlag@@3FA, 0 ; etcSendFlag
  001a4	74 2f		 je	 SHORT $LN16@fieldProc

; 2156 : 	{
; 2157 : 		if (prSendFlag == 0 && jbSendFlag == 0 && duelSendFlag == 0)

  001a6	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?prSendFlag@@3FA, 0 ; prSendFlag
  001ae	75 1e		 jne	 SHORT $LN15@fieldProc
  001b0	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?jbSendFlag@@3FA, 0 ; jbSendFlag
  001b8	75 14		 jne	 SHORT $LN15@fieldProc
  001ba	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?duelSendFlag@@3FA, 0 ; duelSendFlag
  001c2	75 0a		 jne	 SHORT $LN15@fieldProc

; 2158 : 			etcSendFlag = 0;

  001c4	33 c0		 xor	 eax, eax
  001c6	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSendFlag@@3FA, ax ; etcSendFlag
  001cc	eb 07		 jmp	 SHORT $LN16@fieldProc
$LN15@fieldProc:

; 2159 : 		else
; 2160 : 			etcSendFlag = 1;

  001ce	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?etcSendFlag@@3FA, bx ; etcSendFlag
$LN16@fieldProc:

; 2161 : 	}
; 2162 : #if 1
; 2163 : 	selId = selGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));

  001d5	6a 0f		 push	 15			; 0000000fH
  001d7	68 00 00 00 00	 push	 OFFSET ?fieldBtnHitId@@3PAHA ; fieldBtnHitId
  001dc	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId

; 2164 : 	pushId = pushGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));

  001e1	6a 0f		 push	 15			; 0000000fH
  001e3	68 00 00 00 00	 push	 OFFSET ?fieldBtnHitId@@3PAHA ; fieldBtnHitId
  001e8	8b f8		 mov	 edi, eax
  001ea	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 2165 : 	focusId = focusGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));

  001ef	6a 0f		 push	 15			; 0000000fH
  001f1	68 00 00 00 00	 push	 OFFSET ?fieldBtnHitId@@3PAHA ; fieldBtnHitId
  001f6	89 45 b8	 mov	 DWORD PTR _pushId$1$[ebp], eax
  001f9	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  001fe	83 c4 18	 add	 esp, 24			; 00000018H
  00201	8b d8		 mov	 ebx, eax

; 2166 : 	if (etcSendFlag != 0 || (walkFlag != FALSE && selId != FIELD_FUNC_PARTY))

  00203	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?etcSendFlag@@3FA, 0 ; etcSendFlag
  0020b	75 09		 jne	 SHORT $LN18@fieldProc
  0020d	85 f6		 test	 esi, esi
  0020f	74 08		 je	 SHORT $LN17@fieldProc
  00211	83 ff 02	 cmp	 edi, 2
  00214	74 03		 je	 SHORT $LN17@fieldProc
$LN18@fieldProc:

; 2167 : 		selId = -1;

  00216	83 cf ff	 or	 edi, -1
$LN17@fieldProc:

; 2168 : #else
; 2169 : 	if (etcSendFlag == 0 && walkFlag == FALSE)
; 2170 : 	{
; 2171 : 		selId = selGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));
; 2172 : 		pushId = pushGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));
; 2173 : 		focusId = focusGraId(fieldBtnHitId, sizeof(fieldBtnHitId) / sizeof(int));
; 2174 : 	}
; 2175 : 	else
; 2176 : 		selId = -1;
; 2177 : #endif
; 2178 : 	if (/* nowFloor == 32021
; 2179 : 		||	*/nowFloor == 31706 || nowFloor == 10204 || (10601 <= nowFloor && nowFloor <= 10605)
; 2180 : 		|| nowFloor == 10919 || nowFloor == 10920 || nowFloor == 20711 || nowFloor == 20712
; 2181 : 		|| nowFloor == 1008 || nowFloor == 1021 || nowFloor == 3008 || nowFloor == 3021
; 2182 : #ifdef _LOCKPARTYFLOOR				// (å¯å¼æ¾) Syu ADD å¢å ä¸å¯ç»éçå°å¾ç¼å·
; 2183 : 		|| (nowFloor <= 8213 && nowFloor >= 8200)
; 2184 : #endif
; 2185 : 		|| (nowFloor >= 30017 && nowFloor <= 30021) || (nowFloor == 7025)	// æ£®ææå® æ´»å¨

  00219	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?nowFloor@@3HA ; nowFloor
  0021f	81 fe da 7b 00
	00		 cmp	 esi, 31706		; 00007bdaH
  00225	0f 84 87 00 00
	00		 je	 $LN21@fieldProc
  0022b	81 fe dc 27 00
	00		 cmp	 esi, 10204		; 000027dcH
  00231	74 7f		 je	 SHORT $LN21@fieldProc
  00233	81 fe 69 29 00
	00		 cmp	 esi, 10601		; 00002969H
  00239	7c 08		 jl	 SHORT $LN22@fieldProc
  0023b	81 fe 6d 29 00
	00		 cmp	 esi, 10605		; 0000296dH
  00241	7e 6f		 jle	 SHORT $LN21@fieldProc
$LN22@fieldProc:
  00243	81 fe a7 2a 00
	00		 cmp	 esi, 10919		; 00002aa7H
  00249	74 67		 je	 SHORT $LN21@fieldProc
  0024b	81 fe a8 2a 00
	00		 cmp	 esi, 10920		; 00002aa8H
  00251	74 5f		 je	 SHORT $LN21@fieldProc
  00253	81 fe e7 50 00
	00		 cmp	 esi, 20711		; 000050e7H
  00259	74 57		 je	 SHORT $LN21@fieldProc
  0025b	81 fe e8 50 00
	00		 cmp	 esi, 20712		; 000050e8H
  00261	74 4f		 je	 SHORT $LN21@fieldProc
  00263	81 fe f0 03 00
	00		 cmp	 esi, 1008		; 000003f0H
  00269	74 47		 je	 SHORT $LN21@fieldProc
  0026b	81 fe fd 03 00
	00		 cmp	 esi, 1021		; 000003fdH
  00271	74 3f		 je	 SHORT $LN21@fieldProc
  00273	81 fe c0 0b 00
	00		 cmp	 esi, 3008		; 00000bc0H
  00279	74 37		 je	 SHORT $LN21@fieldProc
  0027b	81 fe cd 0b 00
	00		 cmp	 esi, 3021		; 00000bcdH
  00281	74 2f		 je	 SHORT $LN21@fieldProc
  00283	81 fe 15 20 00
	00		 cmp	 esi, 8213		; 00002015H
  00289	7f 08		 jg	 SHORT $LN23@fieldProc
  0028b	81 fe 08 20 00
	00		 cmp	 esi, 8200		; 00002008H
  00291	7d 1f		 jge	 SHORT $LN21@fieldProc
$LN23@fieldProc:
  00293	81 fe 41 75 00
	00		 cmp	 esi, 30017		; 00007541H
  00299	7c 08		 jl	 SHORT $LN24@fieldProc
  0029b	81 fe 45 75 00
	00		 cmp	 esi, 30021		; 00007545H
  002a1	7e 0f		 jle	 SHORT $LN21@fieldProc
$LN24@fieldProc:
  002a3	81 fe 71 1b 00
	00		 cmp	 esi, 7025		; 00001b71H
  002a9	74 07		 je	 SHORT $LN21@fieldProc

; 2188 : 	else
; 2189 : 		partyBtnEnableFlag = 1;

  002ab	b8 01 00 00 00	 mov	 eax, 1
  002b0	eb 02		 jmp	 SHORT $LN20@fieldProc
$LN21@fieldProc:

; 2186 : 		)
; 2187 : 		partyBtnEnableFlag = 0;

  002b2	33 c0		 xor	 eax, eax
$LN20@fieldProc:

; 2190 : 
; 2191 : 	if (nowFloor < 10000 && (nowFloor / 1000 > 0) && (nowFloor % 1000 == 7) || nowFloor == 130)

  002b4	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyBtnEnableFlag@@3FA, ax ; partyBtnEnableFlag
  002ba	b8 02 00 00 00	 mov	 eax, 2
  002bf	81 fe 10 27 00
	00		 cmp	 esi, 10000		; 00002710H
  002c5	7d 29		 jge	 SHORT $LN28@fieldProc
  002c7	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  002cc	f7 ee		 imul	 esi
  002ce	c1 fa 06	 sar	 edx, 6
  002d1	8b c2		 mov	 eax, edx
  002d3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002d6	03 c2		 add	 eax, edx
  002d8	85 c0		 test	 eax, eax
  002da	7e 0f		 jle	 SHORT $LN252@fieldProc
  002dc	69 c0 e8 03 00
	00		 imul	 eax, eax, 1000
  002e2	8b ce		 mov	 ecx, esi
  002e4	2b c8		 sub	 ecx, eax
  002e6	83 f9 07	 cmp	 ecx, 7
  002e9	74 0d		 je	 SHORT $LN27@fieldProc
$LN252@fieldProc:
  002eb	b8 02 00 00 00	 mov	 eax, 2
$LN28@fieldProc:
  002f0	81 fe 82 00 00
	00		 cmp	 esi, 130		; 00000082H
  002f6	75 16		 jne	 SHORT $LN25@fieldProc
$LN27@fieldProc:

; 2192 : 	{
; 2193 : 		joinBattleHelpMsgFlag = 0;

  002f8	33 c0		 xor	 eax, eax

; 2194 : 		joinBattleBtnEnableFlag = 1;

  002fa	be 01 00 00 00	 mov	 esi, 1
  002ff	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleHelpMsgFlag@@3FA, ax ; joinBattleHelpMsgFlag
  00305	66 89 35 00 00
	00 00		 mov	 WORD PTR ?joinBattleBtnEnableFlag@@3FA, si ; joinBattleBtnEnableFlag

; 2195 : 	}

  0030c	eb 6e		 jmp	 SHORT $LN30@fieldProc
$LN25@fieldProc:

; 2196 : 	else
; 2197 : 		if (nowFloor == 1008 || nowFloor == 1021 || nowFloor == 3008 || nowFloor == 3021
; 2198 : 			|| nowFloor == 10919 || nowFloor == 10920 || nowFloor == 20711 || nowFloor == 20712
; 2199 : 			|| nowFloor == 10204)

  0030e	81 fe f0 03 00
	00		 cmp	 esi, 1008		; 000003f0H
  00314	74 55		 je	 SHORT $LN31@fieldProc
  00316	81 fe fd 03 00
	00		 cmp	 esi, 1021		; 000003fdH
  0031c	74 4d		 je	 SHORT $LN31@fieldProc
  0031e	81 fe c0 0b 00
	00		 cmp	 esi, 3008		; 00000bc0H
  00324	74 45		 je	 SHORT $LN31@fieldProc
  00326	81 fe cd 0b 00
	00		 cmp	 esi, 3021		; 00000bcdH
  0032c	74 3d		 je	 SHORT $LN31@fieldProc
  0032e	81 fe a7 2a 00
	00		 cmp	 esi, 10919		; 00002aa7H
  00334	74 35		 je	 SHORT $LN31@fieldProc
  00336	81 fe a8 2a 00
	00		 cmp	 esi, 10920		; 00002aa8H
  0033c	74 2d		 je	 SHORT $LN31@fieldProc
  0033e	81 fe e7 50 00
	00		 cmp	 esi, 20711		; 000050e7H
  00344	74 25		 je	 SHORT $LN31@fieldProc
  00346	81 fe e8 50 00
	00		 cmp	 esi, 20712		; 000050e8H
  0034c	74 1d		 je	 SHORT $LN31@fieldProc
  0034e	81 fe dc 27 00
	00		 cmp	 esi, 10204		; 000027dcH
  00354	74 15		 je	 SHORT $LN31@fieldProc

; 2203 : 		}
; 2204 : 		else
; 2205 : 		{
; 2206 : 			joinBattleHelpMsgFlag = 1;	// î¢îîî¡

  00356	be 01 00 00 00	 mov	 esi, 1
  0035b	66 89 35 00 00
	00 00		 mov	 WORD PTR ?joinBattleHelpMsgFlag@@3FA, si ; joinBattleHelpMsgFlag

; 2207 : 			joinBattleBtnEnableFlag = 1;

  00362	66 89 35 00 00
	00 00		 mov	 WORD PTR ?joinBattleBtnEnableFlag@@3FA, si ; joinBattleBtnEnableFlag
  00369	eb 11		 jmp	 SHORT $LN30@fieldProc
$LN31@fieldProc:

; 2200 : 		{
; 2201 : 			joinBattleHelpMsgFlag = 2;

  0036b	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleHelpMsgFlag@@3FA, ax ; joinBattleHelpMsgFlag

; 2202 : 			joinBattleBtnEnableFlag = 0;

  00371	33 c0		 xor	 eax, eax
  00373	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtnEnableFlag@@3FA, ax ; joinBattleBtnEnableFlag
  00379	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LN30@fieldProc:

; 2208 : 		}
; 2209 : 	if (selId == FIELD_FUNC_MENU || (joy_trg[1] & JOY_CTRL_Q)

  0037c	85 ff		 test	 edi, edi
  0037e	74 2a		 je	 SHORT $LN33@fieldProc
  00380	f7 05 04 00 00
	00 00 00 00 20	 test	 DWORD PTR ?joy_trg@@3PAKA+4, 536870912 ; 20000000H
  0038a	74 6a		 je	 SHORT $LN35@fieldProc
  0038c	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sStreetVendorBtn@@3FA, 0 ; sStreetVendorBtn
  00394	75 60		 jne	 SHORT $LN35@fieldProc
  00396	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 0 ; sStreetVendorBuyBtn
  0039e	75 56		 jne	 SHORT $LN35@fieldProc
  003a0	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?helpBtn@@3FA, 0 ; helpBtn
  003a8	75 4c		 jne	 SHORT $LN35@fieldProc
$LN33@fieldProc:

; 2210 : #ifdef __PHONEMESSAGE
; 2211 : 		&& msgBtn == 0
; 2212 : #endif
; 2213 : #ifdef _STREET_VENDOR
; 2214 : 		&& sStreetVendorBtn == 0
; 2215 : 		&& sStreetVendorBuyBtn == 0
; 2216 : #endif
; 2217 : 
; 2218 : 		&& helpBtn == 0
; 2219 : 		)
; 2220 : 	{
; 2221 : 		if (menuBtn == 0) {

  003aa	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?menuBtn@@3FA, 0 ; menuBtn
  003b2	75 3d		 jne	 SHORT $LN34@fieldProc

; 2222 : 			closeCharActionAnimeChange();

  003b4	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange

; 2223 : 			closeJoinChannelWN();

  003b9	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2224 : 			if (CheckMenuFlag())

  003be	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  003c3	85 c0		 test	 eax, eax
  003c5	74 05		 je	 SHORT $LN36@fieldProc

; 2225 : 				InitMenu2();

  003c7	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN36@fieldProc:

; 2226 : 
; 2227 : 			initEtcSwitch();

  003cc	e8 00 00 00 00	 call	 ?initEtcSwitch@@YAXXZ	; initEtcSwitch

; 2228 : 			menuBtn = 1;
; 2229 : 			play_se(202, 320, 240);

  003d1	68 f0 00 00 00	 push	 240			; 000000f0H
  003d6	68 40 01 00 00	 push	 320			; 00000140H
  003db	68 ca 00 00 00	 push	 202			; 000000caH
  003e0	66 89 35 00 00
	00 00		 mov	 WORD PTR ?menuBtn@@3FA, si ; menuBtn
  003e7	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003ec	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2230 : 		}

  003ef	eb 05		 jmp	 SHORT $LN35@fieldProc
$LN34@fieldProc:

; 2231 : 		else
; 2232 : 			closeEtcSwitch();

  003f1	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch
$LN35@fieldProc:

; 2233 : 	}
; 2234 : 	if (menuBtn == 1 && etcSwitch())

  003f6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  003fe	75 11		 jne	 SHORT $LN237@fieldProc
  00400	e8 00 00 00 00	 call	 ?etcSwitch@@YAHXZ	; etcSwitch
  00405	85 c0		 test	 eax, eax
  00407	74 08		 je	 SHORT $LN237@fieldProc

; 2235 : 		menuBtn = 0;

  00409	33 c0		 xor	 eax, eax
  0040b	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtn@@3FA, ax ; menuBtn
$LN237@fieldProc:

; 2236 : 	if (focusId == FIELD_FUNC_MENU)
; 2237 : 		menuBtnFocus = 1;
; 2238 : 	else
; 2239 : 		menuBtnFocus = 0;
; 2240 : 	if (pushId == FIELD_FUNC_WARP_) {

  00411	8b 75 b8	 mov	 esi, DWORD PTR _pushId$1$[ebp]
  00414	33 c0		 xor	 eax, eax
  00416	85 db		 test	 ebx, ebx
  00418	0f 94 c0	 sete	 al
  0041b	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtnFocus@@3FA, ax ; menuBtnFocus
  00421	83 fe 0d	 cmp	 esi, 13			; 0000000dH
  00424	0f 85 a8 00 00
	00		 jne	 $LN41@fieldProc

; 2241 : 		if (selId == FIELD_FUNC_WARP_) {

  0042a	3b fe		 cmp	 edi, esi
  0042c	75 28		 jne	 SHORT $LN45@fieldProc

; 2242 : 			{
; 2243 : 				play_se(202, 320, 240);

  0042e	68 f0 00 00 00	 push	 240			; 000000f0H
  00433	68 40 01 00 00	 push	 320			; 00000140H
  00438	68 ca 00 00 00	 push	 202			; 000000caH
  0043d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2244 : 				lssproto_SaMenu_send(sockfd, 3, 7, 1);

  00442	6a 01		 push	 1
  00444	6a 07		 push	 7
$LN257@fieldProc:

; 2265 : 				}
; 2266 : 			}
; 2267 : 		}
; 2268 : 	}
; 2269 : 	if (sStreetVendorBtn == 1 || sStreetVendorBtn == 3)

  00446	6a 03		 push	 3
  00448	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0044e	e8 00 00 00 00	 call	 ?lssproto_SaMenu_send@@YAXHHHH@Z ; lssproto_SaMenu_send
  00453	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN45@fieldProc:
  00456	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?sStreetVendorBtn@@3FA ; sStreetVendorBtn
  0045c	66 83 f8 01	 cmp	 ax, 1
  00460	0f 84 30 01 00
	00		 je	 $LN48@fieldProc
  00466	66 83 f8 03	 cmp	 ax, 3
  0046a	0f 84 26 01 00
	00		 je	 $LN48@fieldProc

; 2287 : 	}
; 2288 : 	else
; 2289 : 		if (sStreetVendorBtn == 2)

  00470	66 83 f8 02	 cmp	 ax, 2
  00474	0f 85 c2 00 00
	00		 jne	 $LN52@fieldProc

; 2290 : 		{
; 2291 : 			StreetVendorWndfunc(true, NULL);

  0047a	6a 00		 push	 0
  0047c	6a 01		 push	 1
  0047e	e8 00 00 00 00	 call	 ?StreetVendorWndfunc@@YAX_NPAD@Z ; StreetVendorWndfunc
  00483	83 c4 08	 add	 esp, 8

; 2292 : 			if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL) || CheckMenuFlag())

  00486	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00490	74 09		 je	 SHORT $LN56@fieldProc
  00492	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00497	85 c0		 test	 eax, eax
  00499	74 0d		 je	 SHORT $LN55@fieldProc
$LN56@fieldProc:
  0049b	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  004a0	85 c0		 test	 eax, eax
  004a2	0f 84 62 01 00
	00		 je	 $LN51@fieldProc
$LN55@fieldProc:

; 2293 : 			{
; 2294 : 				play_se(203, 320, 240);

  004a8	68 f0 00 00 00	 push	 240			; 000000f0H
  004ad	68 40 01 00 00	 push	 320			; 00000140H
  004b2	68 cb 00 00 00	 push	 203			; 000000cbH
  004b7	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004bc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2295 : 				sStreetVendorBtn = 0;

  004bf	33 c0		 xor	 eax, eax
  004c1	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 2296 : 				actBtn = 0;

  004c7	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2297 : 			}
; 2298 : 		}

  004cd	e9 38 01 00 00	 jmp	 $LN51@fieldProc
$LN41@fieldProc:

; 2245 : 			}
; 2246 : 		}
; 2247 : 	}
; 2248 : 	if (pushId == FIELD_FUNC_VIPSHOP) {

  004d2	83 fe 0e	 cmp	 esi, 14			; 0000000eH
  004d5	75 25		 jne	 SHORT $LN43@fieldProc

; 2249 : 		if (selId == FIELD_FUNC_VIPSHOP) {

  004d7	3b fe		 cmp	 edi, esi
  004d9	0f 85 77 ff ff
	ff		 jne	 $LN45@fieldProc

; 2250 : 			{
; 2251 : 				play_se(202, 320, 240);

  004df	68 f0 00 00 00	 push	 240			; 000000f0H
  004e4	68 40 01 00 00	 push	 320			; 00000140H
  004e9	68 ca 00 00 00	 push	 202			; 000000caH
  004ee	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2252 : 				lssproto_SaMenu_send(sockfd, 3, 9, 1);

  004f3	6a 01		 push	 1
  004f5	6a 09		 push	 9

; 2253 : 			}
; 2254 : 		}
; 2255 : 	}
; 2256 : #ifdef _STREET_VENDOR
; 2257 : 	if (pushId == FIELD_FUNC_STREET_VENDOR) {

  004f7	e9 4a ff ff ff	 jmp	 $LN257@fieldProc
$LN43@fieldProc:
  004fc	83 fe 09	 cmp	 esi, 9
  004ff	0f 85 51 ff ff
	ff		 jne	 $LN45@fieldProc

; 2258 : 		if (selId == FIELD_FUNC_STREET_VENDOR) {

  00505	3b fe		 cmp	 edi, esi
  00507	0f 85 49 ff ff
	ff		 jne	 $LN45@fieldProc

; 2259 : 			{
; 2260 : 
; 2261 : 				{
; 2262 : 					play_se(202, 320, 240);

  0050d	68 f0 00 00 00	 push	 240			; 000000f0H
  00512	68 40 01 00 00	 push	 320			; 00000140H
  00517	68 ca 00 00 00	 push	 202			; 000000caH
  0051c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2263 : 					lssproto_STREET_VENDOR_send(sockfd, "O|");

  00521	68 00 00 00 00	 push	 OFFSET ??_C@_02PIPCNKOK@O?$HM@
  00526	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0052c	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00531	83 c4 14	 add	 esp, 20			; 00000014H

; 2264 : 					sStreetVendorBtn = 0;

  00534	33 c0		 xor	 eax, eax
  00536	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn
$LN52@fieldProc:

; 2299 : 		else
; 2300 : 		{
; 2301 : 			if (pActStreetVendorWnd)

  0053c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A ; pActStreetVendorWnd
  00541	85 c0		 test	 eax, eax
  00543	74 2f		 je	 SHORT $LN238@fieldProc

; 2302 : 			{
; 2303 : 				DeathAction(pActStreetVendorWnd);

  00545	50		 push	 eax
  00546	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 2304 : 				pActStreetVendorWnd = NULL;
; 2305 : 				if (pShowPet != NULL)

  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  00550	83 c4 04	 add	 esp, 4
  00553	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActStreetVendorWnd@@3PAUaction@@A, 0 ; pActStreetVendorWnd
  0055d	85 c0		 test	 eax, eax
  0055f	74 13		 je	 SHORT $LN238@fieldProc

; 2306 : 				{
; 2307 : 					DeathAction(pShowPet);

  00561	50		 push	 eax
  00562	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00567	83 c4 04	 add	 esp, 4

; 2308 : 					pShowPet = NULL;

  0056a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN238@fieldProc:

; 2309 : 				}
; 2310 : 			}
; 2311 : 			if (pActSellPriceWnd)

  00574	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A
  00579	85 c0		 test	 eax, eax
  0057b	0f 84 89 00 00
	00		 je	 $LN51@fieldProc

; 2312 : 			{
; 2313 : 				DeathAction(pActSellPriceWnd);

  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00587	83 c4 04	 add	 esp, 4

; 2314 : 				pActSellPriceWnd = NULL;

  0058a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActSellPriceWnd@@3PAUaction@@A, 0
  00594	eb 74		 jmp	 SHORT $LN51@fieldProc
$LN48@fieldProc:

; 2270 : 	{
; 2271 : 		actBtn = 1;

  00596	b8 01 00 00 00	 mov	 eax, 1
  0059b	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2272 : 		closeEtcSwitch();

  005a1	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2273 : 		closeJoinChannelWN();

  005a6	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2274 : 		if (CheckMenuFlag())

  005ab	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  005b0	85 c0		 test	 eax, eax
  005b2	74 05		 je	 SHORT $LN49@fieldProc

; 2275 : 			InitMenu2();

  005b4	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN49@fieldProc:

; 2276 : 		sStreetVendorBtn = 2;

  005b9	b8 02 00 00 00	 mov	 eax, 2
  005be	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 2277 : 		iOldGX = nowGx;

  005c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  005c9	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGX@@3HA, eax ; iOldGX

; 2278 : 		iOldGY = nowGy;

  005ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  005d3	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGY@@3HA, eax ; iOldGY

; 2279 : 		// äº¤æåç»éåPKéé¡¹å³é­
; 2280 : 		pc.etcFlag &= ~PC_ETCFLAG_TRADE;
; 2281 : 		pc.etcFlag &= ~PC_ETCFLAG_PARTY;
; 2282 : 		pc.etcFlag &= ~PC_ETCFLAG_DUEL;

  005d8	a1 a8 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+168
  005dd	25 da ff 00 00	 and	 eax, 65498		; 0000ffdaH

; 2283 : 		if (bNewServer)

  005e2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  005e9	0f b7 c8	 movzx	 ecx, ax
  005ec	51		 push	 ecx
  005ed	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  005f3	66 a3 a8 00 00
	00		 mov	 WORD PTR ?pc@@3UPC@@A+168, ax
  005f9	74 07		 je	 SHORT $LN50@fieldProc

; 2284 : 			lssproto_FS_send(sockfd, pc.etcFlag);

  005fb	e8 00 00 00 00	 call	 ?lssproto_FS_send@@YAXHH@Z ; lssproto_FS_send
  00600	eb 05		 jmp	 SHORT $LN258@fieldProc
$LN50@fieldProc:

; 2285 : 		else
; 2286 : 			old_lssproto_FS_send(sockfd, pc.etcFlag);

  00602	e8 00 00 00 00	 call	 ?old_lssproto_FS_send@@YAXHH@Z ; old_lssproto_FS_send
$LN258@fieldProc:

; 2315 : 			}
; 2316 : 		}
; 2317 : 	if (sStreetVendorBuyBtn == 1)

  00607	83 c4 08	 add	 esp, 8
$LN51@fieldProc:
  0060a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 1 ; sStreetVendorBuyBtn
  00612	75 47		 jne	 SHORT $LN60@fieldProc

; 2318 : 	{
; 2319 : 		actBtn = 1;

  00614	b8 01 00 00 00	 mov	 eax, 1
  00619	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2320 : 		closeEtcSwitch();

  0061f	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2321 : 		closeJoinChannelWN();

  00624	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2322 : 		if (CheckMenuFlag())

  00629	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0062e	85 c0		 test	 eax, eax
  00630	74 05		 je	 SHORT $LN62@fieldProc

; 2323 : 			InitMenu2();

  00632	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN62@fieldProc:

; 2324 : 		sStreetVendorBuyBtn = 2;

  00637	b8 02 00 00 00	 mov	 eax, 2
  0063c	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 2325 : 		iOldGX = nowGx;

  00642	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00647	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGX@@3HA, eax ; iOldGX

; 2326 : 		iOldGY = nowGy;

  0064c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00651	a3 00 00 00 00	 mov	 DWORD PTR ?iOldGY@@3HA, eax ; iOldGY

; 2327 : 	}

  00656	e9 ac 00 00 00	 jmp	 $LN241@fieldProc
$LN60@fieldProc:

; 2328 : 	else
; 2329 : 		if (sStreetVendorBuyBtn == 2)

  0065b	66 83 3d 00 00
	00 00 02	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 2 ; sStreetVendorBuyBtn
  00663	75 4f		 jne	 SHORT $LN63@fieldProc

; 2330 : 		{
; 2331 : 			StreetVendorBuyWndfunc(NULL);

  00665	6a 00		 push	 0
  00667	e8 00 00 00 00	 call	 ?StreetVendorBuyWndfunc@@YAXPAD@Z ; StreetVendorBuyWndfunc
  0066c	83 c4 04	 add	 esp, 4

; 2332 : 			if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL) || CheckMenuFlag())

  0066f	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00679	74 09		 je	 SHORT $LN67@fieldProc
  0067b	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00680	85 c0		 test	 eax, eax
  00682	74 09		 je	 SHORT $LN66@fieldProc
$LN67@fieldProc:
  00684	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00689	85 c0		 test	 eax, eax
  0068b	74 7a		 je	 SHORT $LN241@fieldProc
$LN66@fieldProc:

; 2333 : 			{
; 2334 : 				play_se(203, 320, 240);

  0068d	68 f0 00 00 00	 push	 240			; 000000f0H
  00692	68 40 01 00 00	 push	 320			; 00000140H
  00697	68 cb 00 00 00	 push	 203			; 000000cbH
  0069c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  006a1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2335 : 				sStreetVendorBuyBtn = 0;

  006a4	33 c0		 xor	 eax, eax
  006a6	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 2336 : 				actBtn = 0;

  006ac	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2337 : 			}
; 2338 : 		}

  006b2	eb 53		 jmp	 SHORT $LN241@fieldProc
$LN63@fieldProc:

; 2339 : 		else
; 2340 : 		{
; 2341 : 			if (pActStreetVendorBuyWnd)

  006b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A ; pActStreetVendorBuyWnd
  006b9	85 c0		 test	 eax, eax
  006bb	74 4a		 je	 SHORT $LN241@fieldProc

; 2342 : 			{
; 2343 : 				DeathAction(pActStreetVendorBuyWnd);

  006bd	50		 push	 eax
  006be	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 2344 : 				pActStreetVendorBuyWnd = NULL;
; 2345 : 				actBtn = 0;

  006c3	33 c0		 xor	 eax, eax
  006c5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActStreetVendorBuyWnd@@3PAUaction@@A, 0 ; pActStreetVendorBuyWnd
  006cf	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn
  006d5	83 c4 04	 add	 esp, 4

; 2346 : 				if (pShowPet != NULL)

  006d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@@3PAUaction@@A ; pShowPet
  006dd	85 c0		 test	 eax, eax
  006df	74 13		 je	 SHORT $LN69@fieldProc

; 2347 : 				{
; 2348 : 					DeathAction(pShowPet);

  006e1	50		 push	 eax
  006e2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006e7	83 c4 04	 add	 esp, 4

; 2349 : 					pShowPet = NULL;

  006ea	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@@3PAUaction@@A, 0 ; pShowPet
$LN69@fieldProc:

; 2350 : 				}
; 2351 : 				lssproto_STREET_VENDOR_send(sockfd, "N|");

  006f4	68 00 00 00 00	 push	 OFFSET ??_C@_02PJDALANN@N?$HM@
  006f9	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  006ff	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00704	83 c4 08	 add	 esp, 8
$LN241@fieldProc:

; 2352 : 			}
; 2353 : 		}
; 2354 : 	// å¨ææææ¯åææçäººè´­ä¹°æ¶èµ°å¨åì·¨ì
; 2355 : 	if ((pc.iOnStreetVendor == 1 || sStreetVendorBuyBtn == 2) && (iOldGX != nowGx || iOldGY != nowGy))

  00707	8b 0d b8 a1 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+41400
  0070d	83 f9 01	 cmp	 ecx, 1
  00710	74 0a		 je	 SHORT $LN71@fieldProc
  00712	66 83 3d 00 00
	00 00 02	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 2 ; sStreetVendorBuyBtn
  0071a	75 72		 jne	 SHORT $LN70@fieldProc
$LN71@fieldProc:
  0071c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iOldGX@@3HA ; iOldGX
  00721	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00727	75 0d		 jne	 SHORT $LN72@fieldProc
  00729	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iOldGY@@3HA ; iOldGY
  0072e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00734	74 58		 je	 SHORT $LN70@fieldProc
$LN72@fieldProc:

; 2356 : 	{
; 2357 : 		if (pc.iOnStreetVendor == 1)

  00736	83 f9 01	 cmp	 ecx, 1
  00739	75 13		 jne	 SHORT $LN73@fieldProc

; 2358 : 			lssproto_STREET_VENDOR_send(sockfd, "E|");

  0073b	68 00 00 00 00	 push	 OFFSET ??_C@_02PFGFFPDM@E?$HM@
  00740	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00746	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  0074b	83 c4 08	 add	 esp, 8
$LN73@fieldProc:

; 2359 : 		if (sStreetVendorBuyBtn == 2)

  0074e	66 83 3d 00 00
	00 00 02	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 2 ; sStreetVendorBuyBtn
  00756	75 13		 jne	 SHORT $LN74@fieldProc

; 2360 : 			lssproto_STREET_VENDOR_send(sockfd, "N|");

  00758	68 00 00 00 00	 push	 OFFSET ??_C@_02PJDALANN@N?$HM@
  0075d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00763	e8 00 00 00 00	 call	 ?lssproto_STREET_VENDOR_send@@YAXHPAD@Z ; lssproto_STREET_VENDOR_send
  00768	83 c4 08	 add	 esp, 8
$LN74@fieldProc:

; 2361 : 		pc.iOnStreetVendor = 0;
; 2362 : 		sStreetVendorBtn = 0;

  0076b	33 c0		 xor	 eax, eax
  0076d	c7 05 b8 a1 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41400, 0
  00777	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 2363 : 		sStreetVendorBuyBtn = 0;

  0077d	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 2364 : 		actBtn = 0;

  00783	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2365 : 		closeCharActionAnimeChange();

  00789	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange
$LN70@fieldProc:

; 2366 : 	}
; 2367 : 
; 2368 : 	if (focusId == FIELD_FUNC_STREET_VENDOR)

  0078e	33 c0		 xor	 eax, eax
  00790	83 fb 09	 cmp	 ebx, 9
  00793	0f 94 c0	 sete	 al

; 2369 : 		sStreetVendorBtnFocus = 1;
; 2370 : 	else
; 2371 : 		sStreetVendorBtnFocus = 0;
; 2372 : #else
; 2373 : #ifndef _BACK_VERSION
; 2374 : #ifdef _TABLEOFSKILL
; 2375 : 	if (pushId == FIELD_FUNC_SKILL)
; 2376 : 	{
; 2377 : 		if (selId == FIELD_FUNC_SKILL)
; 2378 : 		{
; 2379 : 			closeEtcSwitch();
; 2380 : 			closeJoinChannelWN();
; 2381 : 			if (CheckMenuFlag())
; 2382 : 				InitMenu2();
; 2383 : 			play_se(202, 320, 240);
; 2384 : 			actBtn = 1;
; 2385 : 			skillBtn = 1;
; 2386 : 		}
; 2387 : 	}
; 2388 : 	if (skillBtn == 1)
; 2389 : 	{
; 2390 : 		//ä¸»è¦æè½è§çªå½å¼
; 2391 : 		SkillWndfunc();
; 2392 : 		if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL) || CheckMenuFlag())
; 2393 : 		{
; 2394 : 			play_se(203, 320, 240);
; 2395 : 			skillBtn = 0;
; 2396 : 			actBtn = 0;
; 2397 : 		}
; 2398 : 	}
; 2399 : 	else
; 2400 : 	{
; 2401 : 		if (pActSkillWnd)
; 2402 : 		{
; 2403 : 			DeathAction(pActSkillWnd);
; 2404 : 			pActSkillWnd = NULL;
; 2405 : 		}
; 2406 : 	}
; 2407 : 	if (focusId == FIELD_FUNC_SKILL)
; 2408 : 		skillBtnFocus = 1;
; 2409 : 	else
; 2410 : 		skillBtnFocus = 0;
; 2411 : #endif //_TABLEOFSKILL
; 2412 : #endif //_BACK_VERSION
; 2413 : #endif //_STREET_VENDOR
; 2414 : 	if (pushId == FIELD_FUNC_CARD) {

  00796	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtnFocus@@3FA, ax ; sStreetVendorBtnFocus
  0079c	83 fe 01	 cmp	 esi, 1
  0079f	0f 85 cd 00 00
	00		 jne	 $LN77@fieldProc

; 2415 : 		cardBtn = 1;

  007a5	8b c6		 mov	 eax, esi
  007a7	66 a3 00 00 00
	00		 mov	 WORD PTR ?cardBtn@@3FA, ax ; cardBtn

; 2416 : 
; 2417 : 		if (selId == FIELD_FUNC_CARD) {

  007ad	3b fe		 cmp	 edi, esi
  007af	0f 85 c5 00 00
	00		 jne	 $LN78@fieldProc

; 2418 : 			int dx, dy;
; 2419 : 			int flag;
; 2420 : 			getRouteData(pc.dir, &dx, &dy);

  007b5	8d 45 b8	 lea	 eax, DWORD PTR _dy$10[ebp]
  007b8	50		 push	 eax
  007b9	8d 45 b4	 lea	 eax, DWORD PTR _dx$5[ebp]
  007bc	50		 push	 eax
  007bd	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  007c3	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2421 : 			flag = checkCharObjPoint(nowGx + dx, nowGy + dy, CHAROBJ_TYPE_USER_NPC);

  007c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  007cd	03 45 b8	 add	 eax, DWORD PTR _dy$10[ebp]
  007d0	6a 08		 push	 8
  007d2	50		 push	 eax
  007d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  007d8	03 45 b4	 add	 eax, DWORD PTR _dx$5[ebp]
  007db	50		 push	 eax
  007dc	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint
  007e1	83 c4 18	 add	 esp, 24			; 00000018H

; 2422 : 			if (partyModeFlag == 0 && flag == TRUE && eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0) {

  007e4	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  007ec	75 6b		 jne	 SHORT $LN81@fieldProc
  007ee	3b c6		 cmp	 eax, esi
  007f0	75 67		 jne	 SHORT $LN81@fieldProc
  007f2	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  007fa	75 5d		 jne	 SHORT $LN81@fieldProc
  007fc	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  00804	75 53		 jne	 SHORT $LN81@fieldProc
  00806	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  0080e	75 49		 jne	 SHORT $LN81@fieldProc

; 2423 : 				if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime()) {

  00810	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00815	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  0081b	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00821	3b c8		 cmp	 ecx, eax
  00823	73 34		 jae	 SHORT $LN81@fieldProc

; 2424 : 					if (bNewServer)

  00825	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0082c	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00832	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00838	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0083e	74 07		 je	 SHORT $LN82@fieldProc

; 2425 : 						lssproto_AAB_send(sockfd, nowGx, nowGy);

  00840	e8 00 00 00 00	 call	 ?lssproto_AAB_send@@YAXHHH@Z ; lssproto_AAB_send
  00845	eb 05		 jmp	 SHORT $LN259@fieldProc
$LN82@fieldProc:

; 2426 : 					else
; 2427 : 						old_lssproto_AAB_send(sockfd, nowGx, nowGy);

  00847	e8 00 00 00 00	 call	 ?old_lssproto_AAB_send@@YAXHHH@Z ; old_lssproto_AAB_send
$LN259@fieldProc:

; 2428 : 					fieldBtnPushTime = TimeGetTime();

  0084c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0084f	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00854	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN81@fieldProc:

; 2429 : 				}
; 2430 : 			}
; 2431 : 			play_se(217, 320, 240);	// ?????

  00859	68 f0 00 00 00	 push	 240			; 000000f0H
  0085e	68 40 01 00 00	 push	 320			; 00000140H
  00863	68 d9 00 00 00	 push	 217			; 000000d9H
  00868	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0086d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2432 : 		}
; 2433 : 	}

  00870	eb 08		 jmp	 SHORT $LN78@fieldProc
$LN77@fieldProc:

; 2434 : 	else
; 2435 : 		cardBtn = 0;

  00872	33 c0		 xor	 eax, eax
  00874	66 a3 00 00 00
	00		 mov	 WORD PTR ?cardBtn@@3FA, ax ; cardBtn
$LN78@fieldProc:

; 2436 : 	if (focusId == FIELD_FUNC_CARD)

  0087a	33 c0		 xor	 eax, eax
  0087c	83 fb 01	 cmp	 ebx, 1
  0087f	0f 94 c0	 sete	 al

; 2437 : 		cardBtnFocus = 1;		// ???????????????
; 2438 : 	else
; 2439 : 		cardBtnFocus = 0;
; 2440 : 
; 2441 : #ifdef _FRIENDCHANNEL			//ROG ADD å¥½åé¢é
; 2442 : 	if (pushId == FIELD_FUNC_CHATROOM) {

  00882	66 a3 00 00 00
	00		 mov	 WORD PTR ?cardBtnFocus@@3FA, ax ; cardBtnFocus
  00888	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0088b	0f 85 df 00 00
	00		 jne	 $LN244@fieldProc

; 2443 : 		if (selId == FIELD_FUNC_CHATROOM) {

  00891	3b fe		 cmp	 edi, esi
  00893	0f 85 d7 00 00
	00		 jne	 $LN244@fieldProc

; 2444 : 			closeEtcSwitch();

  00899	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2445 : 			closeJoinChannelWN();

  0089e	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2446 : 			if (CheckMenuFlag())

  008a3	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  008a8	85 c0		 test	 eax, eax
  008aa	74 05		 je	 SHORT $LN88@fieldProc

; 2447 : 				InitMenu2();

  008ac	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN88@fieldProc:

; 2448 : 
; 2449 : 			if (strcmp(pc.chatRoomNum, "") == 0) {

  008b1	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@@
  008b6	b8 b4 a1 00 00	 mov	 eax, OFFSET ?pc@@3UPC@@A+41396
  008bb	0f 1f 44 00 00	 npad	 5
$LL232@fieldProc:
  008c0	8a 10		 mov	 dl, BYTE PTR [eax]
  008c2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  008c4	75 1a		 jne	 SHORT $LN233@fieldProc
  008c6	84 d2		 test	 dl, dl
  008c8	74 12		 je	 SHORT $LN234@fieldProc
  008ca	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  008cd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  008d0	75 0e		 jne	 SHORT $LN233@fieldProc
  008d2	83 c0 02	 add	 eax, 2
  008d5	83 c1 02	 add	 ecx, 2
  008d8	84 d2		 test	 dl, dl
  008da	75 e4		 jne	 SHORT $LL232@fieldProc
$LN234@fieldProc:
  008dc	33 c0		 xor	 eax, eax
  008de	eb 05		 jmp	 SHORT $LN235@fieldProc
$LN233@fieldProc:
  008e0	1b c0		 sbb	 eax, eax
  008e2	83 c8 01	 or	 eax, 1
$LN235@fieldProc:
  008e5	85 c0		 test	 eax, eax
  008e7	75 31		 jne	 SHORT $LN89@fieldProc

; 2450 : 				if (SelRoomBtn == 1 || pSelChanlWnd != NULL)

  008e9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?SelRoomBtn@@3FA, 1 ; SelRoomBtn
  008f1	74 1d		 je	 SHORT $LN93@fieldProc
  008f3	39 05 00 00 00
	00		 cmp	 DWORD PTR ?pSelChanlWnd@@3PAUaction@@A, eax ; pSelChanlWnd
  008f9	75 15		 jne	 SHORT $LN93@fieldProc

; 2452 : 				else
; 2453 : 				{
; 2454 : 					/*
; 2455 : 					// WON ADD	é²æ­¢ä¼ éå¤ªé¢ç¹
; 2456 : 					{
; 2457 : 					unsigned int now_time = (unsigned int)time(NULL);
; 2458 : 					static unsigned int old_time = 0;
; 2459 : 
; 2460 : 					  chatRoomBtn = 1;
; 2461 : 
; 2462 : 						if( now_time > old_time ){
; 2463 : 
; 2464 : 						  old_time = now_time + 10;
; 2465 : 
; 2466 : 							lssproto_CHATROOM_send( sockfd,"B|");
; 2467 : 							}
; 2468 : 							}
; 2469 : 
; 2470 : 							  old_time = now_time + 10;
; 2471 : 						*/
; 2472 : #ifdef _CHATROOMPROTOCOL
; 2473 : 					lssproto_CHATROOM_send(sockfd, "B|");

  008fb	68 00 00 00 00	 push	 OFFSET ??_C@_02PACKEJLJ@B?$HM@
  00900	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00906	e8 00 00 00 00	 call	 ?lssproto_CHATROOM_send@@YAXHPAD@Z ; lssproto_CHATROOM_send
  0090b	83 c4 08	 add	 esp, 8
  0090e	eb 2c		 jmp	 SHORT $LN95@fieldProc
$LN93@fieldProc:

; 2451 : 					SelRoomBtn = 0;

  00910	33 c0		 xor	 eax, eax
  00912	66 a3 00 00 00
	00		 mov	 WORD PTR ?SelRoomBtn@@3FA, ax ; SelRoomBtn

; 2474 : #endif
; 2475 : 				}
; 2476 : 			}

  00918	eb 22		 jmp	 SHORT $LN95@fieldProc
$LN89@fieldProc:

; 2477 : 			else {
; 2478 : 				if (chatRoomBtn == 1 || pChtChanlWnd != NULL)

  0091a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?chatRoomBtn@@3FA, 1 ; chatRoomBtn
  00922	74 10		 je	 SHORT $LN96@fieldProc
  00924	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pChtChanlWnd@@3PAUaction@@A, 0 ; pChtChanlWnd
  0092b	75 07		 jne	 SHORT $LN96@fieldProc

; 2480 : 				else
; 2481 : 					chatRoomBtn = 1;

  0092d	b8 01 00 00 00	 mov	 eax, 1
  00932	eb 02		 jmp	 SHORT $LN260@fieldProc
$LN96@fieldProc:

; 2479 : 					chatRoomBtn = 0;

  00934	33 c0		 xor	 eax, eax
$LN260@fieldProc:

; 2482 : 			}
; 2483 : 			if ((joy_trg[0] & JOY_ESC) || CheckMenuFlag())

  00936	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtn@@3FA, ax ; chatRoomBtn
$LN95@fieldProc:
  0093c	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00946	75 09		 jne	 SHORT $LN98@fieldProc
  00948	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0094d	85 c0		 test	 eax, eax
  0094f	74 1f		 je	 SHORT $LN244@fieldProc
$LN98@fieldProc:

; 2484 : 			{
; 2485 : 				play_se(203, 320, 240);

  00951	68 f0 00 00 00	 push	 240			; 000000f0H
  00956	68 40 01 00 00	 push	 320			; 00000140H
  0095b	68 cb 00 00 00	 push	 203			; 000000cbH
  00960	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00965	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2486 : 				chatRoomBtn = 0;

  00968	33 c0		 xor	 eax, eax
  0096a	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtn@@3FA, ax ; chatRoomBtn
$LN244@fieldProc:

; 2487 : 			}
; 2488 : 		}
; 2489 : 	}
; 2490 : 
; 2491 : 	if (SelRoomBtn == 1)

  00970	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?SelRoomBtn@@3FA, 1 ; SelRoomBtn
  00978	75 4b		 jne	 SHORT $LN99@fieldProc

; 2492 : 	{
; 2493 : 		SelectChatRoom();

  0097a	e8 00 00 00 00	 call	 ?SelectChatRoom@@YAXXZ	; SelectChatRoom

; 2494 : 		if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL) || CheckMenuFlag())

  0097f	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00989	74 09		 je	 SHORT $LN103@fieldProc
  0098b	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  00990	85 c0		 test	 eax, eax
  00992	74 0d		 je	 SHORT $LN102@fieldProc
$LN103@fieldProc:
  00994	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00999	85 c0		 test	 eax, eax
  0099b	0f 84 aa 00 00
	00		 je	 $LN110@fieldProc
$LN102@fieldProc:

; 2495 : 		{
; 2496 : 			play_se(203, 320, 240);

  009a1	68 f0 00 00 00	 push	 240			; 000000f0H
  009a6	68 40 01 00 00	 push	 320			; 00000140H
  009ab	68 cb 00 00 00	 push	 203			; 000000cbH
  009b0	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  009b5	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2497 : 			SelRoomBtn = 0;

  009b8	33 c0		 xor	 eax, eax
  009ba	66 a3 00 00 00
	00		 mov	 WORD PTR ?SelRoomBtn@@3FA, ax ; SelRoomBtn

; 2498 : 		}
; 2499 : 	}

  009c0	e9 86 00 00 00	 jmp	 $LN110@fieldProc
$LN99@fieldProc:

; 2500 : 	else if (chatRoomBtn == 1)

  009c5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?chatRoomBtn@@3FA, 1 ; chatRoomBtn
  009cd	75 44		 jne	 SHORT $LN104@fieldProc

; 2501 : 	{
; 2502 : 		ChatRoomWnd();

  009cf	e8 00 00 00 00	 call	 ?ChatRoomWnd@@YAXXZ	; ChatRoomWnd

; 2503 : 		if (((joy_trg[0] & JOY_ESC) && GetImeString() == NULL) || CheckMenuFlag())

  009d4	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  009de	74 09		 je	 SHORT $LN108@fieldProc
  009e0	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  009e5	85 c0		 test	 eax, eax
  009e7	74 09		 je	 SHORT $LN107@fieldProc
$LN108@fieldProc:
  009e9	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  009ee	85 c0		 test	 eax, eax
  009f0	74 59		 je	 SHORT $LN110@fieldProc
$LN107@fieldProc:

; 2504 : 		{
; 2505 : 			play_se(203, 320, 240);

  009f2	68 f0 00 00 00	 push	 240			; 000000f0H
  009f7	68 40 01 00 00	 push	 320			; 00000140H
  009fc	68 cb 00 00 00	 push	 203			; 000000cbH
  00a01	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00a06	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2506 : 			chatRoomBtn = 0;

  00a09	33 c0		 xor	 eax, eax
  00a0b	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtn@@3FA, ax ; chatRoomBtn

; 2507 : 		}
; 2508 : 	}

  00a11	eb 38		 jmp	 SHORT $LN110@fieldProc
$LN104@fieldProc:

; 2509 : 	else
; 2510 : 	{
; 2511 : 		if (pChtChanlWnd)

  00a13	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pChtChanlWnd@@3PAUaction@@A ; pChtChanlWnd
  00a18	85 c0		 test	 eax, eax
  00a1a	74 13		 je	 SHORT $LN109@fieldProc

; 2512 : 		{
; 2513 : 			DeathAction(pChtChanlWnd);

  00a1c	50		 push	 eax
  00a1d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00a22	83 c4 04	 add	 esp, 4

; 2514 : 			pChtChanlWnd = NULL;

  00a25	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pChtChanlWnd@@3PAUaction@@A, 0 ; pChtChanlWnd
$LN109@fieldProc:

; 2515 : 		}
; 2516 : 		if (pSelChanlWnd)

  00a2f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pSelChanlWnd@@3PAUaction@@A ; pSelChanlWnd
  00a34	85 c0		 test	 eax, eax
  00a36	74 13		 je	 SHORT $LN110@fieldProc

; 2517 : 		{
; 2518 : 			DeathAction(pSelChanlWnd);

  00a38	50		 push	 eax
  00a39	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00a3e	83 c4 04	 add	 esp, 4

; 2519 : 			pSelChanlWnd = NULL;

  00a41	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pSelChanlWnd@@3PAUaction@@A, 0 ; pSelChanlWnd
$LN110@fieldProc:

; 2520 : 		}
; 2521 : 	}
; 2522 : 
; 2523 : 	if (focusId == FIELD_FUNC_CHATROOM)

  00a4b	33 c0		 xor	 eax, eax

; 2524 : 		chatRoomBtnFocus = 1;
; 2525 : 	else
; 2526 : 		chatRoomBtnFocus = 0;
; 2527 : #endif
; 2528 : 
; 2529 : 	// Robin 04/11 Trade
; 2530 : 	if (pushId == FIELD_FUNC_TRADE)

  00a4d	b9 01 00 00 00	 mov	 ecx, 1
  00a52	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  00a55	0f 94 c0	 sete	 al
  00a58	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtnFocus@@3FA, ax ; chatRoomBtnFocus
  00a5e	83 fe 06	 cmp	 esi, 6
  00a61	0f 85 06 01 00
	00		 jne	 $LN113@fieldProc

; 2531 : 	{
; 2532 : 		tradeBtn = 1;

  00a67	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?tradeBtn@@3FA, cx ; tradeBtn

; 2533 : 
; 2534 : 		if (selId == FIELD_FUNC_TRADE)

  00a6e	3b fe		 cmp	 edi, esi
  00a70	0f 85 ff 00 00
	00		 jne	 $LN114@fieldProc

; 2535 : 		{
; 2536 : 			int dx, dy;
; 2537 : 			int flag;
; 2538 : 
; 2539 : 			// îî¤?îî¡¡????????î??
; 2540 : 			getRouteData(pc.dir, &dx, &dy);

  00a76	8d 45 b4	 lea	 eax, DWORD PTR _dy$4[ebp]
  00a79	50		 push	 eax
  00a7a	8d 45 b8	 lea	 eax, DWORD PTR _dx$9[ebp]
  00a7d	50		 push	 eax
  00a7e	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  00a84	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2541 : 			flag = checkCharObjPoint(nowGx + dx, nowGy + dy, CHAROBJ_TYPE_USER_NPC);

  00a89	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00a8e	03 45 b4	 add	 eax, DWORD PTR _dy$4[ebp]
  00a91	6a 08		 push	 8
  00a93	50		 push	 eax
  00a94	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00a99	03 45 b8	 add	 eax, DWORD PTR _dx$9[ebp]
  00a9c	50		 push	 eax
  00a9d	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint
  00aa2	83 c4 18	 add	 esp, 24			; 00000018H

; 2542 : 			// ?????î¼??????îî¡¡???????
; 2543 : 			if (partyModeFlag == 0 && flag == TRUE && eventWarpSendFlag == 0 && eventEnemySendFlag == 0
; 2544 : 				&& sendEnFlag == 0 && tradeFlag == 0
; 2545 : #ifdef _STREET_VENDOR
; 2546 : 				&& (pc.iOnStreetVendor == 0 || sStreetVendorBuyBtn == 2)

  00aa5	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  00aad	0f 85 82 00 00
	00		 jne	 $LN246@fieldProc
  00ab3	83 f8 01	 cmp	 eax, 1
  00ab6	75 7d		 jne	 SHORT $LN246@fieldProc
  00ab8	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  00ac0	75 73		 jne	 SHORT $LN246@fieldProc
  00ac2	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  00aca	75 69		 jne	 SHORT $LN246@fieldProc
  00acc	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  00ad4	75 5f		 jne	 SHORT $LN246@fieldProc
  00ad6	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?tradeFlag@@3FA, 0 ; tradeFlag
  00ade	75 55		 jne	 SHORT $LN246@fieldProc
  00ae0	83 3d b8 a1 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+41400, 0
  00ae7	74 0a		 je	 SHORT $LN117@fieldProc
  00ae9	66 83 3d 00 00
	00 00 02	 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, 2 ; sStreetVendorBuyBtn
  00af1	75 42		 jne	 SHORT $LN246@fieldProc
$LN117@fieldProc:

; 2547 : #endif
; 2548 : 
; 2549 : 				)
; 2550 : 			{
; 2551 : 				if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  00af3	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00af8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  00afe	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00b04	3b c8		 cmp	 ecx, eax
  00b06	73 2d		 jae	 SHORT $LN246@fieldProc

; 2552 : 				{
; 2553 : 					if (bNewServer)

  00b08	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00b0f	68 00 00 00 00	 push	 OFFSET ??_C@_03DDDPELM@D?$HMD@
  00b14	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00b1a	74 07		 je	 SHORT $LN119@fieldProc

; 2554 : 						lssproto_TD_send(sockfd, "D|D");

  00b1c	e8 00 00 00 00	 call	 ?lssproto_TD_send@@YAXHPAD@Z ; lssproto_TD_send
  00b21	eb 05		 jmp	 SHORT $LN261@fieldProc
$LN119@fieldProc:

; 2555 : 					else
; 2556 : 						old_lssproto_TD_send(sockfd, "D|D");

  00b23	e8 00 00 00 00	 call	 ?old_lssproto_TD_send@@YAXHPAD@Z ; old_lssproto_TD_send
$LN261@fieldProc:

; 2557 : 					fieldBtnPushTime = TimeGetTime();

  00b28	83 c4 08	 add	 esp, 8
  00b2b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00b30	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN246@fieldProc:

; 2558 : 				}
; 2559 : 			}
; 2560 : #ifdef _STREET_VENDOR
; 2561 : 			if (pc.iOnStreetVendor == 1)

  00b35	83 3d b8 a1 00
	00 01		 cmp	 DWORD PTR ?pc@@3UPC@@A+41400, 1
  00b3c	75 11		 jne	 SHORT $LN121@fieldProc

; 2562 : 				StockChatBufferLine("ë¸ì ììì êµíì í´ìë ì ëë¤", FONT_PAL_RED);

  00b3e	6a 00		 push	 0
  00b40	6a 06		 push	 6
  00b42	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@GPKKMDCO@?$LD?k?A?$KB?$LL?s?$LP?$KB?$LM?$KN?5?$LB?$LD?H?$KP?$MA?$LL?5?G?X?$LM?$KN?$LE?B?5?$LO?H?5?$LF?H?$LE@
  00b47	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  00b4c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN121@fieldProc:

; 2563 : #endif
; 2564 : 			play_se(217, 320, 240);	// ?????

  00b4f	68 f0 00 00 00	 push	 240			; 000000f0H
  00b54	68 40 01 00 00	 push	 320			; 00000140H
  00b59	68 d9 00 00 00	 push	 217			; 000000d9H
  00b5e	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00b63	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2565 : 		}
; 2566 : 	}

  00b66	b9 01 00 00 00	 mov	 ecx, 1
  00b6b	eb 08		 jmp	 SHORT $LN114@fieldProc
$LN113@fieldProc:

; 2567 : 	else
; 2568 : 		tradeBtn = 0;

  00b6d	33 c0		 xor	 eax, eax
  00b6f	66 a3 00 00 00
	00		 mov	 WORD PTR ?tradeBtn@@3FA, ax ; tradeBtn
$LN114@fieldProc:

; 2569 : 	if (focusId == FIELD_FUNC_TRADE)

  00b75	33 c0		 xor	 eax, eax
  00b77	83 fb 06	 cmp	 ebx, 6
  00b7a	0f 94 c0	 sete	 al

; 2570 : 		tradeBtnFocus = 1;		// ???????????????
; 2571 : 	else
; 2572 : 		tradeBtnFocus = 0;
; 2573 : #ifdef _ANGEL_SUMMON
; 2574 : 	if (pushId == FIELD_FUNC_ANGEL)

  00b7d	66 a3 00 00 00
	00		 mov	 WORD PTR ?tradeBtnFocus@@3FA, ax ; tradeBtnFocus
  00b83	83 fe 0b	 cmp	 esi, 11			; 0000000bH
  00b86	0f 85 e8 00 00
	00		 jne	 $LN124@fieldProc

; 2575 : 	{
; 2576 : 		angelBtn = 1;

  00b8c	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?angelBtn@@3FA, cx ; angelBtn

; 2577 : 
; 2578 : 		if (selId == FIELD_FUNC_ANGEL)

  00b93	3b fe		 cmp	 edi, esi
  00b95	0f 85 e1 00 00
	00		 jne	 $LN125@fieldProc

; 2579 : 		{
; 2580 : 			if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  00b9b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00ba0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  00ba6	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00bac	3b c8		 cmp	 ecx, eax
  00bae	0f 83 a7 00 00
	00		 jae	 $LN127@fieldProc

; 2581 : 			{
; 2582 : 				//lssproto_WN_send( sockfd, nowGx, nowGy, WINDOW_MESSAGETYPE_ANGELMESSAGE, , WINDOW_BUTTONTYPE_YES, msg ) ;
; 2583 : 				if (angelFlag)

  00bb4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?angelFlag@@3HA, 0 ; angelFlag
  00bbb	74 1f		 je	 SHORT $LN128@fieldProc

; 2584 : 					openServerWindow(WINDOW_MESSAGETYPE_MESSAGE, angelRecvButton, angelRecvType, -1, angelMsg);

  00bbd	68 00 00 00 00	 push	 OFFSET ?angelMsg@@3PADA	; angelMsg
  00bc2	6a ff		 push	 -1
  00bc4	ff 35 00 00 00
	00		 push	 DWORD PTR ?angelRecvType@@3HA ; angelRecvType
  00bca	ff 35 00 00 00
	00		 push	 DWORD PTR ?angelRecvButton@@3HA ; angelRecvButton
  00bd0	6a 00		 push	 0
  00bd2	e8 00 00 00 00	 call	 ?openServerWindow@@YAXHHHHPAD@Z ; openServerWindow
  00bd7	83 c4 14	 add	 esp, 20			; 00000014H
  00bda	eb 75		 jmp	 SHORT $LN131@fieldProc
$LN128@fieldProc:

; 2585 : 				else
; 2586 : 				{
; 2587 : 					if (helpBtn == 0)

  00bdc	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?helpBtn@@3FA, 0 ; helpBtn
  00be4	75 60		 jne	 SHORT $LN130@fieldProc

; 2588 : 					{
; 2589 : 						// ???î¢î?îîï¼¯ï¼«?????????????????????î¼??
; 2590 : 						// ???????î????î®î¡??
; 2591 : 						closeEtcSwitch();

  00be6	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2592 : 						closeJoinChannelWN();

  00beb	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2593 : 						// î???????î???î?
; 2594 : 						if (CheckMenuFlag())

  00bf0	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00bf5	85 c0		 test	 eax, eax
  00bf7	74 05		 je	 SHORT $LN132@fieldProc

; 2595 : 							InitMenu2();

  00bf9	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN132@fieldProc:

; 2596 : 						HelpProcNo = 0;

  00bfe	33 c0		 xor	 eax, eax
  00c00	66 a3 00 00 00
	00		 mov	 WORD PTR ?HelpProcNo@@3FA, ax ; HelpProcNo

; 2597 : 						helpBtn = 1;

  00c06	b8 01 00 00 00	 mov	 eax, 1
  00c0b	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpBtn@@3FA, ax ; helpBtn

; 2598 : 						actBtn = 1;

  00c11	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2599 : 						jumpHelpPage = 52;

  00c17	b8 34 00 00 00	 mov	 eax, 52			; 00000034H

; 2600 : 						jumpHelpSeg = 29;
; 2601 : 						play_se(202, 320, 240);	// ????????

  00c1c	68 f0 00 00 00	 push	 240			; 000000f0H
  00c21	66 a3 00 00 00
	00		 mov	 WORD PTR ?jumpHelpPage@@3FA, ax ; jumpHelpPage
  00c27	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00c2c	68 40 01 00 00	 push	 320			; 00000140H
  00c31	68 ca 00 00 00	 push	 202			; 000000caH
  00c36	66 a3 00 00 00
	00		 mov	 WORD PTR ?jumpHelpSeg@@3FA, ax ; jumpHelpSeg
  00c3c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00c41	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2602 : 					}

  00c44	eb 0b		 jmp	 SHORT $LN131@fieldProc
$LN130@fieldProc:

; 2603 : 					else
; 2604 : 						HelpProcNo = 1000;

  00c46	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00c4b	66 a3 00 00 00
	00		 mov	 WORD PTR ?HelpProcNo@@3FA, ax ; HelpProcNo
$LN131@fieldProc:

; 2605 : 				}
; 2606 : 				fieldBtnPushTime = TimeGetTime();

  00c51	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00c56	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN127@fieldProc:

; 2607 : 			}
; 2608 : 			play_se(217, 320, 240);	// ?????

  00c5b	68 f0 00 00 00	 push	 240			; 000000f0H
  00c60	68 40 01 00 00	 push	 320			; 00000140H
  00c65	68 d9 00 00 00	 push	 217			; 000000d9H
  00c6a	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00c6f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2609 : 		}
; 2610 : 	}

  00c72	eb 08		 jmp	 SHORT $LN125@fieldProc
$LN124@fieldProc:

; 2611 : 	else
; 2612 : 		angelBtn = 0;

  00c74	33 c0		 xor	 eax, eax
  00c76	66 a3 00 00 00
	00		 mov	 WORD PTR ?angelBtn@@3FA, ax ; angelBtn
$LN125@fieldProc:

; 2613 : 	if (focusId == FIELD_FUNC_ANGEL)

  00c7c	33 c0		 xor	 eax, eax
  00c7e	83 fb 0b	 cmp	 ebx, 11			; 0000000bH
  00c81	0f 94 c0	 sete	 al

; 2614 : 		angelBtnFocus = 1;		// ???????????????
; 2615 : 	else
; 2616 : 		angelBtnFocus = 0;
; 2617 : 
; 2618 : 	if (angelFlag) {

  00c84	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?angelFlag@@3HA, 0 ; angelFlag
  00c8b	66 a3 00 00 00
	00		 mov	 WORD PTR ?angelBtnFocus@@3FA, ax ; angelBtnFocus
  00c91	74 49		 je	 SHORT $LN135@fieldProc

; 2619 : 		if (angelLampFlashTime == 0)

  00c93	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?angelLampFlashTime@@3IA, 0 ; angelLampFlashTime
  00c9a	75 12		 jne	 SHORT $LN137@fieldProc

; 2620 : 		{
; 2621 : 			angelLampDrawFlag = 1;

  00c9c	b8 01 00 00 00	 mov	 eax, 1
  00ca1	66 a3 00 00 00
	00		 mov	 WORD PTR ?angelLampDrawFlag@@3FA, ax ; angelLampDrawFlag

; 2622 : 			angelLampFlashTime = TimeGetTime();

  00ca7	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 2623 : 		}

  00cac	eb 36		 jmp	 SHORT $LN262@fieldProc
$LN137@fieldProc:

; 2624 : 		else if (angelLampFlashTime + FIELD_MAIL_LAMP_FLASH_TIME < TimeGetTime())

  00cae	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00cb3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?angelLampFlashTime@@3IA ; angelLampFlashTime
  00cb9	81 c1 e8 03 00
	00		 add	 ecx, 1000		; 000003e8H
  00cbf	3b c8		 cmp	 ecx, eax
  00cc1	73 26		 jae	 SHORT $LN136@fieldProc

; 2625 : 		{
; 2626 : 			angelLampDrawFlag++;

  00cc3	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?angelLampDrawFlag@@3FA ; angelLampDrawFlag
  00cc9	66 48		 dec	 ax

; 2627 : 			angelLampDrawFlag &= 1;

  00ccb	66 83 e0 01	 and	 ax, 1
  00ccf	66 a3 00 00 00
	00		 mov	 WORD PTR ?angelLampDrawFlag@@3FA, ax ; angelLampDrawFlag

; 2628 : 			angelLampFlashTime = TimeGetTime();

  00cd5	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 2629 : 		}
; 2630 : 	}

  00cda	eb 08		 jmp	 SHORT $LN262@fieldProc
$LN135@fieldProc:

; 2631 : 	else
; 2632 : 	{
; 2633 : 		angelLampDrawFlag = 0;

  00cdc	33 c0		 xor	 eax, eax
  00cde	66 a3 00 00 00
	00		 mov	 WORD PTR ?angelLampDrawFlag@@3FA, ax ; angelLampDrawFlag
$LN262@fieldProc:

; 2634 : 		angelLampFlashTime = 0;
; 2635 : 	}
; 2636 : #endif
; 2637 : 
; 2638 : #ifdef é¡¶é¨ç§°å·æé®	//[í± í¸ì¹­ ë²í¼]
; 2639 : 
; 2640 : 	static ACTION* pActç§°å·Wnd = NULL;
; 2641 : 
; 2642 : 	if (pushId == FIELD_FUNC_ç§°å· && selId == FIELD_FUNC_ç§°å·)
; 2643 : 	{
; 2644 : 		if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())  //[í´ë¦­ ê°ê²©ì 500msì´ì´ì¼ í´]
; 2645 : 		{
; 2646 : 			play_se(202, 320, 240);
; 2647 : 			//	lssproto_TEACHER_SYSTEM_send(sockfd, "P|");
; 2648 : 			fieldBtnPushTime = TimeGetTime();
; 2649 : 
; 2650 : 			//[ì°½êµ¬ë¥¼ ë§ë¤ë¤]
; 2651 : 			pActç§°å·Wnd = MakeWindowDisp(0, 0, 0, 0, 0, -1);
; 2652 : 
; 2653 : 			sç§°å·SystemBtn = 0;
; 2654 : 		}
; 2655 : 	}
; 2656 : 
; 2657 : 	if (pActç§°å·Wnd && pActç§°å·Wnd->hp > 0)
; 2658 : 	{
; 2659 : 		//[ì°½ì ê·¸ë ¤ë´ë¤]
; 2660 : 		StockDispBufferç»å¯¹ä½ç½®(180, 70, DISP_PRIO_MENU, ç§°å·çé¢, 1);
; 2661 : 	}
; 2662 : 
; 2663 : 	if (focusId == FIELD_FUNC_ç§°å·)  //focusäºï¼[ë°ì ëíë´ë ìë¦¼ ë¬¸ì]
; 2664 : 		sç§°å·SystemBtnFocus = 1;
; 2665 : 	else
; 2666 : 		sç§°å·SystemBtnFocus = 0;
; 2667 : 
; 2668 : #endif
; 2669 : 
; 2670 : 
; 2671 : #ifdef _TEACHER_SYSTEM
; 2672 : 	if (pushId == FIELD_FUNC_TEACHER && selId == FIELD_FUNC_TEACHER)

  00ce4	a3 00 00 00 00	 mov	 DWORD PTR ?angelLampFlashTime@@3IA, eax ; angelLampFlashTime
$LN136@fieldProc:
  00ce9	83 fe 0c	 cmp	 esi, 12			; 0000000cH
  00cec	75 57		 jne	 SHORT $LN248@fieldProc
  00cee	3b fe		 cmp	 edi, esi
  00cf0	75 53		 jne	 SHORT $LN248@fieldProc

; 2673 : 	{
; 2674 : 		if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())

  00cf2	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00cf7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  00cfd	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00d03	3b c8		 cmp	 ecx, eax
  00d05	73 3e		 jae	 SHORT $LN248@fieldProc

; 2675 : 		{
; 2676 : 			play_se(202, 320, 240);

  00d07	68 f0 00 00 00	 push	 240			; 000000f0H
  00d0c	68 40 01 00 00	 push	 320			; 00000140H
  00d11	68 ca 00 00 00	 push	 202			; 000000caH
  00d16	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2677 : 			lssproto_TEACHER_SYSTEM_send(sockfd, "P|");

  00d1b	68 00 00 00 00	 push	 OFFSET ??_C@_02OPIIDOKH@P?$HM@
  00d20	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00d26	e8 00 00 00 00	 call	 ?lssproto_TEACHER_SYSTEM_send@@YAXHPAD@Z ; lssproto_TEACHER_SYSTEM_send
  00d2b	83 c4 14	 add	 esp, 20			; 00000014H

; 2678 : 			fieldBtnPushTime = TimeGetTime();

  00d2e	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00d33	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 2679 : 			sTeacherSystemBtn = 0;

  00d38	33 c0		 xor	 eax, eax
  00d3a	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn

; 2680 : 		}
; 2681 : 	}
; 2682 : 	if (sTeacherSystemBtn == 1)

  00d40	e9 cd 00 00 00	 jmp	 $LN153@fieldProc
$LN248@fieldProc:
  00d45	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?sTeacherSystemBtn@@3FA ; sTeacherSystemBtn
  00d4b	66 83 f8 01	 cmp	 ax, 1
  00d4f	0f 85 87 00 00
	00		 jne	 $LN142@fieldProc

; 2683 : 	{
; 2684 : 		if (helpBtn == 0)

  00d55	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?helpBtn@@3FA, 0 ; helpBtn
  00d5d	75 68		 jne	 SHORT $LN144@fieldProc

; 2685 : 		{
; 2686 : 			closeEtcSwitch();

  00d5f	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2687 : 			closeJoinChannelWN();

  00d64	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2688 : 			if (CheckMenuFlag())

  00d69	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00d6e	85 c0		 test	 eax, eax
  00d70	74 05		 je	 SHORT $LN146@fieldProc

; 2689 : 				InitMenu2();

  00d72	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN146@fieldProc:

; 2690 : 			HelpProcNo = 0;

  00d77	33 c0		 xor	 eax, eax
  00d79	66 a3 00 00 00
	00		 mov	 WORD PTR ?HelpProcNo@@3FA, ax ; HelpProcNo

; 2691 : 			helpBtn = 1;

  00d7f	b8 01 00 00 00	 mov	 eax, 1
  00d84	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpBtn@@3FA, ax ; helpBtn

; 2692 : 			actBtn = 1;

  00d8a	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2693 : 			jumpHelpPage = 54 + 1;

  00d90	b8 37 00 00 00	 mov	 eax, 55			; 00000037H

; 2694 : 			jumpHelpSeg = 30;
; 2695 : 			play_se(202, 320, 240);

  00d95	68 f0 00 00 00	 push	 240			; 000000f0H
  00d9a	66 a3 00 00 00
	00		 mov	 WORD PTR ?jumpHelpPage@@3FA, ax ; jumpHelpPage
  00da0	b8 1e 00 00 00	 mov	 eax, 30			; 0000001eH
  00da5	68 40 01 00 00	 push	 320			; 00000140H
  00daa	68 ca 00 00 00	 push	 202			; 000000caH
  00daf	66 a3 00 00 00
	00		 mov	 WORD PTR ?jumpHelpSeg@@3FA, ax ; jumpHelpSeg
  00db5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00dba	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2699 : 		sTeacherSystemBtn = 0;

  00dbd	33 c0		 xor	 eax, eax
  00dbf	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn

; 2700 : 	}

  00dc5	eb 4b		 jmp	 SHORT $LN153@fieldProc
$LN144@fieldProc:

; 2696 : 		}
; 2697 : 		else
; 2698 : 			HelpProcNo = 1000;

  00dc7	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00dcc	66 a3 00 00 00
	00		 mov	 WORD PTR ?HelpProcNo@@3FA, ax ; HelpProcNo

; 2699 : 		sTeacherSystemBtn = 0;

  00dd2	33 c0		 xor	 eax, eax
  00dd4	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtn@@3FA, ax ; sTeacherSystemBtn

; 2700 : 	}

  00dda	eb 36		 jmp	 SHORT $LN153@fieldProc
$LN142@fieldProc:

; 2701 : 	else if (sTeacherSystemBtn == 2)

  00ddc	66 83 f8 02	 cmp	 ax, 2
  00de0	75 06		 jne	 SHORT $LN147@fieldProc

; 2702 : 		TeacherSystemWndfunc(0, NULL);

  00de2	6a 00		 push	 0
  00de4	6a 00		 push	 0
  00de6	eb 22		 jmp	 SHORT $LN263@fieldProc
$LN147@fieldProc:

; 2703 : 	else if (sTeacherSystemBtn == 3)

  00de8	66 83 f8 03	 cmp	 ax, 3
  00dec	75 06		 jne	 SHORT $LN149@fieldProc

; 2704 : 		TeacherSystemWndfunc(1, NULL);

  00dee	6a 00		 push	 0
  00df0	6a 01		 push	 1
  00df2	eb 16		 jmp	 SHORT $LN263@fieldProc
$LN149@fieldProc:

; 2705 : 	else if (sTeacherSystemBtn == 4)

  00df4	66 83 f8 04	 cmp	 ax, 4
  00df8	75 06		 jne	 SHORT $LN151@fieldProc

; 2706 : 		TeacherSystemWndfunc(2, NULL);

  00dfa	6a 00		 push	 0
  00dfc	6a 02		 push	 2
  00dfe	eb 0a		 jmp	 SHORT $LN263@fieldProc
$LN151@fieldProc:

; 2707 : 	else if (sTeacherSystemBtn == 5)

  00e00	66 83 f8 05	 cmp	 ax, 5
  00e04	75 0c		 jne	 SHORT $LN153@fieldProc

; 2708 : 		TeacherSystemWndfunc(3, NULL);

  00e06	6a 00		 push	 0
  00e08	6a 03		 push	 3
$LN263@fieldProc:

; 2709 : 	if (focusId == FIELD_FUNC_TEACHER)

  00e0a	e8 00 00 00 00	 call	 ?TeacherSystemWndfunc@@YAXHPAD@Z ; TeacherSystemWndfunc
  00e0f	83 c4 08	 add	 esp, 8
$LN153@fieldProc:
  00e12	33 c0		 xor	 eax, eax
  00e14	83 fb 0c	 cmp	 ebx, 12			; 0000000cH
  00e17	0f 94 c0	 sete	 al

; 2710 : 		sTeacherSystemBtnFocus = 1;
; 2711 : 	else
; 2712 : 		sTeacherSystemBtnFocus = 0;
; 2713 : #endif
; 2714 : 	// Robin 06/01 Channel
; 2715 : 	if (selId == FIELD_FUNC_CHANNEL)

  00e1a	66 a3 00 00 00
	00		 mov	 WORD PTR ?sTeacherSystemBtnFocus@@3FA, ax ; sTeacherSystemBtnFocus
  00e20	83 ff 07	 cmp	 edi, 7
  00e23	0f 85 bf 00 00
	00		 jne	 $LN161@fieldProc

; 2716 : 	{
; 2717 : #ifdef _FRIENDCHANNEL
; 2718 : 		closeJoinChannelWN();

  00e29	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2719 : #endif
; 2720 : 		if (pc.familyName[0] == NULL)

  00e2e	80 3d f6 50 00
	00 00		 cmp	 BYTE PTR ?pc@@3UPC@@A+20726, 0
  00e35	75 6b		 jne	 SHORT $LN157@fieldProc

; 2721 : 		{
; 2722 : 			char buf[64];
; 2723 : 
; 2724 : 			lssproto_TK_recv(sockfd, 0, "P|ë¶ì¡±ì ê°ìëì§ ìì ì ë³´ë¥¼ íì¸í  ì ìì´ì.", 6);

  00e37	6a 06		 push	 6
  00e39	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@KIPDLLGN@P?$HM?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?A?v?5?$LO?J?$LO?F?5?A?$KE?$LK?$LI?$LI?$KG?5?H@
  00e3e	6a 00		 push	 0
  00e40	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00e46	e8 00 00 00 00	 call	 ?lssproto_TK_recv@@YAXHHPADH@Z ; lssproto_TK_recv

; 2725 : 			sprintf(buf, "S|P", selId);

  00e4b	57		 push	 edi
  00e4c	8d 45 bc	 lea	 eax, DWORD PTR _buf$11[ebp]
  00e4f	68 00 00 00 00	 push	 OFFSET ??_C@_03OAFDEMMP@S?$HMP@
  00e54	50		 push	 eax
  00e55	e8 00 00 00 00	 call	 _sprintf
  00e5a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2726 : 			if (bNewServer)

  00e5d	8d 45 bc	 lea	 eax, DWORD PTR _buf$11[ebp]
  00e60	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00e67	50		 push	 eax
  00e68	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00e6e	74 19		 je	 SHORT $LN158@fieldProc

; 2727 : 				lssproto_FM_send(sockfd, buf);

  00e70	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00e75	83 c4 08	 add	 esp, 8
  00e78	5f		 pop	 edi

; 3007 : 		mailLampFlashTime = 0;
; 3008 : 	}
; 3009 : }

  00e79	5e		 pop	 esi
  00e7a	5b		 pop	 ebx
  00e7b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e7e	33 cd		 xor	 ecx, ebp
  00e80	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e85	8b e5		 mov	 esp, ebp
  00e87	5d		 pop	 ebp
  00e88	c3		 ret	 0
$LN158@fieldProc:

; 2728 : 			else
; 2729 : 				old_lssproto_FM_send(sockfd, buf);

  00e89	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  00e8e	83 c4 08	 add	 esp, 8
  00e91	5f		 pop	 edi

; 3007 : 		mailLampFlashTime = 0;
; 3008 : 	}
; 3009 : }

  00e92	5e		 pop	 esi
  00e93	5b		 pop	 ebx
  00e94	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e97	33 cd		 xor	 ecx, ebp
  00e99	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e9e	8b e5		 mov	 esp, ebp
  00ea0	5d		 pop	 ebp
  00ea1	c3		 ret	 0
$LN157@fieldProc:

; 2730 : 			return;
; 2731 : 		}
; 2732 : 		if (channelWNFlag == 0)

  00ea2	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?channelWNFlag@@3FA, 0 ; channelWNFlag
  00eaa	75 37		 jne	 SHORT $LN160@fieldProc

; 2733 : 		{
; 2734 : 			if (CheckMenuFlag())

  00eac	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00eb1	85 c0		 test	 eax, eax
  00eb3	74 05		 je	 SHORT $LN162@fieldProc

; 2735 : 				InitMenu2();

  00eb5	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN162@fieldProc:

; 2736 : 			channelWNFlag = 1;

  00eba	b8 01 00 00 00	 mov	 eax, 1
  00ebf	66 a3 00 00 00
	00		 mov	 WORD PTR ?channelWNFlag@@3FA, ax ; channelWNFlag

; 2737 : 			initJoinChannelWN();

  00ec5	e8 00 00 00 00	 call	 ?initJoinChannelWN@@YAXXZ ; initJoinChannelWN

; 2738 : 			play_se(202, 320, 240);

  00eca	68 f0 00 00 00	 push	 240			; 000000f0H
  00ecf	68 40 01 00 00	 push	 320			; 00000140H
  00ed4	68 ca 00 00 00	 push	 202			; 000000caH
  00ed9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00ede	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2739 : 		}

  00ee1	eb 05		 jmp	 SHORT $LN161@fieldProc
$LN160@fieldProc:

; 2740 : 		else
; 2741 : 			closeJoinChannelWN();

  00ee3	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN
$LN161@fieldProc:

; 2742 : 	}
; 2743 : 	if (focusId == FIELD_FUNC_CHANNEL)

  00ee8	33 c0		 xor	 eax, eax
  00eea	83 fb 07	 cmp	 ebx, 7
  00eed	0f 94 c0	 sete	 al

; 2744 : 		channelBtnFocus = 1;
; 2745 : 	else
; 2746 : 		channelBtnFocus = 0;
; 2747 : 
; 2748 : 	if (channelWNFlag == 1)

  00ef0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?channelWNFlag@@3FA, 1 ; channelWNFlag
  00ef8	66 a3 00 00 00
	00		 mov	 WORD PTR ?channelBtnFocus@@3FA, ax ; channelBtnFocus
  00efe	75 05		 jne	 SHORT $LN165@fieldProc

; 2749 : 		joinChannelWN();

  00f00	e8 00 00 00 00	 call	 ?joinChannelWN@@YAXXZ	; joinChannelWN
$LN165@fieldProc:

; 2750 : 
; 2751 : #ifndef _CHANNEL_MODIFY
; 2752 : 	if (bNewServer && joy_trg[1] & JOY_CTRL_C)
; 2753 : 	{
; 2754 : 		char buf[64];
; 2755 : 
; 2756 : 		if (pc.channel == -1)
; 2757 : 		{
; 2758 : 			if ((pc.quickChannel != -1) && (pc.familyName[0] != NULL))
; 2759 : 			{
; 2760 : 				sprintf(buf, "C|J|%d", pc.quickChannel);
; 2761 : 				if (bNewServer)
; 2762 : 					lssproto_FM_send(sockfd, buf);
; 2763 : 				else
; 2764 : 					old_lssproto_FM_send(sockfd, buf);
; 2765 : 			}
; 2766 : 		}
; 2767 : 		else
; 2768 : 		{
; 2769 : 			if (bNewServer)
; 2770 : 				lssproto_FM_send(sockfd, "C|J|-1");
; 2771 : 			else
; 2772 : 				old_lssproto_FM_send(sockfd, "C|J|-1");
; 2773 : 		}
; 2774 : 	}
; 2775 : #endif
; 2776 : 	if (pushId == FIELD_FUNC_PARTY) {

  00f05	b9 01 00 00 00	 mov	 ecx, 1
  00f0a	83 fe 02	 cmp	 esi, 2
  00f0d	0f 85 f3 01 00
	00		 jne	 $LN166@fieldProc

; 2777 : 		partyBtn = 1;
; 2778 : 		if (partyBtnEnableFlag == 0) {

  00f13	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyBtnEnableFlag@@3FA, 0 ; partyBtnEnableFlag
  00f1b	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?partyBtn@@3FA, cx ; partyBtn
  00f22	75 27		 jne	 SHORT $LN168@fieldProc

; 2779 : 			partyBtn = 0;
; 2780 : 			play_se(220, 320, 240);

  00f24	68 f0 00 00 00	 push	 240			; 000000f0H
  00f29	33 c0		 xor	 eax, eax
  00f2b	68 40 01 00 00	 push	 320			; 00000140H
  00f30	68 dc 00 00 00	 push	 220			; 000000dcH
  00f35	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyBtn@@3FA, ax ; partyBtn
  00f3b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00f40	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2781 : 		}

  00f43	8d 4e ff	 lea	 ecx, DWORD PTR [esi-1]
  00f46	e9 c3 01 00 00	 jmp	 $LN167@fieldProc
$LN168@fieldProc:

; 2782 : 		else if (selId == FIELD_FUNC_PARTY) {

  00f4b	83 ff 02	 cmp	 edi, 2
  00f4e	0f 85 ba 01 00
	00		 jne	 $LN167@fieldProc

; 2783 : 			if (partyModeFlag == 0) {

  00f54	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  00f5c	0f 85 f6 00 00
	00		 jne	 $LN171@fieldProc

; 2784 : 				int dx, dy;
; 2785 : 				int flag;
; 2786 : 				getRouteData(pc.dir, &dx, &dy);

  00f62	8d 45 b4	 lea	 eax, DWORD PTR _dy$3[ebp]
  00f65	50		 push	 eax
  00f66	8d 45 b8	 lea	 eax, DWORD PTR _dx$8[ebp]
  00f69	50		 push	 eax
  00f6a	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  00f70	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2787 : 				flag = checkCharObjPointNotStatus(nowGx + dx, nowGy + dy, (CHAROBJ_TYPE_USER_NPC | CHAROBJ_TYPE_PARTY_OK), (1 << 31));

  00f75	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00f7a	03 45 b4	 add	 eax, DWORD PTR _dy$3[ebp]
  00f7d	68 00 00 00 80	 push	 -2147483648		; 80000000H
  00f82	6a 28		 push	 40			; 00000028H
  00f84	50		 push	 eax
  00f85	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00f8a	03 45 b8	 add	 eax, DWORD PTR _dx$8[ebp]
  00f8d	50		 push	 eax
  00f8e	e8 00 00 00 00	 call	 ?checkCharObjPointNotStatus@@YAHHHFI@Z ; checkCharObjPointNotStatus
  00f93	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2788 : 				if (flag == 1 && eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0
; 2789 : #ifdef _STREET_VENDOR
; 2790 : 					&& (pc.iOnStreetVendor == 0 || sStreetVendorBuyBtn == 2)

  00f96	83 f8 01	 cmp	 eax, 1
  00f99	0f 85 96 00 00
	00		 jne	 $LN249@fieldProc
  00f9f	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  00fa7	0f 85 88 00 00
	00		 jne	 $LN249@fieldProc
  00fad	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  00fb5	75 7e		 jne	 SHORT $LN249@fieldProc
  00fb7	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  00fbf	75 74		 jne	 SHORT $LN249@fieldProc
  00fc1	83 3d b8 a1 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+41400, 0
  00fc8	74 09		 je	 SHORT $LN174@fieldProc
  00fca	66 39 3d 00 00
	00 00		 cmp	 WORD PTR ?sStreetVendorBuyBtn@@3FA, di ; sStreetVendorBuyBtn
  00fd1	75 62		 jne	 SHORT $LN249@fieldProc
$LN174@fieldProc:

; 2791 : #endif
; 2792 : 
; 2793 : 					)
; 2794 : 				{
; 2795 : 					if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime())// ?îº?î

  00fd3	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00fd8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  00fde	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00fe4	3b c8		 cmp	 ecx, eax
  00fe6	73 4d		 jae	 SHORT $LN249@fieldProc

; 2796 : 					{
; 2797 : 						// î????????????îî¤?????????????
; 2798 : 						if (bNewServer)

  00fe8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00fef	6a 01		 push	 1
  00ff1	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00ff7	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00ffd	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  01003	74 07		 je	 SHORT $LN176@fieldProc

; 2799 : 							lssproto_PR_send(sockfd, nowGx, nowGy, 1);

  01005	e8 00 00 00 00	 call	 ?lssproto_PR_send@@YAXHHHH@Z ; lssproto_PR_send
  0100a	eb 05		 jmp	 SHORT $LN264@fieldProc
$LN176@fieldProc:

; 2800 : 						else
; 2801 : 							old_lssproto_PR_send(sockfd, nowGx, nowGy, 1);

  0100c	e8 00 00 00 00	 call	 ?old_lssproto_PR_send@@YAXHHHH@Z ; old_lssproto_PR_send
$LN264@fieldProc:

; 2802 : 						prSendMode = 1;

  01011	b8 01 00 00 00	 mov	 eax, 1
  01016	83 c4 10	 add	 esp, 16			; 00000010H
  01019	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendMode@@3FA, ax ; prSendMode

; 2803 : 						prSendFlag = 1;

  0101f	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendFlag@@3FA, ax ; prSendFlag

; 2804 : 						etcSendFlag = 1;

  01025	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSendFlag@@3FA, ax ; etcSendFlag

; 2805 : 						fieldBtnPushTime = TimeGetTime();

  0102b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  01030	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN249@fieldProc:

; 2806 : 					}
; 2807 : 				}
; 2808 : #ifdef _STREET_VENDOR
; 2809 : 				if (pc.iOnStreetVendor == 1)

  01035	83 3d b8 a1 00
	00 01		 cmp	 DWORD PTR ?pc@@3UPC@@A+41400, 1
  0103c	0f 85 a6 00 00
	00		 jne	 $LN180@fieldProc

; 2810 : 					StockChatBufferLine("ì´ê³³ìì íí°ë¥¼ êµ¬ì±í  ì ììµëë¤", FONT_PAL_RED);

  01042	6a 00		 push	 0
  01044	6a 06		 push	 6
  01046	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@HJEPKLDC@?$MA?L?$LA?w?$LP?$KB?$LM?$KN?5?F?D?F?$LM?$LI?$KG?5?$LB?$LI?$LM?$LK?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE@
  0104b	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  01050	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2811 : #endif
; 2812 : 			}

  01053	e9 90 00 00 00	 jmp	 $LN180@fieldProc
$LN171@fieldProc:

; 2813 : 			else {
; 2814 : 				if (eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0) {

  01058	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  01060	0f 85 82 00 00
	00		 jne	 $LN180@fieldProc
  01066	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  0106e	75 78		 jne	 SHORT $LN180@fieldProc
  01070	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  01078	75 6e		 jne	 SHORT $LN180@fieldProc

; 2815 : 					if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime()) {

  0107a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0107f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  01085	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  0108b	3b c8		 cmp	 ecx, eax
  0108d	73 59		 jae	 SHORT $LN180@fieldProc

; 2816 : 						if (bNewServer)

  0108f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  01096	6a 00		 push	 0
  01098	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0109e	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  010a4	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  010aa	74 07		 je	 SHORT $LN181@fieldProc

; 2817 : 							lssproto_PR_send(sockfd, nowGx, nowGy, 0);

  010ac	e8 00 00 00 00	 call	 ?lssproto_PR_send@@YAXHHHH@Z ; lssproto_PR_send
  010b1	eb 05		 jmp	 SHORT $LN265@fieldProc
$LN181@fieldProc:

; 2818 : 						else
; 2819 : 							old_lssproto_PR_send(sockfd, nowGx, nowGy, 0);

  010b3	e8 00 00 00 00	 call	 ?old_lssproto_PR_send@@YAXHHHH@Z ; old_lssproto_PR_send
$LN265@fieldProc:

; 2820 : 						prSendMode = 0;

  010b8	33 c0		 xor	 eax, eax
  010ba	83 c4 10	 add	 esp, 16			; 00000010H
  010bd	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendMode@@3FA, ax ; prSendMode

; 2821 : 						prSendFlag = 1;

  010c3	b8 01 00 00 00	 mov	 eax, 1
  010c8	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendFlag@@3FA, ax ; prSendFlag

; 2822 : 						etcSendFlag = 1;

  010ce	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSendFlag@@3FA, ax ; etcSendFlag

; 2823 : 						fieldBtnPushTime = TimeGetTime();

  010d4	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  010d9	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime

; 2824 : #ifdef _CHANNEL_MODIFY
; 2825 : 						TalkMode = 0;

  010de	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?TalkMode@@3HA, 0 ; TalkMode
$LN180@fieldProc:

; 2826 : #endif
; 2827 : 					}
; 2828 : 				}
; 2829 : 			}
; 2830 : 			play_se(217, 320, 240);

  010e8	68 f0 00 00 00	 push	 240			; 000000f0H
  010ed	68 40 01 00 00	 push	 320			; 00000140H
  010f2	68 d9 00 00 00	 push	 217			; 000000d9H
  010f7	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  010fc	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2831 : 		}
; 2832 : 	}

  010ff	b9 01 00 00 00	 mov	 ecx, 1
  01104	eb 08		 jmp	 SHORT $LN167@fieldProc
$LN166@fieldProc:

; 2833 : 	else
; 2834 : 		partyBtn = 0;

  01106	33 c0		 xor	 eax, eax
  01108	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyBtn@@3FA, ax ; partyBtn
$LN167@fieldProc:

; 2835 : 
; 2836 : 	if (focusId == FIELD_FUNC_PARTY)

  0110e	33 c0		 xor	 eax, eax
  01110	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpBtnFocus@@3FA, ax ; helpBtnFocus
  01116	83 fb 02	 cmp	 ebx, 2
  01119	75 09		 jne	 SHORT $LN183@fieldProc

; 2837 : 		partyBtnFocus = 1;
; 2838 : 	else
; 2839 : 		partyBtnFocus = 0;
; 2840 : #ifdef __PHONEMESSAGE
; 2841 : 	// LeiBoy 2002 Feb. 2 --- Cell Phone's Messages Button -- BEGIN
; 2842 : 	if (focusId == FIELD_FUNC_MSG)
; 2843 : 		msgBtnFocus = 1;
; 2844 : 	else
; 2845 : 		msgBtnFocus = 0;
; 2846 : 	if (pushId == FIELD_FUNC_MSG)
; 2847 : 	{
; 2848 : 		extern int MsgID;
; 2849 : 
; 2850 : 		if (selId == FIELD_FUNC_MSG)
; 2851 : 		{
; 2852 : 			if (msgBtn == 0)
; 2853 : 			{
; 2854 : 				/*closeEtcSwitch();
; 2855 : 				closeJoinChannelWN();
; 2856 : 				if (CheckMenuFlag())
; 2857 : 					InitMenu2();
; 2858 : 				MsgID = 0;
; 2859 : 				msgBtn = 1;
; 2860 : 				play_se(202, 320, 240);
; 2861 : 				actBtn = 1;*/
; 2862 : 
; 2863 : 				::ShellExecute(hWnd, NULL, "http://www.waei.com/", NULL, NULL, SW_SHOW);
; 2864 : 			}
; 2865 : 		}
; 2866 : 	}
; 2867 : 
; 2868 : 	//if (msgBtn == 1)
; 2869 : 	//{
; 2870 : 	//	extern int MsgProc();
; 2871 : 
; 2872 : 	//	int msgret = MsgProc();
; 2873 : 
; 2874 : 	//	if (msgret)
; 2875 : 	//	{
; 2876 : 	//		msgBtn = 0;
; 2877 : 	//		actBtn = 0;
; 2878 : 	//		GetKeyInputFocus(&MyChatBuffer);
; 2879 : 	//	}
; 2880 : 	//}
; 2881 : 	// LeiBoy 2002 Feb. 2 --- Cell Phone's Messages Button -- END
; 2882 : #endif
; 2883 : 	helpBtnFocus = 0;

  0111b	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?partyBtnFocus@@3FA, cx ; partyBtnFocus
  01122	eb 14		 jmp	 SHORT $LN185@fieldProc
$LN183@fieldProc:
  01124	33 c0		 xor	 eax, eax
  01126	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyBtnFocus@@3FA, ax ; partyBtnFocus

; 2884 : 	if (focusId == FIELD_FUNC_HELP)

  0112c	83 fb 08	 cmp	 ebx, 8
  0112f	75 07		 jne	 SHORT $LN185@fieldProc

; 2885 : 		helpBtnFocus = 1;

  01131	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?helpBtnFocus@@3FA, cx ; helpBtnFocus
$LN185@fieldProc:

; 2886 : 	if (selId == FIELD_FUNC_HELP) {

  01138	83 ff 08	 cmp	 edi, 8
  0113b	75 57		 jne	 SHORT $LN188@fieldProc

; 2887 : 		extern short HelpProcNo;
; 2888 : 		if (helpBtn == 0) {

  0113d	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?helpBtn@@3FA, 0 ; helpBtn
  01145	75 42		 jne	 SHORT $LN187@fieldProc

; 2889 : 			closeEtcSwitch();

  01147	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2890 : 			closeJoinChannelWN();

  0114c	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2891 : 			if (CheckMenuFlag())

  01151	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  01156	85 c0		 test	 eax, eax
  01158	74 05		 je	 SHORT $LN189@fieldProc

; 2892 : 				InitMenu2();

  0115a	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN189@fieldProc:

; 2893 : 			lssproto_SaMenu_send(sockfd, 3, 8, 1);

  0115f	6a 01		 push	 1
  01161	6a 08		 push	 8
  01163	6a 03		 push	 3
  01165	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0116b	e8 00 00 00 00	 call	 ?lssproto_SaMenu_send@@YAXHHHH@Z ; lssproto_SaMenu_send

; 2894 : 			//HelpProcNo = 0;
; 2895 : 			//helpBtn = 1;
; 2896 : 			//actBtn = 1;
; 2897 : 			play_se(202, 320, 240);	// ????????

  01170	68 f0 00 00 00	 push	 240			; 000000f0H
  01175	68 40 01 00 00	 push	 320			; 00000140H
  0117a	68 ca 00 00 00	 push	 202			; 000000caH
  0117f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  01184	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2898 : 		}

  01187	eb 0b		 jmp	 SHORT $LN188@fieldProc
$LN187@fieldProc:

; 2899 : 		else
; 2900 : 			HelpProcNo = 1000;

  01189	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  0118e	66 a3 00 00 00
	00		 mov	 WORD PTR ?HelpProcNo@@3FA, ax ; HelpProcNo
$LN188@fieldProc:

; 2901 : 	}
; 2902 : 	if (helpBtn == 1) {

  01194	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?helpBtn@@3FA, 1 ; helpBtn
  0119c	75 17		 jne	 SHORT $LN250@fieldProc

; 2903 : 		extern int HelpProc();
; 2904 : 		if (HelpProc()) {

  0119e	e8 00 00 00 00	 call	 ?HelpProc@@YAHXZ	; HelpProc
  011a3	85 c0		 test	 eax, eax
  011a5	74 0e		 je	 SHORT $LN250@fieldProc

; 2905 : 			helpBtn = 0;

  011a7	33 c0		 xor	 eax, eax
  011a9	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpBtn@@3FA, ax ; helpBtn

; 2906 : 			actBtn = 0;

  011af	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn
$LN250@fieldProc:

; 2907 : 		}
; 2908 : 	}
; 2909 : 	if (pushId == FIELD_FUNC_JOIN_BATTLE) {

  011b5	83 fe 03	 cmp	 esi, 3
  011b8	0f 85 4d 01 00
	00		 jne	 $LN192@fieldProc

; 2910 : 		joinBattleBtn = 1;
; 2911 : 		if (joinBattleBtnEnableFlag == 0) {

  011be	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?joinBattleBtnEnableFlag@@3FA, 0 ; joinBattleBtnEnableFlag
  011c6	b8 01 00 00 00	 mov	 eax, 1
  011cb	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtn@@3FA, ax ; joinBattleBtn
  011d1	75 24		 jne	 SHORT $LN194@fieldProc

; 2912 : 			joinBattleBtn = 0;
; 2913 : 			play_se(220, 320, 240);

  011d3	68 f0 00 00 00	 push	 240			; 000000f0H
  011d8	33 c0		 xor	 eax, eax
  011da	68 40 01 00 00	 push	 320			; 00000140H
  011df	68 dc 00 00 00	 push	 220			; 000000dcH
  011e4	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtn@@3FA, ax ; joinBattleBtn
  011ea	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  011ef	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2914 : 		}

  011f2	e9 1c 01 00 00	 jmp	 $LN193@fieldProc
$LN194@fieldProc:

; 2915 : 		else if (selId == FIELD_FUNC_JOIN_BATTLE) {

  011f7	83 ff 03	 cmp	 edi, 3
  011fa	0f 85 13 01 00
	00		 jne	 $LN193@fieldProc

; 2916 : 			int dx, dy;
; 2917 : 			int flag;
; 2918 : 			getRouteData(pc.dir, &dx, &dy);

  01200	8d 45 b4	 lea	 eax, DWORD PTR _dy$2[ebp]
  01203	50		 push	 eax
  01204	8d 45 b8	 lea	 eax, DWORD PTR _dx$7[ebp]
  01207	50		 push	 eax
  01208	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  0120e	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2919 : 			flag = checkCharObjPointStatus(nowGx + dx, nowGy + dy, CHAROBJ_TYPE_USER_NPC, CHR_STATUS_BATTLE | CHR_STATUS_WATCH);

  01213	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  01218	03 45 b4	 add	 eax, DWORD PTR _dy$2[ebp]
  0121b	68 00 44 00 00	 push	 17408			; 00004400H
  01220	6a 08		 push	 8
  01222	50		 push	 eax
  01223	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  01228	03 45 b8	 add	 eax, DWORD PTR _dx$7[ebp]
  0122b	50		 push	 eax
  0122c	e8 00 00 00 00	 call	 ?checkCharObjPointStatus@@YAHHHFI@Z ; checkCharObjPointStatus

; 2920 : 			if ((partyModeFlag == 0 || (partyModeFlag == 1 && (pc.status & CHR_STATUS_LEADER) != 0))
; 2921 : 				&& flag == 1 && eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0) {

  01231	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?partyModeFlag@@3FA ; partyModeFlag
  01238	83 c4 1c	 add	 esp, 28			; 0000001cH
  0123b	66 85 c9	 test	 cx, cx
  0123e	74 1a		 je	 SHORT $LN198@fieldProc
  01240	66 83 f9 01	 cmp	 cx, 1
  01244	0f 85 a8 00 00
	00		 jne	 $LN199@fieldProc
  0124a	f7 05 a4 00 00
	00 00 01 00 00	 test	 DWORD PTR ?pc@@3UPC@@A+164, 256 ; 00000100H
  01254	0f 84 98 00 00
	00		 je	 $LN199@fieldProc
$LN198@fieldProc:
  0125a	83 f8 01	 cmp	 eax, 1
  0125d	0f 85 8f 00 00
	00		 jne	 $LN199@fieldProc
  01263	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  0126b	0f 85 81 00 00
	00		 jne	 $LN199@fieldProc
  01271	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  01279	75 77		 jne	 SHORT $LN199@fieldProc
  0127b	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  01283	75 6d		 jne	 SHORT $LN199@fieldProc

; 2922 : 				if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime()) {

  01285	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0128a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  01290	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  01296	3b c8		 cmp	 ecx, eax
  01298	73 58		 jae	 SHORT $LN199@fieldProc

; 2923 : 					if (bNewServer) {

  0129a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  012a1	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  012a7	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  012ad	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  012b3	74 1a		 je	 SHORT $LN200@fieldProc

; 2924 : 						if (nowFloor == 9000)

  012b5	81 3d 00 00 00
	00 28 23 00 00	 cmp	 DWORD PTR ?nowFloor@@3HA, 9000 ; nowFloor, 00002328H
  012bf	75 07		 jne	 SHORT $LN202@fieldProc

; 2925 : 							lssproto_LB_send(sockfd, nowGx, nowGy);

  012c1	e8 00 00 00 00	 call	 ?lssproto_LB_send@@YAXHHH@Z ; lssproto_LB_send
  012c6	eb 0c		 jmp	 SHORT $LN266@fieldProc
$LN202@fieldProc:

; 2926 : 						else
; 2927 : 							lssproto_JB_send(sockfd, nowGx, nowGy);

  012c8	e8 00 00 00 00	 call	 ?lssproto_JB_send@@YAXHHH@Z ; lssproto_JB_send

; 2928 : 					}

  012cd	eb 05		 jmp	 SHORT $LN266@fieldProc
$LN200@fieldProc:

; 2929 : 					else
; 2930 : 						old_lssproto_JB_send(sockfd, nowGx, nowGy);

  012cf	e8 00 00 00 00	 call	 ?old_lssproto_JB_send@@YAXHHH@Z ; old_lssproto_JB_send
$LN266@fieldProc:

; 2931 : 					jbSendFlag = 1;

  012d4	83 c4 0c	 add	 esp, 12			; 0000000cH
  012d7	b8 01 00 00 00	 mov	 eax, 1
  012dc	66 a3 00 00 00
	00		 mov	 WORD PTR ?jbSendFlag@@3FA, ax ; jbSendFlag

; 2932 : 					etcSendFlag = 1;

  012e2	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSendFlag@@3FA, ax ; etcSendFlag

; 2933 : 					fieldBtnPushTime = TimeGetTime();

  012e8	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  012ed	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN199@fieldProc:

; 2934 : 				}
; 2935 : 			}
; 2936 : 			play_se(217, 320, 240);

  012f2	68 f0 00 00 00	 push	 240			; 000000f0H
  012f7	68 40 01 00 00	 push	 320			; 00000140H
  012fc	68 d9 00 00 00	 push	 217			; 000000d9H
  01301	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  01306	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2937 : 		}
; 2938 : 	}

  01309	eb 08		 jmp	 SHORT $LN193@fieldProc
$LN192@fieldProc:

; 2939 : 	else
; 2940 : 		joinBattleBtn = 0;

  0130b	33 c0		 xor	 eax, eax
  0130d	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtn@@3FA, ax ; joinBattleBtn
$LN193@fieldProc:

; 2941 : 	if (focusId == FIELD_FUNC_JOIN_BATTLE)

  01313	33 c0		 xor	 eax, eax
  01315	83 fb 03	 cmp	 ebx, 3
  01318	0f 94 c0	 sete	 al

; 2942 : 		joinBattleBtnFocus = 1;
; 2943 : 	else
; 2944 : 		joinBattleBtnFocus = 0;
; 2945 : 
; 2946 : 	if (pushId == FIELD_FUNC_DUEL) {

  0131b	83 fe 04	 cmp	 esi, 4
  0131e	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtnFocus@@3FA, ax ; joinBattleBtnFocus
  01324	be 01 00 00 00	 mov	 esi, 1
  01329	0f 85 f3 00 00
	00		 jne	 $LN206@fieldProc

; 2947 : 		duelBtn = 1;

  0132f	66 89 35 00 00
	00 00		 mov	 WORD PTR ?duelBtn@@3FA, si ; duelBtn

; 2948 : 		if (selId == FIELD_FUNC_DUEL) {

  01336	83 ff 04	 cmp	 edi, 4
  01339	0f 85 eb 00 00
	00		 jne	 $LN207@fieldProc

; 2949 : 			int dx, dy;
; 2950 : 			int flag;
; 2951 : 			getRouteData(pc.dir, &dx, &dy);

  0133f	8d 45 b4	 lea	 eax, DWORD PTR _dy$1[ebp]
  01342	50		 push	 eax
  01343	8d 45 b8	 lea	 eax, DWORD PTR _dx$6[ebp]
  01346	50		 push	 eax
  01347	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  0134d	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2952 : 			flag = checkCharObjPoint(nowGx + dx, nowGy + dy, CHAROBJ_TYPE_USER_NPC);

  01352	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  01357	03 45 b4	 add	 eax, DWORD PTR _dy$1[ebp]
  0135a	6a 08		 push	 8
  0135c	50		 push	 eax
  0135d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  01362	03 45 b8	 add	 eax, DWORD PTR _dx$6[ebp]
  01365	50		 push	 eax
  01366	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint

; 2953 : 			if ((partyModeFlag == 0 || (partyModeFlag == 1 && (pc.status & CHR_STATUS_LEADER) != 0))
; 2954 : 				&& flag == TRUE && eventWarpSendFlag == 0 && eventEnemySendFlag == 0 && sendEnFlag == 0) {

  0136b	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?partyModeFlag@@3FA ; partyModeFlag
  01372	83 c4 18	 add	 esp, 24			; 00000018H
  01375	66 85 c9	 test	 cx, cx
  01378	74 15		 je	 SHORT $LN210@fieldProc
  0137a	66 3b ce	 cmp	 cx, si
  0137d	0f 85 86 00 00
	00		 jne	 $LN211@fieldProc
  01383	f7 05 a4 00 00
	00 00 01 00 00	 test	 DWORD PTR ?pc@@3UPC@@A+164, 256 ; 00000100H
  0138d	74 7a		 je	 SHORT $LN211@fieldProc
$LN210@fieldProc:
  0138f	83 f8 01	 cmp	 eax, 1
  01392	75 75		 jne	 SHORT $LN211@fieldProc
  01394	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventWarpSendFlag@@3FA, 0 ; eventWarpSendFlag
  0139c	75 6b		 jne	 SHORT $LN211@fieldProc
  0139e	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?eventEnemySendFlag@@3FA, 0 ; eventEnemySendFlag
  013a6	75 61		 jne	 SHORT $LN211@fieldProc
  013a8	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?sendEnFlag@@3FA, 0 ; sendEnFlag
  013b0	75 57		 jne	 SHORT $LN211@fieldProc

; 2955 : 				if (fieldBtnPushTime + FIELD_BTN_PUSH_WAIT < TimeGetTime()) {

  013b2	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  013b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?fieldBtnPushTime@@3IA ; fieldBtnPushTime
  013bd	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  013c3	3b c8		 cmp	 ecx, eax
  013c5	73 42		 jae	 SHORT $LN211@fieldProc

; 2956 : 					if (bNewServer)

  013c7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  013ce	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  013d4	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  013da	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  013e0	74 07		 je	 SHORT $LN212@fieldProc

; 2957 : 						lssproto_DU_send(sockfd, nowGx, nowGy);

  013e2	e8 00 00 00 00	 call	 ?lssproto_DU_send@@YAXHHH@Z ; lssproto_DU_send
  013e7	eb 05		 jmp	 SHORT $LN267@fieldProc
$LN212@fieldProc:

; 2958 : 					else
; 2959 : 						old_lssproto_DU_send(sockfd, nowGx, nowGy);

  013e9	e8 00 00 00 00	 call	 ?old_lssproto_DU_send@@YAXHHH@Z ; old_lssproto_DU_send
$LN267@fieldProc:

; 2960 : 					duelSendFlag = 1;

  013ee	83 c4 0c	 add	 esp, 12			; 0000000cH
  013f1	66 89 35 00 00
	00 00		 mov	 WORD PTR ?duelSendFlag@@3FA, si ; duelSendFlag

; 2961 : 					etcSendFlag = 1;

  013f8	66 89 35 00 00
	00 00		 mov	 WORD PTR ?etcSendFlag@@3FA, si ; etcSendFlag

; 2962 : 					fieldBtnPushTime = TimeGetTime();

  013ff	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  01404	a3 00 00 00 00	 mov	 DWORD PTR ?fieldBtnPushTime@@3IA, eax ; fieldBtnPushTime
$LN211@fieldProc:

; 2963 : 				}
; 2964 : 			}
; 2965 : 			play_se(217, 320, 240);

  01409	68 f0 00 00 00	 push	 240			; 000000f0H
  0140e	68 40 01 00 00	 push	 320			; 00000140H
  01413	68 d9 00 00 00	 push	 217			; 000000d9H
  01418	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0141d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2966 : 		}
; 2967 : 	}

  01420	eb 08		 jmp	 SHORT $LN207@fieldProc
$LN206@fieldProc:

; 2968 : 	else
; 2969 : 		duelBtn = 0;

  01422	33 c0		 xor	 eax, eax
  01424	66 a3 00 00 00
	00		 mov	 WORD PTR ?duelBtn@@3FA, ax ; duelBtn
$LN207@fieldProc:

; 2970 : 	if (focusId == FIELD_FUNC_DUEL)

  0142a	33 c0		 xor	 eax, eax
  0142c	83 fb 04	 cmp	 ebx, 4
  0142f	0f 94 c0	 sete	 al

; 2971 : 		duelBtnFocus = 1;
; 2972 : 	else
; 2973 : 		duelBtnFocus = 0;
; 2974 : 	if (selId == FIELD_FUNC_ACT || (joy_trg[1] & JOY_CTRL_W)) {

  01432	66 a3 00 00 00
	00		 mov	 WORD PTR ?duelBtnFocus@@3FA, ax ; duelBtnFocus
  01438	83 ff 05	 cmp	 edi, 5
  0143b	74 0c		 je	 SHORT $LN217@fieldProc
  0143d	f7 05 04 00 00
	00 00 00 00 40	 test	 DWORD PTR ?joy_trg@@3PAKA+4, 1073741824 ; 40000000H
  01447	74 4c		 je	 SHORT $LN219@fieldProc
$LN217@fieldProc:

; 2975 : 		if (actBtn == 0) {

  01449	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?actBtn@@3FA, 0 ; actBtn
  01451	75 3d		 jne	 SHORT $LN218@fieldProc

; 2976 : 			closeEtcSwitch();

  01453	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 2977 : 			closeJoinChannelWN();

  01458	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN

; 2978 : 			if (CheckMenuFlag())

  0145d	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  01462	85 c0		 test	 eax, eax
  01464	74 05		 je	 SHORT $LN220@fieldProc

; 2979 : 				InitMenu2();

  01466	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN220@fieldProc:

; 2980 : 			initCharActionAnimeChange();

  0146b	e8 00 00 00 00	 call	 ?initCharActionAnimeChange@@YAXXZ ; initCharActionAnimeChange

; 2981 : 			actBtn = 1;
; 2982 : 			play_se(202, 320, 240);

  01470	68 f0 00 00 00	 push	 240			; 000000f0H
  01475	68 40 01 00 00	 push	 320			; 00000140H
  0147a	68 ca 00 00 00	 push	 202			; 000000caH
  0147f	66 89 35 00 00
	00 00		 mov	 WORD PTR ?actBtn@@3FA, si ; actBtn
  01486	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0148b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2983 : 		}

  0148e	eb 05		 jmp	 SHORT $LN219@fieldProc
$LN218@fieldProc:

; 2984 : 		else
; 2985 : 			closeCharActionAnimeChange();

  01490	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange
$LN219@fieldProc:

; 2986 : 	}
; 2987 : 	if (actBtn == 1 && charActionAnimeChange())

  01495	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0149d	75 11		 jne	 SHORT $LN221@fieldProc
  0149f	e8 00 00 00 00	 call	 ?charActionAnimeChange@@YAHXZ ; charActionAnimeChange
  014a4	85 c0		 test	 eax, eax
  014a6	74 08		 je	 SHORT $LN221@fieldProc

; 2988 : 		actBtn = 0;

  014a8	33 c0		 xor	 eax, eax
  014aa	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn
$LN221@fieldProc:

; 2989 : 	if (focusId == FIELD_FUNC_ACT)

  014b0	33 c0		 xor	 eax, eax
  014b2	83 fb 05	 cmp	 ebx, 5
  014b5	0f 94 c0	 sete	 al

; 2990 : 		actBtnForcus = 1;
; 2991 : 	else
; 2992 : 		actBtnForcus = 0;
; 2993 : 
; 2994 : 	if (mailLamp) {

  014b8	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?mailLamp@@3FA, 0 ; mailLamp
  014c0	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtnForcus@@3FA, ax ; actBtnForcus
  014c6	74 45		 je	 SHORT $LN224@fieldProc

; 2995 : 		if (mailLampFlashTime == 0) {

  014c8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?mailLampFlashTime@@3IA, 0 ; mailLampFlashTime
  014cf	75 0e		 jne	 SHORT $LN226@fieldProc

; 2996 : 			mailLampDrawFlag = 1;

  014d1	66 89 35 00 00
	00 00		 mov	 WORD PTR ?mailLampDrawFlag@@3FA, si ; mailLampDrawFlag

; 2997 : 			mailLampFlashTime = TimeGetTime();

  014d8	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 2998 : 		}

  014dd	eb 36		 jmp	 SHORT $LN268@fieldProc
$LN226@fieldProc:

; 2999 : 		else if (mailLampFlashTime + FIELD_MAIL_LAMP_FLASH_TIME < TimeGetTime()) {

  014df	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  014e4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mailLampFlashTime@@3IA ; mailLampFlashTime
  014ea	81 c1 e8 03 00
	00		 add	 ecx, 1000		; 000003e8H
  014f0	3b c8		 cmp	 ecx, eax
  014f2	73 26		 jae	 SHORT $LN225@fieldProc

; 3000 : 			mailLampDrawFlag++;

  014f4	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?mailLampDrawFlag@@3FA ; mailLampDrawFlag
  014fa	66 48		 dec	 ax

; 3001 : 			mailLampDrawFlag &= 1;

  014fc	66 83 e0 01	 and	 ax, 1
  01500	66 a3 00 00 00
	00		 mov	 WORD PTR ?mailLampDrawFlag@@3FA, ax ; mailLampDrawFlag

; 3002 : 			mailLampFlashTime = TimeGetTime();

  01506	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 3003 : 		}
; 3004 : 	}

  0150b	eb 08		 jmp	 SHORT $LN268@fieldProc
$LN224@fieldProc:

; 3005 : 	else {
; 3006 : 		mailLampDrawFlag = 0;

  0150d	33 c0		 xor	 eax, eax
  0150f	66 a3 00 00 00
	00		 mov	 WORD PTR ?mailLampDrawFlag@@3FA, ax ; mailLampDrawFlag
$LN268@fieldProc:

; 3007 : 		mailLampFlashTime = 0;
; 3008 : 	}
; 3009 : }

  01515	a3 00 00 00 00	 mov	 DWORD PTR ?mailLampFlashTime@@3IA, eax ; mailLampFlashTime
$LN225@fieldProc:
  0151a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0151d	5f		 pop	 edi
  0151e	5e		 pop	 esi
  0151f	33 cd		 xor	 ecx, ebp
  01521	5b		 pop	 ebx
  01522	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01527	8b e5		 mov	 esp, ebp
  01529	5d		 pop	 ebp
  0152a	c3		 ret	 0
?fieldProc@@YAXXZ ENDP					; fieldProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?resetFieldProc@@YAXXZ
_TEXT	SEGMENT
?resetFieldProc@@YAXXZ PROC				; resetFieldProc, COMDAT

; 2099 : 	actBtn = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2100 : 	menuBtn = 0;

  00008	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtn@@3FA, ax ; menuBtn

; 2101 : 	fieldInfoTime = 0;

  0000e	a3 00 00 00 00	 mov	 DWORD PTR ?fieldInfoTime@@3IA, eax ; fieldInfoTime

; 2102 : #ifdef __PHONEMESSAGE
; 2103 : 	msgBtn = 0;
; 2104 : #endif
; 2105 : 	channelWNFlag = 0;

  00013	66 a3 00 00 00
	00		 mov	 WORD PTR ?channelWNFlag@@3FA, ax ; channelWNFlag

; 2106 : #ifdef _STREET_VENDOR
; 2107 : 	sStreetVendorBtn = 0;

  00019	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 2108 : 	sStreetVendorBuyBtn = 0;

  0001f	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 2109 : #else
; 2110 : #ifdef _TABLEOFSKILL
; 2111 : 	skillBtn = 0;
; 2112 : #endif
; 2113 : #endif
; 2114 : 	helpBtn = 0;

  00025	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpBtn@@3FA, ax ; helpBtn

; 2115 : }

  0002b	c3		 ret	 0
?resetFieldProc@@YAXXZ ENDP				; resetFieldProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\field.cpp
;	COMDAT ?initFieldProc@@YAXXZ
_TEXT	SEGMENT
?initFieldProc@@YAXXZ PROC				; initFieldProc, COMDAT

; 2051 : 	int i;
; 2052 : 
; 2053 : 	drawFieldButtonFlag = 1;

  00000	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 2054 : 	menuBtn = 0;

  00007	33 c0		 xor	 eax, eax
  00009	b9 01 00 00 00	 mov	 ecx, 1
  0000e	66 a3 00 00 00
	00		 mov	 WORD PTR ?menuBtn@@3FA, ax ; menuBtn
  00014	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?drawFieldButtonFlag@@3FA, cx ; drawFieldButtonFlag

; 2055 : 	cardBtn = 0;

  0001b	66 a3 00 00 00
	00		 mov	 WORD PTR ?cardBtn@@3FA, ax ; cardBtn

; 2056 : 	partyBtn = 0;

  00021	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyBtn@@3FA, ax ; partyBtn

; 2057 : 	tradeBtn = 0;

  00027	66 a3 00 00 00
	00		 mov	 WORD PTR ?tradeBtn@@3FA, ax ; tradeBtn

; 2058 : 	// initPcAll()?î ¸î?î??îî??????????????
; 2059 : 	//	mailLamp = 0;
; 2060 : #ifdef __PHONEMESSAGE
; 2061 : 	msgBtn = 0;  //LeiBoy 2002 Jan.26
; 2062 : #endif
; 2063 : #ifdef _STREET_VENDOR
; 2064 : 	sStreetVendorBtn = 0;

  0002d	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBtn@@3FA, ax ; sStreetVendorBtn

; 2065 : 	sStreetVendorBuyBtn = 0;

  00033	66 a3 00 00 00
	00		 mov	 WORD PTR ?sStreetVendorBuyBtn@@3FA, ax ; sStreetVendorBuyBtn

; 2066 : #else
; 2067 : #ifdef _TABLEOFSKILL				// (ä¸å¯å¼) Syu ADD 7.0 æ°å¢äººç©æè½è¡¨å
; 2068 : 	skillBtn = 0;
; 2069 : #endif
; 2070 : #endif
; 2071 : #ifdef _FRIENDCHANNEL      //ROG ADD å¥½åé¢é
; 2072 : 	chatRoomBtn = 0;

  00039	66 a3 00 00 00
	00		 mov	 WORD PTR ?chatRoomBtn@@3FA, ax ; chatRoomBtn

; 2073 : 	SelRoomBtn = 0;

  0003f	66 a3 00 00 00
	00		 mov	 WORD PTR ?SelRoomBtn@@3FA, ax ; SelRoomBtn

; 2074 : 	TalkMode = 0;

  00045	a3 00 00 00 00	 mov	 DWORD PTR ?TalkMode@@3HA, eax ; TalkMode

; 2075 : #endif
; 2076 : 	mailLampDrawFlag = 0;

  0004a	66 a3 00 00 00
	00		 mov	 WORD PTR ?mailLampDrawFlag@@3FA, ax ; mailLampDrawFlag

; 2077 : 	mailLampFlashTime = 0;

  00050	a3 00 00 00 00	 mov	 DWORD PTR ?mailLampFlashTime@@3IA, eax ; mailLampFlashTime

; 2078 : 	joinBattleBtn = 0;

  00055	66 a3 00 00 00
	00		 mov	 WORD PTR ?joinBattleBtn@@3FA, ax ; joinBattleBtn

; 2079 : 	duelBtn = 0;

  0005b	66 a3 00 00 00
	00		 mov	 WORD PTR ?duelBtn@@3FA, ax ; duelBtn

; 2080 : 	actBtn = 0;

  00061	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtn@@3FA, ax ; actBtn

; 2081 : 	actBtnForcus = 0;

  00067	66 a3 00 00 00
	00		 mov	 WORD PTR ?actBtnForcus@@3FA, ax ; actBtnForcus

; 2082 : 	nowActMode = 0;

  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?nowActMode@@3HA, eax ; nowActMode

; 2083 : 	drawTimeAnimeFlag = 1;

  00072	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?drawTimeAnimeFlag@@3FA, cx ; drawTimeAnimeFlag
  00079	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA, xmm0
  00080	c7 05 38 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fieldBtnHitId@@3PAHA+56, -2 ; fffffffeH
  0008a	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA+16, xmm0

; 2084 : 
; 2085 : 	for (i = 0; i < FIELD_FUNC_END; i++)
; 2086 : 		fieldBtnHitId[i] = -2;
; 2087 : 	etcSendFlag = 0;

  00091	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSendFlag@@3FA, ax ; etcSendFlag
  00097	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fieldBtnHitId@@3PAHA+32, xmm0

; 2088 : 	etcSwitchChangeFlag = 0;

  0009e	66 a3 00 00 00
	00		 mov	 WORD PTR ?etcSwitchChangeFlag@@3FA, ax ; etcSwitchChangeFlag
  000a4	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?fieldBtnHitId@@3PAHA+48, xmm0

; 2089 : 	fieldInfoTime = 0;

  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?fieldInfoTime@@3IA, eax ; fieldInfoTime

; 2090 : 	partyBtnEnableFlag = 1;

  000b1	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?partyBtnEnableFlag@@3FA, cx ; partyBtnEnableFlag

; 2091 : 	joinBattleBtnEnableFlag = 1;

  000b8	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?joinBattleBtnEnableFlag@@3FA, cx ; joinBattleBtnEnableFlag

; 2092 : 	joinBattleHelpMsgFlag = 1;

  000bf	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?joinBattleHelpMsgFlag@@3FA, cx ; joinBattleHelpMsgFlag

; 2093 : 	//tradeBtnEnableFlag = 1;
; 2094 : }

  000c6	c3		 ret	 0
?initFieldProc@@YAXXZ ENDP				; initFieldProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT __snprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__snprintf PROC						; COMDAT

; 1947 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 14	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 10	 push	 DWORD PTR __Format$[ebp]
  0000c	ff 75 0c	 push	 DWORD PTR __BufferCount$[ebp]
  0000f	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00012	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00017	8b 08		 mov	 ecx, DWORD PTR [eax]
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	83 c9 01	 or	 ecx, 1
  0001f	51		 push	 ecx
  00020	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00025	83 c9 ff	 or	 ecx, -1
  00028	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002b	85 c0		 test	 eax, eax
  0002d	0f 48 c1	 cmovs	 eax, ecx

; 1948 :         int _Result;
; 1949 :         va_list _ArgList;
; 1950 :         __crt_va_start(_ArgList, _Format);
; 1951 :         _Result = _vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);
; 1952 :         __crt_va_end(_ArgList);
; 1953 :         return _Result;
; 1954 :     }

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
__snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
