; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\Á»Í©??.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?count_Á»Í©??@@3HA				; count_Á»Í©??
PUBLIC	?data??@@3PAUŒ√?STRUCT@@A			; data??
PUBLIC	?pAct??@@3PAUaction@@A				; pAct??
PUBLIC	?pActÏ—⁄™@@3PAUaction@@A			; pActÏ—⁄™
_BSS	SEGMENT
?pAct??@@3PAUaction@@A DD 01H DUP (?)			; pAct??
?pActÏ—⁄™@@3PAUaction@@A DD 01H DUP (?)			; pActÏ—⁄™
_BSS	ENDS
_DATA	SEGMENT
?count_Á»Í©??@@3HA DD 01H				; count_Á»Í©??
	ORG $+4
?data??@@3PAUŒ√?STRUCT@@A DD 019373H			; data??
	DB	0ecH, 0e9H, '??', 0e0H, 0bbH, 00H
	ORG $+13
	DD	01H
	ORG $+5572
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?delAct??@@YAXXZ				; delAct??
PUBLIC	?InitÁ»Í©???œ¢@@YAXXZ				; InitÁ»Í©???œ¢
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP@		; `string'
PUBLIC	??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8@	; `string'
PUBLIC	??_C@_04MFANEHND@?$DP?$DP?$DP?$DP@		; `string'
PUBLIC	??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8@	; `string'
PUBLIC	??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@		; `string'
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd@			; `string'
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBuffer??Í»ˆ«@@YAHHHEHH@Z:PROC		; StockDispBuffer??Í»ˆ«
EXTRN	??ˆ¢??Ù©ıª@@YAHPAUaction@@PAF1@Z:PROC		; ?ˆ¢??Ù©ıª
EXTRN	?StockChatBufferLineExt@@YAXPADEHH@Z:PROC	; StockChatBufferLineExt
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?button@@3PAHA DD 05H DUP (?)				; button
?nPage@@3HA DD	01H DUP (?)				; nPage
?nPageTotal@@3HA DD 01H DUP (?)				; nPageTotal
_BSS	ENDS
;	COMDAT ?width@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
_BSS	SEGMENT
?width@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA DW 01H DUP (?)	; `InitÁ»Í©???œ¢'::`2'::width
_BSS	ENDS
;	COMDAT ?height@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
_BSS	SEGMENT
?height@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA DW 01H DUP (?)	; `InitÁ»Í©???œ¢'::`2'::height
_BSS	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd@ DB '%d/%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@
CONST	SEGMENT
??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@ DB '  ??  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8@
CONST	SEGMENT
??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8@ DB 'CANCELCURRENTCHENHAO''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MFANEHND@?$DP?$DP?$DP?$DP@
CONST	SEGMENT
??_C@_04MFANEHND@?$DP?$DP?$DP?$DP@ DB '????', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8@
CONST	SEGMENT
??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8@ DB 'SETCURRENTCHENHAO''%d'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB@
CONST	SEGMENT
??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB@ DB '?'
	DB	'?', 0eaH, 0f3H, '?', 0f9H, 0daH, 0deH, 0c5H, 0e9H, 0c4H, '???'
	DB	'?', 0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP@
CONST	SEGMENT
??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP@ DB '?', 0f6H, 0c7H, '??', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?curSel@@3HA DD	0ffffffffH				; curSel
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\Á»Í©??.cpp
;	COMDAT ?InitÁ»Í©???œ¢@@YAXXZ
_TEXT	SEGMENT
_BmpNo$ = -96						; size = 4
_y$1$ = -92						; size = 4
_count_this_page$1$ = -88				; size = 4
_x2$1 = -88						; size = 2
_y2$2 = -84						; size = 2
_x$1$ = -80						; size = 4
_buf$3 = -76						; size = 50
_buf$4 = -56						; size = 30
_buf$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
?InitÁ»Í©???œ¢@@YAXXZ PROC				; InitÁ»Í©???œ¢, COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 52   : 	int BmpNo;
; 53   : 	static short width = 0, height = 0;
; 54   : 	if (width == 0)

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?width@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
  00016	66 85 c0	 test	 ax, ax
  00019	75 29		 jne	 SHORT $LN5@Init

; 55   : 	{
; 56   : 		realGetNo(IMAGE_Áß∞Âè∑ÂõæÊ°£, (U4 *)&BmpNo);

  0001b	8d 45 a0	 lea	 eax, DWORD PTR _BmpNo$[ebp]
  0001e	50		 push	 eax
  0001f	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  00024	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 57   : 		realGetWH(BmpNo, &width, &height);			//Ëé∑ÂèñÂõæÊ°£Â∞∫ÂØ∏

  00029	68 00 00 00 00	 push	 OFFSET ?height@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
  0002e	68 00 00 00 00	 push	 OFFSET ?width@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
  00033	ff 75 a0	 push	 DWORD PTR _BmpNo$[ebp]
  00036	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH
  0003b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?width@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
  00041	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@Init:

; 58   : 	}
; 59   : 
; 60   : 	//Ê†πÊçÆÂàÜËæ®ÁéáËá™ÈÄÇÂ∫îÂ∑¶‰∏äËßíx,y
; 61   : 	extern int DEF_APPSIZEX, DEF_APPSIZEY;
; 62   : 	int x = (DEF_APPSIZEX - width) / 2;

  00044	0f bf c8	 movsx	 ecx, ax
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  0004c	53		 push	 ebx
  0004d	2b c1		 sub	 eax, ecx

; 63   : 	int y = (DEF_APPSIZEY - height) / 2;

  0004f	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?height@?1??InitÁ»Í©???œ¢@@YAXXZ@4FA
  00056	99		 cdq
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	2b c2		 sub	 eax, edx
  0005b	8b f8		 mov	 edi, eax
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00062	2b c1		 sub	 eax, ecx
  00064	d1 ff		 sar	 edi, 1
  00066	99		 cdq

; 64   : 
; 65   : 
; 66   : 
; 67   : 	//ÁîªÂõæ
; 68   : 	StockDispBufferÁªùÂØπ‰ΩçÁΩÆ(x, y, DISP_PRIO_MENU, IMAGE_Áß∞Âè∑ÂõæÊ°£, 1);

  00067	6a 01		 push	 1
  00069	2b c2		 sub	 eax, edx
  0006b	89 7d b0	 mov	 DWORD PTR _x$1$[ebp], edi
  0006e	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  00073	8b d8		 mov	 ebx, eax
  00075	d1 fb		 sar	 ebx, 1
  00077	6a 68		 push	 104			; 00000068H
  00079	53		 push	 ebx
  0007a	57		 push	 edi
  0007b	89 5d a4	 mov	 DWORD PTR _y$1$[ebp], ebx
  0007e	e8 00 00 00 00	 call	 ?StockDispBuffer??Í»ˆ«@@YAHHHEHH@Z ; StockDispBuffer??Í»ˆ«

; 69   : 
; 70   : 	//Â∑¶Âè≥ÁÆ≠Â§¥
; 71   : 	button[0] = StockDispBuffer(x + 50, y + 310, DISP_PRIO_IME4, 55104, 2);

  00083	6a 02		 push	 2
  00085	68 40 d7 00 00	 push	 55104			; 0000d740H
  0008a	8d b3 36 01 00
	00		 lea	 esi, DWORD PTR [ebx+310]
  00090	6a 6a		 push	 106			; 0000006aH
  00092	8d 5f 32	 lea	 ebx, DWORD PTR [edi+50]
  00095	56		 push	 esi
  00096	53		 push	 ebx
  00097	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 72   : 	button[1] = StockDispBuffer(x + 110, y + 310, DISP_PRIO_IME4, 55105, 2);

  0009c	6a 02		 push	 2
  0009e	68 41 d7 00 00	 push	 55105			; 0000d741H
  000a3	6a 6a		 push	 106			; 0000006aH
  000a5	83 c7 6e	 add	 edi, 110		; 0000006eH
  000a8	a3 00 00 00 00	 mov	 DWORD PTR ?button@@3PAHA, eax
  000ad	56		 push	 esi
  000ae	57		 push	 edi
  000af	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 73   : 
; 74   : 	//ÊòæÁ§∫Áß∞Âè∑
; 75   : 	StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ËÆæÁΩÆÁß∞Âè∑", 0);	

  000b4	8b 75 a4	 mov	 esi, DWORD PTR _y$1$[ebp]
  000b7	6a 00		 push	 0
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP@
  000be	6a 04		 push	 4
  000c0	a3 04 00 00 00	 mov	 DWORD PTR ?button@@3PAHA+4, eax
  000c5	8d 86 54 01 00
	00		 lea	 eax, DWORD PTR [esi+340]
  000cb	6a 01		 push	 1
  000cd	50		 push	 eax
  000ce	53		 push	 ebx
  000cf	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  000d4	83 c4 54	 add	 esp, 84			; 00000054H

; 76   : 	if (MakeHitBox(x + 50-5, y + 340-5, x + 50+60, y + 340+20, DISP_PRIO_IME4) == TRUE)

  000d7	8d 86 68 01 00
	00		 lea	 eax, DWORD PTR [esi+360]
  000dd	8d 8e 4f 01 00
	00		 lea	 ecx, DWORD PTR [esi+335]
  000e3	6a 6a		 push	 106			; 0000006aH
  000e5	50		 push	 eax
  000e6	57		 push	 edi
  000e7	8b 7d b0	 mov	 edi, DWORD PTR _x$1$[ebp]
  000ea	51		 push	 ecx
  000eb	8d 47 2d	 lea	 eax, DWORD PTR [edi+45]
  000ee	50		 push	 eax
  000ef	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000f4	83 c4 14	 add	 esp, 20			; 00000014H
  000f7	83 f8 01	 cmp	 eax, 1
  000fa	75 7c		 jne	 SHORT $LN7@Init

; 77   : 	{
; 78   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  000fc	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  00102	74 74		 je	 SHORT $LN7@Init

; 79   : 		{
; 80   : 			if (dataÁß∞Âè∑[curSel].time == 0)

  00104	a1 00 00 00 00	 mov	 eax, DWORD PTR ?curSel@@3HA
  00109	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00110	2b c8		 sub	 ecx, eax
  00112	83 3c 8d 18 00
	00 00 00	 cmp	 DWORD PTR ?data??@@3PAUŒ√?STRUCT@@A[ecx*4+24], 0
  0011a	75 24		 jne	 SHORT $LN8@Init

; 81   : 			{
; 82   : 				StockChatBufferLineExt("‰Ω†Ê≤°ÊúâÊùÉÈôê‰ΩøÁî®Ëøô‰∏™Áß∞Âè∑ÔºÅ", FONT_PAL_RED, 0);

  0011c	6a 00		 push	 0
  0011e	6a 00		 push	 0
  00120	6a 06		 push	 6
  00122	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB@
  00127	e8 00 00 00 00	 call	 ?StockChatBufferLineExt@@YAXPADEHH@Z ; StockChatBufferLineExt
  0012c	83 c4 10	 add	 esp, 16			; 00000010H
  0012f	5f		 pop	 edi

; 200  : 	}
; 201  : 
; 202  : }

  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx
  00132	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00135	33 cd		 xor	 ecx, ebp
  00137	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013c	8b e5		 mov	 esp, ebp
  0013e	5d		 pop	 ebp
  0013f	c3		 ret	 0
$LN8@Init:

; 83   : 				return;
; 84   : 			}
; 85   : 
; 86   : 			void LSSPROTO_203_SEND(int fd, char* data);
; 87   : 			extern unsigned int sockfd;
; 88   : 			char buf[50];
; 89   : 			sprintf(buf, "SETCURRENTCHENHAO'%d'", dataÁß∞Âè∑[curSel].bmpNO);

  00140	ff 34 8d 00 00
	00 00		 push	 DWORD PTR ?data??@@3PAUŒ√?STRUCT@@A[ecx*4]
  00147	8d 45 b4	 lea	 eax, DWORD PTR _buf$3[ebp]
  0014a	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8@
  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 _sprintf

; 90   : 			LSSPROTO_203_SEND(sockfd, buf);

  00155	8d 45 b4	 lea	 eax, DWORD PTR _buf$3[ebp]
  00158	50		 push	 eax
  00159	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0015f	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  00164	83 c4 14	 add	 esp, 20			; 00000014H
  00167	5f		 pop	 edi

; 200  : 	}
; 201  : 
; 202  : }

  00168	5e		 pop	 esi
  00169	5b		 pop	 ebx
  0016a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016d	33 cd		 xor	 ecx, ebp
  0016f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00174	8b e5		 mov	 esp, ebp
  00176	5d		 pop	 ebp
  00177	c3		 ret	 0
$LN7@Init:

; 91   : 			return;
; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	//??Áß∞Âè∑
; 96   : 	StockFontBuffer(x + 200, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "??Áß∞Âè∑", 0);	

  00178	6a 00		 push	 0
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_04MFANEHND@?$DP?$DP?$DP?$DP@
  0017f	6a 04		 push	 4
  00181	6a 01		 push	 1
  00183	8d 9e 54 01 00
	00		 lea	 ebx, DWORD PTR [esi+340]
  00189	8d 87 c8 00 00
	00		 lea	 eax, DWORD PTR [edi+200]
  0018f	53		 push	 ebx
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 97   : 	if (MakeHitBox(x + 200 - 5, y + 340 - 5, x + 200 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  00196	6a 6a		 push	 106			; 0000006aH
  00198	8d 86 68 01 00
	00		 lea	 eax, DWORD PTR [esi+360]
  0019e	50		 push	 eax
  0019f	8d 87 04 01 00
	00		 lea	 eax, DWORD PTR [edi+260]
  001a5	50		 push	 eax
  001a6	8d 86 4f 01 00
	00		 lea	 eax, DWORD PTR [esi+335]
  001ac	50		 push	 eax
  001ad	8d 87 c3 00 00
	00		 lea	 eax, DWORD PTR [edi+195]
  001b3	50		 push	 eax
  001b4	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001b9	83 c4 2c	 add	 esp, 44			; 0000002cH
  001bc	83 f8 01	 cmp	 eax, 1
  001bf	75 2c		 jne	 SHORT $LN10@Init

; 98   : 	{
; 99   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  001c1	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  001c7	74 24		 je	 SHORT $LN10@Init

; 100  : 		{
; 101  : 			void LSSPROTO_203_SEND(int fd, char* data);
; 102  : 			extern unsigned int sockfd;
; 103  : 			LSSPROTO_203_SEND(sockfd, "CANCELCURRENTCHENHAO'");

  001c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8@
  001ce	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001d4	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  001d9	83 c4 08	 add	 esp, 8
  001dc	5f		 pop	 edi

; 200  : 	}
; 201  : 
; 202  : }

  001dd	5e		 pop	 esi
  001de	5b		 pop	 ebx
  001df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e2	33 cd		 xor	 ecx, ebp
  001e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e9	8b e5		 mov	 esp, ebp
  001eb	5d		 pop	 ebp
  001ec	c3		 ret	 0
$LN10@Init:

; 104  : 			return;
; 105  : 		}
; 106  : 	}
; 107  : 
; 108  : 	//ÂÖ≥Èó≠
; 109  : 	StockFontBuffer(x + 330, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  ÂÖ≥Èó≠  ", 0);

  001ed	6a 00		 push	 0
  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@
  001f4	6a 04		 push	 4
  001f6	6a 01		 push	 1
  001f8	8d 87 4a 01 00
	00		 lea	 eax, DWORD PTR [edi+330]
  001fe	53		 push	 ebx
  001ff	50		 push	 eax
  00200	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 110  : 	if (MakeHitBox(x + 330 - 5, y + 340 - 5, x + 330 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  00205	6a 6a		 push	 106			; 0000006aH
  00207	8d 86 68 01 00
	00		 lea	 eax, DWORD PTR [esi+360]
  0020d	50		 push	 eax
  0020e	8d 87 86 01 00
	00		 lea	 eax, DWORD PTR [edi+390]
  00214	50		 push	 eax
  00215	8d 86 4f 01 00
	00		 lea	 eax, DWORD PTR [esi+335]
  0021b	50		 push	 eax
  0021c	8d 87 45 01 00
	00		 lea	 eax, DWORD PTR [edi+325]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00228	83 c4 2c	 add	 esp, 44			; 0000002cH
  0022b	83 f8 01	 cmp	 eax, 1
  0022e	75 23		 jne	 SHORT $LN12@Init

; 111  : 	{
; 112  : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00230	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  00236	74 1b		 je	 SHORT $LN12@Init

; 113  : 		{
; 114  : 			MenuToggleFlag &= ~JOY_CTRL_S;

  00238	81 25 00 00 00
	00 ff ff ff df	 and	 DWORD PTR ?MenuToggleFlag@@3IA, -536870913 ; MenuToggleFlag, dfffffffH
  00242	5f		 pop	 edi

; 200  : 	}
; 201  : 
; 202  : }

  00243	5e		 pop	 esi
  00244	5b		 pop	 ebx
  00245	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00248	33 cd		 xor	 ecx, ebp
  0024a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024f	8b e5		 mov	 esp, ebp
  00251	5d		 pop	 ebp
  00252	c3		 ret	 0
$LN12@Init:

; 115  : 			return;
; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	//ÂèñÁß∞Âè∑‰∏™Êï∞
; 120  : 	int count = count_Ëã±ÈõÑÁß∞Âè∑;

  00253	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?count_Á»Í©??@@3HA ; count_Á»Í©??

; 121  : 
; 122  : 	//ÊÄªÈ°µÈù¢Êï∞
; 123  : 	nPageTotal = (count + 13 - 1) / 13;

  00259	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  0025e	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  00261	f7 e9		 imul	 ecx
  00263	c1 fa 02	 sar	 edx, 2
  00266	8b c2		 mov	 eax, edx
  00268	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0026b	03 c2		 add	 eax, edx

; 124  : 
; 125  : 	//ÊòæÁ§∫ È°µÈù¢/ÊÄªÈ°µÈù¢
; 126  : 	char buf[20];
; 127  : 	sprintf(buf, "%d/%d", nPage + 1, nPageTotal);

  0026d	50		 push	 eax
  0026e	a3 00 00 00 00	 mov	 DWORD PTR ?nPageTotal@@3HA, eax
  00273	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPage@@3HA
  00278	40		 inc	 eax
  00279	50		 push	 eax
  0027a	8d 45 e8	 lea	 eax, DWORD PTR _buf$[ebp]
  0027d	68 00 00 00 00	 push	 OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
  00282	50		 push	 eax
  00283	e8 00 00 00 00	 call	 _sprintf

; 128  : 	StockFontBuffer(x + 65, y + 295, FONT_PRIO_FRONT, FONT_PAL_YELLOW, buf, 0);

  00288	6a 00		 push	 0
  0028a	8d 45 e8	 lea	 eax, DWORD PTR _buf$[ebp]
  0028d	50		 push	 eax
  0028e	6a 04		 push	 4
  00290	6a 01		 push	 1
  00292	8d 86 27 01 00
	00		 lea	 eax, DWORD PTR [esi+295]
  00298	50		 push	 eax
  00299	8d 47 41	 lea	 eax, DWORD PTR [edi+65]
  0029c	50		 push	 eax
  0029d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 129  : 
; 130  : 
; 131  : 	//ÂèñÂΩìÂâçÈ°µÊòæÁ§∫ÁöÑÊï∞Èáè
; 132  : 	int count_this_page = count - nPage * 13;

  002a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPage@@3HA
  002a8	83 c4 28	 add	 esp, 40			; 00000028H
  002ab	6b f1 0d	 imul	 esi, ecx, 13
  002ae	2b de		 sub	 ebx, esi

; 133  : 	count_this_page = (count_this_page >= 13) ? 13 : count_this_page % 13;

  002b0	83 fb 0d	 cmp	 ebx, 13			; 0000000dH
  002b3	7c 07		 jl	 SHORT $LN27@Init
  002b5	bb 0d 00 00 00	 mov	 ebx, 13			; 0000000dH
  002ba	eb 16		 jmp	 SHORT $LN36@Init
$LN27@Init:
  002bc	b8 b1 13 3b b1	 mov	 eax, -1321528399	; b13b13b1H
  002c1	f7 eb		 imul	 ebx
  002c3	c1 fa 02	 sar	 edx, 2
  002c6	8b c2		 mov	 eax, edx
  002c8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002cb	03 c2		 add	 eax, edx
  002cd	6b c0 0d	 imul	 eax, eax, 13
  002d0	03 d8		 add	 ebx, eax
$LN36@Init:

; 134  : 	
; 135  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  002d2	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
  002d5	89 5d a8	 mov	 DWORD PTR _count_this_page$1$[ebp], ebx
  002d8	3b f0		 cmp	 esi, eax
  002da	0f 8d 35 01 00
	00		 jge	 $LN35@Init

; 141  : 
; 142  : 		//ËÆæÂÆöÊñáÂ≠óÂ∑¶‰∏äËßí‰ΩçÁΩÆ
; 143  : 		int x1 = x + 13;

  002e0	8b 7d a4	 mov	 edi, DWORD PTR _y$1$[ebp]
  002e3	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  002ea	2b c6		 sub	 eax, esi
  002ec	83 c7 2f	 add	 edi, 47			; 0000002fH
  002ef	8d 1c 85 18 00
	00 00		 lea	 ebx, DWORD PTR ?data??@@3PAUŒ√?STRUCT@@A[eax*4+24]
$LL4@Init:

; 136  : 	{
; 137  : 		char buf[30];
; 138  : 
; 139  : 		//ÊñáÂ≠óÂ±Ö‰∏≠
; 140  : 		CenteringStr(dataÁß∞Âè∑[i].name, buf, 19);

  002f6	6a 13		 push	 19			; 00000013H
  002f8	8d 45 c8	 lea	 eax, DWORD PTR _buf$4[ebp]
  002fb	50		 push	 eax
  002fc	8d 43 ec	 lea	 eax, DWORD PTR [ebx-20]
  002ff	50		 push	 eax
  00300	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  00305	83 c4 0c	 add	 esp, 12			; 0000000cH

; 144  : 		int y1 = y + 30 + j * 20;
; 145  : 
; 146  : 		//ËæìÂá∫ÊñáÂ≠ó
; 147  : 		if (dataÁß∞Âè∑[i].time != 0)

  00308	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  0030b	74 10		 je	 SHORT $LN13@Init

; 148  : 		{
; 149  : 			if (i == curSel)

  0030d	33 c0		 xor	 eax, eax
  0030f	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?curSel@@3HA
  00315	0f 94 c0	 sete	 al
  00318	83 c0 05	 add	 eax, 5

; 150  : 			{
; 151  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_RED, buf, 0);	//Á∫¢Ëâ≤
; 152  : 			}
; 153  : 			else
; 154  : 			{
; 155  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);	//ÁªøËâ≤
; 156  : 			}
; 157  : 			
; 158  : 		}

  0031b	eb 05		 jmp	 SHORT $LN14@Init
$LN13@Init:

; 159  : 			
; 160  : 		else
; 161  : 			StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GRAY, buf, 0);	//ÁÅ∞Ëâ≤

  0031d	b8 07 00 00 00	 mov	 eax, 7
$LN14@Init:

; 162  : 
; 163  : 		//ÁîªÁªøÊ°ÜÊ°ÜÂπ∂Âà§Êñ≠ÁÇπÂáª
; 164  : 		if (MakeHitBox(x1,y1 -2,x1 + 130, y1+ 17, DISP_PRIO_IME4) == TRUE)

  00322	6a 00		 push	 0
  00324	8d 4d c8	 lea	 ecx, DWORD PTR _buf$4[ebp]
  00327	51		 push	 ecx
  00328	50		 push	 eax
  00329	6a 01		 push	 1
  0032b	8d 47 ef	 lea	 eax, DWORD PTR [edi-17]
  0032e	50		 push	 eax
  0032f	8b 45 b0	 mov	 eax, DWORD PTR _x$1$[ebp]
  00332	83 c0 0d	 add	 eax, 13			; 0000000dH
  00335	50		 push	 eax
  00336	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0033b	8b 4d b0	 mov	 ecx, DWORD PTR _x$1$[ebp]
  0033e	83 c1 0d	 add	 ecx, 13			; 0000000dH
  00341	6a 6a		 push	 106			; 0000006aH
  00343	57		 push	 edi
  00344	8d 81 82 00 00
	00		 lea	 eax, DWORD PTR [ecx+130]
  0034a	50		 push	 eax
  0034b	8d 47 ed	 lea	 eax, DWORD PTR [edi-19]
  0034e	50		 push	 eax
  0034f	51		 push	 ecx
  00350	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00355	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0035b	83 c4 2c	 add	 esp, 44			; 0000002cH
  0035e	83 f8 01	 cmp	 eax, 1
  00361	75 05		 jne	 SHORT $LN2@Init

; 165  : 		{
; 166  : 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  00363	f6 c2 01	 test	 dl, 1
  00366	75 20		 jne	 SHORT $LN30@Init
$LN2@Init:

; 134  : 	
; 135  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  00368	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPage@@3HA
  0036e	46		 inc	 esi
  0036f	6b c1 0d	 imul	 eax, ecx, 13
  00372	83 c3 1c	 add	 ebx, 28			; 0000001cH
  00375	83 c7 14	 add	 edi, 20			; 00000014H
  00378	03 45 a8	 add	 eax, DWORD PTR _count_this_page$1$[ebp]
  0037b	3b f0		 cmp	 esi, eax
  0037d	0f 8c 73 ff ff
	ff		 jl	 $LL4@Init
  00383	e9 93 00 00 00	 jmp	 $LN34@Init
$LN30@Init:

; 167  : 			{
; 168  : 				//‰øùÂ≠òÁÇπÂáªÁöÑÁºñÂè∑
; 169  : 				curSel = i;

  00388	89 35 00 00 00
	00		 mov	 DWORD PTR ?curSel@@3HA, esi

; 170  : 
; 171  : 				//Âà†Èô§ÂéüÊúâÂä®Áîª
; 172  : 				delActÁß∞Âè∑();

  0038e	e8 00 00 00 00	 call	 ?delAct??@@YAXXZ	; delAct??

; 173  : 
; 174  : 				pAct‰∫∫Áâ© = MakeAnimDisp(x + 280, y + 184, pc.graNo, 0);

  00393	8b 5d a4	 mov	 ebx, DWORD PTR _y$1$[ebp]
  00396	8b 7d b0	 mov	 edi, DWORD PTR _x$1$[ebp]
  00399	6a 00		 push	 0
  0039b	ff 35 00 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A
  003a1	8d 83 b8 00 00
	00		 lea	 eax, DWORD PTR [ebx+184]
  003a7	81 c7 18 01 00
	00		 add	 edi, 280		; 00000118H
  003ad	50		 push	 eax
  003ae	57		 push	 edi
  003af	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp

; 175  : 
; 176  : 				short x2, y2;
; 177  : 				if (Ëé∑ÂèñÂä®ÁîªÂ∞∫ÂØ∏(pAct‰∫∫Áâ©, &x2, &y2)) 

  003b4	8d 4d ac	 lea	 ecx, DWORD PTR _y2$2[ebp]
  003b7	a3 00 00 00 00	 mov	 DWORD PTR ?pActÏ—⁄™@@3PAUaction@@A, eax ; pActÏ—⁄™
  003bc	51		 push	 ecx
  003bd	8d 4d a8	 lea	 ecx, DWORD PTR _x2$1[ebp]
  003c0	51		 push	 ecx
  003c1	50		 push	 eax
  003c2	e8 00 00 00 00	 call	 ??ˆ¢??Ù©ıª@@YAHPAUaction@@PAF1@Z ; ?ˆ¢??Ù©ıª
  003c7	83 c4 1c	 add	 esp, 28			; 0000001cH
  003ca	85 c0		 test	 eax, eax
  003cc	0f 84 8d 00 00
	00		 je	 $LN20@Init

; 178  : 				{
; 179  : 					pActÁß∞Âè∑ = MakeAnimDisp(x + 280, y + 184 - y2/2 - 45, dataÁß∞Âè∑[i].bmpNO, 0);

  003d2	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  003d9	2b c6		 sub	 eax, esi
  003db	6a 00		 push	 0
  003dd	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?data??@@3PAUŒ√?STRUCT@@A[eax*4]
  003e4	0f bf 45 ac	 movsx	 eax, WORD PTR _y2$2[ebp]
  003e8	99		 cdq
  003e9	2b c2		 sub	 eax, edx
  003eb	d1 f8		 sar	 eax, 1
  003ed	2b d8		 sub	 ebx, eax
  003ef	81 c3 8b 00 00
	00		 add	 ebx, 139		; 0000008bH
  003f5	53		 push	 ebx
  003f6	57		 push	 edi
  003f7	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  003fc	83 c4 10	 add	 esp, 16			; 00000010H
  003ff	a3 00 00 00 00	 mov	 DWORD PTR ?pAct??@@3PAUaction@@A, eax ; pAct??
  00404	5f		 pop	 edi

; 200  : 	}
; 201  : 
; 202  : }

  00405	5e		 pop	 esi
  00406	5b		 pop	 ebx
  00407	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0040a	33 cd		 xor	 ecx, ebp
  0040c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00411	8b e5		 mov	 esp, ebp
  00413	5d		 pop	 ebp
  00414	c3		 ret	 0
$LN35@Init:

; 134  : 	
; 135  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  00415	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
$LN34@Init:

; 180  : 				}
; 181  : 				return;
; 182  : 			}
; 183  : 		}
; 184  : 	}
; 185  : 
; 186  : 	if (mouse.onceState & MOUSE_LEFT_CRICK)

  0041b	f6 c2 01	 test	 dl, 1
  0041e	74 3f		 je	 SHORT $LN20@Init

; 187  : 	{
; 188  : 
; 189  : 		if (HitDispNo == button[0]) //Â∑¶ÁÆ≠Â§¥

  00420	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00425	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?button@@3PAHA
  0042b	75 17		 jne	 SHORT $LN21@Init

; 190  : 		{
; 191  : 			nPage--;

  0042d	83 e9 01	 sub	 ecx, 1
  00430	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPage@@3HA, ecx

; 192  : 			if (nPage < 0)nPage = 0;

  00436	79 26		 jns	 SHORT $LN25@Init
  00438	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, 0

; 193  : 		}

  00442	eb 1a		 jmp	 SHORT $LN25@Init
$LN21@Init:

; 194  : 		else if (HitDispNo == button[1]) //Âè≥ÁÆ≠Â§¥

  00444	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?button@@3PAHA+4
  0044a	75 12		 jne	 SHORT $LN25@Init

; 195  : 		{
; 196  : 			nPage++;
; 197  : 			if (nPage >= nPageTotal - 1) nPage = nPageTotal - 1;

  0044c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPageTotal@@3HA
  00451	41		 inc	 ecx
  00452	48		 dec	 eax
  00453	3b c8		 cmp	 ecx, eax
  00455	0f 4d c8	 cmovge	 ecx, eax
  00458	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPage@@3HA, ecx
$LN25@Init:

; 198  : 		}
; 199  : 		__asm nop;

  0045e	90		 npad	 1
$LN20@Init:

; 200  : 	}
; 201  : 
; 202  : }

  0045f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00462	5f		 pop	 edi
  00463	5e		 pop	 esi
  00464	33 cd		 xor	 ecx, ebp
  00466	5b		 pop	 ebx
  00467	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0046c	8b e5		 mov	 esp, ebp
  0046e	5d		 pop	 ebp
  0046f	c3		 ret	 0
?InitÁ»Í©???œ¢@@YAXXZ ENDP				; InitÁ»Í©???œ¢
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\Á»Í©??.cpp
;	COMDAT ?delAct??@@YAXXZ
_TEXT	SEGMENT
?delAct??@@YAXXZ PROC					; delAct??, COMDAT

; 38   : 	if (pAct‰∫∫Áâ©)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActÏ—⁄™@@3PAUaction@@A ; pActÏ—⁄™
  00005	85 c0		 test	 eax, eax
  00007	74 13		 je	 SHORT $LN2@delAct

; 39   : 	{
; 40   : 		DeathAction(pAct‰∫∫Áâ©);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0000f	83 c4 04	 add	 esp, 4

; 41   : 		pAct‰∫∫Áâ© = NULL;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActÏ—⁄™@@3PAUaction@@A, 0 ; pActÏ—⁄™
$LN2@delAct:

; 42   : 	}
; 43   : 	if (pActÁß∞Âè∑)

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pAct??@@3PAUaction@@A ; pAct??
  00021	85 c0		 test	 eax, eax
  00023	74 13		 je	 SHORT $LN3@delAct

; 44   : 	{
; 45   : 		DeathAction(pActÁß∞Âè∑);

  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0002b	83 c4 04	 add	 esp, 4

; 46   : 		pActÁß∞Âè∑ = NULL;

  0002e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pAct??@@3PAUaction@@A, 0 ; pAct??
$LN3@delAct:

; 47   : 	}
; 48   : }

  00038	c3		 ret	 0
?delAct??@@YAXXZ ENDP					; delAct??
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
