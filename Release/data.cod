; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\data.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04CBMOHCLB@?$MA?$KH?D?$KB@		; `string'
PUBLIC	??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD@	; `string'
PUBLIC	??_C@_02MEIMKHMB@HP@				; `string'
PUBLIC	??_C@_05DDBABAEM@MaxHP@				; `string'
PUBLIC	??_C@_02MCEHGFCK@MP@				; `string'
PUBLIC	??_C@_05DFNLNCKH@MaxMP@				; `string'
PUBLIC	??_C@_04NIEJOHDD@?$LA?f?G?h@			; `string'
PUBLIC	??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h@		; `string'
PUBLIC	??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH@		; `string'
PUBLIC	??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B@		; `string'
PUBLIC	??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B@		; `string'
PUBLIC	??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B@		; `string'
PUBLIC	??_C@_04LGBCMFEL@?C?f?$LM?$LK@			; `string'
PUBLIC	??_C@_02CKMPFPDI@?r?$KC@			; `string'
PUBLIC	??_C@_02NFBNCFID@?b?$KJ@			; `string'
PUBLIC	??_C@_02BIDNCFCM@?$PL?$PN@			; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP@				; `string'
PUBLIC	??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v@	; `string'
PUBLIC	??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v@		; `string'
PUBLIC	??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD@	; `string'
PUBLIC	??_C@_04KELBGJMJ@?$LL?s?E?B@			; `string'
PUBLIC	??_C@_04MGFIDEAB@?$MA?L?$LI?$KH@		; `string'
PUBLIC	??_C@_04FHFLDCCN@?$LO?V?D?$KK@			; `string'
PUBLIC	??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k@ ; `string'
PUBLIC	??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D@	; `string'
PUBLIC	??_C@_03LAMLDFEG@pet@				; `string'
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
;	COMDAT ??_C@_03LAMLDFEG@pet@
CONST	SEGMENT
??_C@_03LAMLDFEG@pet@ DB 'pet', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?Datalib@@3QBUluaL_Reg@@B DD FLAT:??_C@_03LAMLDFEG@pet@	; Datalib
	DD	FLAT:?getPetData@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D@
CONST	SEGMENT
??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D@ DB 0b0H, 0b3H, 0b8H, 0edH, 0c7H
	DB	0a5H, 0bdH, 0c4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k@
CONST	SEGMENT
??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k@ DB 0c7H, 0c3H, 0b7H, 0a1H
	DB	0b1H, 0d7H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHFLDCCN@?$LO?V?D?$KK@
CONST	SEGMENT
??_C@_04FHFLDCCN@?$LO?V?D?$KK@ DB 0beH, 0d6H, 0c4H, 0aaH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGFIDEAB@?$MA?L?$LI?$KH@
CONST	SEGMENT
??_C@_04MGFIDEAB@?$MA?L?$LI?$KH@ DB 0c0H, 0ccH, 0b8H, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KELBGJMJ@?$LL?s?E?B@
CONST	SEGMENT
??_C@_04KELBGJMJ@?$LL?s?E?B@ DB 0bbH, 0f3H, 0c5H, 0c2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD@
CONST	SEGMENT
??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD@ DB 0c1H, 0beH, 0baH, 0b0H, 0baH
	DB	0ceH, 0c8H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v@
CONST	SEGMENT
??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v@ DB 0c8H, 0b8H, 0c0H, 0fcH, 0bcH, 0f6H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v@
CONST	SEGMENT
??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v@ DB 0c3H, 0d6H, 0b4H, 0ebH
	DB	0b1H, 0e2H, 0b4H, 0c9H, 0bcH, 0f6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BIDNCFCM@?$PL?$PN@
CONST	SEGMENT
??_C@_02BIDNCFCM@?$PL?$PN@ DB 0fbH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02NFBNCFID@?b?$KJ@
CONST	SEGMENT
??_C@_02NFBNCFID@?b?$KJ@ DB 0e2H, 0a9H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CKMPFPDI@?r?$KC@
CONST	SEGMENT
??_C@_02CKMPFPDI@?r?$KC@ DB 0f2H, 0a2H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LGBCMFEL@?C?f?$LM?$LK@
CONST	SEGMENT
??_C@_04LGBCMFEL@?C?f?$LM?$LK@ DB 0c3H, 0e6H, 0bcH, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B@
CONST	SEGMENT
??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B@ DB 0b9H, 0ceH, 0c3H, 0b8H, 0b7H, 0c2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B@
CONST	SEGMENT
??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B@ DB 0b9H, 0e6H, 0beH, 0eeH, 0b7H, 0c2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B@
CONST	SEGMENT
??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B@ DB 0b0H, 0f8H, 0b0H, 0ddH, 0b7H, 0c2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH@
CONST	SEGMENT
??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH@ DB 0b7H, 0b9H, 0baH, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h@
CONST	SEGMENT
??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h@ DB 0c3H, 0d6H, 0b4H, 0ebH, 0b0H, 0e6H
	DB	0c7H, 0e8H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04NIEJOHDD@?$LA?f?G?h@
CONST	SEGMENT
??_C@_04NIEJOHDD@?$LA?f?G?h@ DB 0b0H, 0e6H, 0c7H, 0e8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFNLNCKH@MaxMP@
CONST	SEGMENT
??_C@_05DFNLNCKH@MaxMP@ DB 'MaxMP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCEHGFCK@MP@
CONST	SEGMENT
??_C@_02MCEHGFCK@MP@ DB 'MP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DDBABAEM@MaxHP@
CONST	SEGMENT
??_C@_05DDBABAEM@MaxHP@ DB 'MaxHP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MEIMKHMB@HP@
CONST	SEGMENT
??_C@_02MEIMKHMB@HP@ DB 'HP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD@
CONST	SEGMENT
??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD@ DB 0c0H, 0ccH, 0b9H, 0ccH
	DB	0c1H, 0f6H, 0b9H, 0f8H, 0c8H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CBMOHCLB@?$MA?$KH?D?$KB@
CONST	SEGMENT
??_C@_04CBMOHCLB@?$MA?$KH?D?$KB@ DB 0c0H, 0a7H, 0c4H, 0a1H, 00H ; `string'
CONST	ENDS
PUBLIC	?luaopen_Data@@YAHPAUlua_State@@@Z		; luaopen_Data
PUBLIC	??_C@_08NEALNNCE@chardata@			; `string'
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	_lua_pushnumber:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_luaL_register:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT ??_C@_08NEALNNCE@chardata@
CONST	SEGMENT
??_C@_08NEALNNCE@chardata@ DB 'chardata', 00H		; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\mylua\data.cpp
;	COMDAT ?getPetData@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -8						; size = 4
_id$1$ = -4						; size = 4
_L$ = 8							; size = 4
?getPetData@@YAHPAUlua_State@@@Z PROC			; getPetData, COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	57		 push	 edi

; 12   : 	const int id = luaL_checkint(L, 1);

  00008	8b 7d 08	 mov	 edi, DWORD PTR _L$[ebp]
  0000b	6a 01		 push	 1
  0000d	57		 push	 edi
  0000e	e8 00 00 00 00	 call	 _luaL_checkinteger
  00013	89 45 fc	 mov	 DWORD PTR _id$1$[ebp], eax

; 13   : 	size_t l;
; 14   : 	const char *attribute=luaL_checklstring(L, 2, &l);

  00016	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00019	50		 push	 eax
  0001a	6a 02		 push	 2
  0001c	57		 push	 edi
  0001d	e8 00 00 00 00	 call	 _luaL_checklstring
  00022	83 c4 14	 add	 esp, 20			; 00000014H
  00025	8b f0		 mov	 esi, eax

; 15   : 	
; 16   :  	if(strcmp(attribute, "위치") == 0){     

  00027	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_04CBMOHCLB@?$MA?$KH?D?$KB@
  0002c	8b ce		 mov	 ecx, esi
  0002e	53		 push	 ebx
  0002f	90		 npad	 1
$LL52@getPetData:
  00030	8a 19		 mov	 bl, BYTE PTR [ecx]
  00032	3a 1a		 cmp	 bl, BYTE PTR [edx]
  00034	75 1a		 jne	 SHORT $LN53@getPetData
  00036	84 db		 test	 bl, bl
  00038	74 12		 je	 SHORT $LN54@getPetData
  0003a	8a 41 01	 mov	 al, BYTE PTR [ecx+1]
  0003d	3a 42 01	 cmp	 al, BYTE PTR [edx+1]
  00040	75 0e		 jne	 SHORT $LN53@getPetData
  00042	83 c1 02	 add	 ecx, 2
  00045	83 c2 02	 add	 edx, 2
  00048	84 c0		 test	 al, al
  0004a	75 e4		 jne	 SHORT $LL52@getPetData
$LN54@getPetData:
  0004c	33 c0		 xor	 eax, eax
  0004e	eb 05		 jmp	 SHORT $LN55@getPetData
$LN53@getPetData:
  00050	1b c0		 sbb	 eax, eax
  00052	83 c8 01	 or	 eax, 1
$LN55@getPetData:
  00055	5b		 pop	 ebx
  00056	85 c0		 test	 eax, eax
  00058	75 14		 jne	 SHORT $LN2@getPetData

; 17   : 		lua_pushnumber(L, pet[id].index);

  0005a	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00061	66 0f 6e 80 00
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax]
  00069	e9 83 06 00 00	 jmp	 $LN152@getPetData
$LN2@getPetData:

; 18   :  	}else if(strcmp(attribute, "이미지번호") == 0){     

  0006e	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD@
  00073	8b c6		 mov	 eax, esi
$LL56@getPetData:
  00075	8a 10		 mov	 dl, BYTE PTR [eax]
  00077	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00079	75 1a		 jne	 SHORT $LN57@getPetData
  0007b	84 d2		 test	 dl, dl
  0007d	74 12		 je	 SHORT $LN58@getPetData
  0007f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00082	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00085	75 0e		 jne	 SHORT $LN57@getPetData
  00087	83 c0 02	 add	 eax, 2
  0008a	83 c1 02	 add	 ecx, 2
  0008d	84 d2		 test	 dl, dl
  0008f	75 e4		 jne	 SHORT $LL56@getPetData
$LN58@getPetData:
  00091	33 c0		 xor	 eax, eax
  00093	eb 05		 jmp	 SHORT $LN59@getPetData
$LN57@getPetData:
  00095	1b c0		 sbb	 eax, eax
  00097	83 c8 01	 or	 eax, 1
$LN59@getPetData:
  0009a	85 c0		 test	 eax, eax
  0009c	75 14		 jne	 SHORT $LN4@getPetData
$LN155@getPetData:

; 66   : 	}     
; 67   : 	return 1;

  0009e	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  000a5	66 0f 6e 80 04
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  000ad	e9 3f 06 00 00	 jmp	 $LN152@getPetData
$LN4@getPetData:

; 19   : 		lua_pushnumber(L, pet[id].graNo);
; 20   : 	}else if(strcmp(attribute, "HP") == 0){     

  000b2	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02MEIMKHMB@HP@
  000b7	8b c6		 mov	 eax, esi
  000b9	0f 1f 80 00 00
	00 00		 npad	 7
$LL60@getPetData:
  000c0	8a 10		 mov	 dl, BYTE PTR [eax]
  000c2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000c4	75 1a		 jne	 SHORT $LN61@getPetData
  000c6	84 d2		 test	 dl, dl
  000c8	74 12		 je	 SHORT $LN62@getPetData
  000ca	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000cd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000d0	75 0e		 jne	 SHORT $LN61@getPetData
  000d2	83 c0 02	 add	 eax, 2
  000d5	83 c1 02	 add	 ecx, 2
  000d8	84 d2		 test	 dl, dl
  000da	75 e4		 jne	 SHORT $LL60@getPetData
$LN62@getPetData:
  000dc	33 c0		 xor	 eax, eax
  000de	eb 05		 jmp	 SHORT $LN63@getPetData
$LN61@getPetData:
  000e0	1b c0		 sbb	 eax, eax
  000e2	83 c8 01	 or	 eax, 1
$LN63@getPetData:
  000e5	85 c0		 test	 eax, eax
  000e7	75 14		 jne	 SHORT $LN6@getPetData

; 21   : 		lua_pushnumber(L, pet[id].hp);

  000e9	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  000f0	66 0f 6e 80 08
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+8]
  000f8	e9 f4 05 00 00	 jmp	 $LN152@getPetData
$LN6@getPetData:

; 22   : 	}else if(strcmp(attribute, "MaxHP") == 0){     

  000fd	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_05DDBABAEM@MaxHP@
  00102	8b c6		 mov	 eax, esi
$LL64@getPetData:
  00104	8a 10		 mov	 dl, BYTE PTR [eax]
  00106	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00108	75 1a		 jne	 SHORT $LN65@getPetData
  0010a	84 d2		 test	 dl, dl
  0010c	74 12		 je	 SHORT $LN66@getPetData
  0010e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00111	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00114	75 0e		 jne	 SHORT $LN65@getPetData
  00116	83 c0 02	 add	 eax, 2
  00119	83 c1 02	 add	 ecx, 2
  0011c	84 d2		 test	 dl, dl
  0011e	75 e4		 jne	 SHORT $LL64@getPetData
$LN66@getPetData:
  00120	33 c0		 xor	 eax, eax
  00122	eb 05		 jmp	 SHORT $LN67@getPetData
$LN65@getPetData:
  00124	1b c0		 sbb	 eax, eax
  00126	83 c8 01	 or	 eax, 1
$LN67@getPetData:
  00129	85 c0		 test	 eax, eax
  0012b	75 14		 jne	 SHORT $LN8@getPetData

; 23   : 		lua_pushnumber(L, pet[id].maxHp);

  0012d	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00134	66 0f 6e 80 0c
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+12]
  0013c	e9 b0 05 00 00	 jmp	 $LN152@getPetData
$LN8@getPetData:

; 24   : 	}else if(strcmp(attribute, "MP") == 0){     

  00141	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02MCEHGFCK@MP@
  00146	8b c6		 mov	 eax, esi
$LL68@getPetData:
  00148	8a 10		 mov	 dl, BYTE PTR [eax]
  0014a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0014c	75 1a		 jne	 SHORT $LN69@getPetData
  0014e	84 d2		 test	 dl, dl
  00150	74 12		 je	 SHORT $LN70@getPetData
  00152	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00155	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00158	75 0e		 jne	 SHORT $LN69@getPetData
  0015a	83 c0 02	 add	 eax, 2
  0015d	83 c1 02	 add	 ecx, 2
  00160	84 d2		 test	 dl, dl
  00162	75 e4		 jne	 SHORT $LL68@getPetData
$LN70@getPetData:
  00164	33 c0		 xor	 eax, eax
  00166	eb 05		 jmp	 SHORT $LN71@getPetData
$LN69@getPetData:
  00168	1b c0		 sbb	 eax, eax
  0016a	83 c8 01	 or	 eax, 1
$LN71@getPetData:
  0016d	85 c0		 test	 eax, eax
  0016f	0f 84 29 ff ff
	ff		 je	 $LN155@getPetData

; 25   : 		lua_pushnumber(L, pet[id].graNo);
; 26   : 	}else if(strcmp(attribute, "MaxMP") == 0){     

  00175	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_05DFNLNCKH@MaxMP@
  0017a	8b c6		 mov	 eax, esi
  0017c	0f 1f 40 00	 npad	 4
$LL72@getPetData:
  00180	8a 10		 mov	 dl, BYTE PTR [eax]
  00182	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00184	75 1a		 jne	 SHORT $LN73@getPetData
  00186	84 d2		 test	 dl, dl
  00188	74 12		 je	 SHORT $LN74@getPetData
  0018a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0018d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00190	75 0e		 jne	 SHORT $LN73@getPetData
  00192	83 c0 02	 add	 eax, 2
  00195	83 c1 02	 add	 ecx, 2
  00198	84 d2		 test	 dl, dl
  0019a	75 e4		 jne	 SHORT $LL72@getPetData
$LN74@getPetData:
  0019c	33 c0		 xor	 eax, eax
  0019e	eb 05		 jmp	 SHORT $LN75@getPetData
$LN73@getPetData:
  001a0	1b c0		 sbb	 eax, eax
  001a2	83 c8 01	 or	 eax, 1
$LN75@getPetData:
  001a5	85 c0		 test	 eax, eax
  001a7	0f 84 f1 fe ff
	ff		 je	 $LN155@getPetData

; 27   : 		lua_pushnumber(L, pet[id].graNo);
; 28   : 	}else if(strcmp(attribute, "경험") == 0){     

  001ad	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04NIEJOHDD@?$LA?f?G?h@
  001b2	8b c6		 mov	 eax, esi
$LL76@getPetData:
  001b4	8a 10		 mov	 dl, BYTE PTR [eax]
  001b6	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001b8	75 1a		 jne	 SHORT $LN77@getPetData
  001ba	84 d2		 test	 dl, dl
  001bc	74 12		 je	 SHORT $LN78@getPetData
  001be	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001c1	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001c4	75 0e		 jne	 SHORT $LN77@getPetData
  001c6	83 c0 02	 add	 eax, 2
  001c9	83 c1 02	 add	 ecx, 2
  001cc	84 d2		 test	 dl, dl
  001ce	75 e4		 jne	 SHORT $LL76@getPetData
$LN78@getPetData:
  001d0	33 c0		 xor	 eax, eax
  001d2	eb 05		 jmp	 SHORT $LN79@getPetData
$LN77@getPetData:
  001d4	1b c0		 sbb	 eax, eax
  001d6	83 c8 01	 or	 eax, 1
$LN79@getPetData:
  001d9	85 c0		 test	 eax, eax
  001db	75 14		 jne	 SHORT $LN14@getPetData

; 29   : 		lua_pushnumber(L, pet[id].exp);

  001dd	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  001e4	66 0f 6e 80 18
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+24]
  001ec	e9 00 05 00 00	 jmp	 $LN152@getPetData
$LN14@getPetData:

; 30   : 	}else if(strcmp(attribute, "최대경험") == 0){     

  001f1	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h@
  001f6	8b c6		 mov	 eax, esi
$LL80@getPetData:
  001f8	8a 10		 mov	 dl, BYTE PTR [eax]
  001fa	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001fc	75 1a		 jne	 SHORT $LN81@getPetData
  001fe	84 d2		 test	 dl, dl
  00200	74 12		 je	 SHORT $LN82@getPetData
  00202	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00205	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00208	75 0e		 jne	 SHORT $LN81@getPetData
  0020a	83 c0 02	 add	 eax, 2
  0020d	83 c1 02	 add	 ecx, 2
  00210	84 d2		 test	 dl, dl
  00212	75 e4		 jne	 SHORT $LL80@getPetData
$LN82@getPetData:
  00214	33 c0		 xor	 eax, eax
  00216	eb 05		 jmp	 SHORT $LN83@getPetData
$LN81@getPetData:
  00218	1b c0		 sbb	 eax, eax
  0021a	83 c8 01	 or	 eax, 1
$LN83@getPetData:
  0021d	85 c0		 test	 eax, eax
  0021f	75 14		 jne	 SHORT $LN16@getPetData

; 31   : 		lua_pushnumber(L, pet[id].maxExp);

  00221	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00228	66 0f 6e 80 1c
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+28]
  00230	e9 bc 04 00 00	 jmp	 $LN152@getPetData
$LN16@getPetData:

; 32   : 	}else if(strcmp(attribute, "레벨") == 0){     

  00235	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH@
  0023a	8b c6		 mov	 eax, esi
  0023c	0f 1f 40 00	 npad	 4
$LL84@getPetData:
  00240	8a 10		 mov	 dl, BYTE PTR [eax]
  00242	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00244	75 1a		 jne	 SHORT $LN85@getPetData
  00246	84 d2		 test	 dl, dl
  00248	74 12		 je	 SHORT $LN86@getPetData
  0024a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0024d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00250	75 0e		 jne	 SHORT $LN85@getPetData
  00252	83 c0 02	 add	 eax, 2
  00255	83 c1 02	 add	 ecx, 2
  00258	84 d2		 test	 dl, dl
  0025a	75 e4		 jne	 SHORT $LL84@getPetData
$LN86@getPetData:
  0025c	33 c0		 xor	 eax, eax
  0025e	eb 05		 jmp	 SHORT $LN87@getPetData
$LN85@getPetData:
  00260	1b c0		 sbb	 eax, eax
  00262	83 c8 01	 or	 eax, 1
$LN87@getPetData:
  00265	85 c0		 test	 eax, eax
  00267	75 14		 jne	 SHORT $LN18@getPetData

; 33   : 		lua_pushnumber(L, pet[id].level);

  00269	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00270	66 0f 6e 80 20
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+32]
  00278	e9 74 04 00 00	 jmp	 $LN152@getPetData
$LN18@getPetData:

; 34   : 	}else if(strcmp(attribute, "공격력") == 0){     

  0027d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B@
  00282	8b c6		 mov	 eax, esi
$LL88@getPetData:
  00284	8a 10		 mov	 dl, BYTE PTR [eax]
  00286	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00288	75 1a		 jne	 SHORT $LN89@getPetData
  0028a	84 d2		 test	 dl, dl
  0028c	74 12		 je	 SHORT $LN90@getPetData
  0028e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00291	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00294	75 0e		 jne	 SHORT $LN89@getPetData
  00296	83 c0 02	 add	 eax, 2
  00299	83 c1 02	 add	 ecx, 2
  0029c	84 d2		 test	 dl, dl
  0029e	75 e4		 jne	 SHORT $LL88@getPetData
$LN90@getPetData:
  002a0	33 c0		 xor	 eax, eax
  002a2	eb 05		 jmp	 SHORT $LN91@getPetData
$LN89@getPetData:
  002a4	1b c0		 sbb	 eax, eax
  002a6	83 c8 01	 or	 eax, 1
$LN91@getPetData:
  002a9	85 c0		 test	 eax, eax
  002ab	75 14		 jne	 SHORT $LN20@getPetData

; 35   : 		lua_pushnumber(L, pet[id].atk);

  002ad	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  002b4	66 0f 6e 80 24
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+36]
  002bc	e9 30 04 00 00	 jmp	 $LN152@getPetData
$LN20@getPetData:

; 36   : 	}else if(strcmp(attribute, "방어력") == 0){     

  002c1	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B@
  002c6	8b c6		 mov	 eax, esi
$LL92@getPetData:
  002c8	8a 10		 mov	 dl, BYTE PTR [eax]
  002ca	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002cc	75 1a		 jne	 SHORT $LN93@getPetData
  002ce	84 d2		 test	 dl, dl
  002d0	74 12		 je	 SHORT $LN94@getPetData
  002d2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002d5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002d8	75 0e		 jne	 SHORT $LN93@getPetData
  002da	83 c0 02	 add	 eax, 2
  002dd	83 c1 02	 add	 ecx, 2
  002e0	84 d2		 test	 dl, dl
  002e2	75 e4		 jne	 SHORT $LL92@getPetData
$LN94@getPetData:
  002e4	33 c0		 xor	 eax, eax
  002e6	eb 05		 jmp	 SHORT $LN95@getPetData
$LN93@getPetData:
  002e8	1b c0		 sbb	 eax, eax
  002ea	83 c8 01	 or	 eax, 1
$LN95@getPetData:
  002ed	85 c0		 test	 eax, eax
  002ef	75 14		 jne	 SHORT $LN22@getPetData

; 37   : 		lua_pushnumber(L, pet[id].def);

  002f1	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  002f8	66 0f 6e 80 28
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+40]
  00300	e9 ec 03 00 00	 jmp	 $LN152@getPetData
$LN22@getPetData:

; 38   : 	}else if(strcmp(attribute, "민첩력") == 0){     

  00305	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B@
  0030a	8b c6		 mov	 eax, esi
  0030c	0f 1f 40 00	 npad	 4
$LL96@getPetData:
  00310	8a 10		 mov	 dl, BYTE PTR [eax]
  00312	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00314	75 1a		 jne	 SHORT $LN97@getPetData
  00316	84 d2		 test	 dl, dl
  00318	74 12		 je	 SHORT $LN98@getPetData
  0031a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0031d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00320	75 0e		 jne	 SHORT $LN97@getPetData
  00322	83 c0 02	 add	 eax, 2
  00325	83 c1 02	 add	 ecx, 2
  00328	84 d2		 test	 dl, dl
  0032a	75 e4		 jne	 SHORT $LL96@getPetData
$LN98@getPetData:
  0032c	33 c0		 xor	 eax, eax
  0032e	eb 05		 jmp	 SHORT $LN99@getPetData
$LN97@getPetData:
  00330	1b c0		 sbb	 eax, eax
  00332	83 c8 01	 or	 eax, 1
$LN99@getPetData:
  00335	85 c0		 test	 eax, eax
  00337	75 14		 jne	 SHORT $LN24@getPetData

; 39   : 		lua_pushnumber(L, pet[id].quick);

  00339	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00340	66 0f 6e 80 2c
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+44]
  00348	e9 a4 03 00 00	 jmp	 $LN152@getPetData
$LN24@getPetData:

; 40   : 	}else if(strcmp(attribute, "충성") == 0){     

  0034d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04LGBCMFEL@?C?f?$LM?$LK@
  00352	8b c6		 mov	 eax, esi
$LL100@getPetData:
  00354	8a 10		 mov	 dl, BYTE PTR [eax]
  00356	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00358	75 1a		 jne	 SHORT $LN101@getPetData
  0035a	84 d2		 test	 dl, dl
  0035c	74 12		 je	 SHORT $LN102@getPetData
  0035e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00361	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00364	75 0e		 jne	 SHORT $LN101@getPetData
  00366	83 c0 02	 add	 eax, 2
  00369	83 c1 02	 add	 ecx, 2
  0036c	84 d2		 test	 dl, dl
  0036e	75 e4		 jne	 SHORT $LL100@getPetData
$LN102@getPetData:
  00370	33 c0		 xor	 eax, eax
  00372	eb 05		 jmp	 SHORT $LN103@getPetData
$LN101@getPetData:
  00374	1b c0		 sbb	 eax, eax
  00376	83 c8 01	 or	 eax, 1
$LN103@getPetData:
  00379	85 c0		 test	 eax, eax
  0037b	75 14		 jne	 SHORT $LN26@getPetData

; 41   : 		lua_pushnumber(L, pet[id].ai);

  0037d	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00384	66 0f 6e 80 30
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+48]
  0038c	e9 60 03 00 00	 jmp	 $LN152@getPetData
$LN26@getPetData:

; 42   : 	}else if(strcmp(attribute, "地") == 0){     

  00391	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02CKMPFPDI@?r?$KC@
  00396	8b c6		 mov	 eax, esi
$LL104@getPetData:
  00398	8a 10		 mov	 dl, BYTE PTR [eax]
  0039a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0039c	75 1a		 jne	 SHORT $LN105@getPetData
  0039e	84 d2		 test	 dl, dl
  003a0	74 12		 je	 SHORT $LN106@getPetData
  003a2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003a5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003a8	75 0e		 jne	 SHORT $LN105@getPetData
  003aa	83 c0 02	 add	 eax, 2
  003ad	83 c1 02	 add	 ecx, 2
  003b0	84 d2		 test	 dl, dl
  003b2	75 e4		 jne	 SHORT $LL104@getPetData
$LN106@getPetData:
  003b4	33 c0		 xor	 eax, eax
  003b6	eb 05		 jmp	 SHORT $LN107@getPetData
$LN105@getPetData:
  003b8	1b c0		 sbb	 eax, eax
  003ba	83 c8 01	 or	 eax, 1
$LN107@getPetData:
  003bd	85 c0		 test	 eax, eax
  003bf	75 14		 jne	 SHORT $LN28@getPetData

; 43   : 		lua_pushnumber(L, pet[id].earth);

  003c1	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  003c8	66 0f 6e 80 34
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+52]
  003d0	e9 1c 03 00 00	 jmp	 $LN152@getPetData
$LN28@getPetData:

; 44   : 	}else if(strcmp(attribute, "水") == 0){     

  003d5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02NFBNCFID@?b?$KJ@
  003da	8b c6		 mov	 eax, esi
  003dc	0f 1f 40 00	 npad	 4
$LL108@getPetData:
  003e0	8a 10		 mov	 dl, BYTE PTR [eax]
  003e2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  003e4	75 1a		 jne	 SHORT $LN109@getPetData
  003e6	84 d2		 test	 dl, dl
  003e8	74 12		 je	 SHORT $LN110@getPetData
  003ea	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003ed	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003f0	75 0e		 jne	 SHORT $LN109@getPetData
  003f2	83 c0 02	 add	 eax, 2
  003f5	83 c1 02	 add	 ecx, 2
  003f8	84 d2		 test	 dl, dl
  003fa	75 e4		 jne	 SHORT $LL108@getPetData
$LN110@getPetData:
  003fc	33 c0		 xor	 eax, eax
  003fe	eb 05		 jmp	 SHORT $LN111@getPetData
$LN109@getPetData:
  00400	1b c0		 sbb	 eax, eax
  00402	83 c8 01	 or	 eax, 1
$LN111@getPetData:
  00405	85 c0		 test	 eax, eax
  00407	75 14		 jne	 SHORT $LN30@getPetData

; 45   : 		lua_pushnumber(L, pet[id].water);

  00409	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00410	66 0f 6e 80 38
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+56]
  00418	e9 d4 02 00 00	 jmp	 $LN152@getPetData
$LN30@getPetData:

; 46   : 	}else if(strcmp(attribute, "火") == 0){     

  0041d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02BIDNCFCM@?$PL?$PN@
  00422	8b c6		 mov	 eax, esi
$LL112@getPetData:
  00424	8a 10		 mov	 dl, BYTE PTR [eax]
  00426	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00428	75 1a		 jne	 SHORT $LN113@getPetData
  0042a	84 d2		 test	 dl, dl
  0042c	74 12		 je	 SHORT $LN114@getPetData
  0042e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00431	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00434	75 0e		 jne	 SHORT $LN113@getPetData
  00436	83 c0 02	 add	 eax, 2
  00439	83 c1 02	 add	 ecx, 2
  0043c	84 d2		 test	 dl, dl
  0043e	75 e4		 jne	 SHORT $LL112@getPetData
$LN114@getPetData:
  00440	33 c0		 xor	 eax, eax
  00442	eb 05		 jmp	 SHORT $LN115@getPetData
$LN113@getPetData:
  00444	1b c0		 sbb	 eax, eax
  00446	83 c8 01	 or	 eax, 1
$LN115@getPetData:
  00449	85 c0		 test	 eax, eax
  0044b	75 14		 jne	 SHORT $LN32@getPetData

; 47   : 		lua_pushnumber(L, pet[id].fire);

  0044d	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00454	66 0f 6e 80 3c
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+60]
  0045c	e9 90 02 00 00	 jmp	 $LN152@getPetData
$LN32@getPetData:

; 48   : 	}else if(strcmp(attribute, "风") == 0){     

  00461	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01OGPIMHDM@?$DP@
  00466	8b c6		 mov	 eax, esi
$LL116@getPetData:
  00468	8a 10		 mov	 dl, BYTE PTR [eax]
  0046a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0046c	75 1a		 jne	 SHORT $LN117@getPetData
  0046e	84 d2		 test	 dl, dl
  00470	74 12		 je	 SHORT $LN118@getPetData
  00472	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00475	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00478	75 0e		 jne	 SHORT $LN117@getPetData
  0047a	83 c0 02	 add	 eax, 2
  0047d	83 c1 02	 add	 ecx, 2
  00480	84 d2		 test	 dl, dl
  00482	75 e4		 jne	 SHORT $LL116@getPetData
$LN118@getPetData:
  00484	33 c0		 xor	 eax, eax
  00486	eb 05		 jmp	 SHORT $LN119@getPetData
$LN117@getPetData:
  00488	1b c0		 sbb	 eax, eax
  0048a	83 c8 01	 or	 eax, 1
$LN119@getPetData:
  0048d	85 c0		 test	 eax, eax
  0048f	75 14		 jne	 SHORT $LN34@getPetData

; 49   : 		lua_pushnumber(L, pet[id].wind);

  00491	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00498	66 0f 6e 80 40
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+64]
  004a0	e9 4c 02 00 00	 jmp	 $LN152@getPetData
$LN34@getPetData:

; 50   : 	}else if(strcmp(attribute, "최대기능수") == 0){     

  004a5	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v@
  004aa	8b c6		 mov	 eax, esi
  004ac	0f 1f 40 00	 npad	 4
$LL120@getPetData:
  004b0	8a 10		 mov	 dl, BYTE PTR [eax]
  004b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  004b4	75 1a		 jne	 SHORT $LN121@getPetData
  004b6	84 d2		 test	 dl, dl
  004b8	74 12		 je	 SHORT $LN122@getPetData
  004ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  004bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  004c0	75 0e		 jne	 SHORT $LN121@getPetData
  004c2	83 c0 02	 add	 eax, 2
  004c5	83 c1 02	 add	 ecx, 2
  004c8	84 d2		 test	 dl, dl
  004ca	75 e4		 jne	 SHORT $LL120@getPetData
$LN122@getPetData:
  004cc	33 c0		 xor	 eax, eax
  004ce	eb 05		 jmp	 SHORT $LN123@getPetData
$LN121@getPetData:
  004d0	1b c0		 sbb	 eax, eax
  004d2	83 c8 01	 or	 eax, 1
$LN123@getPetData:
  004d5	85 c0		 test	 eax, eax
  004d7	75 14		 jne	 SHORT $LN36@getPetData

; 51   : 		lua_pushnumber(L, pet[id].maxSkill);

  004d9	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  004e0	66 0f 6e 80 44
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  004e8	e9 04 02 00 00	 jmp	 $LN152@getPetData
$LN36@getPetData:

; 52   : 	}else if(strcmp(attribute, "회전수") == 0){     

  004ed	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v@
  004f2	8b c6		 mov	 eax, esi
$LL124@getPetData:
  004f4	8a 10		 mov	 dl, BYTE PTR [eax]
  004f6	3a 11		 cmp	 dl, BYTE PTR [ecx]
  004f8	75 1a		 jne	 SHORT $LN125@getPetData
  004fa	84 d2		 test	 dl, dl
  004fc	74 12		 je	 SHORT $LN126@getPetData
  004fe	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00501	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00504	75 0e		 jne	 SHORT $LN125@getPetData
  00506	83 c0 02	 add	 eax, 2
  00509	83 c1 02	 add	 ecx, 2
  0050c	84 d2		 test	 dl, dl
  0050e	75 e4		 jne	 SHORT $LL124@getPetData
$LN126@getPetData:
  00510	33 c0		 xor	 eax, eax
  00512	eb 05		 jmp	 SHORT $LN127@getPetData
$LN125@getPetData:
  00514	1b c0		 sbb	 eax, eax
  00516	83 c8 01	 or	 eax, 1
$LN127@getPetData:
  00519	85 c0		 test	 eax, eax
  0051b	75 14		 jne	 SHORT $LN38@getPetData

; 53   : 		lua_pushnumber(L, pet[id].trn);

  0051d	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00524	66 0f 6e 80 48
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+72]
  0052c	e9 c0 01 00 00	 jmp	 $LN152@getPetData
$LN38@getPetData:

; 54   : 	}else if(strcmp(attribute, "종별부호") == 0){     

  00531	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD@
  00536	8b c6		 mov	 eax, esi
$LL128@getPetData:
  00538	8a 10		 mov	 dl, BYTE PTR [eax]
  0053a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0053c	75 1a		 jne	 SHORT $LN129@getPetData
  0053e	84 d2		 test	 dl, dl
  00540	74 12		 je	 SHORT $LN130@getPetData
  00542	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00545	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00548	75 0e		 jne	 SHORT $LN129@getPetData
  0054a	83 c0 02	 add	 eax, 2
  0054d	83 c1 02	 add	 ecx, 2
  00550	84 d2		 test	 dl, dl
  00552	75 e4		 jne	 SHORT $LL128@getPetData
$LN130@getPetData:
  00554	33 c0		 xor	 eax, eax
  00556	eb 05		 jmp	 SHORT $LN131@getPetData
$LN129@getPetData:
  00558	1b c0		 sbb	 eax, eax
  0055a	83 c8 01	 or	 eax, 1
$LN131@getPetData:
  0055d	85 c0		 test	 eax, eax
  0055f	75 14		 jne	 SHORT $LN40@getPetData

; 55   : 		lua_pushnumber(L, pet[id].fusion);

  00561	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00568	66 0f 6e 80 4c
	00 00 00	 movd	 xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+76]
  00570	e9 7c 01 00 00	 jmp	 $LN152@getPetData
$LN40@getPetData:

; 56   : 	}else if(strcmp(attribute, "상태") == 0){     

  00575	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04KELBGJMJ@?$LL?s?E?B@
  0057a	8b c6		 mov	 eax, esi
  0057c	0f 1f 40 00	 npad	 4
$LL132@getPetData:
  00580	8a 10		 mov	 dl, BYTE PTR [eax]
  00582	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00584	75 1a		 jne	 SHORT $LN133@getPetData
  00586	84 d2		 test	 dl, dl
  00588	74 12		 je	 SHORT $LN134@getPetData
  0058a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0058d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00590	75 0e		 jne	 SHORT $LN133@getPetData
  00592	83 c0 02	 add	 eax, 2
  00595	83 c1 02	 add	 ecx, 2
  00598	84 d2		 test	 dl, dl
  0059a	75 e4		 jne	 SHORT $LL132@getPetData
$LN134@getPetData:
  0059c	33 c0		 xor	 eax, eax
  0059e	eb 05		 jmp	 SHORT $LN135@getPetData
$LN133@getPetData:
  005a0	1b c0		 sbb	 eax, eax
  005a2	83 c8 01	 or	 eax, 1
$LN135@getPetData:
  005a5	85 c0		 test	 eax, eax
  005a7	75 26		 jne	 SHORT $LN42@getPetData

; 57   : 		lua_pushnumber(L, pet[id].status);

  005a9	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  005b0	8b 80 50 00 00
	00		 mov	 eax, DWORD PTR ?pet@@3PAUPET@@A[eax+80]
  005b6	66 0f 6e c0	 movd	 xmm0, eax
  005ba	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  005be	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  005c1	f2 0f 58 04 c5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[eax*8]
  005ca	e9 26 01 00 00	 jmp	 $LN153@getPetData
$LN42@getPetData:

; 58   : 	}else if(strcmp(attribute, "이름") == 0){     

  005cf	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04MGFIDEAB@?$MA?L?$LI?$KH@
  005d4	8b c6		 mov	 eax, esi
$LL136@getPetData:
  005d6	8a 10		 mov	 dl, BYTE PTR [eax]
  005d8	3a 11		 cmp	 dl, BYTE PTR [ecx]
  005da	75 1a		 jne	 SHORT $LN137@getPetData
  005dc	84 d2		 test	 dl, dl
  005de	74 12		 je	 SHORT $LN138@getPetData
  005e0	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  005e3	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  005e6	75 0e		 jne	 SHORT $LN137@getPetData
  005e8	83 c0 02	 add	 eax, 2
  005eb	83 c1 02	 add	 ecx, 2
  005ee	84 d2		 test	 dl, dl
  005f0	75 e4		 jne	 SHORT $LL136@getPetData
$LN138@getPetData:
  005f2	33 c0		 xor	 eax, eax
  005f4	eb 05		 jmp	 SHORT $LN139@getPetData
$LN137@getPetData:
  005f6	1b c0		 sbb	 eax, eax
  005f8	83 c8 01	 or	 eax, 1
$LN139@getPetData:
  005fb	85 c0		 test	 eax, eax
  005fd	75 21		 jne	 SHORT $LN44@getPetData

; 59   : 		lua_pushstring(L, pet[id].name);

  005ff	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00606	05 54 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+84
  0060b	50		 push	 eax
  0060c	57		 push	 edi
  0060d	e8 00 00 00 00	 call	 _lua_pushstring
  00612	83 c4 08	 add	 esp, 8

; 66   : 	}     
; 67   : 	return 1;

  00615	b8 01 00 00 00	 mov	 eax, 1
  0061a	5f		 pop	 edi
  0061b	5e		 pop	 esi

; 68   : }

  0061c	8b e5		 mov	 esp, ebp
  0061e	5d		 pop	 ebp
  0061f	c3		 ret	 0
$LN44@getPetData:

; 60   : 	}else if(strcmp(attribute, "애칭") == 0){     

  00620	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04FHFLDCCN@?$LO?V?D?$KK@
  00625	8b c6		 mov	 eax, esi
$LL140@getPetData:
  00627	8a 10		 mov	 dl, BYTE PTR [eax]
  00629	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0062b	75 1a		 jne	 SHORT $LN141@getPetData
  0062d	84 d2		 test	 dl, dl
  0062f	74 12		 je	 SHORT $LN142@getPetData
  00631	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00634	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00637	75 0e		 jne	 SHORT $LN141@getPetData
  00639	83 c0 02	 add	 eax, 2
  0063c	83 c1 02	 add	 ecx, 2
  0063f	84 d2		 test	 dl, dl
  00641	75 e4		 jne	 SHORT $LL140@getPetData
$LN142@getPetData:
  00643	33 c0		 xor	 eax, eax
  00645	eb 05		 jmp	 SHORT $LN143@getPetData
$LN141@getPetData:
  00647	1b c0		 sbb	 eax, eax
  00649	83 c8 01	 or	 eax, 1
$LN143@getPetData:
  0064c	85 c0		 test	 eax, eax
  0064e	75 21		 jne	 SHORT $LN46@getPetData

; 61   : 		lua_pushstring(L, pet[id].freeName);

  00650	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  00657	05 65 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+101
  0065c	50		 push	 eax
  0065d	57		 push	 edi
  0065e	e8 00 00 00 00	 call	 _lua_pushstring
  00663	83 c4 08	 add	 esp, 8

; 66   : 	}     
; 67   : 	return 1;

  00666	b8 01 00 00 00	 mov	 eax, 1
  0066b	5f		 pop	 edi
  0066c	5e		 pop	 esi

; 68   : }

  0066d	8b e5		 mov	 esp, ebp
  0066f	5d		 pop	 ebp
  00670	c3		 ret	 0
$LN46@getPetData:

; 62   : 	}else if(strcmp(attribute, "플래그 사용") == 0){     

  00671	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k@
  00676	8b c6		 mov	 eax, esi
$LL144@getPetData:
  00678	8a 10		 mov	 dl, BYTE PTR [eax]
  0067a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0067c	75 1a		 jne	 SHORT $LN145@getPetData
  0067e	84 d2		 test	 dl, dl
  00680	74 12		 je	 SHORT $LN146@getPetData
  00682	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00685	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00688	75 0e		 jne	 SHORT $LN145@getPetData
  0068a	83 c0 02	 add	 eax, 2
  0068d	83 c1 02	 add	 ecx, 2
  00690	84 d2		 test	 dl, dl
  00692	75 e4		 jne	 SHORT $LL144@getPetData
$LN146@getPetData:
  00694	33 c0		 xor	 eax, eax
  00696	eb 05		 jmp	 SHORT $LN147@getPetData
$LN145@getPetData:
  00698	1b c0		 sbb	 eax, eax
  0069a	83 c8 01	 or	 eax, 1
$LN147@getPetData:
  0069d	85 c0		 test	 eax, eax
  0069f	75 10		 jne	 SHORT $LN48@getPetData

; 63   : 		lua_pushnumber(L, pet[id].useFlag);

  006a1	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  006a8	0f bf 80 76 00
	00 00		 movsx	 eax, WORD PTR ?pet@@3PAUPET@@A[eax+118]
  006af	eb 3c		 jmp	 SHORT $LN154@getPetData
$LN48@getPetData:

; 64   : 	}else if(strcmp(attribute, "개명표식") == 0){     

  006b1	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D@
$LL148@getPetData:
  006b6	8a 0e		 mov	 cl, BYTE PTR [esi]
  006b8	3a 08		 cmp	 cl, BYTE PTR [eax]
  006ba	75 1a		 jne	 SHORT $LN149@getPetData
  006bc	84 c9		 test	 cl, cl
  006be	74 12		 je	 SHORT $LN150@getPetData
  006c0	8a 4e 01	 mov	 cl, BYTE PTR [esi+1]
  006c3	3a 48 01	 cmp	 cl, BYTE PTR [eax+1]
  006c6	75 0e		 jne	 SHORT $LN149@getPetData
  006c8	83 c6 02	 add	 esi, 2
  006cb	83 c0 02	 add	 eax, 2
  006ce	84 c9		 test	 cl, cl
  006d0	75 e4		 jne	 SHORT $LL148@getPetData
$LN150@getPetData:
  006d2	33 c0		 xor	 eax, eax
  006d4	eb 05		 jmp	 SHORT $LN151@getPetData
$LN149@getPetData:
  006d6	1b c0		 sbb	 eax, eax
  006d8	83 c8 01	 or	 eax, 1
$LN151@getPetData:
  006db	85 c0		 test	 eax, eax
  006dd	75 27		 jne	 SHORT $LN50@getPetData

; 65   : 		lua_pushnumber(L, pet[id].changeNameFlag);

  006df	69 45 fc 78 0b
	00 00		 imul	 eax, DWORD PTR _id$1$[ebp], 2936
  006e6	0f bf 80 78 00
	00 00		 movsx	 eax, WORD PTR ?pet@@3PAUPET@@A[eax+120]
$LN154@getPetData:

; 66   : 	}     
; 67   : 	return 1;

  006ed	66 0f 6e c0	 movd	 xmm0, eax
$LN152@getPetData:
  006f1	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
$LN153@getPetData:
  006f5	83 ec 08	 sub	 esp, 8
  006f8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  006fd	57		 push	 edi
  006fe	e8 00 00 00 00	 call	 _lua_pushnumber
  00703	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@getPetData:
  00706	5f		 pop	 edi
  00707	b8 01 00 00 00	 mov	 eax, 1
  0070c	5e		 pop	 esi

; 68   : }

  0070d	8b e5		 mov	 esp, ebp
  0070f	5d		 pop	 ebp
  00710	c3		 ret	 0
?getPetData@@YAHPAUlua_State@@@Z ENDP			; getPetData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\mylua\data.cpp
;	COMDAT ?luaopen_Data@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_Data@@YAHPAUlua_State@@@Z PROC			; luaopen_Data, COMDAT

; 76   : LUALIB_API int luaopen_Data (lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 77   : 	luaL_register(L, "chardata", Datalib);

  00003	68 00 00 00 00	 push	 OFFSET ?Datalib@@3QBUluaL_Reg@@B
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_08NEALNNCE@chardata@
  0000d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00010	e8 00 00 00 00	 call	 _luaL_register
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 	return 1;

  00018	b8 01 00 00 00	 mov	 eax, 1

; 79   : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?luaopen_Data@@YAHPAUlua_State@@@Z ENDP			; luaopen_Data
_TEXT	ENDS
END
