; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\πŸ≈¡ »≠∏È\∏æƒÌøœ∑·\Client Source Code1.31¿œ∫ª\system\Œ√?.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?count_Œ√?@@3HA					; count_Œ√?
PUBLIC	?dataŒ√?@@3PAUŒ√?STRUCT@@A			; dataŒ√?
PUBLIC	?pActŒ√?@@3PAUaction@@A				; pActŒ√?
PUBLIC	?pActŒ√?Ï—⁄™@@3PAUaction@@A			; pActŒ√?Ï—⁄™
_BSS	SEGMENT
?pActŒ√?@@3PAUaction@@A DD 01H DUP (?)			; pActŒ√?
?pActŒ√?Ï—⁄™@@3PAUaction@@A DD 01H DUP (?)		; pActŒ√?Ï—⁄™
_BSS	ENDS
_DATA	SEGMENT
?count_Œ√?@@3HA DD 01H					; count_Œ√?
	ORG $+4
?dataŒ√?@@3PAUŒ√?STRUCT@@A DD 0193acH			; dataŒ√?
	DB	'103340', 00H
	ORG $+13
	DD	01H
	ORG $+5572
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?lssproto_??Œ√?_recv@@YAXPAD@Z			; lssproto_??Œ√?_recv
PUBLIC	?delActŒ√?@@YAXXZ				; delActŒ√?
PUBLIC	?InitŒ√??œ¢@@YAXXZ				; InitŒ√??œ¢
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0N@GBMJNGDM@CHENHAORIGHT@			; `string'
PUBLIC	??_C@_0P@GKNHDFHB@GUANGHUANRIGHT@		; `string'
PUBLIC	??_C@_09PLHHBOIP@PIFURIGHT@			; `string'
PUBLIC	??_C@_06PJODKAOF@?$DP?v?G?N?C?$DP@		; `string'
PUBLIC	??_C@_0BD@EDKMFMLH@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?N?C?$DP?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BI@CICPADPB@SETCURRENTGUANGHUAN?8?$CFd?8@ ; `string'
PUBLIC	??_C@_05MFMFFPGD@?$DP?$DP?N?C?$DP@		; `string'
PUBLIC	??_C@_0BI@PPCAMBKD@CANCELCURRENTGUANGHUAN?8@	; `string'
PUBLIC	??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@		; `string'
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd@			; `string'
EXTRN	__imp__lstrcmpiA@8:PROC
EXTRN	_atoi:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?split_damage@@YAHPADDPAHI@Z:PROC		; split_damage
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBuffer??Í»ˆ«@@YAHHHEHH@Z:PROC		; StockDispBuffer??Í»ˆ«
EXTRN	??ˆ¢??Ù©ıª@@YAHPAUaction@@PAF1@Z:PROC		; ?ˆ¢??Ù©ıª
EXTRN	?StockChatBufferLineExt@@YAXPADEHH@Z:PROC	; StockChatBufferLineExt
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?data??@@3PAUŒ√?STRUCT@@A:BYTE			; data??
EXTRN	?data˘´?@@3PAUŒ√?STRUCT@@A:BYTE			; data˘´?
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?button@@3PAHA DD 05H DUP (?)				; button
?nPage@@3HA DD	01H DUP (?)				; nPage
?nPageTotal@@3HA DD 01H DUP (?)				; nPageTotal
_BSS	ENDS
;	COMDAT ?width@?1??InitŒ√??œ¢@@YAXXZ@4FA
_BSS	SEGMENT
?width@?1??InitŒ√??œ¢@@YAXXZ@4FA DW 01H DUP (?)		; `InitŒ√??œ¢'::`2'::width
_BSS	ENDS
;	COMDAT ?height@?1??InitŒ√??œ¢@@YAXXZ@4FA
_BSS	SEGMENT
?height@?1??InitŒ√??œ¢@@YAXXZ@4FA DW 01H DUP (?)	; `InitŒ√??œ¢'::`2'::height
_BSS	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd@ DB '%d/%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@
CONST	SEGMENT
??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@ DB '  ??  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PPCAMBKD@CANCELCURRENTGUANGHUAN?8@
CONST	SEGMENT
??_C@_0BI@PPCAMBKD@CANCELCURRENTGUANGHUAN?8@ DB 'CANCELCURRENTGUANGHUAN'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFMFFPGD@?$DP?$DP?N?C?$DP@
CONST	SEGMENT
??_C@_05MFMFFPGD@?$DP?$DP?N?C?$DP@ DB '??', 0ceH, 0c3H, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CICPADPB@SETCURRENTGUANGHUAN?8?$CFd?8@
CONST	SEGMENT
??_C@_0BI@CICPADPB@SETCURRENTGUANGHUAN?8?$CFd?8@ DB 'SETCURRENTGUANGHUAN'''
	DB	'%d''', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EDKMFMLH@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?N?C?$DP?$KD?$KB@
CONST	SEGMENT
??_C@_0BD@EDKMFMLH@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?N?C?$DP?$KD?$KB@ DB '?'
	DB	'?', 0eaH, 0f3H, '?', 0f9H, 0daH, 0deH, 0c5H, 0e9H, 0c4H, '??', 0ceH
	DB	0c3H, '?', 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PJODKAOF@?$DP?v?G?N?C?$DP@
CONST	SEGMENT
??_C@_06PJODKAOF@?$DP?v?G?N?C?$DP@ DB '?', 0f6H, 0c7H, 0ceH, 0c3H, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLHHBOIP@PIFURIGHT@
CONST	SEGMENT
??_C@_09PLHHBOIP@PIFURIGHT@ DB 'PIFURIGHT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GKNHDFHB@GUANGHUANRIGHT@
CONST	SEGMENT
??_C@_0P@GKNHDFHB@GUANGHUANRIGHT@ DB 'GUANGHUANRIGHT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GBMJNGDM@CHENHAORIGHT@
CONST	SEGMENT
??_C@_0N@GBMJNGDM@CHENHAORIGHT@ DB 'CHENHAORIGHT', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?curSel@@3HA DD	0ffffffffH				; curSel
_DATA	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\πŸ≈¡ »≠∏È\∏æƒÌøœ∑·\Client Source Code1.31¿œ∫ª\system\Œ√?.cpp
;	COMDAT ?InitŒ√??œ¢@@YAXXZ
_TEXT	SEGMENT
_BmpNo$ = -96						; size = 4
_y2$1 = -92						; size = 2
_count_this_page$1$ = -88				; size = 4
_x2$2 = -88						; size = 2
_x$1$ = -84						; size = 4
_y$1$ = -80						; size = 4
_buf$3 = -76						; size = 50
_buf$4 = -56						; size = 30
_buf$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
?InitŒ√??œ¢@@YAXXZ PROC					; InitŒ√??œ¢, COMDAT

; 91   : void InitÂÖâÁéØÁ™óÂè£(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 92   : 	int BmpNo;
; 93   : 	static short width = 0, height = 0;
; 94   : 	if (width == 0){

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?width@?1??InitŒ√??œ¢@@YAXXZ@4FA
  00016	66 85 c0	 test	 ax, ax
  00019	75 29		 jne	 SHORT $LN5@Init

; 95   : 		realGetNo(IMAGE_ÂÖâÁéØÂõæÊ°£, (U4 *)&BmpNo);

  0001b	8d 45 a0	 lea	 eax, DWORD PTR _BmpNo$[ebp]
  0001e	50		 push	 eax
  0001f	68 d6 c3 00 00	 push	 50134			; 0000c3d6H
  00024	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 96   : 		realGetWH(BmpNo, &width, &height);			//Ëé∑ÂèñÂõæÊ°£Â∞∫ÂØ∏

  00029	68 00 00 00 00	 push	 OFFSET ?height@?1??InitŒ√??œ¢@@YAXXZ@4FA
  0002e	68 00 00 00 00	 push	 OFFSET ?width@?1??InitŒ√??œ¢@@YAXXZ@4FA
  00033	ff 75 a0	 push	 DWORD PTR _BmpNo$[ebp]
  00036	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH
  0003b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?width@?1??InitŒ√??œ¢@@YAXXZ@4FA
  00041	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@Init:

; 97   : 	}
; 98   : 
; 99   : 	//Ê†πÊçÆÂàÜËæ®ÁéáËá™ÈÄÇÂ∫îÂ∑¶‰∏äËßíx,y
; 100  : 	extern int DEF_APPSIZEX, DEF_APPSIZEY;
; 101  : 	int x = (DEF_APPSIZEX - width) / 2;

  00044	0f bf c8	 movsx	 ecx, ax
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  0004c	53		 push	 ebx
  0004d	2b c1		 sub	 eax, ecx

; 102  : 	int y = (DEF_APPSIZEY - height) / 2;

  0004f	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?height@?1??InitŒ√??œ¢@@YAXXZ@4FA
  00056	99		 cdq
  00057	56		 push	 esi
  00058	57		 push	 edi
  00059	2b c2		 sub	 eax, edx
  0005b	8b f8		 mov	 edi, eax
  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00062	2b c1		 sub	 eax, ecx
  00064	d1 ff		 sar	 edi, 1
  00066	99		 cdq

; 103  : 
; 104  : 	//ÁîªÂõæ
; 105  : 	StockDispBufferÁªùÂØπ‰ΩçÁΩÆ(x, y, DISP_PRIO_MENU, IMAGE_ÂÖâÁéØÂõæÊ°£, 1);

  00067	6a 01		 push	 1
  00069	2b c2		 sub	 eax, edx
  0006b	89 7d ac	 mov	 DWORD PTR _x$1$[ebp], edi
  0006e	68 d6 c3 00 00	 push	 50134			; 0000c3d6H
  00073	8b d8		 mov	 ebx, eax
  00075	d1 fb		 sar	 ebx, 1
  00077	6a 68		 push	 104			; 00000068H
  00079	53		 push	 ebx
  0007a	57		 push	 edi
  0007b	89 5d b0	 mov	 DWORD PTR _y$1$[ebp], ebx
  0007e	e8 00 00 00 00	 call	 ?StockDispBuffer??Í»ˆ«@@YAHHHEHH@Z ; StockDispBuffer??Í»ˆ«

; 106  : 
; 107  : 	//Â∑¶Âè≥ÁÆ≠Â§¥
; 108  : 	button[0] = StockDispBuffer(x + 50, y + 310, DISP_PRIO_IME4, 55104, 2);

  00083	6a 02		 push	 2
  00085	68 40 d7 00 00	 push	 55104			; 0000d740H
  0008a	8d b3 36 01 00
	00		 lea	 esi, DWORD PTR [ebx+310]
  00090	6a 6a		 push	 106			; 0000006aH
  00092	8d 5f 32	 lea	 ebx, DWORD PTR [edi+50]
  00095	56		 push	 esi
  00096	53		 push	 ebx
  00097	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 109  : 	button[1] = StockDispBuffer(x + 110, y + 310, DISP_PRIO_IME4, 55105, 2);

  0009c	6a 02		 push	 2
  0009e	68 41 d7 00 00	 push	 55105			; 0000d741H
  000a3	6a 6a		 push	 106			; 0000006aH
  000a5	83 c7 6e	 add	 edi, 110		; 0000006eH
  000a8	a3 00 00 00 00	 mov	 DWORD PTR ?button@@3PAHA, eax
  000ad	56		 push	 esi
  000ae	57		 push	 edi
  000af	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 110  : 
; 111  : 	//ÊòæÁ§∫ÂÖâÁéØ
; 112  : 	StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_AQUA, "ËÆæÁΩÆÂÖâÁéØ", 0);

  000b4	8b 75 b0	 mov	 esi, DWORD PTR _y$1$[ebp]
  000b7	6a 00		 push	 0
  000b9	68 00 00 00 00	 push	 OFFSET ??_C@_06PJODKAOF@?$DP?v?G?N?C?$DP@
  000be	6a 01		 push	 1
  000c0	6a 01		 push	 1
  000c2	81 c6 54 01 00
	00		 add	 esi, 340		; 00000154H
  000c8	a3 04 00 00 00	 mov	 DWORD PTR ?button@@3PAHA+4, eax
  000cd	56		 push	 esi
  000ce	53		 push	 ebx
  000cf	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 113  : 	if (MakeHitBox(x + 50 - 5, y + 340 - 5, x + 50 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  000d4	8b 45 b0	 mov	 eax, DWORD PTR _y$1$[ebp]
  000d7	83 c4 54	 add	 esp, 84			; 00000054H
  000da	8d 98 68 01 00
	00		 lea	 ebx, DWORD PTR [eax+360]
  000e0	05 4f 01 00 00	 add	 eax, 335		; 0000014fH
  000e5	6a 6a		 push	 106			; 0000006aH
  000e7	53		 push	 ebx
  000e8	57		 push	 edi
  000e9	8b 7d ac	 mov	 edi, DWORD PTR _x$1$[ebp]
  000ec	50		 push	 eax
  000ed	8d 47 2d	 lea	 eax, DWORD PTR [edi+45]
  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000f6	83 c4 14	 add	 esp, 20			; 00000014H
  000f9	83 f8 01	 cmp	 eax, 1
  000fc	75 7c		 jne	 SHORT $LN7@Init

; 114  : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  000fe	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  00104	74 74		 je	 SHORT $LN7@Init

; 115  : 			if (dataÂÖâÁéØ[curSel].time == 0){

  00106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?curSel@@3HA
  0010b	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00112	2b c8		 sub	 ecx, eax
  00114	83 3c 8d 18 00
	00 00 00	 cmp	 DWORD PTR ?dataŒ√?@@3PAUŒ√?STRUCT@@A[ecx*4+24], 0
  0011c	75 24		 jne	 SHORT $LN8@Init

; 116  : 				StockChatBufferLineExt("‰Ω†Ê≤°ÊúâÊùÉÈôê‰ΩøÁî®Ëøô‰∏™ÂÖâÁéØÔºÅ", FONT_PAL_RED, 0);

  0011e	6a 00		 push	 0
  00120	6a 00		 push	 0
  00122	6a 06		 push	 6
  00124	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EDKMFMLH@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?N?C?$DP?$KD?$KB@
  00129	e8 00 00 00 00	 call	 ?StockChatBufferLineExt@@YAXPADEHH@Z ; StockChatBufferLineExt
  0012e	83 c4 10	 add	 esp, 16			; 00000010H
  00131	5f		 pop	 edi

; 210  : 	}
; 211  : 
; 212  : }

  00132	5e		 pop	 esi
  00133	5b		 pop	 ebx
  00134	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00137	33 cd		 xor	 ecx, ebp
  00139	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013e	8b e5		 mov	 esp, ebp
  00140	5d		 pop	 ebp
  00141	c3		 ret	 0
$LN8@Init:

; 117  : 				return;
; 118  : 			}
; 119  : 
; 120  : 			void LSSPROTO_203_SEND(int fd, char* data);
; 121  : 			extern unsigned int sockfd;
; 122  : 			char buf[50];
; 123  : 			sprintf(buf, "SETCURRENTGUANGHUAN'%d'", dataÂÖâÁéØ[curSel].bmpNO);

  00142	ff 34 8d 00 00
	00 00		 push	 DWORD PTR ?dataŒ√?@@3PAUŒ√?STRUCT@@A[ecx*4]
  00149	8d 45 b4	 lea	 eax, DWORD PTR _buf$3[ebp]
  0014c	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CICPADPB@SETCURRENTGUANGHUAN?8?$CFd?8@
  00151	50		 push	 eax
  00152	e8 00 00 00 00	 call	 _sprintf

; 124  : 			LSSPROTO_203_SEND(sockfd, buf);

  00157	8d 45 b4	 lea	 eax, DWORD PTR _buf$3[ebp]
  0015a	50		 push	 eax
  0015b	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00161	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  00166	83 c4 14	 add	 esp, 20			; 00000014H
  00169	5f		 pop	 edi

; 210  : 	}
; 211  : 
; 212  : }

  0016a	5e		 pop	 esi
  0016b	5b		 pop	 ebx
  0016c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016f	33 cd		 xor	 ecx, ebp
  00171	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00176	8b e5		 mov	 esp, ebp
  00178	5d		 pop	 ebp
  00179	c3		 ret	 0
$LN7@Init:

; 125  : 			return;
; 126  : 		}
; 127  : 	}
; 128  : 
; 129  : 	//??ÂÖâÁéØ
; 130  : 	StockFontBuffer(x + 200, y + 340, FONT_PRIO_FRONT, FONT_PAL_AQUA, "??ÂÖâÁéØ", 0);

  0017a	6a 00		 push	 0
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_05MFMFFPGD@?$DP?$DP?N?C?$DP@
  00181	6a 01		 push	 1
  00183	6a 01		 push	 1
  00185	8d 87 c8 00 00
	00		 lea	 eax, DWORD PTR [edi+200]
  0018b	56		 push	 esi
  0018c	50		 push	 eax
  0018d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 131  : 	if (MakeHitBox(x + 200 - 5, y + 340 - 5, x + 200 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  00192	6a 6a		 push	 106			; 0000006aH
  00194	53		 push	 ebx
  00195	8d 87 04 01 00
	00		 lea	 eax, DWORD PTR [edi+260]
  0019b	50		 push	 eax
  0019c	8b 45 b0	 mov	 eax, DWORD PTR _y$1$[ebp]
  0019f	05 4f 01 00 00	 add	 eax, 335		; 0000014fH
  001a4	50		 push	 eax
  001a5	8d 87 c3 00 00
	00		 lea	 eax, DWORD PTR [edi+195]
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001b1	83 c4 2c	 add	 esp, 44			; 0000002cH
  001b4	83 f8 01	 cmp	 eax, 1
  001b7	75 2c		 jne	 SHORT $LN10@Init

; 132  : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  001b9	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  001bf	74 24		 je	 SHORT $LN10@Init

; 133  : 			void LSSPROTO_203_SEND(int fd, char* data);
; 134  : 			extern unsigned int sockfd;
; 135  : 			LSSPROTO_203_SEND(sockfd, "CANCELCURRENTGUANGHUAN'");

  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@PPCAMBKD@CANCELCURRENTGUANGHUAN?8@
  001c6	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001cc	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  001d1	83 c4 08	 add	 esp, 8
  001d4	5f		 pop	 edi

; 210  : 	}
; 211  : 
; 212  : }

  001d5	5e		 pop	 esi
  001d6	5b		 pop	 ebx
  001d7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001da	33 cd		 xor	 ecx, ebp
  001dc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e1	8b e5		 mov	 esp, ebp
  001e3	5d		 pop	 ebp
  001e4	c3		 ret	 0
$LN10@Init:

; 136  : 			return;
; 137  : 		}
; 138  : 	}
; 139  : 
; 140  : 	//ÂÖ≥Èó≠
; 141  : 	StockFontBuffer(x + 330, y + 340, FONT_PRIO_FRONT, FONT_PAL_AQUA, "  ÂÖ≥Èó≠  ", 0);

  001e5	6a 00		 push	 0
  001e7	68 00 00 00 00	 push	 OFFSET ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5@
  001ec	6a 01		 push	 1
  001ee	6a 01		 push	 1
  001f0	8d 87 4a 01 00
	00		 lea	 eax, DWORD PTR [edi+330]
  001f6	56		 push	 esi
  001f7	50		 push	 eax
  001f8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 142  : 	if (MakeHitBox(x + 330 - 5, y + 340 - 5, x + 330 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  001fd	8b 75 b0	 mov	 esi, DWORD PTR _y$1$[ebp]
  00200	8d 87 86 01 00
	00		 lea	 eax, DWORD PTR [edi+390]
  00206	6a 6a		 push	 106			; 0000006aH
  00208	53		 push	 ebx
  00209	50		 push	 eax
  0020a	8d 86 4f 01 00
	00		 lea	 eax, DWORD PTR [esi+335]
  00210	50		 push	 eax
  00211	8d 87 45 01 00
	00		 lea	 eax, DWORD PTR [edi+325]
  00217	50		 push	 eax
  00218	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0021d	83 c4 2c	 add	 esp, 44			; 0000002cH
  00220	83 f8 01	 cmp	 eax, 1
  00223	75 23		 jne	 SHORT $LN12@Init

; 143  : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  00225	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  0022b	74 1b		 je	 SHORT $LN12@Init

; 144  : 			MenuToggleFlag &= ~JOY_CTRL_S;

  0022d	81 25 00 00 00
	00 ff ff ff df	 and	 DWORD PTR ?MenuToggleFlag@@3IA, -536870913 ; MenuToggleFlag, dfffffffH
  00237	5f		 pop	 edi

; 210  : 	}
; 211  : 
; 212  : }

  00238	5e		 pop	 esi
  00239	5b		 pop	 ebx
  0023a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0023d	33 cd		 xor	 ecx, ebp
  0023f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00244	8b e5		 mov	 esp, ebp
  00246	5d		 pop	 ebp
  00247	c3		 ret	 0
$LN12@Init:

; 145  : 			return;
; 146  : 		}
; 147  : 	}
; 148  : 
; 149  : 	//ÂèñÁß∞Âè∑‰∏™Êï∞
; 150  : 	int count = count_ÂÖâÁéØ;

  00248	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?count_Œ√?@@3HA ; count_Œ√?

; 151  : 
; 152  : 	//ÊÄªÈ°µÈù¢Êï∞
; 153  : 	nPageTotal = (count + 13 - 1) / 13;

  0024e	b8 4f ec c4 4e	 mov	 eax, 1321528399		; 4ec4ec4fH
  00253	8d 4b 0c	 lea	 ecx, DWORD PTR [ebx+12]
  00256	f7 e9		 imul	 ecx
  00258	c1 fa 02	 sar	 edx, 2
  0025b	8b c2		 mov	 eax, edx
  0025d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00260	03 c2		 add	 eax, edx

; 154  : 
; 155  : 	//ÊòæÁ§∫ È°µÈù¢/ÊÄªÈ°µÈù¢
; 156  : 	char buf[20];
; 157  : 	sprintf(buf, "%d/%d", nPage + 1, nPageTotal);

  00262	50		 push	 eax
  00263	a3 00 00 00 00	 mov	 DWORD PTR ?nPageTotal@@3HA, eax
  00268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPage@@3HA
  0026d	40		 inc	 eax
  0026e	50		 push	 eax
  0026f	8d 45 e8	 lea	 eax, DWORD PTR _buf$[ebp]
  00272	68 00 00 00 00	 push	 OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd@
  00277	50		 push	 eax
  00278	e8 00 00 00 00	 call	 _sprintf

; 158  : 	StockFontBuffer(x + 65, y + 295, FONT_PRIO_FRONT, FONT_PAL_AQUA, buf, 0);

  0027d	6a 00		 push	 0
  0027f	8d 45 e8	 lea	 eax, DWORD PTR _buf$[ebp]
  00282	50		 push	 eax
  00283	6a 01		 push	 1
  00285	6a 01		 push	 1
  00287	8d 86 27 01 00
	00		 lea	 eax, DWORD PTR [esi+295]
  0028d	50		 push	 eax
  0028e	8d 47 41	 lea	 eax, DWORD PTR [edi+65]
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 159  : 
; 160  : 	//ÂèñÂΩìÂâçÈ°µÊòæÁ§∫ÁöÑÊï∞Èáè
; 161  : 	int count_this_page = count - nPage * 13;

  00297	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPage@@3HA
  0029d	83 c4 28	 add	 esp, 40			; 00000028H
  002a0	6b f1 0d	 imul	 esi, ecx, 13
  002a3	2b de		 sub	 ebx, esi

; 162  : 	count_this_page = (count_this_page >= 13) ? 13 : count_this_page % 13;

  002a5	83 fb 0d	 cmp	 ebx, 13			; 0000000dH
  002a8	7c 07		 jl	 SHORT $LN27@Init
  002aa	bb 0d 00 00 00	 mov	 ebx, 13			; 0000000dH
  002af	eb 16		 jmp	 SHORT $LN36@Init
$LN27@Init:
  002b1	b8 b1 13 3b b1	 mov	 eax, -1321528399	; b13b13b1H
  002b6	f7 eb		 imul	 ebx
  002b8	c1 fa 02	 sar	 edx, 2
  002bb	8b c2		 mov	 eax, edx
  002bd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002c0	03 c2		 add	 eax, edx
  002c2	6b c0 0d	 imul	 eax, eax, 13
  002c5	03 d8		 add	 ebx, eax
$LN36@Init:

; 163  : 
; 164  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++){

  002c7	8d 04 1e	 lea	 eax, DWORD PTR [esi+ebx]
  002ca	89 5d a8	 mov	 DWORD PTR _count_this_page$1$[ebp], ebx
  002cd	3b f0		 cmp	 esi, eax
  002cf	0f 8d 22 01 00
	00		 jge	 $LN35@Init

; 168  : 		//ËÆæÂÆöÊñáÂ≠óÂ∑¶‰∏äËßí‰ΩçÁΩÆ
; 169  : 		int x1 = x + 13;

  002d5	8b 7d b0	 mov	 edi, DWORD PTR _y$1$[ebp]
  002d8	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  002df	2b c6		 sub	 eax, esi
  002e1	83 c7 2f	 add	 edi, 47			; 0000002fH
  002e4	8d 1c 85 18 00
	00 00		 lea	 ebx, DWORD PTR ?dataŒ√?@@3PAUŒ√?STRUCT@@A[eax*4+24]
  002eb	0f 1f 44 00 00	 npad	 5
$LL4@Init:

; 165  : 		char buf[30];
; 166  : 		//ÊñáÂ≠óÂ±Ö‰∏≠
; 167  : 		CenteringStr(dataÂÖâÁéØ[i].name, buf, 19);

  002f0	6a 13		 push	 19			; 00000013H
  002f2	8d 45 c8	 lea	 eax, DWORD PTR _buf$4[ebp]
  002f5	50		 push	 eax
  002f6	8d 43 ec	 lea	 eax, DWORD PTR [ebx-20]
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  002ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 170  : 		int y1 = y + 30 + j * 20;
; 171  : 
; 172  : 		//ËæìÂá∫ÊñáÂ≠ó
; 173  : 		if (dataÂÖâÁéØ[i].time != 0)

  00302	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  00305	74 10		 je	 SHORT $LN13@Init

; 174  : 			if (i == curSel){

  00307	33 c0		 xor	 eax, eax
  00309	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?curSel@@3HA
  0030f	0f 94 c0	 sete	 al
  00312	83 c0 05	 add	 eax, 5

; 175  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_RED, buf, 0);	//Á∫¢Ëâ≤
; 176  : 			}else{
; 177  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);	//ÁªøËâ≤
; 178  : 			}

  00315	eb 05		 jmp	 SHORT $LN14@Init
$LN13@Init:

; 179  : 		else
; 180  : 			StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GRAY, buf, 0);	//ÁÅ∞Ëâ≤

  00317	b8 07 00 00 00	 mov	 eax, 7
$LN14@Init:

; 181  : 
; 182  : 																				//ÁîªÁªøÊ°ÜÊ°ÜÂπ∂Âà§Êñ≠ÁÇπÂáª
; 183  : 		if (MakeHitBox(x1, y1 - 2, x1 + 130, y1 + 17, DISP_PRIO_IME4) == TRUE){

  0031c	6a 00		 push	 0
  0031e	8d 4d c8	 lea	 ecx, DWORD PTR _buf$4[ebp]
  00321	51		 push	 ecx
  00322	50		 push	 eax
  00323	6a 01		 push	 1
  00325	8d 47 ef	 lea	 eax, DWORD PTR [edi-17]
  00328	50		 push	 eax
  00329	8b 45 ac	 mov	 eax, DWORD PTR _x$1$[ebp]
  0032c	83 c0 0d	 add	 eax, 13			; 0000000dH
  0032f	50		 push	 eax
  00330	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00335	8b 4d ac	 mov	 ecx, DWORD PTR _x$1$[ebp]
  00338	83 c1 0d	 add	 ecx, 13			; 0000000dH
  0033b	6a 6a		 push	 106			; 0000006aH
  0033d	57		 push	 edi
  0033e	8d 81 82 00 00
	00		 lea	 eax, DWORD PTR [ecx+130]
  00344	50		 push	 eax
  00345	8d 47 ed	 lea	 eax, DWORD PTR [edi-19]
  00348	50		 push	 eax
  00349	51		 push	 ecx
  0034a	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0034f	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00355	83 c4 2c	 add	 esp, 44			; 0000002cH
  00358	83 f8 01	 cmp	 eax, 1
  0035b	75 05		 jne	 SHORT $LN2@Init

; 184  : 			if (mouse.onceState & MOUSE_LEFT_CRICK){

  0035d	f6 c2 01	 test	 dl, 1
  00360	75 1d		 jne	 SHORT $LN30@Init
$LN2@Init:

; 163  : 
; 164  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++){

  00362	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPage@@3HA
  00368	46		 inc	 esi
  00369	6b c1 0d	 imul	 eax, ecx, 13
  0036c	83 c3 1c	 add	 ebx, 28			; 0000001cH
  0036f	83 c7 14	 add	 edi, 20			; 00000014H
  00372	03 45 a8	 add	 eax, DWORD PTR _count_this_page$1$[ebp]
  00375	3b f0		 cmp	 esi, eax
  00377	0f 8c 73 ff ff
	ff		 jl	 $LL4@Init
  0037d	eb 7e		 jmp	 SHORT $LN34@Init
$LN30@Init:

; 185  : 				//‰øùÂ≠òÁÇπÂáªÁöÑÁºñÂè∑
; 186  : 				curSel = i;

  0037f	89 35 00 00 00
	00		 mov	 DWORD PTR ?curSel@@3HA, esi

; 187  : 				//Âà†Èô§ÂéüÊúâÂä®Áîª
; 188  : 				delActÂÖâÁéØ();

  00385	e8 00 00 00 00	 call	 ?delActŒ√?@@YAXXZ	; delActŒ√?

; 189  : 
; 190  : 				pActÂÖâÁéØ‰∫∫Áâ© = MakeAnimDisp(x + 280, y + 184, pc.graNo, 0);

  0038a	8b 7d b0	 mov	 edi, DWORD PTR _y$1$[ebp]
  0038d	8b 5d ac	 mov	 ebx, DWORD PTR _x$1$[ebp]
  00390	81 c7 b8 00 00
	00		 add	 edi, 184		; 000000b8H
  00396	6a 00		 push	 0
  00398	ff 35 00 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A
  0039e	81 c3 18 01 00
	00		 add	 ebx, 280		; 00000118H
  003a4	57		 push	 edi
  003a5	53		 push	 ebx
  003a6	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp

; 191  : 
; 192  : 				short x2, y2;
; 193  : 				if (Ëé∑ÂèñÂä®ÁîªÂ∞∫ÂØ∏(pActÂÖâÁéØ‰∫∫Áâ©, &x2, &y2)){

  003ab	8d 4d a4	 lea	 ecx, DWORD PTR _y2$1[ebp]
  003ae	a3 00 00 00 00	 mov	 DWORD PTR ?pActŒ√?Ï—⁄™@@3PAUaction@@A, eax ; pActŒ√?Ï—⁄™
  003b3	51		 push	 ecx
  003b4	8d 4d a8	 lea	 ecx, DWORD PTR _x2$2[ebp]
  003b7	51		 push	 ecx
  003b8	50		 push	 eax
  003b9	e8 00 00 00 00	 call	 ??ˆ¢??Ù©ıª@@YAHPAUaction@@PAF1@Z ; ?ˆ¢??Ù©ıª
  003be	83 c4 1c	 add	 esp, 28			; 0000001cH
  003c1	85 c0		 test	 eax, eax
  003c3	74 7c		 je	 SHORT $LN20@Init

; 194  : 					pActÂÖâÁéØ = MakeAnimDisp(x + 280, y + 184, dataÂÖâÁéØ[i].bmpNO, 0);

  003c5	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  003cc	2b c6		 sub	 eax, esi
  003ce	6a 00		 push	 0
  003d0	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?dataŒ√?@@3PAUŒ√?STRUCT@@A[eax*4]
  003d7	57		 push	 edi
  003d8	53		 push	 ebx
  003d9	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  003de	83 c4 10	 add	 esp, 16			; 00000010H
  003e1	a3 00 00 00 00	 mov	 DWORD PTR ?pActŒ√?@@3PAUaction@@A, eax ; pActŒ√?
  003e6	5f		 pop	 edi

; 210  : 	}
; 211  : 
; 212  : }

  003e7	5e		 pop	 esi
  003e8	5b		 pop	 ebx
  003e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003ec	33 cd		 xor	 ecx, ebp
  003ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003f3	8b e5		 mov	 esp, ebp
  003f5	5d		 pop	 ebp
  003f6	c3		 ret	 0
$LN35@Init:

; 163  : 
; 164  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++){

  003f7	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
$LN34@Init:

; 195  : 				}
; 196  : 				return;
; 197  : 			}
; 198  : 		}
; 199  : 	}
; 200  : 
; 201  : 	if (mouse.onceState & MOUSE_LEFT_CRICK){

  003fd	f6 c2 01	 test	 dl, 1
  00400	74 3f		 je	 SHORT $LN20@Init

; 202  : 		if (HitDispNo == button[0]){ //Â∑¶ÁÆ≠Â§¥

  00402	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00407	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?button@@3PAHA
  0040d	75 17		 jne	 SHORT $LN21@Init

; 203  : 			nPage--;

  0040f	83 e9 01	 sub	 ecx, 1
  00412	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPage@@3HA, ecx

; 204  : 			if (nPage < 0)nPage = 0;

  00418	79 26		 jns	 SHORT $LN25@Init
  0041a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, 0
  00424	eb 1a		 jmp	 SHORT $LN25@Init
$LN21@Init:

; 205  : 		}else if (HitDispNo == button[1]){ //Âè≥ÁÆ≠Â§¥

  00426	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?button@@3PAHA+4
  0042c	75 12		 jne	 SHORT $LN25@Init

; 206  : 			nPage++;
; 207  : 			if (nPage >= nPageTotal- 1) nPage = nPageTotal -1 ;

  0042e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPageTotal@@3HA
  00433	41		 inc	 ecx
  00434	48		 dec	 eax
  00435	3b c8		 cmp	 ecx, eax
  00437	0f 4d c8	 cmovge	 ecx, eax
  0043a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPage@@3HA, ecx
$LN25@Init:

; 208  : 		}
; 209  : 		__asm nop;

  00440	90		 npad	 1
$LN20@Init:

; 210  : 	}
; 211  : 
; 212  : }

  00441	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00444	5f		 pop	 edi
  00445	5e		 pop	 esi
  00446	33 cd		 xor	 ecx, ebp
  00448	5b		 pop	 ebx
  00449	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0044e	8b e5		 mov	 esp, ebp
  00450	5d		 pop	 ebp
  00451	c3		 ret	 0
?InitŒ√??œ¢@@YAXXZ ENDP					; InitŒ√??œ¢
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\πŸ≈¡ »≠∏È\∏æƒÌøœ∑·\Client Source Code1.31¿œ∫ª\system\Œ√?.cpp
;	COMDAT ?delActŒ√?@@YAXXZ
_TEXT	SEGMENT
?delActŒ√?@@YAXXZ PROC					; delActŒ√?, COMDAT

; 81   : 	if (pActÂÖâÁéØ‰∫∫Áâ©){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActŒ√?Ï—⁄™@@3PAUaction@@A ; pActŒ√?Ï—⁄™
  00005	85 c0		 test	 eax, eax
  00007	74 13		 je	 SHORT $LN2@delAct

; 82   : 		DeathAction(pActÂÖâÁéØ‰∫∫Áâ©);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0000f	83 c4 04	 add	 esp, 4

; 83   : 		pActÂÖâÁéØ‰∫∫Áâ© = NULL;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActŒ√?Ï—⁄™@@3PAUaction@@A, 0 ; pActŒ√?Ï—⁄™
$LN2@delAct:

; 84   : 	}
; 85   : 	if (pActÂÖâÁéØ){

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActŒ√?@@3PAUaction@@A ; pActŒ√?
  00021	85 c0		 test	 eax, eax
  00023	74 13		 je	 SHORT $LN3@delAct

; 86   : 		DeathAction(pActÂÖâÁéØ);

  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0002b	83 c4 04	 add	 esp, 4

; 87   : 		pActÂÖâÁéØ = NULL;

  0002e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActŒ√?@@3PAUaction@@A, 0 ; pActŒ√?
$LN3@delAct:

; 88   : 	}
; 89   : }

  00038	c3		 ret	 0
?delActŒ√?@@YAXXZ ENDP					; delActŒ√?
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\πŸ≈¡ »≠∏È\∏æƒÌøœ∑·\Client Source Code1.31¿œ∫ª\system\Œ√?.cpp
;	COMDAT ?lssproto_??Œ√?_recv@@YAXPAD@Z
_TEXT	SEGMENT
tv369 = -8036						; size = 4
_count$1$ = -8036					; size = 4
_pData$1$ = -8032					; size = 4
_array2$ = -8028					; size = 8004
_array$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?lssproto_??Œ√?_recv@@YAXPAD@Z PROC			; lssproto_??Œ√?_recv, COMDAT

; 39   : void lssproto_Êü•ËØ¢ÂÖâÁéØ_recv(char* data){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 64 1f 00 00	 mov	 eax, 8036		; 00001f64H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]

; 40   : 	char* array[5];
; 41   : 	int count = split_damage(data, '\'', (int*)array, 4);

  0001a	8d 4d e8	 lea	 ecx, DWORD PTR _array$[ebp]
  0001d	6a 04		 push	 4
  0001f	51		 push	 ecx
  00020	6a 27		 push	 39			; 00000027H
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 ?split_damage@@YAHPADDPAHI@Z ; split_damage
  00028	83 c4 10	 add	 esp, 16			; 00000010H

; 42   : 	if (count != 3)return;

  0002b	83 f8 03	 cmp	 eax, 3
  0002e	0f 85 07 01 00
	00		 jne	 $LN6@lssproto_

; 43   : 
; 44   : 	char* array2[2001];
; 45   : 	count = split_damage(array[1], '|', (int*)array2, 2000);

  00034	53		 push	 ebx
  00035	56		 push	 esi
  00036	57		 push	 edi
  00037	68 d0 07 00 00	 push	 2000			; 000007d0H
  0003c	8d 85 a4 e0 ff
	ff		 lea	 eax, DWORD PTR _array2$[ebp]
  00042	50		 push	 eax
  00043	6a 7c		 push	 124			; 0000007cH
  00045	ff 75 ec	 push	 DWORD PTR _array$[ebp+4]
  00048	e8 00 00 00 00	 call	 ?split_damage@@YAHPADDPAHI@Z ; split_damage

; 46   : 
; 47   : 	ÂÖâÁéØSTRUCT* pData = NULL;
; 48   : 	int max = 0;
; 49   : 
; 50   : 	if (lstrcmpiA(array[0], "CHENHAORIGHT") == 0){	//Áß∞Âè∑

  0004d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__lstrcmpiA@8
  00053	83 c4 10	 add	 esp, 16			; 00000010H
  00056	33 ff		 xor	 edi, edi
  00058	89 85 9c e0 ff
	ff		 mov	 DWORD PTR _count$1$[ebp], eax
  0005e	89 bd a0 e0 ff
	ff		 mov	 DWORD PTR _pData$1$[ebp], edi
  00064	33 db		 xor	 ebx, ebx
  00066	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GBMJNGDM@CHENHAORIGHT@
  0006b	ff 75 e8	 push	 DWORD PTR _array$[ebp]
  0006e	ff d6		 call	 esi
  00070	85 c0		 test	 eax, eax
  00072	75 0c		 jne	 SHORT $LN12@lssproto_

; 51   : 		extern ÂÖâÁéØSTRUCT dataÁß∞Âè∑[];
; 52   : 		pData = &dataÁß∞Âè∑[0];

  00074	bf 00 00 00 00	 mov	 edi, OFFSET ?data??@@3PAUŒ√?STRUCT@@A ; data??

; 53   : 		max = MAX_COUNT_Áß∞Âè∑;

  00079	bb c8 00 00 00	 mov	 ebx, 200		; 000000c8H
  0007e	eb 32		 jmp	 SHORT $LN35@lssproto_
$LN12@lssproto_:

; 54   : 	}else if (lstrcmpiA(array[0], "GUANGHUANRIGHT") == 0){//ÂÖâÁéØ

  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GKNHDFHB@GUANGHUANRIGHT@
  00085	ff 75 e8	 push	 DWORD PTR _array$[ebp]
  00088	ff d6		 call	 esi
  0008a	85 c0		 test	 eax, eax
  0008c	75 0c		 jne	 SHORT $LN14@lssproto_

; 55   : 		extern ÂÖâÁéØSTRUCT dataÂÖâÁéØ[];
; 56   : 		pData = &dataÂÖâÁéØ[0];

  0008e	bf 00 00 00 00	 mov	 edi, OFFSET ?dataŒ√?@@3PAUŒ√?STRUCT@@A ; dataŒ√?

; 57   : 		max = MAX_COUNT_ÂÖâÁéØ;

  00093	bb c8 00 00 00	 mov	 ebx, 200		; 000000c8H
  00098	eb 18		 jmp	 SHORT $LN35@lssproto_
$LN14@lssproto_:

; 58   : 	}else if (lstrcmpiA(array[0], "PIFURIGHT") == 0){//ÁöÆËÇ§

  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_09PLHHBOIP@PIFURIGHT@
  0009f	ff 75 e8	 push	 DWORD PTR _array$[ebp]
  000a2	ff d6		 call	 esi
  000a4	85 c0		 test	 eax, eax
  000a6	75 26		 jne	 SHORT $LN3@lssproto_

; 59   : 		extern ÂÖâÁéØSTRUCT dataÁöÆËÇ§[];
; 60   : 		pData = &dataÁöÆËÇ§[0];

  000a8	bf 00 00 00 00	 mov	 edi, OFFSET ?data˘´?@@3PAUŒ√?STRUCT@@A ; data˘´?

; 61   : 		max = MAX_COUNT_ÁöÆËÇ§;

  000ad	bb 58 02 00 00	 mov	 ebx, 600		; 00000258H
$LN35@lssproto_:

; 62   : 	}
; 63   : 	//ÂÖàÂ∞ÜÊâÄÊúâÊï∞ÊçÆÁöÑÊó∂Èó¥Ê∏Ö0
; 64   : 	for (int i = 0; i < max; i++){

  000b2	89 bd a0 e0 ff
	ff		 mov	 DWORD PTR _pData$1$[ebp], edi
  000b8	8d 47 18	 lea	 eax, DWORD PTR [edi+24]
  000bb	8b cb		 mov	 ecx, ebx
  000bd	0f 1f 00	 npad	 3
$LL4@lssproto_:

; 65   : 		pData[i].time = 0;

  000c0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  000c6	8d 40 1c	 lea	 eax, DWORD PTR [eax+28]
  000c9	83 e9 01	 sub	 ecx, 1
  000cc	75 f2		 jne	 SHORT $LL4@lssproto_
$LN3@lssproto_:

; 66   : 	}
; 67   : 
; 68   : 	for (int i = 0; i < count/2; i++){

  000ce	8b 85 9c e0 ff
	ff		 mov	 eax, DWORD PTR _count$1$[ebp]
  000d4	33 f6		 xor	 esi, esi
  000d6	99		 cdq
  000d7	2b c2		 sub	 eax, edx
  000d9	d1 f8		 sar	 eax, 1
  000db	89 85 9c e0 ff
	ff		 mov	 DWORD PTR tv369[ebp], eax
  000e1	85 c0		 test	 eax, eax
  000e3	7e 53		 jle	 SHORT $LN32@lssproto_
  000e5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL7@lssproto_:

; 69   : 		int image = atoi(array2[2 * i]);

  000f0	ff b4 f5 a4 e0
	ff ff		 push	 DWORD PTR _array2$[ebp+esi*8]
  000f7	e8 00 00 00 00	 call	 _atoi

; 70   : 		int time = atoi(array2[2 * i + 1]);

  000fc	ff b4 f5 a8 e0
	ff ff		 push	 DWORD PTR _array2$[ebp+esi*8+4]
  00103	8b f8		 mov	 edi, eax
  00105	e8 00 00 00 00	 call	 _atoi
  0010a	83 c4 08	 add	 esp, 8

; 71   : 		for (int j = 0; j < max; j++){

  0010d	85 db		 test	 ebx, ebx
  0010f	74 1e		 je	 SHORT $LN5@lssproto_

; 69   : 		int image = atoi(array2[2 * i]);

  00111	8b 8d a0 e0 ff
	ff		 mov	 ecx, DWORD PTR _pData$1$[ebp]
  00117	8b d3		 mov	 edx, ebx
  00119	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@lssproto_:

; 72   : 			if (pData[j].bmpNO == image){

  00120	39 39		 cmp	 DWORD PTR [ecx], edi
  00122	75 03		 jne	 SHORT $LN8@lssproto_

; 73   : 				pData[j].time = time;

  00124	89 41 18	 mov	 DWORD PTR [ecx+24], eax
$LN8@lssproto_:

; 71   : 		for (int j = 0; j < max; j++){

  00127	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0012a	83 ea 01	 sub	 edx, 1
  0012d	75 f1		 jne	 SHORT $LL10@lssproto_
$LN5@lssproto_:

; 66   : 	}
; 67   : 
; 68   : 	for (int i = 0; i < count/2; i++){

  0012f	46		 inc	 esi
  00130	3b b5 9c e0 ff
	ff		 cmp	 esi, DWORD PTR tv369[ebp]
  00136	7c b8		 jl	 SHORT $LL7@lssproto_
$LN32@lssproto_:
  00138	5f		 pop	 edi
  00139	5e		 pop	 esi
  0013a	5b		 pop	 ebx
$LN6@lssproto_:

; 74   : 			}
; 75   : 		}
; 76   : 	}
; 77   : 
; 78   : }

  0013b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013e	33 cd		 xor	 ecx, ebp
  00140	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c3		 ret	 0
?lssproto_??Œ√?_recv@@YAXPAD@Z ENDP			; lssproto_??Œ√?_recv
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
