; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\login.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?shopWindowProcNo@@3FA				; shopWindowProcNo
PUBLIC	?PetskillShpwWindowProcNo@@3FA			; PetskillShpwWindowProcNo
PUBLIC	?AuctionStr@@3USTR_BUFFER@@A			; AuctionStr
PUBLIC	?AuctionMoney@@3USTR_BUFFER@@A			; AuctionMoney
PUBLIC	?shopWindow1ProcNo@@3FA				; shopWindow1ProcNo
PUBLIC	?shopWindow2ProcNo@@3FA				; shopWindow2ProcNo
PUBLIC	?shopWindow3ProcNo@@3FA				; shopWindow3ProcNo
PUBLIC	?shopWindow4ProcNo@@3FA				; shopWindow4ProcNo
PUBLIC	?shopWindow5ProcNo@@3FA				; shopWindow5ProcNo
PUBLIC	?shopWindow6ProcNo@@3FA				; shopWindow6ProcNo
PUBLIC	?shopWindow7ProcNo@@3FA				; shopWindow7ProcNo
PUBLIC	?shopWindow8ProcNo@@3FA				; shopWindow8ProcNo
PUBLIC	?shopWindow10ProcNo@@3FA			; shopWindow10ProcNo
PUBLIC	?skillShopWindow2ProcNo@@3FA			; skillShopWindow2ProcNo
PUBLIC	?skillShopWindow3ProcNo@@3FA			; skillShopWindow3ProcNo
PUBLIC	?poolShopWindow1ProcNo@@3FA			; poolShopWindow1ProcNo
PUBLIC	?poolShopWindow2ProcNo@@3FA			; poolShopWindow2ProcNo
PUBLIC	?poolShopWindow3ProcNo@@3FA			; poolShopWindow3ProcNo
PUBLIC	?poolShopWindow4ProcNo@@3FA			; poolShopWindow4ProcNo
PUBLIC	?familyElf@@3HA					; familyElf
PUBLIC	?familyNameInput@@3USTR_BUFFER@@A		; familyNameInput
PUBLIC	?familyRuleInput@@3USTR_BUFFER@@A		; familyRuleInput
PUBLIC	?familyRuleShow@@3USTR_BUFFER@@A		; familyRuleShow
PUBLIC	?ýÅíñËÀÌ«@@3HA					; ýÅíñËÀÌ«
PUBLIC	?familyDetail@@3U<unnamed-type-familyDetail>@@A	; familyDetail
PUBLIC	?fmDutyproc@@3HA				; fmDutyproc
PUBLIC	?fmDutyRet@@3HA					; fmDutyRet
PUBLIC	?fmYesNoproc@@3HA				; fmYesNoproc
PUBLIC	?fmYesNoRet@@3HA				; fmYesNoRet
PUBLIC	?lnmake@@3FA					; lnmake
PUBLIC	?FMPKDataList@@3PAUFMPKData@@A			; FMPKDataList
PUBLIC	?serverTime@@3HA				; serverTime
PUBLIC	?winStr@@3PAY0BA@DA				; winStr
PUBLIC	?FMPKSelectData@@3PAUFMPKSelect@@A		; FMPKSelectData
PUBLIC	?FMPKSelectNum@@3HA				; FMPKSelectNum
PUBLIC	?FMPKDetailData@@3UFMPKDetail@@A		; FMPKDetailData
PUBLIC	?familyTax@@3HA					; familyTax
PUBLIC	?familyTaxChange@@3HA				; familyTaxChange
PUBLIC	?haveGold@@3HA					; haveGold
PUBLIC	?rideablePet@@3PAHA				; rideablePet
PUBLIC	?showNum@@3HA					; showNum
PUBLIC	?memberName@@3PAY0CE@DA				; memberName
PUBLIC	?memberIndex@@3PAHA				; memberIndex
PUBLIC	?memberNum@@3HA					; memberNum
PUBLIC	?changeWho@@3HA					; changeWho
PUBLIC	?oldLeaderName@@3PADA				; oldLeaderName
PUBLIC	?oldLeaderIndex@@3HA				; oldLeaderIndex
PUBLIC	?mineFamily@@3U<unnamed-type-mineFamily>@@A	; mineFamily
PUBLIC	?familyJobName@@3PAPADA				; familyJobName
PUBLIC	??_C@_0L@GHPFLEHL@?$LJ?L?$LA?$KB?$MA?T?$LA?$KB?A?$LH@ ; `string'
PUBLIC	??_C@_0L@MFGFKAEI@?5?$LK?N?5?A?$LH?5?$LP?x?5@	; `string'
PUBLIC	??_C@_08GOJGDLLD@?$MA?S?$LN?C?$LA?$KB?$MA?T@	; `string'
PUBLIC	??_C@_08ECFEKNKI@?5?A?$LH?5?5?$MA?e?5@		; `string'
PUBLIC	??_C@_08PIEEGEIM@?5?$MA?e?5?5?$LH?N?5@		; `string'
PUBLIC	?familyTownName@@3PAPADA			; familyTownName
PUBLIC	??_C@_0L@HHLJABBI@?$LM?$KE?$LB?b?$LI?$KD?A?$KE?$LP?x@ ; `string'
PUBLIC	??_C@_0N@KAPGNPPN@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?A?$KE?$LP?x@ ; `string'
PUBLIC	??_C@_08IDMOOHGA@?$MA?p?$MA?p?A?$KE?$LP?x@	; `string'
PUBLIC	??_C@_0N@NNHNHLEI@?D?$KL?$LH?g?E?$LI?$LD?$KK?A?$KE?$LP?x@ ; `string'
PUBLIC	?pBankProcWnd@@3PAUaction@@A			; pBankProcWnd
PUBLIC	?AuctionItem@@3USTR_BUFFER@@A			; AuctionItem
PUBLIC	?pActAuctionWT@@3PAUaction@@A			; pActAuctionWT
PUBLIC	?logOutFlag@@3HA				; logOutFlag
PUBLIC	?MsgCooltime@@3IA				; MsgCooltime
PUBLIC	?createCharFlag@@3FA				; createCharFlag
PUBLIC	?windowTypeWN@@3HA				; windowTypeWN
PUBLIC	?wnCloseFlag@@3FA				; wnCloseFlag
PUBLIC	?mouseGetName@@3PADA				; mouseGetName
PUBLIC	?contractSign@@3PAUcontractSignTag@@A		; contractSign
PUBLIC	?contractDetail@@3PADA				; contractDetail
PUBLIC	?contractArgnum@@3HA				; contractArgnum
PUBLIC	?contractTime@@3PADA				; contractTime
PUBLIC	?contractSignIndex@@3HA				; contractSignIndex
PUBLIC	?contractSigned@@3HA				; contractSigned
PUBLIC	?linemsgWN@@3PAY0MI@DA				; linemsgWN
PUBLIC	?ranktitle@@3PADA				; ranktitle
PUBLIC	?nGroup@@3HA					; nGroup
PUBLIC	?nServerGroup@@3HA				; nServerGroup
PUBLIC	?szUser@@3PADA					; szUser
PUBLIC	?szPassword@@3PADA				; szPassword
PUBLIC	?szUser_JL@@3PADA				; szUser_JL
PUBLIC	?szPassword_JL@@3PADA				; szPassword_JL
PUBLIC	?szpALD@@3PADA					; szpALD
PUBLIC	?bNewData@@3HA					; bNewData
PUBLIC	?BigpBuffer@@3PADA				; BigpBuffer
PUBLIC	?skillShopWindow4ProcNo@@3FA			; skillShopWindow4ProcNo
PUBLIC	?skillShopWindow1ProcNo@@3FA			; skillShopWindow1ProcNo
PUBLIC	?idKey@@3USTR_BUFFER@@A				; idKey
PUBLIC	?passwd@@3USTR_BUFFER@@A			; passwd
PUBLIC	?idPasswordStr@@3PAUSTR_BUFFER@@A		; idPasswordStr
PUBLIC	?idKeyReturn@@3FA				; idKeyReturn
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	?ptActSelectServerWin@@3PAUaction@@A		; ptActSelectServerWin
PUBLIC	?selectGraLocate@@3PAY01HA			; selectGraLocate
PUBLIC	?selectGraHitArea@@3PAY03HA			; selectGraHitArea
PUBLIC	?selCharName@@3USTR_BUFFER@@A			; selCharName
PUBLIC	?buttonTypeWN@@3HA				; buttonTypeWN
PUBLIC	?indexWN@@3HA					; indexWN
PUBLIC	?idWN@@3HA					; idWN
PUBLIC	?msgWN@@3PAY0BAA@DA				; msgWN
PUBLIC	?msgWNLen@@3HA					; msgWNLen
PUBLIC	?msgWN_W@@3HA					; msgWN_W
PUBLIC	?msgWN_H@@3HA					; msgWN_H
PUBLIC	?ptActMenuWin@@3PAUaction@@A			; ptActMenuWin
PUBLIC	?selStartLine@@3HA				; selStartLine
PUBLIC	?wnOpenX@@3HA					; wnOpenX
PUBLIC	?wnOpenY@@3HA					; wnOpenY
PUBLIC	?shopWindowMode@@3FA				; shopWindowMode
PUBLIC	?shopWindow1Title@@3PADA			; shopWindow1Title
PUBLIC	?shopWindow1Msg@@3PADA				; shopWindow1Msg
PUBLIC	?menuIndexWN@@3HA				; menuIndexWN
PUBLIC	?shopWindow2Msg@@3PAY0CN@DA			; shopWindow2Msg
PUBLIC	?shopWondow2Page@@3FA				; shopWondow2Page
PUBLIC	?shopWondow2MaxPage@@3FA			; shopWondow2MaxPage
PUBLIC	?sealItem@@3PAUITEM_SHOP@@A			; sealItem
PUBLIC	?selShopItemNo@@3FA				; selShopItemNo
PUBLIC	?shopWindow3Msg@@3PADA				; shopWindow3Msg
PUBLIC	?sealItemCnt@@3FA				; sealItemCnt
PUBLIC	?shopWindow4Msg@@3PAY0CH@DA			; shopWindow4Msg
PUBLIC	?shopWindow5Msg@@3PAY0CH@DA			; shopWindow5Msg
PUBLIC	?shopWindow6Msg@@3PAY0CH@DA			; shopWindow6Msg
PUBLIC	?nowUserItemCnt@@3FA				; nowUserItemCnt
PUBLIC	?shopWindow7Msg@@3PAY0CH@DA			; shopWindow7Msg
PUBLIC	?shopWindow8Msg@@3PAY0CH@DA			; shopWindow8Msg
PUBLIC	?FMmsgWN@@3PAHA					; FMmsgWN
PUBLIC	?FMelderFlag@@3PAHA				; FMelderFlag
PUBLIC	?FMpidWN@@3PAHA					; FMpidWN
PUBLIC	?FMdengonidex@@3HA				; FMdengonidex
PUBLIC	?FMnameWN@@3PAY0BE@DA				; FMnameWN
PUBLIC	?FMHoldTime@@3_JA				; FMHoldTime
PUBLIC	?userItem@@3PAUITEM_SHOP@@A			; userItem
PUBLIC	?buyOffFlag@@3FA				; buyOffFlag
PUBLIC	?sealSkill@@3PAUSKILL_SHOP@@A			; sealSkill
PUBLIC	?skillShopWindowProcNo@@3FA			; skillShopWindowProcNo
PUBLIC	?selShopSkillNo@@3FA				; selShopSkillNo
PUBLIC	?selShopSkillPetNo@@3FA				; selShopSkillPetNo
PUBLIC	?selShopSkillSlotNo@@3FA			; selShopSkillSlotNo
PUBLIC	?restPoolSlot@@3HA				; restPoolSlot
PUBLIC	?poolItem@@3PAUPOOL_SHOP@@A			; poolItem
PUBLIC	?ProfessionShopTitle@@3PADA			; ProfessionShopTitle
PUBLIC	?ProfessionShopMsg@@3PAY0CN@DA			; ProfessionShopMsg
PUBLIC	?LoginAnnounce@@3HA				; LoginAnnounce
PUBLIC	?AnnounceBuf@@3PADA				; AnnounceBuf
PUBLIC	?WinLua@@3PAUlua_State@@A			; WinLua
PUBLIC	?cloasewindows@@3HA				; cloasewindows
PUBLIC	?windows@@3USA_WINDOWS@@A			; windows
_BSS	SEGMENT
?shopWindowProcNo@@3FA DW 01H DUP (?)			; shopWindowProcNo
	ALIGN	4

?PetskillShpwWindowProcNo@@3FA DW 01H DUP (?)		; PetskillShpwWindowProcNo
	ALIGN	4

?AuctionStr@@3USTR_BUFFER@@A DB 0128H DUP (?)		; AuctionStr
?AuctionMoney@@3USTR_BUFFER@@A DB 0128H DUP (?)		; AuctionMoney
?shopWindow1ProcNo@@3FA DW 01H DUP (?)			; shopWindow1ProcNo
	ALIGN	4

?shopWindow2ProcNo@@3FA DW 01H DUP (?)			; shopWindow2ProcNo
	ALIGN	4

?shopWindow3ProcNo@@3FA DW 01H DUP (?)			; shopWindow3ProcNo
	ALIGN	4

?shopWindow4ProcNo@@3FA DW 01H DUP (?)			; shopWindow4ProcNo
	ALIGN	4

?shopWindow5ProcNo@@3FA DW 01H DUP (?)			; shopWindow5ProcNo
	ALIGN	4

?shopWindow6ProcNo@@3FA DW 01H DUP (?)			; shopWindow6ProcNo
	ALIGN	4

?shopWindow7ProcNo@@3FA DW 01H DUP (?)			; shopWindow7ProcNo
	ALIGN	4

?shopWindow8ProcNo@@3FA DW 01H DUP (?)			; shopWindow8ProcNo
	ALIGN	4

?shopWindow10ProcNo@@3FA DW 01H DUP (?)			; shopWindow10ProcNo
	ALIGN	4

?skillShopWindow2ProcNo@@3FA DW 01H DUP (?)		; skillShopWindow2ProcNo
	ALIGN	4

?skillShopWindow3ProcNo@@3FA DW 01H DUP (?)		; skillShopWindow3ProcNo
	ALIGN	4

?poolShopWindow1ProcNo@@3FA DW 01H DUP (?)		; poolShopWindow1ProcNo
	ALIGN	4

?poolShopWindow2ProcNo@@3FA DW 01H DUP (?)		; poolShopWindow2ProcNo
	ALIGN	4

?poolShopWindow3ProcNo@@3FA DW 01H DUP (?)		; poolShopWindow3ProcNo
	ALIGN	4

?poolShopWindow4ProcNo@@3FA DW 01H DUP (?)		; poolShopWindow4ProcNo
	ALIGN	4

?familyNameInput@@3USTR_BUFFER@@A DB 0128H DUP (?)	; familyNameInput
?familyRuleInput@@3USTR_BUFFER@@A DB 0128H DUP (?)	; familyRuleInput
?familyRuleShow@@3USTR_BUFFER@@A DB 0128H DUP (?)	; familyRuleShow
?familyDetail@@3U<unnamed-type-familyDetail>@@A DB 0120H DUP (?) ; familyDetail
?fmDutyproc@@3HA DD 01H DUP (?)				; fmDutyproc
?fmDutyRet@@3HA DD 01H DUP (?)				; fmDutyRet
?fmYesNoproc@@3HA DD 01H DUP (?)			; fmYesNoproc
?fmYesNoRet@@3HA DD 01H DUP (?)				; fmYesNoRet
?lnmake@@3FA DW	01H DUP (?)				; lnmake
	ALIGN	8

?FMPKDataList@@3PAUFMPKData@@A DB 0100H DUP (?)		; FMPKDataList
?serverTime@@3HA DD 01H DUP (?)				; serverTime
?FMPKSelectData@@3PAUFMPKSelect@@A DB 0c0H DUP (?)	; FMPKSelectData
?FMPKSelectNum@@3HA DD 01H DUP (?)			; FMPKSelectNum
?FMPKDetailData@@3UFMPKDetail@@A DB 034H DUP (?)	; FMPKDetailData
?familyTax@@3HA DD 01H DUP (?)				; familyTax
?familyTaxChange@@3HA DD 01H DUP (?)			; familyTaxChange
?haveGold@@3HA DD 01H DUP (?)				; haveGold
?rideablePet@@3PAHA DD 03H DUP (?)			; rideablePet
?showNum@@3HA DD 01H DUP (?)				; showNum
?memberName@@3PAY0CE@DA DB 0e10H DUP (?)		; memberName
?memberIndex@@3PAHA DD 064H DUP (?)			; memberIndex
?memberNum@@3HA DD 01H DUP (?)				; memberNum
?changeWho@@3HA DD 01H DUP (?)				; changeWho
?oldLeaderName@@3PADA DB 024H DUP (?)			; oldLeaderName
?oldLeaderIndex@@3HA DD 01H DUP (?)			; oldLeaderIndex
?mineFamily@@3U<unnamed-type-mineFamily>@@A DB 0208H DUP (?) ; mineFamily
?pBankProcWnd@@3PAUaction@@A DD 01H DUP (?)		; pBankProcWnd
?AuctionItem@@3USTR_BUFFER@@A DB 0128H DUP (?)		; AuctionItem
?pActAuctionWT@@3PAUaction@@A DD 01H DUP (?)		; pActAuctionWT
?logOutFlag@@3HA DD 01H DUP (?)				; logOutFlag
?MsgCooltime@@3IA DD 01H DUP (?)			; MsgCooltime
?createCharFlag@@3FA DW 01H DUP (?)			; createCharFlag
	ALIGN	4

?wnCloseFlag@@3FA DW 01H DUP (?)			; wnCloseFlag
	ALIGN	4

?mouseGetName@@3PADA DB 014H DUP (?)			; mouseGetName
?contractSign@@3PAUcontractSignTag@@A DB 0110H DUP (?)	; contractSign
?contractDetail@@3PADA DB 0800H DUP (?)			; contractDetail
?contractArgnum@@3HA DD 01H DUP (?)			; contractArgnum
?contractTime@@3PADA DB 0200H DUP (?)			; contractTime
?contractSignIndex@@3HA DD 01H DUP (?)			; contractSignIndex
?contractSigned@@3HA DD 01H DUP (?)			; contractSigned
?linemsgWN@@3PAY0MI@DA DB 07d0H DUP (?)			; linemsgWN
?ranktitle@@3PADA DB 03cH DUP (?)			; ranktitle
?nGroup@@3HA DD	01H DUP (?)				; nGroup
?nServerGroup@@3HA DD 01H DUP (?)			; nServerGroup
?szUser@@3PADA DB 020H DUP (?)				; szUser
?szPassword@@3PADA DB 020H DUP (?)			; szPassword
?szUser_JL@@3PADA DB 020H DUP (?)			; szUser_JL
?szPassword_JL@@3PADA DB 020H DUP (?)			; szPassword_JL
?szpALD@@3PADA DD 01H DUP (?)				; szpALD
?bNewData@@3HA DD 01H DUP (?)				; bNewData
?BigpBuffer@@3PADA DB 0800H DUP (?)			; BigpBuffer
?skillShopWindow4ProcNo@@3FA DW 01H DUP (?)		; skillShopWindow4ProcNo
	ALIGN	4

?skillShopWindow1ProcNo@@3FA DW 01H DUP (?)		; skillShopWindow1ProcNo
	ALIGN	4

?idKey@@3USTR_BUFFER@@A DB 0128H DUP (?)		; idKey
?passwd@@3USTR_BUFFER@@A DB 0128H DUP (?)		; passwd
?idKeyReturn@@3FA DW 01H DUP (?)			; idKeyReturn
	ALIGN	4

?ptActSelectServerWin@@3PAUaction@@A DD 01H DUP (?)	; ptActSelectServerWin
?selCharName@@3USTR_BUFFER@@A DB 0128H DUP (?)		; selCharName
?buttonTypeWN@@3HA DD 01H DUP (?)			; buttonTypeWN
?indexWN@@3HA DD 01H DUP (?)				; indexWN
?idWN@@3HA DD	01H DUP (?)				; idWN
?msgWN@@3PAY0BAA@DA DB 01900H DUP (?)			; msgWN
?msgWNLen@@3HA DD 01H DUP (?)				; msgWNLen
?msgWN_W@@3HA DD 01H DUP (?)				; msgWN_W
?msgWN_H@@3HA DD 01H DUP (?)				; msgWN_H
?ptActMenuWin@@3PAUaction@@A DD 01H DUP (?)		; ptActMenuWin
?selStartLine@@3HA DD 01H DUP (?)			; selStartLine
?wnOpenX@@3HA DD 01H DUP (?)				; wnOpenX
?wnOpenY@@3HA DD 01H DUP (?)				; wnOpenY
?shopWindowMode@@3FA DW 01H DUP (?)			; shopWindowMode
	ALIGN	4

?shopWindow1Title@@3PADA DB 01bH DUP (?)		; shopWindow1Title
	ALIGN	4

?shopWindow1Msg@@3PADA DB 01bH DUP (?)			; shopWindow1Msg
	ALIGN	4

?menuIndexWN@@3HA DD 01H DUP (?)			; menuIndexWN
?shopWindow2Msg@@3PAY0CN@DA DB 05aH DUP (?)		; shopWindow2Msg
	ALIGN	4

?shopWondow2Page@@3FA DW 01H DUP (?)			; shopWondow2Page
	ALIGN	4

?shopWondow2MaxPage@@3FA DW 01H DUP (?)			; shopWondow2MaxPage
	ALIGN	4

?sealItem@@3PAUITEM_SHOP@@A DB 01180H DUP (?)		; sealItem
?selShopItemNo@@3FA DW 01H DUP (?)			; selShopItemNo
	ALIGN	4

?shopWindow3Msg@@3PADA DB 029H DUP (?)			; shopWindow3Msg
	ALIGN	4

?sealItemCnt@@3FA DW 01H DUP (?)			; sealItemCnt
	ALIGN	4

?shopWindow4Msg@@3PAY0CH@DA DB 04eH DUP (?)		; shopWindow4Msg
	ALIGN	4

?shopWindow5Msg@@3PAY0CH@DA DB 04eH DUP (?)		; shopWindow5Msg
	ALIGN	4

?shopWindow6Msg@@3PAY0CH@DA DB 04eH DUP (?)		; shopWindow6Msg
	ALIGN	4

?nowUserItemCnt@@3FA DW 01H DUP (?)			; nowUserItemCnt
	ALIGN	4

?shopWindow7Msg@@3PAY0CH@DA DB 04eH DUP (?)		; shopWindow7Msg
	ALIGN	4

?shopWindow8Msg@@3PAY0CH@DA DB 04eH DUP (?)		; shopWindow8Msg
	ALIGN	4

?FMmsgWN@@3PAHA DD 010H DUP (?)				; FMmsgWN
?FMelderFlag@@3PAHA DD 010H DUP (?)			; FMelderFlag
?FMpidWN@@3PAHA DD 010H DUP (?)				; FMpidWN
?FMdengonidex@@3HA DD 01H DUP (?)			; FMdengonidex
?FMnameWN@@3PAY0BE@DA DB 0dcH DUP (?)			; FMnameWN
?FMHoldTime@@3_JA DQ 01H DUP (?)			; FMHoldTime
?userItem@@3PAUITEM_SHOP@@A DB 01180H DUP (?)		; userItem
?buyOffFlag@@3FA DW 01H DUP (?)				; buyOffFlag
	ALIGN	4

?sealSkill@@3PAUSKILL_SHOP@@A DB 02300H DUP (?)		; sealSkill
?skillShopWindowProcNo@@3FA DW 01H DUP (?)		; skillShopWindowProcNo
	ALIGN	4

?selShopSkillNo@@3FA DW 01H DUP (?)			; selShopSkillNo
	ALIGN	4

?selShopSkillPetNo@@3FA DW 01H DUP (?)			; selShopSkillPetNo
	ALIGN	4

?selShopSkillSlotNo@@3FA DW 01H DUP (?)			; selShopSkillSlotNo
	ALIGN	4

?restPoolSlot@@3HA DD 01H DUP (?)			; restPoolSlot
?poolItem@@3PAUPOOL_SHOP@@A DB 03740H DUP (?)		; poolItem
?ProfessionShopTitle@@3PADA DB 01bH DUP (?)		; ProfessionShopTitle
	ALIGN	4

?ProfessionShopMsg@@3PAY0CN@DA DB 05aH DUP (?)		; ProfessionShopMsg
	ALIGN	4

?LoginAnnounce@@3HA DD 01H DUP (?)			; LoginAnnounce
?AnnounceBuf@@3PADA DB 02000H DUP (?)			; AnnounceBuf
?WinLua@@3PAUlua_State@@A DD 01H DUP (?)		; WinLua
?cloasewindows@@3HA DD 01H DUP (?)			; cloasewindows
?windows@@3USA_WINDOWS@@A DB 06594H DUP (?)		; windows
_BSS	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NNHNHLEI@?D?$KL?$LH?g?E?$LI?$LD?$KK?A?$KE?$LP?x@
CONST	SEGMENT
??_C@_0N@NNHNHLEI@?D?$KL?$LH?g?E?$LI?$LD?$KK?A?$KE?$LP?x@ DB 0c4H, 0abH, 0b7H
	DB	0e7H, 0c5H, 0b8H, 0b3H, 0aaH, 0c1H, 0a4H, 0bfH, 0f8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08IDMOOHGA@?$MA?p?$MA?p?A?$KE?$LP?x@
CONST	SEGMENT
??_C@_08IDMOOHGA@?$MA?p?$MA?p?A?$KE?$LP?x@ DB 0c0H, 0f0H, 0c0H, 0f0H, 0c1H
	DB	0a4H, 0bfH, 0f8H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KAPGNPPN@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?A?$KE?$LP?x@
CONST	SEGMENT
??_C@_0N@KAPGNPPN@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?A?$KE?$LP?x@ DB 0b8H, 0b6H
	DB	0b8H, 0aeH, 0b3H, 0caH, 0bdH, 0baH, 0c1H, 0a4H, 0bfH, 0f8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HHLJABBI@?$LM?$KE?$LB?b?$LI?$KD?A?$KE?$LP?x@
CONST	SEGMENT
??_C@_0L@HHLJABBI@?$LM?$KE?$LB?b?$LI?$KD?A?$KE?$LP?x@ DB 0bcH, 0a4H, 0b1H
	DB	0e2H, 0b8H, 0a3H, 0c1H, 0a4H, 0bfH, 0f8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PIEEGEIM@?5?$MA?e?5?5?$LH?N?5@
CONST	SEGMENT
??_C@_08PIEEGEIM@?5?$MA?e?5?5?$LH?N?5@ DB ' ', 0c0H, 0e5H, '  ', 0b7H, 0ceH
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08ECFEKNKI@?5?A?$LH?5?5?$MA?e?5@
CONST	SEGMENT
??_C@_08ECFEKNKI@?5?A?$LH?5?5?$MA?e?5@ DB ' ', 0c1H, 0b7H, '  ', 0c0H, 0e5H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08GOJGDLLD@?$MA?S?$LN?C?$LA?$KB?$MA?T@
CONST	SEGMENT
??_C@_08GOJGDLLD@?$MA?S?$LN?C?$LA?$KB?$MA?T@ DB 0c0H, 0d3H, 0bdH, 0c3H, 0b0H
	DB	0a1H, 0c0H, 0d4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MFGFKAEI@?5?$LK?N?5?A?$LH?5?$LP?x?5@
CONST	SEGMENT
??_C@_0L@MFGFKAEI@?5?$LK?N?5?A?$LH?5?$LP?x?5@ DB ' ', 0baH, 0ceH, ' ', 0c1H
	DB	0b7H, ' ', 0bfH, 0f8H, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHPFLEHL@?$LJ?L?$LA?$KB?$MA?T?$LA?$KB?A?$LH@
CONST	SEGMENT
??_C@_0L@GHPFLEHL@?$LJ?L?$LA?$KB?$MA?T?$LA?$KB?A?$LH@ DB 0b9H, 0ccH, 0b0H
	DB	0a1H, 0c0H, 0d4H, 0b0H, 0a1H, 0c1H, 0b7H, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?familyElf@@3HA DD 02H					; familyElf
?ýÅíñËÀÌ«@@3HA DD 02710H				; ýÅíñËÀÌ«
?winStr@@3PAY0BA@DA DB 0c0H, 0fcH, 0c5H, 0f5H, ' ', 0bbH, 0fdH, 0c1H, 0b8H
	DB	00H						; winStr
	ORG $+6
	DB	0c0H, 0fcH, 0c3H, 0bcH, ' ', 0c0H, 0fcH, 0c5H, 0f5H, 00H
	ORG $+6
?familyJobName@@3PAPADA DD FLAT:??_C@_0L@GHPFLEHL@?$LJ?L?$LA?$KB?$MA?T?$LA?$KB?A?$LH@ ; familyJobName
	DD	FLAT:??_C@_0L@MFGFKAEI@?5?$LK?N?5?A?$LH?5?$LP?x?5@
	DD	FLAT:??_C@_08GOJGDLLD@?$MA?S?$LN?C?$LA?$KB?$MA?T@
	DD	FLAT:??_C@_08ECFEKNKI@?5?A?$LH?5?5?$MA?e?5@
	DD	FLAT:??_C@_08PIEEGEIM@?5?$MA?e?5?5?$LH?N?5@
?familyTownName@@3PAPADA DD FLAT:??_C@_00CNPNBAHC@@	; familyTownName
	DD	FLAT:??_C@_0L@HHLJABBI@?$LM?$KE?$LB?b?$LI?$KD?A?$KE?$LP?x@
	DD	FLAT:??_C@_0N@KAPGNPPN@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?A?$KE?$LP?x@
	DD	FLAT:??_C@_08IDMOOHGA@?$MA?p?$MA?p?A?$KE?$LP?x@
	DD	FLAT:??_C@_0N@NNHNHLEI@?D?$KL?$LH?g?E?$LI?$LD?$KK?A?$KE?$LP?x@
?windowTypeWN@@3HA DD 0ffffffffH			; windowTypeWN
?idPasswordStr@@3PAUSTR_BUFFER@@A DD FLAT:?idKey@@3USTR_BUFFER@@A ; idPasswordStr
?selectGraLocate@@3PAY01HA DD 0c6H			; selectGraLocate
	DD	012dH
	DD	071H
	DD	0102H
	DD	0f8H
	DD	018cH
	DD	082H
	DD	0172H
	DD	089H
	DD	0a0H
	DD	0157H
	DD	017bH
	DD	01dfH
	DD	0173H
	DD	01a4H
	DD	0136H
	DD	0178H
	DD	0e7H
	DD	0129H
	DD	0c6H
	DD	017dH
	DD	092H
	DD	0f2H
	DD	074H
?selectGraHitArea@@3PAY03HA DD 0ffffffe0H		; selectGraHitArea
	DD	0ffffffc8H
	DD	03fH
	DD	041H
	DD	0ffffffebH
	DD	0ffffffb8H
	DD	02aH
	DD	058H
	DD	0ffffffedH
	DD	0ffffffb2H
	DD	026H
	DD	05eH
	DD	0ffffffecH
	DD	0ffffffbdH
	DD	029H
	DD	050H
	DD	0ffffffe2H
	DD	0ffffffb0H
	DD	03cH
	DD	064H
	DD	0ffffffdcH
	DD	0ffffffacH
	DD	048H
	DD	064H
	DD	0ffffffe2H
	DD	0ffffffcdH
	DD	03bH
	DD	040H
	DD	0ffffffedH
	DD	0ffffffb3H
	DD	028H
	DD	058H
	DD	0ffffffeeH
	DD	0ffffffb8H
	DD	022H
	DD	053H
	DD	0ffffffeaH
	DD	0ffffffb8H
	DD	02bH
	DD	059H
	DD	0ffffffeeH
	DD	0ffffffb2H
	DD	023H
	DD	05aH
	DD	0ffffffecH
	DD	0ffffffb4H
	DD	028H
	DD	05aH
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	_sprintf
PUBLIC	_sscanf
PUBLIC	?idPasswordProc@@YAXXZ				; idPasswordProc
PUBLIC	?titleProc@@YAXXZ				; titleProc
PUBLIC	?selectCharacterProc@@YAXXZ			; selectCharacterProc
PUBLIC	?characterLoginProc@@YAXXZ			; characterLoginProc
PUBLIC	?makeCharacterProc@@YAXXZ			; makeCharacterProc
PUBLIC	?characterLogoutProc@@YAXXZ			; characterLogoutProc
PUBLIC	?initOpenServerWindow@@YAXXZ			; initOpenServerWindow
PUBLIC	?openServerWindow@@YAXHHHHPAD@Z			; openServerWindow
PUBLIC	?openServerWindowProc@@YAXXZ			; openServerWindowProc
PUBLIC	?selGraId@@YAHPAHH@Z				; selGraId
PUBLIC	?selRepGraId@@YAHPAHH@Z				; selRepGraId
PUBLIC	?pushGraId@@YAHPAHH@Z				; pushGraId
PUBLIC	?selFontId@@YAHPAHH@Z				; selFontId
PUBLIC	?focusGraId@@YAHPAHH@Z				; focusGraId
PUBLIC	?focusFontId@@YAHPAHH@Z				; focusFontId
PUBLIC	?initInputIdPassword@@YAXXZ			; initInputIdPassword
PUBLIC	?inputIdPassword@@YAHH@Z			; inputIdPassword
PUBLIC	?initCommonMsgWin@@YAXXZ			; initCommonMsgWin
PUBLIC	?commonMsgWin@@YAHPAD@Z				; commonMsgWin
PUBLIC	?initSelectServer@@YAXXZ			; initSelectServer
PUBLIC	?selectGroup@@YAHXZ				; selectGroup
PUBLIC	?selectServer@@YAHXZ				; selectServer
PUBLIC	?initConnecGameServer@@YAXXZ			; initConnecGameServer
PUBLIC	?connecGameServer@@YAHXZ			; connecGameServer
PUBLIC	?initDownloadCharList@@YAXXZ			; initDownloadCharList
PUBLIC	?downloadCharList@@YAHXZ			; downloadCharList
PUBLIC	?initDeleteCharacter@@YAXXZ			; initDeleteCharacter
PUBLIC	?deleteCharacter@@YAHXZ				; deleteCharacter
PUBLIC	?commonYesNoWindow@@YAHHH@Z			; commonYesNoWindow
PUBLIC	?fmYesNoWindow@@YAHHHH@Z			; fmYesNoWindow
PUBLIC	?fmselectdetuyWindow@@YAHHHH@Z			; fmselectdetuyWindow
PUBLIC	?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z	; initStrBuffer
PUBLIC	?getStrSplit@@YAXPAD0HHH@Z			; getStrSplit
PUBLIC	?DelCharGraColorWin@@YAHXZ			; DelCharGraColorWin
PUBLIC	?BankProc@@YAXXZ				; BankProc
PUBLIC	?AuctionNewWT@@YAXXZ				; AuctionNewWT
PUBLIC	?AuctionListWT@@YAXXZ				; AuctionListWT
PUBLIC	?AuctionSurveyModifyWT@@YAXXZ			; AuctionSurveyModifyWT
PUBLIC	?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z ; AuctionGetString
PUBLIC	?CheckNumber@@YAXPADH@Z				; CheckNumber
PUBLIC	?CheckSpace@@YAXPAD@Z				; CheckSpace
PUBLIC	?GB2312ToUnicode@@YAPA_WPBD@Z			; GB2312ToUnicode
PUBLIC	?UnicodeToBIG5@@YAPADPB_W@Z			; UnicodeToBIG5
PUBLIC	?GB2312ToBIG5@@YAPADPBD@Z			; GB2312ToBIG5
PUBLIC	?BIG5ToUnicode@@YAPA_WPBD@Z			; BIG5ToUnicode
PUBLIC	?UnicodeToGB2312@@YAPADPB_W@Z			; UnicodeToGB2312
PUBLIC	?BIG5ToGB2312@@YAPADPBD@Z			; BIG5ToGB2312
PUBLIC	??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ		; sprintf_s<128>
PUBLIC	?initMakeCharacter@@YAXXZ			; initMakeCharacter
PUBLIC	?initSelCharGraNo@@YAXXZ			; initSelCharGraNo
PUBLIC	?initSelCharGraNo2@@YAXXZ			; initSelCharGraNo2
PUBLIC	?selCharGraNo@@YAHXZ				; selCharGraNo
PUBLIC	?initSelCharGraColorWin@@YAXXZ			; initSelCharGraColorWin
PUBLIC	?selCharGraColorWin@@YAHXZ			; selCharGraColorWin
PUBLIC	?initEditCharParam@@YAXXZ			; initEditCharParam
PUBLIC	?initEditCharParam2@@YAXXZ			; initEditCharParam2
PUBLIC	?editCharParam@@YAHXZ				; editCharParam
PUBLIC	?initCreateChar@@YAXXZ				; initCreateChar
PUBLIC	?createChar@@YAHXZ				; createChar
PUBLIC	?initSelHomeTown@@YAXXZ				; initSelHomeTown
PUBLIC	?selHomeTown@@YAHXZ				; selHomeTown
PUBLIC	?initCharLogin@@YAXXZ				; initCharLogin
PUBLIC	?charLogin@@YAHXZ				; charLogin
PUBLIC	?initCharLogout@@YAXXZ				; initCharLogout
PUBLIC	?charLogout@@YAHXZ				; charLogout
PUBLIC	?initServerWindowType0@@YAXPAD@Z		; initServerWindowType0
PUBLIC	?initServerWindowType1@@YAXPAD@Z		; initServerWindowType1
PUBLIC	?initServerWindowType2@@YAXPAD@Z		; initServerWindowType2
PUBLIC	?initServerWindowType3@@YAXPAD@Z		; initServerWindowType3
PUBLIC	?initServerWindowType4@@YAXPAD@Z		; initServerWindowType4
PUBLIC	?initServerWindowType5@@YAXPAD@Z		; initServerWindowType5
PUBLIC	?initServerWindowType6@@YAXPAD@Z		; initServerWindowType6
PUBLIC	?initServerWindowType7@@YAXPAD@Z		; initServerWindowType7
PUBLIC	?serverWindowType0@@YAXH@Z			; serverWindowType0
PUBLIC	?serverWindowType1@@YAXXZ			; serverWindowType1
PUBLIC	?serverWindowType2@@YAXXZ			; serverWindowType2
PUBLIC	?serverWindowType3@@YAXXZ			; serverWindowType3
PUBLIC	?serverWindowType4@@YAXXZ			; serverWindowType4
PUBLIC	?serverWindowType5@@YAXXZ			; serverWindowType5
PUBLIC	?serverWindowType6@@YAXXZ			; serverWindowType6
PUBLIC	?serverWindowType7@@YAXXZ			; serverWindowType7
PUBLIC	?serverWindowType9@@YAXXZ			; serverWindowType9
PUBLIC	?serverWindowType10@@YAXXZ			; serverWindowType10
PUBLIC	?serverWindowType11@@YAXXZ			; serverWindowType11
PUBLIC	?serverWindowType12@@YAXXZ			; serverWindowType12
PUBLIC	?initServerWindowProfession@@YAXPAD@Z		; initServerWindowProfession
PUBLIC	?profession_windows@@YAXXZ			; profession_windows
PUBLIC	?profession_windows_1@@YAHXZ			; profession_windows_1
PUBLIC	?profession_windows_2@@YAHXZ			; profession_windows_2
PUBLIC	?initPetSkillWindowType1@@YAXPAD@Z		; initPetSkillWindowType1
PUBLIC	?PetSkillShowType1@@YAXXZ			; PetSkillShowType1
PUBLIC	?initFamilyAddWN@@YAXPAD@Z			; initFamilyAddWN
PUBLIC	?familyAddWN@@YAXXZ				; familyAddWN
PUBLIC	?initFamilyList@@YAXPAD@Z			; initFamilyList
PUBLIC	?familyListWN@@YAXXZ				; familyListWN
PUBLIC	?initFamilyDetail@@YAXPAD@Z			; initFamilyDetail
PUBLIC	?familyDetailWN@@YAHXZ				; familyDetailWN
PUBLIC	?initMineFamilyDetail@@YAXPAD@Z			; initMineFamilyDetail
PUBLIC	?mineFamilyDetailWN@@YAXXZ			; mineFamilyDetailWN
PUBLIC	?initFamilyTaxWN@@YAXPAD@Z			; initFamilyTaxWN
PUBLIC	?familyTaxWN@@YAXXZ				; familyTaxWN
PUBLIC	?initFamilyLeaderChange@@YAXPAD@Z		; initFamilyLeaderChange
PUBLIC	?familyLeaderChangeWN@@YAXXZ			; familyLeaderChangeWN
PUBLIC	?familyLeaderChangeQWN@@YAXXZ			; familyLeaderChangeQWN
PUBLIC	?familyLeaderChangeAWN@@YAXXZ			; familyLeaderChangeAWN
PUBLIC	?initFamilyLeaderChangeA@@YAXPAD@Z		; initFamilyLeaderChangeA
PUBLIC	?initFMWindowType@@YAXPAD@Z			; initFMWindowType
PUBLIC	?FMWindowType@@YAXXZ				; FMWindowType
PUBLIC	?initFMWindowType1@@YAXPAD@Z			; initFMWindowType1
PUBLIC	?FMWindowType1@@YAXXZ				; FMWindowType1
PUBLIC	?initFMWindowType2@@YAXPAD@Z			; initFMWindowType2
PUBLIC	?FMWindowType2@@YAXXZ				; FMWindowType2
PUBLIC	?initFMWindowType3@@YAXPAD@Z			; initFMWindowType3
PUBLIC	?FMWindowType3@@YAXH@Z				; FMWindowType3
PUBLIC	?initFMWindowType4@@YAXPADH@Z			; initFMWindowType4
PUBLIC	?FMWindowType4@@YAXH@Z				; FMWindowType4
PUBLIC	?initFMPKListWN@@YAXPAD@Z			; initFMPKListWN
PUBLIC	?FMPKListWN@@YAXH@Z				; FMPKListWN
PUBLIC	?initFMPKSelectWN@@YAXPAD@Z			; initFMPKSelectWN
PUBLIC	?FMPKSelectWN@@YAXH@Z				; FMPKSelectWN
PUBLIC	?initFMPKDetailWN@@YAXPAD@Z			; initFMPKDetailWN
PUBLIC	?FMPKDetailWN@@YAXH@Z				; FMPKDetailWN
PUBLIC	?initShowRidePetWN@@YAXXZ			; initShowRidePetWN
PUBLIC	?showRidePetWN@@YAXXZ				; showRidePetWN
PUBLIC	?initMouseGetNameWN@@YAXPAD@Z			; initMouseGetNameWN
PUBLIC	?showMouseGetNameWN@@YAXXZ			; showMouseGetNameWN
PUBLIC	?initContractWN@@YAXPAD@Z			; initContractWN
PUBLIC	?showContractWN@@YAXXZ				; showContractWN
PUBLIC	?initRacemanRankWN@@YAXPAD@Z			; initRacemanRankWN
PUBLIC	?showRacemanRankWN@@YAXXZ			; showRacemanRankWN
PUBLIC	?serverWindowDragonFusion@@YAXXZ		; serverWindowDragonFusion
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
PUBLIC	?initShopWindow1@@YAXXZ				; initShopWindow1
PUBLIC	?shopWindow1@@YAHXZ				; shopWindow1
PUBLIC	?initShopWindow2@@YAXXZ				; initShopWindow2
PUBLIC	?shopWindow2@@YAHXZ				; shopWindow2
PUBLIC	?initShopWindow3@@YAXXZ				; initShopWindow3
PUBLIC	?shopWindow3@@YAHXZ				; shopWindow3
PUBLIC	?initShopWindow4@@YAXXZ				; initShopWindow4
PUBLIC	?shopWindow4@@YAHXZ				; shopWindow4
PUBLIC	?initShopWindow5@@YAXXZ				; initShopWindow5
PUBLIC	?shopWindow5@@YAHXZ				; shopWindow5
PUBLIC	?initShopWindow6@@YAXXZ				; initShopWindow6
PUBLIC	?shopWindow6@@YAHXZ				; shopWindow6
PUBLIC	?initShopWindow7@@YAXXZ				; initShopWindow7
PUBLIC	?shopWindow7@@YAHXZ				; shopWindow7
PUBLIC	?initShopWindow8@@YAXXZ				; initShopWindow8
PUBLIC	?shopWindow8@@YAHXZ				; shopWindow8
PUBLIC	?initShopWindow10@@YAXXZ			; initShopWindow10
PUBLIC	?shopWindow10@@YAHXZ				; shopWindow10
PUBLIC	?initSkillShopWindow1@@YAXXZ			; initSkillShopWindow1
PUBLIC	?skillShopWindow1@@YAHXZ			; skillShopWindow1
PUBLIC	?initSkillShopWindow2@@YAXXZ			; initSkillShopWindow2
PUBLIC	?skillShopWindow2@@YAHXZ			; skillShopWindow2
PUBLIC	?initSkillShopWindow3@@YAXXZ			; initSkillShopWindow3
PUBLIC	?skillShopWindow3@@YAHXZ			; skillShopWindow3
PUBLIC	?initSkillShopWindow4@@YAXXZ			; initSkillShopWindow4
PUBLIC	?skillShopWindow4@@YAHXZ			; skillShopWindow4
PUBLIC	?initPoolShopWindow1@@YAXXZ			; initPoolShopWindow1
PUBLIC	?poolShopWindow1@@YAHXZ				; poolShopWindow1
PUBLIC	?initPoolShopWindow2@@YAXXZ			; initPoolShopWindow2
PUBLIC	?poolShopWindow2@@YAHXZ				; poolShopWindow2
PUBLIC	?initPoolShopWindow3@@YAXXZ			; initPoolShopWindow3
PUBLIC	?poolShopWindow3@@YAHXZ				; poolShopWindow3
PUBLIC	?initPoolShopWindow4@@YAXXZ			; initPoolShopWindow4
PUBLIC	?poolShopWindow4@@YAHXZ				; poolShopWindow4
PUBLIC	?StockDispHLine@@YAXHHH@Z			; StockDispHLine
PUBLIC	?StockDispVLine@@YAXHHH@Z			; StockDispVLine
PUBLIC	?closeFamilyAddWN@@YAXXZ			; closeFamilyAddWN
PUBLIC	?closeFamilyList@@YAXXZ				; closeFamilyList
PUBLIC	?closePKList@@YAXXZ				; closePKList
PUBLIC	?closePKHistoryList@@YAXXZ			; closePKHistoryList
PUBLIC	?initPKList@@YAXPAD@Z				; initPKList
PUBLIC	?initPKHistoryList@@YAXPAD@Z			; initPKHistoryList
PUBLIC	??$sprintf_s@$0EAA@@@YAHAAY0EAA@DPBDZZ		; sprintf_s<1024>
PUBLIC	?closeFamilyTaxWN@@YAXXZ			; closeFamilyTaxWN
PUBLIC	?closeFamilyLeaderChangeWN@@YAXXZ		; closeFamilyLeaderChangeWN
PUBLIC	?closeMineFamilyDetailWN@@YAXXZ			; closeMineFamilyDetailWN
PUBLIC	?checkInBlacklist@@YAHPAD@Z			; checkInBlacklist
PUBLIC	?addBlacklist@@YAXPAD@Z				; addBlacklist
PUBLIC	?removeBlacklist@@YAXPAD@Z			; removeBlacklist
PUBLIC	?cleanBlacklist@@YAXXZ				; cleanBlacklist
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@ ; `string'
PUBLIC	??_C@_09BACHGGGK@f?$DLencor1c@			; `string'
PUBLIC	??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ@		; `string'
PUBLIC	??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@ ; `string'
PUBLIC	??_C@_04NDEEPOEI@?$KD?O?$KD?K@			; `string'
PUBLIC	??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@ ; `string'
PUBLIC	??_C@_05DNIIFBMG@?$CFs?5?$CFs@			; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CA@KPEEHOGC@?$FL?$CFs?$FN?$MA?L?$LJ?v?$MA?$PM?$MA?$LK?5?$LL?g?$LP?k?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ ; `string'
PUBLIC	??_C@_0M@BKDGIFED@Oct?5?54?52021@		; `string'
PUBLIC	??_C@_08JIAEEDMM@?$CFs?5?$CFd?5?$CFd@		; `string'
PUBLIC	??_C@_0BG@MJOFMAKM@?$FLVer?$KD?$LK?$CF04d?4?$CF02d?4?$CF02d?$FN@ ; `string'
PUBLIC	??_C@_0L@BGALCGMK@?$CFs?5?$CFs?5?$FL?$CFs?$FN@	; `string'
PUBLIC	??_C@_0N@DFLJEJED@?5?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?5?5@ ; `string'
PUBLIC	??_C@_0BF@LJIGADOK@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?A?$NP?$MA?T?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0P@FLGFPKOG@CHAOS?5STONEAGE@		; `string'
PUBLIC	??_C@_0BG@CKDNBLG@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?5?A?$NP?$MA?T?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BB@DFFIFBLJ@WGS?$LP?M?5?$LP?$KM?$LA?a?$LN?G?F?P?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@ ; `string'
PUBLIC	??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@ ; `string'
PUBLIC	??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@ ; `string'
PUBLIC	??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@ ; `string'
PUBLIC	??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@ ; `string'
PUBLIC	??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@ ; `string'
PUBLIC	??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@ ; `string'
PUBLIC	??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@	; `string'
PUBLIC	??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@ ; `string'
PUBLIC	??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@ ; `string'
PUBLIC	??_C@_0EO@GDIJOFL@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LA?E?$LD@ ; `string'
PUBLIC	??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@ ; `string'
PUBLIC	??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@ ; `string'
PUBLIC	??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@ ; `string'
PUBLIC	??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0DP@GGBCENFH@203?5?$MA?L?$LJ?L?5?$LH?N?$LB?W?$MA?N?A?$NP?$MA?T?$LE?O?$LE?Y?4?5?$LA?h?A?$KE?$MA?L@ ; `string'
PUBLIC	??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@ ; `string'
PUBLIC	??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@ ; `string'
PUBLIC	??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@ ; `string'
PUBLIC	??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@ ; `string'
PUBLIC	??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@ ; `string'
PUBLIC	??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@ ; `string'
PUBLIC	??_C@_0BM@LPFLMHNK@?D?$LD?$LI?$KP?E?M?5?$LL?h?A?$KG?$LK?R?$LA?$KB?$KD?$KM?$LE?Y?$LN?C?$LN?C?$LF?$LF?$KD?$KB@ ; `string'
PUBLIC	??_C@_03GOOLIKIF@?$CF3d@			; `string'
PUBLIC	??_C@_03GCLOGFGE@?$CF8d@			; `string'
PUBLIC	??_C@_03GLKEJMAA@?$CF4d@			; `string'
PUBLIC	??_C@_0BB@IFBIBFPD@?D?$LD?$LI?$KP?$LI?q?$LH?O?$LA?$KB?A?$KO?$LP?$MA?$LB?b@ ; `string'
PUBLIC	??_C@_0BB@JNLGIAPP@?D?$LD?$LI?$KP?E?M?$LL?$PN?$LM?$LK?$LN?G?F?P?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BG@OIHOGAMJ@?D?$LD?$LI?$KP?E?M?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KB?$KD@ ; `string'
PUBLIC	??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@	; `string'
PUBLIC	??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@ ; `string'
PUBLIC	??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@	; `string'
PUBLIC	??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@	; `string'
PUBLIC	??_C@_0CC@NKOCBMEN@?G?v?$MA?g?5?$LM?$LB?E?C?G?Q?5?D?$LD?$LI?$KP?E?M?$LH?N?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BD@GLGANICJ@?D?$LD?$LI?$KP?E?M?5?$LL?v?$LL?s?5?$LK?$KP?$LA?f?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BB@IBMPLOHE@?D?$LD?$LI?$KP?E?M?$LJ?f?G?b?$MA?$PM?H?$KP?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BN@JACDIIAG@?D?$LD?$LI?$KP?E?M?$LM?$LB?E?C?H?$KN?$LI?i?$MA?$LI?$LH?N?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_02KNHHEEKP@?5?5@				; `string'
PUBLIC	??_C@_0BN@MICBHKJB@?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CH@NAEAKGPD@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?D?$LD?$LI?$KP?E?M?$LA?$KB?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G@ ; `string'
PUBLIC	??_C@_0CA@HJHEICBF@?$LL?s?E?B?5?F?w?$MA?N?F?$KO?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0CE@IAICGILF@?$LM?S?$LM?$LK?D?$KB?$CI?1?F?w?$MA?N?F?$KO?$CJ?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM@ ; `string'
PUBLIC	??_C@_0BO@DBBPEHG@?$MA?L?$LI?$KH?$LP?$KB?5?$LA?x?$LJ?i?$MA?$LL?5?$LF?Q?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ ; `string'
PUBLIC	??_C@_0DJ@CMGKIMKM@?$MA?T?$LH?B?G?Q?5?$MA?L?$LI?$KH?$LP?$KB?$LE?B?5?G?c?$LP?k?$LF?G?A?v?5?$LO?J?$LE?B?5?$LJ@ ; `string'
PUBLIC	??_C@_0BL@DBMJLOIN@?D?$LD?$LI?$KP?E?M?5?$LM?$LD?A?$KE?$MA?$LL?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CK@EACHLIEL@?$MA?L?5?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LD?$LL?$LB?$LI?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5@ ; `string'
PUBLIC	??_C@_0CJ@DBPCCGK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LA?x?$LA?$NN?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@ ; `string'
PUBLIC	??_C@_0CJ@PBMHJDKK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LJ?f?$LO?n?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@ ; `string'
PUBLIC	??_C@_0DA@OOLAIOAA@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LM?x?$LJ?$NP?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$LA@ ; `string'
PUBLIC	??_C@_0DC@DFHCGCAL@?A?v?$LM?S?$LM?$LK?$KB?$KD?$LM?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ ; `string'
PUBLIC	??_C@_0DC@EIPOCBIG@?$LM?v?$LM?S?$LM?$LK?$KB?$KD?H?$KN?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ ; `string'
PUBLIC	??_C@_0DC@DBHNIFJM@?H?$KN?$LM?S?$LM?$LK?$KB?$KD?G?$LD?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ ; `string'
PUBLIC	??_C@_0DC@HDKFGPCM@?G?$LD?$LM?S?$LM?$LK?$KB?$KD?A?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ ; `string'
PUBLIC	??_C@_0P@IMBCCPOD@?$LE?$KL?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ ; `string'
PUBLIC	??_C@_0P@PNCOKHHM@?D?Z?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ ; `string'
PUBLIC	??_C@_0P@LMMJJHJP@?$MA?T?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CF@JDHEEBNC@?$MA?L?$LI?$KH?0?5?$LO?s?$LB?$LM?0?5?$LB?b?$LK?$LL?5?$LL?s?E?B?5?$LJ?W?5?$LM?S?$LM?$LK?5?$LM@ ; `string'
PUBLIC	??_C@_0M@DLFCBPCC@?$LM?$KE?$LB?b?$LI?$KD?5?$LI?$LG?$MA?$LL@ ; `string'
PUBLIC	??_C@_0O@OLOFEGAL@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?5?$LI?$LG?$MA?$LL@ ; `string'
PUBLIC	??_C@_09GFHIJBMK@?$MA?p?$MA?p?5?$LI?$LG?$MA?$LL@ ; `string'
PUBLIC	??_C@_0O@FAJDIKKM@?D?$KL?$LH?g?E?$LI?$LD?$KK?5?$LI?$LG?$MA?$LL@ ; `string'
PUBLIC	??_C@_0CD@OGPAGALA@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@ ; `string'
PUBLIC	??_C@_0BI@IHPDPOHC@4?$LA?$LD?5?$LI?$LG?$MA?$LL?A?$NP?5?$LA?$KB?$MA?e?5?E?$KO?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BO@BMBAEGNC@?$LG?G?G?Q?5?$LA?$KB?$MA?e?5?A?z?$LM?$KN?$MA?V?$LE?B?5?$LI?$LG?$MA?$LL?$MA?L?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CD@FJDMGMIM@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@ ; `string'
PUBLIC	??_C@_0CL@GOPLDOIL@?$LO?F?$LI?$KH?$LE?Y?$LP?n?5?G?X?$LK?$KP?$MA?$LL?5?$LJ?Y?$LG?s?$LK?$LI?$LA?m?5?$MA?V?$LE?B?5?$LI@ ; `string'
PUBLIC	??_C@_0CC@DMMCBILE@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BF@DLENCNEM@?$LN?$KD?$MA?$LI?$LH?N?5?$LF?Q?$LH?$KP?5?$LN?W?$LP?$KJ?$MA?V?$LE?B@ ; `string'
PUBLIC	??_C@_0BF@PENPANFK@?$LN?L?$LB?W?$LH?$KP?$LP?n?5?$LD?l?$LL?v?5?$LI?$LG?$MA?$LL?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CC@JHAOGAJO@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BB@BHNBHDIA@?$LI?$LG?$MA?$LL?$MA?$LK?5?$MA?$NL?$MA?$LK?5?$LP?$KJ?$LH?$KP@ ; `string'
PUBLIC	??_C@_0BH@MIIMPKCJ@?$LM?$LG?5?$MA?$KH?$LP?$KB?5?A?v?$LO?n?A?$LD?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BI@JKLCAMPH@?C?b?$LN?E?A?v?$LI?$KG?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP?$MA?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BC@FPKFEPPA@?D?$LD?$LI?$KP?E?M?5?A?$KG?$MA?$NL?5?A?$NP?4?4?4@ ; `string'
PUBLIC	??_C@_0BA@JFEMHLAM@?T?t?l?$PN?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@ ; `string'
PUBLIC	??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@ ; `string'
PUBLIC	??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@ ; `string'
PUBLIC	??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@ ; `string'
PUBLIC	??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@ ; `string'
PUBLIC	??_C@_0HC@GFFIGLHA@?$MA?$NP?$LI?x?$LF?H?5?$LL?g?$LP?k?$MA?Z?5?$MA?L?$LI?$KH?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H@ ; `string'
PUBLIC	??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@ ; `string'
PUBLIC	??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@ ; `string'
PUBLIC	??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@ ; `string'
PUBLIC	??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@ ; `string'
PUBLIC	??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@ ; `string'
PUBLIC	??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@ ; `string'
PUBLIC	??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@ ; `string'
PUBLIC	??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@ ; `string'
PUBLIC	??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@ ; `string'
PUBLIC	??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@ ; `string'
PUBLIC	??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@ ; `string'
PUBLIC	??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@ ; `string'
PUBLIC	??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@ ; `string'
PUBLIC	??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@ ; `string'
PUBLIC	??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@ ; `string'
PUBLIC	??_C@_0BB@PHBDBDAB@?$MA?N?E?M?$LD?$NN?5?$LP?$KM?$LA?a?5?$LP?$MA?$LH?y@ ; `string'
PUBLIC	??_C@_0BE@FNJGPFEB@?$DP?l?$KL?n?$KE?P?l?v?b?$OA?x?M?$KH?T?t?l?$PN?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BB@DDFMPBHB@?$DP?l?$KL?n?$KE?w?$LM?$DP?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@BLEFHHCI@?$DP?l?$KL?n?$KE?t?$LI?c?j?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@IADOEDAG@?$DP?l?$KL?n?$KE?$NN?A?T?$OA?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@EOGDPEGN@?$DP?l?$KL?n?$KE?m?$LJ?Z?$LA?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BA@OCMAIDLN@?$DP?l?$KL?n?$KE?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BB@MMGOFGBI@?$DP?l?$KL?n?$KE?$DP?y?A?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@NPHDINBL@?$DP?l?$KL?n?$KE?z?E?y?$PL?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@ODOFDCOF@?$DP?l?$KL?n?$KE?$OA?x?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BB@PEBLFAAD@?$DP?l?$KL?n?$KE?t?$LI?$DP?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BC@LBDONGAD@?$DP?l?$KL?n?$KE?c?f?M?$KD?$OA?x?M?$KH?T?t?l?$PN@ ; `string'
PUBLIC	??_C@_0BH@OOIMHFEI@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI?$CFd?$CJ?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BA@KHEOLEJA@?T?t?u?s?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@ ; `string'
PUBLIC	??_C@_07IBAIKNAL@?$FLstyle?5@			; `string'
PUBLIC	??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@		; `string'
PUBLIC	??_C@_06JHILMIHF@CANCEL@			; `string'
PUBLIC	??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@		; `string'
PUBLIC	??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@		; `string'
PUBLIC	??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@ ; `string'
PUBLIC	??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@ ; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@ ; `string'
PUBLIC	??_C@_02BAJPEKCM@?$LM?x@			; `string'
PUBLIC	??_C@_02MCBFLHBI@?$LJ?f@			; `string'
PUBLIC	??_C@_02BJIFLDEI@?$LA?x@			; `string'
PUBLIC	??_C@_02MEIMKHMB@HP@				; `string'
PUBLIC	??_C@_02FLIMDJ@Lv@				; `string'
PUBLIC	??_C@_04KDDDLIGD@?F?d?F?$KO@			; `string'
PUBLIC	??_C@_0CF@FLMNJHFI@?$CF?916s?5?5?$CF?93s?5?5?5?$CF?95s?5?5?$CF?95s?5?5?5?$CF?95s@ ; `string'
PUBLIC	??_C@_0CF@HCGLMHEH@?$CF?916s?5?5?$CF?93d?5?5?5?$CF?95d?5?5?$CF?95d?5?5?5?$CF?95d@ ; `string'
PUBLIC	??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@ ; `string'
PUBLIC	??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@ ; `string'
PUBLIC	??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@ ; `string'
PUBLIC	??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@ ; `string'
PUBLIC	??_C@_08ILNEEICH@?$CFd?$HM?$CFd?$HM?$CFd@	; `string'
PUBLIC	??_C@_0CA@ONLNCGPF@?$CF?916s?5?$CF?93s?5?5?$CF?95s?5?$CF?95s?5?5?$CF?95s?5?5?$CFs@ ; `string'
PUBLIC	??_C@_03BIEHFCNJ@?q?l?$DP@			; `string'
PUBLIC	??_C@_04BLDHOJBN@?$LI?$NO?$MA?N@		; `string'
PUBLIC	??_C@_04LFMEPEEF@?$LL?s?$LE?k@			; `string'
PUBLIC	??_C@_0CA@MOGFGPOH@?$CF?916s?5?$CF?93d?5?5?$CF?95d?5?$CF?95d?5?5?$CF?95d?5?5?$CFd@ ; `string'
PUBLIC	??_C@_01GBGANLPD@0@				; `string'
PUBLIC	??_C@_05GLBACONI@?$CFd?$HM?$CFd@		; `string'
PUBLIC	??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@	; `string'
PUBLIC	??_C@_0M@DBGBFDKA@?$LN?$LK?E?f?5?5?$CF8d?$KD?S@	; `string'
PUBLIC	??_C@_0P@DLBADLDH@?$CF2d?1?$CF2d?5?F?d?$MA?L?A?v@ ; `string'
PUBLIC	??_C@_0L@JBEIEHEP@?$CF8d?$KD?F?$CF8d?$KD?S@	; `string'
PUBLIC	??_C@_05ENGCCMCP@?$CF8d?$KD?S@			; `string'
PUBLIC	??_C@_04HNNONBHM@?$CF2d?$DP@			; `string'
PUBLIC	??_C@_0BE@PBEPDFJI@?$CF8d?$KD?S?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?S@ ; `string'
PUBLIC	??_C@_0BE@FKIEDAAE@?$CF8d?$KD?F?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?F@ ; `string'
PUBLIC	??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@	; `string'
PUBLIC	??_C@_03EPCHICDI@x?$CFd@			; `string'
PUBLIC	??_C@_09DPNFCMLK@?Q?Q?$DP?5?$CF8d?$KD?S@	; `string'
PUBLIC	??_C@_0M@JKOCLGKC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@ ; `string'
PUBLIC	??_C@_09IAMFCDJG@?$CF2d?1?$CF2d?5?$DP@		; `string'
PUBLIC	??_C@_0L@LCAELECA@?$DP?$FL?$CFs?$FN?$DP?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_0BB@JCNGIDNP@?$LN?C?$MA?$NL?G?O?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_0BC@HIPKKMKB@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?5?G?R?$LB?n?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_07BCAPMAGD@?$LB?b?5?$CFd?3?5@		; `string'
PUBLIC	??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@		; `string'
PUBLIC	??_C@_05HKNHMKDL@?$CF8d?$KD?F@			; `string'
PUBLIC	??_C@_0BE@HCEHBKKL@?$LE?$KJ?$LB?$LI?G?Q?E?W?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_02JPEIBJLC@?$LJ?N@			; `string'
PUBLIC	??_C@_0BB@BOMDKKC@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?G?R?$LB?n?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_0P@HHEBCLLE@?$LO?g?$FL?$CFs?$FN?G?O?$LE?Y?$FL?$CFs?$FN@ ; `string'
PUBLIC	??_C@_0BE@BNDDJDJA@?$MA?L?$LB?b?$LM?z?$MA?$LL?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_0BE@NKOCMFMN@?$LA?$KB?$LJ?$KO?$MA?$LL?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BI@IDKIBNJL@?$LK?N?A?$LH?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BJ@BIHHOJEL@?$LA?$KB?A?$LH?5?A?$KG?$LI?q?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BJ@IAPAGIOC@?$LM?v?H?$KD?5?F?d?F?$KO?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BL@ODAGPAJL@?$LA?$KB?A?$LH?5?$LK?$LI?H?$KD?$MA?Z?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BB@FFLONHHA@A?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@ ; `string'
PUBLIC	??_C@_08IEFDEMID@?$LJ?h?A?v?$LM?$LD?A?$KE@	; `string'
PUBLIC	??_C@_0BD@DPCKNFFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_04EHFFKIEF@?$LO?x?$LE?Y@			; `string'
PUBLIC	??_C@_03EEBNCBOD@?5?$CFs@			; `string'
PUBLIC	??_C@_06HHOANBGP@?5?5?$CFs?5?5@			; `string'
PUBLIC	??_C@_04PMAIGBME@?$CF38s@			; `string'
PUBLIC	??_C@_08MNCFPICD@S?$HMF?$HM?$CFd?$HM0@		; `string'
PUBLIC	??_C@_07EFKFLCFA@S?$HMF?$HM1?$HM0@		; `string'
PUBLIC	??_C@_0N@LDDLKII@S?$HMD?$HM?$CFs?$HM?$CFd?$HM?$CFd@ ; `string'
PUBLIC	??_C@_08MIMOGKCP@?$LA?$KB?A?$LH?$LI?q?$LH?O@	; `string'
PUBLIC	??_C@_0M@GFBBINPB@?$CF3d?5?1?5?$CF3d?5?$DP@	; `string'
PUBLIC	??_C@_0L@FHLFAEOJ@?$FL?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$FN@ ; `string'
PUBLIC	??_C@_06PFFPIKHP@?$FL?$MA?N?$LP?x?$FN@		; `string'
PUBLIC	??_C@_08KKDDPHBL@?$FL?A?$LH?5?5?$MA?e?$FN@	; `string'
PUBLIC	??_C@_0O@MGCOJGNL@?$FL?$LK?N?5?A?$LH?5?$MA?L?5?$LI?$KH?$FN@ ; `string'
PUBLIC	??_C@_0BK@DBLHNEOK@?$CF?94s?5?$CF?916s?5?$CF?916s?5?$CF6s?5?$CF10s@ ; `string'
PUBLIC	??_C@_0BK@IAGNODKB@?$CF4d?3?5?$CF?916s?5?$CF?916s?5?$CF6d?5?$CF10d@ ; `string'
PUBLIC	??_C@_0CD@GBGODGL@P?$HM?$MA?L?$LJ?L?5?$LE?Y?$LI?$KF?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?$LO?n?$MA?V?$LO?n?$LP@ ; `string'
PUBLIC	??_C@_0O@FBIMKKIN@J?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@ ; `string'
PUBLIC	??_C@_06FHOHGHFK@X?$HMR?$HM?$CFs@		; `string'
PUBLIC	??_C@_06CIKELAKM@X?$HMP?$HM?$CFd@		; `string'
PUBLIC	??_C@_06DCIEHEEO@X?$HMB?$HM?$CFd@		; `string'
PUBLIC	??_C@_05PFEBJGGD@?$CFd?5?$LI?m@			; `string'
PUBLIC	??_C@_07JANJFJHP@?$DP?v?G?$PN?E?m?q@		; `string'
PUBLIC	??_C@_04GMJLIJKP@?A?$KC?$LM?S@			; `string'
PUBLIC	??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@		; `string'
PUBLIC	??_C@_08KOCLKJHI@?$LK?N?5?A?$LH?5?$LP?x@	; `string'
PUBLIC	??_C@_08HBDNAOJN@?A?$LH?5?5?5?5?$MA?e@		; `string'
PUBLIC	??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@		; `string'
PUBLIC	??_C@_08EPNLIAJH@?$LA?$KB?$MA?T?$LN?E?C?$LL@	; `string'
PUBLIC	??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@		; `string'
PUBLIC	??_C@_0BM@HGDMDEHB@?$CF?99s?$CF?918s?$CF3s?$CF12s?$CF12s?$CF10s?$CF7s@ ; `string'
PUBLIC	??_C@_09LDBPGJOA@?$LA?$KB?$MA?T?5?$LN?B?$MA?N@	; `string'
PUBLIC	??_C@_09IPDOHIGO@?$LA?$KB?$MA?T?5?$LA?E?$LK?N@	; `string'
PUBLIC	??_C@_0CC@OOGHFIO@?5?$CF?920s?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ ; `string'
PUBLIC	??_C@_04NKANOEFH@?$DP?5?5?$DP@			; `string'
PUBLIC	??_C@_02HHFHKOHM@?$DP?$DP@			; `string'
PUBLIC	??_C@_03IKGEINEE@?$CFs?5@			; `string'
PUBLIC	??_C@_0L@IBINOEKJ@M?$HM?$CFs?$HM?$CFd?$HM?$CFd@	; `string'
PUBLIC	??_C@_04OKLAFEGF@T?$HM?$CFd@			; `string'
PUBLIC	??_C@_0CF@OGEDCEOL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$LK?N?A?$LH?$LP?x@ ; `string'
PUBLIC	??_C@_0EI@MNEGDEON@?5?$KD?$NL?A?$KC?$LM?S?$KD?$NN?$KD?$NL?$LE?P?$LD?W?$MA?S?$KD?$NN?5?5?5?5?5?$KD?$NL?$LH?$LJ?$LK?$KH?$KD@ ; `string'
PUBLIC	??_C@_01DNKMNLPK@?$HM@				; `string'
PUBLIC	??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@		; `string'
PUBLIC	??_C@_0BE@BNBIMIKL@?$KB?$KO?$LA?$KB?5?A?$LH?5?$LA?T?5?$LN?C?5?F?G?5?$KB?$KP@ ; `string'
PUBLIC	??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@ ; `string'
PUBLIC	??_C@_08FHGEHAHK@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK@ ; `string'
PUBLIC	??_C@_08HCKLDHDO@?$MA?p?5?5?5?5?$MA?p@		; `string'
PUBLIC	??_C@_08IPKKANCP@?D?$KL?$LH?g?E?$LI?$LD?$KK@	; `string'
PUBLIC	??_C@_08GDPNKJEK@?$LP?$KB?5?5?5?5?$LF?$KH@	; `string'
PUBLIC	??_C@_08PLFMPCKD@?E?$LI?5?$LI?$KD?5?E?$LI@	; `string'
PUBLIC	??_C@_08NFLGLILK@?$LE?O?5?5?5?5?$LN?$LK@	; `string'
PUBLIC	??_C@_08BBBHHHEB@?$LO?$NP?5?$MA?L?5?$LP?$MA@	; `string'
PUBLIC	??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@		; `string'
PUBLIC	??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@		; `string'
PUBLIC	??_C@_0P@HOFHBIDI@?$CF9s?$CF5s?5?$CF5s?$CF18s@	; `string'
PUBLIC	??_C@_08CKOJLPBB@?$CFs?$HM?$CFs?$HM?$CFs@	; `string'
PUBLIC	??_C@_07MEJNJNBN@P?$HM?$CFd?$HM?$CFs@		; `string'
PUBLIC	??_C@_0CB@EPJNIDND@?5?5?5?5?5?5?5?5?$KB?$KO?$LA?$KB?A?$LH?$LB?b?$LJ?$NN?G?A?$LH?N?$LB?W?$LH?$KF?$LI?q?$LH?O?$KB@ ; `string'
PUBLIC	??_C@_0CI@NMHOIHGJ@?$KB?$KO?$MA?e?5?$LM?R?$KB?$KP?$KB?$KO?$LF?$LP?$KB?$KP?$KB?$KO?$LD?$LC?$KB?$KP?5?5?5?5?5?5?5?5?$KB?$KO@ ; `string'
PUBLIC	??_C@_0L@CMOKCILO@?$MA?O?$LJ?$NN?$LK?N?A?$LH?$LP?x@ ; `string'
PUBLIC	??_C@_08JAKOPBJC@?C?k?5?5?5?5?$LM?R@		; `string'
PUBLIC	??_C@_0L@DJCDNCBF@?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d@ ; `string'
PUBLIC	??_C@_04KMMDIKEB@?5?$CFs?5@			; `string'
PUBLIC	??_C@_0L@GOKAMOPJ@?$LI?C?$MA?$LK?A?w?C?$KF?$KD?$LK@ ; `string'
PUBLIC	??_C@_0BF@MDCNOKLO@?$DP?$DP?5?$CFs?5?A?$KG?$LI?m?$LN?C?E?$LD?$LB?n?$LP?d?$KD?$LP@ ; `string'
PUBLIC	??_C@_01HIHLOKLC@1@				; `string'
PUBLIC	??_C@_0BN@EPBIJHBO@?5?$CF?97s?$CF?918s?$CF?916s?$CF13d?$CF12d?$CF14d?$CF@ ; `string'
PUBLIC	??_C@_0BG@HKOCFEKA@?$CF?97s?$CF?916s?$CF?916s?$CF8d?$CF12d@ ; `string'
PUBLIC	??_C@_0BE@KCIAGAPO@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?5?$KB?$KP@ ; `string'
PUBLIC	??_C@_0DO@OAPGBLPG@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@ ; `string'
PUBLIC	??_C@_0BD@NPAMGOGD@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?$KB?$KP@ ; `string'
PUBLIC	??_C@_0EB@DMPCKEKC@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?$KB?$KO?$LA?$KB?5?A?$LH?5?$LI?m?5?D?$KK?$KB?$KP?$KB?$KO?A?$LH?5?$MA?e?5@ ; `string'
PUBLIC	??_C@_0BE@BGDICKKN@?5?$CF?99s?$CF?919s?$CF?917s?$CF12s@ ; `string'
PUBLIC	??_C@_0CF@CPAJCIOI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$KB?$KO?$LM?$KN?$LJ?v?5?$LA?$KB?A?$LH?5?$LM@ ; `string'
PUBLIC	??_C@_0CL@PEELKHDI@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@ ; `string'
PUBLIC	??_C@_04OKOHEJBO@?5?$DP?$DP?5@			; `string'
PUBLIC	??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@		; `string'
PUBLIC	??_C@_0CK@PKMNOIEH@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?O?$LH?A?$LI?i?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5@ ; `string'
PUBLIC	??_C@_0BE@DIPOFJGG@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?U?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0BH@BGEMBKPO@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LA?$KB?5?F?$LC?$LH?H?$LN?$MA?$LE?O?$LE?Y?4@ ; `string'
PUBLIC	??_C@_0BI@GILIOCHN@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?X?A?V?$LM?$LM?$LP?d@ ; `string'
PUBLIC	??_C@_08KEIECNNH@?5?C?$NP?5?5?$LA?$KB?5@	; `string'
PUBLIC	??_C@_08FOJJNHLG@?5?$LM?v?5?5?A?$KE?5@		; `string'
PUBLIC	??_C@_08PCGBOOHO@?5?$LP?$KM?5?5?$LA?a?5@	; `string'
PUBLIC	??_C@_08EJIOEONO@?$LM?$LD?5?A?$KE?5?A?$NP@	; `string'
PUBLIC	??_C@_08MOJFPAKN@?$MA?$MA?$LE?d?$LE?k?$LB?b@	; `string'
PUBLIC	??_C@_06LCJOFINF@?$LP?$LJ?5?5?A?$KE@		; `string'
PUBLIC	??_C@_0N@OOICEDBI@?$LA?$KB?A?$LH?$MA?$PM?E?u?$MA?O?A?$KE@ ; `string'
PUBLIC	??_C@_0BB@NLEMPNJJ@?G?v?$MA?g?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?3?$CFd@ ; `string'
PUBLIC	??_C@_0N@MJLHBHM@?B?$PM?$LA?$KB?5?$MA?N?$LP?x?5?$LM?v@ ; `string'
PUBLIC	??_C@_08PFKCNHNG@?A?X?$LK?q?$LN?C?$LA?$KD@	; `string'
PUBLIC	??_C@_08MBJKFBBE@?$LN?E?C?$LL?$LA?$KB?A?$LH@	; `string'
PUBLIC	??_C@_08PFKHECNF@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH@ ; `string'
PUBLIC	??_C@_08GLHNCABG@?$LA?$LD?$MA?$PM?$LN?C?$LA?$KD@ ; `string'
PUBLIC	??_C@_0BL@LCOOKBCN@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF8s?5?5?$CF8s@ ; `string'
PUBLIC	??_C@_0L@KPJDMHLO@?$LD?$LL?$MA?O?5?$CFd?300@	; `string'
PUBLIC	??_C@_0L@FBMAKMIA@?$LP?$MA?$LE?C?5?$CFd?300@	; `string'
PUBLIC	??_C@_0CA@FLGBJLNM@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF4d?$NN?B?$DP?5?5?$CF6d?l?Q@ ; `string'
PUBLIC	??_C@_0O@DBFPDLEJ@?$LN?B?$LI?$KO?A?$LG?$LA?G?$KD?$LK?5?$CFs@ ; `string'
PUBLIC	??_C@_04FIBCPIPH@?$CF10s@			; `string'
PUBLIC	??_C@_0BP@FOLPFEDH@?$LN?E?C?$LL?G?O?$LN?G?5?$LA?$KB?A?$LH?$MA?$LL?5?$LM?$LB?E?C?G?X?A?V?$LM?$LM?$LP?d?$KD?$LK@ ; `string'
PUBLIC	??_C@_05EMGOANLP@?$CF?916s@			; `string'
PUBLIC	??_C@_0BC@PKDFJBMN@?$CFs?$HM?$CFs?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFd@ ; `string'
PUBLIC	??_C@_0N@LDIFEIBI@?$LA?$KB?A?$LH?$LE?k?$LA?a?$LN?E?C?$LL@ ; `string'
PUBLIC	??_C@_0L@KBIJEBEK@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH?$KD?$LK@ ; `string'
PUBLIC	??_C@_0L@PHNGNCKG@?$LN?E?C?$LL?$LA?$KB?A?$LH?$KD?$LK@ ; `string'
PUBLIC	??_C@_0BB@PNKEDEKN@?A?X?$LK?q?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?5?$LK?P@ ; `string'
PUBLIC	??_C@_0BB@HNBGGGNE@?B?$PM?$LA?$KB?$MA?Z?$LM?v?$KD?$LK?5?$CFd?5?$LI?m@ ; `string'
PUBLIC	??_C@_06BOIKNFOM@B?$HMT?$HM?$CFd@		; `string'
PUBLIC	??_C@_0CE@FDKHNEAG@?E?$LO?$LN?B?$LA?$KB?$LE?I?G?Q?F?d?F?$KO?$LE?B?5?$LE?Y?$MA?$LN?$LA?z?5?$LA?$LA?$LN?$MA?$LE?O?$LE@ ; `string'
PUBLIC	??_C@_0BL@IIIFLCHO@?$LL?s?$LE?k?$LI?$KG?5?$LM?$KN?$LF?Q?$LH?$KP?5?C?$KD?$LO?F?$LK?$LI?$LM?$LM?$LP?d?$KD?$KB@ ; `string'
PUBLIC	??_C@_0BJ@DODKFOKF@?$LA?$KB?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$MA?$LL?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$LK@ ; `string'
PUBLIC	??_C@_0L@KPJPAJE@?5?5?$LG?$LA?$LD?$KK?$LE?Y?5?5@ ; `string'
PUBLIC	??_C@_0BB@JFLIPKGJ@L?$HMCHANGE?$HMQ?$HM?$CFd?$HM?$CFs@ ; `string'
PUBLIC	??_C@_0CA@FPBPENDN@?A?$LH?$MA?e?$MA?$LL?$CFs?$LP?$KB?$LA?T?5?$MA?$KH?$MA?S?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_0N@EPCBPGPN@?5?5?$LG?$LA?5?$LD?$KK?5?$LE?Y?5?5@ ; `string'
PUBLIC	??_C@_08PPLGHOJI@?5?5?$DP?5?5?$DP?5?5@		; `string'
PUBLIC	??_C@_0BD@FFDFGLPA@L?$HMCHANGE?$HMA?$HM0?$HM?$CFs?$HM?$CFd@ ; `string'
PUBLIC	??_C@_0BD@JJJPGLGO@L?$HMCHANGE?$HMA?$HM1?$HM?$CFs?$HM?$CFd@ ; `string'
PUBLIC	??_C@_0BM@JJMKEJNK@?$CFs?5?$LP?$KB?$LA?T?5?A?$LH?$MA?e?$MA?$LL?5?$MA?$KH?$MA?S?G?U?$LE?O?$LE?Y?$KD?$KM@ ; `string'
PUBLIC	??_C@_0BD@HPIFLCKK@?$LM?v?$LG?t?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ ; `string'
PUBLIC	??_C@_09KOHGDBKE@?5?5?$LA?E?5?$MA?$PN?5?5@	; `string'
PUBLIC	??_C@_0L@DJLGMOPM@?5?5?$LM?v?5?5?$LG?t?5?5@	; `string'
PUBLIC	??_C@_08KIHJGLGD@?$LA?$KB?A?$LH?A?$KE?$LK?$LI@	; `string'
PUBLIC	??_C@_0N@EFFHHOOF@?$LA?$KB?A?$LH?$MA?L?$LI?$KH?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_0N@LNHPBKEN@?A?$LH?$MA?e?$MA?L?$LI?$KH?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_0N@DKIOHJKC@?$LA?$KB?A?$LH?$MA?N?$LP?x?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0N@BCMFNKAE@?$LM?v?H?$KD?A?$KE?$LH?I?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_0N@CHGBLECB@?$LI?m?$LM?$LK?$LM?x?$MA?$KH?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0N@HFHEMMCA@?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0N@CJCMAAFH@?$LA?$KB?A?$LH?A?w?C?$KF?$KD?$LK?$CFs@ ; `string'
PUBLIC	??_C@_0N@FOIFMONB@?$LA?$LD?$MA?N?$LI?m?$LM?$LK?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0N@NGKOILMK@?$LA?$KB?A?$LH?$LB?b?$LM?$LM?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0N@PNFPIJDL@?$LA?$LD?$MA?N?$LB?b?$LM?$LM?$KD?$LK?$CFd@ ; `string'
PUBLIC	??_C@_0L@ODKJDFKI@?J?$KL?p?i?$PN?E?m?q?$KD?$LK@	; `string'
PUBLIC	??_C@_0L@MCFCFIOA@?A?$KB?$LH?I?$LI?$LG?$MA?$LL?$KD?$LK@ ; `string'
PUBLIC	??_C@_0L@DOPLAOEB@?5?5?C?k?5?5?$LM?R?5?5@	; `string'
PUBLIC	??_C@_0L@NBALFHDN@1?$HM?$CFd?$HM?$CFs?$HM?$CFd@	; `string'
PUBLIC	??_C@_0L@EIOJDBDM@2?$HM?$CFd?$HM?$CFs?$HM?$CFd@	; `string'
PUBLIC	??_C@_03IFADCKOJ@?$CFd?$HM@			; `string'
PUBLIC	??_C@_06MCFCBINE@?$CFd?19?5?$DP@		; `string'
PUBLIC	??_C@_01LOCGONAA@?$AA@				; `string'
PUBLIC	??_C@_0BG@IHBEEPL@?5IceCloud?5go?5Shit?$CB?$CB?$CB?5@ ; `string'
PUBLIC	??_C@_0N@BPLMBEOA@?$DP?v?h?$NP?$KJ?$DP?5?$CFs?5?$KD?$LK@ ; `string'
PUBLIC	??_C@_09MEHCFAEH@?5?Z?K?$KB?$KB?$KB?$KB?$DP?5@	; `string'
PUBLIC	??_C@_08NELLBCLM@?5?$DP?5?5?5?5?$DP?5@		; `string'
PUBLIC	??_C@_09NHGAGPIH@?5?$DP?5?5?5?5?l?Q?5@		; `string'
PUBLIC	??_C@_0L@OKNLNJFO@?5?v?$KC?$KB?$KB?$KB?$KB?a?$LM?5@ ; `string'
PUBLIC	??_C@_02JOGGLHBA@?2n@				; `string'
PUBLIC	??_C@_04JNNPBDKK@?K?$KD?$NL?$LA@		; `string'
PUBLIC	??_C@_04NFLPMLHN@?k?$OA?$NL?$LA@		; `string'
PUBLIC	??_C@_04NLDKAEJ@?$NM?$LA?$NL?$LA@		; `string'
PUBLIC	??_C@_04FHAMEFIC@?o?K?$NL?$LA@			; `string'
PUBLIC	??_C@_0M@EOHPHPFN@?$CFs?$KD?$LK?5?$CFs?5?5?$CFs@ ; `string'
PUBLIC	??_C@_0P@KIMCNEJC@?$CFs?$KD?$LK?5?5?5?n?$KE?s?$KO?$DP?Y?$KD@ ; `string'
PUBLIC	??_C@_0O@IJDIOBDJ@?$CFs?$KD?$LK?5?5?5?$DP?Z?$LB?$DP?Y?$KD@ ; `string'
PUBLIC	??_C@_05BCDBBDGC@?$DP?$KB?$KB?o?R@		; `string'
PUBLIC	??_C@_09OOIHKOPD@?X?$KB?$DP?l?m?$KD?$LK?$CFs@	; `string'
PUBLIC	??_C@_06GJCJAMOC@?v?$KC?$KB?$KB?a?$LM@		; `string'
PUBLIC	??_C@_0O@IFIHGCPG@?5?$CF?910s?$CF?927s?$CFs@	; `string'
PUBLIC	??_C@_0CP@FDBDKEML@?$KB?$KO?$LM?$KO?B?w?$KB?$KP?5?5?5?5?$KB?$KO?5?5?5?$MA?L?5?5?5?$LI?$KH?5?5?5?5?$KB?$KP?5@ ; `string'
PUBLIC	??_C@_0CC@JBOBCJOD@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$CFd?$LI?$LG?$LI?$KO?5?$LM?$LB?E?C?5?5?5?5?$KD?$LN?$KD?$LN@ ; `string'
PUBLIC	??_C@_0CI@LPGMCPCH@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$LA?a?A?$KE?G?O?$LM?K?$LN?$MA?$LE?O?$LB?n?$KD?$LP?5?5?5@ ; `string'
PUBLIC	??_C@_0P@DIJJDGHC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@ ; `string'
PUBLIC	??_C@_06CALAJCAP@?$LK?N?$LI?$KD?$LE?Y@		; `string'
PUBLIC	??_C@_08FAALJAKG@?A?A?$LO?F?G?O?$LE?Y@		; `string'
PUBLIC	??_C@_03GKEDPABO@?$DP?$NM?Q@			; `string'
PUBLIC	??_C@_03MNGAGPGA@?c?S?$DP@			; `string'
PUBLIC	??_C@_04KHFBBOKF@?q?r?l?L@			; `string'
PUBLIC	??_C@_05POAOFMIF@LV?4?$CFd@			; `string'
PUBLIC	??_C@_08LBNAPDDE@MaxHP?5?$CFd@			; `string'
PUBLIC	__xmm@00000000000000000000000a0000000a
PUBLIC	__xmm@00000003000000fb00000001000000f9
PUBLIC	__xmm@00000006000000fe00000002000000fa
PUBLIC	__xmm@000000440000006400000044000000c8
PUBLIC	__xmm@000000a0000000f0000000a000000064
PUBLIC	__xmm@000000c800000064000000c800000064
PUBLIC	__xmm@000001160000006f000000fa0000006f
PUBLIC	__xmm@0000011700000129000000ff00000129
PUBLIC	__xmm@00000147000001290000012f00000129
PUBLIC	__xmm@0000014e0000006f000001310000006f
PUBLIC	__xmm@000065c2000065ed000065c2000065ed
PUBLIC	__xmm@00006647000066460000664500006644
PUBLIC	__xmm@fffffffefffffffefffffffefffffffe
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	_strstr:PROC
EXTRN	_strncmp:PROC
EXTRN	_strncpy:PROC
EXTRN	??_U@YAPAXIHPBDH@Z:PROC				; operator new[]
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__TerminateThread@8:PROC
EXTRN	__imp__wsprintfA:PROC
EXTRN	__imp__PostMessageA@16:PROC
EXTRN	__imp__SetWindowTextA@8:PROC
EXTRN	__imp__MultiByteToWideChar@24:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	__imp__LCMapStringA@24:PROC
EXTRN	_closesocket@4:PROC
EXTRN	_atoi:PROC
EXTRN	_itoa:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___stdio_common_vsprintf_s:PROC
EXTRN	___stdio_common_vsscanf:PROC
EXTRN	?PaletteChange@@YAXHH@Z:PROC			; PaletteChange
EXTRN	?ChangeProc@@YAXH@Z:PROC			; ChangeProc
EXTRN	?ChangeProc@@YAXHH@Z:PROC			; ChangeProc
EXTRN	?JL_í»?Ôô???ìÑÚª@@YAHXZ:PROC			; JL_í»?Ôô???ìÑÚª
EXTRN	?getStrSplitNew@@YAXQAY0BAA@D@Z:PROC		; getStrSplitNew
EXTRN	?sunday@@YAPADPAD0@Z:PROC			; sunday
EXTRN	?PutWinText@@YAXHHDHPADHH@Z:PROC		; PutWinText
EXTRN	?GetAction@@YAPAUaction@@EI@Z:PROC		; GetAction
EXTRN	?RunAction@@YAXXZ:PROC				; RunAction
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?DeathAllAction@@YAXXZ:PROC			; DeathAllAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBuffer??êÈöÇ@@YAHHHEHH@Z:PROC		; StockDispBuffer??êÈöÇ
EXTRN	?StockTaskDispBuffer@@YAXXZ:PROC		; StockTaskDispBuffer
EXTRN	?StockBoxDispBuffer@@YAXHHHHEHH@Z:PROC		; StockBoxDispBuffer
EXTRN	?StockChatBufferLine@@YAXPADEH@Z:PROC		; StockChatBufferLine
EXTRN	?GetStrLastByte@@YAHPAD@Z:PROC			; GetStrLastByte
EXTRN	?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z:PROC	; GetKeyInputFocus
EXTRN	?InitChat@@YAXXZ:PROC				; InitChat
EXTRN	?FlashKeyboardCursor@@YAXXZ:PROC		; FlashKeyboardCursor
EXTRN	?StrToNowStrBuffer@@YAXPAD@Z:PROC		; StrToNowStrBuffer
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?StockFontBufferExt@@YAHHHDHPADHH@Z:PROC	; StockFontBufferExt
EXTRN	?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z:PROC	; StockFontBuffer2
EXTRN	?pattern@@YAHPAUaction@@HH@Z:PROC		; pattern
EXTRN	?initConnectServer@@YAXXZ:PROC			; initConnectServer
EXTRN	?connectServer@@YAHXZ:PROC			; connectServer
EXTRN	?charListStart@@YAXXZ:PROC			; charListStart
EXTRN	?charListProc@@YAHXZ:PROC			; charListProc
EXTRN	?charLoginStart@@YAXXZ:PROC			; charLoginStart
EXTRN	?charLoginProc@@YAHXZ:PROC			; charLoginProc
EXTRN	?createNewCharStart@@YAXXZ:PROC			; createNewCharStart
EXTRN	?createNewCharProc@@YAHXZ:PROC			; createNewCharProc
EXTRN	?charLogoutStart@@YAXXZ:PROC			; charLogoutStart
EXTRN	?charLogoutProc@@YAHXZ:PROC			; charLogoutProc
EXTRN	?delCharStart@@YAXXZ:PROC			; delCharStart
EXTRN	?delCharProc@@YAHXZ:PROC			; delCharProc
EXTRN	?initNet@@YAHXZ:PROC				; initNet
EXTRN	?cleanupNetwork@@YAXXZ:PROC			; cleanupNetwork
EXTRN	?resetPc@@YAXXZ:PROC				; resetPc
EXTRN	?existCharacterListEntry@@YAHH@Z:PROC		; existCharacterListEntry
EXTRN	?cmpNameCharacterList@@YAHPAD@Z:PROC		; cmpNameCharacterList
EXTRN	?resetCharacterList@@YAHH@Z:PROC		; resetCharacterList
EXTRN	?CHAR_getMaxHaveGold@@YAHXZ:PROC		; CHAR_getMaxHaveGold
EXTRN	?getStringToken@@YAHPADDHH0@Z:PROC		; getStringToken
EXTRN	?getIntegerToken@@YAHPADDH@Z:PROC		; getIntegerToken
EXTRN	?makeStringFromEscaped@@YAPADPAD@Z:PROC		; makeStringFromEscaped
EXTRN	?makeEscapeString@@YAPADPAD0H@Z:PROC		; makeEscapeString
EXTRN	?initCharObj@@YAXXZ:PROC			; initCharObj
EXTRN	?getCharObjAct@@YAPAUaction@@H@Z:PROC		; getCharObjAct
EXTRN	?clearUserSetting@@YAXH@Z:PROC			; clearUserSetting
EXTRN	?saveNowState@@YAHXZ:PROC			; saveNowState
EXTRN	?GetImeString@@YAPADXZ:PROC			; GetImeString
EXTRN	?ShowBottomLineString@@YAXHPAD@Z:PROC		; ShowBottomLineString
EXTRN	?ImeProc@@YAXXZ:PROC				; ImeProc
EXTRN	?InitMenu@@YAXXZ:PROC				; InitMenu
EXTRN	?InitMenu2@@YAXXZ:PROC				; InitMenu2
EXTRN	?CheckMenuFlag@@YAHXZ:PROC			; CheckMenuFlag
EXTRN	?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z:PROC	; MakeWindowDisp
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?play_se@@YAHHHH@Z:PROC				; play_se
EXTRN	?play_bgm@@YAHH@Z:PROC				; play_bgm
EXTRN	?fade_out_bgm@@YAXXZ:PROC			; fade_out_bgm
EXTRN	?lssproto_TK_recv@@YAXHHPADH@Z:PROC		; lssproto_TK_recv
EXTRN	?lssproto_WN_recv@@YAXHHHHHPAD@Z:PROC		; lssproto_WN_recv
EXTRN	?lssproto_WN_send@@YAXHHHHHHPAD@Z:PROC		; lssproto_WN_send
EXTRN	?lssproto_CharLogout_send@@YAXHH@Z:PROC		; lssproto_CharLogout_send
EXTRN	?lssproto_FM_send@@YAXHPAD@Z:PROC		; lssproto_FM_send
EXTRN	?old_lssproto_WN_send@@YAXHHHHHHPAD@Z:PROC	; old_lssproto_WN_send
EXTRN	?old_lssproto_FM_send@@YAXHPAD@Z:PROC		; old_lssproto_FM_send
EXTRN	__time64:PROC
EXTRN	?initFieldProc@@YAXXZ:PROC			; initFieldProc
EXTRN	?closeCharActionAnimeChange@@YAXXZ:PROC		; closeCharActionAnimeChange
EXTRN	?closeEtcSwitch@@YAXXZ:PROC			; closeEtcSwitch
EXTRN	?closeJoinChannelWN@@YAXXZ:PROC			; closeJoinChannelWN
EXTRN	?ReleaseSpecAnim@@YAXXZ:PROC			; ReleaseSpecAnim
EXTRN	?CopyBackBuffer@@YAXXZ:PROC			; CopyBackBuffer
EXTRN	?DrawProduce@@YAHH@Z:PROC			; DrawProduce
EXTRN	?ecb_crypt@@YAHPAD0II@Z:PROC			; ecb_crypt
EXTRN	?FindWinIntLua@@YAPAUlua_State@@HPAD@Z:PROC	; FindWinIntLua
EXTRN	?FreeCreateWinTypeLua@@YAPAUaction@@PAUlua_State@@@Z:PROC ; FreeCreateWinTypeLua
EXTRN	?FreeServerWinTypeLua@@YAPAUaction@@PAUlua_State@@@Z:PROC ; FreeServerWinTypeLua
EXTRN	?JL_Get_UsernameAndPassword@@YAXPAD0@Z:PROC	; JL_Get_UsernameAndPassword
EXTRN	?SkyIslandRelease@@YAXXZ:PROC			; SkyIslandRelease
EXTRN	?AniRandomRelease@@YAXXZ:PROC			; AniRandomRelease
EXTRN	?crossAniRelease@@YAXXZ:PROC			; crossAniRelease
EXTRN	?CharbubbleRelease@@YAXXZ:PROC			; CharbubbleRelease
EXTRN	?ImmobileAniRelease@@YAXXZ:PROC			; ImmobileAniRelease
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?DISPLACEMENT_X@@3HA:DWORD			; DISPLACEMENT_X
EXTRN	?DISPLACEMENT_Y@@3HA:DWORD			; DISPLACEMENT_Y
EXTRN	?lpDraw@@3PAUDIRECT_DRAW@@A:DWORD		; lpDraw
EXTRN	?BackBufferDrawType@@3HA:DWORD			; BackBufferDrawType
EXTRN	?hWnd@@3PAUHWND__@@A:DWORD			; hWnd
EXTRN	?ResoMode@@3HA:DWORD				; ResoMode
EXTRN	?gmsv@@3PAUgameserver@@A:BYTE			; gmsv
EXTRN	?gmgroup@@3PAUgamegroup@@A:BYTE			; gmgroup
EXTRN	?NowTime@@3KA:DWORD				; NowTime
EXTRN	?SubProcNo@@3IA:DWORD				; SubProcNo
EXTRN	?joy_con@@3PAKA:QWORD				; joy_con
EXTRN	?joy_trg@@3PAKA:QWORD				; joy_trg
EXTRN	?joy_auto@@3PAKA:QWORD				; joy_auto
EXTRN	?pNowStrBuffer@@3PAUSTR_BUFFER@@A:DWORD		; pNowStrBuffer
EXTRN	?MyChatBuffer@@3USTR_BUFFER@@A:BYTE		; MyChatBuffer
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitFontNo@@3HA:DWORD				; HitFontNo
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?BoxColor@@3HA:DWORD				; BoxColor
EXTRN	?selectServerIndex@@3FA:WORD			; selectServerIndex
EXTRN	?gamestate_login_charname@@3PADA:BYTE		; gamestate_login_charname
EXTRN	?gamestate_deletechar_charname@@3PADA:BYTE	; gamestate_deletechar_charname
EXTRN	?netprocErrmsg@@3PADA:BYTE			; netprocErrmsg
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?disconnectServerFlag@@3HA:DWORD		; disconnectServerFlag
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?maxPcNo@@3FA:WORD				; maxPcNo
EXTRN	?selectPcNo@@3FA:WORD				; selectPcNo
EXTRN	?loginDp@@3HA:DWORD				; loginDp
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
EXTRN	?party@@3PAUPARTY@@A:BYTE			; party
EXTRN	?partyModeFlag@@3FA:WORD			; partyModeFlag
EXTRN	?petSkill@@3PAY06UPET_SKILL@@A:BYTE		; petSkill
EXTRN	?chartable@@3PAUCHARLISTTABLE@@A:BYTE		; chartable
EXTRN	?newCharacterName@@3PADA:BYTE			; newCharacterName
EXTRN	?newCharacterGraNo@@3HA:DWORD			; newCharacterGraNo
EXTRN	?newCharacterFaceGraNo@@3HA:DWORD		; newCharacterFaceGraNo
EXTRN	?newCharacterVit@@3HA:DWORD			; newCharacterVit
EXTRN	?newCharacterStr@@3HA:DWORD			; newCharacterStr
EXTRN	?newCharacterTgh@@3HA:DWORD			; newCharacterTgh
EXTRN	?newCharacterDex@@3HA:DWORD			; newCharacterDex
EXTRN	?newCharacterEarth@@3HA:DWORD			; newCharacterEarth
EXTRN	?newCharacterWater@@3HA:DWORD			; newCharacterWater
EXTRN	?newCharacterFire@@3HA:DWORD			; newCharacterFire
EXTRN	?newCharacterWind@@3HA:DWORD			; newCharacterWind
EXTRN	?newCharacterHomeTown@@3HA:DWORD		; newCharacterHomeTown
EXTRN	?sCharSide@@3HA:DWORD				; sCharSide
EXTRN	?TalkMode@@3HA:DWORD				; TalkMode
EXTRN	?secretName@@3PADA:BYTE				; secretName
EXTRN	?map_bgm_no@@3HA:DWORD				; map_bgm_no
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?bNewServer@@3HA:DWORD				; bNewServer
EXTRN	?angelFlag@@3HA:DWORD				; angelFlag
EXTRN	?angelRecvType@@3HA:DWORD			; angelRecvType
EXTRN	?angelRecvButton@@3HA:DWORD			; angelRecvButton
EXTRN	?angelMsg@@3PADA:BYTE				; angelMsg
EXTRN	?actBtn@@3FA:WORD				; actBtn
EXTRN	?menuBtn@@3FA:WORD				; menuBtn
EXTRN	?CG_COMMON_WIN_YORO@@3HA:DWORD			; CG_COMMON_WIN_YORO
EXTRN	?CG_ITEMSHOP_WIN@@3HA:DWORD			; CG_ITEMSHOP_WIN
EXTRN	?CG_SKILLSHOP_WIN@@3HA:DWORD			; CG_SKILLSHOP_WIN
EXTRN	?CG_ITEMSHOP_KOSU_WIN@@3HA:DWORD		; CG_ITEMSHOP_KOSU_WIN
EXTRN	?CG_FAMILY_DETAIL_WIN@@3HA:DWORD		; CG_FAMILY_DETAIL_WIN
EXTRN	?ProduceInitFlag@@3HA:DWORD			; ProduceInitFlag
EXTRN	?dwServer@@3KA:DWORD				; dwServer
EXTRN	?iWGS@@3HA:DWORD				; iWGS
EXTRN	?PcLanded@@3ULanded@@A:BYTE			; PcLanded
EXTRN	?isWGS7@@3HA:DWORD				; isWGS7
EXTRN	?hPing@@3PAXA:DWORD				; hPing
EXTRN	?sockRaw@@3IA:DWORD				; sockRaw
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?szAnnouncement@@3PADA:BYTE			; szAnnouncement
EXTRN	?Ûå???@@3HA:DWORD				; Ûå???
EXTRN	???@@3HA:DWORD					; ??
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?Ûå???@@3HA:DWORD				; Ûå???
EXTRN	???@@3HA:DWORD					; ??
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?ãÀÜúñìÔô@@3HA:DWORD				; ãÀÜúñìÔô
EXTRN	?ãÀÜúñìÔô?ÔàÖõ@@3HA:DWORD			; ãÀÜúñìÔô?ÔàÖõ
EXTRN	?í»?Ôô?ãÀÜú??@@3HA:DWORD			; í»?Ôô?ãÀÜú??
EXTRN	?ãÀÜúñìÔôAIÙ¼ãÒ@@3HA:DWORD			; ãÀÜúñìÔôAIÙ¼ãÒ
EXTRN	?ãÀÜúñìÔôìÑÚªÛ°ú¾@@3HA:DWORD			; ãÀÜúñìÔôìÑÚªÛ°ú¾
EXTRN	?ãÀÜúñìÔô??@@3HA:DWORD				; ãÀÜúñìÔô??
EXTRN	?ãÀÜúñìÔôùâ?@@3HA:DWORD				; ãÀÜúñìÔôùâ?
EXTRN	?ãÀÜúñì?Ôô??_1@@3HA:DWORD			; ãÀÜúñì?Ôô??_1
EXTRN	?systemWndNo@@3IA:DWORD				; systemWndNo
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?selCharGraColorWinProcNo@@3HA DD 01H DUP (?)		; selCharGraColorWinProcNo
?idPasswordFocusSw@@3HA DD 01H DUP (?)			; idPasswordFocusSw
?idKeyBoxX@@3FA DW 01H DUP (?)				; idKeyBoxX
	ALIGN	4

?idKeyBoxY@@3FA DW 01H DUP (?)				; idKeyBoxY
	ALIGN	4

?passwdBoxX@@3FA DW 01H DUP (?)				; passwdBoxX
	ALIGN	4

?passwdBoxY@@3FA DW 01H DUP (?)				; passwdBoxY
	ALIGN	4

?bAgain@@3HA DD	01H DUP (?)				; bAgain
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A DD 01H DUP (?) ; `idPasswordProc'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??idPasswordProc@@YAXXZ@4HA
_BSS	SEGMENT
?x@?1??idPasswordProc@@YAXXZ@4HA DD 01H DUP (?)		; `idPasswordProc'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??idPasswordProc@@YAXXZ@4HA
_BSS	SEGMENT
?y@?1??idPasswordProc@@YAXXZ@4HA DD 01H DUP (?)		; `idPasswordProc'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??idPasswordProc@@YAXXZ@4HA
_BSS	SEGMENT
?w@?1??idPasswordProc@@YAXXZ@4HA DD 01H DUP (?)		; `idPasswordProc'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??idPasswordProc@@YAXXZ@4HA
_BSS	SEGMENT
?h@?1??idPasswordProc@@YAXXZ@4HA DD 01H DUP (?)		; `idPasswordProc'::`2'::h
_BSS	ENDS
;	COMDAT ?msg@?1??idPasswordProc@@YAXXZ@4PADA
_BSS	SEGMENT
?msg@?1??idPasswordProc@@YAXXZ@4PADA DB 0100H DUP (?)	; `idPasswordProc'::`2'::msg
_BSS	ENDS
;	COMDAT ?flag2@?1??inputIdPassword@@YAHH@Z@4HA
_BSS	SEGMENT
?flag2@?1??inputIdPassword@@YAHH@Z@4HA DD 01H DUP (?)	; `inputIdPassword'::`2'::flag2
_BSS	ENDS
;	COMDAT ?oldId@?1??inputIdPassword@@YAHH@Z@4HA
_BSS	SEGMENT
?oldId@?1??inputIdPassword@@YAHH@Z@4HA DD 01H DUP (?)	; `inputIdPassword'::`2'::oldId
_BSS	ENDS
_BSS	SEGMENT
?commonMsgWinProcNo@@3FA DW 01H DUP (?)			; commonMsgWinProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A DD 01H DUP (?) ; `commonMsgWin'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??commonMsgWin@@YAHPAD@Z@4HA
_BSS	SEGMENT
?x@?1??commonMsgWin@@YAHPAD@Z@4HA DD 01H DUP (?)	; `commonMsgWin'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??commonMsgWin@@YAHPAD@Z@4HA
_BSS	SEGMENT
?y@?1??commonMsgWin@@YAHPAD@Z@4HA DD 01H DUP (?)	; `commonMsgWin'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??commonMsgWin@@YAHPAD@Z@4HA
_BSS	SEGMENT
?w@?1??commonMsgWin@@YAHPAD@Z@4HA DD 01H DUP (?)	; `commonMsgWin'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??commonMsgWin@@YAHPAD@Z@4HA
_BSS	SEGMENT
?h@?1??commonMsgWin@@YAHPAD@Z@4HA DD 01H DUP (?)	; `commonMsgWin'::`2'::h
_BSS	ENDS
;	COMDAT ?msg@?1??titleProc@@YAXXZ@4PADA
_BSS	SEGMENT
?msg@?1??titleProc@@YAXXZ@4PADA DB 0100H DUP (?)	; `titleProc'::`2'::msg
_BSS	ENDS
;	COMDAT ?x@?1??selectGroup@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??selectGroup@@YAHXZ@4HA DD 01H DUP (?)		; `selectGroup'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??selectGroup@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??selectGroup@@YAHXZ@4HA DD 01H DUP (?)		; `selectGroup'::`2'::y
_BSS	ENDS
;	COMDAT ?x@?1??selectServer@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??selectServer@@YAHXZ@4HA DD 01H DUP (?)		; `selectServer'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??selectServer@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??selectServer@@YAHXZ@4HA DD 01H DUP (?)		; `selectServer'::`2'::y
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?connecGameServerProcNo@@3FA DW 01H DUP (?)		; connecGameServerProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `connecGameServer'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??connecGameServer@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??connecGameServer@@YAHXZ@4HA DD 01H DUP (?)	; `connecGameServer'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??connecGameServer@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??connecGameServer@@YAHXZ@4HA DD 01H DUP (?)	; `connecGameServer'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??connecGameServer@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??connecGameServer@@YAHXZ@4HA DD 01H DUP (?)	; `connecGameServer'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??connecGameServer@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??connecGameServer@@YAHXZ@4HA DD 01H DUP (?)	; `connecGameServer'::`2'::h
_BSS	ENDS
;	COMDAT ?msg@?1??connecGameServer@@YAHXZ@4PADA
_BSS	SEGMENT
?msg@?1??connecGameServer@@YAHXZ@4PADA DB 0100H DUP (?)	; `connecGameServer'::`2'::msg
_BSS	ENDS
;	COMDAT ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
_BSS	SEGMENT
?msg@?1??selectCharacterProc@@YAXXZ@4PADA DB 0100H DUP (?) ; `selectCharacterProc'::`2'::msg
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?deleteCharacterProcNo@@3FA DW 01H DUP (?)		; deleteCharacterProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `deleteCharacter'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??deleteCharacter@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??deleteCharacter@@YAHXZ@4HA DD 01H DUP (?)	; `deleteCharacter'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??deleteCharacter@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??deleteCharacter@@YAHXZ@4HA DD 01H DUP (?)	; `deleteCharacter'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??deleteCharacter@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??deleteCharacter@@YAHXZ@4HA DD 01H DUP (?)	; `deleteCharacter'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??deleteCharacter@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??deleteCharacter@@YAHXZ@4HA DD 01H DUP (?)	; `deleteCharacter'::`2'::h
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?downloadCharListProcNo@@3FA DW 01H DUP (?)		; downloadCharListProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `downloadCharList'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??downloadCharList@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??downloadCharList@@YAHXZ@4HA DD 01H DUP (?)	; `downloadCharList'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??downloadCharList@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??downloadCharList@@YAHXZ@4HA DD 01H DUP (?)	; `downloadCharList'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??downloadCharList@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??downloadCharList@@YAHXZ@4HA DD 01H DUP (?)	; `downloadCharList'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??downloadCharList@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??downloadCharList@@YAHXZ@4HA DD 01H DUP (?)	; `downloadCharList'::`2'::h
_BSS	ENDS
;	COMDAT ?msg@?1??downloadCharList@@YAHXZ@4PADA
_BSS	SEGMENT
?msg@?1??downloadCharList@@YAHXZ@4PADA DB 0100H DUP (?)	; `downloadCharList'::`2'::msg
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?ptActSelChar@@3PAPAUaction@@A DD 0cH DUP (?)		; ptActSelChar
?selCharColor@@3PAHA DD 0cH DUP (?)			; selCharColor
?selCharDir@@3PAHA DD 0cH DUP (?)			; selCharDir
?selCharGraNoProcNo@@3HA DD 01H DUP (?)			; selCharGraNoProcNo
?nowSelCharGraNo@@3HA DD 01H DUP (?)			; nowSelCharGraNo
?nowSelCharMouthNo@@3HA DD 01H DUP (?)			; nowSelCharMouthNo
?nowSelCharEyeNo@@3HA DD 01H DUP (?)			; nowSelCharEyeNo
?nowSelCharStatusPoint@@3HA DD 01H DUP (?)		; nowSelCharStatusPoint
?nowSelCharStatus@@3PAHA DD 04H DUP (?)			; nowSelCharStatus
?nowSelCharAttrPoint@@3HA DD 01H DUP (?)		; nowSelCharAttrPoint
?nowSelCharAttr@@3PAHA DD 04H DUP (?)			; nowSelCharAttr
?editCharParamProcNo@@3HA DD 01H DUP (?)		; editCharParamProcNo
?selCharNameBoxX@@3HA DD 01H DUP (?)			; selCharNameBoxX
?selCharNameBoxY@@3HA DD 01H DUP (?)			; selCharNameBoxY
?selHomeTownProcNo@@3HA DD 01H DUP (?)			; selHomeTownProcNo
?nowSelHomeTownNo@@3HA DD 01H DUP (?)			; nowSelHomeTownNo
?createCharProcNo@@3HA DD 01H DUP (?)			; createCharProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `selCharGraColorWin'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??selCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??selCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `selCharGraColorWin'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??selCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??selCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `selCharGraColorWin'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??selCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??selCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `selCharGraColorWin'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??selCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??selCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `selCharGraColorWin'::`2'::h
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `createChar'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??createChar@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??createChar@@YAHXZ@4HA DD 01H DUP (?)		; `createChar'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??createChar@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??createChar@@YAHXZ@4HA DD 01H DUP (?)		; `createChar'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??createChar@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??createChar@@YAHXZ@4HA DD 01H DUP (?)		; `createChar'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??createChar@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??createChar@@YAHXZ@4HA DD 01H DUP (?)		; `createChar'::`2'::h
_BSS	ENDS
;	COMDAT ?msg@?1??characterLoginProc@@YAXXZ@4PADA
_BSS	SEGMENT
?msg@?1??characterLoginProc@@YAXXZ@4PADA DB 0100H DUP (?) ; `characterLoginProc'::`2'::msg
_BSS	ENDS
_BSS	SEGMENT
?charLoginProcNo@@3FA DW 01H DUP (?)			; charLoginProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `charLogin'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??charLogin@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??charLogin@@YAHXZ@4HA DD 01H DUP (?)		; `charLogin'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??charLogin@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??charLogin@@YAHXZ@4HA DD 01H DUP (?)		; `charLogin'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??charLogin@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??charLogin@@YAHXZ@4HA DD 01H DUP (?)		; `charLogin'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??charLogin@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??charLogin@@YAHXZ@4HA DD 01H DUP (?)		; `charLogin'::`2'::h
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?produce_vct_no@@3HA DD 01H DUP (?)			; produce_vct_no
_BSS	ENDS
;	COMDAT ?msg@?1??characterLogoutProc@@YAXXZ@4PADA
_BSS	SEGMENT
?msg@?1??characterLogoutProc@@YAXXZ@4PADA DB 0100H DUP (?) ; `characterLogoutProc'::`2'::msg
_BSS	ENDS
_BSS	SEGMENT
?charLogoutProcNo@@3HA DD 01H DUP (?)			; charLogoutProcNo
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `charLogout'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??charLogout@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??charLogout@@YAHXZ@4HA DD 01H DUP (?)		; `charLogout'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??charLogout@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??charLogout@@YAHXZ@4HA DD 01H DUP (?)		; `charLogout'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??charLogout@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??charLogout@@YAHXZ@4HA DD 01H DUP (?)		; `charLogout'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??charLogout@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??charLogout@@YAHXZ@4HA DD 01H DUP (?)		; `charLogout'::`2'::h
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?)	; `serverWindowType0'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?)	; `serverWindowType0'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?)	; `serverWindowType0'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?)	; `serverWindowType0'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType0@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType0@@YAXH@Z@4PAY01HA DD 0cH DUP (?) ; `serverWindowType0'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?) ; `serverWindowType0'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?msgLine@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?) ; `serverWindowType0'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A
_BSS	SEGMENT
?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A DB 0128H DUP (?) ; `serverWindowType0'::`2'::input
_BSS	ENDS
;	COMDAT ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?) ; `serverWindowType0'::`2'::totalMsgLine
_BSS	ENDS
;	COMDAT ?lineSkip@?1??serverWindowType0@@YAXH@Z@4HA
_BSS	SEGMENT
?lineSkip@?1??serverWindowType0@@YAXH@Z@4HA DD 01H DUP (?) ; `serverWindowType0'::`2'::lineSkip
_BSS	ENDS
;	COMDAT ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A
_BSS	SEGMENT
?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A DD 01H DUP (?) ; `serverWindowType0'::`2'::thisAction
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType1'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType1'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType1'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType1'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType1'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType1'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??serverWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??serverWindowType1@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType1'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType2'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType2'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType2'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType2'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType2'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType2'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType3@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType3@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType3'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType3@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType3@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType3'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType3@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType3@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType3'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType3@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType3@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType3'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType3'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType3@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType3@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType3'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType4@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType4@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType4'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType4@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType4@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType4'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType4@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType4@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType4'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType4@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType4@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType4'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType4'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType4@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType4@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType4'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType9'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType9'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType9'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType9'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType9'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType9'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?selects@?1??serverWindowType9@@YAXXZ@4HA
_BSS	SEGMENT
?selects@?1??serverWindowType9@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType9'::`2'::selects
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType10'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType10'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType10'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType10'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType10@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType10@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType10'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType10'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??serverWindowType10@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??serverWindowType10@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType10'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType11'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType11'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType11'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType11'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType11@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType11@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType11'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType11'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??serverWindowType11@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??serverWindowType11@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType11'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType12'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType12'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType12'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?)	; `serverWindowType12'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowType12'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType12'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??serverWindowType12@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??serverWindowType12@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowType12'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow1@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow1'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow1@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow1'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow1@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow1'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow1@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow1'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow1@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow1@@YAHXZ@4PAHA DD 03H DUP (?)	; `shopWindow1'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow2@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow2'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow2@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow2'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow2@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow2'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow2@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow2'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow2@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow2@@YAHXZ@4PAHA DD 03H DUP (?)	; `shopWindow2'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow3@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow3'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow3@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow3'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow3@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow3'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow3@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow3'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow3@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow3@@YAHXZ@4PAHA DD 04H DUP (?)	; `shopWindow3'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow4@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow4'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow4@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow4'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow4@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow4'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow4@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow4'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow4@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow4@@YAHXZ@4PAHA DD 02H DUP (?)	; `shopWindow4'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow5@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow5@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow5'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow5@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow5@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow5'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow5@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow5@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow5'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow5@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow5@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow5'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow5@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow5@@YAHXZ@4PAHA DD 02H DUP (?)	; `shopWindow5'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow6@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow6@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow6'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow6@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow6@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow6'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow6@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow6@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow6'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow6@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow6@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow6'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow6@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow6@@YAHXZ@4PAHA DD 01H DUP (?)	; `shopWindow6'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow7@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow7@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow7'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow7@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow7@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow7'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow7@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow7@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow7'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow7@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow7@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow7'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow7@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow7@@YAHXZ@4PAHA DD 03H DUP (?)	; `shopWindow7'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow8@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow8@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow8'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow8@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow8@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow8'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow8@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow8@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow8'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow8@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow8@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow8'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow8@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow8@@YAHXZ@4PAHA DD 01H DUP (?)	; `shopWindow8'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??shopWindow10@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??shopWindow10@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow10'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??shopWindow10@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??shopWindow10@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow10'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??shopWindow10@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??shopWindow10@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow10'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??shopWindow10@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??shopWindow10@@YAHXZ@4HA DD 01H DUP (?)		; `shopWindow10'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??shopWindow10@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??shopWindow10@@YAHXZ@4PAHA DD 04H DUP (?)	; `shopWindow10'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??profession_windows_1@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??profession_windows_1@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_1'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??profession_windows_1@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??profession_windows_1@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_1'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??profession_windows_1@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??profession_windows_1@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_1'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??profession_windows_1@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??profession_windows_1@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_1'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??profession_windows_1@@YAHXZ@4PAHA DD 03H DUP (?) ; `profession_windows_1'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??profession_windows_2@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??profession_windows_2@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_2'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??profession_windows_2@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??profession_windows_2@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_2'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??profession_windows_2@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??profession_windows_2@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_2'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??profession_windows_2@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??profession_windows_2@@YAHXZ@4HA DD 01H DUP (?)	; `profession_windows_2'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??profession_windows_2@@YAHXZ@4PAHA DD 02H DUP (?) ; `profession_windows_2'::`2'::btnId
_BSS	ENDS
;	COMDAT ?msg1@?1??profession_windows_2@@YAHXZ@4PADA
_BSS	SEGMENT
?msg1@?1??profession_windows_2@@YAHXZ@4PADA DB 080H DUP (?) ; `profession_windows_2'::`2'::msg1
_BSS	ENDS
;	COMDAT ?x@?1??PetSkillShowType1@@YAXXZ@4HA
_BSS	SEGMENT
?x@?1??PetSkillShowType1@@YAXXZ@4HA DD 01H DUP (?)	; `PetSkillShowType1'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??PetSkillShowType1@@YAXXZ@4HA
_BSS	SEGMENT
?y@?1??PetSkillShowType1@@YAXXZ@4HA DD 01H DUP (?)	; `PetSkillShowType1'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??PetSkillShowType1@@YAXXZ@4HA
_BSS	SEGMENT
?w@?1??PetSkillShowType1@@YAXXZ@4HA DD 01H DUP (?)	; `PetSkillShowType1'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??PetSkillShowType1@@YAXXZ@4HA
_BSS	SEGMENT
?h@?1??PetSkillShowType1@@YAXXZ@4HA DD 01H DUP (?)	; `PetSkillShowType1'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??PetSkillShowType1@@YAXXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??PetSkillShowType1@@YAXXZ@4PAHA DD 01H DUP (?) ; `PetSkillShowType1'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??skillShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??skillShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow1'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??skillShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??skillShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow1'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??skillShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??skillShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow1'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??skillShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??skillShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow1'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA DD 03H DUP (?)	; `skillShopWindow1'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??skillShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??skillShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow2'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??skillShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??skillShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow2'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??skillShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??skillShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow2'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??skillShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??skillShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow2'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??skillShopWindow2@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??skillShopWindow2@@YAHXZ@4PAHA DD 01H DUP (?)	; `skillShopWindow2'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??skillShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??skillShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow3'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??skillShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??skillShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow3'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??skillShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??skillShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow3'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??skillShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??skillShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow3'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??skillShopWindow3@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??skillShopWindow3@@YAHXZ@4PAHA DD 01H DUP (?)	; `skillShopWindow3'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??skillShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??skillShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow4'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??skillShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??skillShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow4'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??skillShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??skillShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow4'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??skillShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??skillShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `skillShopWindow4'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA DD 02H DUP (?)	; `skillShopWindow4'::`2'::btnId
_BSS	ENDS
;	COMDAT ?msg1@?1??skillShopWindow4@@YAHXZ@4PADA
_BSS	SEGMENT
?msg1@?1??skillShopWindow4@@YAHXZ@4PADA DB 080H DUP (?)	; `skillShopWindow4'::`2'::msg1
_BSS	ENDS
;	COMDAT ?x@?1??poolShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??poolShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow1'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??poolShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??poolShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow1'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??poolShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??poolShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow1'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??poolShopWindow1@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??poolShopWindow1@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow1'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA DD 03H DUP (?)	; `poolShopWindow1'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??poolShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??poolShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow2'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??poolShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??poolShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow2'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??poolShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??poolShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow2'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??poolShopWindow2@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??poolShopWindow2@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow2'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA DD 03H DUP (?)	; `poolShopWindow2'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??poolShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??poolShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow3'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??poolShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??poolShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow3'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??poolShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??poolShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow3'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??poolShopWindow3@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??poolShopWindow3@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow3'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA DD 02H DUP (?)	; `poolShopWindow3'::`2'::btnId
_BSS	ENDS
;	COMDAT ?x@?1??poolShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??poolShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow4'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??poolShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??poolShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow4'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??poolShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??poolShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow4'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??poolShopWindow4@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??poolShopWindow4@@YAHXZ@4HA DD 01H DUP (?)	; `poolShopWindow4'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA DD 03H DUP (?)	; `poolShopWindow4'::`2'::btnId
_BSS	ENDS
_BSS	SEGMENT
?pActPet10@@3PAUaction@@A DD 01H DUP (?)		; pActPet10
?familyPetIndex@@3HA DD 01H DUP (?)			; familyPetIndex
_BSS	ENDS
;	COMDAT ?x@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?x@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyAddWN'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?y@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyAddWN'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?w@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyAddWN'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?h@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyAddWN'::`2'::h
_BSS	ENDS
;	COMDAT ?btnId@?1??familyAddWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??familyAddWN@@YAXXZ@4PAHA DD 05H DUP (?)	; `familyAddWN'::`2'::btnId
_BSS	ENDS
;	COMDAT ?fontId@?1??familyAddWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyAddWN@@YAXXZ@4PAHA DD 05H DUP (?)	; `familyAddWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?prevBtn@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?prevBtn@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::prevBtn
_BSS	ENDS
;	COMDAT ?nextBtn@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?nextBtn@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::nextBtn
_BSS	ENDS
;	COMDAT ?Inputforce@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?Inputforce@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::Inputforce
_BSS	ENDS
;	COMDAT ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::ýÅíñ?Ï¢
_BSS	ENDS
;	COMDAT ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::ýÅíñßãìÚ
_BSS	ENDS
;	COMDAT ?ýÅíñ?îñ?@?1??familyAddWN@@YAXXZ@4HA
_BSS	SEGMENT
?ýÅíñ?îñ?@?1??familyAddWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyAddWN'::`2'::ýÅíñ?îñ?
_BSS	ENDS
_BSS	SEGMENT
?familyListProcNo@@3FA DW 01H DUP (?)			; familyListProcNo
	ALIGN	4

?pagenum@@3HA DD 01H DUP (?)				; pagenum
?familytotal@@3HA DD 01H DUP (?)			; familytotal
?familynum@@3HA DD 01H DUP (?)				; familynum
?pActPet11@@3PAUaction@@A DD 01H DUP (?)		; pActPet11
?familyList@@3PAUTfamilyList@@A DB 028f0H DUP (?)	; familyList
?pkListProcNo@@3FA DW 01H DUP (?)			; pkListProcNo
	ALIGN	4

?pkPlayerTotal@@3HA DD 01H DUP (?)			; pkPlayerTotal
?pkPageNum@@3HA DD 01H DUP (?)				; pkPageNum
?pkPlayerNum@@3HA DD 01H DUP (?)			; pkPlayerNum
?pkPlayerList@@3PAUTPKPlayerList@@A DB 0a78H DUP (?)	; pkPlayerList
?pkHistoryListProcNo@@3FA DW 01H DUP (?)		; pkHistoryListProcNo
	ALIGN	4

?pkHistoryMaxSeason@@3HA DD 01H DUP (?)			; pkHistoryMaxSeason
?pkHistoryPageNum@@3HA DD 01H DUP (?)			; pkHistoryPageNum
?pkHistoryPlayerNum@@3HA DD 01H DUP (?)			; pkHistoryPlayerNum
?pkHistoryInfo@@3PADA DB 040H DUP (?)			; pkHistoryInfo
?pkHistoryList@@3PAUTPKHistoryList@@A DB 0af0H DUP (?)	; pkHistoryList
_BSS	ENDS
;	COMDAT ?x@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?x@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?y@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?w@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?h@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::h
_BSS	ENDS
;	COMDAT ?i@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?i@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::i
_BSS	ENDS
;	COMDAT ?j@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?j@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyListWN'::`2'::j
_BSS	ENDS
;	COMDAT ?btnId@?1??familyListWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??familyListWN@@YAXXZ@4PAHA DD 05H DUP (?)	; `familyListWN'::`2'::btnId
_BSS	ENDS
;	COMDAT ?fontId@?1??familyListWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyListWN@@YAXXZ@4PAHA DD 0cH DUP (?)	; `familyListWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?prevBtn@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?prevBtn@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyListWN'::`2'::prevBtn
_BSS	ENDS
;	COMDAT ?nextBtn@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?nextBtn@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyListWN'::`2'::nextBtn
_BSS	ENDS
;	COMDAT ?prevBtn10@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?prevBtn10@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyListWN'::`2'::prevBtn10
_BSS	ENDS
;	COMDAT ?nextBtn10@?1??familyListWN@@YAXXZ@4HA
_BSS	SEGMENT
?nextBtn10@?1??familyListWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyListWN'::`2'::nextBtn10
_BSS	ENDS
_BSS	SEGMENT
?changeData@@3PAHA DD 02H DUP (?)			; changeData
_BSS	ENDS
;	COMDAT ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)	; `familyDetailWN'::`2'::ýÅíñ?Ï¢
_BSS	ENDS
;	COMDAT ?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)	; `familyDetailWN'::`2'::ýÅíñßãìÚ
_BSS	ENDS
;	COMDAT ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)	; `familyDetailWN'::`2'::ýÅíñ?îñ?
_BSS	ENDS
;	COMDAT ?w@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)		; `familyDetailWN'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)		; `familyDetailWN'::`2'::h
_BSS	ENDS
;	COMDAT ?x@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)		; `familyDetailWN'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)		; `familyDetailWN'::`2'::y
_BSS	ENDS
;	COMDAT ?i@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?i@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)		; `familyDetailWN'::`2'::i
_BSS	ENDS
;	COMDAT ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA
_BSS	SEGMENT
?btnId@?1??familyDetailWN@@YAHXZ@4PAHA DD 05H DUP (?)	; `familyDetailWN'::`2'::btnId
_BSS	ENDS
;	COMDAT ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyDetailWN@@YAHXZ@4PAHA DD 05H DUP (?)	; `familyDetailWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?prevBtn@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)	; `familyDetailWN'::`2'::prevBtn
_BSS	ENDS
;	COMDAT ?nextBtn@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?nextBtn@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?)	; `familyDetailWN'::`2'::nextBtn
_BSS	ENDS
;	COMDAT ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA
_BSS	SEGMENT
?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA DD 01H DUP (?) ; `familyDetailWN'::`2'::familyPetIndex
_BSS	ENDS
;	COMDAT ?winX@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA DD 0cH DUP (?)	; `FMWindowType'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?fmdelid@?1??FMWindowType@@YAXXZ@4HA
_BSS	SEGMENT
?fmdelid@?1??FMWindowType@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType'::`2'::fmdelid
_BSS	ENDS
;	COMDAT ?winX@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `FMWindowType1'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
_BSS	SEGMENT
?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A DB 0128H DUP (?) ; `FMWindowType1'::`2'::input
_BSS	ENDS
;	COMDAT ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?) ; `FMWindowType1'::`2'::totalMsgLine
_BSS	ENDS
;	COMDAT ?lineSkip@?1??FMWindowType1@@YAXXZ@4HA
_BSS	SEGMENT
?lineSkip@?1??FMWindowType1@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType1'::`2'::lineSkip
_BSS	ENDS
;	COMDAT ?winX@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA DD 018H DUP (?) ; `FMWindowType2'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??FMWindowType2@@YAXXZ@4HA
_BSS	SEGMENT
?msgLine@?1??FMWindowType2@@YAXXZ@4HA DD 01H DUP (?)	; `FMWindowType2'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA DD 08H DUP (?) ; `fmselectdetuyWindow'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A DD 01H DUP (?) ; `fmselectdetuyWindow'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA DD 04H DUP (?) ; `fmYesNoWindow'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A DD 01H DUP (?) ; `fmYesNoWindow'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?winX@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA DD 0cH DUP (?) ; `FMWindowType4'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??FMWindowType4@@YAXH@Z@4HA
_BSS	SEGMENT
?msgLine@?1??FMWindowType4@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType4'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?winX@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA DD 0cH DUP (?) ; `FMWindowType3'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?msgLine@?1??FMWindowType3@@YAXH@Z@4HA
_BSS	SEGMENT
?msgLine@?1??FMWindowType3@@YAXH@Z@4HA DD 01H DUP (?)	; `FMWindowType3'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?bErr@?1??DelCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?bErr@?1??DelCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `DelCharGraColorWin'::`2'::bErr
_BSS	ENDS
;	COMDAT ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A
_BSS	SEGMENT
?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A DD 01H DUP (?) ; `DelCharGraColorWin'::`2'::ptActMenuWin
_BSS	ENDS
;	COMDAT ?x@?1??DelCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?x@?1??DelCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `DelCharGraColorWin'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??DelCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?y@?1??DelCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `DelCharGraColorWin'::`2'::y
_BSS	ENDS
;	COMDAT ?w@?1??DelCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?w@?1??DelCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `DelCharGraColorWin'::`2'::w
_BSS	ENDS
;	COMDAT ?h@?1??DelCharGraColorWin@@YAHXZ@4HA
_BSS	SEGMENT
?h@?1??DelCharGraColorWin@@YAHXZ@4HA DD 01H DUP (?)	; `DelCharGraColorWin'::`2'::h
_BSS	ENDS
;	COMDAT ?winX@?1??FMPKListWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??FMPKListWN@@YAXH@Z@4HA DD 01H DUP (?)		; `FMPKListWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMPKListWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??FMPKListWN@@YAXH@Z@4HA DD 01H DUP (?)		; `FMPKListWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMPKListWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??FMPKListWN@@YAXH@Z@4HA DD 01H DUP (?)		; `FMPKListWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMPKListWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??FMPKListWN@@YAXH@Z@4HA DD 01H DUP (?)		; `FMPKListWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA DD 0cH DUP (?)	; `FMPKListWN'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMPKListWN@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??FMPKListWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKListWN'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??FMPKSelectWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKSelectWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??FMPKSelectWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKSelectWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMPKSelectWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??FMPKSelectWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKSelectWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMPKSelectWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??FMPKSelectWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKSelectWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA DD 0cH DUP (?) ; `FMPKSelectWN'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMPKSelectWN@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??FMPKSelectWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKSelectWN'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winX@?1??FMPKDetailWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKDetailWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winY@?1??FMPKDetailWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKDetailWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??FMPKDetailWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winW@?1??FMPKDetailWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKDetailWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??FMPKDetailWN@@YAXH@Z@4HA
_BSS	SEGMENT
?winH@?1??FMPKDetailWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKDetailWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA DD 0cH DUP (?) ; `FMPKDetailWN'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??FMPKDetailWN@@YAXH@Z@4HA
_BSS	SEGMENT
?btnCnt@?1??FMPKDetailWN@@YAXH@Z@4HA DD 01H DUP (?)	; `FMPKDetailWN'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA
_BSS	SEGMENT
?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA DD 04H DUP (?) ; `FMPKDetailWN'::`2'::pushBtnFlag
_BSS	ENDS
;	COMDAT ?winX@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyTaxWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyTaxWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyTaxWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)		; `familyTaxWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA DD 04H DUP (?) ; `familyTaxWN'::`2'::pushBtnFlag
_BSS	ENDS
;	COMDAT ?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyTaxWN'::`2'::taxGoldInc
_BSS	ENDS
;	COMDAT ?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyTaxWN'::`2'::taxGoldDec
_BSS	ENDS
;	COMDAT ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA
_BSS	SEGMENT
?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA DD 01H DUP (?)	; `familyTaxWN'::`2'::taxGoldCnt
_BSS	ENDS
_BSS	SEGMENT
?pActPet12@@3PAUaction@@A DD 01H DUP (?)		; pActPet12
?pActPet13@@3PAUaction@@A DD 01H DUP (?)		; pActPet13
?pActPet14@@3PAUaction@@A DD 01H DUP (?)		; pActPet14
_BSS	ENDS
;	COMDAT ?winX@?1??showRidePetWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??showRidePetWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRidePetWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??showRidePetWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??showRidePetWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRidePetWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??showRidePetWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??showRidePetWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRidePetWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??showRidePetWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??showRidePetWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRidePetWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `showRidePetWN'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??showRidePetWN@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??showRidePetWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRidePetWN'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??familyLeaderChangeWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??familyLeaderChangeWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??familyLeaderChangeWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??familyLeaderChangeWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA DD 01eH DUP (?) ; `familyLeaderChangeWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA DD 03H DUP (?) ; `familyLeaderChangeWN'::`2'::fontId2
_BSS	ENDS
;	COMDAT ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeQWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeQWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??familyLeaderChangeQWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??familyLeaderChangeQWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeQWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??familyLeaderChangeQWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??familyLeaderChangeQWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeQWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA DD 02H DUP (?) ; `familyLeaderChangeQWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeAWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeAWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??familyLeaderChangeAWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??familyLeaderChangeAWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeAWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??familyLeaderChangeAWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??familyLeaderChangeAWN@@YAXXZ@4HA DD 01H DUP (?) ; `familyLeaderChangeAWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA DD 02H DUP (?) ; `familyLeaderChangeAWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA DD 01H DUP (?)	; `mineFamilyDetailWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA DD 01H DUP (?)	; `mineFamilyDetailWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??mineFamilyDetailWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??mineFamilyDetailWN@@YAXXZ@4HA DD 01H DUP (?)	; `mineFamilyDetailWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??mineFamilyDetailWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??mineFamilyDetailWN@@YAXXZ@4HA DD 01H DUP (?)	; `mineFamilyDetailWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA
_BSS	SEGMENT
?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA DD 02H DUP (?) ; `mineFamilyDetailWN'::`2'::fontId
_BSS	ENDS
;	COMDAT ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA
_BSS	SEGMENT
?BankBtNo@?1??BankProc@@YAXXZ@4PAHA DD 014H DUP (?)	; `BankProc'::`2'::BankBtNo
_BSS	ENDS
;	COMDAT ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA
_BSS	SEGMENT
?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA DD 014H DUP (?)	; `BankProc'::`2'::BankBtFlag
_BSS	ENDS
;	COMDAT ?Gold@?1??BankProc@@YAXXZ@4HA
_BSS	SEGMENT
?Gold@?1??BankProc@@YAXXZ@4HA DD 01H DUP (?)		; `BankProc'::`2'::Gold
_BSS	ENDS
;	COMDAT ?BankGoldInc@?1??BankProc@@YAXXZ@4HA
_BSS	SEGMENT
?BankGoldInc@?1??BankProc@@YAXXZ@4HA DD 01H DUP (?)	; `BankProc'::`2'::BankGoldInc
_BSS	ENDS
;	COMDAT ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA
_BSS	SEGMENT
?BankGoldCnt@?1??BankProc@@YAXXZ@4HA DD 01H DUP (?)	; `BankProc'::`2'::BankGoldCnt
_BSS	ENDS
;	COMDAT ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
_BSS	SEGMENT
?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A DD 01H DUP (?) ; `AuctionNewWT'::`2'::pShowPet1
_BSS	ENDS
;	COMDAT ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
_BSS	SEGMENT
?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A DD 01H DUP (?) ; `AuctionNewWT'::`2'::pShowPet2
_BSS	ENDS
;	COMDAT ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA DD 06H DUP (?) ; `AuctionNewWT'::`2'::nButton1
_BSS	ENDS
;	COMDAT ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA DD 04H DUP (?) ; `AuctionNewWT'::`2'::nButton2
_BSS	ENDS
;	COMDAT ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA DD 05aH DUP (?)	; `AuctionNewWT'::`2'::nItem
_BSS	ENDS
;	COMDAT ?nPet@?1??AuctionNewWT@@YAXXZ@4HA
_BSS	SEGMENT
?nPet@?1??AuctionNewWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionNewWT'::`2'::nPet
_BSS	ENDS
;	COMDAT ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA
_BSS	SEGMENT
?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionNewWT'::`2'::nPetShow
_BSS	ENDS
;	COMDAT ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA
_BSS	SEGMENT
?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionNewWT'::`2'::nItemSelect
_BSS	ENDS
;	COMDAT ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA
_BSS	SEGMENT
?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA DD 01H DUP (?) ; `AuctionNewWT'::`2'::nAuctionKind
_BSS	ENDS
;	COMDAT ?bPress@?1??AuctionNewWT@@YAXXZ@4HA
_BSS	SEGMENT
?bPress@?1??AuctionNewWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionNewWT'::`2'::bPress
_BSS	ENDS
;	COMDAT ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A
_BSS	SEGMENT
?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A DB 0af0H DUP (?) ; `AuctionListWT'::`2'::aldArea
_BSS	ENDS
;	COMDAT ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA DD 0aH DUP (?) ; `AuctionListWT'::`2'::nButton
_BSS	ENDS
;	COMDAT ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA DD 014H DUP (?) ; `AuctionListWT'::`2'::nList
_BSS	ENDS
;	COMDAT ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA
_BSS	SEGMENT
?nListSelect@?1??AuctionListWT@@YAXXZ@4HA DD 01H DUP (?) ; `AuctionListWT'::`2'::nListSelect
_BSS	ENDS
;	COMDAT ?id@?1??AuctionListWT@@YAXXZ@4PADA
_BSS	SEGMENT
?id@?1??AuctionListWT@@YAXXZ@4PADA DB 010H DUP (?)	; `AuctionListWT'::`2'::id
_BSS	ENDS
;	COMDAT ?bPress@?1??AuctionListWT@@YAXXZ@4HA
_BSS	SEGMENT
?bPress@?1??AuctionListWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionListWT'::`2'::bPress
_BSS	ENDS
;	COMDAT ?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA
_BSS	SEGMENT
?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA DD 01H DUP (?) ; `AuctionListWT'::`2'::bIsThisPlayerAuction
_BSS	ENDS
;	COMDAT ?nListNum@?1??AuctionListWT@@YAXXZ@4HA
_BSS	SEGMENT
?nListNum@?1??AuctionListWT@@YAXXZ@4HA DD 01H DUP (?)	; `AuctionListWT'::`2'::nListNum
_BSS	ENDS
;	COMDAT ?nCurrentPage@?1??AuctionListWT@@YAXXZ@4HA
_BSS	SEGMENT
?nCurrentPage@?1??AuctionListWT@@YAXXZ@4HA DD 01H DUP (?) ; `AuctionListWT'::`2'::nCurrentPage
_BSS	ENDS
;	COMDAT ?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A
_BSS	SEGMENT
?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A DD 01H DUP (?) ; `AuctionSurveyModifyWT'::`2'::pShowPet
_BSS	ENDS
;	COMDAT ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A
_BSS	SEGMENT
?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A DB 0118H DUP (?) ; `AuctionSurveyModifyWT'::`2'::ald
_BSS	ENDS
;	COMDAT ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA DD 04H DUP (?) ; `AuctionSurveyModifyWT'::`2'::nButton
_BSS	ENDS
;	COMDAT ?bPress@?1??AuctionSurveyModifyWT@@YAXXZ@4HA
_BSS	SEGMENT
?bPress@?1??AuctionSurveyModifyWT@@YAXXZ@4HA DD 01H DUP (?) ; `AuctionSurveyModifyWT'::`2'::bPress
_BSS	ENDS
;	COMDAT ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??showMouseGetNameWN@@YAXXZ@4HA DD 01H DUP (?)	; `showMouseGetNameWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??showMouseGetNameWN@@YAXXZ@4HA DD 01H DUP (?)	; `showMouseGetNameWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??showMouseGetNameWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??showMouseGetNameWN@@YAXXZ@4HA DD 01H DUP (?)	; `showMouseGetNameWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??showMouseGetNameWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??showMouseGetNameWN@@YAXXZ@4HA DD 01H DUP (?)	; `showMouseGetNameWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?inBlacklist@?1??showMouseGetNameWN@@YAXXZ@4HA
_BSS	SEGMENT
?inBlacklist@?1??showMouseGetNameWN@@YAXXZ@4HA DD 01H DUP (?) ; `showMouseGetNameWN'::`2'::inBlacklist
_BSS	ENDS
;	COMDAT ?winX@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?page@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?page@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::page
_BSS	ENDS
;	COMDAT ?max_page@?1??showContractWN@@YAXXZ@4HA
_BSS	SEGMENT
?max_page@?1??showContractWN@@YAXXZ@4HA DD 01H DUP (?)	; `showContractWN'::`2'::max_page
_BSS	ENDS
;	COMDAT ?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA
_BSS	SEGMENT
?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA DB 08e8H DUP (?) ; `showContractWN'::`2'::msgLine
_BSS	ENDS
;	COMDAT ?winW@?1??showRacemanRankWN@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??showRacemanRankWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRacemanRankWN'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??showRacemanRankWN@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??showRacemanRankWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRacemanRankWN'::`2'::winH
_BSS	ENDS
;	COMDAT ?winX@?1??showRacemanRankWN@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??showRacemanRankWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRacemanRankWN'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??showRacemanRankWN@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??showRacemanRankWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRacemanRankWN'::`2'::winY
_BSS	ENDS
;	COMDAT ?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `showRacemanRankWN'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??showRacemanRankWN@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??showRacemanRankWN@@YAXXZ@4HA DD 01H DUP (?)	; `showRacemanRankWN'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::winX
_BSS	ENDS
;	COMDAT ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::winY
_BSS	ENDS
;	COMDAT ?winW@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?winW@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::winW
_BSS	ENDS
;	COMDAT ?winH@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?winH@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::winH
_BSS	ENDS
;	COMDAT ?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA
_BSS	SEGMENT
?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA DD 0cH DUP (?) ; `serverWindowDragonFusion'::`2'::btnLoc
_BSS	ENDS
;	COMDAT ?btnCnt@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?btnCnt@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::btnCnt
_BSS	ENDS
;	COMDAT ?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA
_BSS	SEGMENT
?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA DD 01H DUP (?) ; `serverWindowDragonFusion'::`2'::selects
_BSS	ENDS
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@fffffffefffffffefffffffefffffffe
CONST	SEGMENT
__xmm@fffffffefffffffefffffffefffffffe DB 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH
	DB	0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00006647000066460000664500006644
CONST	SEGMENT
__xmm@00006647000066460000664500006644 DB 'Df', 00H, 00H, 'Ef', 00H, 00H, 'F'
	DB	'f', 00H, 00H, 'Gf', 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000065c2000065ed000065c2000065ed
CONST	SEGMENT
__xmm@000065c2000065ed000065c2000065ed DB 0edH, 'e', 00H, 00H, 0c2H, 'e', 00H
	DB	00H, 0edH, 'e', 00H, 00H, 0c2H, 'e', 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000014e0000006f000001310000006f
CONST	SEGMENT
__xmm@0000014e0000006f000001310000006f DB 'o', 00H, 00H, 00H, '1', 01H, 00H
	DB	00H, 'o', 00H, 00H, 00H, 'N', 01H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000147000001290000012f00000129
CONST	SEGMENT
__xmm@00000147000001290000012f00000129 DB ')', 01H, 00H, 00H, '/', 01H, 00H
	DB	00H, ')', 01H, 00H, 00H, 'G', 01H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@0000011700000129000000ff00000129
CONST	SEGMENT
__xmm@0000011700000129000000ff00000129 DB ')', 01H, 00H, 00H, 0ffH, 00H, 00H
	DB	00H, ')', 01H, 00H, 00H, 017H, 01H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000001160000006f000000fa0000006f
CONST	SEGMENT
__xmm@000001160000006f000000fa0000006f DB 'o', 00H, 00H, 00H, 0faH, 00H, 00H
	DB	00H, 'o', 00H, 00H, 00H, 016H, 01H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000c800000064000000c800000064
CONST	SEGMENT
__xmm@000000c800000064000000c800000064 DB 'd', 00H, 00H, 00H, 0c8H, 00H, 00H
	DB	00H, 'd', 00H, 00H, 00H, 0c8H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000a0000000f0000000a000000064
CONST	SEGMENT
__xmm@000000a0000000f0000000a000000064 DB 'd', 00H, 00H, 00H, 0a0H, 00H, 00H
	DB	00H, 0f0H, 00H, 00H, 00H, 0a0H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@000000440000006400000044000000c8
CONST	SEGMENT
__xmm@000000440000006400000044000000c8 DB 0c8H, 00H, 00H, 00H, 'D', 00H, 00H
	DB	00H, 'd', 00H, 00H, 00H, 'D', 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000006000000fe00000002000000fa
CONST	SEGMENT
__xmm@00000006000000fe00000002000000fa DB 0faH, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 0feH, 00H, 00H, 00H, 06H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000003000000fb00000001000000f9
CONST	SEGMENT
__xmm@00000003000000fb00000001000000f9 DB 0f9H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 0fbH, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000000000000000000000a0000000a
CONST	SEGMENT
__xmm@00000000000000000000000a0000000a DB 0aH, 00H, 00H, 00H, 0aH, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT ??_C@_08LBNAPDDE@MaxHP?5?$CFd@
CONST	SEGMENT
??_C@_08LBNAPDDE@MaxHP?5?$CFd@ DB 'MaxHP %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05POAOFMIF@LV?4?$CFd@
CONST	SEGMENT
??_C@_05POAOFMIF@LV?4?$CFd@ DB 'LV.%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KHFBBOKF@?q?r?l?L@
CONST	SEGMENT
??_C@_04KHFBBOKF@?q?r?l?L@ DB 0f1H, 0f2H, 0ecH, 0ccH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MNGAGPGA@?c?S?$DP@
CONST	SEGMENT
??_C@_03MNGAGPGA@?c?S?$DP@ DB 0e3H, 0d3H, '?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03GKEDPABO@?$DP?$NM?Q@
CONST	SEGMENT
??_C@_03GKEDPABO@?$DP?$NM?Q@ DB '?', 0dcH, 0d1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FAALJAKG@?A?A?$LO?F?G?O?$LE?Y@
CONST	SEGMENT
??_C@_08FAALJAKG@?A?A?$LO?F?G?O?$LE?Y@ DB 0c1H, 0c1H, 0beH, 0c6H, 0c7H, 0cfH
	DB	0b4H, 0d9H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06CALAJCAP@?$LK?N?$LI?$KD?$LE?Y@
CONST	SEGMENT
??_C@_06CALAJCAP@?$LK?N?$LI?$KD?$LE?Y@ DB 0baH, 0ceH, 0b8H, 0a3H, 0b4H, 0d9H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DIJJDGHC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_0P@DIJJDGHC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@ DB '%d|%d|%d'
	DB	'|%d|%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@LPGMCPCH@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$LA?a?A?$KE?G?O?$LM?K?$LN?$MA?$LE?O?$LB?n?$KD?$LP?5?5?5@
CONST	SEGMENT
??_C@_0CI@LPGMCPCH@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$LA?a?A?$KE?G?O?$LM?K?$LN?$MA?$LE?O?$LB?n?$KD?$LP?5?5?5@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '      ', 0b0H, 0e1H, 0c1H, 0a4H
	DB	0c7H, 0cfH, 0bcH, 0cbH, 0bdH, 0c0H, 0b4H, 0cfH, 0b1H, 0eeH, 0a3H
	DB	0bfH, '     ', 0a3H, 0bdH, 0a3H, 0bdH, 0a3H, 0bdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JBOBCJOD@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$CFd?$LI?$LG?$LI?$KO?5?$LM?$LB?E?C?5?5?5?5?$KD?$LN?$KD?$LN@
CONST	SEGMENT
??_C@_0CC@JBOBCJOD@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$CFd?$LI?$LG?$LI?$KO?5?$LM?$LB?E?C?5?5?5?5?$KD?$LN?$KD?$LN@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '      %d', 0b8H, 0b6H, 0b8H, 0aeH
	DB	' ', 0bcH, 0b1H, 0c5H, 0c3H, '    ', 0a3H, 0bdH, 0a3H, 0bdH, 0a3H
	DB	0bdH, 00H					; `string'
CONST	ENDS
;	COMDAT ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA
_DATA	SEGMENT
?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA DD 0ffffffffH ; `serverWindowDragonFusion'::`2'::selectID
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
	DD	0ffffffffH
_DATA	ENDS
;	COMDAT ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA DD 0fffffffeH ; `serverWindowDragonFusion'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CP@FDBDKEML@?$KB?$KO?$LM?$KO?B?w?$KB?$KP?5?5?5?5?$KB?$KO?5?5?5?$MA?L?5?5?5?$LI?$KH?5?5?5?5?$KB?$KP?5@
CONST	SEGMENT
??_C@_0CP@FDBDKEML@?$KB?$KO?$LM?$KO?B?w?$KB?$KP?5?5?5?5?$KB?$KO?5?5?5?$MA?L?5?5?5?$LI?$KH?5?5?5?5?$KB?$KP?5@ DB 0a1H
	DB	0aeH, 0bcH, 0aeH, 0c2H, 0f7H, 0a1H, 0afH, '    ', 0a1H, 0aeH, ' '
	DB	'  ', 0c0H, 0ccH, '   ', 0b8H, 0a7H, '    ', 0a1H, 0afH, '    '
	DB	'  ', 0a1H, 0aeH, 0c6H, 0f7H, 0c8H, 0b9H, 0bcH, 0f6H, 0a1H, 0afH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??showRacemanRankWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??showRacemanRankWN@@YAXXZ@4PAHA DD 0fffffffeH	; `showRacemanRankWN'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0O@IFIHGCPG@?5?$CF?910s?$CF?927s?$CFs@
CONST	SEGMENT
??_C@_0O@IFIHGCPG@?5?$CF?910s?$CF?927s?$CFs@ DB ' %-10s%-27s%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06GJCJAMOC@?v?$KC?$KB?$KB?a?$LM@
CONST	SEGMENT
??_C@_06GJCJAMOC@?v?$KC?$KB?$KB?a?$LM@ DB 0f6H, 0a2H, 0a1H, 0a1H, 0e1H, 0bcH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09OOIHKOPD@?X?$KB?$DP?l?m?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_09OOIHKOPD@?X?$KB?$DP?l?m?$KD?$LK?$CFs@ DB 0d8H, 0a1H, '?', 0ecH, 0edH
	DB	0a3H, 0baH, '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05BCDBBDGC@?$DP?$KB?$KB?o?R@
CONST	SEGMENT
??_C@_05BCDBBDGC@?$DP?$KB?$KB?o?R@ DB '?', 0a1H, 0a1H, 0efH, 0d2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IJDIOBDJ@?$CFs?$KD?$LK?5?5?5?$DP?Z?$LB?$DP?Y?$KD@
CONST	SEGMENT
??_C@_0O@IJDIOBDJ@?$CFs?$KD?$LK?5?5?5?$DP?Z?$LB?$DP?Y?$KD@ DB '%s', 0a3H, 0baH
	DB	'   ?', 0daH, 0b1H, '?', 0d9H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KIMCNEJC@?$CFs?$KD?$LK?5?5?5?n?$KE?s?$KO?$DP?Y?$KD@
CONST	SEGMENT
??_C@_0P@KIMCNEJC@?$CFs?$KD?$LK?5?5?5?n?$KE?s?$KO?$DP?Y?$KD@ DB '%s', 0a3H
	DB	0baH, '   ', 0eeH, 0a4H, 0f3H, 0aeH, '?', 0d9H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EOHPHPFN@?$CFs?$KD?$LK?5?$CFs?5?5?$CFs@
CONST	SEGMENT
??_C@_0M@EOHPHPFN@?$CFs?$KD?$LK?5?$CFs?5?5?$CFs@ DB '%s', 0a3H, 0baH, ' %'
	DB	's  %s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHAMEFIC@?o?K?$NL?$LA@
CONST	SEGMENT
??_C@_04FHAMEFIC@?o?K?$NL?$LA@ DB 0efH, 0cbH, 0dbH, 0b0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NLDKAEJ@?$NM?$LA?$NL?$LA@
CONST	SEGMENT
??_C@_04NLDKAEJ@?$NM?$LA?$NL?$LA@ DB 0dcH, 0b0H, 0dbH, 0b0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NFLPMLHN@?k?$OA?$NL?$LA@
CONST	SEGMENT
??_C@_04NFLPMLHN@?k?$OA?$NL?$LA@ DB 0ebH, 0e0H, 0dbH, 0b0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JNNPBDKK@?K?$KD?$NL?$LA@
CONST	SEGMENT
??_C@_04JNNPBDKK@?K?$KD?$NL?$LA@ DB 0cbH, 0a3H, 0dbH, 0b0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JOGGLHBA@?2n@
CONST	SEGMENT
??_C@_02JOGGLHBA@?2n@ DB '\n', 00H			; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??showContractWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??showContractWN@@YAXXZ@4PAHA DD 0fffffffeH	; `showContractWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0L@OKNLNJFO@?5?v?$KC?$KB?$KB?$KB?$KB?a?$LM?5@
CONST	SEGMENT
??_C@_0L@OKNLNJFO@?5?v?$KC?$KB?$KB?$KB?$KB?a?$LM?5@ DB ' ', 0f6H, 0a2H, 0a1H
	DB	0a1H, 0a1H, 0a1H, 0e1H, 0bcH, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NHGAGPIH@?5?$DP?5?5?5?5?l?Q?5@
CONST	SEGMENT
??_C@_09NHGAGPIH@?5?$DP?5?5?5?5?l?Q?5@ DB ' ?    ', 0ecH, 0d1H, ' ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NELLBCLM@?5?$DP?5?5?5?5?$DP?5@
CONST	SEGMENT
??_C@_08NELLBCLM@?5?$DP?5?5?5?5?$DP?5@ DB ' ?    ? ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MEHCFAEH@?5?Z?K?$KB?$KB?$KB?$KB?$DP?5@
CONST	SEGMENT
??_C@_09MEHCFAEH@?5?Z?K?$KB?$KB?$KB?$KB?$DP?5@ DB ' ', 0daH, 0cbH, 0a1H, 0a1H
	DB	0a1H, 0a1H, '? ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPLMBEOA@?$DP?v?h?$NP?$KJ?$DP?5?$CFs?5?$KD?$LK@
CONST	SEGMENT
??_C@_0N@BPLMBEOA@?$DP?v?h?$NP?$KJ?$DP?5?$CFs?5?$KD?$LK@ DB '?', 0f6H, 0e8H
	DB	0dfH, 0a9H, '? %s ', 0a3H, 0baH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IHBEEPL@?5IceCloud?5go?5Shit?$CB?$CB?$CB?5@
CONST	SEGMENT
??_C@_0BG@IHBEEPL@?5IceCloud?5go?5Shit?$CB?$CB?$CB?5@ DB ' IceCloud go Sh'
	DB	'it!!! ', 00H				; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA DD 0fffffffeH ; `showMouseGetNameWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_01LOCGONAA@?$AA@
CONST	SEGMENT
??_C@_01LOCGONAA@?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MCFCBINE@?$CFd?19?5?$DP@
CONST	SEGMENT
??_C@_06MCFCBINE@?$CFd?19?5?$DP@ DB '%d/9 ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03IFADCKOJ@?$CFd?$HM@
CONST	SEGMENT
??_C@_03IFADCKOJ@?$CFd?$HM@ DB '%d|', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EIOJDBDM@2?$HM?$CFd?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0L@EIOJDBDM@2?$HM?$CFd?$HM?$CFs?$HM?$CFd@ DB '2|%d|%s|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NBALFHDN@1?$HM?$CFd?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0L@NBALFHDN@1?$HM?$CFd?$HM?$CFs?$HM?$CFd@ DB '1|%d|%s|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DOPLAOEB@?5?5?C?k?5?5?$LM?R?5?5@
CONST	SEGMENT
??_C@_0L@DOPLAOEB@?5?5?C?k?5?5?$LM?R?5?5@ DB '  ', 0c3H, 0ebH, '  ', 0bcH
	DB	0d2H, '  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MCFCFIOA@?A?$KB?$LH?I?$LI?$LG?$MA?$LL?$KD?$LK@
CONST	SEGMENT
??_C@_0L@MCFCFIOA@?A?$KB?$LH?I?$LI?$LG?$MA?$LL?$KD?$LK@ DB 0c1H, 0a1H, 0b7H
	DB	0c9H, 0b8H, 0b6H, 0c0H, 0bbH, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODKJDFKI@?J?$KL?p?i?$PN?E?m?q?$KD?$LK@
CONST	SEGMENT
??_C@_0L@ODKJDFKI@?J?$KL?p?i?$PN?E?m?q?$KD?$LK@ DB 0caH, 0abH, 0f0H, 0e9H
	DB	0fdH, 0c5H, 0edH, 0f1H, 0a3H, 0baH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNFPIJDL@?$LA?$LD?$MA?N?$LB?b?$LM?$LM?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@PNFPIJDL@?$LA?$LD?$MA?N?$LB?b?$LM?$LM?$KD?$LK?$CFd@ DB 0b0H, 0b3H
	DB	0c0H, 0ceH, 0b1H, 0e2H, 0bcH, 0bcH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NGKOILMK@?$LA?$KB?A?$LH?$LB?b?$LM?$LM?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@NGKOILMK@?$LA?$KB?A?$LH?$LB?b?$LM?$LM?$KD?$LK?$CFd@ DB 0b0H, 0a1H
	DB	0c1H, 0b7H, 0b1H, 0e2H, 0bcH, 0bcH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FOIFMONB@?$LA?$LD?$MA?N?$LI?m?$LM?$LK?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@FOIFMONB@?$LA?$LD?$MA?N?$LI?m?$LM?$LK?$KD?$LK?$CFd@ DB 0b0H, 0b3H
	DB	0c0H, 0ceH, 0b8H, 0edH, 0bcH, 0baH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJCMAAFH@?$LA?$KB?A?$LH?A?w?C?$KF?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0N@CJCMAAFH@?$LA?$KB?A?$LH?A?w?C?$KF?$KD?$LK?$CFs@ DB 0b0H, 0a1H, 0c1H
	DB	0b7H, 0c1H, 0f7H, 0c3H, 0a5H, 0a3H, 0baH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFHEMMCA@?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@HFHEMMCA@?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$KD?$LK?$CFd@ DB 0b0H, 0a1H
	DB	0c1H, 0b7H, 0b8H, 0edH, 0bcH, 0baH, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CHGBLECB@?$LI?m?$LM?$LK?$LM?x?$MA?$KH?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@CHGBLECB@?$LI?m?$LM?$LK?$LM?x?$MA?$KH?$KD?$LK?$CFd@ DB 0b8H, 0edH
	DB	0bcH, 0baH, 0bcH, 0f8H, 0c0H, 0a7H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BCMFNKAE@?$LM?v?H?$KD?A?$KE?$LH?I?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0N@BCMFNKAE@?$LM?v?H?$KD?A?$KE?$LH?I?$KD?$LK?$CFs@ DB 0bcH, 0f6H, 0c8H
	DB	0a3H, 0c1H, 0a4H, 0b7H, 0c9H, 0a3H, 0baH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DKIOHJKC@?$LA?$KB?A?$LH?$MA?N?$LP?x?$KD?$LK?$CFd@
CONST	SEGMENT
??_C@_0N@DKIOHJKC@?$LA?$KB?A?$LH?$MA?N?$LP?x?$KD?$LK?$CFd@ DB 0b0H, 0a1H, 0c1H
	DB	0b7H, 0c0H, 0ceH, 0bfH, 0f8H, 0a3H, 0baH, '%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LNHPBKEN@?A?$LH?$MA?e?$MA?L?$LI?$KH?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0N@LNHPBKEN@?A?$LH?$MA?e?$MA?L?$LI?$KH?$KD?$LK?$CFs@ DB 0c1H, 0b7H, 0c0H
	DB	0e5H, 0c0H, 0ccH, 0b8H, 0a7H, 0a3H, 0baH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EFFHHOOF@?$LA?$KB?A?$LH?$MA?L?$LI?$KH?$KD?$LK?$CFs@
CONST	SEGMENT
??_C@_0N@EFFHHOOF@?$LA?$KB?A?$LH?$MA?L?$LI?$KH?$KD?$LK?$CFs@ DB 0b0H, 0a1H
	DB	0c1H, 0b7H, 0c0H, 0ccH, 0b8H, 0a7H, 0a3H, 0baH, '%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KIHJGLGD@?$LA?$KB?A?$LH?A?$KE?$LK?$LI@
CONST	SEGMENT
??_C@_08KIHJGLGD@?$LA?$KB?A?$LH?A?$KE?$LK?$LI@ DB 0b0H, 0a1H, 0c1H, 0b7H, 0c1H
	DB	0a4H, 0baH, 0b8H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJLGMOPM@?5?5?$LM?v?5?5?$LG?t?5?5@
CONST	SEGMENT
??_C@_0L@DJLGMOPM@?5?5?$LM?v?5?5?$LG?t?5?5@ DB '  ', 0bcH, 0f6H, '  ', 0b6H
	DB	0f4H, '  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09KOHGDBKE@?5?5?$LA?E?5?$MA?$PN?5?5@
CONST	SEGMENT
??_C@_09KOHGDBKE@?5?5?$LA?E?5?$MA?$PN?5?5@ DB '  ', 0b0H, 0c5H, ' ', 0c0H
	DB	0fdH, '  ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HPIFLCKK@?$LM?v?$LG?t?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0BD@HPIFLCKK@?$LM?v?$LG?t?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ DB 0bcH
	DB	0f6H, 0b6H, 0f4H, 0c7H, 0cfH, 0bdH, 0c3H, 0b0H, 0daH, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b1H, 0eeH, 0a3H, 0bfH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JJMKEJNK@?$CFs?5?$LP?$KB?$LA?T?5?A?$LH?$MA?e?$MA?$LL?5?$MA?$KH?$MA?S?G?U?$LE?O?$LE?Y?$KD?$KM@
CONST	SEGMENT
??_C@_0BM@JJMKEJNK@?$CFs?5?$LP?$KB?$LA?T?5?A?$LH?$MA?e?$MA?$LL?5?$MA?$KH?$MA?S?G?U?$LE?O?$LE?Y?$KD?$KM@ DB '%'
	DB	's ', 0bfH, 0a1H, 0b0H, 0d4H, ' ', 0c1H, 0b7H, 0c0H, 0e5H, 0c0H
	DB	0bbH, ' ', 0c0H, 0a7H, 0c0H, 0d3H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a3H, 0acH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JJJPGLGO@L?$HMCHANGE?$HMA?$HM1?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0BD@JJJPGLGO@L?$HMCHANGE?$HMA?$HM1?$HM?$CFs?$HM?$CFd@ DB 'L|CHANGE|'
	DB	'A|1|%s|%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFDFGLPA@L?$HMCHANGE?$HMA?$HM0?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0BD@FFDFGLPA@L?$HMCHANGE?$HMA?$HM0?$HM?$CFs?$HM?$CFd@ DB 'L|CHANGE|'
	DB	'A|0|%s|%d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPLGHOJI@?5?5?$DP?5?5?$DP?5?5@
CONST	SEGMENT
??_C@_08PPLGHOJI@?5?5?$DP?5?5?$DP?5?5@ DB '  ?  ?  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EPCBPGPN@?5?5?$LG?$LA?5?$LD?$KK?5?$LE?Y?5?5@
CONST	SEGMENT
??_C@_0N@EPCBPGPN@?5?5?$LG?$LA?5?$LD?$KK?5?$LE?Y?5?5@ DB '  ', 0b6H, 0b0H
	DB	' ', 0b3H, 0aaH, ' ', 0b4H, 0d9H, '  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FPBPENDN@?A?$LH?$MA?e?$MA?$LL?$CFs?$LP?$KB?$LA?T?5?$MA?$KH?$MA?S?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0CA@FPBPENDN@?A?$LH?$MA?e?$MA?$LL?$CFs?$LP?$KB?$LA?T?5?$MA?$KH?$MA?S?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ DB 0c1H
	DB	0b7H, 0c0H, 0e5H, 0c0H, 0bbH, '%s', 0bfH, 0a1H, 0b0H, 0d4H, ' '
	DB	0c0H, 0a7H, 0c0H, 0d3H, 0c7H, 0cfH, 0bdH, 0c3H, 0b0H, 0daH, 0bdH
	DB	0c0H, 0b4H, 0cfH, 0b1H, 0eeH, 0a3H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JFLIPKGJ@L?$HMCHANGE?$HMQ?$HM?$CFd?$HM?$CFs@
CONST	SEGMENT
??_C@_0BB@JFLIPKGJ@L?$HMCHANGE?$HMQ?$HM?$CFd?$HM?$CFs@ DB 'L|CHANGE|Q|%d|'
	DB	'%s', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KPJPAJE@?5?5?$LG?$LA?$LD?$KK?$LE?Y?5?5@
CONST	SEGMENT
??_C@_0L@KPJPAJE@?5?5?$LG?$LA?$LD?$KK?$LE?Y?5?5@ DB '  ', 0b6H, 0b0H, 0b3H
	DB	0aaH, 0b4H, 0d9H, '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DODKFOKF@?$LA?$KB?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$MA?$LL?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$LK@
CONST	SEGMENT
??_C@_0BJ@DODKFOKF@?$LA?$KB?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$MA?$LL?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$LK@ DB 0b0H
	DB	0a1H, 0c1H, 0b7H, 0b1H, 0b8H, 0bcH, 0baH, 0bfH, 0f8H, 0c0H, 0bbH
	DB	0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H
	DB	0baH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@IIIFLCHO@?$LL?s?$LE?k?$LI?$KG?5?$LM?$KN?$LF?Q?$LH?$KP?5?C?$KD?$LO?F?$LK?$LI?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@IIIFLCHO@?$LL?s?$LE?k?$LI?$KG?5?$LM?$KN?$LF?Q?$LH?$KP?5?C?$KD?$LO?F?$LK?$LI?$LM?$LM?$LP?d?$KD?$KB@ DB 0bbH
	DB	0f3H, 0b4H, 0ebH, 0b8H, 0a6H, ' ', 0bcH, 0adH, 0b5H, 0d1H, 0b7H
	DB	0afH, ' ', 0c3H, 0a3H, 0beH, 0c6H, 0baH, 0b8H, 0bcH, 0bcH, 0bfH
	DB	0e4H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@FDKHNEAG@?E?$LO?$LN?B?$LA?$KB?$LE?I?G?Q?F?d?F?$KO?$LE?B?5?$LE?Y?$MA?$LN?$LA?z?5?$LA?$LA?$LN?$MA?$LE?O?$LE@
CONST	SEGMENT
??_C@_0CE@FDKHNEAG@?E?$LO?$LN?B?$LA?$KB?$LE?I?G?Q?F?d?F?$KO?$LE?B?5?$LE?Y?$MA?$LN?$LA?z?5?$LA?$LA?$LN?$MA?$LE?O?$LE@ DB 0c5H
	DB	0beH, 0bdH, 0c2H, 0b0H, 0a1H, 0b4H, 0c9H, 0c7H, 0d1H, 0c6H, 0e4H
	DB	0c6H, 0aeH, 0b4H, 0c2H, ' ', 0b4H, 0d9H, 0c0H, 0bdH, 0b0H, 0faH
	DB	' ', 0b0H, 0b0H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 0a3H
	DB	0baH, 00H					; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??showRidePetWN@@YAXXZ@4PAHA DD 0fffffffeH	; `showRidePetWN'::`2'::fontId
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_06BOIKNFOM@B?$HMT?$HM?$CFd@
CONST	SEGMENT
??_C@_06BOIKNFOM@B?$HMT?$HM?$CFd@ DB 'B|T|%d', 00H	; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??familyTaxWN@@YAXXZ@4PAHA DD 0fffffffeH	; `familyTaxWN'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ?fontId@?1??familyTaxWN@@YAXXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??familyTaxWN@@YAXXZ@4PAHA DD 0fffffffeH	; `familyTaxWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BB@HNBGGGNE@?B?$PM?$LA?$KB?$MA?Z?$LM?v?$KD?$LK?5?$CFd?5?$LI?m@
CONST	SEGMENT
??_C@_0BB@HNBGGGNE@?B?$PM?$LA?$KB?$MA?Z?$LM?v?$KD?$LK?5?$CFd?5?$LI?m@ DB 0c2H
	DB	0fcH, 0b0H, 0a1H, 0c0H, 0daH, 0bcH, 0f6H, 0a3H, 0baH, ' %d ', 0b8H
	DB	0edH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNKEDEKN@?A?X?$LK?q?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?5?$LK?P@
CONST	SEGMENT
??_C@_0BB@PNKEDEKN@?A?X?$LK?q?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?5?$LK?P@ DB 0c1H
	DB	0d8H, 0baH, 0f1H, 0bdH, 0c3H, 0b0H, 0a3H, 0a3H, 0baH, ' %d ', 0baH
	DB	0d0H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PHNGNCKG@?$LN?E?C?$LL?$LA?$KB?A?$LH?$KD?$LK@
CONST	SEGMENT
??_C@_0L@PHNGNCKG@?$LN?E?C?$LL?$LA?$KB?A?$LH?$KD?$LK@ DB 0bdH, 0c5H, 0c3H
	DB	0bbH, 0b0H, 0a1H, 0c1H, 0b7H, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBIJEBEK@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH?$KD?$LK@
CONST	SEGMENT
??_C@_0L@KBIJEBEK@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH?$KD?$LK@ DB 0b5H, 0b5H, 0c0H
	DB	0fcH, 0b0H, 0a1H, 0c1H, 0b7H, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LDIFEIBI@?$LA?$KB?A?$LH?$LE?k?$LA?a?$LN?E?C?$LL@
CONST	SEGMENT
??_C@_0N@LDIFEIBI@?$LA?$KB?A?$LH?$LE?k?$LA?a?$LN?E?C?$LL@ DB 0b0H, 0a1H, 0c1H
	DB	0b7H, 0b4H, 0ebH, 0b0H, 0e1H, 0bdH, 0c5H, 0c3H, 0bbH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PKDFJBMN@?$CFs?$HM?$CFs?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_0BC@PKDFJBMN@?$CFs?$HM?$CFs?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFd@ DB '%'
	DB	's|%s|%s|%d|%d|%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA
_DATA	SEGMENT
?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMPKDetailWN'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA
_DATA	SEGMENT
?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMPKDetailWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_05EMGOANLP@?$CF?916s@
CONST	SEGMENT
??_C@_05EMGOANLP@?$CF?916s@ DB '%-16s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@FOLPFEDH@?$LN?E?C?$LL?G?O?$LN?G?5?$LA?$KB?A?$LH?$MA?$LL?5?$LM?$LB?E?C?G?X?A?V?$LM?$LM?$LP?d?$KD?$LK@
CONST	SEGMENT
??_C@_0BP@FOLPFEDH@?$LN?E?C?$LL?G?O?$LN?G?5?$LA?$KB?A?$LH?$MA?$LL?5?$LM?$LB?E?C?G?X?A?V?$LM?$LM?$LP?d?$KD?$LK@ DB 0bdH
	DB	0c5H, 0c3H, 0bbH, 0c7H, 0cfH, 0bdH, 0c7H, ' ', 0b0H, 0a1H, 0c1H
	DB	0b7H, 0c0H, 0bbH, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0d8H, 0c1H
	DB	0d6H, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA
_DATA	SEGMENT
?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMPKSelectWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_04FIBCPIPH@?$CF10s@
CONST	SEGMENT
??_C@_04FIBCPIPH@?$CF10s@ DB '%10s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBFPDLEJ@?$LN?B?$LI?$KO?A?$LG?$LA?G?$KD?$LK?5?$CFs@
CONST	SEGMENT
??_C@_0O@DBFPDLEJ@?$LN?B?$LI?$KO?A?$LG?$LA?G?$KD?$LK?5?$CFs@ DB 0bdH, 0c2H
	DB	0b8H, 0aeH, 0c1H, 0b6H, 0b0H, 0c7H, 0a3H, 0baH, ' %s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@FLGBJLNM@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF4d?$NN?B?$DP?5?5?$CF6d?l?Q@
CONST	SEGMENT
??_C@_0CA@FLGBJLNM@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF4d?$NN?B?$DP?5?5?$CF6d?l?Q@ DB '%'
	DB	'10s  %16s  %16s  %4d', 0ddH, 0c2H, '?  %6d', 0ecH, 0d1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FBMAKMIA@?$LP?$MA?$LE?C?5?$CFd?300@
CONST	SEGMENT
??_C@_0L@FBMAKMIA@?$LP?$MA?$LE?C?5?$CFd?300@ DB 0bfH, 0c0H, 0b4H, 0c3H, ' '
	DB	'%d:00', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KPJDMHLO@?$LD?$LL?$MA?O?5?$CFd?300@
CONST	SEGMENT
??_C@_0L@KPJDMHLO@?$LD?$LL?$MA?O?5?$CFd?300@ DB 0b3H, 0bbH, 0c0H, 0cfH, ' '
	DB	'%d:00', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LCOOKBCN@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF8s?5?5?$CF8s@
CONST	SEGMENT
??_C@_0BL@LCOOKBCN@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF8s?5?5?$CF8s@ DB '%'
	DB	'10s  %16s  %16s  %8s  %8s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GLHNCABG@?$LA?$LD?$MA?$PM?$LN?C?$LA?$KD@
CONST	SEGMENT
??_C@_08GLHNCABG@?$LA?$LD?$MA?$PM?$LN?C?$LA?$KD@ DB 0b0H, 0b3H, 0c0H, 0fcH
	DB	0bdH, 0c3H, 0b0H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PFKHECNF@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH@
CONST	SEGMENT
??_C@_08PFKHECNF@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH@ DB 0b5H, 0b5H, 0c0H, 0fcH
	DB	0b0H, 0a1H, 0c1H, 0b7H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08MBJKFBBE@?$LN?E?C?$LL?$LA?$KB?A?$LH@
CONST	SEGMENT
??_C@_08MBJKFBBE@?$LN?E?C?$LL?$LA?$KB?A?$LH@ DB 0bdH, 0c5H, 0c3H, 0bbH, 0b0H
	DB	0a1H, 0c1H, 0b7H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08PFKCNHNG@?A?X?$LK?q?$LN?C?$LA?$KD@
CONST	SEGMENT
??_C@_08PFKCNHNG@?A?X?$LK?q?$LN?C?$LA?$KD@ DB 0c1H, 0d8H, 0baH, 0f1H, 0bdH
	DB	0c3H, 0b0H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJLHBHM@?B?$PM?$LA?$KB?5?$MA?N?$LP?x?5?$LM?v@
CONST	SEGMENT
??_C@_0N@MJLHBHM@?B?$PM?$LA?$KB?5?$MA?N?$LP?x?5?$LM?v@ DB 0c2H, 0fcH, 0b0H
	DB	0a1H, ' ', 0c0H, 0ceH, 0bfH, 0f8H, ' ', 0bcH, 0f6H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NLEMPNJJ@?G?v?$MA?g?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?3?$CFd@
CONST	SEGMENT
??_C@_0BB@NLEMPNJJ@?G?v?$MA?g?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?3?$CFd@ DB 0c7H
	DB	0f6H, 0c0H, 0e7H, 0bdH, 0c3H, 0b0H, 0a3H, 0a3H, 0baH, ' %d:%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OOICEDBI@?$LA?$KB?A?$LH?$MA?$PM?E?u?$MA?O?A?$KE@
CONST	SEGMENT
??_C@_0N@OOICEDBI@?$LA?$KB?A?$LH?$MA?$PM?E?u?$MA?O?A?$KE@ DB 0b0H, 0a1H, 0c1H
	DB	0b7H, 0c0H, 0fcH, 0c5H, 0f5H, 0c0H, 0cfH, 0c1H, 0a4H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCJOFINF@?$LP?$LJ?5?5?A?$KE@
CONST	SEGMENT
??_C@_06LCJOFINF@?$LP?$LJ?5?5?A?$KE@ DB 0bfH, 0b9H, '  ', 0c1H, 0a4H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MOJFPAKN@?$MA?$MA?$LE?d?$LE?k?$LB?b@
CONST	SEGMENT
??_C@_08MOJFPAKN@?$MA?$MA?$LE?d?$LE?k?$LB?b@ DB 0c0H, 0c0H, 0b4H, 0e4H, 0b4H
	DB	0ebH, 0b1H, 0e2H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08EJIOEONO@?$LM?$LD?5?A?$KE?5?A?$NP@
CONST	SEGMENT
??_C@_08EJIOEONO@?$LM?$LD?5?A?$KE?5?A?$NP@ DB 0bcH, 0b3H, ' ', 0c1H, 0a4H
	DB	' ', 0c1H, 0dfH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08PCGBOOHO@?5?$LP?$KM?5?5?$LA?a?5@
CONST	SEGMENT
??_C@_08PCGBOOHO@?5?$LP?$KM?5?5?$LA?a?5@ DB ' ', 0bfH, 0acH, '  ', 0b0H, 0e1H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08FOJJNHLG@?5?$LM?v?5?5?A?$KE?5@
CONST	SEGMENT
??_C@_08FOJJNHLG@?5?$LM?v?5?5?A?$KE?5@ DB ' ', 0bcH, 0f6H, '  ', 0c1H, 0a4H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEIECNNH@?5?C?$NP?5?5?$LA?$KB?5@
CONST	SEGMENT
??_C@_08KEIECNNH@?5?C?$NP?5?5?$LA?$KB?5@ DB ' ', 0c3H, 0dfH, '  ', 0b0H, 0a1H
	DB	' ', 00H					; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA
_DATA	SEGMENT
?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMPKListWN'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BI@GILIOCHN@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?X?A?V?$LM?$LM?$LP?d@
CONST	SEGMENT
??_C@_0BI@GILIOCHN@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?X?A?V?$LM?$LM?$LP?d@ DB 0baH
	DB	0f1H, 0b9H, 0d0H, 0b9H, 0f8H, 0c8H, 0a3H, 0b8H, 0a6H, ' ', 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0d8H, 0c1H, 0d6H, 0bcH, 0bcH, 0bfH, 0e4H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BGEMBKPO@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LA?$KB?5?F?$LC?$LH?H?$LN?$MA?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BH@BGEMBKPO@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LA?$KB?5?F?$LC?$LH?H?$LN?$MA?$LE?O?$LE?Y?4@ DB 0baH
	DB	0f1H, 0b9H, 0d0H, 0b9H, 0f8H, 0c8H, 0a3H, 0b0H, 0a1H, ' ', 0c6H
	DB	0b2H, 0b7H, 0c8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DIPOFJGG@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?U?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BE@DIPOFJGG@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?U?$LE?O?$LE?Y@ DB 0c4H
	DB	0c9H, 0b8H, 0afH, 0c5H, 0cdH, 0b8H, 0a6H, ' ', 0bbH, 0e8H, 0c1H
	DB	0a6H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@PKMNOIEH@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?O?$LH?A?$LI?i?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5@
CONST	SEGMENT
??_C@_0CK@PKMNOIEH@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?O?$LH?A?$LI?i?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5@ DB 0c4H
	DB	0c9H, 0b8H, 0afH, 0c5H, 0cdH, 0b8H, 0a6H, ' ', 0bbH, 0e8H, 0c1H
	DB	0a6H, 0c7H, 0cfH, 0b7H, 0c1H, 0b8H, 0e9H, ' ', 0baH, 0f1H, 0b9H
	DB	0d0H, 0b9H, 0f8H, 0c8H, 0a3H, 0b8H, 0a6H, ' ', 0c0H, 0d4H, 0b7H
	DB	0c2H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@
CONST	SEGMENT
??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@ DB ' ', 0c3H, 0ebH, 0bcH, 0d2H, ' ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKOHEJBO@?5?$DP?$DP?5@
CONST	SEGMENT
??_C@_04OKOHEJBO@?5?$DP?$DP?5@ DB ' ?? ', 00H		; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA DD 0fffffffeH ; `DelCharGraColorWin'::`2'::fontId
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CL@PEELKHDI@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@
CONST	SEGMENT
??_C@_0CL@PEELKHDI@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@ DB 0a1H
	DB	0aeH, 0bcH, 0f8H, 0c0H, 0a7H, 0a1H, 0afH, ' ', 0a1H, 0aeH, 0baH
	DB	0ceH, 0c1H, 0b7H, 0c0H, 0ccH, 0b8H, 0a7H, 0a1H, 0afH, ' ', 0a1H
	DB	0aeH, 0c1H, 0b7H, 0c0H, 0e5H, 0a1H, 0afH, '  ', 0a1H, 0aeH, 0c6H
	DB	0f7H, 0c0H, 0ceH, 0c6H, 0aeH, 0a1H, 0afH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@CPAJCIOI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$KB?$KO?$LM?$KN?$LJ?v?5?$LA?$KB?A?$LH?5?$LM@
CONST	SEGMENT
??_C@_0CF@CPAJCIOI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$KB?$KO?$LM?$KN?$LJ?v?5?$LA?$KB?A?$LH?5?$LM@ DB ' '
	DB	'                 ', 0a1H, 0aeH, 0bcH, 0adH, 0b9H, 0f6H, ' ', 0b0H
	DB	0a1H, 0c1H, 0b7H, ' ', 0bcH, 0f8H, 0c0H, 0a7H, 0a1H, 0afH, 00H ; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA
_DATA	SEGMENT
?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMWindowType3'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BE@BGDICKKN@?5?$CF?99s?$CF?919s?$CF?917s?$CF12s@
CONST	SEGMENT
??_C@_0BE@BGDICKKN@?5?$CF?99s?$CF?919s?$CF?917s?$CF12s@ DB ' %-9s%-19s%-1'
	DB	'7s%12s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@DMPCKEKC@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?$KB?$KO?$LA?$KB?5?A?$LH?5?$LI?m?5?D?$KK?$KB?$KP?$KB?$KO?A?$LH?5?$MA?e?5@
CONST	SEGMENT
??_C@_0EB@DMPCKEKC@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?$KB?$KO?$LA?$KB?5?A?$LH?5?$LI?m?5?D?$KK?$KB?$KP?$KB?$KO?A?$LH?5?$MA?e?5@ DB 0a1H
	DB	0aeH, 0bcH, 0f8H, 0c0H, 0a7H, 0a1H, 0afH, 0a1H, 0aeH, 0b0H, 0a1H
	DB	' ', 0c1H, 0b7H, ' ', 0b8H, 0edH, ' ', 0c4H, 0aaH, 0a1H, 0afH, 0a1H
	DB	0aeH, 0c1H, 0b7H, ' ', 0c0H, 0e5H, ' ', 0c0H, 0ccH, ' ', 0b8H, 0a7H
	DB	0a1H, 0afH, 0a1H, 0aeH, 0b0H, 0a1H, 0c1H, 0b7H, 0c0H, 0c7H, 0c6H
	DB	0f2H, 0c6H, 0c7H, 0a1H, 0afH, 0a1H, 0aeH, 0b0H, 0b3H, 0c0H, 0ceH
	DB	0b1H, 0e2H, 0bcH, 0bcH, 0a1H, 0afH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPAMGOGD@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?$KB?$KP@
CONST	SEGMENT
??_C@_0BD@NPAMGOGD@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?$KB?$KP@ DB 0a1H
	DB	0aeH, 0bcH, 0adH, 0b9H, 0f6H, ' ', 0baH, 0ceH, 0c1H, 0b7H, ' ', 0bcH
	DB	0f8H, 0c0H, 0a7H, 0a1H, 0afH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@OAPGBLPG@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@
CONST	SEGMENT
??_C@_0DO@OAPGBLPG@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@ DB 0a1H
	DB	0aeH, 0bcH, 0f8H, 0c0H, 0a7H, 0a1H, 0afH, ' ', 0a1H, 0aeH, 0baH
	DB	0ceH, 0c1H, 0b7H, 0c0H, 0ccH, 0b8H, 0a7H, 0a1H, 0afH, ' ', 0a1H
	DB	0aeH, 0c1H, 0b7H, 0c0H, 0e5H, 0a1H, 0afH, ' ', 0a1H, 0aeH, 0b1H
	DB	0e2H, 0bfH, 0a9H, 0b5H, 0b5H, 0a1H, 0afH, 0a1H, 0aeH, 0b8H, 0edH
	DB	0bcH, 0baH, 0a1H, 0afH, 0a1H, 0aeH, 0baH, 0ceH, 0c1H, 0b7H, 0b8H
	DB	0edH, 0bcH, 0baH, 0a1H, 0afH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KCIAGAPO@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?5?$KB?$KP@
CONST	SEGMENT
??_C@_0BE@KCIAGAPO@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?5?$KB?$KP@ DB 0a1H
	DB	0aeH, 0bcH, 0adH, 0b9H, 0f6H, ' ', 0baH, 0ceH, 0c1H, 0b7H, ' ', 0bcH
	DB	0f8H, 0c0H, 0a7H, ' ', 0a1H, 0afH, 00H	; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA
_DATA	SEGMENT
?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA DD 0fffffffeH	; `FMWindowType4'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BG@HKOCFEKA@?$CF?97s?$CF?916s?$CF?916s?$CF8d?$CF12d@
CONST	SEGMENT
??_C@_0BG@HKOCFEKA@?$CF?97s?$CF?916s?$CF?916s?$CF8d?$CF12d@ DB '%-7s%-16s'
	DB	'%-16s%8d%12d', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@EPBIJHBO@?5?$CF?97s?$CF?918s?$CF?916s?$CF13d?$CF12d?$CF14d?$CF@
CONST	SEGMENT
??_C@_0BN@EPBIJHBO@?5?$CF?97s?$CF?918s?$CF?916s?$CF13d?$CF12d?$CF14d?$CF@ DB ' '
	DB	'%-7s%-18s%-16s%13d%12d%14d%', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01HIHLOKLC@1@
CONST	SEGMENT
??_C@_01HIHLOKLC@1@ DB '1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MDCNOKLO@?$DP?$DP?5?$CFs?5?A?$KG?$LI?m?$LN?C?E?$LD?$LB?n?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BF@MDCNOKLO@?$DP?$DP?5?$CFs?5?A?$KG?$LI?m?$LN?C?E?$LD?$LB?n?$LP?d?$KD?$LP@ DB '?'
	DB	'? %s ', 0c1H, 0a6H, 0b8H, 0edH, 0bdH, 0c3H, 0c5H, 0b3H, 0b1H, 0eeH
	DB	0bfH, 0e4H, 0a3H, 0bfH, 00H			; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??fmYesNoWindow@@YAHHHH@Z@4PAHA
_DATA	SEGMENT
?btnId@?1??fmYesNoWindow@@YAHHHH@Z@4PAHA DD 0fffffffeH	; `fmYesNoWindow'::`2'::btnId
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0L@GOKAMOPJ@?$LI?C?$MA?$LK?A?w?C?$KF?$KD?$LK@
CONST	SEGMENT
??_C@_0L@GOKAMOPJ@?$LI?C?$MA?$LK?A?w?C?$KF?$KD?$LK@ DB 0b8H, 0c3H, 0c0H, 0baH
	DB	0c1H, 0f7H, 0c3H, 0a5H, 0a3H, 0baH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KMMDIKEB@?5?$CFs?5@
CONST	SEGMENT
??_C@_04KMMDIKEB@?5?$CFs?5@ DB ' %s ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJCDNCBF@?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d@
CONST	SEGMENT
??_C@_0L@DJCDNCBF@?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d@ DB 0bcH, 0b1H, 0c5H, 0c3H
	DB	0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JAKOPBJC@?C?k?5?5?5?5?$LM?R@
CONST	SEGMENT
??_C@_08JAKOPBJC@?C?k?5?5?5?5?$LM?R@ DB 0c3H, 0ebH, '    ', 0bcH, 0d2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CMOKCILO@?$MA?O?$LJ?$NN?$LK?N?A?$LH?$LP?x@
CONST	SEGMENT
??_C@_0L@CMOKCILO@?$MA?O?$LJ?$NN?$LK?N?A?$LH?$LP?x@ DB 0c0H, 0cfH, 0b9H, 0ddH
	DB	0baH, 0ceH, 0c1H, 0b7H, 0bfH, 0f8H, 00H	; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAHA
_DATA	SEGMENT
?btnId@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAHA DD 0fffffffeH ; `fmselectdetuyWindow'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CI@NMHOIHGJ@?$KB?$KO?$MA?e?5?$LM?R?$KB?$KP?$KB?$KO?$LF?$LP?$KB?$KP?$KB?$KO?$LD?$LC?$KB?$KP?5?5?5?5?5?5?5?5?$KB?$KO@
CONST	SEGMENT
??_C@_0CI@NMHOIHGJ@?$KB?$KO?$MA?e?5?$LM?R?$KB?$KP?$KB?$KO?$LF?$LP?$KB?$KP?$KB?$KO?$LD?$LC?$KB?$KP?5?5?5?5?5?5?5?5?$KB?$KO@ DB 0a1H
	DB	0aeH, 0c0H, 0e5H, ' ', 0bcH, 0d2H, 0a1H, 0afH, 0a1H, 0aeH, 0b5H
	DB	0bfH, 0a1H, 0afH, 0a1H, 0aeH, 0b3H, 0b2H, 0a1H, 0afH, '       '
	DB	' ', 0a1H, 0aeH, 0bbH, 0f3H, '  ', 0c5H, 0c2H, 0a1H, 0afH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EPJNIDND@?5?5?5?5?5?5?5?5?$KB?$KO?$LA?$KB?A?$LH?$LB?b?$LJ?$NN?G?A?$LH?N?$LB?W?$LH?$KF?$LI?q?$LH?O?$KB@
CONST	SEGMENT
??_C@_0CB@EPJNIDND@?5?5?5?5?5?5?5?5?$KB?$KO?$LA?$KB?A?$LH?$LB?b?$LJ?$NN?G?A?$LH?N?$LB?W?$LH?$KF?$LI?q?$LH?O?$KB@ DB ' '
	DB	'       ', 0a1H, 0aeH, 0b0H, 0a1H, 0c1H, 0b7H, 0b1H, 0e2H, 0b9H
	DB	0ddH, 0c7H, 0c1H, 0b7H, 0ceH, 0b1H, 0d7H, 0b7H, 0a5H, 0b8H, 0f1H
	DB	0b7H, 0cfH, 0a1H, 0afH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07MEJNJNBN@P?$HM?$CFd?$HM?$CFs@
CONST	SEGMENT
??_C@_07MEJNJNBN@P?$HM?$CFd?$HM?$CFs@ DB 'P|%d|%s', 00H	; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??FMWindowType2@@YAXXZ@4PAHA DD 0fffffffeH	; `FMWindowType2'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_08CKOJLPBB@?$CFs?$HM?$CFs?$HM?$CFs@
CONST	SEGMENT
??_C@_08CKOJLPBB@?$CFs?$HM?$CFs?$HM?$CFs@ DB '%s|%s|%s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOFHBIDI@?$CF9s?$CF5s?5?$CF5s?$CF18s@
CONST	SEGMENT
??_C@_0P@HOFHBIDI@?$CF9s?$CF5s?5?$CF5s?$CF18s@ DB '%9s%5s %5s%18s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@
CONST	SEGMENT
??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@ DB 0b9H, 0ccH, 0bbH, 0e7H, 0bfH, 0ebH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@
CONST	SEGMENT
??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@ DB 0beH, 0c6H, 0bdH, 0c3H, 0beH, 0c6H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBBHHHEB@?$LO?$NP?5?$MA?L?5?$LP?$MA@
CONST	SEGMENT
??_C@_08BBBHHHEB@?$LO?$NP?5?$MA?L?5?$LP?$MA@ DB 0beH, 0dfH, ' ', 0c0H, 0ccH
	DB	' ', 0bfH, 0c0H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFLGLILK@?$LE?O?5?5?5?5?$LN?$LK@
CONST	SEGMENT
??_C@_08NFLGLILK@?$LE?O?5?5?5?5?$LN?$LK@ DB 0b4H, 0cfH, '    ', 0bdH, 0baH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08PLFMPCKD@?E?$LI?5?$LI?$KD?5?E?$LI@
CONST	SEGMENT
??_C@_08PLFMPCKD@?E?$LI?5?$LI?$KD?5?E?$LI@ DB 0c5H, 0b8H, ' ', 0b8H, 0a3H
	DB	' ', 0c5H, 0b8H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08GDPNKJEK@?$LP?$KB?5?5?5?5?$LF?$KH@
CONST	SEGMENT
??_C@_08GDPNKJEK@?$LP?$KB?5?5?5?5?$LF?$KH@ DB 0bfH, 0a1H, '    ', 0b5H, 0a7H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08IPKKANCP@?D?$KL?$LH?g?E?$LI?$LD?$KK@
CONST	SEGMENT
??_C@_08IPKKANCP@?D?$KL?$LH?g?E?$LI?$LD?$KK@ DB 0c4H, 0abH, 0b7H, 0e7H, 0c5H
	DB	0b8H, 0b3H, 0aaH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HCKLDHDO@?$MA?p?5?5?5?5?$MA?p@
CONST	SEGMENT
??_C@_08HCKLDHDO@?$MA?p?5?5?5?5?$MA?p@ DB 0c0H, 0f0H, '    ', 0c0H, 0f0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08FHGEHAHK@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK@
CONST	SEGMENT
??_C@_08FHGEHAHK@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK@ DB 0b8H, 0b6H, 0b8H, 0aeH
	DB	0b3H, 0caH, 0bdH, 0baH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@
CONST	SEGMENT
??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@ DB 0bcH, 0a4H, 0b1H
	DB	0e2H, 0b8H, 0a3H, 0b8H, 0b6H, 0c0H, 0bbH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BNBIMIKL@?$KB?$KO?$LA?$KB?5?A?$LH?5?$LA?T?5?$LN?C?5?F?G?5?$KB?$KP@
CONST	SEGMENT
??_C@_0BE@BNBIMIKL@?$KB?$KO?$LA?$KB?5?A?$LH?5?$LA?T?5?$LN?C?5?F?G?5?$KB?$KP@ DB 0a1H
	DB	0aeH, 0b0H, 0a1H, ' ', 0c1H, 0b7H, ' ', 0b0H, 0d4H, ' ', 0bdH, 0c3H
	DB	' ', 0c6H, 0c7H, ' ', 0a1H, 0afH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@
CONST	SEGMENT
??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@ DB '%d|%s', 00H	; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??FMWindowType1@@YAXXZ@4PAHA DD 0fffffffeH	; `FMWindowType1'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_01DNKMNLPK@?$HM@
CONST	SEGMENT
??_C@_01DNKMNLPK@?$HM@ DB '|', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@MNEGDEON@?5?$KD?$NL?A?$KC?$LM?S?$KD?$NN?$KD?$NL?$LE?P?$LD?W?$MA?S?$KD?$NN?5?5?5?5?5?$KD?$NL?$LH?$LJ?$LK?$KH?$KD@
CONST	SEGMENT
??_C@_0EI@MNEGDEON@?5?$KD?$NL?A?$KC?$LM?S?$KD?$NN?$KD?$NL?$LE?P?$LD?W?$MA?S?$KD?$NN?5?5?5?5?5?$KD?$NL?$LH?$LJ?$LK?$KH?$KD@ DB ' '
	DB	0a3H, 0dbH, 0c1H, 0a2H, 0bcH, 0d3H, 0a3H, 0ddH, 0a3H, 0dbH, 0b4H
	DB	0d0H, 0b3H, 0d7H, 0c0H, 0d3H, 0a3H, 0ddH, '     ', 0a3H, 0dbH, 0b7H
	DB	0b9H, 0baH, 0a7H, 0a3H, 0ddH, '  ', 0a3H, 0dbH, 0b8H, 0edH, 0bcH
	DB	0baH, 0a3H, 0ddH, ' ', 0a3H, 0dbH, 0b1H, 0e2H, 0bfH, 0a9H, 0b5H
	DB	0b5H, 0a3H, 0ddH, ' ', 0a3H, 0dbH, 0c1H, 0f7H, 0c0H, 0a7H, 0a3H
	DB	0ddH, ' ', 0a3H, 0dbH, 0b8H, 0c7H, 0c5H, 0e4H, 0a3H, 0ddH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@OGEDCEOL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$LK?N?A?$LH?$LP?x@
CONST	SEGMENT
??_C@_0CF@OGEDCEOL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$LK?N?A?$LH?$LP?x@ DB ' '
	DB	'                        ', 0baH, 0ceH, 0c1H, 0b7H, 0bfH, 0f8H
	DB	' ', 0b0H, 0fcH, 0b8H, 0aeH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04OKLAFEGF@T?$HM?$CFd@
CONST	SEGMENT
??_C@_04OKLAFEGF@T?$HM?$CFd@ DB 'T|%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IBINOEKJ@M?$HM?$CFs?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_0L@IBINOEKJ@M?$HM?$CFs?$HM?$CFd?$HM?$CFd@ DB 'M|%s|%d|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGEINEE@?$CFs?5@
CONST	SEGMENT
??_C@_03IKGEINEE@?$CFs?5@ DB '%s ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHFHKOHM@?$DP?$DP@
CONST	SEGMENT
??_C@_02HHFHKOHM@?$DP?$DP@ DB '??', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NKANOEFH@?$DP?5?5?$DP@
CONST	SEGMENT
??_C@_04NKANOEFH@?$DP?5?5?$DP@ DB '?  ?', 00H		; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??FMWindowType@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??FMWindowType@@YAXXZ@4PAHA DD 0fffffffeH	; `FMWindowType'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CC@OOGHFIO@?5?$CF?920s?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0CC@OOGHFIO@?5?$CF?920s?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB ' '
	DB	'%-20s                         %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IPDOHIGO@?$LA?$KB?$MA?T?5?$LA?E?$LK?N@
CONST	SEGMENT
??_C@_09IPDOHIGO@?$LA?$KB?$MA?T?5?$LA?E?$LK?N@ DB 0b0H, 0a1H, 0c0H, 0d4H, ' '
	DB	0b0H, 0c5H, 0baH, 0ceH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09LDBPGJOA@?$LA?$KB?$MA?T?5?$LN?B?$MA?N@
CONST	SEGMENT
??_C@_09LDBPGJOA@?$LA?$KB?$MA?T?5?$LN?B?$MA?N@ DB 0b0H, 0a1H, 0c0H, 0d4H, ' '
	DB	0bdH, 0c2H, 0c0H, 0ceH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HGDMDEHB@?$CF?99s?$CF?918s?$CF3s?$CF12s?$CF12s?$CF10s?$CF7s@
CONST	SEGMENT
??_C@_0BM@HGDMDEHB@?$CF?99s?$CF?918s?$CF3s?$CF12s?$CF12s?$CF10s?$CF7s@ DB '%'
	DB	'-9s%-18s%3s%12s%12s%10s%7s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@
CONST	SEGMENT
??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@ DB 0c5H, 0bbH, '    ', 0c5H, 0f0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08EPNLIAJH@?$LA?$KB?$MA?T?$LN?E?C?$LL@
CONST	SEGMENT
??_C@_08EPNLIAJH@?$LA?$KB?$MA?T?$LN?E?C?$LL@ DB 0b0H, 0a1H, 0c0H, 0d4H, 0bdH
	DB	0c5H, 0c3H, 0bbH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@
CONST	SEGMENT
??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@ DB 0c0H, 0e5H, '    ', 0b7H, 0ceH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBDNAOJN@?A?$LH?5?5?5?5?$MA?e@
CONST	SEGMENT
??_C@_08HBDNAOJN@?A?$LH?5?5?5?5?$MA?e@ DB 0c1H, 0b7H, '    ', 0c0H, 0e5H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KOCLKJHI@?$LK?N?5?A?$LH?5?$LP?x@
CONST	SEGMENT
??_C@_08KOCLKJHI@?$LK?N?5?A?$LH?5?$LP?x@ DB 0baH, 0ceH, ' ', 0c1H, 0b7H, ' '
	DB	0bfH, 0f8H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@
CONST	SEGMENT
??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@ DB 0b9H, 0ccH, 0c1H, 0a2H, 0bcH, 0d3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04GMJLIJKP@?A?$KC?$LM?S@
CONST	SEGMENT
??_C@_04GMJLIJKP@?A?$KC?$LM?S@ DB 0c1H, 0a2H, 0bcH, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JANJFJHP@?$DP?v?G?$PN?E?m?q@
CONST	SEGMENT
??_C@_07JANJFJHP@?$DP?v?G?$PN?E?m?q@ DB '?', 0f6H, 0c7H, 0fdH, 0c5H, 0edH
	DB	0f1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05PFEBJGGD@?$CFd?5?$LI?m@
CONST	SEGMENT
??_C@_05PFEBJGGD@?$CFd?5?$LI?m@ DB '%d ', 0b8H, 0edH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06DCIEHEEO@X?$HMB?$HM?$CFd@
CONST	SEGMENT
??_C@_06DCIEHEEO@X?$HMB?$HM?$CFd@ DB 'X|B|%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06CIKELAKM@X?$HMP?$HM?$CFd@
CONST	SEGMENT
??_C@_06CIKELAKM@X?$HMP?$HM?$CFd@ DB 'X|P|%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FHOHGHFK@X?$HMR?$HM?$CFs@
CONST	SEGMENT
??_C@_06FHOHGHFK@X?$HMR?$HM?$CFs@ DB 'X|R|%s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FBIMKKIN@J?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0O@FBIMKKIN@J?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@ DB 'J|%d|%d|%s|%'
	DB	'd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@GBGODGL@P?$HM?$MA?L?$LJ?L?5?$LE?Y?$LI?$KF?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?$LO?n?$MA?V?$LO?n?$LP@
CONST	SEGMENT
??_C@_0CD@GBGODGL@P?$HM?$MA?L?$LJ?L?5?$LE?Y?$LI?$KF?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?$LO?n?$MA?V?$LO?n?$LP@ DB 'P'
	DB	'|', 0c0H, 0ccH, 0b9H, 0ccH, ' ', 0b4H, 0d9H, 0b8H, 0a5H, 0baH
	DB	0ceH, 0c1H, 0b7H, 0bfH, 0a1H, ' ', 0b0H, 0a1H, 0c0H, 0d4H, 0b5H
	DB	0c7H, 0beH, 0eeH, 0c0H, 0d6H, 0beH, 0eeH, 0bfH, 0e4H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?ýÅíñ???@?1??familyDetailWN@@YAHXZ@4HA
_DATA	SEGMENT
?ýÅíñ???@?1??familyDetailWN@@YAHXZ@4HA DD 01H		; `familyDetailWN'::`2'::ýÅíñ???
_DATA	ENDS
;	COMDAT ??_C@_0BK@IAGNODKB@?$CF4d?3?5?$CF?916s?5?$CF?916s?5?$CF6d?5?$CF10d@
CONST	SEGMENT
??_C@_0BK@IAGNODKB@?$CF4d?3?5?$CF?916s?5?$CF?916s?5?$CF6d?5?$CF10d@ DB '%'
	DB	'4d: %-16s %-16s %6d %10d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DBLHNEOK@?$CF?94s?5?$CF?916s?5?$CF?916s?5?$CF6s?5?$CF10s@
CONST	SEGMENT
??_C@_0BK@DBLHNEOK@?$CF?94s?5?$CF?916s?5?$CF?916s?5?$CF6s?5?$CF10s@ DB '%'
	DB	'-4s %-16s %-16s %6s %10s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGCOJGNL@?$FL?$LK?N?5?A?$LH?5?$MA?L?5?$LI?$KH?$FN@
CONST	SEGMENT
??_C@_0O@MGCOJGNL@?$FL?$LK?N?5?A?$LH?5?$MA?L?5?$LI?$KH?$FN@ DB '[', 0baH, 0ceH
	DB	' ', 0c1H, 0b7H, ' ', 0c0H, 0ccH, ' ', 0b8H, 0a7H, ']', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08KKDDPHBL@?$FL?A?$LH?5?5?$MA?e?$FN@
CONST	SEGMENT
??_C@_08KKDDPHBL@?$FL?A?$LH?5?5?$MA?e?$FN@ DB '[', 0c1H, 0b7H, '  ', 0c0H
	DB	0e5H, ']', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06PFFPIKHP@?$FL?$MA?N?$LP?x?$FN@
CONST	SEGMENT
??_C@_06PFFPIKHP@?$FL?$MA?N?$LP?x?$FN@ DB '[', 0c0H, 0ceH, 0bfH, 0f8H, ']'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FHLFAEOJ@?$FL?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$FN@
CONST	SEGMENT
??_C@_0L@FHLFAEOJ@?$FL?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$FN@ DB '[', 0b0H, 0a1H
	DB	0c1H, 0b7H, 0b8H, 0edH, 0bcH, 0baH, ']', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFBBINPB@?$CF3d?5?1?5?$CF3d?5?$DP@
CONST	SEGMENT
??_C@_0M@GFBBINPB@?$CF3d?5?1?5?$CF3d?5?$DP@ DB '%3d / %3d ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MIMOGKCP@?$LA?$KB?A?$LH?$LI?q?$LH?O@
CONST	SEGMENT
??_C@_08MIMOGKCP@?$LA?$KB?A?$LH?$LI?q?$LH?O@ DB 0b0H, 0a1H, 0c1H, 0b7H, 0b8H
	DB	0f1H, 0b7H, 0cfH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LDDLKII@S?$HMD?$HM?$CFs?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_0N@LDDLKII@S?$HMD?$HM?$CFs?$HM?$CFd?$HM?$CFd@ DB 'S|D|%s|%d|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07EFKFLCFA@S?$HMF?$HM1?$HM0@
CONST	SEGMENT
??_C@_07EFKFLCFA@S?$HMF?$HM1?$HM0@ DB 'S|F|1|0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08MNCFPICD@S?$HMF?$HM?$CFd?$HM0@
CONST	SEGMENT
??_C@_08MNCFPICD@S?$HMF?$HM?$CFd?$HM0@ DB 'S|F|%d|0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04PMAIGBME@?$CF38s@
CONST	SEGMENT
??_C@_04PMAIGBME@?$CF38s@ DB '%38s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HHOANBGP@?5?5?$CFs?5?5@
CONST	SEGMENT
??_C@_06HHOANBGP@?5?5?$CFs?5?5@ DB '  %s  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03EEBNCBOD@?5?$CFs@
CONST	SEGMENT
??_C@_03EEBNCBOD@?5?$CFs@ DB ' %s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EHFFKIEF@?$LO?x?$LE?Y@
CONST	SEGMENT
??_C@_04EHFFKIEF@?$LO?x?$LE?Y@ DB 0beH, 0f8H, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPCKNFFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_0BD@DPCKNFFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@ DB '            '
	DB	'      ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08IEFDEMID@?$LJ?h?A?v?$LM?$LD?A?$KE@
CONST	SEGMENT
??_C@_08IEFDEMID@?$LJ?h?A?v?$LM?$LD?A?$KE@ DB 0b9H, 0e8H, 0c1H, 0f6H, 0bcH
	DB	0b3H, 0c1H, 0a4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FFLONHHA@A?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@
CONST	SEGMENT
??_C@_0BB@FFLONHHA@A?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@ DB 'A|'
	DB	'%s|%d|%d|%s|%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@ODAGPAJL@?$LA?$KB?A?$LH?5?$LK?$LI?H?$KD?$MA?Z?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BL@ODAGPAJL@?$LA?$KB?A?$LH?5?$LK?$LI?H?$KD?$MA?Z?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0b0H
	DB	0a1H, 0c1H, 0b7H, ' ', 0baH, 0b8H, 0c8H, 0a3H, 0c0H, 0daH, 0b8H
	DB	0a6H, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH
	DB	0e4H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@IAPAGIOC@?$LM?v?H?$KD?5?F?d?F?$KO?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BJ@IAPAGIOC@?$LM?v?H?$KD?5?F?d?F?$KO?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0bcH
	DB	0f6H, 0c8H, 0a3H, ' ', 0c6H, 0e4H, 0c6H, 0aeH, 0b8H, 0a6H, ' ', 0bcH
	DB	0b1H, 0c5H, 0c3H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BIHHOJEL@?$LA?$KB?A?$LH?5?A?$KG?$LI?q?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BJ@BIHHOJEL@?$LA?$KB?A?$LH?5?A?$KG?$LI?q?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0b0H
	DB	0a1H, 0c1H, 0b7H, ' ', 0c1H, 0a6H, 0b8H, 0f1H, 0c0H, 0bbH, ' ', 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IDKIBNJL@?$LK?N?A?$LH?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BI@IDKIBNJL@?$LK?N?A?$LH?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0baH
	DB	0ceH, 0c1H, 0b7H, 0c0H, 0ccH, 0b8H, 0a7H, 0c0H, 0bbH, ' ', 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NKOCMFMN@?$LA?$KB?$LJ?$KO?$MA?$LL?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BE@NKOCMFMN@?$LA?$KB?$LJ?$KO?$MA?$LL?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0b0H
	DB	0a1H, 0b9H, 0aeH, 0c0H, 0bbH, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H
	DB	0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BNDDJDJA@?$MA?L?$LB?b?$LM?z?$MA?$LL?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BE@BNDDJDJA@?$MA?L?$LB?b?$LM?z?$MA?$LL?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@ DB 0c0H
	DB	0ccH, 0b1H, 0e2H, 0bcH, 0faH, 0c0H, 0bbH, ' ', 0b9H, 0e8H, 0bfH
	DB	0efH, 0b1H, 0eeH, 0bfH, 0e4H, 0a3H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HHEBCLLE@?$LO?g?$FL?$CFs?$FN?G?O?$LE?Y?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0P@HHEBCLLE@?$LO?g?$FL?$CFs?$FN?G?O?$LE?Y?$FL?$CFs?$FN@ DB 0beH, 0e7H
	DB	'[%s]', 0c7H, 0cfH, 0b4H, 0d9H, '[%s]', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOMDKKC@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?G?R?$LB?n?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BB@BOMDKKC@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?G?R?$LB?n?$LP?d?$KD?$LP@ DB 0b1H
	DB	0d7H, 0c0H, 0a7H, 0c4H, 0a1H, 0bfH, 0a1H, 0c7H, 0d2H, 0b1H, 0eeH
	DB	0bfH, 0e4H, 0a3H, 0bfH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JPEIBJLC@?$LJ?N@
CONST	SEGMENT
??_C@_02JPEIBJLC@?$LJ?N@ DB 0b9H, 0ceH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HCEHBKKL@?$LE?$KJ?$LB?$LI?G?Q?E?W?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BE@HCEHBKKL@?$LE?$KJ?$LB?$LI?G?Q?E?W?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@ DB 0b4H
	DB	0a9H, 0b1H, 0b8H, 0c7H, 0d1H, 0c5H, 0d7H, ' ', 0b9H, 0e8H, 0bfH
	DB	0efH, 0b1H, 0eeH, 0bfH, 0e4H, 0a3H, 0bfH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05HKNHMKDL@?$CF8d?$KD?F@
CONST	SEGMENT
??_C@_05HKNHMKDL@?$CF8d?$KD?F@ DB '%8d', 0a3H, 0c6H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@
CONST	SEGMENT
??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@ DB '%2d/%2d ', 0c2H, 0caH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BCAPMAGD@?$LB?b?5?$CFd?3?5@
CONST	SEGMENT
??_C@_07BCAPMAGD@?$LB?b?5?$CFd?3?5@ DB 0b1H, 0e2H, ' %d: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HIPKKMKB@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?5?G?R?$LB?n?$LP?d?$KD?$LP@
CONST	SEGMENT
??_C@_0BC@HIPKKMKB@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?5?G?R?$LB?n?$LP?d?$KD?$LP@ DB 0b1H
	DB	0d7H, 0c0H, 0a7H, 0c4H, 0a1H, 0bfH, 0a1H, ' ', 0c7H, 0d2H, 0b1H
	DB	0eeH, 0bfH, 0e4H, 0a3H, 0bfH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JCNGIDNP@?$LN?C?$MA?$NL?G?O?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
CONST	SEGMENT
??_C@_0BB@JCNGIDNP@?$LN?C?$MA?$NL?G?O?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@ DB 0bdH
	DB	0c3H, 0c0H, 0dbH, 0c7H, 0cfH, 0b0H, 0daH, 0bdH, 0c0H, 0b4H, 0cfH
	DB	0b1H, 0eeH, 0a3H, 0bfH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LCAELECA@?$DP?$FL?$CFs?$FN?$DP?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0L@LCAELECA@?$DP?$FL?$CFs?$FN?$DP?$FL?$CFs?$FN@ DB '?[%s]?[%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09IAMFCDJG@?$CF2d?1?$CF2d?5?$DP@
CONST	SEGMENT
??_C@_09IAMFCDJG@?$CF2d?1?$CF2d?5?$DP@ DB '%2d/%2d ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JKOCLGKC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_0M@JKOCLGKC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@ DB '%d|%d|%d|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DPNFCMLK@?Q?Q?$DP?5?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_09DPNFCMLK@?Q?Q?$DP?5?$CF8d?$KD?S@ DB 0d1H, 0d1H, '? %8d', 0a3H, 0d3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03EPCHICDI@x?$CFd@
CONST	SEGMENT
??_C@_03EPCHICDI@x?$CFd@ DB 'x%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@ DB 0bdH, 0baH, 0c5H, 0e6H, ' '
	DB	'%8d', 0a3H, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FKIEDAAE@?$CF8d?$KD?F?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?F@
CONST	SEGMENT
??_C@_0BE@FKIEDAAE@?$CF8d?$KD?F?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?F@ DB '%8d', 0a3H
	DB	0c6H, ' x %2d = %8d', 0a3H, 0c6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PBEPDFJI@?$CF8d?$KD?S?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_0BE@PBEPDFJI@?$CF8d?$KD?S?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?S@ DB '%8d', 0a3H
	DB	0d3H, ' x %2d = %8d', 0a3H, 0d3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04HNNONBHM@?$CF2d?$DP@
CONST	SEGMENT
??_C@_04HNNONBHM@?$CF2d?$DP@ DB '%2d?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_05ENGCCMCP@?$CF8d?$KD?S@ DB '%8d', 0a3H, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JBEIEHEP@?$CF8d?$KD?F?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_0L@JBEIEHEP@?$CF8d?$KD?F?$CF8d?$KD?S@ DB '%8d', 0a3H, 0c6H, '%8d', 0a3H
	DB	0d3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DLBADLDH@?$CF2d?1?$CF2d?5?F?d?$MA?L?A?v@
CONST	SEGMENT
??_C@_0P@DLBADLDH@?$CF2d?1?$CF2d?5?F?d?$MA?L?A?v@ DB '%2d/%2d ', 0c6H, 0e4H
	DB	0c0H, 0ccH, 0c1H, 0f6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGBFDKA@?$LN?$LK?E?f?5?5?$CF8d?$KD?S@
CONST	SEGMENT
??_C@_0M@DBGBFDKA@?$LN?$LK?E?f?5?5?$CF8d?$KD?S@ DB 0bdH, 0baH, 0c5H, 0e6H
	DB	'  %8d', 0a3H, 0d3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@
CONST	SEGMENT
??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@ DB 0b8H, 0edH, 0bcH, 0baH
	DB	' %8d', 0a3H, 0c6H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_05GLBACONI@?$CFd?$HM?$CFd@ DB '%d|%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01GBGANLPD@0@
CONST	SEGMENT
??_C@_01GBGANLPD@0@ DB '0', 00H				; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType12@@YAXXZ@4PAHA DD 0fffffffeH ; `serverWindowType12'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType11@@YAXXZ@4PAHA DD 0fffffffeH ; `serverWindowType11'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType10@@YAXXZ@4PAHA DD 0fffffffeH ; `serverWindowType10'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CA@MOGFGPOH@?$CF?916s?5?$CF?93d?5?5?$CF?95d?5?$CF?95d?5?5?$CF?95d?5?5?$CFd@
CONST	SEGMENT
??_C@_0CA@MOGFGPOH@?$CF?916s?5?$CF?93d?5?5?$CF?95d?5?$CF?95d?5?5?$CF?95d?5?5?$CFd@ DB '%'
	DB	'-16s %-3d  %-5d %-5d  %-5d  %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04LFMEPEEF@?$LL?s?$LE?k@
CONST	SEGMENT
??_C@_04LFMEPEEF@?$LL?s?$LE?k@ DB 0bbH, 0f3H, 0b4H, 0ebH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BLDHOJBN@?$LI?$NO?$MA?N@
CONST	SEGMENT
??_C@_04BLDHOJBN@?$LI?$NO?$MA?N@ DB 0b8H, 0deH, 0c0H, 0ceH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03BIEHFCNJ@?q?l?$DP@
CONST	SEGMENT
??_C@_03BIEHFCNJ@?q?l?$DP@ DB 0f1H, 0ecH, '?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ONLNCGPF@?$CF?916s?5?$CF?93s?5?5?$CF?95s?5?$CF?95s?5?5?$CF?95s?5?5?$CFs@
CONST	SEGMENT
??_C@_0CA@ONLNCGPF@?$CF?916s?5?$CF?93s?5?5?$CF?95s?5?$CF?95s?5?5?$CF?95s?5?5?$CFs@ DB '%'
	DB	'-16s %-3s  %-5s %-5s  %-5s  %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ILNEEICH@?$CFd?$HM?$CFd?$HM?$CFd@
CONST	SEGMENT
??_C@_08ILNEEICH@?$CFd?$HM?$CFd?$HM?$CFd@ DB '%d|%d|%d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@
CONST	SEGMENT
??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '       ', 0bbH, 0f3H, 0b4H, 0ebH
	DB	' ', 0c6H, 0eaH, 0c0H, 0bbH, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H
	DB	0cfH, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, '     ', 0a3H, 0bdH, 0a3H
	DB	0bdH, 0a3H, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@
CONST	SEGMENT
??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '       ', 0b8H, 0deH, 0c0H, 0ceH
	DB	' ', 0c6H, 0eaH, 0c0H, 0bbH, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H
	DB	0cfH, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, '     ', 0a3H, 0bdH, 0a3H
	DB	0bdH, 0a3H, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA
_DATA	SEGMENT
?selectID@?1??serverWindowType9@@YAXXZ@4PAHA DD 0ffffffffH ; `serverWindowType9'::`2'::selectID
	DD	0ffffffffH
	DD	0ffffffffH
_DATA	ENDS
;	COMDAT ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType9@@YAXXZ@4PAHA DD 0fffffffeH	; `serverWindowType9'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@
CONST	SEGMENT
??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '    ', 0c6H, 0eaH, ' ', 0b6H, 0c7H
	DB	0b4H, 0c2H, ' ', 0c6H, 0c4H, 0c6H, 0bcH, 0bfH, 0f8H, 0c0H, 0bbH
	DB	' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0cfH, 0bdH, 0caH, 0bdH, 0c3H
	DB	0bfH, 0c0H, '    ', 0a3H, 0bdH, 0a3H, 0bdH, 0a3H, 0bdH, 00H ; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType4@@YAXXZ@4PAHA DD 0fffffffeH	; `serverWindowType4'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@
CONST	SEGMENT
??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '         ', 0c6H, 0c4H, 0c6H, 0bcH
	DB	0bfH, 0f8H, 0c0H, 0bbH, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0cfH
	DB	0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, '       ', 0a3H, 0bdH, 0a3H
	DB	0bdH, 0a3H, 0bdH, 00H			; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType3@@YAXXZ@4PAHA DD 0fffffffeH	; `serverWindowType3'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CF@HCGLMHEH@?$CF?916s?5?5?$CF?93d?5?5?5?$CF?95d?5?5?$CF?95d?5?5?5?$CF?95d@
CONST	SEGMENT
??_C@_0CF@HCGLMHEH@?$CF?916s?5?5?$CF?93d?5?5?5?$CF?95d?5?5?$CF?95d?5?5?5?$CF?95d@ DB '%'
	DB	'-16s  %-3d   %-5d  %-5d   %-5d   %d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@FLMNJHFI@?$CF?916s?5?5?$CF?93s?5?5?5?$CF?95s?5?5?$CF?95s?5?5?5?$CF?95s@
CONST	SEGMENT
??_C@_0CF@FLMNJHFI@?$CF?916s?5?5?$CF?93s?5?5?5?$CF?95s?5?5?$CF?95s?5?5?5?$CF?95s@ DB '%'
	DB	'-16s  %-3s   %-5s  %-5s   %-5s   %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KDDDLIGD@?F?d?F?$KO@
CONST	SEGMENT
??_C@_04KDDDLIGD@?F?d?F?$KO@ DB 0c6H, 0e4H, 0c6H, 0aeH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02FLIMDJ@Lv@
CONST	SEGMENT
??_C@_02FLIMDJ@Lv@ DB 'Lv', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02MEIMKHMB@HP@
CONST	SEGMENT
??_C@_02MEIMKHMB@HP@ DB 'HP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BJIFLDEI@?$LA?x@
CONST	SEGMENT
??_C@_02BJIFLDEI@?$LA?x@ DB 0b0H, 0f8H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCBFLHBI@?$LJ?f@
CONST	SEGMENT
??_C@_02MCBFLHBI@?$LJ?f@ DB 0b9H, 0e6H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02BAJPEKCM@?$LM?x@
CONST	SEGMENT
??_C@_02BAJPEKCM@?$LM?x@ DB 0bcH, 0f8H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@
CONST	SEGMENT
??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@ DB 0a3H
	DB	0bdH, 0a3H, 0bdH, 0a3H, 0bdH, '         ', 0c6H, 0eaH, 0c0H, 0bbH
	DB	' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0cfH, 0bdH, 0caH, 0bdH, 0c3H
	DB	0bfH, 0c0H, '         ', 0a3H, 0bdH, 0a3H, 0bdH, 0a3H, 0bdH, 00H ; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType2@@YAXXZ@4PAHA DD 0fffffffeH	; `serverWindowType2'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??serverWindowType1@@YAXXZ@4PAHA DD 0fffffffeH	; `serverWindowType1'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@
CONST	SEGMENT
??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@ DB 0b4H, 0d9H, 0c0H, 0bdH
	DB	' ', 0c6H, 0e4H, 0c0H, 0ccH, 0c1H, 0f6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@
CONST	SEGMENT
??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@ DB 0c0H, 0ccH, 0c0H, 0fcH
	DB	' ', 0c6H, 0e4H, 0c0H, 0ccH, 0c1H, 0f6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
CONST	SEGMENT
??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@ DB 0c3H, 0ebH, '  ', 0bcH, 0d2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
CONST	SEGMENT
??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@ DB 0c8H, 0aeH, '  ', 0c0H, 0ceH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JHILMIHF@CANCEL@
CONST	SEGMENT
??_C@_06JHILMIHF@CANCEL@ DB 'CANCEL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
CONST	SEGMENT
??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@ DB ' ', 0a3H, 0cfH, 0a3H, 0cbH, ' ', 00H ; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA
_DATA	SEGMENT
?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA DD 0fffffffeH ; `serverWindowType0'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_07IBAIKNAL@?$FLstyle?5@
CONST	SEGMENT
??_C@_07IBAIKNAL@?$FLstyle?5@ DB '[style ', 00H		; `string'
CONST	ENDS
;	COMDAT ?msg@?1??charLogout@@YAHXZ@4PADA
_DATA	SEGMENT
?msg@?1??charLogout@@YAHXZ@4PADA DB 0c3H, 0bcH, 0c5H, 0a9H, ' ', 0beH, 0c6H
	DB	0bfH, 0f4H, 0c1H, 0dfH, 00H			; `charLogout'::`2'::msg
_DATA	ENDS
;	COMDAT ??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@
CONST	SEGMENT
??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@ DB 0c3H
	DB	0bcH, 0c5H, 0a9H, ' ', 0beH, 0c6H, 0bfH, 0f4H, ' ', 0c3H, 0b3H
	DB	0b8H, 0aeH, ' ', 0bdH, 0c7H, 0c6H, 0d0H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KHEOLEJA@?T?t?u?s?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@
CONST	SEGMENT
??_C@_0BA@KHEOLEJA@?T?t?u?s?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@ DB 0d4H, 0f4H
	DB	0f5H, 0f3H, '?', 0d7H, 0e2H, '??', 0ecH, 0abH, 0d3H, 0f0H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ?msg@?1??charLogin@@YAHXZ@4PADA
_DATA	SEGMENT
?msg@?1??charLogin@@YAHXZ@4PADA DB 0bcH, 0adH, 0b8H, 0edH, '/', 0c3H, 0bcH
	DB	0c5H, 0a9H, 0c0H, 0ceH, '/', 0c1H, 0f8H, 0c0H, 0d4H, ' ', 0c1H
	DB	0dfH, 00H					; `charLogin'::`2'::msg
_DATA	ENDS
;	COMDAT ??_C@_0BH@OOIMHFEI@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI?$CFd?$CJ?$KB?$KD@
CONST	SEGMENT
??_C@_0BH@OOIMHFEI@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI?$CFd?$CJ?$KB?$KD@ DB 0c3H
	DB	0bcH, 0c5H, 0a9H, 0c0H, 0ceH, ' ', 0c3H, 0b3H, 0b8H, 0aeH, ' ', 0bdH
	DB	0c7H, 0c6H, 0d0H, '(%d)', 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LBDONGAD@?$DP?l?$KL?n?$KE?c?f?M?$KD?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@LBDONGAD@?$DP?l?$KL?n?$KE?c?f?M?$KD?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0e3H, 0e6H, 0cdH, 0a3H, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PEBLFAAD@?$DP?l?$KL?n?$KE?t?$LI?$DP?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BB@PEBLFAAD@?$DP?l?$KL?n?$KE?t?$LI?$DP?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0f4H, 0b8H, '?', 0e0H, 0f8H, 0cdH, 0a7H
	DB	0d4H, 0f4H, 0ecH, 0fdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, '?', 0d6H, 0d8H, 0caH, 0abH, 0efH, 0d4H
	DB	0e0H, 0f8H, 0cdH, 0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ODOFDCOF@?$DP?l?$KL?n?$KE?$OA?x?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@ODOFDCOF@?$DP?l?$KL?n?$KE?$OA?x?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0e0H, 0f8H, '??', 0e0H, 0f8H, 0cdH, 0a7H
	DB	0d4H, 0f4H, 0ecH, 0fdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NPHDINBL@?$DP?l?$KL?n?$KE?z?E?y?$PL?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@NPHDINBL@?$DP?l?$KL?n?$KE?z?E?y?$PL?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0faH, 0c5H, 0f9H, 0fbH, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MMGOFGBI@?$DP?l?$KL?n?$KE?$DP?y?A?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BB@MMGOFGBI@?$DP?l?$KL?n?$KE?$DP?y?A?$OA?x?M?$KH?T?t?l?$PN@ DB '?', 0ecH
	DB	0abH, 0eeH, 0a4H, '?', 0f9H, 0c1H, 0e0H, 0f8H, 0cdH, 0a7H, 0d4H
	DB	0f4H, 0ecH, 0fdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OCMAIDLN@?$DP?l?$KL?n?$KE?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BA@OCMAIDLN@?$DP?l?$KL?n?$KE?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@ DB '?', 0ecH
	DB	0abH, 0eeH, 0a4H, '??', 0e0H, 0f8H, 0cdH, 0a7H, 0d4H, 0f4H, 0ecH
	DB	0fdH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EOGDPEGN@?$DP?l?$KL?n?$KE?m?$LJ?Z?$LA?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@EOGDPEGN@?$DP?l?$KL?n?$KE?m?$LJ?Z?$LA?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0edH, 0b9H, 0daH, 0b0H, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IADOEDAG@?$DP?l?$KL?n?$KE?$NN?A?T?$OA?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@IADOEDAG@?$DP?l?$KL?n?$KE?$NN?A?T?$OA?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0ddH, 0c1H, 0d4H, 0e0H, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLEFHHCI@?$DP?l?$KL?n?$KE?t?$LI?c?j?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BC@BLEFHHCI@?$DP?l?$KL?n?$KE?t?$LI?c?j?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0f4H, 0b8H, 0e3H, 0eaH, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DDFMPBHB@?$DP?l?$KL?n?$KE?w?$LM?$DP?$OA?x?M?$KH?T?t?l?$PN@
CONST	SEGMENT
??_C@_0BB@DDFMPBHB@?$DP?l?$KL?n?$KE?w?$LM?$DP?$OA?x?M?$KH?T?t?l?$PN@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0f7H, 0bcH, '?', 0e0H, 0f8H, 0cdH, 0a7H
	DB	0d4H, 0f4H, 0ecH, 0fdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FNJGPFEB@?$DP?l?$KL?n?$KE?P?l?v?b?$OA?x?M?$KH?T?t?l?$PN?$KB?$KD@
CONST	SEGMENT
??_C@_0BE@FNJGPFEB@?$DP?l?$KL?n?$KE?P?l?v?b?$OA?x?M?$KH?T?t?l?$PN?$KB?$KD@ DB '?'
	DB	0ecH, 0abH, 0eeH, 0a4H, 0d0H, 0ecH, 0f6H, 0e2H, 0e0H, 0f8H, 0cdH
	DB	0a7H, 0d4H, 0f4H, 0ecH, 0fdH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PHBDBDAB@?$MA?N?E?M?$LD?$NN?5?$LP?$KM?$LA?a?5?$LP?$MA?$LH?y@
CONST	SEGMENT
??_C@_0BB@PHBDBDAB@?$MA?N?E?M?$LD?$NN?5?$LP?$KM?$LA?a?5?$LP?$MA?$LH?y@ DB 0c0H
	DB	0ceH, 0c5H, 0cdH, 0b3H, 0ddH, ' ', 0bfH, 0acH, 0b0H, 0e1H, ' ', 0bfH
	DB	0c0H, 0b7H, 0f9H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@
CONST	SEGMENT
??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@ DB 'W'
	DB	'GS', 0efH, 0c3H, '?', 0dcH, 0f4H, 0f0H, 0ebH, ', ???WGS', 0efH
	DB	0c3H, '??', 0eeH, 0a2H, 0f2H, 0b8H, '??', 0eaH, 0fdH, '??', 0f1H
	DB	0bcH, '?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@
CONST	SEGMENT
??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@ DB 'W'
	DB	'GS', 0efH, 0c3H, '??', 0ecH, 0abH, 0e9H, 0c4H, 0e8H, 0c7H, 0efH
	DB	0c3H, '?, ???', 0efH, 0c3H, '??', 0eeH, 0a2H, 0f2H, 0b8H, '??', 0eaH
	DB	0fdH, '??', 0e8H, 0c7H, 0e0H, 0f7H, 0f1H, 0bcH, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@
CONST	SEGMENT
??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@ DB 0c0H
	DB	0ccH, ' ', 0c1H, 0a6H, 0c7H, 0b0H, 0c0H, 0baH, ' ', 0beH, 0c6H
	DB	0c1H, 0f7H, ' ', 0b5H, 0eeH, 0b7H, 0cfH, 0b5H, 0c7H, 0c1H, 0f6H
	DB	' ', 0beH, 0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H
	DB	'.  ', 0bbH, 0e7H, 0c0H, 0ccH, 0c6H, 0aeH, 0bfH, 0a1H, 0bcH, 0adH
	DB	' ', 0b8H, 0d5H, 0c0H, 0faH, ' ', 0b5H, 0eeH, 0b7H, 0cfH, 0c7H
	DB	0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@
CONST	SEGMENT
??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@ DB 0b0H
	DB	0d4H, 0c0H, 0d3H, 0c0H, 0bbH, ' ', 0bdH, 0c3H, 0c0H, 0dbH, 0c7H
	DB	0cfH, 0b1H, 0e2H, ' ', 0c0H, 0fcH, 0bfH, 0a1H, ' Wayi', 0b0H, 0d4H
	DB	0c0H, 0d3H, 0bfH, 0a1H, ' ', 0c1H, 0a2H, 0bcH, 0d3H, 0c7H, 0cfH
	DB	0bfH, 0a9H, ' ', 0b0H, 0d4H, 0c0H, 0d3H, ' ', 0b0H, 0fcH, 0b8H
	DB	0aeH, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0c7H, ' ', 0baH, 0f1H
	DB	0b9H, 0d0H, 0b9H, 0f8H, 0c8H, 0a3H, 0b8H, 0a6H, ' ', 0baH, 0afH
	DB	0b0H, 0e6H, 0c7H, 0cfH, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@
CONST	SEGMENT
??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@ DB 0c0H
	DB	0ccH, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0baH, ' ', 0c0H, 0ccH
	DB	0b9H, 0ccH, ' ', 0bbH, 0f5H, 0b7H, 0ceH, 0bfH, 0eeH, ' ', 0c8H
	DB	0b8H, 0bfH, 0f8H, 0c0H, 0b8H, 0b7H, 0ceH, ' ', 0c0H, 0fcH, 0c8H
	DB	0afH, 0b5H, 0c7H, 0beH, 0faH, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@
CONST	SEGMENT
??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@ DB 0c8H
	DB	0a8H, 0c6H, 0e4H, 0c0H, 0ccH, 0c1H, 0f6H, 0bfH, 0a1H, ' ', 0beH
	DB	0c6H, 0c1H, 0f7H, ' ', 0b7H, 0ceH, 0b1H, 0d7H, 0c0H, 0ceH, ' ', 0b5H
	DB	0c7H, 0c1H, 0f6H, ' ', 0beH, 0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@
CONST	SEGMENT
??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@ DB 0b7H
	DB	0ceH, 0b1H, 0d7H, 0c0H, 0ceH, ' ', 0bdH, 0c3H, 0b0H, 0a3H, 0c0H
	DB	0ccH, ' ', 0c3H, 0caH, 0b0H, 0faH, 0b5H, 0c7H, 0beH, 0faH, 0bdH
	DB	0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '. ', 0b4H, 0d9H, 0bdH, 0c3H, ' '
	DB	0b7H, 0ceH, 0b1H, 0d7H, 0c0H, 0ceH, ' ', 0c7H, 0cfH, 0bdH, 0caH
	DB	0bdH, 0c3H, 0bfH, 0c0H, '.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@
CONST	SEGMENT
??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@ DB 0b0H
	DB	0d4H, 0c0H, 0d3H, 0c0H, 0bbH, ' ', 0bdH, 0c3H, 0c0H, 0dbH, 0c7H
	DB	0cfH, 0b1H, 0e2H, ' ', 0c0H, 0fcH, 0bfH, 0a1H, ' ', 0b0H, 0b3H
	DB	0c0H, 0ceH, ' ', 0c1H, 0a4H, 0baH, 0b8H, 0b8H, 0a6H, ' ', 0b4H
	DB	0d9H, 0bdH, 0c3H, ' ', 0c8H, 0aeH, 0c0H, 0ceH, 0c7H, 0cfH, 0bdH
	DB	0caH, 0bdH, 0c3H, 0bfH, 0c0H, ']', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@
CONST	SEGMENT
??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@ DB 0c0H
	DB	0ccH, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0baH, ' ', 0c1H, 0a4H
	DB	0c1H, 0f6H, 0b5H, 0c7H, 0beH, 0faH, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H
	DB	0d9H, ', ', 0b9H, 0aeH, 0c0H, 0c7H, 0c7H, 0d8H, 0c1H, 0d6H, 0bcH
	DB	0bcH, 0bfH, 0e4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@
CONST	SEGMENT
??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@ DB 0beH
	DB	0c6H, 0c0H, 0ccH, 0b5H, 0f0H, 0bfH, 0cdH, ' ', 0baH, 0f1H, 0b9H
	DB	0d0H, 0b9H, 0f8H, 0c8H, 0a3H, 0b4H, 0c2H, ' ', 0bfH, 0b5H, 0b9H
	DB	0aeH, 0b0H, 0faH, ' ', 0bcH, 0fdH, 0c0H, 0daH, 0b8H, 0b8H, ' ', 0bbH
	DB	0e7H, 0bfH, 0ebH, 0c7H, 0d2H, ' ', 0bcH, 0f6H, ' ', 0c0H, 0d6H
	DB	0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@
CONST	SEGMENT
??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@ DB 0c8H
	DB	0b8H, 0bfH, 0f8H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0ccH, ' ', 0c8H
	DB	0b0H, 0bcH, 0baH, 0c8H, 0adH, ' ', 0b5H, 0c7H, 0c1H, 0f6H, ' ', 0beH
	DB	0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@
CONST	SEGMENT
??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@ DB 0c0H
	DB	0dfH, 0b8H, 0f8H, 0b5H, 0c8H, ' ', 0bdH, 0c3H, 0c0H, 0dbH, ' ', 0bfH
	DB	0a1H, 0b7H, 0afH, 0c4H, 0daH, 0b5H, 0e5H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@ DB 0c8H
	DB	0b8H, 0bfH, 0f8H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0ccH, ' ', 0c8H
	DB	0b0H, 0bcH, 0baH, 0c8H, 0adH, ' ', 0b5H, 0c7H, 0beH, 0faH, 0bdH
	DB	0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@
CONST	SEGMENT
??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@ DB 0b0H
	DB	0b0H, 0c0H, 0baH, ' ', 0c0H, 0ccH, 0b8H, 0a7H, 0c0H, 0c7H, ' ', 0b0H
	DB	0e8H, 0c1H, 0a4H, 0c0H, 0ccH, ' ', 0c0H, 0ccH, 0b9H, 0ccH, ' ', 0c1H
	DB	0b8H, 0c0H, 0e7H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@
CONST	SEGMENT
??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@ DB 0b7H
	DB	0ceH, 0b1H, 0d7H, 0c0H, 0ceH, 0c7H, 0cfH, 0c1H, 0f6H, ' ', 0beH
	DB	0caH, 0beH, 0d2H, 0b0H, 0c5H, 0b3H, 0aaH, ' ', 0b7H, 0ceH, 0b1H
	DB	0d7H, 0c0H, 0ceH, ' ', 0bfH, 0c0H, 0b7H, 0f9H, 0c0H, 0d3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@ DB 0bbH
	DB	0e7H, 0bfH, 0ebH, 0c0H, 0daH, 0b0H, 0a1H, ' ', 0c0H, 0ccH, 0b9H
	DB	0ccH, ' ', 0b0H, 0d4H, 0c0H, 0d3H, 0c1H, 0dfH, ' ', 0c0H, 0d4H
	DB	0b4H, 0cfH, 0b4H, 0d9H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@ DB 0b5H
	DB	0bfH, 0c0H, 0cfH, 0c7H, 0d1H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H
	DB	0ccH, ' ', 0bfH, 0c2H, 0b6H, 0f3H, 0c0H, 0ceH, ' ', 0bbH, 0f3H
	DB	0c5H, 0c2H, 0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@
CONST	SEGMENT
??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@ DB 0b5H
	DB	0bfH, 0c0H, 0cfH, 0c7H, 0d1H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c0H
	DB	0daH, 0b4H, 0c2H, ' ', 0b9H, 0ddH, 0baH, 0b9H, 0c7H, 0cfH, 0bfH
	DB	0a9H, ' ', 0b7H, 0ceH, 0b1H, 0d7H, 0c0H, 0ceH, ' ', 0c7H, 0d2H
	DB	' ', 0bcH, 0f6H, ' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0HC@GFFIGLHA@?$MA?$NP?$LI?x?$LF?H?5?$LL?g?$LP?k?$MA?Z?5?$MA?L?$LI?$KH?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H@
CONST	SEGMENT
??_C@_0HC@GFFIGLHA@?$MA?$NP?$LI?x?$LF?H?5?$LL?g?$LP?k?$MA?Z?5?$MA?L?$LI?$KH?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H@ DB 0c0H
	DB	0dfH, 0b8H, 0f8H, 0b5H, 0c8H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c0H
	DB	0daH, ' ', 0c0H, 0ccH, 0b8H, 0a7H, ' ', 0b6H, 0c7H, 0b4H, 0c2H
	DB	' ', 0baH, 0f1H, 0b9H, 0d0H, 0b9H, 0f8H, 0c8H, 0a3H, ', ', 0beH
	DB	0c6H, 0c1H, 0f7H, ' ', 0c8H, 0b8H, 0bfH, 0f8H, 0bfH, 0a1H, ' ', 0b0H
	DB	0a1H, 0c0H, 0d4H, 0c7H, 0cfH, 0c1H, 0f6H, ' ', 0beH, 0caH, 0c0H
	DB	0baH, ' ', 0b0H, 0e6H, 0bfH, 0ecH, ' Wayi', 0b0H, 0d4H, 0c0H, 0d3H
	DB	' ', 0bbH, 0e7H, 0c0H, 0ccH, 0c6H, 0aeH, 0bfH, 0a1H, 0bcH, 0adH
	DB	' ', 0b9H, 0abH, 0b7H, 0e1H, 0b7H, 0ceH, ' ', 0c8H, 0b8H, 0bfH
	DB	0f8H, 0bfH, 0a1H, ' ', 0b0H, 0a1H, 0c0H, 0d4H, 0c7H, 0cfH, 0bdH
	DB	0caH, 0bdH, 0c3H, 0bfH, 0c0H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@
CONST	SEGMENT
??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@ DB 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0d1H, ' ', 0c0H, 0daH, 0b7H, 0e1H, ' ', 0c7H
	DB	0fcH, 0bdH, 0c4H, 0c0H, 0ccH, ' ', 0bfH, 0c3H, 0b9H, 0d9H, 0b8H
	DB	0a3H, 0c1H, 0f6H, ' ', 0beH, 0caH, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H
	DB	0d9H, '.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@
CONST	SEGMENT
??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@ DB 0bcH
	DB	0adH, 0b9H, 0f6H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c0H, 0daH, 0b0H
	DB	0a1H, ' ', 0b8H, 0b9H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '. '
	DB	0c0H, 0e1H, 0bdH, 0c3H, ' ', 0c8H, 0c4H, 0bfH, 0a1H, ' ', 0b4H
	DB	0d9H, 0bdH, 0c3H, ' ', 0bdH, 0c3H, 0b5H, 0b5H, 0c7H, 0cfH, 0bdH
	DB	0caH, 0bdH, 0c3H, 0bfH, 0c0H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@
CONST	SEGMENT
??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@ DB 0b5H
	DB	0a5H, 0c0H, 0ccH, 0c5H, 0cdH, 0baH, 0a3H, 0c0H, 0ccH, 0bdH, 0baH
	DB	0bfH, 0a1H, 0bcH, 0adH, ' ', 0bfH, 0c3H, 0b9H, 0d9H, 0b8H, 0a5H
	DB	' ', 0c1H, 0a4H, 0baH, 0b8H, 0b8H, 0a6H, ' ', 0b0H, 0a1H, 0c1H
	DB	0aeH, 0bfH, 0c3H, 0bcH, 0f6H, ' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@
CONST	SEGMENT
??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@ DB 0b5H
	DB	0a5H, 0c0H, 0ccH, 0c5H, 0cdH, ' ', 0bcH, 0adH, 0b9H, 0f6H, 0bfH
	DB	0a1H, ' ', 0c1H, 0a2H, 0bcH, 0d3H, ' ', 0c7H, 0d2H, ' ', 0bcH, 0f6H
	DB	' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@
CONST	SEGMENT
??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@ DB 0c3H
	DB	0bcH, 0c5H, 0a9H, 0c0H, 0ceH, ' ', 0c3H, 0b3H, 0b8H, 0aeH, ' ', 0bdH
	DB	0c7H, 0c6H, 0d0H, '(1001)', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFEMHLAM@?T?t?l?$PN?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@
CONST	SEGMENT
??_C@_0BA@JFEMHLAM@?T?t?l?$PN?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@ DB 0d4H, 0f4H
	DB	0ecH, 0fdH, '?', 0d7H, 0e2H, '??', 0ecH, 0abH, 0d3H, 0f0H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FPKFEPPA@?D?$LD?$LI?$KP?E?M?5?A?$KG?$MA?$NL?5?A?$NP?4?4?4@
CONST	SEGMENT
??_C@_0BC@FPKFEPPA@?D?$LD?$LI?$KP?E?M?5?A?$KG?$MA?$NL?5?A?$NP?4?4?4@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, ' ', 0c1H, 0a6H, 0c0H, 0dbH, ' ', 0c1H
	DB	0dfH, '...', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JKLCAMPH@?C?b?$LN?E?A?v?$LI?$KG?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP?$MA?$KB?$KD@
CONST	SEGMENT
??_C@_0BI@JKLCAMPH@?C?b?$LN?E?A?v?$LI?$KG?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP?$MA?$KB?$KD@ DB 0c3H
	DB	0e2H, 0bdH, 0c5H, 0c1H, 0f6H, 0b8H, 0a6H, ' ', 0bcH, 0b1H, 0c5H
	DB	0c3H, 0c7H, 0cfH, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MIIMPKCJ@?$LM?$LG?5?$MA?$KH?$LP?$KB?5?A?v?$LO?n?A?$LD?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BH@MIIMPKCJ@?$LM?$LG?5?$MA?$KH?$LP?$KB?5?A?v?$LO?n?A?$LD?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ DB 0bcH
	DB	0b6H, ' ', 0c0H, 0a7H, 0bfH, 0a1H, ' ', 0c1H, 0f6H, 0beH, 0eeH
	DB	0c1H, 0b3H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHNBHDIA@?$LI?$LG?$MA?$LL?$MA?$LK?5?$MA?$NL?$MA?$LK?5?$LP?$KJ?$LH?$KP@
CONST	SEGMENT
??_C@_0BB@BHNBHDIA@?$LI?$LG?$MA?$LL?$MA?$LK?5?$MA?$NL?$MA?$LK?5?$LP?$KJ?$LH?$KP@ DB 0b8H
	DB	0b6H, 0c0H, 0bbH, 0c0H, 0baH, ' ', 0c0H, 0dbH, 0c0H, 0baH, ' ', 0bfH
	DB	0a9H, 0b7H, 0afH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@JHAOGAJO@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0CC@JHAOGAJO@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@ DB 0b0H
	DB	0a1H, 0bfH, 0ecH, 0b8H, 0b0H, 0c0H, 0c7H, ' ', 0bcH, 0adH, 0c2H
	DB	0caH, 0bfH, 0a1H, ' ', 0c0H, 0a7H, 0c4H, 0a1H, 0c7H, 0d8H, ' ', 0c0H
	DB	0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PENPANFK@?$LN?L?$LB?W?$LH?$KP?$LP?n?5?$LD?l?$LL?v?5?$LI?$LG?$MA?$LL?$KB?$KD@
CONST	SEGMENT
??_C@_0BF@PENPANFK@?$LN?L?$LB?W?$LH?$KP?$LP?n?5?$LD?l?$LL?v?5?$LI?$LG?$MA?$LL?$KB?$KD@ DB 0bdH
	DB	0ccH, 0b1H, 0d7H, 0b7H, 0afH, 0bfH, 0eeH, ' ', 0b3H, 0ecH, 0bbH
	DB	0f6H, ' ', 0b8H, 0b6H, 0c0H, 0bbH, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DLENCNEM@?$LN?$KD?$MA?$LI?$LH?N?5?$LF?Q?$LH?$KP?5?$LN?W?$LP?$KJ?$MA?V?$LE?B@
CONST	SEGMENT
??_C@_0BF@DLENCNEM@?$LN?$KD?$MA?$LI?$LH?N?5?$LF?Q?$LH?$KP?5?$LN?W?$LP?$KJ?$MA?V?$LE?B@ DB 0bdH
	DB	0a3H, 0c0H, 0b8H, 0b7H, 0ceH, ' ', 0b5H, 0d1H, 0b7H, 0afH, ' ', 0bdH
	DB	0d7H, 0bfH, 0a9H, 0c0H, 0d6H, 0b4H, 0c2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@DMMCBILE@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0CC@DMMCBILE@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@ DB 0b0H
	DB	0a1H, 0bfH, 0ecH, 0b8H, 0b0H, 0c0H, 0c7H, ' ', 0b5H, 0bfH, 0c2H
	DB	0caH, 0bfH, 0a1H, ' ', 0c0H, 0a7H, 0c4H, 0a1H, 0c7H, 0d8H, ' ', 0c0H
	DB	0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a3H, 0acH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GOPLDOIL@?$LO?F?$LI?$KH?$LE?Y?$LP?n?5?G?X?$LK?$KP?$MA?$LL?5?$LJ?Y?$LG?s?$LK?$LI?$LA?m?5?$MA?V?$LE?B?5?$LI@
CONST	SEGMENT
??_C@_0CL@GOPLDOIL@?$LO?F?$LI?$KH?$LE?Y?$LP?n?5?G?X?$LK?$KP?$MA?$LL?5?$LJ?Y?$LG?s?$LK?$LI?$LA?m?5?$MA?V?$LE?B?5?$LI@ DB 0beH
	DB	0c6H, 0b8H, 0a7H, 0b4H, 0d9H, 0bfH, 0eeH, ' ', 0c7H, 0d8H, 0baH
	DB	0afH, 0c0H, 0bbH, ' ', 0b9H, 0d9H, 0b6H, 0f3H, 0baH, 0b8H, 0b0H
	DB	0edH, ' ', 0c0H, 0d6H, 0b4H, 0c2H, ' ', 0b8H, 0b6H, 0c0H, 0bbH
	DB	0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FJDMGMIM@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@
CONST	SEGMENT
??_C@_0CD@FJDMGMIM@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@ DB 0bbH
	DB	0e7H, 0c0H, 0ccH, 0b3H, 0caH, 0bdH, 0baH, 0c0H, 0c7H, ' ', 0bcH
	DB	0adH, 0c2H, 0caH, 0bfH, 0a1H, ' ', 0c0H, 0a7H, 0c4H, 0a1H, 0c7H
	DB	0d8H, ' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@BMBAEGNC@?$LG?G?G?Q?5?$LA?$KB?$MA?e?5?A?z?$LM?$KN?$MA?V?$LE?B?5?$LI?$LG?$MA?$LL?$MA?L?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BO@BMBAEGNC@?$LG?G?G?Q?5?$LA?$KB?$MA?e?5?A?z?$LM?$KN?$MA?V?$LE?B?5?$LI?$LG?$MA?$LL?$MA?L?$LE?Y?$KB?$KD@ DB 0b6H
	DB	0c7H, 0c7H, 0d1H, ' ', 0b0H, 0a1H, 0c0H, 0e5H, ' ', 0c1H, 0faH
	DB	0bcH, 0adH, 0c0H, 0d6H, 0b4H, 0c2H, ' ', 0b8H, 0b6H, 0c0H, 0bbH
	DB	0c0H, 0ccH, 0b4H, 0d9H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IHPDPOHC@4?$LA?$LD?5?$LI?$LG?$MA?$LL?A?$NP?5?$LA?$KB?$MA?e?5?E?$KO?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BI@IHPDPOHC@4?$LA?$LD?5?$LI?$LG?$MA?$LL?A?$NP?5?$LA?$KB?$MA?e?5?E?$KO?$LE?O?$LE?Y?4@ DB '4'
	DB	0b0H, 0b3H, ' ', 0b8H, 0b6H, 0c0H, 0bbH, 0c1H, 0dfH, ' ', 0b0H
	DB	0a1H, 0c0H, 0e5H, ' ', 0c5H, 0aeH, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@OGPAGALA@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@
CONST	SEGMENT
??_C@_0CD@OGPAGALA@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@ DB 0bbH
	DB	0e7H, 0c0H, 0ccH, 0b3H, 0caH, 0bdH, 0baH, 0c0H, 0c7H, ' ', 0b5H
	DB	0bfH, 0c2H, 0caH, 0bfH, 0a1H, ' ', 0c0H, 0a7H, 0c4H, 0a1H, 0c7H
	DB	0d8H, ' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FAJDIKKM@?D?$KL?$LH?g?E?$LI?$LD?$KK?5?$LI?$LG?$MA?$LL@
CONST	SEGMENT
??_C@_0O@FAJDIKKM@?D?$KL?$LH?g?E?$LI?$LD?$KK?5?$LI?$LG?$MA?$LL@ DB 0c4H, 0abH
	DB	0b7H, 0e7H, 0c5H, 0b8H, 0b3H, 0aaH, ' ', 0b8H, 0b6H, 0c0H, 0bbH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_09GFHIJBMK@?$MA?p?$MA?p?5?$LI?$LG?$MA?$LL@
CONST	SEGMENT
??_C@_09GFHIJBMK@?$MA?p?$MA?p?5?$LI?$LG?$MA?$LL@ DB 0c0H, 0f0H, 0c0H, 0f0H
	DB	' ', 0b8H, 0b6H, 0c0H, 0bbH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OLOFEGAL@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?5?$LI?$LG?$MA?$LL@
CONST	SEGMENT
??_C@_0O@OLOFEGAL@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?5?$LI?$LG?$MA?$LL@ DB 0b8H
	DB	0b6H, 0b8H, 0aeH, 0b3H, 0caH, 0bdH, 0baH, ' ', 0b8H, 0b6H, 0c0H
	DB	0bbH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DLFCBPCC@?$LM?$KE?$LB?b?$LI?$KD?5?$LI?$LG?$MA?$LL@
CONST	SEGMENT
??_C@_0M@DLFCBPCC@?$LM?$KE?$LB?b?$LI?$KD?5?$LI?$LG?$MA?$LL@ DB 0bcH, 0a4H
	DB	0b1H, 0e2H, 0b8H, 0a3H, ' ', 0b8H, 0b6H, 0c0H, 0bbH, 00H ; `string'
CONST	ENDS
;	COMDAT ?btnId@?1??selHomeTown@@YAHXZ@4PAHA
_DATA	SEGMENT
?btnId@?1??selHomeTown@@YAHXZ@4PAHA DD 0fffffffeH	; `selHomeTown'::`2'::btnId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0CF@JDHEEBNC@?$MA?L?$LI?$KH?0?5?$LO?s?$LB?$LM?0?5?$LB?b?$LK?$LL?5?$LL?s?E?B?5?$LJ?W?5?$LM?S?$LM?$LK?5?$LM@
CONST	SEGMENT
??_C@_0CF@JDHEEBNC@?$MA?L?$LI?$KH?0?5?$LO?s?$LB?$LM?0?5?$LB?b?$LK?$LL?5?$LL?s?E?B?5?$LJ?W?5?$LM?S?$LM?$LK?5?$LM@ DB 0c0H
	DB	0ccH, 0b8H, 0a7H, ', ', 0beH, 0f3H, 0b1H, 0bcH, ', ', 0b1H, 0e2H
	DB	0baH, 0bbH, ' ', 0bbH, 0f3H, 0c5H, 0c2H, ' ', 0b9H, 0d7H, ' ', 0bcH
	DB	0d3H, 0bcH, 0baH, ' ', 0bcH, 0b3H, 0c1H, 0a4H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LMMJJHJP@?$MA?T?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@
CONST	SEGMENT
??_C@_0P@LMMJJHJP@?$MA?T?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ DB 0c0H, 0d4H
	DB	' ', 0b8H, 0f0H, 0beH, 0e7H, ' ', 0baH, 0afH, 0b0H, 0e6H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PNCOKHHM@?D?Z?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@
CONST	SEGMENT
??_C@_0P@PNCOKHHM@?D?Z?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ DB 0c4H, 0daH
	DB	' ', 0b8H, 0f0H, 0beH, 0e7H, ' ', 0baH, 0afH, 0b0H, 0e6H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IMBCCPOD@?$LE?$KL?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@
CONST	SEGMENT
??_C@_0P@IMBCCPOD@?$LE?$KL?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@ DB 0b4H
	DB	0abH, ' ', 0b8H, 0f0H, 0beH, 0e7H, ' ', 0baH, 0afH, 0b0H, 0e6H
	DB	0a1H, 0a3H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@HDKFGPCM@?G?$LD?$LM?S?$LM?$LK?$KB?$KD?A?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@
CONST	SEGMENT
??_C@_0DC@HDKFGPCM@?G?$LD?$LM?S?$LM?$LK?$KB?$KD?A?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ DB 0c7H
	DB	0b3H, 0bcH, 0d3H, 0bcH, 0baH, 0a1H, 0a3H, 0c1H, 0f6H, 0bcH, 0d3H
	DB	0bcH, 0baH, 0c0H, 0c7H, ' ', 0bbH, 0f3H, 0b4H, 0ebH, 0bfH, 0cdH
	DB	' ', 0bdH, 0ceH, 0bfH, 0efH, ' ', 0b6H, 0a7H, ' ', 0b4H, 0f5H, 0bfH
	DB	0edH, ' ', 0c0H, 0afH, 0b8H, 0aeH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DBHNIFJM@?H?$KN?$LM?S?$LM?$LK?$KB?$KD?G?$LD?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@
CONST	SEGMENT
??_C@_0DC@DBHNIFJM@?H?$KN?$LM?S?$LM?$LK?$KB?$KD?G?$LD?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ DB 0c8H
	DB	0adH, 0bcH, 0d3H, 0bcH, 0baH, 0a1H, 0a3H, 0c7H, 0b3H, 0bcH, 0d3H
	DB	0bcH, 0baH, 0c0H, 0c7H, ' ', 0bbH, 0f3H, 0b4H, 0ebH, 0bfH, 0cdH
	DB	' ', 0bdH, 0ceH, 0bfH, 0efH, ' ', 0b6H, 0a7H, ' ', 0b4H, 0f5H, 0bfH
	DB	0edH, ' ', 0c0H, 0afH, 0b8H, 0aeH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@EIPOCBIG@?$LM?v?$LM?S?$LM?$LK?$KB?$KD?H?$KN?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@
CONST	SEGMENT
??_C@_0DC@EIPOCBIG@?$LM?v?$LM?S?$LM?$LK?$KB?$KD?H?$KN?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ DB 0bcH
	DB	0f6H, 0bcH, 0d3H, 0bcH, 0baH, 0a1H, 0a3H, 0c8H, 0adH, 0bcH, 0d3H
	DB	0bcH, 0baH, 0c0H, 0c7H, ' ', 0bbH, 0f3H, 0b4H, 0ebH, 0bfH, 0cdH
	DB	' ', 0bdH, 0ceH, 0bfH, 0efH, ' ', 0b6H, 0a7H, ' ', 0b4H, 0f5H, 0bfH
	DB	0edH, ' ', 0c0H, 0afH, 0b8H, 0aeH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@DFHCGCAL@?A?v?$LM?S?$LM?$LK?$KB?$KD?$LM?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@
CONST	SEGMENT
??_C@_0DC@DFHCGCAL@?A?v?$LM?S?$LM?$LK?$KB?$KD?$LM?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@ DB 0c1H
	DB	0f6H, 0bcH, 0d3H, 0bcH, 0baH, 0a1H, 0a3H, 0bcH, 0f6H, 0bcH, 0d3H
	DB	0bcH, 0baH, 0c0H, 0c7H, ' ', 0bbH, 0f3H, 0b4H, 0ebH, 0bfH, 0cdH
	DB	' ', 0bdH, 0ceH, 0bfH, 0efH, ' ', 0b6H, 0a7H, ' ', 0b4H, 0f5H, 0bfH
	DB	0edH, ' ', 0c0H, 0afH, 0b8H, 0aeH, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@OOLAIOAA@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LM?x?$LJ?$NP?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$LA@
CONST	SEGMENT
??_C@_0DA@OOLAIOAA@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LM?x?$LJ?$NP?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$LA@ DB 0c0H
	DB	0ccH, 0c7H, 0d7H, 0b8H, 0f1H, 0c0H, 0baH, ' ', 0c1H, 0d6H, 0b7H
	DB	0ceH, ' ', 0bcH, 0f8H, 0b9H, 0dfH, 0b7H, 0c2H, 0b0H, 0faH, ' ', 0b0H
	DB	0fcH, 0b7H, 0c3H, 0c0H, 0ccH, ' ', 0b0H, 0fcH, 0b7H, 0c3H, 0c0H
	DB	0ccH, ' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@PBMHJDKK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LJ?f?$LO?n?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@
CONST	SEGMENT
??_C@_0CJ@PBMHJDKK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LJ?f?$LO?n?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@ DB 0c0H
	DB	0ccH, 0c7H, 0d7H, 0b8H, 0f1H, 0c0H, 0baH, ' ', 0c1H, 0d6H, 0b7H
	DB	0ceH, ' ', 0b9H, 0e6H, 0beH, 0eeH, 0b7H, 0c2H, 0b0H, 0faH, ' ', 0b0H
	DB	0fcH, 0b7H, 0c3H, 0c0H, 0ccH, ' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@DBPCCGK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LA?x?$LA?$NN?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@
CONST	SEGMENT
??_C@_0CJ@DBPCCGK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LA?x?$LA?$NN?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@ DB 0c0H
	DB	0ccH, 0c7H, 0d7H, 0b8H, 0f1H, 0c0H, 0baH, ' ', 0c1H, 0d6H, 0b7H
	DB	0ceH, ' ', 0b0H, 0f8H, 0b0H, 0ddH, 0b7H, 0c2H, 0b0H, 0faH, ' ', 0b0H
	DB	0fcH, 0b7H, 0c3H, 0c0H, 0ccH, ' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@EACHLIEL@?$MA?L?5?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LD?$LL?$LB?$LI?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5@
CONST	SEGMENT
??_C@_0CK@EACHLIEL@?$MA?L?5?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LD?$LL?$LB?$LI?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5@ DB 0c0H
	DB	0ccH, ' ', 0c7H, 0d7H, 0b8H, 0f1H, 0c0H, 0baH, ' ', 0c1H, 0d6H
	DB	0b7H, 0ceH, ' ', 0b3H, 0bbH, 0b1H, 0b8H, 0b7H, 0c2H, 0b0H, 0faH
	DB	' ', 0b0H, 0fcH, 0b7H, 0c3H, 0c0H, 0ccH, ' ', 0c0H, 0d6H, 0bdH
	DB	0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@DBMJLOIN@?D?$LD?$LI?$KP?E?M?5?$LM?$LD?A?$KE?$MA?$LL?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BL@DBMJLOIN@?D?$LD?$LI?$KP?E?M?5?$LM?$LD?A?$KE?$MA?$LL?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, ' ', 0bcH, 0b3H, 0c1H, 0a4H, 0c0H
	DB	0bbH, ' ', 0b0H, 0e1H, 0c1H, 0a4H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@CMGKIMKM@?$MA?T?$LH?B?G?Q?5?$MA?L?$LI?$KH?$LP?$KB?$LE?B?5?G?c?$LP?k?$LF?G?A?v?5?$LO?J?$LE?B?5?$LJ@
CONST	SEGMENT
??_C@_0DJ@CMGKIMKM@?$MA?T?$LH?B?G?Q?5?$MA?L?$LI?$KH?$LP?$KB?$LE?B?5?G?c?$LP?k?$LF?G?A?v?5?$LO?J?$LE?B?5?$LJ@ DB 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0d1H, ' ', 0c0H, 0ccH, 0b8H, 0a7H, 0bfH
	DB	0a1H, 0b4H, 0c2H, ' ', 0c7H, 0e3H, 0bfH, 0ebH, 0b5H, 0c7H, 0c1H
	DB	0f6H, ' ', 0beH, 0caH, 0b4H, 0c2H, ' ', 0b9H, 0aeH, 0c0H, 0daH
	DB	0b0H, 0a1H, ' ', 0c6H, 0f7H, 0c7H, 0d4H, 0b5H, 0c7H, 0beH, 0eeH
	DB	' ', 0c0H, 0d6H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a3H, 0a1H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DBBPEHG@?$MA?L?$LI?$KH?$LP?$KB?5?$LA?x?$LJ?i?$MA?$LL?5?$LF?Q?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
CONST	SEGMENT
??_C@_0BO@DBBPEHG@?$MA?L?$LI?$KH?$LP?$KB?5?$LA?x?$LJ?i?$MA?$LL?5?$LF?Q?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ DB 0c0H
	DB	0ccH, 0b8H, 0a7H, 0bfH, 0a1H, ' ', 0b0H, 0f8H, 0b9H, 0e9H, 0c0H
	DB	0bbH, ' ', 0b5H, 0d1H, 0bcH, 0f6H, ' ', 0beH, 0f8H, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b4H, 0d9H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@IAICGILF@?$LM?S?$LM?$LK?D?$KB?$CI?1?F?w?$MA?N?F?$KO?$CJ?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM@
CONST	SEGMENT
??_C@_0CE@IAICGILF@?$LM?S?$LM?$LK?D?$KB?$CI?1?F?w?$MA?N?F?$KO?$CJ?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM@ DB 0bcH
	DB	0d3H, 0bcH, 0baH, 0c4H, 0a1H, '(/', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H
	DB	0aeH, ')', 0b8H, 0a6H, ' ', 0baH, 0d0H, 0b9H, 0e8H, ' ', 0bfH, 0cfH
	DB	0b7H, 0e1H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@HJHEICBF@?$LL?s?E?B?5?F?w?$MA?N?F?$KO?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0CA@HJHEICBF@?$LL?s?E?B?5?F?w?$MA?N?F?$KO?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0bbH
	DB	0f3H, 0c5H, 0c2H, ' ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H, 0aeH, 0b8H
	DB	0a6H, ' ', 0baH, 0d0H, 0b9H, 0e8H, ' ', 0bfH, 0cfH, 0b7H, 0e1H
	DB	0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@NAEAKGPD@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?D?$LD?$LI?$KP?E?M?$LA?$KB?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G@
CONST	SEGMENT
??_C@_0CH@NAEAKGPD@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?D?$LD?$LI?$KP?E?M?$LA?$KB?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G@ DB 0b0H
	DB	0b0H, 0c0H, 0baH, ' ', 0c0H, 0ccH, 0b8H, 0a7H, 0c0H, 0c7H, ' ', 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0b0H, 0a1H, ' ', 0c0H, 0ccH, 0b9H
	DB	0ccH, ' ', 0c1H, 0b8H, 0c0H, 0e7H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H
	DB	0d9H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MICBHKJB@?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
CONST	SEGMENT
??_C@_0BN@MICBHKJB@?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ DB 0c0H
	DB	0ccH, 0b8H, 0a7H, 0c0H, 0bbH, ' ', 0c0H, 0d4H, 0b7H, 0c2H, 0c7H
	DB	0cfH, 0c1H, 0f6H, ' ', 0beH, 0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 0a3H, 0a1H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02KNHHEEKP@?5?5@
CONST	SEGMENT
??_C@_02KNHHEEKP@?5?5@ DB '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ?graId@?1??editCharParam@@YAHXZ@4PAHA
_DATA	SEGMENT
?graId@?1??editCharParam@@YAHXZ@4PAHA DD 0fffffffeH	; `editCharParam'::`2'::graId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BN@JACDIIAG@?D?$LD?$LI?$KP?E?M?$LM?$LB?E?C?H?$KN?$LI?i?$MA?$LI?$LH?N?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0BN@JACDIIAG@?D?$LD?$LI?$KP?E?M?$LM?$LB?E?C?H?$KN?$LI?i?$MA?$LI?$LH?N?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0bcH, 0b1H, 0c5H, 0c3H, 0c8H, 0adH
	DB	0b8H, 0e9H, 0c0H, 0b8H, 0b7H, 0ceH, 0b5H, 0b9H, 0beH, 0c6H, 0b0H
	DB	0a1H, 0b1H, 0e2H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IBMPLOHE@?D?$LD?$LI?$KP?E?M?$LJ?f?G?b?$MA?$PM?H?$KP?$KB?$KD@
CONST	SEGMENT
??_C@_0BB@IBMPLOHE@?D?$LD?$LI?$KP?E?M?$LJ?f?G?b?$MA?$PM?H?$KP?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0b9H, 0e6H, 0c7H, 0e2H, 0c0H, 0fcH
	DB	0c8H, 0afH, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GLGANICJ@?D?$LD?$LI?$KP?E?M?5?$LL?v?$LL?s?5?$LK?$KP?$LA?f?$KB?$KD@
CONST	SEGMENT
??_C@_0BD@GLGANICJ@?D?$LD?$LI?$KP?E?M?5?$LL?v?$LL?s?5?$LK?$KP?$LA?f?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, ' ', 0bbH, 0f6H, 0bbH, 0f3H, ' ', 0baH
	DB	0afH, 0b0H, 0e6H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@NKOCBMEN@?G?v?$MA?g?5?$LM?$LB?E?C?G?Q?5?D?$LD?$LI?$KP?E?M?$LH?N?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0CC@NKOCBMEN@?G?v?$MA?g?5?$LM?$LB?E?C?G?Q?5?D?$LD?$LI?$KP?E?M?$LH?N?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y@ DB 0c7H
	DB	0f6H, 0c0H, 0e7H, ' ', 0bcH, 0b1H, 0c5H, 0c3H, 0c7H, 0d1H, ' ', 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0b7H, 0ceH, ' ', 0b0H, 0e1H, 0c1H
	DB	0a4H, 0c7H, 0d5H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@
CONST	SEGMENT
??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@ DB '   ', 0c3H, 0ebH, 0bcH, 0d2H
	DB	'   ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@
CONST	SEGMENT
??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@ DB ' ', 0b9H, 0e6H, 0c7H, 0e2H
	DB	0c0H, 0fcH, 0c8H, 0afH, ' ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@
CONST	SEGMENT
??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@ DB ' ', 0bbH, 0f6H, 0bbH
	DB	0f3H, 0baH, 0afH, 0b0H, 0e6H, ' ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@
CONST	SEGMENT
??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@ DB '   ', 0b0H, 0e1H, 0c1H, 0a4H
	DB	'   ', 00H					; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA DD 0fffffffeH ; `selCharGraColorWin'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BG@OIHOGAMJ@?D?$LD?$LI?$KP?E?M?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KB?$KD@
CONST	SEGMENT
??_C@_0BG@OIHOGAMJ@?D?$LD?$LI?$KP?E?M?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0b8H, 0a6H, ' ', 0bcH, 0b1H, 0c5H
	DB	0c3H, 0c7H, 0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@
CONST	SEGMENT
??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@ DB 0c0H
	DB	0ccH, 0c0H, 0fcH, 0c8H, 0adH, 0b8H, 0e9H, 0c0H, 0b8H, 0b7H, 0ceH
	DB	' ', 0b5H, 0b9H, 0beH, 0c6H, 0b0H, 0a1H, 0b1H, 0e2H, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA
_DATA	SEGMENT
?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA DD 0fffffffeH ; `selCharGraNo'::`2'::selCharCanselGraId
_DATA	ENDS
;	COMDAT ??_C@_0BB@JNLGIAPP@?D?$LD?$LI?$KP?E?M?$LL?$PN?$LM?$LK?$LN?G?F?P?$KB?$KD@
CONST	SEGMENT
??_C@_0BB@JNLGIAPP@?D?$LD?$LI?$KP?E?M?$LL?$PN?$LM?$LK?$LN?G?F?P?$KB?$KD@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, 0bbH, 0fdH, 0bcH, 0baH, 0bdH, 0c7H
	DB	0c6H, 0d0H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA
_DATA	SEGMENT
?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA DD 0fffffffeH ; `commonYesNoWindow'::`2'::btnGraId
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BB@IFBIBFPD@?D?$LD?$LI?$KP?$LI?q?$LH?O?$LA?$KB?A?$KO?$LP?$MA?$LB?b@
CONST	SEGMENT
??_C@_0BB@IFBIBFPD@?D?$LD?$LI?$KP?$LI?q?$LH?O?$LA?$KB?A?$KO?$LP?$MA?$LB?b@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0b8H, 0f1H, 0b7H, 0cfH, 0b0H, 0a1H, 0c1H, 0aeH
	DB	0bfH, 0c0H, 0b1H, 0e2H, 00H			; `string'
CONST	ENDS
;	COMDAT ?msg@?1??deleteCharacter@@YAHXZ@4PADA
_DATA	SEGMENT
?msg@?1??deleteCharacter@@YAHXZ@4PADA DB 0c4H, 0b3H, 0b8H, 0afH, 0c5H, 0cdH
	DB	0bbH, 0e8H, 0c1H, 0a6H, 00H			; `deleteCharacter'::`2'::msg
_DATA	ENDS
;	COMDAT ??_C@_03GLKEJMAA@?$CF4d@
CONST	SEGMENT
??_C@_03GLKEJMAA@?$CF4d@ DB '%4d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCLOGFGE@?$CF8d@
CONST	SEGMENT
??_C@_03GCLOGFGE@?$CF8d@ DB '%8d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GOOLIKIF@?$CF3d@
CONST	SEGMENT
??_C@_03GOOLIKIF@?$CF3d@ DB '%3d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@LPFLMHNK@?D?$LD?$LI?$KP?E?M?5?$LL?h?A?$KG?$LK?R?$LA?$KB?$KD?$KM?$LE?Y?$LN?C?$LN?C?$LF?$LF?$KD?$KB@
CONST	SEGMENT
??_C@_0BM@LPFLMHNK@?D?$LD?$LI?$KP?E?M?5?$LL?h?A?$KG?$LK?R?$LA?$KB?$KD?$KM?$LE?Y?$LN?C?$LN?C?$LF?$LF?$KD?$KB@ DB 0c4H
	DB	0b3H, 0b8H, 0afH, 0c5H, 0cdH, ' ', 0bbH, 0e8H, 0c1H, 0a6H, 0baH
	DB	0d2H, 0b0H, 0a1H, 0a3H, 0acH, 0b4H, 0d9H, 0bdH, 0c3H, 0bdH, 0c3H
	DB	0b5H, 0b5H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@
CONST	SEGMENT
??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@ DB '4'
	DB	'02 WGS', 0efH, 0c3H, '??', 0ecH, 0abH, 0e9H, 0c4H, 0e8H, 0c7H
	DB	0efH, 0c3H, '?', 0a3H, 0acH, '?', 0d3H, 0f0H, '??', 0eaH, 0fdH
	DB	'??', 0e3H, 0e9H, '?', 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@
CONST	SEGMENT
??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@ DB '4'
	DB	'01 ?', 0daH, 0b1H, 0f1H, 0bcH, '?WGS', 0efH, 0c3H, '??', 0a3H
	DB	0acH, '?', 0e0H, 0bbH, 0d3H, 0f0H, '??', 0eaH, 0fdH, '??', 0e8H
	DB	0c7H, 0e0H, 0f7H, 0f1H, 0bcH, '?', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ DB '3'
	DB	'04 ', 0b0H, 0d4H, 0c0H, 0d3H, 0b7H, 0a9H, 0c5H, 0b7H, 0c0H, 0bbH
	DB	0beH, 0f2H, 0c0H, 0bbH, 0bcH, 0f6H, 0beH, 0f8H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@
CONST	SEGMENT
??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@ DB '3'
	DB	'03 ?', 0f9H, 0a1H, 0f1H, 0bcH, '?', 0deH, 0c5H, 0e9H, 0c4H, 0f3H
	DB	0adH, '?', 0ecH, 0abH, 0e9H, 0c4H, 0e8H, 0c7H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@
CONST	SEGMENT
??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@ DB '3'
	DB	'02 ?', 0eeH, 0dcH, '?', 0f9H, 0a1H, 0dfH, 0edH, '??', 0daH, 0b1H
	DB	'??', 0a3H, 0acH, '?', 0e0H, 0bbH, '???', 0eeH, 0dcH, '?', 0edH
	DB	0adH, '?', 0cbH, 0ecH, 0a3H, 0acH, 0ebH, 0eeH, 0f0H, 0ceH, '??'
	DB	0eaH, 0fdH, '??', 0d0H, 0f6H, 0eeH, 0dcH, '??', 0e3H, 0e1H, '?'
	DB	0faH, 0bcH, '??', 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@
CONST	SEGMENT
??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@ DB '3'
	DB	'01 ', 0b5H, 0eeH, 0b7H, 0cfH, 0b5H, 0c7H, 0c1H, 0f6H, 0beH, 0caH
	DB	0b4H, 0c2H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H, 0d4H, 0b4H, 0cfH
	DB	0b4H, 0d9H, ' ', 0b5H, 0eeH, 0b7H, 0cfH, 0c8H, 0c4H, ' ', 0c0H
	DB	0ccH, 0bfH, 0ebH, 0c7H, 0d8H, 0c1H, 0d6H, 0bdH, 0c3H, 0b1H, 0e2H
	DB	0b9H, 0d9H, 0b6H, 0f8H, 0b4H, 0cfH, 0b4H, 0d9H, '..', 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@
CONST	SEGMENT
??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@ DB '2'
	DB	'05 ', 0c0H, 0ccH, ' ', 0b0H, 0d4H, 0c0H, 0d3H, 0bfH, 0a1H, ' '
	DB	0b7H, 0ceH, 0b1H, 0d7H, 0c0H, 0ceH, 0c7H, 0cfH, 0c1H, 0f6H, ' '
	DB	0b8H, 0f8H, 0c7H, 0dfH, 0b0H, 0c5H, 0b3H, 0aaH, ' ', 0b7H, 0ceH
	DB	0b1H, 0d7H, 0c0H, 0ceH, ' ', 0bfH, 0c0H, 0b7H, 0f9H, 0c0H, 0d4H
	DB	0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@
CONST	SEGMENT
??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@ DB '2'
	DB	'04 ', 0bbH, 0e7H, 0bfH, 0ebH, 0c0H, 0daH, 0b0H, 0a1H, ' ', 0c0H
	DB	0ccH, 0b9H, 0ccH, ' ', 0b0H, 0d4H, 0c0H, 0d3H, 0c1H, 0dfH, 0c0H
	DB	0d4H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@GGBCENFH@203?5?$MA?L?$LJ?L?5?$LH?N?$LB?W?$MA?N?A?$NP?$MA?T?$LE?O?$LE?Y?4?5?$LA?h?A?$KE?$MA?L@
CONST	SEGMENT
??_C@_0DP@GGBCENFH@203?5?$MA?L?$LJ?L?5?$LH?N?$LB?W?$MA?N?A?$NP?$MA?T?$LE?O?$LE?Y?4?5?$LA?h?A?$KE?$MA?L@ DB '2'
	DB	'03 ', 0c0H, 0ccH, 0b9H, 0ccH, ' ', 0b7H, 0ceH, 0b1H, 0d7H, 0c0H
	DB	0ceH, 0c1H, 0dfH, 0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H, '. ', 0b0H
	DB	0e8H, 0c1H, 0a4H, 0c0H, 0ccH, ' ', 0c0H, 0e1H, 0b1H, 0e8H, 0c0H
	DB	0b8H, 0b7H, 0ceH, ' 10', 0baH, 0d0H, 0c8H, 0c4H, ' ', 0bdH, 0c3H
	DB	0b5H, 0b5H, 0c7H, 0d8H, 0c1H, 0d6H, 0bcH, 0bcH, 0bfH, 0e4H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@ DB '2'
	DB	'02 ', 0c1H, 0dfH, 0baH, 0b9H, 0b7H, 0ceH, 0b1H, 0d7H, 0c0H, 0ceH
	DB	' ', 0baH, 0d2H, 0b0H, 0a1H, 0b4H, 0c9H, 0c7H, 0d5H, 0b4H, 0cfH
	DB	0b4H, 0d9H, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@
CONST	SEGMENT
??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@ DB '2'
	DB	'01 ', 0beH, 0c6H, 0c0H, 0ccH, 0b5H, 0f0H, ' ', 0c6H, 0d0H, 0bdH
	DB	0baH, 0bfH, 0f6H, 0b5H, 0e5H, 0b0H, 0a1H, ' ', 0c6H, 0b2H, 0b7H
	DB	0c8H, 0b0H, 0c5H, 0b3H, 0aaH, ' ', 0bbH, 0fdH, 0bcH, 0baH, 0b5H
	DB	0c7H, 0c1H, 0f6H, ' ', 0beH, 0caH, 0beH, 0d2H, 0bdH, 0c0H, 0b4H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@ DB '1'
	DB	'03 ', 0bfH, 0acH, 0b0H, 0e1H, 0c7H, 0d2H, 0bcH, 0f6H, 0beH, 0f8H
	DB	0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@
CONST	SEGMENT
??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@ DB '1'
	DB	'02 ', 0bfH, 0c3H, 0b9H, 0d9H, 0b8H, 0a5H, ' ', 0c1H, 0a4H, 0baH
	DB	0b8H, 0b8H, 0a6H, ' ', 0b0H, 0a1H, 0c1H, 0aeH, 0bfH, 0c3H, 0bcH
	DB	0f6H, ' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H, 0cfH, 0b4H, 0d9H, 0a1H
	DB	0a3H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@
CONST	SEGMENT
??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@ DB '1'
	DB	'01 ', 0b5H, 0a5H, 0c0H, 0ccH, 0c5H, 0cdH, 0baH, 0a3H, 0c0H, 0ccH
	DB	0bdH, 0baH, ' ', 0bcH, 0adH, 0b9H, 0f6H, 0bfH, 0a1H, ' ', 0bfH
	DB	0acH, 0b0H, 0e1H, 0c7H, 0d2H, 0bcH, 0f6H, 0beH, 0f8H, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b4H, 0d9H, '.', 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EO@GDIJOFL@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LA?E?$LD@
CONST	SEGMENT
??_C@_0EO@GDIJOFL@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LA?E?$LD@ DB 0c0H
	DB	0ccH, ' ', 0c1H, 0a6H, 0c7H, 0b0H, 0c0H, 0baH, ' ', 0beH, 0c6H
	DB	0c1H, 0f7H, ' ', 0b5H, 0eeH, 0b7H, 0cfH, 0b5H, 0c7H, 0c1H, 0f6H
	DB	' ', 0beH, 0caH, 0beH, 0d2H, 0b0H, 0c5H, 0b3H, 0aaH, ', ', 0c8H
	DB	0b8H, 0bfH, 0f8H, ' ', 0beH, 0f7H, 0b1H, 0d7H, 0b7H, 0b9H, 0c0H
	DB	0ccH, 0b5H, 0e5H, ' ', 0c0H, 0fdH, 0c2H, 0f7H, 0b0H, 0a1H, ' ', 0c1H
	DB	0f8H, 0c7H, 0e0H, 0b5H, 0c7H, 0c1H, 0f6H, ' ', 0beH, 0caH, 0beH
	DB	0d2H, 0beH, 0eeH, 0bfH, 0e4H, '.', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@
CONST	SEGMENT
??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@ DB 0b4H
	DB	0d9H, 0b8H, 0a5H, 0b3H, 0bbH, 0bfH, 0ebH, 0c0H, 0bbH, ' ', 0c3H
	DB	0b3H, 0b8H, 0aeH, 0c1H, 0dfH, 0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H
	DB	' ', 0c0H, 0e1H, 0bdH, 0c3H, 0c8H, 0c4H, ' ', 0b4H, 0d9H, 0bdH
	DB	0c3H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c7H, 0d8H, 0c1H, 0d6H, 0bcH
	DB	0bcH, 0bfH, 0e4H, ' ', 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@
CONST	SEGMENT
??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@ DB 0c0H
	DB	0ccH, ' ', 0bcH, 0adH, 0b9H, 0f6H, 0b4H, 0c2H, ' ', 0bcH, 0f6H
	DB	0b8H, 0aeH, 0c1H, 0dfH, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@
CONST	SEGMENT
??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@ DB 0c0H, 0ceH, 0c1H, 0f5H
	DB	0bdH, 0c7H, 0c6H, 0d0H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@
CONST	SEGMENT
??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@ DB 0b5H
	DB	0a5H, 0c0H, 0ccH, 0c5H, 0cdH, 0c0H, 0faH, 0c0H, 0e5H, 0bcH, 0d2H
	DB	0b0H, 0a1H, 0bbH, 0e7H, 0bfH, 0ebH, 0c1H, 0dfH, 0a3H, 0acH, 0b3H
	DB	0aaH, 0c1H, 0dfH, 0bfH, 0a1H, 0b4H, 0d9H, 0bdH, 0c3H, 0bdH, 0c3H
	DB	0b5H, 0b5H, 0a3H, 0a1H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@
CONST	SEGMENT
??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@ DB '?'
	DB	0f9H, 0a1H, 0f1H, 0bcH, '?', 0deH, 0c5H, 0e9H, 0c4H, 0f3H, 0adH
	DB	'?', 0ecH, 0abH, 0e9H, 0c4H, 0e8H, 0c7H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@
CONST	SEGMENT
??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@ DB 0f3H
	DB	0aeH, '?', 0f9H, 0a1H, '?', 0daH, 0b1H, 0f1H, 0bcH, '?', 0a3H, 0acH
	DB	'?', 0e0H, 0bbH, 0d3H, 0f0H, '??', 0eaH, 0fdH, '??', 0e8H, 0c7H
	DB	0e0H, 0f7H, 0f1H, 0bcH, '?', 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@
CONST	SEGMENT
??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@ DB 0baH
	DB	0f1H, 0b9H, 0d0H, ' ', 0b9H, 0f8H, 0c8H, 0a3H, 0b8H, 0a6H, ' ', 0c0H
	DB	0d4H, 0b7H, 0c2H, 0c7H, 0cfH, 0b0H, 0c5H, 0b3H, 0aaH, ' ', 0c0H
	DB	0dfH, 0b8H, 0f8H, 0b5H, 0c8H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, 0c0H
	DB	0ccH, 0b3H, 0aaH, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c7H, 0d1H, ' ', 0b0H
	DB	0d4H, 0c0H, 0d3H, ' ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H, 0aeH, 0b4H
	DB	0c2H, ' WGS.', 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@
CONST	SEGMENT
??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@ DB 'W'
	DB	'GS ', 0b0H, 0d4H, 0c0H, 0d3H, ' ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H
	DB	0aeH, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0bfH, 0cfH, 0b7H, 0e1H, ' W'
	DB	'GS ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H, 0aeH, ' ', 0c4H, 0abH, 0b5H
	DB	0e5H, ' ', 0b1H, 0b8H, 0b8H, 0c5H, ' ', 0c8H, 0c4H, ' ', 0c8H, 0adH
	DB	0c0H, 0c7H, 0b0H, 0d4H, 0c0H, 0d3H, 0b8H, 0c1H, 0c0H, 0b8H, 0b7H
	DB	0ceH, ' ', 0c4H, 0abH, 0b5H, 0e5H, ' ', 0b9H, 0dfH, 0b1H, 0deH
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@
CONST	SEGMENT
??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@ DB 'G'
	DB	'S ', 0b0H, 0d4H, 0c0H, 0d3H, ' ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H
	DB	0aeH, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0bfH, 0cfH, 0b7H, 0e1H, ', '
	DB	0c8H, 0adH, 0c0H, 0ccH, 0b0H, 0d4H, 0c0H, 0d3H, 0b8H, 0c1H, 0bfH
	DB	0a1H, ' ', 0b9H, 0abH, 0b7H, 0e1H, ' WGS ', 0b0H, 0d4H, 0c0H, 0d3H
	DB	' ', 0c6H, 0f7H, 0c0H, 0ceH, 0c6H, 0aeH, ' ', 0bdH, 0c5H, 0c3H
	DB	0bbH, 0c7H, 0d8H, 0c1H, 0d2H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@
CONST	SEGMENT
??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@ DB 0b0H
	DB	0e8H, 0c1H, 0a4H, ' ', 0b6H, 0c7H, 0b4H, 0c2H, ' ', 0baH, 0f1H
	DB	0b9H, 0d0H, 0b9H, 0f8H, 0c8H, 0a3H, ' ', 0c0H, 0dfH, 0b8H, 0f8H
	DB	0c0H, 0d4H, 0b7H, 0c2H, 0a3H, 0acH, 0baH, 0f1H, 0c8H, 0b8H, 0bfH
	DB	0f8H, 0c0H, 0baH, ' ', 0b0H, 0a1H, 0c0H, 0d4H, 0c8H, 0c4H, ' ', 0bdH
	DB	0c3H, 0b5H, 0b5H, 0c7H, 0d8H, 0c1H, 0d6H, 0bcH, 0bcH, 0bfH, 0e4H
	DB	0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@
CONST	SEGMENT
??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@ DB 0b3H
	DB	0d7H, 0c6H, 0aeH, 0bfH, 0f6H, 0c5H, 0a9H, ' ', 0bbH, 0e7H, 0bfH
	DB	0ebH, 0b7H, 0aeH, 0c0H, 0ccH, 0b8H, 0b9H, 0bdH, 0c0H, 0b4H, 0cfH
	DB	0b4H, 0d9H, 0a3H, 0acH, 0b3H, 0aaH, 0c1H, 0dfH, 0bfH, 0a1H, ' '
	DB	0b4H, 0d9H, 0bdH, 0c3H, 0bdH, 0c3H, 0b5H, 0b5H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DFFIFBLJ@WGS?$LP?M?5?$LP?$KM?$LA?a?$LN?G?F?P?$KD?$KB@
CONST	SEGMENT
??_C@_0BB@DFFIFBLJ@WGS?$LP?M?5?$LP?$KM?$LA?a?$LN?G?F?P?$KD?$KB@ DB 'WGS', 0bfH
	DB	0cdH, ' ', 0bfH, 0acH, 0b0H, 0e1H, 0bdH, 0c7H, 0c6H, 0d0H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA
_DATA	SEGMENT
?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA DD 0fffffffeH ; `selectCharacterProc'::`2'::btnGraId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BG@CKDNBLG@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?5?A?$NP?$MA?T?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BG@CKDNBLG@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?5?A?$NP?$MA?T?$LE?O?$LE?Y?4@ DB '['
	DB	'%s]', 0bfH, 0a1H, ' ', 0c1H, 0a2H, 0bcH, 0d3H, ' ', 0c1H, 0dfH
	DB	0c0H, 0d4H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLGFPKOG@CHAOS?5STONEAGE@
CONST	SEGMENT
??_C@_0P@FLGFPKOG@CHAOS?5STONEAGE@ DB 'CHAOS STONEAGE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LJIGADOK@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?A?$NP?$MA?T?$LE?O?$LE?Y?4@
CONST	SEGMENT
??_C@_0BF@LJIGADOK@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?A?$NP?$MA?T?$LE?O?$LE?Y?4@ DB '['
	DB	'%s]', 0bfH, 0a1H, ' ', 0c1H, 0a2H, 0bcH, 0d3H, 0c1H, 0dfH, 0c0H
	DB	0d4H, 0b4H, 0cfH, 0b4H, 0d9H, '.', 00H	; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??selectServer@@YAHXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??selectServer@@YAHXZ@4PAHA DD 0fffffffeH	; `selectServer'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0N@DFLJEJED@?5?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?5?5@
CONST	SEGMENT
??_C@_0N@DFLJEJED@?5?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?5?5@ DB '  ', 0b5H, 0b9H
	DB	0beH, 0c6H, 0b0H, 0a1H, 0b1H, 0e2H, '  ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BGALCGMK@?$CFs?5?$CFs?5?$FL?$CFs?$FN@
CONST	SEGMENT
??_C@_0L@BGALCGMK@?$CFs?5?$CFs?5?$FL?$CFs?$FN@ DB '%s %s [%s]', 00H ; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??selectGroup@@YAHXZ@4PAHA
_DATA	SEGMENT
?fontId@?1??selectGroup@@YAHXZ@4PAHA DD 0fffffffeH	; `selectGroup'::`2'::fontId
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
	DD	0fffffffeH
_DATA	ENDS
;	COMDAT ??_C@_0BG@MJOFMAKM@?$FLVer?$KD?$LK?$CF04d?4?$CF02d?4?$CF02d?$FN@
CONST	SEGMENT
??_C@_0BG@MJOFMAKM@?$FLVer?$KD?$LK?$CF04d?4?$CF02d?4?$CF02d?$FN@ DB '[Ver'
	DB	0a3H, 0baH, '%04d.%02d.%02d]', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08JIAEEDMM@?$CFs?5?$CFd?5?$CFd@
CONST	SEGMENT
??_C@_08JIAEEDMM@?$CFs?5?$CFd?5?$CFd@ DB '%s %d %d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BKDGIFED@Oct?5?54?52021@
CONST	SEGMENT
??_C@_0M@BKDGIFED@Oct?5?54?52021@ DB 'Oct  4 2021', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@KPEEHOGC@?$FL?$CFs?$FN?$MA?L?$LJ?v?$MA?$PM?$MA?$LK?5?$LL?g?$LP?k?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
CONST	SEGMENT
??_C@_0CA@KPEEHOGC@?$FL?$CFs?$FN?$MA?L?$LJ?v?$MA?$PM?$MA?$LK?5?$LL?g?$LP?k?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@ DB '['
	DB	'%s]', 0c0H, 0ccH, 0b9H, 0f6H, 0c0H, 0fcH, 0c0H, 0baH, ' ', 0bbH
	DB	0e7H, 0bfH, 0ebH, 0c7H, 0d2H, 0bcH, 0f6H, 0beH, 0f8H, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b4H, 0d9H, 0a3H, 0a1H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@
CONST	SEGMENT
??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@ DB '?', 0d6H
	DB	0d8H, '?', 0daH, 0b1H, 0f1H, 0d7H, '?', 0fbH, 0bfH, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DNIIFBMG@?$CFs?5?$CFs@
CONST	SEGMENT
??_C@_05DNIIFBMG@?$CFs?5?$CFs@ DB '%s %s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@
CONST	SEGMENT
??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@ DB 0a3H
	DB	0d3H, 0a3H, 0f4H, 0a3H, 0efH, 0a3H, 0eeH, 0a3H, 0e5H, 0a3H, 0c1H
	DB	0a3H, 0e7H, 0a3H, 0e5H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDEEPOEI@?$KD?O?$KD?K@
CONST	SEGMENT
??_C@_04NDEEPOEI@?$KD?O?$KD?K@ DB 0a3H, 0cfH, 0a3H, 0cbH, 00H ; `string'
CONST	ENDS
;	COMDAT ?fontId@?1??commonMsgWin@@YAHPAD@Z@4PAHA
_DATA	SEGMENT
?fontId@?1??commonMsgWin@@YAHPAD@Z@4PAHA DD 0fffffffeH	; `commonMsgWin'::`2'::fontId
_DATA	ENDS
;	COMDAT ??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@
CONST	SEGMENT
??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@ DB 0c0H
	DB	0dfH, 0b8H, 0f8H, 0b5H, 0c8H, ' ', 0b0H, 0e8H, 0c1H, 0a4H, ' ', 0b6H
	DB	0c7H, 0b4H, 0c2H, ' ', 0baH, 0f1H, 0b9H, 0d0H, 0b9H, 0f8H, 0c8H
	DB	0a3H, 0aH, 0b4H, 0d9H, 0bdH, 0c3H, 0c0H, 0d4H, 0b7H, 0c2H, 0c7H
	DB	0cfH, 0bcH, 0bcH, 0bfH, 0e4H, '!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ@
CONST	SEGMENT
??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ@ DB '%s(%d)', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
CONST	SEGMENT
??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@ DB 0b0H
	DB	0e8H, 0c1H, 0a4H, 0b0H, 0faH, ' ', 0baH, 0f1H, 0b9H, 0d0H, 0b9H
	DB	0f8H, 0c8H, 0a3H, 0b8H, 0a6H, ' ', 0c0H, 0d4H, 0b7H, 0c2H, 0c7H
	DB	0cfH, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BACHGGGK@f?$DLencor1c@
CONST	SEGMENT
??_C@_09BACHGGGK@f?$DLencor1c@ DB 'f;encor1c', 00H	; `string'
CONST	ENDS
;	COMDAT ?szWGSState@?1??idPasswordProc@@YAXXZ@4PADA
_DATA	SEGMENT
?szWGSState@?1??idPasswordProc@@YAXXZ@4PADA DB 0b7H, 0ceH, 0b1H, 0d7H, 0c0H
	DB	0ceH, 0c7H, 0cfH, 0bdH, 0caH, 0bdH, 0c3H, 0bfH, 0c0H, '.', 0a3H
	DB	0acH, 0c0H, 0e1H, 0bdH, 0c3H, 0b8H, 0b8H, 0b1H, 0e2H, 0b4H, 0d9H
	DB	0b7H, 0c1H, 0c1H, 0d6H, 0bcH, 0bcH, 0bfH, 0e4H, 0a3H, 0a1H, 00H ; `idPasswordProc'::`2'::szWGSState
_DATA	ENDS
;	COMDAT ??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@
CONST	SEGMENT
??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@ DB '\VBOXSVR\_st'
	DB	'oneage\repos\ssm-sacli\system\login.cpp', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?ridePetTable@@3PAUtagRidePetTable@@A DD 018a88H	; ridePetTable
	DD	0186a0H
	DD	018800H
	DD	00H
	DD	018a89H
	DD	0186a5H
	DD	018800H
	DD	00H
	DD	018a8aH
	DD	0186aaH
	DD	018800H
	DD	00H
	DD	018a8bH
	DD	0186afH
	DD	018800H
	DD	00H
	DD	018a8cH
	DD	0186a0H
	DD	0187e9H
	DD	00H
	DD	018a8dH
	DD	0186a5H
	DD	0187e7H
	DD	00H
	DD	018a8eH
	DD	0186aaH
	DD	0187eaH
	DD	00H
	DD	018a8fH
	DD	0186afH
	DD	0187e8H
	DD	00H
	DD	018a90H
	DD	01895cH
	DD	018814H
	DD	00H
	DD	018a91H
	DD	018961H
	DD	018815H
	DD	00H
	DD	018e65H
	DD	018961H
	DD	018cc8H
	DD	00H
	DD	018e5aH
	DD	018961H
	DD	018c9cH
	DD	00H
	DD	018a92H
	DD	0186b4H
	DD	01882cH
	DD	00H
	DD	018a93H
	DD	0186b9H
	DD	01882cH
	DD	00H
	DD	018a94H
	DD	0186beH
	DD	01882cH
	DD	00H
	DD	018a95H
	DD	0186c3H
	DD	01882cH
	DD	00H
	DD	018a96H
	DD	0186b4H
	DD	0187e8H
	DD	00H
	DD	018a97H
	DD	0186b9H
	DD	0187e9H
	DD	00H
	DD	018a98H
	DD	0186beH
	DD	0187e7H
	DD	00H
	DD	018a99H
	DD	0186c3H
	DD	0187eaH
	DD	00H
	DD	018a9aH
	DD	018966H
	DD	018814H
	DD	00H
	DD	018a9bH
	DD	01896bH
	DD	018815H
	DD	00H
	DD	018e64H
	DD	01896bH
	DD	018cc8H
	DD	00H
	DD	018e62H
	DD	01896bH
	DD	018c9cH
	DD	00H
	DD	018a9cH
	DD	0186c8H
	DD	0187ffH
	DD	00H
	DD	018a9dH
	DD	0186cdH
	DD	0187ffH
	DD	00H
	DD	018a9eH
	DD	0186d2H
	DD	0187ffH
	DD	00H
	DD	018a9fH
	DD	0186d7H
	DD	0187ffH
	DD	00H
	DD	018aa0H
	DD	0186c8H
	DD	0187e8H
	DD	00H
	DD	018aa1H
	DD	0186cdH
	DD	0187eaH
	DD	00H
	DD	018aa2H
	DD	0186d2H
	DD	0187e7H
	DD	00H
	DD	018aa3H
	DD	0186d7H
	DD	0187e9H
	DD	00H
	DD	018aa4H
	DD	018970H
	DD	018814H
	DD	00H
	DD	018aa5H
	DD	018975H
	DD	018815H
	DD	00H
	DD	018e4dH
	DD	018975H
	DD	018cc8H
	DD	00H
	DD	018e57H
	DD	018975H
	DD	018c9cH
	DD	00H
	DD	018aa6H
	DD	0186dcH
	DD	018801H
	DD	00H
	DD	018aa7H
	DD	0186e1H
	DD	018801H
	DD	00H
	DD	018aa8H
	DD	0186e6H
	DD	018801H
	DD	00H
	DD	018aa9H
	DD	0186ebH
	DD	018801H
	DD	00H
	DD	018aaaH
	DD	0186dcH
	DD	0187e9H
	DD	00H
	DD	018aabH
	DD	0186e1H
	DD	0187e7H
	DD	00H
	DD	018aacH
	DD	0186e6H
	DD	0187eaH
	DD	00H
	DD	018aadH
	DD	0186ebH
	DD	0187e8H
	DD	00H
	DD	018aaeH
	DD	01897aH
	DD	018814H
	DD	00H
	DD	018aafH
	DD	01897fH
	DD	018815H
	DD	00H
	DD	018e4eH
	DD	01897fH
	DD	018cc8H
	DD	00H
	DD	018e58H
	DD	01897fH
	DD	018c9cH
	DD	00H
	DD	018ab0H
	DD	0186f0H
	DD	01882cH
	DD	00H
	DD	018ab1H
	DD	0186f5H
	DD	01882cH
	DD	00H
	DD	018ab2H
	DD	0186faH
	DD	01882cH
	DD	00H
	DD	018ab3H
	DD	0186ffH
	DD	01882cH
	DD	00H
	DD	018ab4H
	DD	0186f0H
	DD	0187e8H
	DD	00H
	DD	018ab5H
	DD	0186f5H
	DD	0187e7H
	DD	00H
	DD	018ab6H
	DD	0186faH
	DD	0187eaH
	DD	00H
	DD	018ab7H
	DD	0186ffH
	DD	0187e9H
	DD	00H
	DD	018ab8H
	DD	018984H
	DD	018814H
	DD	00H
	DD	018ab9H
	DD	018989H
	DD	018815H
	DD	00H
	DD	018e55H
	DD	018989H
	DD	018cc8H
	DD	00H
	DD	018e60H
	DD	018989H
	DD	018c9cH
	DD	00H
	DD	018abaH
	DD	018704H
	DD	018801H
	DD	00H
	DD	018abbH
	DD	018709H
	DD	018801H
	DD	00H
	DD	018abcH
	DD	01870eH
	DD	018801H
	DD	00H
	DD	018abdH
	DD	018713H
	DD	018801H
	DD	00H
	DD	018abeH
	DD	018704H
	DD	0187e9H
	DD	00H
	DD	018abfH
	DD	018709H
	DD	0187e8H
	DD	00H
	DD	018ac0H
	DD	01870eH
	DD	0187eaH
	DD	00H
	DD	018ac1H
	DD	018713H
	DD	0187e7H
	DD	00H
	DD	018ac2H
	DD	01898eH
	DD	018814H
	DD	00H
	DD	018ac3H
	DD	018993H
	DD	018815H
	DD	00H
	DD	018e56H
	DD	018993H
	DD	018cc8H
	DD	00H
	DD	018e61H
	DD	018993H
	DD	018c9cH
	DD	00H
	DD	018ac4H
	DD	018718H
	DD	018802H
	DD	00H
	DD	018ac5H
	DD	01871dH
	DD	018802H
	DD	00H
	DD	018ac6H
	DD	018722H
	DD	018802H
	DD	00H
	DD	018ac7H
	DD	018727H
	DD	018802H
	DD	00H
	DD	018ac8H
	DD	018718H
	DD	0187e7H
	DD	00H
	DD	018ac9H
	DD	01871dH
	DD	0187eaH
	DD	00H
	DD	018acaH
	DD	018722H
	DD	0187e8H
	DD	00H
	DD	018acbH
	DD	018727H
	DD	0187e9H
	DD	00H
	DD	018accH
	DD	018998H
	DD	018814H
	DD	00H
	DD	018acdH
	DD	01899dH
	DD	018815H
	DD	00H
	DD	018e4fH
	DD	01899dH
	DD	018cc8H
	DD	00H
	DD	018e59H
	DD	01899dH
	DD	018c9cH
	DD	00H
	DD	018aceH
	DD	01872cH
	DD	018802H
	DD	00H
	DD	018acfH
	DD	018731H
	DD	018802H
	DD	00H
	DD	018ad0H
	DD	018736H
	DD	018802H
	DD	00H
	DD	018ad1H
	DD	01873bH
	DD	018802H
	DD	00H
	DD	018ad2H
	DD	01872cH
	DD	0187e7H
	DD	00H
	DD	018ad3H
	DD	018731H
	DD	0187e9H
	DD	00H
	DD	018ad4H
	DD	018736H
	DD	0187eaH
	DD	00H
	DD	018ad5H
	DD	01873bH
	DD	0187e8H
	DD	00H
	DD	018ad6H
	DD	0189a2H
	DD	018814H
	DD	00H
	DD	018ad7H
	DD	0189a7H
	DD	018815H
	DD	00H
	DD	018e50H
	DD	0189a7H
	DD	018cc8H
	DD	00H
	DD	018e5bH
	DD	0189a7H
	DD	018c9cH
	DD	00H
	DD	018ad8H
	DD	018740H
	DD	018800H
	DD	00H
	DD	018ad9H
	DD	018745H
	DD	018800H
	DD	00H
	DD	018adaH
	DD	01874aH
	DD	018800H
	DD	00H
	DD	018adbH
	DD	01874fH
	DD	018800H
	DD	00H
	DD	018adcH
	DD	018740H
	DD	0187eaH
	DD	00H
	DD	018addH
	DD	018745H
	DD	0187e9H
	DD	00H
	DD	018adeH
	DD	01874aH
	DD	0187e7H
	DD	00H
	DD	018adfH
	DD	01874fH
	DD	0187e8H
	DD	00H
	DD	018ae0H
	DD	0189acH
	DD	018814H
	DD	00H
	DD	018ae1H
	DD	0189b1H
	DD	018815H
	DD	00H
	DD	018e52H
	DD	0189b1H
	DD	018cc8H
	DD	00H
	DD	018e5dH
	DD	0189b1H
	DD	018c9cH
	DD	00H
	DD	018ae2H
	DD	018754H
	DD	0187ffH
	DD	00H
	DD	018ae3H
	DD	018759H
	DD	0187ffH
	DD	00H
	DD	018ae4H
	DD	01875eH
	DD	0187ffH
	DD	00H
	DD	018ae5H
	DD	018763H
	DD	0187ffH
	DD	00H
	DD	018ae6H
	DD	018754H
	DD	0187e8H
	DD	00H
	DD	018ae7H
	DD	018759H
	DD	0187eaH
	DD	00H
	DD	018ae8H
	DD	01875eH
	DD	0187e9H
	DD	00H
	DD	018ae9H
	DD	018763H
	DD	0187e7H
	DD	00H
	DD	018aeaH
	DD	0189b6H
	DD	018814H
	DD	00H
	DD	018aebH
	DD	0189bbH
	DD	018815H
	DD	00H
	DD	018e51H
	DD	0189bbH
	DD	018cc8H
	DD	00H
	DD	018e5cH
	DD	0189bbH
	DD	018c9cH
	DD	00H
	DD	018aecH
	DD	018768H
	DD	018801H
	DD	00H
	DD	018aedH
	DD	01876dH
	DD	018801H
	DD	00H
	DD	018aeeH
	DD	018772H
	DD	018801H
	DD	00H
	DD	018aefH
	DD	018777H
	DD	018801H
	DD	00H
	DD	018af0H
	DD	018768H
	DD	0187e9H
	DD	00H
	DD	018af1H
	DD	01876dH
	DD	0187e8H
	DD	00H
	DD	018af2H
	DD	018772H
	DD	0187e7H
	DD	00H
	DD	018af3H
	DD	018777H
	DD	0187eaH
	DD	00H
	DD	018af4H
	DD	0189c0H
	DD	018814H
	DD	00H
	DD	018af5H
	DD	0189c5H
	DD	018815H
	DD	00H
	DD	018e54H
	DD	0189c5H
	DD	018cc8H
	DD	00H
	DD	018e5fH
	DD	0189c5H
	DD	018c9cH
	DD	00H
	DD	018af6H
	DD	01877cH
	DD	01882cH
	DD	00H
	DD	018af7H
	DD	018781H
	DD	01882cH
	DD	00H
	DD	018af8H
	DD	018786H
	DD	01882cH
	DD	00H
	DD	018af9H
	DD	01878bH
	DD	01882cH
	DD	00H
	DD	018afaH
	DD	01877cH
	DD	0187eaH
	DD	00H
	DD	018afbH
	DD	018781H
	DD	0187e7H
	DD	00H
	DD	018afcH
	DD	018786H
	DD	0187e9H
	DD	00H
	DD	018afdH
	DD	01878bH
	DD	0187e8H
	DD	00H
	DD	018afeH
	DD	0189caH
	DD	018814H
	DD	00H
	DD	018affH
	DD	0189cfH
	DD	018815H
	DD	00H
	DD	018e53H
	DD	0189cfH
	DD	018cc8H
	DD	00H
	DD	018e5eH
	DD	0189cfH
	DD	018c9cH
	DD	00H
	DD	018b3bH
	DD	018b39H
	DD	018b3aH
	DD	00H
	DD	018b3bH
	DD	018b3aH
	DD	018b39H
	DD	00H
?idPasswordFocus@@3PAPAUSTR_BUFFER@@A DD FLAT:?idKey@@3USTR_BUFFER@@A ; idPasswordFocus
	DD	FLAT:?passwd@@3USTR_BUFFER@@A
?idPasswordGraId@@3PAHA DD 0fffffffeH			; idPasswordGraId
	DD	0fffffffeH
?selectGraNoTbl@@3PAHA DD 0186a0H			; selectGraNoTbl
	DD	0186b4H
	DD	0186c8H
	DD	0186dcH
	DD	0186f0H
	DD	018704H
	DD	018718H
	DD	01872cH
	DD	018740H
	DD	018754H
	DD	018768H
	DD	01877cH
?familySpriteName@@3PAY09DA DB 0baH, 0fbH, 0c0H, 0c7H, 0c1H, 0a4H, 0b7H, 0c9H
	DB	00H						; familySpriteName
	ORG $+1
	DB	0beH, 0eeH, 0b5H, 0d2H, 0c1H, 0a4H, 0b7H, 0c9H, 00H
	ORG $+1
	DB	'        ', 00H
	ORG $+1
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?cleanBlacklist@@YAXXZ
_TEXT	SEGMENT
?cleanBlacklist@@YAXXZ PROC				; cleanBlacklist, COMDAT

; 20342: void cleanBlacklist() {};

  00000	c2 00 00	 ret	 0
?cleanBlacklist@@YAXXZ ENDP				; cleanBlacklist
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?removeBlacklist@@YAXPAD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?removeBlacklist@@YAXPAD@Z PROC				; removeBlacklist, COMDAT

; 20341: void removeBlacklist(char* name) {};

  00000	c2 00 00	 ret	 0
?removeBlacklist@@YAXPAD@Z ENDP				; removeBlacklist
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?addBlacklist@@YAXPAD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?addBlacklist@@YAXPAD@Z PROC				; addBlacklist, COMDAT

; 20340: void addBlacklist(char* name) {};

  00000	c2 00 00	 ret	 0
?addBlacklist@@YAXPAD@Z ENDP				; addBlacklist
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?checkInBlacklist@@YAHPAD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?checkInBlacklist@@YAHPAD@Z PROC			; checkInBlacklist, COMDAT

; 20339: int checkInBlacklist(char* name) { return false; };

  00000	33 c0		 xor	 eax, eax
  00002	c3		 ret	 0
?checkInBlacklist@@YAHPAD@Z ENDP			; checkInBlacklist
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closeMineFamilyDetailWN@@YAXXZ
_TEXT	SEGMENT
?closeMineFamilyDetailWN@@YAXXZ PROC			; closeMineFamilyDetailWN, COMDAT

; 17784: 	windowTypeWN = -1;
; 17785: 	DeathAction(ptActMenuWin);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00006	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00010	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00015	83 c4 04	 add	 esp, 4

; 17786: 	ptActMenuWin = NULL;

  00018	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 17787: }

  00022	c3		 ret	 0
?closeMineFamilyDetailWN@@YAXXZ ENDP			; closeMineFamilyDetailWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closeFamilyLeaderChangeWN@@YAXXZ
_TEXT	SEGMENT
?closeFamilyLeaderChangeWN@@YAXXZ PROC			; closeFamilyLeaderChangeWN, COMDAT

; 17400: 	windowTypeWN = -1;
; 17401: 	//wnCloseFlag = 0;
; 17402: 	DeathAction(ptActMenuWin);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00006	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00010	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00015	83 c4 04	 add	 esp, 4

; 17403: 	ptActMenuWin = NULL;

  00018	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 17404: 	changeWho = -1;

  00022	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?changeWho@@3HA, -1 ; changeWho

; 17405: }

  0002c	c3		 ret	 0
?closeFamilyLeaderChangeWN@@YAXXZ ENDP			; closeFamilyLeaderChangeWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closeFamilyTaxWN@@YAXXZ
_TEXT	SEGMENT
?closeFamilyTaxWN@@YAXXZ PROC				; closeFamilyTaxWN, COMDAT

; 16809: 	windowTypeWN = -1;
; 16810: 	wnCloseFlag = 0;
; 16811: 	DeathAction(ptActMenuWin);

  00000	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00006	33 c0		 xor	 eax, eax
  00008	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00012	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00018	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0001d	83 c4 04	 add	 esp, 4

; 16812: 	ptActMenuWin = NULL;

  00020	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 16813: }

  0002a	c3		 ret	 0
?closeFamilyTaxWN@@YAXXZ ENDP				; closeFamilyTaxWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT ??$sprintf_s@$0EAA@@@YAHAAY0EAA@DPBDZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0EAA@@@YAHAAY0EAA@DPBDZZ PROC		; sprintf_s<1024>, COMDAT

; 1840 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	68 00 04 00 00	 push	 1024			; 00000400H
  00011	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	ff 30		 push	 DWORD PTR [eax]
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1496 :     }
; 1497 :     #endif
; 1498 : 
; 1499 :     #if __STDC_WANT_SECURE_LIB__
; 1500 : 
; 1501 :         _Success_(return >= 0)
; 1502 :         _Check_return_opt_
; 1503 :         _CRT_STDIO_INLINE int __CRTDECL vsprintf_s(
; 1504 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1505 :             _In_                                          size_t      const _BufferCount,
; 1506 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1507 :                                                           va_list           _ArgList
; 1508 :             )
; 1509 :     #if defined _NO_CRT_STDIO_INLINE
; 1510 :     ;
; 1511 :     #else
; 1512 :         {
; 1513 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1514 :         }
; 1515 :     #endif
; 1516 : 
; 1517 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
; 1518 :             _Success_(return >= 0)
; 1519 :             int, vsprintf_s,
; 1520 :             _Always_(_Post_z_)            char,        _Buffer,
; 1521 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1522 :                                           va_list,     _ArgList
; 1523 :             )
; 1524 : 
; 1525 :     #endif
; 1526 : 
; 1527 :     _Success_(return >= 0)
; 1528 :     _Check_return_opt_
; 1529 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p_l(
; 1530 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1531 :         _In_                                          size_t      const _BufferCount,
; 1532 :         _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
; 1533 :         _In_opt_                                      _locale_t   const _Locale,
; 1534 :                                                       va_list           _ArgList
; 1535 :         )
; 1536 :     #if defined _NO_CRT_STDIO_INLINE
; 1537 :     ;
; 1538 :     #else
; 1539 :     {
; 1540 :         int const _Result = __stdio_common_vsprintf_p(
; 1541 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1542 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1543 : 
; 1544 :         return _Result < 0 ? -1 : _Result;
; 1545 :     }
; 1546 :     #endif
; 1547 : 
; 1548 :     _Success_(return >= 0)
; 1549 :     _Check_return_opt_
; 1550 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p(
; 1551 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1552 :         _In_                                          size_t      const _BufferCount,
; 1553 :         _In_z_ _Printf_format_string_                 char const* const _Format,
; 1554 :                                                       va_list           _ArgList
; 1555 :         )
; 1556 :     #if defined _NO_CRT_STDIO_INLINE
; 1557 :     ;
; 1558 :     #else
; 1559 :     {
; 1560 :         return _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1561 :     }
; 1562 :     #endif
; 1563 : 
; 1564 :     _Success_(return >= 0)
; 1565 :     _Check_return_opt_
; 1566 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s_l(
; 1567 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1568 :         _In_                                              size_t      const _BufferCount,
; 1569 :         _In_                                              size_t      const _MaxCount,
; 1570 :         _In_z_ _Printf_format_string_params_(2)           char const* const _Format,
; 1571 :         _In_opt_                                          _locale_t   const _Locale,
; 1572 :                                                           va_list          _ArgList
; 1573 :         )
; 1574 :     #if defined _NO_CRT_STDIO_INLINE
; 1575 :     ;
; 1576 :     #else
; 1577 :     {
; 1578 :         int const _Result = __stdio_common_vsnprintf_s(
; 1579 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1580 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1581 : 
; 1582 :         return _Result < 0 ? -1 : _Result;
; 1583 :     }
; 1584 :     #endif
; 1585 : 
; 1586 :     _Success_(return >= 0)
; 1587 :     _Check_return_opt_
; 1588 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s(
; 1589 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1590 :         _In_                                              size_t      const _BufferCount,
; 1591 :         _In_                                              size_t      const _MaxCount,
; 1592 :         _In_z_ _Printf_format_string_                     char const* const _Format,
; 1593 :                                                           va_list           _ArgList
; 1594 :         )
; 1595 :     #if defined _NO_CRT_STDIO_INLINE
; 1596 :     ;
; 1597 :     #else
; 1598 :     {
; 1599 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1600 :     }
; 1601 :     #endif
; 1602 : 
; 1603 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1604 :         _Success_(return >= 0)
; 1605 :         int, _vsnprintf_s,
; 1606 :         _Always_(_Post_z_)            char,        _Buffer,
; 1607 :         _In_                          size_t,      _BufferCount,
; 1608 :         _In_z_ _Printf_format_string_ char const*, _Format,
; 1609 :                                       va_list,     _ArgList
; 1610 :         )
; 1611 : 
; 1612 :     #if __STDC_WANT_SECURE_LIB__
; 1613 : 
; 1614 :         _Success_(return >= 0)
; 1615 :         _Check_return_opt_
; 1616 :         _CRT_STDIO_INLINE int __CRTDECL vsnprintf_s(
; 1617 :             _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1618 :             _In_                                              size_t      const _BufferCount,
; 1619 :             _In_                                              size_t      const _MaxCount,
; 1620 :             _In_z_ _Printf_format_string_                     char const* const _Format,
; 1621 :                                                               va_list           _ArgList
; 1622 :             )
; 1623 :     #if defined _NO_CRT_STDIO_INLINE
; 1624 :     ;
; 1625 :     #else
; 1626 :         {
; 1627 :             return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1628 :         }
; 1629 :     #endif
; 1630 : 
; 1631 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1632 :             _Success_(return >= 0)
; 1633 :             int, vsnprintf_s,
; 1634 :             _Always_(_Post_z_)            char,        _Buffer,
; 1635 :             _In_                          size_t,      _BufferCount,
; 1636 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1637 :                                           va_list,     _ArgList
; 1638 :             )
; 1639 : 
; 1640 :     #endif
; 1641 : 
; 1642 :     _Check_return_opt_
; 1643 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_l(
; 1644 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1645 :         _In_opt_                                _locale_t   const _Locale,
; 1646 :                                                 va_list           _ArgList
; 1647 :         )
; 1648 :     #if defined _NO_CRT_STDIO_INLINE
; 1649 :     ;
; 1650 :     #else
; 1651 :     {
; 1652 :         int const _Result = __stdio_common_vsprintf(
; 1653 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1654 :             NULL, 0, _Format, _Locale, _ArgList);
; 1655 : 
; 1656 :         return _Result < 0 ? -1 : _Result;
; 1657 :     }
; 1658 :     #endif
; 1659 : 
; 1660 :     _Check_return_
; 1661 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf(
; 1662 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1663 :                                       va_list           _ArgList
; 1664 :         )
; 1665 :     #if defined _NO_CRT_STDIO_INLINE
; 1666 :     ;
; 1667 :     #else
; 1668 :     {
; 1669 :         return _vscprintf_l(_Format, NULL, _ArgList);
; 1670 :     }
; 1671 :     #endif
; 1672 : 
; 1673 :     _Check_return_opt_
; 1674 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p_l(
; 1675 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1676 :         _In_opt_                                _locale_t   const _Locale,
; 1677 :                                                 va_list           _ArgList
; 1678 :         )
; 1679 :     #if defined _NO_CRT_STDIO_INLINE
; 1680 :     ;
; 1681 :     #else
; 1682 :     {
; 1683 :         int const _Result = __stdio_common_vsprintf_p(
; 1684 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1685 :             NULL, 0, _Format, _Locale, _ArgList);
; 1686 : 
; 1687 :         return _Result < 0 ? -1 : _Result;
; 1688 :     }
; 1689 :     #endif
; 1690 : 
; 1691 :     _Check_return_
; 1692 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p(
; 1693 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1694 :                                       va_list           _ArgList
; 1695 :         )
; 1696 :     #if defined _NO_CRT_STDIO_INLINE
; 1697 :     ;
; 1698 :     #else
; 1699 :     {
; 1700 :         return _vscprintf_p_l(_Format, NULL, _ArgList);
; 1701 :     }
; 1702 :     #endif
; 1703 : 
; 1704 :     _Check_return_opt_
; 1705 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c_l(
; 1706 :         _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
; 1707 :         _In_                                    size_t      const _BufferCount,
; 1708 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1709 :         _In_opt_                                _locale_t   const _Locale,
; 1710 :                                                 va_list           _ArgList
; 1711 :         )
; 1712 :     #if defined _NO_CRT_STDIO_INLINE
; 1713 :     ;
; 1714 :     #else
; 1715 :     {
; 1716 :         int const _Result = __stdio_common_vsprintf(
; 1717 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1718 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1719 : 
; 1720 :         return _Result < 0 ? -1 : _Result;
; 1721 :     }
; 1722 :     #endif
; 1723 : 
; 1724 :     _Success_(return >= 0)
; 1725 :     _Check_return_opt_
; 1726 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c(
; 1727 :         _Out_writes_opt_(_BufferCount) char*       const _Buffer,
; 1728 :         _In_                           size_t      const _BufferCount,
; 1729 :         _In_z_ _Printf_format_string_  char const* const _Format,
; 1730 :                                        va_list           _ArgList
; 1731 :         )
; 1732 :     #if defined _NO_CRT_STDIO_INLINE
; 1733 :     ;
; 1734 :     #else
; 1735 :     {
; 1736 :         return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1737 :     }
; 1738 :     #endif
; 1739 : 
; 1740 :     _Success_(return >= 0)
; 1741 :     _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sprintf_s_l)
; 1742 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_l(
; 1743 :         _Pre_notnull_ _Always_(_Post_z_)        char*       const _Buffer,
; 1744 :         _In_z_ _Printf_format_string_params_(0) char const* const _Format,
; 1745 :         _In_opt_                                _locale_t   const _Locale,
; 1746 :         ...)
; 1747 :     #if defined _NO_CRT_STDIO_INLINE
; 1748 :     ;
; 1749 :     #else
; 1750 :     {
; 1751 :         int _Result;
; 1752 :         va_list _ArgList;
; 1753 :         __crt_va_start(_ArgList, _Locale);
; 1754 : 
; 1755 :         _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
; 1756 : 
; 1757 :         __crt_va_end(_ArgList);
; 1758 :         return _Result;
; 1759 :     }
; 1760 :     #endif
; 1761 : 
; 1762 :     _Success_(return >= 0)
; 1763 :     _Check_return_opt_
; 1764 :     _CRT_STDIO_INLINE int __CRTDECL sprintf(
; 1765 :         _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
; 1766 :         _In_z_ _Printf_format_string_    char const* const _Format,
; 1767 :         ...)
; 1768 :     #if defined _NO_CRT_STDIO_INLINE
; 1769 :     ;
; 1770 :     #else
; 1771 :     {
; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }
; 1781 :     #endif
; 1782 : 
; 1783 :     __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(
; 1784 :         _Success_(return >= 0)
; 1785 :         int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, sprintf, vsprintf,
; 1786 :         _Pre_notnull_ _Always_(_Post_z_), char,        _Buffer,
; 1787 :         _In_z_ _Printf_format_string_     char const*, _Format
; 1788 :         )
; 1789 : 
; 1790 :     _Success_(return >= 0)
; 1791 :     _Check_return_opt_
; 1792 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_s_l(
; 1793 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1794 :         _In_                                          size_t      const _BufferCount,
; 1795 :         _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
; 1796 :         _In_opt_                                      _locale_t   const _Locale,
; 1797 :         ...)
; 1798 :     #if defined _NO_CRT_STDIO_INLINE
; 1799 :     ;
; 1800 :     #else
; 1801 :     {
; 1802 :         int _Result;
; 1803 :         va_list _ArgList;
; 1804 :         __crt_va_start(_ArgList, _Locale);
; 1805 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1806 :         __crt_va_end(_ArgList);
; 1807 :         return _Result;
; 1808 :     }
; 1809 :     #endif
; 1810 : 
; 1811 :     #if __STDC_WANT_SECURE_LIB__
; 1812 : 
; 1813 :         _Success_(return >= 0)
; 1814 :         _Check_return_opt_
; 1815 :         _CRT_STDIO_INLINE int __CRTDECL sprintf_s(
; 1816 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1817 :             _In_                                          size_t      const _BufferCount,
; 1818 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1819 :             ...)
; 1820 :     #if defined _NO_CRT_STDIO_INLINE
; 1821 :     ;
; 1822 :     #else
; 1823 :         {
; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);
; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1828 :             __crt_va_end(_ArgList);
; 1829 :             return _Result;
; 1830 :         }
; 1831 :     #endif
; 1832 : 
; 1833 :     #endif
; 1834 : 
; 1835 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$sprintf_s@$0EAA@@@YAHAAY0EAA@DPBDZZ ENDP		; sprintf_s<1024>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPKHistoryList@@YAXPAD@Z
_TEXT	SEGMENT
_i$1$ = -152						; size = 4
_pkbuf$ = -148						; size = 128
_ibuf$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initPKHistoryList@@YAXPAD@Z PROC			; initPKHistoryList, COMDAT

; 12634: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 12635: 	int i = 0, j = 0;
; 12636: 	char pkbuf[128];
; 12637: 	char ibuf[16];
; 12638: 
; 12639: 	pkHistoryListProcNo = 1;
; 12640: 
; 12641: 	if (windowTypeWN != WINDOW_MESSAGETYPE_DAYACTION_PKHISTORYLIST)

  00013	83 3d 00 00 00
	00 6c		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 108 ; windowTypeWN, 0000006cH
  0001a	b8 01 00 00 00	 mov	 eax, 1
  0001f	53		 push	 ebx
  00020	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]
  00023	66 a3 00 00 00
	00		 mov	 WORD PTR ?pkHistoryListProcNo@@3FA, ax
  00029	74 22		 je	 SHORT $LN8@initPKHist

; 12642: 	{
; 12643: 		windowTypeWN = WINDOW_MESSAGETYPE_DAYACTION_PKHISTORYLIST;
; 12644: 		DeathAction(ptActMenuWin);

  0002b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00031	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?windowTypeWN@@3HA, 108 ; windowTypeWN, 0000006cH
  0003b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00040	83 c4 04	 add	 esp, 4

; 12645: 		ptActMenuWin = NULL;

  00043	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN8@initPKHist:

; 12651: 		pkHistoryList[i].name[0] = NULL;
; 12652: 		pkHistoryList[i].family[0] = NULL;
; 12653: 		pkHistoryList[i].rank[0] = NULL;
; 12654: 		pkHistoryList[i].score = 0;
; 12655: 	}
; 12656: 
; 12657: 	getStringToken(data, '|', 3, sizeof(ibuf) - 1, ibuf);

  0004d	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00050	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A, -1
  0005a	50		 push	 eax
  0005b	6a 0f		 push	 15			; 0000000fH
  0005d	6a 03		 push	 3
  0005f	6a 7c		 push	 124			; 0000007cH
  00061	53		 push	 ebx
  00062	c6 05 18 00 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+24, 0
  00069	c6 05 98 00 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+152, 0
  00070	c6 05 04 00 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+4, 0
  00077	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+20, 0
  00081	c7 05 18 01 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+280, -1
  0008b	c6 05 30 01 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+304, 0
  00092	c6 05 b0 01 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+432, 0
  00099	c6 05 1c 01 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+284, 0
  000a0	c7 05 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+300, 0
  000aa	c7 05 30 02 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+560, -1
  000b4	c6 05 48 02 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+584, 0
  000bb	c6 05 c8 02 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+712, 0
  000c2	c6 05 34 02 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+564, 0
  000c9	c7 05 44 02 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+580, 0
  000d3	c7 05 48 03 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+840, -1
  000dd	c6 05 60 03 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+864, 0
  000e4	c6 05 e0 03 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+992, 0
  000eb	c6 05 4c 03 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+844, 0
  000f2	c7 05 5c 03 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+860, 0
  000fc	c7 05 60 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1120, -1
  00106	c6 05 78 04 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1144, 0
  0010d	c6 05 f8 04 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1272, 0
  00114	c6 05 64 04 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1124, 0
  0011b	c7 05 74 04 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1140, 0
  00125	c7 05 78 05 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1400, -1
  0012f	c6 05 90 05 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1424, 0
  00136	c6 05 10 06 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1552, 0
  0013d	c6 05 7c 05 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1404, 0
  00144	c7 05 8c 05 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1420, 0
  0014e	c7 05 90 06 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1680, -1
  00158	c6 05 a8 06 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1704, 0
  0015f	c6 05 28 07 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1832, 0
  00166	c6 05 94 06 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1684, 0
  0016d	c7 05 a4 06 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1700, 0
  00177	c7 05 a8 07 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1960, -1
  00181	c6 05 c0 07 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1984, 0
  00188	c6 05 40 08 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2112, 0
  0018f	c6 05 ac 07 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1964, 0
  00196	c7 05 bc 07 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+1980, 0
  001a0	c7 05 c0 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2240, -1
  001aa	c6 05 d8 08 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2264, 0
  001b1	c6 05 58 09 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2392, 0
  001b8	c6 05 c4 08 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2244, 0
  001bf	c7 05 d4 08 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2260, 0
  001c9	c7 05 d8 09 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2520, -1
  001d3	c6 05 f0 09 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2544, 0
  001da	c6 05 70 0a 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2672, 0
  001e1	c6 05 dc 09 00
	00 00		 mov	 BYTE PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2524, 0
  001e8	c7 05 ec 09 00
	00 00 00 00 00	 mov	 DWORD PTR ?pkHistoryList@@3PAUTPKHistoryList@@A+2540, 0
  001f2	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12658: 	pkHistoryMaxSeason = atoi(ibuf);

  001f7	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 _atoi
  00200	a3 00 00 00 00	 mov	 DWORD PTR ?pkHistoryMaxSeason@@3HA, eax

; 12659: 	getStringToken(data, '|', 4, sizeof(ibuf) - 1, ibuf);

  00205	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00208	50		 push	 eax
  00209	6a 0f		 push	 15			; 0000000fH
  0020b	6a 04		 push	 4
  0020d	6a 7c		 push	 124			; 0000007cH
  0020f	53		 push	 ebx
  00210	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12660: 	pkHistoryPageNum = atoi(ibuf);

  00215	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00218	50		 push	 eax
  00219	e8 00 00 00 00	 call	 _atoi

; 12661: 
; 12662: 	getStringToken(data, '|', 5, sizeof(pkHistoryInfo) - 1, pkHistoryInfo);

  0021e	68 00 00 00 00	 push	 OFFSET ?pkHistoryInfo@@3PADA
  00223	6a 3f		 push	 63			; 0000003fH
  00225	6a 05		 push	 5
  00227	6a 7c		 push	 124			; 0000007cH
  00229	53		 push	 ebx
  0022a	a3 00 00 00 00	 mov	 DWORD PTR ?pkHistoryPageNum@@3HA, eax
  0022f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00234	83 c4 44	 add	 esp, 68			; 00000044H

; 12663: 	makeStringFromEscaped(pkHistoryInfo);

  00237	68 00 00 00 00	 push	 OFFSET ?pkHistoryInfo@@3PADA
  0023c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12664: 
; 12665: 	getStringToken(data, '|', 6, sizeof(ibuf) - 1, ibuf);

  00241	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00244	50		 push	 eax
  00245	6a 0f		 push	 15			; 0000000fH
  00247	6a 06		 push	 6
  00249	6a 7c		 push	 124			; 0000007cH
  0024b	53		 push	 ebx
  0024c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12666: 	pkHistoryPlayerNum = atoi(ibuf);

  00251	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00254	50		 push	 eax
  00255	e8 00 00 00 00	 call	 _atoi

; 12667: 
; 12668: 
; 12669: 	for (i = 0; i < pkHistoryPlayerNum; i++)

  0025a	33 c9		 xor	 ecx, ecx
  0025c	a3 00 00 00 00	 mov	 DWORD PTR ?pkHistoryPlayerNum@@3HA, eax
  00261	83 c4 1c	 add	 esp, 28			; 0000001cH
  00264	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  0026a	85 c0		 test	 eax, eax
  0026c	0f 8e e5 00 00
	00		 jle	 $LN6@initPKHist

; 12646: 	}
; 12647: 
; 12648: 	for (i = 0; i < 10; i++)
; 12649: 	{
; 12650: 		pkHistoryList[i].index = -1;

  00272	56		 push	 esi
  00273	57		 push	 edi
  00274	bf 04 00 00 00	 mov	 edi, OFFSET ?pkHistoryList@@3PAUTPKHistoryList@@A+4
  00279	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@initPKHist:

; 12670: 	{
; 12671: 		getStringToken(data, '|', 7 + i, sizeof(pkbuf) - 1, pkbuf);

  00280	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00286	50		 push	 eax
  00287	6a 7f		 push	 127			; 0000007fH
  00289	8d 41 07	 lea	 eax, DWORD PTR [ecx+7]
  0028c	50		 push	 eax
  0028d	6a 7c		 push	 124			; 0000007cH
  0028f	53		 push	 ebx
  00290	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12672: 
; 12673: 		getStringToken(pkbuf, ' ', 1, sizeof(ibuf) - 1, ibuf);

  00295	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00298	50		 push	 eax
  00299	6a 0f		 push	 15			; 0000000fH
  0029b	6a 01		 push	 1
  0029d	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002a3	6a 20		 push	 32			; 00000020H
  002a5	50		 push	 eax
  002a6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12674: 		pkHistoryList[i].index = atoi(ibuf);

  002ab	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 _atoi

; 12675: 
; 12676: 		getStringToken(pkbuf, ' ', 2, sizeof(pkHistoryList[i].rank) - 1, pkHistoryList[i].rank);

  002b4	57		 push	 edi
  002b5	6a 0f		 push	 15			; 0000000fH
  002b7	6a 02		 push	 2
  002b9	89 47 fc	 mov	 DWORD PTR [edi-4], eax
  002bc	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002c2	6a 20		 push	 32			; 00000020H
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  002ca	83 c4 40	 add	 esp, 64			; 00000040H

; 12677: 		makeStringFromEscaped(pkHistoryList[i].rank);

  002cd	57		 push	 edi
  002ce	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12678: 
; 12679: 		getStringToken(pkbuf, ' ', 3, sizeof(ibuf) - 1, ibuf);

  002d3	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  002d6	50		 push	 eax
  002d7	6a 0f		 push	 15			; 0000000fH
  002d9	6a 03		 push	 3
  002db	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002e1	6a 20		 push	 32			; 00000020H
  002e3	50		 push	 eax
  002e4	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12680: 		pkHistoryList[i].score = atoi(ibuf);

  002e9	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  002ec	50		 push	 eax
  002ed	e8 00 00 00 00	 call	 _atoi

; 12681: 
; 12682: 		getStringToken(pkbuf, ' ', 4, sizeof(pkHistoryList[i].name) - 1, pkHistoryList[i].name);

  002f2	8d 77 14	 lea	 esi, DWORD PTR [edi+20]
  002f5	89 47 10	 mov	 DWORD PTR [edi+16], eax
  002f8	56		 push	 esi
  002f9	6a 7f		 push	 127			; 0000007fH
  002fb	6a 04		 push	 4
  002fd	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00303	6a 20		 push	 32			; 00000020H
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12683: 		makeStringFromEscaped(pkHistoryList[i].name);

  0030b	56		 push	 esi
  0030c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12684: 
; 12685: 		getStringToken(pkbuf, ' ', 5, sizeof(pkHistoryList[i].family) - 1, pkHistoryList[i].family);

  00311	8d b7 94 00 00
	00		 lea	 esi, DWORD PTR [edi+148]
  00317	56		 push	 esi
  00318	6a 7f		 push	 127			; 0000007fH
  0031a	6a 05		 push	 5
  0031c	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00322	6a 20		 push	 32			; 00000020H
  00324	50		 push	 eax
  00325	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0032a	83 c4 48	 add	 esp, 72			; 00000048H

; 12686: 		makeStringFromEscaped(pkHistoryList[i].family);

  0032d	56		 push	 esi
  0032e	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00333	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  00339	83 c4 04	 add	 esp, 4
  0033c	41		 inc	 ecx
  0033d	81 c7 18 01 00
	00		 add	 edi, 280		; 00000118H
  00343	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00349	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?pkHistoryPlayerNum@@3HA
  0034f	0f 8c 2b ff ff
	ff		 jl	 $LL7@initPKHist
  00355	5f		 pop	 edi
  00356	5e		 pop	 esi
$LN6@initPKHist:

; 12687: 	}
; 12688: }

  00357	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0035a	33 cd		 xor	 ecx, ebp
  0035c	5b		 pop	 ebx
  0035d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00362	8b e5		 mov	 esp, ebp
  00364	5d		 pop	 ebp
  00365	c3		 ret	 0
?initPKHistoryList@@YAXPAD@Z ENDP			; initPKHistoryList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPKList@@YAXPAD@Z
_TEXT	SEGMENT
_data$GSCopy$1$ = -152					; size = 4
_pkbuf$ = -148						; size = 128
_ibuf$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initPKList@@YAXPAD@Z PROC				; initPKList, COMDAT

; 12582: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 12583: 	int i = 0, j = 0;
; 12584: 	char pkbuf[128];
; 12585: 	char ibuf[16];
; 12586: 
; 12587: 	pkListProcNo = 1;
; 12588: 
; 12589: 	if (windowTypeWN != WINDOW_MESSAGETYPE_DAYACTION_PKLIST)

  00013	83 3d 00 00 00
	00 6b		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 107 ; windowTypeWN, 0000006bH
  0001a	b8 01 00 00 00	 mov	 eax, 1
  0001f	53		 push	 ebx
  00020	56		 push	 esi
  00021	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00024	89 b5 68 ff ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], esi
  0002a	66 a3 00 00 00
	00		 mov	 WORD PTR ?pkListProcNo@@3FA, ax
  00030	74 22		 je	 SHORT $LN8@initPKList

; 12590: 	{
; 12591: 		windowTypeWN = WINDOW_MESSAGETYPE_DAYACTION_PKLIST;
; 12592: 		DeathAction(ptActMenuWin);

  00032	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00038	c7 05 00 00 00
	00 6b 00 00 00	 mov	 DWORD PTR ?windowTypeWN@@3HA, 107 ; windowTypeWN, 0000006bH
  00042	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00047	83 c4 04	 add	 esp, 4

; 12593: 		ptActMenuWin = NULL;

  0004a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN8@initPKList:

; 12599: 		pkPlayerList[i].name[0] = NULL;
; 12600: 		pkPlayerList[i].level = -1;
; 12601: 		pkPlayerList[i].family[0] = NULL;
; 12602: 		pkPlayerList[i].trans = -1;
; 12603: 	}
; 12604: 
; 12605: 	getStringToken(data, '|', 3, sizeof(ibuf) - 1, ibuf);

  00054	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00057	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A, -1
  00061	50		 push	 eax
  00062	6a 0f		 push	 15			; 0000000fH
  00064	6a 03		 push	 3
  00066	6a 7c		 push	 124			; 0000007cH
  00068	56		 push	 esi
  00069	c6 05 04 00 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+4, 0
  00070	c7 05 08 01 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+264, -1
  0007a	c6 05 84 00 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+132, 0
  00081	c7 05 04 01 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+260, -1
  0008b	c7 05 0c 01 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+268, -1
  00095	c6 05 10 01 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+272, 0
  0009c	c7 05 14 02 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+532, -1
  000a6	c6 05 90 01 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+400, 0
  000ad	c7 05 10 02 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+528, -1
  000b7	c7 05 18 02 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+536, -1
  000c1	c6 05 1c 02 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+540, 0
  000c8	c7 05 20 03 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+800, -1
  000d2	c6 05 9c 02 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+668, 0
  000d9	c7 05 1c 03 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+796, -1
  000e3	c7 05 24 03 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+804, -1
  000ed	c6 05 28 03 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+808, 0
  000f4	c7 05 2c 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1068, -1
  000fe	c6 05 a8 03 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+936, 0
  00105	c7 05 28 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1064, -1
  0010f	c7 05 30 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1072, -1
  00119	c6 05 34 04 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1076, 0
  00120	c7 05 38 05 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1336, -1
  0012a	c6 05 b4 04 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1204, 0
  00131	c7 05 34 05 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1332, -1
  0013b	c7 05 3c 05 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1340, -1
  00145	c6 05 40 05 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1344, 0
  0014c	c7 05 44 06 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1604, -1
  00156	c6 05 c0 05 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1472, 0
  0015d	c7 05 40 06 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1600, -1
  00167	c7 05 48 06 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1608, -1
  00171	c6 05 4c 06 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1612, 0
  00178	c7 05 50 07 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1872, -1
  00182	c6 05 cc 06 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1740, 0
  00189	c7 05 4c 07 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1868, -1
  00193	c7 05 54 07 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1876, -1
  0019d	c6 05 58 07 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+1880, 0
  001a4	c7 05 5c 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2140, -1
  001ae	c6 05 d8 07 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2008, 0
  001b5	c7 05 58 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2136, -1
  001bf	c7 05 60 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2144, -1
  001c9	c6 05 64 08 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2148, 0
  001d0	c7 05 68 09 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2408, -1
  001da	c6 05 e4 08 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2276, 0
  001e1	c7 05 64 09 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2404, -1
  001eb	c7 05 6c 09 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2412, -1
  001f5	c6 05 70 09 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2416, 0
  001fc	c7 05 74 0a 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2676, -1
  00206	c6 05 f0 09 00
	00 00		 mov	 BYTE PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2544, 0
  0020d	c7 05 70 0a 00
	00 ff ff ff ff	 mov	 DWORD PTR ?pkPlayerList@@3PAUTPKPlayerList@@A+2672, -1
  00217	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12606: 	pkPlayerTotal = atoi(ibuf);

  0021c	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0021f	50		 push	 eax
  00220	e8 00 00 00 00	 call	 _atoi
  00225	a3 00 00 00 00	 mov	 DWORD PTR ?pkPlayerTotal@@3HA, eax

; 12607: 	getStringToken(data, '|', 4, sizeof(ibuf) - 1, ibuf);

  0022a	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0022d	50		 push	 eax
  0022e	6a 0f		 push	 15			; 0000000fH
  00230	6a 04		 push	 4
  00232	6a 7c		 push	 124			; 0000007cH
  00234	56		 push	 esi
  00235	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12608: 	pkPageNum = atoi(ibuf);

  0023a	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0023d	50		 push	 eax
  0023e	e8 00 00 00 00	 call	 _atoi
  00243	a3 00 00 00 00	 mov	 DWORD PTR ?pkPageNum@@3HA, eax

; 12609: 	getStringToken(data, '|', 5, sizeof(ibuf) - 1, ibuf);

  00248	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0024b	50		 push	 eax
  0024c	6a 0f		 push	 15			; 0000000fH
  0024e	6a 05		 push	 5
  00250	6a 7c		 push	 124			; 0000007cH
  00252	56		 push	 esi
  00253	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00258	83 c4 44	 add	 esp, 68			; 00000044H

; 12610: 	pkPlayerNum = atoi(ibuf);

  0025b	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 _atoi
  00264	83 c4 04	 add	 esp, 4
  00267	a3 00 00 00 00	 mov	 DWORD PTR ?pkPlayerNum@@3HA, eax

; 12611: 
; 12612: 	for (i = 0; i < pkPlayerNum; i++)

  0026c	33 db		 xor	 ebx, ebx
  0026e	85 c0		 test	 eax, eax
  00270	0f 8e e6 00 00
	00		 jle	 $LN6@initPKList

; 12594: 	}
; 12595: 
; 12596: 	for (i = 0; i < 10; i++)
; 12597: 	{
; 12598: 		pkPlayerList[i].index = -1;

  00276	57		 push	 edi
  00277	bf 04 00 00 00	 mov	 edi, OFFSET ?pkPlayerList@@3PAUTPKPlayerList@@A+4
  0027c	0f 1f 40 00	 npad	 4
$LL7@initPKList:

; 12613: 	{
; 12614: 		getStringToken(data, '|', 6 + i, sizeof(pkbuf) - 1, pkbuf);

  00280	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00286	50		 push	 eax
  00287	6a 7f		 push	 127			; 0000007fH
  00289	8d 43 06	 lea	 eax, DWORD PTR [ebx+6]
  0028c	50		 push	 eax
  0028d	6a 7c		 push	 124			; 0000007cH
  0028f	56		 push	 esi
  00290	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12615: 
; 12616: 		getStringToken(pkbuf, ' ', 1, sizeof(ibuf) - 1, ibuf);

  00295	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00298	50		 push	 eax
  00299	6a 0f		 push	 15			; 0000000fH
  0029b	6a 01		 push	 1
  0029d	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002a3	6a 20		 push	 32			; 00000020H
  002a5	50		 push	 eax
  002a6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12617: 		pkPlayerList[i].index = atoi(ibuf);

  002ab	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 _atoi

; 12618: 
; 12619: 		getStringToken(pkbuf, ' ', 2, sizeof(pkPlayerList[i].name) - 1, pkPlayerList[i].name);

  002b4	57		 push	 edi
  002b5	6a 7f		 push	 127			; 0000007fH
  002b7	6a 02		 push	 2
  002b9	89 47 fc	 mov	 DWORD PTR [edi-4], eax
  002bc	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002c2	6a 20		 push	 32			; 00000020H
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  002ca	83 c4 40	 add	 esp, 64			; 00000040H

; 12620: 		makeStringFromEscaped(pkPlayerList[i].name);

  002cd	57		 push	 edi
  002ce	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12621: 
; 12622: 		getStringToken(pkbuf, ' ', 3, sizeof(pkPlayerList[i].family) - 1, pkPlayerList[i].family);

  002d3	8d b7 80 00 00
	00		 lea	 esi, DWORD PTR [edi+128]
  002d9	56		 push	 esi
  002da	6a 7f		 push	 127			; 0000007fH
  002dc	6a 03		 push	 3
  002de	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  002e4	6a 20		 push	 32			; 00000020H
  002e6	50		 push	 eax
  002e7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12623: 		makeStringFromEscaped(pkPlayerList[i].family);

  002ec	56		 push	 esi
  002ed	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12624: 
; 12625: 		getStringToken(pkbuf, ' ', 4, sizeof(ibuf) - 1, ibuf);

  002f2	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  002f5	50		 push	 eax
  002f6	6a 0f		 push	 15			; 0000000fH
  002f8	6a 04		 push	 4
  002fa	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00300	6a 20		 push	 32			; 00000020H
  00302	50		 push	 eax
  00303	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12626: 		pkPlayerList[i].trans = atoi(ibuf);

  00308	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0030b	50		 push	 eax
  0030c	e8 00 00 00 00	 call	 _atoi
  00311	89 87 00 01 00
	00		 mov	 DWORD PTR [edi+256], eax

; 12627: 
; 12628: 		getStringToken(pkbuf, ' ', 5, sizeof(ibuf) - 1, ibuf);

  00317	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0031a	50		 push	 eax
  0031b	6a 0f		 push	 15			; 0000000fH
  0031d	6a 05		 push	 5
  0031f	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _pkbuf$[ebp]
  00325	6a 20		 push	 32			; 00000020H
  00327	50		 push	 eax
  00328	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0032d	83 c4 48	 add	 esp, 72			; 00000048H

; 12629: 		pkPlayerList[i].level = atoi(ibuf);

  00330	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00333	50		 push	 eax
  00334	e8 00 00 00 00	 call	 _atoi
  00339	8b b5 68 ff ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  0033f	43		 inc	 ebx
  00340	89 87 04 01 00
	00		 mov	 DWORD PTR [edi+260], eax
  00346	83 c4 04	 add	 esp, 4
  00349	81 c7 0c 01 00
	00		 add	 edi, 268		; 0000010cH
  0034f	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?pkPlayerNum@@3HA
  00355	0f 8c 25 ff ff
	ff		 jl	 $LL7@initPKList
  0035b	5f		 pop	 edi
$LN6@initPKList:

; 12630: 	}
; 12631: }

  0035c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0035f	5e		 pop	 esi
  00360	33 cd		 xor	 ecx, ebp
  00362	5b		 pop	 ebx
  00363	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00368	8b e5		 mov	 esp, ebp
  0036a	5d		 pop	 ebp
  0036b	c3		 ret	 0
?initPKList@@YAXPAD@Z ENDP				; initPKList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closePKHistoryList@@YAXXZ
_TEXT	SEGMENT
?closePKHistoryList@@YAXXZ PROC				; closePKHistoryList, COMDAT

; 12571: 	play_se(203, 320, 240);	// ?????î¼???

  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	68 40 01 00 00	 push	 320			; 00000140H
  0000a	68 cb 00 00 00	 push	 203			; 000000cbH
  0000f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 12572: 	pkHistoryListProcNo = 0;
; 12573: 	windowTypeWN = -1;
; 12574: 	DeathAction(ptActMenuWin);

  00014	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	33 c0		 xor	 eax, eax
  0001c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00026	66 a3 00 00 00
	00		 mov	 WORD PTR ?pkHistoryListProcNo@@3FA, ax
  0002c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12575: 	ptActMenuWin = NULL;
; 12576: 	DeathAction(pActPet11);

  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet11@@3PAUaction@@A
  00037	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00041	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00046	83 c4 14	 add	 esp, 20			; 00000014H

; 12577: 	pActPet11 = NULL;

  00049	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0

; 12578: 	//GetKeyInputFocus( &MyChatBuffer );
; 12579: }

  00053	c3		 ret	 0
?closePKHistoryList@@YAXXZ ENDP				; closePKHistoryList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closePKList@@YAXXZ
_TEXT	SEGMENT
?closePKList@@YAXXZ PROC				; closePKList, COMDAT

; 12559: 	play_se(203, 320, 240);	// ?????î¼???

  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	68 40 01 00 00	 push	 320			; 00000140H
  0000a	68 cb 00 00 00	 push	 203			; 000000cbH
  0000f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 12560: 	pkListProcNo = 0;
; 12561: 	windowTypeWN = -1;
; 12562: 	DeathAction(ptActMenuWin);

  00014	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	33 c0		 xor	 eax, eax
  0001c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00026	66 a3 00 00 00
	00		 mov	 WORD PTR ?pkListProcNo@@3FA, ax
  0002c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12563: 	ptActMenuWin = NULL;
; 12564: 	DeathAction(pActPet11);

  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet11@@3PAUaction@@A
  00037	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00041	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00046	83 c4 14	 add	 esp, 20			; 00000014H

; 12565: 	pActPet11 = NULL;

  00049	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0

; 12566: 	//GetKeyInputFocus( &MyChatBuffer );
; 12567: }

  00053	c3		 ret	 0
?closePKList@@YAXXZ ENDP				; closePKList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closeFamilyList@@YAXXZ
_TEXT	SEGMENT
?closeFamilyList@@YAXXZ PROC				; closeFamilyList, COMDAT

; 12515: 	play_se(203, 320, 240);	// ?????î¼???

  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	68 40 01 00 00	 push	 320			; 00000140H
  0000a	68 cb 00 00 00	 push	 203			; 000000cbH
  0000f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 12516: 	familyListProcNo = 0;
; 12517: 	windowTypeWN = -1;
; 12518: 	DeathAction(ptActMenuWin);

  00014	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	33 c0		 xor	 eax, eax
  0001c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00026	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  0002c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12519: 	ptActMenuWin = NULL;
; 12520: 	DeathAction(pActPet11);

  00031	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet11@@3PAUaction@@A
  00037	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00041	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00046	83 c4 14	 add	 esp, 20			; 00000014H

; 12521: 	pActPet11 = NULL;

  00049	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0

; 12522: 	//GetKeyInputFocus( &MyChatBuffer );
; 12523: }

  00053	c3		 ret	 0
?closeFamilyList@@YAXXZ ENDP				; closeFamilyList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?closeFamilyAddWN@@YAXXZ
_TEXT	SEGMENT
?closeFamilyAddWN@@YAXXZ PROC				; closeFamilyAddWN, COMDAT

; 12170: 	play_se(203, 320, 240);

  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	68 40 01 00 00	 push	 320			; 00000140H
  0000a	68 cb 00 00 00	 push	 203			; 000000cbH
  0000f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 12171: 	DeathAction(ptActMenuWin);

  00014	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12172: 	DeathAction(pActPet10);

  0001f	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet10@@3PAUaction@@A
  00025	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12173: 	pActPet10 = NULL;
; 12174: 	ptActMenuWin = NULL;
; 12175: 	windowTypeWN = -1;
; 12176: 	GetKeyInputFocus(&MyChatBuffer);

  0002a	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  0002f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet10@@3PAUaction@@A, 0
  00039	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00043	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0004d	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00052	83 c4 18	 add	 esp, 24			; 00000018H

; 12177: }

  00055	c3		 ret	 0
?closeFamilyAddWN@@YAXXZ ENDP				; closeFamilyAddWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?StockDispVLine@@YAXHHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_height$ = 16						; size = 4
?StockDispVLine@@YAXHHH@Z PROC				; StockDispVLine, COMDAT

; 12129: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 12130: 	int i = 0;
; 12131: 	for (i = 0; i < height; i++)

  00004	8b 7d 10	 mov	 edi, DWORD PTR _height$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	7e 32		 jle	 SHORT $LN3@StockDispV
  0000b	53		 push	 ebx
  0000c	8b 5d 08	 mov	 ebx, DWORD PTR _x$[ebp]
  0000f	56		 push	 esi
  00010	8b 75 0c	 mov	 esi, DWORD PTR _y$[ebp]
  00013	83 c3 20	 add	 ebx, 32			; 00000020H
  00016	83 c6 18	 add	 esi, 24			; 00000018H
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@StockDispV:

; 12132: 		StockDispBuffer(x + 32, y + 24 + (i * 48), DISP_PRIO_IME3, 26024, 0);

  00020	6a 00		 push	 0
  00022	68 a8 65 00 00	 push	 26024			; 000065a8H
  00027	6a 69		 push	 105			; 00000069H
  00029	56		 push	 esi
  0002a	53		 push	 ebx
  0002b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00030	83 c4 14	 add	 esp, 20			; 00000014H
  00033	83 c6 30	 add	 esi, 48			; 00000030H
  00036	83 ef 01	 sub	 edi, 1
  00039	75 e5		 jne	 SHORT $LL4@StockDispV
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
$LN3@StockDispV:
  0003d	5f		 pop	 edi

; 12133: }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?StockDispVLine@@YAXHHH@Z ENDP				; StockDispVLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?StockDispHLine@@YAXHHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_width$ = 16						; size = 4
?StockDispHLine@@YAXHHH@Z PROC				; StockDispHLine, COMDAT

; 12122: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 12123: 	int i = 0;
; 12124: 	for (i = 0; i < width; i++)

  00004	8b 7d 10	 mov	 edi, DWORD PTR _width$[ebp]
  00007	85 ff		 test	 edi, edi
  00009	7e 32		 jle	 SHORT $LN3@StockDispH
  0000b	53		 push	 ebx
  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _y$[ebp]
  0000f	56		 push	 esi
  00010	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]
  00013	83 c3 18	 add	 ebx, 24			; 00000018H
  00016	83 c6 20	 add	 esi, 32			; 00000020H
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@StockDispH:

; 12125: 		StockDispBuffer(x + 32 + (i * 64), y + 24, DISP_PRIO_IME3, 26022, 0);

  00020	6a 00		 push	 0
  00022	68 a6 65 00 00	 push	 26022			; 000065a6H
  00027	6a 69		 push	 105			; 00000069H
  00029	53		 push	 ebx
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00030	83 c4 14	 add	 esp, 20			; 00000014H
  00033	83 c6 40	 add	 esi, 64			; 00000040H
  00036	83 ef 01	 sub	 edi, 1
  00039	75 e5		 jne	 SHORT $LL4@StockDispH
  0003b	5e		 pop	 esi
  0003c	5b		 pop	 ebx
$LN3@StockDispH:
  0003d	5f		 pop	 edi

; 12126: }

  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
?StockDispHLine@@YAXHHH@Z ENDP				; StockDispHLine
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?poolShopWindow4@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -556					; size = 8
_prevBtnGraNo$ = -548					; size = 8
_focusId$1$ = -540					; size = 4
tv1666 = -536						; size = 4
_id$1$ = -536						; size = 4
_itemMaxFlag$ = -536					; size = 2
tv1650 = -532						; size = 4
_itemMaxFlag$1$ = -532					; size = 4
_pushId$1$ = -528					; size = 4
$T1 = -524						; size = 4
_selId$1$ = -524					; size = 4
tv1674 = -520						; size = 4
$T2 = -520						; size = 4
_tmsg$3 = -516						; size = 256
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?poolShopWindow4@@YAHXZ PROC				; poolShopWindow4, COMDAT

; 11796: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 02 00
	00		 sub	 esp, 556		; 0000022cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 11797: 	static int x, y, w, h;
; 11798: 	static int btnId[3];
; 11799: 	int id;
; 11800: 	int pushId;
; 11801: 	int focusId;
; 11802: 	int selId;
; 11803: 	int i, j;
; 11804: 	int ret = 0;
; 11805: 	char tmsg[256];
; 11806: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 11807: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 11808: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 11809: 	int color;
; 11810: 	int prevBtn, nextBtn;
; 11811: 	int x1, y1, x2, y2;
; 11812: 	short itemMaxFlag;
; 11813: 
; 11814: 	if (poolShopWindow4ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?poolShopWindow4ProcNo@@3FA, 0 ; poolShopWindow4ProcNo
  0001b	c7 85 dc fd ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00025	c7 85 e0 fd ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  0002f	c7 85 d4 fd ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00039	c7 85 d8 fd ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00043	0f 85 80 00 00
	00		 jne	 $LN115@poolShopWi

; 11815: 	{
; 11816: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 11817: 		{
; 11818: 			btnId[i] = -2;
; 11819: 		}
; 11820: 
; 11821: 		// ??????î
; 11822: 		w = 432;
; 11823: 		h = 428;
; 11824: 		x = (640 - w) / 2;
; 11825: 		y = (456 - h) / 2;
; 11826: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00049	6a ff		 push	 -1
  0004b	6a 00		 push	 0
  0004d	68 ac 01 00 00	 push	 428			; 000001acH
  00052	68 b0 01 00 00	 push	 432			; 000001b0H
  00057	6a 0e		 push	 14			; 0000000eH
  00059	6a 68		 push	 104			; 00000068H
  0005b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA, -2 ; fffffffeH
  00065	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0006f	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00079	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??poolShopWindow4@@YAHXZ@4HA, 432 ; 000001b0H
  00083	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??poolShopWindow4@@YAHXZ@4HA, 428 ; 000001acH
  0008d	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA, 104 ; 00000068H
  00097	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA, 14 ; 0000000eH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 11827: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 11828: 		x = ptActMenuWin->x;

  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA, ecx

; 11829: 		y = ptActMenuWin->y;

  000b7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 11830: #endif
; 11831: 		poolShopWindow4ProcNo++;

  000ba	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?poolShopWindow4ProcNo@@3FA ; poolShopWindow4ProcNo
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA, ecx
  000c7	eb 05		 jmp	 SHORT $LN23@poolShopWi
$LN115@poolShopWi:

; 11797: 	static int x, y, w, h;
; 11798: 	static int btnId[3];
; 11799: 	int id;
; 11800: 	int pushId;
; 11801: 	int focusId;
; 11802: 	int selId;
; 11803: 	int i, j;
; 11804: 	int ret = 0;
; 11805: 	char tmsg[256];
; 11806: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 11807: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 11808: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 11809: 	int color;
; 11810: 	int prevBtn, nextBtn;
; 11811: 	int x1, y1, x2, y2;
; 11812: 	short itemMaxFlag;
; 11813: 
; 11814: 	if (poolShopWindow4ProcNo == 0)

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN23@poolShopWi:
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	57		 push	 edi

; 11832: 	}
; 11833: 
; 11834: 
; 11835: 	if (ptActMenuWin != NULL)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 38 06 00
	00		 je	 $LN55@poolShopWi

; 11836: 	{
; 11837: 		id = -1;

  000d9	83 cb ff	 or	 ebx, -1

; 11838: 		pushId = -1;

  000dc	0b cb		 or	 ecx, ebx

; 11839: 		focusId = -1;

  000de	89 9d e4 fd ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx

; 11840: 		selId = -1;

  000e4	0b f3		 or	 esi, ebx
  000e6	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx

; 11841: 
; 11842: 		if (ptActMenuWin->hp >= 1)

  000ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000f0	89 b5 f4 fd ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi
  000f6	0f 8c 66 01 00
	00		 jl	 $LN117@poolShopWi

; 11843: 		{
; 11844: 			// ????????????î??
; 11845: 			for (i = MAX_ITEMSTART, j = 0; i < MAX_ITEM; i++)

  000fc	33 f6		 xor	 esi, esi
  000fe	ba 78 10 00 00	 mov	 edx, OFFSET ?pc@@3UPC@@A+4216
  00103	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL81@poolShopWi:

; 11846: 			{
; 11847: 				if (pc.item[i].useFlag)

  00110	66 83 ba 84 fe
	ff ff 00	 cmp	 WORD PTR [edx-380], 0
  00118	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0011b	0f 44 c6	 cmove	 eax, esi
  0011e	66 83 3a 00	 cmp	 WORD PTR [edx], 0
  00122	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00125	0f 44 c8	 cmove	 ecx, eax
  00128	66 83 ba 7c 01
	00 00 00	 cmp	 WORD PTR [edx+380], 0
  00130	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00133	0f 44 c1	 cmove	 eax, ecx
  00136	66 83 ba f8 02
	00 00 00	 cmp	 WORD PTR [edx+760], 0
  0013e	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00141	0f 44 c8	 cmove	 ecx, eax
  00144	66 83 ba 74 04
	00 00 00	 cmp	 WORD PTR [edx+1140], 0
  0014c	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0014f	0f 44 f1	 cmove	 esi, ecx
  00152	81 c2 6c 07 00
	00		 add	 edx, 1900		; 0000076cH
  00158	81 fa 44 53 00
	00		 cmp	 edx, OFFSET ?pc@@3UPC@@A+21316
  0015e	7c b0		 jl	 SHORT $LL81@poolShopWi

; 11848: 				{
; 11849: 					j++;
; 11850: 				}
; 11851: 			}
; 11852: 			itemMaxFlag = 0;
; 11853: 			if (j >= MAX_ITEM - MAX_ITEMSTART)
; 11854: 				itemMaxFlag = 1;
; 11855: 
; 11856: 			// ????î±î¶îî
; 11857: 			//id = selGraId( btnId, sizeof( btnId )/sizeof( int ) );
; 11858: 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  00160	33 c0		 xor	 eax, eax
  00162	83 fe 2d	 cmp	 esi, 45			; 0000002dH
  00165	6a 03		 push	 3
  00167	0f 9d c0	 setge	 al
  0016a	0f b7 c0	 movzx	 eax, ax
  0016d	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA
  00172	89 85 ec fd ff
	ff		 mov	 DWORD PTR tv1650[ebp], eax
  00178	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 11859: 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  0017d	6a 03		 push	 3
  0017f	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA
  00184	89 85 e8 fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  0018a	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 11860: 
; 11861: 			j = shopWondow2Page * MAX_POOL_SHOP_ITEM;

  0018f	0f bf 3d 00 00
	00 00		 movsx	 edi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00196	33 c9		 xor	 ecx, ecx
  00198	c1 e7 03	 shl	 edi, 3
  0019b	83 c4 10	 add	 esp, 16			; 00000010H
  0019e	69 df 88 00 00
	00		 imul	 ebx, edi, 136
  001a4	89 85 f0 fd ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  001aa	89 8d f8 fd ff
	ff		 mov	 DWORD PTR tv1674[ebp], ecx
  001b0	81 c3 0c 00 00
	00		 add	 ebx, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+12
$LL10@poolShopWi:

; 11863: 			{
; 11864: 				if (poolItem[j + i].name[0] != '\0')

  001b6	80 7b 04 00	 cmp	 BYTE PTR [ebx+4], 0
  001ba	74 6d		 je	 SHORT $LN8@poolShopWi

; 11865: 				{
; 11866: 					x1 = x + 32;
; 11867: 					y1 = y + i * 21 + 116;

  001bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  001c1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  001c7	83 c0 74	 add	 eax, 116		; 00000074H
  001ca	03 c8		 add	 ecx, eax
  001cc	83 c2 20	 add	 edx, 32			; 00000020H

; 11868: 					x2 = x1 + 372;
; 11869: 					y2 = y1 + 20;
; 11870: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001cf	6a 6b		 push	 107			; 0000006bH
  001d1	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  001d4	50		 push	 eax
  001d5	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  001db	50		 push	 eax
  001dc	51		 push	 ecx
  001dd	52		 push	 edx
  001de	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001e3	83 c4 14	 add	 esp, 20			; 00000014H
  001e6	85 c0		 test	 eax, eax
  001e8	74 39		 je	 SHORT $LN119@poolShopWi

; 11871: 					{
; 11872: 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  001ea	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001f1	74 2a		 je	 SHORT $LN32@poolShopWi

; 11873: 						{
; 11874: 							if (poolItem[j + i].poolFlag == 0
; 11875: 								&& !itemMaxFlag)

  001f3	66 83 3b 00	 cmp	 WORD PTR [ebx], 0
  001f7	75 0d		 jne	 SHORT $LN31@poolShopWi
  001f9	83 fe 2d	 cmp	 esi, 45			; 0000002dH
  001fc	7d 08		 jge	 SHORT $LN31@poolShopWi

; 11876: 							{
; 11877: 								selId = j + i;

  001fe	89 bd f4 fd ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], edi

; 11878: 							}

  00204	eb 17		 jmp	 SHORT $LN32@poolShopWi
$LN31@poolShopWi:

; 11879: 							else
; 11880: 							{
; 11881: 								play_se(220, 320, 240);	// ???

  00206	68 f0 00 00 00	 push	 240			; 000000f0H
  0020b	68 40 01 00 00	 push	 320			; 00000140H
  00210	68 dc 00 00 00	 push	 220			; 000000dcH
  00215	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0021a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN32@poolShopWi:

; 11882: 							}
; 11883: 						}
; 11884: 						focusId = j + i;

  0021d	89 bd e4 fd ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], edi
$LN119@poolShopWi:

; 11862: 			for (i = 0; i < MAX_POOL_SHOP_ITEM; i++)

  00223	8b 8d f8 fd ff
	ff		 mov	 ecx, DWORD PTR tv1674[ebp]
$LN8@poolShopWi:
  00229	83 c1 15	 add	 ecx, 21			; 00000015H
  0022c	81 c3 88 00 00
	00		 add	 ebx, 136		; 00000088H
  00232	47		 inc	 edi
  00233	89 8d f8 fd ff
	ff		 mov	 DWORD PTR tv1674[ebp], ecx
  00239	81 f9 a8 00 00
	00		 cmp	 ecx, 168		; 000000a8H
  0023f	0f 8c 71 ff ff
	ff		 jl	 $LL10@poolShopWi

; 12053: 				StockFontBuffer(x + 34 + 250, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  00245	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR tv1650[ebp]
  0024b	8b 9d e8 fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  00251	8b b5 f4 fd ff
	ff		 mov	 esi, DWORD PTR _selId$1$[ebp]
  00257	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  0025d	0f b7 f8	 movzx	 edi, ax
  00260	eb 06		 jmp	 SHORT $LN120@poolShopWi
$LN117@poolShopWi:

; 11841: 
; 11842: 		if (ptActMenuWin->hp >= 1)

  00262	8b bd e8 fd ff
	ff		 mov	 edi, DWORD PTR _itemMaxFlag$[ebp]
$LN120@poolShopWi:

; 11885: 					}
; 11886: 				}
; 11887: 			}
; 11888: 		}
; 11889: 
; 11890: 
; 11891: 		// î·??????
; 11892: 		if (joy_con[0] & JOY_A)

  00268	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  0026d	89 bd ec fd ff
	ff		 mov	 DWORD PTR _itemMaxFlag$1$[ebp], edi
  00273	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  00278	74 18		 je	 SHORT $LN34@poolShopWi

; 11893: 		{
; 11894: 			pushId = 0;

  0027a	33 c9		 xor	 ecx, ecx

; 11895: 			if (joy_auto[0] & JOY_A)

  0027c	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  00286	89 8d f0 fd ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx
  0028c	74 08		 je	 SHORT $LN107@poolShopWi

; 11896: 			{
; 11897: 				id = 0;

  0028e	33 db		 xor	 ebx, ebx

; 11898: 			}
; 11899: 		}
; 11900: 		if (pushId == 0)

  00290	eb 08		 jmp	 SHORT $LN108@poolShopWi
$LN34@poolShopWi:
  00292	85 c9		 test	 ecx, ecx
  00294	75 50		 jne	 SHORT $LN35@poolShopWi
$LN107@poolShopWi:

; 11901: 		{
; 11902: 			prevBtn = 1;
; 11903: 			if (id == 0)

  00296	85 db		 test	 ebx, ebx
  00298	75 31		 jne	 SHORT $LN118@poolShopWi
$LN108@poolShopWi:

; 11904: 			{
; 11905: 				if (shopWondow2Page > 0)

  0029a	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  002a1	66 85 d2	 test	 dx, dx
  002a4	7e 2c		 jle	 SHORT $LN38@poolShopWi

; 11906: 				{
; 11907: 					shopWondow2Page--;
; 11908: 					play_se(217, 320, 240);	// ?????

  002a6	68 f0 00 00 00	 push	 240			; 000000f0H
  002ab	66 4a		 dec	 dx
  002ad	68 40 01 00 00	 push	 320			; 00000140H
  002b2	68 d9 00 00 00	 push	 217			; 000000d9H
  002b7	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  002be	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  002c8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN118@poolShopWi:

; 11909: 				}
; 11910: 			}
; 11911: 		}

  002cb	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN38@poolShopWi:
  002d2	8d 8d e0 fd ff
	ff		 lea	 ecx, DWORD PTR _prevBtnGraNo$[ebp+4]
  002d8	89 8d f4 fd ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  002de	8b 8d f0 fd ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  002e4	eb 13		 jmp	 SHORT $LN36@poolShopWi
$LN35@poolShopWi:

; 11912: 		else
; 11913: 		{
; 11914: 			prevBtn = 0;

  002e6	8d 95 dc fd ff
	ff		 lea	 edx, DWORD PTR _prevBtnGraNo$[ebp]
  002ec	89 95 f4 fd ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  002f2	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN36@poolShopWi:

; 11915: 		}
; 11916: 		// ???????
; 11917: 		if (joy_con[0] & JOY_B)

  002f9	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  002fe	74 13		 je	 SHORT $LN40@poolShopWi

; 11918: 		{
; 11919: 			pushId = 1;
; 11920: 			if (joy_auto[0] & JOY_B)

  00300	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  0030a	74 0c		 je	 SHORT $LN109@poolShopWi

; 11921: 			{
; 11922: 				id = 1;

  0030c	bb 01 00 00 00	 mov	 ebx, 1

; 11923: 			}
; 11924: 		}
; 11925: 		if (pushId == 1)

  00311	eb 0a		 jmp	 SHORT $LN110@poolShopWi
$LN40@poolShopWi:
  00313	83 f9 01	 cmp	 ecx, 1
  00316	75 3c		 jne	 SHORT $LN41@poolShopWi
$LN109@poolShopWi:

; 11926: 		{
; 11927: 			nextBtn = 1;
; 11928: 			if (id == 1)

  00318	83 fb 01	 cmp	 ebx, 1
  0031b	75 2f		 jne	 SHORT $LN44@poolShopWi
$LN110@poolShopWi:

; 11929: 			{
; 11930: 				if (shopWondow2Page + 1 < shopWondow2MaxPage)

  0031d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00324	0f bf ca	 movsx	 ecx, dx
  00327	41		 inc	 ecx
  00328	3b c8		 cmp	 ecx, eax
  0032a	7d 20		 jge	 SHORT $LN44@poolShopWi

; 11931: 				{
; 11932: 					shopWondow2Page++;
; 11933: 					play_se(217, 320, 240);	// ?????

  0032c	68 f0 00 00 00	 push	 240			; 000000f0H
  00331	66 42		 inc	 dx
  00333	68 40 01 00 00	 push	 320			; 00000140H
  00338	68 d9 00 00 00	 push	 217			; 000000d9H
  0033d	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00344	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00349	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN44@poolShopWi:

; 11934: 				}
; 11935: 			}
; 11936: 		}

  0034c	8d 85 d8 fd ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp+4]
  00352	eb 06		 jmp	 SHORT $LN121@poolShopWi
$LN41@poolShopWi:

; 11937: 		else
; 11938: 		{
; 11939: 			nextBtn = 0;

  00354	8d 85 d4 fd ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
$LN121@poolShopWi:

; 11940: 		}
; 11941: 
; 11942: 
; 11943: 		// î??????î?????????????î¼??
; 11944: 		if (CheckMenuFlag()
; 11945: 			|| joy_trg[0] & JOY_ESC
; 11946: 			|| actBtn == 1
; 11947: 			|| menuBtn == 1
; 11948: 			|| disconnectServerFlag == TRUE
; 11949: 			|| wnCloseFlag == 1)

  0035a	89 85 f8 fd ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
  00360	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00365	85 c0		 test	 eax, eax
  00367	0f 85 fc 03 00
	00		 jne	 $LN46@poolShopWi
  0036d	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00377	0f 85 ec 03 00
	00		 jne	 $LN46@poolShopWi
  0037d	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00385	0f 84 de 03 00
	00		 je	 $LN46@poolShopWi
  0038b	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00393	0f 84 d0 03 00
	00		 je	 $LN46@poolShopWi
  00399	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  003a0	0f 84 c3 03 00
	00		 je	 $LN46@poolShopWi
  003a6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  003ae	0f 84 b5 03 00
	00		 je	 $LN46@poolShopWi

; 11953: 		}
; 11954: 
; 11955: 		// id = 0, id = 1 ??????????î·????
; 11956: 		if (id >= 2
; 11957: 			|| selId >= 0)

  003b4	83 fb 02	 cmp	 ebx, 2
  003b7	0f 8d 67 03 00
	00		 jge	 $LN48@poolShopWi
  003bd	85 f6		 test	 esi, esi
  003bf	0f 89 6d 03 00
	00		 jns	 $LN51@poolShopWi

; 11992: 		}
; 11993: 
; 11994: 		if (ptActMenuWin->hp >= 1)

  003c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003ca	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003ce	0f 8c 3d 03 00
	00		 jl	 $LN55@poolShopWi

; 11995: 		{
; 11996: 			int xx;
; 11997: 
; 11998: 			// ????????
; 11999: 			xx = (w - strlen(shopWindow1Title) / 2 * 17) / 2;

  003d4	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  003d9	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  003dc	0f 1f 40 00	 npad	 4
$LL113@poolShopWi:
  003e0	8a 01		 mov	 al, BYTE PTR [ecx]
  003e2	41		 inc	 ecx
  003e3	84 c0		 test	 al, al
  003e5	75 f9		 jne	 SHORT $LL113@poolShopWi

; 12000: 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  003e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  003ec	2b ca		 sub	 ecx, edx
  003ee	6a 00		 push	 0
  003f0	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  003f5	d1 e9		 shr	 ecx, 1
  003f7	83 c0 12	 add	 eax, 18			; 00000012H
  003fa	6a 00		 push	 0
  003fc	6a 01		 push	 1
  003fe	50		 push	 eax
  003ff	8b c1		 mov	 eax, ecx
  00401	c1 e0 04	 shl	 eax, 4
  00404	03 c1		 add	 eax, ecx
  00406	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??poolShopWindow4@@YAHXZ@4HA
  0040c	2b c8		 sub	 ecx, eax
  0040e	d1 e9		 shr	 ecx, 1
  00410	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00416	51		 push	 ecx
  00417	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12001: 
; 12002: 			// ?????????
; 12003: 			if (!itemMaxFlag)

  0041c	33 f6		 xor	 esi, esi
  0041e	83 c4 18	 add	 esp, 24			; 00000018H
  00421	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  00424	66 85 ff	 test	 di, di
  00427	75 37		 jne	 SHORT $LN56@poolShopWi

; 12004: 			{
; 12005: 				for (i = 0; i < sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]); i++)

  00429	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  0042e	66 90		 npad	 2
$LL13@poolShopWi:

; 12006: 				{
; 12007: 					if (shopWindow2Msg[0] != '\0')
; 12008: 					{
; 12009: 						StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00430	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  00435	6a 00		 push	 0
  00437	57		 push	 edi
  00438	83 c0 30	 add	 eax, 48			; 00000030H
  0043b	6a 00		 push	 0
  0043d	03 c6		 add	 eax, esi
  0043f	6a 01		 push	 1
  00441	50		 push	 eax
  00442	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00447	83 c0 12	 add	 eax, 18			; 00000012H
  0044a	50		 push	 eax
  0044b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00450	83 c4 18	 add	 esp, 24			; 00000018H
  00453	83 c7 2d	 add	 edi, 45			; 0000002dH
  00456	83 c6 12	 add	 esi, 18			; 00000012H
  00459	83 eb 01	 sub	 ebx, 1
  0045c	75 d2		 jne	 SHORT $LL13@poolShopWi

; 12010: 							shopWindow2Msg[i], 0);
; 12011: 					}
; 12012: 				}
; 12013: 			}

  0045e	eb 33		 jmp	 SHORT $LN15@poolShopWi
$LN56@poolShopWi:

; 12014: 			else
; 12015: 			{
; 12016: 				for (i = 0; i < sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]); i++)

  00460	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
$LL16@poolShopWi:

; 12017: 				{
; 12018: 					if (shopWindow4Msg[0] != '\0')
; 12019: 					{
; 12020: 						StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00465	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  0046a	6a 00		 push	 0
  0046c	57		 push	 edi
  0046d	83 c0 30	 add	 eax, 48			; 00000030H
  00470	6a 00		 push	 0
  00472	03 c6		 add	 eax, esi
  00474	6a 01		 push	 1
  00476	50		 push	 eax
  00477	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  0047c	83 c0 12	 add	 eax, 18			; 00000012H
  0047f	50		 push	 eax
  00480	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00485	83 c4 18	 add	 esp, 24			; 00000018H
  00488	83 c7 27	 add	 edi, 39			; 00000027H
  0048b	83 c6 12	 add	 esi, 18			; 00000012H
  0048e	83 eb 01	 sub	 ebx, 1
  00491	75 d2		 jne	 SHORT $LL16@poolShopWi
$LN15@poolShopWi:

; 12021: 							shopWindow4Msg[i], 0);
; 12022: 					}
; 12023: 				}
; 12024: 			}
; 12025: 
; 12026: 
; 12027: 			// ???
; 12028: 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  00493	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  00499	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0049f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  004a4	50		 push	 eax
  004a5	e8 00 00 00 00	 call	 _sprintf

; 12029: 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  004aa	6a 00		 push	 0
  004ac	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004b2	50		 push	 eax
  004b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  004b8	6a 00		 push	 0
  004ba	83 c0 54	 add	 eax, 84			; 00000054H
  004bd	6a 01		 push	 1
  004bf	50		 push	 eax
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  004c5	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  004ca	50		 push	 eax
  004cb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12030: 
; 12031: 			// é¡µî?î?
; 12032: 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  004d0	8b 85 f4 fd ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  004d6	6a 02		 push	 2
  004d8	ff 30		 push	 DWORD PTR [eax]
  004da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  004df	83 c0 64	 add	 eax, 100		; 00000064H
  004e2	6a 69		 push	 105			; 00000069H
  004e4	50		 push	 eax
  004e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  004ea	83 c0 20	 add	 eax, 32			; 00000020H
  004ed	50		 push	 eax
  004ee	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004f3	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA, eax

; 12033: 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  004f8	8b 85 f8 fd ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  004fe	6a 02		 push	 2
  00500	ff 30		 push	 DWORD PTR [eax]
  00502	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  00507	83 c0 64	 add	 eax, 100		; 00000064H
  0050a	6a 69		 push	 105			; 00000069H
  0050c	50		 push	 eax
  0050d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00512	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00517	50		 push	 eax
  00518	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0051d	83 c4 4c	 add	 esp, 76			; 0000004cH
  00520	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA+4, eax

; 12034: 			sprintf(tmsg, "%2d/%2d ìª½", shopWondow2Page + 1, shopWondow2MaxPage);

  00525	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  0052c	50		 push	 eax
  0052d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00534	40		 inc	 eax
  00535	50		 push	 eax
  00536	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0053c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@
  00541	50		 push	 eax
  00542	e8 00 00 00 00	 call	 _sprintf

; 12035: 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00547	6a 00		 push	 0
  00549	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0054f	50		 push	 eax
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  00555	6a 00		 push	 0
  00557	83 c0 5c	 add	 eax, 92			; 0000005cH
  0055a	6a 01		 push	 1
  0055c	50		 push	 eax
  0055d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00562	83 c0 42	 add	 eax, 66			; 00000042H
  00565	50		 push	 eax
  00566	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12036: 
; 12037: 			j = shopWondow2Page * MAX_SHOP_ITEM;

  0056b	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00572	33 db		 xor	 ebx, ebx
  00574	8b f8		 mov	 edi, eax
  00576	83 c4 28	 add	 esp, 40			; 00000028H
  00579	c1 e7 04	 shl	 edi, 4
  0057c	03 f8		 add	 edi, eax
  0057e	c1 e7 06	 shl	 edi, 6
  00581	8d 73 07	 lea	 esi, DWORD PTR [ebx+7]
  00584	81 c7 10 00 00
	00		 add	 edi, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+16
  0058a	66 0f 1f 44 00
	00		 npad	 6
$LL19@poolShopWi:

; 12039: 				if (strlen(poolItem[j + i].name) == 0)

  00590	8b c7		 mov	 eax, edi
  00592	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL114@poolShopWi:
  00595	8a 08		 mov	 cl, BYTE PTR [eax]
  00597	40		 inc	 eax
  00598	84 c9		 test	 cl, cl
  0059a	75 f9		 jne	 SHORT $LL114@poolShopWi
  0059c	2b c2		 sub	 eax, edx
  0059e	74 7a		 je	 SHORT $LN17@poolShopWi

; 12040: 					continue;
; 12041: 
; 12042: 				color = itemColor[0];
; 12043: 				if (poolItem[j + i].poolFlag)
; 12044: 					color = itemColor[1];
; 12045: 				if (itemMaxFlag)

  005a0	33 c0		 xor	 eax, eax
  005a2	66 39 47 fc	 cmp	 WORD PTR [edi-4], ax

; 12046: 					color = itemColor[1];
; 12047: 				StockFontBuffer(x + 34, y + 118 + i * 21,

  005a6	6a 00		 push	 0
  005a8	0f 44 f0	 cmove	 esi, eax
  005ab	66 39 85 ec fd
	ff ff		 cmp	 WORD PTR _itemMaxFlag$1$[ebp], ax
  005b2	b8 07 00 00 00	 mov	 eax, 7
  005b7	0f 45 f0	 cmovne	 esi, eax
  005ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  005bf	57		 push	 edi
  005c0	83 c0 76	 add	 eax, 118		; 00000076H
  005c3	56		 push	 esi
  005c4	03 c3		 add	 eax, ebx
  005c6	6a 01		 push	 1
  005c8	50		 push	 eax
  005c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  005ce	83 c0 22	 add	 eax, 34			; 00000022H
  005d1	50		 push	 eax
  005d2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12048: 					FONT_PRIO_FRONT, color, poolItem[j + i].name, 0);
; 12049: 
; 12050: #ifdef _ITEM_PILENUMS
; 12051: 				char tmsg[256];
; 12052: 				sprintf(tmsg, "x%d", poolItem[j + i].num);

  005d7	ff 77 74	 push	 DWORD PTR [edi+116]
  005da	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _tmsg$3[ebp]
  005e0	68 00 00 00 00	 push	 OFFSET ??_C@_03EPCHICDI@x?$CFd@
  005e5	50		 push	 eax
  005e6	e8 00 00 00 00	 call	 _sprintf

; 12053: 				StockFontBuffer(x + 34 + 250, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  005eb	6a 00		 push	 0
  005ed	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _tmsg$3[ebp]
  005f3	50		 push	 eax
  005f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  005f9	83 c0 76	 add	 eax, 118		; 00000076H
  005fc	56		 push	 esi
  005fd	03 c3		 add	 eax, ebx
  005ff	6a 01		 push	 1
  00601	50		 push	 eax
  00602	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00607	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  0060c	50		 push	 eax
  0060d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00612	83 c4 3c	 add	 esp, 60			; 0000003cH
  00615	be 07 00 00 00	 mov	 esi, 7
$LN17@poolShopWi:

; 12038: 			for (i = 0; i < MAX_SHOP_ITEM; i++) {

  0061a	83 c3 15	 add	 ebx, 21			; 00000015H
  0061d	81 c7 88 00 00
	00		 add	 edi, 136		; 00000088H
  00623	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  00629	0f 8c 61 ff ff
	ff		 jl	 $LL19@poolShopWi

; 12054: #endif
; 12055: 			}
; 12056: 
; 12057: 			if (focusId >= 0) {

  0062f	8b 85 e4 fd ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  00635	85 c0		 test	 eax, eax
  00637	78 67		 js	 SHORT $LN21@poolShopWi

; 12058: 				StockDispBuffer(x + 64, y + 350, DISP_PRIO_IME3, poolItem[focusId].graNo, 0);

  00639	8b f0		 mov	 esi, eax
  0063b	c1 e6 04	 shl	 esi, 4
  0063e	03 f0		 add	 esi, eax
  00640	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  00645	6a 00		 push	 0
  00647	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  0064c	ff 34 f5 08 00
	00 00		 push	 DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi*8+8]
  00653	6a 69		 push	 105			; 00000069H
  00655	50		 push	 eax
  00656	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  0065b	83 c0 40	 add	 eax, 64			; 00000040H
  0065e	50		 push	 eax
  0065f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00664	83 c4 14	 add	 esp, 20			; 00000014H
  00667	8d 34 f5 2d 00
	00 00		 lea	 esi, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi*8+45]
  0066e	33 ff		 xor	 edi, edi
$LL22@poolShopWi:

; 12059: 
; 12060: 				for (i = 0; i < sizeof(poolItem[0].info) / sizeof(poolItem[0].info[0]); i++) {
; 12061: 					StockFontBuffer(x + 120, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00670	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  00675	6a 00		 push	 0
  00677	56		 push	 esi
  00678	05 34 01 00 00	 add	 eax, 308		; 00000134H
  0067d	6a 00		 push	 0
  0067f	03 c7		 add	 eax, edi
  00681	6a 01		 push	 1
  00683	50		 push	 eax
  00684	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00689	83 c0 78	 add	 eax, 120		; 00000078H
  0068c	50		 push	 eax
  0068d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00692	83 c7 14	 add	 edi, 20			; 00000014H
  00695	83 c4 18	 add	 esp, 24			; 00000018H
  00698	83 c6 1d	 add	 esi, 29			; 0000001dH
  0069b	83 ff 3c	 cmp	 edi, 60			; 0000003cH
  0069e	72 d0		 jb	 SHORT $LL22@poolShopWi
$LN21@poolShopWi:

; 12062: 						poolItem[focusId].info[i], 0);
; 12063: 				}
; 12064: 			}
; 12065: 
; 12066: 			if (buyOffFlag == 0) {

  006a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  006a5	05 92 01 00 00	 add	 eax, 402		; 00000192H
  006aa	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?buyOffFlag@@3FA, 0 ; buyOffFlag
  006b2	6a 02		 push	 2
  006b4	75 07		 jne	 SHORT $LN64@poolShopWi

; 12067: 				btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  006b6	68 bb 65 00 00	 push	 26043			; 000065bbH

; 12068: 			}

  006bb	eb 05		 jmp	 SHORT $LN122@poolShopWi
$LN64@poolShopWi:

; 12069: 			else {
; 12070: 				btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  006bd	68 f0 65 00 00	 push	 26096			; 000065f0H
$LN122@poolShopWi:

; 12071: 			}
; 12072: 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_WIN, 1);

  006c2	6a 69		 push	 105			; 00000069H
  006c4	50		 push	 eax
  006c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  006ca	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  006cf	50		 push	 eax
  006d0	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006d5	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow4@@YAHXZ@4PAHA+8, eax
  006da	83 c4 14	 add	 esp, 20			; 00000014H
  006dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??poolShopWindow4@@YAHXZ@4HA
  006e2	99		 cdq
  006e3	2b c2		 sub	 eax, edx
  006e5	6a 01		 push	 1
  006e7	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_WIN@@3HA ; CG_ITEMSHOP_WIN
  006ed	d1 f8		 sar	 eax, 1
  006ef	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??poolShopWindow4@@YAHXZ@4HA
  006f5	6a 68		 push	 104			; 00000068H
  006f7	50		 push	 eax
  006f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow4@@YAHXZ@4HA
  006fd	99		 cdq
  006fe	2b c2		 sub	 eax, edx
  00700	d1 f8		 sar	 eax, 1
  00702	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow4@@YAHXZ@4HA
  00708	50		 push	 eax
  00709	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0070e	83 c4 14	 add	 esp, 20			; 00000014H
$LN55@poolShopWi:

; 12073: 		}
; 12074: 	}
; 12075: 
; 12076: 	return ret;
; 12077: }

  00711	5f		 pop	 edi
  00712	5e		 pop	 esi
  00713	33 c0		 xor	 eax, eax
  00715	5b		 pop	 ebx
  00716	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00719	33 cd		 xor	 ecx, ebp
  0071b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00720	8b e5		 mov	 esp, ebp
  00722	5d		 pop	 ebp
  00723	c3		 ret	 0
$LN48@poolShopWi:

; 11958: 		{
; 11959: 			// ?????
; 11960: 			if (id == 2)

  00724	75 07		 jne	 SHORT $LN49@poolShopWi

; 11961: 			{
; 11962: 				ret = 1;

  00726	be 01 00 00 00	 mov	 esi, 1

; 11963: 			}

  0072b	eb 49		 jmp	 SHORT $LN123@poolShopWi
$LN49@poolShopWi:

; 11964: 			else
; 11965: 				if (id == 100)

  0072d	83 fb 64	 cmp	 ebx, 100		; 00000064H
  00730	74 3f		 je	 SHORT $LN111@poolShopWi
$LN51@poolShopWi:

; 11968: 				}
; 11969: 				else
; 11970: 				{
; 11971: 					selShopItemNo = selId;
; 11972: #if 0
; 11973: 					if (? ? ? ? ? ? ? ? ? )
; 11974: 					{
; 11975: 						ret = 3;
; 11976: 					}
; 11977: 					else
; 11978: #endif
; 11979: 					{
; 11980: 						ret = 2;

  00732	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00738	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopItemNo@@3FA, si ; selShopItemNo
  0073f	be 02 00 00 00	 mov	 esi, 2
  00744	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11990: 			}
; 11991: 			return ret;

  00749	83 c4 04	 add	 esp, 4
  0074c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00756	8b c6		 mov	 eax, esi
  00758	5f		 pop	 edi

; 12073: 		}
; 12074: 	}
; 12075: 
; 12076: 	return ret;
; 12077: }

  00759	5e		 pop	 esi
  0075a	5b		 pop	 ebx
  0075b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0075e	33 cd		 xor	 ecx, ebp
  00760	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00765	8b e5		 mov	 esp, ebp
  00767	5d		 pop	 ebp
  00768	c3		 ret	 0
$LN46@poolShopWi:

; 11950: 		{
; 11951: 			id = 100;
; 11952: 			wnCloseFlag = 0;

  00769	33 c0		 xor	 eax, eax
  0076b	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN111@poolShopWi:

; 11966: 				{
; 11967: 					ret = 100;

  00771	be 64 00 00 00	 mov	 esi, 100		; 00000064H
$LN123@poolShopWi:

; 11981: 					}
; 11982: 				}
; 11983: 
; 11984: 			DeathAction(ptActMenuWin);
; 11985: 			ptActMenuWin = NULL;
; 11986: 			if (ret == 100
; 11987: 				|| ret == 1)
; 11988: 			{
; 11989: 				windowTypeWN = -1;

  00776	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0077c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12073: 		}
; 12074: 	}
; 12075: 
; 12076: 	return ret;
; 12077: }

  00781	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00784	83 c4 04	 add	 esp, 4
  00787	8b c6		 mov	 eax, esi
  00789	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00793	33 cd		 xor	 ecx, ebp
  00795	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0079f	5f		 pop	 edi
  007a0	5e		 pop	 esi
  007a1	5b		 pop	 ebx
  007a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007a7	8b e5		 mov	 esp, ebp
  007a9	5d		 pop	 ebp
  007aa	c3		 ret	 0
?poolShopWindow4@@YAHXZ ENDP				; poolShopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPoolShopWindow4@@YAXXZ
_TEXT	SEGMENT
?initPoolShopWindow4@@YAXXZ PROC			; initPoolShopWindow4, COMDAT

; 11786: 	poolShopWindow4ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?poolShopWindow4ProcNo@@3FA, ax ; poolShopWindow4ProcNo

; 11787: }

  00008	c3		 ret	 0
?initPoolShopWindow4@@YAXXZ ENDP			; initPoolShopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?poolShopWindow3@@YAHXZ
_TEXT	SEGMENT
?poolShopWindow3@@YAHXZ PROC				; poolShopWindow3, COMDAT

; 11707: 	static int x, y, w, h;
; 11708: 	static int btnId[2];
; 11709: 	int id;
; 11710: 	int i;
; 11711: 	int ret = 0;
; 11712: 
; 11713: 	if (poolShopWindow3ProcNo == 0) {

  00000	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?poolShopWindow3ProcNo@@3FA, 0 ; poolShopWindow3ProcNo
  00008	75 76		 jne	 SHORT $LN36@poolShopWi

; 11714: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 11715: 			btnId[i] = -2;
; 11716: 		}
; 11717: 		w = 6;
; 11718: 		h = 2;
; 11719: 		x = (640 - w * 64) / 2;
; 11720: 		y = (456 - h * 48) / 2;
; 11721: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	6a 06		 push	 6
  00012	68 b4 00 00 00	 push	 180			; 000000b4H
  00017	68 80 00 00 00	 push	 128			; 00000080H
  0001c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA, -2 ; fffffffeH
  00026	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00030	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?w@?1??poolShopWindow3@@YAHXZ@4HA, 6
  0003a	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??poolShopWindow3@@YAHXZ@4HA, 2
  00044	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?x@?1??poolShopWindow3@@YAHXZ@4HA, 128 ; 00000080H
  0004e	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??poolShopWindow3@@YAHXZ@4HA, 180 ; 000000b4H
  00058	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0005d	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00062	83 c4 18	 add	 esp, 24			; 00000018H

; 11722: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 11723: 		x = ptActMenuWin->x;

  00065	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00068	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??poolShopWindow3@@YAHXZ@4HA, ecx

; 11724: 		y = ptActMenuWin->y;

  0006e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 11725: #endif
; 11726: 		poolShopWindow3ProcNo++;

  00071	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?poolShopWindow3ProcNo@@3FA ; poolShopWindow3ProcNo
  00078	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??poolShopWindow3@@YAHXZ@4HA, ecx
  0007e	eb 05		 jmp	 SHORT $LN8@poolShopWi
$LN36@poolShopWi:

; 11707: 	static int x, y, w, h;
; 11708: 	static int btnId[2];
; 11709: 	int id;
; 11710: 	int i;
; 11711: 	int ret = 0;
; 11712: 
; 11713: 	if (poolShopWindow3ProcNo == 0) {

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN8@poolShopWi:
  00085	56		 push	 esi

; 11727: 	}
; 11728: 
; 11729: 
; 11730: 	if (ptActMenuWin != NULL) {

  00086	85 c0		 test	 eax, eax
  00088	0f 84 7b 01 00
	00		 je	 $LN20@poolShopWi

; 11731: 		id = -1;

  0008e	83 ce ff	 or	 esi, -1

; 11732: 		if (ptActMenuWin->hp >= 1) {

  00091	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00095	7c 11		 jl	 SHORT $LN10@poolShopWi

; 11733: 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00097	6a 02		 push	 2
  00099	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA
  0009e	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000a3	83 c4 08	 add	 esp, 8
  000a6	8b f0		 mov	 esi, eax
$LN10@poolShopWi:

; 11734: 		}
; 11735: 		if (CheckMenuFlag()
; 11736: 			|| joy_trg[0] & JOY_ESC
; 11737: 			|| actBtn == 1
; 11738: 			|| menuBtn == 1
; 11739: 			|| disconnectServerFlag == TRUE
; 11740: 			|| wnCloseFlag == 1) {

  000a8	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000ad	85 c0		 test	 eax, eax
  000af	0f 85 58 01 00
	00		 jne	 $LN12@poolShopWi
  000b5	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000bf	0f 85 48 01 00
	00		 jne	 $LN12@poolShopWi
  000c5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000cd	0f 84 3a 01 00
	00		 je	 $LN12@poolShopWi
  000d3	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000db	0f 84 2c 01 00
	00		 je	 $LN12@poolShopWi
  000e1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000e8	0f 84 1f 01 00
	00		 je	 $LN12@poolShopWi
  000ee	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f6	0f 84 11 01 00
	00		 je	 $LN12@poolShopWi

; 11743: 		}
; 11744: 
; 11745: 
; 11746: 		if (id >= 0) {

  000fc	85 f6		 test	 esi, esi
  000fe	78 6a		 js	 SHORT $LN13@poolShopWi

; 11747: 			if (id == 0) {

  00100	75 1f		 jne	 SHORT $LN14@poolShopWi

; 11748: 				ret = 1;

  00102	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00108	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0010b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11760: 			if (ret == 100) {
; 11761: 				windowTypeWN = -1;
; 11762: 			}
; 11763: 			return ret;

  00110	83 c4 04	 add	 esp, 4
  00113	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0011d	8b c6		 mov	 eax, esi
  0011f	5e		 pop	 esi

; 11779: }

  00120	c3		 ret	 0
$LN14@poolShopWi:

; 11749: 			}
; 11750: 			else
; 11751: 				if (id == 1) {

  00121	83 fe 01	 cmp	 esi, 1
  00124	75 21		 jne	 SHORT $LN16@poolShopWi

; 11752: 					ret = 2;

  00126	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0012c	be 02 00 00 00	 mov	 esi, 2
  00131	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11760: 			if (ret == 100) {
; 11761: 				windowTypeWN = -1;
; 11762: 			}
; 11763: 			return ret;

  00136	83 c4 04	 add	 esp, 4
  00139	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00143	8b c6		 mov	 eax, esi
  00145	5e		 pop	 esi

; 11779: }

  00146	c3		 ret	 0
$LN16@poolShopWi:

; 11753: 				}
; 11754: 				else
; 11755: 					if (id == 100) {

  00147	83 fe 64	 cmp	 esi, 100		; 00000064H
  0014a	0f 84 c5 00 00
	00		 je	 $LN34@poolShopWi

; 11757: 					}
; 11758: 			DeathAction(ptActMenuWin);

  00150	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00156	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0015b	83 c4 04	 add	 esp, 4

; 11759: 			ptActMenuWin = NULL;

  0015e	33 f6		 xor	 esi, esi

; 11760: 			if (ret == 100) {
; 11761: 				windowTypeWN = -1;
; 11762: 			}
; 11763: 			return ret;

  00160	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  00166	8b c6		 mov	 eax, esi
  00168	5e		 pop	 esi

; 11779: }

  00169	c3		 ret	 0
$LN13@poolShopWi:

; 11764: 		}
; 11765: 		if (ptActMenuWin->hp >= 1) {

  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0016f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00173	0f 8c 90 00 00
	00		 jl	 $LN20@poolShopWi

; 11766: 			for (i = 0; i < sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]); i++) {

  00179	53		 push	 ebx
  0017a	57		 push	 edi
  0017b	33 ff		 xor	 edi, edi
  0017d	be 00 00 00 00	 mov	 esi, OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  00182	8d 5f 02	 lea	 ebx, DWORD PTR [edi+2]
$LL7@poolShopWi:

; 11767: 				if (shopWindow5Msg[i][0] != '\0') {

  00185	80 3e 00	 cmp	 BYTE PTR [esi], 0
  00188	74 23		 je	 SHORT $LN5@poolShopWi

; 11768: 					StockFontBuffer(x + 20, y + 20 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  0018a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow3@@YAHXZ@4HA
  0018f	6a 00		 push	 0
  00191	56		 push	 esi
  00192	83 c0 14	 add	 eax, 20			; 00000014H
  00195	6a 00		 push	 0
  00197	03 c7		 add	 eax, edi
  00199	6a 01		 push	 1
  0019b	50		 push	 eax
  0019c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow3@@YAHXZ@4HA
  001a1	83 c0 14	 add	 eax, 20			; 00000014H
  001a4	50		 push	 eax
  001a5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001aa	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@poolShopWi:

; 11766: 			for (i = 0; i < sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]); i++) {

  001ad	83 c6 27	 add	 esi, 39			; 00000027H
  001b0	83 c7 14	 add	 edi, 20			; 00000014H
  001b3	83 eb 01	 sub	 ebx, 1
  001b6	75 cd		 jne	 SHORT $LL7@poolShopWi

; 11769: 						shopWindow5Msg[i], 0);
; 11770: 				}
; 11771: 			}
; 11772: 
; 11773: 			btnId[0] = StockDispBuffer(x + 128, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow3@@YAHXZ@4HA
  001bd	6a 02		 push	 2
  001bf	68 ee 65 00 00	 push	 26094			; 000065eeH
  001c4	83 c0 48	 add	 eax, 72			; 00000048H
  001c7	6a 69		 push	 105			; 00000069H
  001c9	50		 push	 eax
  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow3@@YAHXZ@4HA
  001cf	83 e8 80	 sub	 eax, -128		; ffffff80H
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001d8	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA, eax

; 11774: 			btnId[1] = StockDispBuffer(x + 256, y + 72, DISP_PRIO_IME3, CG_NO_BTN, 2);

  001dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow3@@YAHXZ@4HA
  001e2	6a 02		 push	 2
  001e4	68 ef 65 00 00	 push	 26095			; 000065efH
  001e9	83 c0 48	 add	 eax, 72			; 00000048H
  001ec	6a 69		 push	 105			; 00000069H
  001ee	50		 push	 eax
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow3@@YAHXZ@4HA
  001f4	05 00 01 00 00	 add	 eax, 256		; 00000100H
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001ff	83 c4 28	 add	 esp, 40			; 00000028H
  00202	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow3@@YAHXZ@4PAHA+4, eax
  00207	5f		 pop	 edi
  00208	5b		 pop	 ebx
$LN20@poolShopWi:

; 11775: 		}
; 11776: 	}
; 11777: 
; 11778: 	return ret;

  00209	33 c0		 xor	 eax, eax
  0020b	5e		 pop	 esi

; 11779: }

  0020c	c3		 ret	 0
$LN12@poolShopWi:

; 11741: 			id = 100;
; 11742: 			wnCloseFlag = 0;

  0020d	33 c0		 xor	 eax, eax
  0020f	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN34@poolShopWi:

; 11756: 						ret = 100;

  00215	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0021b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11760: 			if (ret == 100) {
; 11761: 				windowTypeWN = -1;
; 11762: 			}
; 11763: 			return ret;

  00220	83 c4 04	 add	 esp, 4
  00223	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0022d	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  00232	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0023c	8b c6		 mov	 eax, esi
  0023e	5e		 pop	 esi

; 11779: }

  0023f	c3		 ret	 0
?poolShopWindow3@@YAHXZ ENDP				; poolShopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPoolShopWindow3@@YAXXZ
_TEXT	SEGMENT
?initPoolShopWindow3@@YAXXZ PROC			; initPoolShopWindow3, COMDAT

; 11697: 	poolShopWindow3ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?poolShopWindow3ProcNo@@3FA, ax ; poolShopWindow3ProcNo

; 11698: }

  00008	c3		 ret	 0
?initPoolShopWindow3@@YAXXZ ENDP			; initPoolShopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?poolShopWindow2@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -292					; size = 8
_prevBtnGraNo$ = -284					; size = 8
tv1321 = -276						; size = 4
_id$1$ = -276						; size = 4
_focusId$1$ = -272					; size = 4
$T1 = -268						; size = 4
_selId$1$ = -268					; size = 4
$T2 = -264						; size = 4
_pushId$1$ = -264					; size = 4
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?poolShopWindow2@@YAHXZ PROC				; poolShopWindow2, COMDAT

; 11431: int poolShopWindow2(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 11432: 	static int x, y, w, h;
; 11433: 	static int btnId[3];
; 11434: 	int id;
; 11435: 	int pushId;
; 11436: 	int focusId;
; 11437: 	int selId;
; 11438: 	int i, j;
; 11439: 	int ret = 0;
; 11440: 	char tmsg[256];
; 11441: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 11442: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 11443: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 11444: 	int color;
; 11445: 	int prevBtn, nextBtn;
; 11446: 	int x1, y1, x2, y2;
; 11447: 
; 11448: 	if (poolShopWindow2ProcNo == 0) {

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?poolShopWindow2ProcNo@@3FA, 0 ; poolShopWindow2ProcNo
  0001b	c7 85 e4 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00025	c7 85 e8 fe ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  0002f	c7 85 dc fe ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00039	c7 85 e0 fe ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00043	0f 85 80 00 00
	00		 jne	 $LN96@poolShopWi

; 11449: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 11450: 			btnId[i] = -2;
; 11451: 		}
; 11452: 		// ??????î
; 11453: 		w = 432;
; 11454: 		h = 428;
; 11455: 		x = (640 - w) / 2;
; 11456: 		y = (456 - h) / 2;
; 11457: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00049	6a ff		 push	 -1
  0004b	6a 00		 push	 0
  0004d	68 ac 01 00 00	 push	 428			; 000001acH
  00052	68 b0 01 00 00	 push	 432			; 000001b0H
  00057	6a 0e		 push	 14			; 0000000eH
  00059	6a 68		 push	 104			; 00000068H
  0005b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA, -2 ; fffffffeH
  00065	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0006f	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00079	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??poolShopWindow2@@YAHXZ@4HA, 432 ; 000001b0H
  00083	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??poolShopWindow2@@YAHXZ@4HA, 428 ; 000001acH
  0008d	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA, 104 ; 00000068H
  00097	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA, 14 ; 0000000eH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 11458: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 11459: 		x = ptActMenuWin->x;

  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA, ecx

; 11460: 		y = ptActMenuWin->y;

  000b7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 11461: #endif
; 11462: 		poolShopWindow2ProcNo++;

  000ba	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?poolShopWindow2ProcNo@@3FA ; poolShopWindow2ProcNo
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA, ecx
  000c7	eb 05		 jmp	 SHORT $LN20@poolShopWi
$LN96@poolShopWi:

; 11432: 	static int x, y, w, h;
; 11433: 	static int btnId[3];
; 11434: 	int id;
; 11435: 	int pushId;
; 11436: 	int focusId;
; 11437: 	int selId;
; 11438: 	int i, j;
; 11439: 	int ret = 0;
; 11440: 	char tmsg[256];
; 11441: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 11442: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 11443: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 11444: 	int color;
; 11445: 	int prevBtn, nextBtn;
; 11446: 	int x1, y1, x2, y2;
; 11447: 
; 11448: 	if (poolShopWindow2ProcNo == 0) {

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN20@poolShopWi:
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	57		 push	 edi

; 11463: 	}
; 11464: 
; 11465: 
; 11466: 	if (ptActMenuWin != NULL) {

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 fa 05 00
	00		 je	 $LN49@poolShopWi

; 11467: 		id = -1;

  000d9	83 cb ff	 or	 ebx, -1

; 11468: 		pushId = -1;

  000dc	0b cb		 or	 ecx, ebx

; 11469: 		focusId = -1;

  000de	89 9d f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx

; 11470: 		selId = -1;

  000e4	0b f3		 or	 esi, ebx
  000e6	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx

; 11471: 
; 11472: 		if (ptActMenuWin->hp >= 1) {

  000ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000f0	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi
  000f6	0f 8c e9 00 00
	00		 jl	 $LN6@poolShopWi

; 11473: 			// ????î±î¶îî
; 11474: 			//id = selGraId( btnId, sizeof( btnId )/sizeof( int ) );
; 11475: 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000fc	6a 03		 push	 3
  000fe	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA
  00103	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 11476: 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  00108	6a 03		 push	 3
  0010a	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA
  0010f	89 85 ec fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  00115	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 11477: 
; 11478: 			j = shopWondow2Page * MAX_SHOP_ITEM;

  0011a	0f bf 3d 00 00
	00 00		 movsx	 edi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00121	83 c4 10	 add	 esp, 16			; 00000010H
  00124	c1 e7 03	 shl	 edi, 3
  00127	33 db		 xor	 ebx, ebx
  00129	69 f7 88 00 00
	00		 imul	 esi, edi, 136
  0012f	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  00135	81 c6 04 00 00
	00		 add	 esi, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+4
  0013b	0f 1f 44 00 00	 npad	 5
$LL7@poolShopWi:

; 11480: 				if (poolItem[j + i].name[0] != '\0') {

  00140	80 7e 0c 00	 cmp	 BYTE PTR [esi+12], 0
  00144	74 77		 je	 SHORT $LN5@poolShopWi

; 11481: 					x1 = x + 32;
; 11482: 					y1 = y + i * 21 + 116;

  00146	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0014c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  00152	83 c1 74	 add	 ecx, 116		; 00000074H
  00155	03 cb		 add	 ecx, ebx
  00157	83 c2 20	 add	 edx, 32			; 00000020H

; 11483: 					x2 = x1 + 372;
; 11484: 					y2 = y1 + 20;
; 11485: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  0015a	6a 6b		 push	 107			; 0000006bH
  0015c	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0015f	50		 push	 eax
  00160	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  00166	50		 push	 eax
  00167	51		 push	 ecx
  00168	52		 push	 edx
  00169	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0016e	83 c4 14	 add	 esp, 20			; 00000014H
  00171	85 c0		 test	 eax, eax
  00173	74 48		 je	 SHORT $LN5@poolShopWi

; 11486: 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00175	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0017c	74 39		 je	 SHORT $LN27@poolShopWi

; 11487: 							// ????î±??????î±???
; 11488: 							if (poolItem[j + i].price <= pc.gold
; 11489: 								&& poolItem[j + i].poolFlag == 0
; 11490: 								&& restPoolSlot > 0) {

  0017e	8b 06		 mov	 eax, DWORD PTR [esi]
  00180	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  00186	7f 18		 jg	 SHORT $LN26@poolShopWi
  00188	66 83 7e 08 00	 cmp	 WORD PTR [esi+8], 0
  0018d	75 11		 jne	 SHORT $LN26@poolShopWi
  0018f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?restPoolSlot@@3HA, 0 ; restPoolSlot
  00196	7e 08		 jle	 SHORT $LN26@poolShopWi

; 11491: 								selId = j + i;

  00198	89 bd f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], edi

; 11492: 							}

  0019e	eb 17		 jmp	 SHORT $LN27@poolShopWi
$LN26@poolShopWi:

; 11493: 							else {
; 11494: 								play_se(220, 320, 240);	// ???

  001a0	68 f0 00 00 00	 push	 240			; 000000f0H
  001a5	68 40 01 00 00	 push	 320			; 00000140H
  001aa	68 dc 00 00 00	 push	 220			; 000000dcH
  001af	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001b4	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN27@poolShopWi:

; 11495: 							}
; 11496: 						}
; 11497: 						focusId = j + i;

  001b7	89 bd f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], edi
$LN5@poolShopWi:

; 11479: 			for (i = 0; i < MAX_POOL_SHOP_ITEM; i++) {

  001bd	83 c3 15	 add	 ebx, 21			; 00000015H
  001c0	81 c6 88 00 00
	00		 add	 esi, 136		; 00000088H
  001c6	47		 inc	 edi
  001c7	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  001cd	0f 8c 6d ff ff
	ff		 jl	 $LL7@poolShopWi
  001d3	8b 9d ec fe ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  001d9	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _selId$1$[ebp]
  001df	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
$LN6@poolShopWi:

; 11498: 					}
; 11499: 				}
; 11500: 			}
; 11501: 		}
; 11502: 
; 11503: 
; 11504: 		// î·??????
; 11505: 		if (joy_con[0] & JOY_A) {

  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  001ea	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  001ef	74 18		 je	 SHORT $LN29@poolShopWi

; 11506: 			pushId = 0;

  001f1	33 c9		 xor	 ecx, ecx

; 11507: 			if (joy_auto[0] & JOY_A) {

  001f3	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  001fd	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx
  00203	74 08		 je	 SHORT $LN88@poolShopWi

; 11508: 				id = 0;

  00205	33 db		 xor	 ebx, ebx

; 11509: 			}
; 11510: 		}
; 11511: 		if (pushId == 0) {

  00207	eb 08		 jmp	 SHORT $LN89@poolShopWi
$LN29@poolShopWi:
  00209	85 c9		 test	 ecx, ecx
  0020b	75 50		 jne	 SHORT $LN30@poolShopWi
$LN88@poolShopWi:

; 11512: 			prevBtn = 1;
; 11513: 			if (id == 0) {

  0020d	85 db		 test	 ebx, ebx
  0020f	75 31		 jne	 SHORT $LN98@poolShopWi
$LN89@poolShopWi:

; 11514: 				if (shopWondow2Page > 0) {

  00211	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00218	66 85 d2	 test	 dx, dx
  0021b	7e 2c		 jle	 SHORT $LN33@poolShopWi

; 11515: 					shopWondow2Page--;
; 11516: 					play_se(217, 320, 240);	// ?????

  0021d	68 f0 00 00 00	 push	 240			; 000000f0H
  00222	66 4a		 dec	 dx
  00224	68 40 01 00 00	 push	 320			; 00000140H
  00229	68 d9 00 00 00	 push	 217			; 000000d9H
  0022e	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00235	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0023a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  0023f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN98@poolShopWi:

; 11517: 				}
; 11518: 			}
; 11519: 		}

  00242	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN33@poolShopWi:
  00249	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  0024f	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR _prevBtnGraNo$[ebp+4]
  00255	89 bd f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], edi
  0025b	eb 13		 jmp	 SHORT $LN31@poolShopWi
$LN30@poolShopWi:

; 11520: 		else
; 11521: 		{
; 11522: 			prevBtn = 0;

  0025d	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _prevBtnGraNo$[ebp]
  00263	89 95 f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  00269	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN31@poolShopWi:

; 11523: 		}
; 11524: 		// ???????
; 11525: 		if (joy_con[0] & JOY_B)

  00270	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  00275	74 13		 je	 SHORT $LN35@poolShopWi

; 11526: 		{
; 11527: 			pushId = 1;
; 11528: 			if (joy_auto[0] & JOY_B)

  00277	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  00281	74 0c		 je	 SHORT $LN90@poolShopWi

; 11529: 			{
; 11530: 				id = 1;

  00283	bb 01 00 00 00	 mov	 ebx, 1

; 11531: 			}
; 11532: 		}
; 11533: 		if (pushId == 1)

  00288	eb 0a		 jmp	 SHORT $LN91@poolShopWi
$LN35@poolShopWi:
  0028a	83 f9 01	 cmp	 ecx, 1
  0028d	75 42		 jne	 SHORT $LN36@poolShopWi
$LN90@poolShopWi:

; 11534: 		{
; 11535: 			nextBtn = 1;
; 11536: 			if (id == 1)

  0028f	83 fb 01	 cmp	 ebx, 1
  00292	75 2f		 jne	 SHORT $LN39@poolShopWi
$LN91@poolShopWi:

; 11537: 			{
; 11538: 				if (shopWondow2Page + 1 < shopWondow2MaxPage)

  00294	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  0029b	0f bf ca	 movsx	 ecx, dx
  0029e	41		 inc	 ecx
  0029f	3b c8		 cmp	 ecx, eax
  002a1	7d 20		 jge	 SHORT $LN39@poolShopWi

; 11539: 				{
; 11540: 					shopWondow2Page++;
; 11541: 					play_se(217, 320, 240);	// ?????

  002a3	68 f0 00 00 00	 push	 240			; 000000f0H
  002a8	66 42		 inc	 dx
  002aa	68 40 01 00 00	 push	 320			; 00000140H
  002af	68 d9 00 00 00	 push	 217			; 000000d9H
  002b4	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  002bb	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002c0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN39@poolShopWi:

; 11542: 				}
; 11543: 			}
; 11544: 		}

  002c3	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR _nextBtnGraNo$[ebp+4]
  002c9	89 bd f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  002cf	eb 0c		 jmp	 SHORT $LN37@poolShopWi
$LN36@poolShopWi:

; 11545: 		else
; 11546: 		{
; 11547: 			nextBtn = 0;

  002d1	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
  002d7	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN37@poolShopWi:

; 11548: 		}
; 11549: 
; 11550: 
; 11551: 		// î??????î?????????????î¼??
; 11552: 		if (CheckMenuFlag()
; 11553: 			|| joy_trg[0] & JOY_ESC
; 11554: 			|| actBtn == 1
; 11555: 			|| menuBtn == 1
; 11556: 			|| disconnectServerFlag == TRUE
; 11557: 			|| wnCloseFlag == 1)

  002dd	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002e2	85 c0		 test	 eax, eax
  002e4	0f 85 6a 04 00
	00		 jne	 $LN41@poolShopWi
  002ea	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002f4	0f 85 5a 04 00
	00		 jne	 $LN41@poolShopWi
  002fa	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00302	0f 84 4c 04 00
	00		 je	 $LN41@poolShopWi
  00308	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00310	0f 84 3e 04 00
	00		 je	 $LN41@poolShopWi
  00316	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0031d	0f 84 31 04 00
	00		 je	 $LN41@poolShopWi
  00323	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0032b	0f 84 23 04 00
	00		 je	 $LN41@poolShopWi

; 11561: 		}
; 11562: 
; 11563: 		// id = 0, id = 1 ??????????î·????
; 11564: 		if (id >= 2
; 11565: 			|| selId >= 0)

  00331	83 fb 02	 cmp	 ebx, 2
  00334	0f 8d ac 03 00
	00		 jge	 $LN43@poolShopWi
  0033a	85 f6		 test	 esi, esi
  0033c	0f 89 db 03 00
	00		 jns	 $LN46@poolShopWi

; 11590: 		}
; 11591: 
; 11592: 		if (ptActMenuWin->hp >= 1)

  00342	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00347	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0034b	0f 8c 82 03 00
	00		 jl	 $LN49@poolShopWi

; 11593: 		{
; 11594: 			int xx;
; 11595: 
; 11596: 			// ????????
; 11597: 			xx = (w - strlen(shopWindow1Title) / 2 * 17) / 2;

  00351	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00356	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00359	0f 1f 80 00 00
	00 00		 npad	 7
$LL94@poolShopWi:
  00360	8a 01		 mov	 al, BYTE PTR [ecx]
  00362	41		 inc	 ecx
  00363	84 c0		 test	 al, al
  00365	75 f9		 jne	 SHORT $LL94@poolShopWi

; 11598: 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  00367	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0036c	2b ca		 sub	 ecx, edx
  0036e	6a 00		 push	 0
  00370	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00375	d1 e9		 shr	 ecx, 1
  00377	83 c0 12	 add	 eax, 18			; 00000012H
  0037a	6a 00		 push	 0
  0037c	6a 01		 push	 1
  0037e	50		 push	 eax
  0037f	8b c1		 mov	 eax, ecx
  00381	c1 e0 04	 shl	 eax, 4
  00384	03 c1		 add	 eax, ecx
  00386	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??poolShopWindow2@@YAHXZ@4HA
  0038c	2b c8		 sub	 ecx, eax
  0038e	d1 e9		 shr	 ecx, 1
  00390	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11599: 
; 11600: 			// ?????????
; 11601: 			if (restPoolSlot > 0)

  0039c	33 ff		 xor	 edi, edi
  0039e	83 c4 18	 add	 esp, 24			; 00000018H
  003a1	8d 5f 02	 lea	 ebx, DWORD PTR [edi+2]
  003a4	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?restPoolSlot@@3HA, edi ; restPoolSlot
  003aa	7e 3a		 jle	 SHORT $LN50@poolShopWi

; 11602: 			{
; 11603: 				for (i = 0; i < sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]); i++)

  003ac	be 00 00 00 00	 mov	 esi, OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
$LL10@poolShopWi:

; 11604: 				{
; 11605: 					if (shopWindow2Msg[i][0] != '\0')

  003b1	80 3e 00	 cmp	 BYTE PTR [esi], 0
  003b4	74 23		 je	 SHORT $LN8@poolShopWi

; 11606: 					{
; 11607: 						StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  003b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  003bb	6a 00		 push	 0
  003bd	56		 push	 esi
  003be	83 c0 30	 add	 eax, 48			; 00000030H
  003c1	6a 00		 push	 0
  003c3	03 c7		 add	 eax, edi
  003c5	6a 01		 push	 1
  003c7	50		 push	 eax
  003c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  003cd	83 c0 12	 add	 eax, 18			; 00000012H
  003d0	50		 push	 eax
  003d1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003d6	83 c4 18	 add	 esp, 24			; 00000018H
$LN8@poolShopWi:

; 11602: 			{
; 11603: 				for (i = 0; i < sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]); i++)

  003d9	83 c6 2d	 add	 esi, 45			; 0000002dH
  003dc	83 c7 12	 add	 edi, 18			; 00000012H
  003df	83 eb 01	 sub	 ebx, 1
  003e2	75 cd		 jne	 SHORT $LL10@poolShopWi

; 11608: 							shopWindow2Msg[i], 0);
; 11609: 					}
; 11610: 				}
; 11611: 			}

  003e4	eb 3d		 jmp	 SHORT $LN12@poolShopWi
$LN50@poolShopWi:

; 11612: 			else
; 11613: 			{
; 11614: 				for (i = 0; i < sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]); i++)

  003e6	be 00 00 00 00	 mov	 esi, OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
  003eb	0f 1f 44 00 00	 npad	 5
$LL13@poolShopWi:

; 11615: 				{
; 11616: 					if (shopWindow4Msg[i][0] != '\0')

  003f0	80 3e 00	 cmp	 BYTE PTR [esi], 0
  003f3	74 23		 je	 SHORT $LN11@poolShopWi

; 11617: 					{
; 11618: 						StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  003f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  003fa	6a 00		 push	 0
  003fc	56		 push	 esi
  003fd	83 c0 30	 add	 eax, 48			; 00000030H
  00400	6a 00		 push	 0
  00402	03 c7		 add	 eax, edi
  00404	6a 01		 push	 1
  00406	50		 push	 eax
  00407	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  0040c	83 c0 12	 add	 eax, 18			; 00000012H
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00415	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@poolShopWi:

; 11612: 			else
; 11613: 			{
; 11614: 				for (i = 0; i < sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]); i++)

  00418	83 c6 27	 add	 esi, 39			; 00000027H
  0041b	83 c7 12	 add	 edi, 18			; 00000012H
  0041e	83 eb 01	 sub	 ebx, 1
  00421	75 cd		 jne	 SHORT $LL13@poolShopWi
$LN12@poolShopWi:

; 11619: 							shopWindow4Msg[i], 0);
; 11620: 					}
; 11621: 				}
; 11622: 			}
; 11623: 
; 11624: 
; 11625: 			// ???
; 11626: 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  00423	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  00429	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0042f	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  00434	50		 push	 eax
  00435	e8 00 00 00 00	 call	 _sprintf

; 11627: 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  0043a	6a 00		 push	 0
  0043c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00442	50		 push	 eax
  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  00448	6a 00		 push	 0
  0044a	83 c0 54	 add	 eax, 84			; 00000054H
  0044d	6a 01		 push	 1
  0044f	50		 push	 eax
  00450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  00455	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  0045a	50		 push	 eax
  0045b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11628: 
; 11629: 			// é¡µî?î?
; 11630: 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  00460	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00466	6a 02		 push	 2
  00468	ff 30		 push	 DWORD PTR [eax]
  0046a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0046f	83 c0 64	 add	 eax, 100		; 00000064H
  00472	6a 69		 push	 105			; 00000069H
  00474	50		 push	 eax
  00475	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  0047a	83 c0 20	 add	 eax, 32			; 00000020H
  0047d	50		 push	 eax
  0047e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00483	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA, eax

; 11631: 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  00488	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0048e	6a 02		 push	 2
  00490	ff 30		 push	 DWORD PTR [eax]
  00492	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  00497	83 c0 64	 add	 eax, 100		; 00000064H
  0049a	6a 69		 push	 105			; 00000069H
  0049c	50		 push	 eax
  0049d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  004a2	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004ad	83 c4 4c	 add	 esp, 76			; 0000004cH
  004b0	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA+4, eax

; 11632: 			sprintf(tmsg, "%2d/%2d ìª½", shopWondow2Page + 1, shopWondow2MaxPage);

  004b5	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  004bc	50		 push	 eax
  004bd	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  004c4	40		 inc	 eax
  004c5	50		 push	 eax
  004c6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004cc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 _sprintf

; 11633: 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  004d7	6a 00		 push	 0
  004d9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004df	50		 push	 eax
  004e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  004e5	6a 00		 push	 0
  004e7	83 c0 5c	 add	 eax, 92			; 0000005cH
  004ea	6a 01		 push	 1
  004ec	50		 push	 eax
  004ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  004f2	83 c0 42	 add	 eax, 66			; 00000042H
  004f5	50		 push	 eax
  004f6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11634: 
; 11635: 			j = shopWondow2Page * MAX_SHOP_ITEM;

  004fb	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00502	83 c4 28	 add	 esp, 40			; 00000028H
  00505	8b f8		 mov	 edi, eax
  00507	33 db		 xor	 ebx, ebx
  00509	c1 e7 04	 shl	 edi, 4
  0050c	03 f8		 add	 edi, eax
  0050e	c1 e7 06	 shl	 edi, 6
  00511	81 c7 10 00 00
	00		 add	 edi, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+16
$LL16@poolShopWi:

; 11637: 			{
; 11638: 				if (strlen(poolItem[j + i].name) == 0)

  00517	8b c7		 mov	 eax, edi
  00519	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0051c	0f 1f 40 00	 npad	 4
$LL95@poolShopWi:
  00520	8a 08		 mov	 cl, BYTE PTR [eax]
  00522	40		 inc	 eax
  00523	84 c9		 test	 cl, cl
  00525	75 f9		 jne	 SHORT $LL95@poolShopWi
  00527	2b c2		 sub	 eax, edx
  00529	0f 84 c1 00 00
	00		 je	 $LN14@poolShopWi

; 11639: 					continue;
; 11640: 
; 11641: 				color = itemColor[0];
; 11642: 				if (poolItem[j + i].poolFlag)
; 11643: 					color = itemColor[1];
; 11644: 				if (poolItem[j + i].price > pc.gold)

  0052f	33 c0		 xor	 eax, eax
  00531	b9 07 00 00 00	 mov	 ecx, 7
  00536	66 39 47 fc	 cmp	 WORD PTR [edi-4], ax
  0053a	8b f1		 mov	 esi, ecx

; 11645: 				{
; 11646: 					color = itemColor[1];
; 11647: 				}
; 11648: 				if (restPoolSlot <= 0)
; 11649: 				{
; 11650: 					color = itemColor[1];
; 11651: 				}
; 11652: 
; 11653: 				// ????î¡
; 11654: 				StockFontBuffer(x + 34, y + 118 + i * 21,

  0053c	6a 00		 push	 0
  0053e	0f 44 f0	 cmove	 esi, eax
  00541	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  00544	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  0054a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0054f	0f 4f f1	 cmovg	 esi, ecx
  00552	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?restPoolSlot@@3HA, 0 ; restPoolSlot
  00559	57		 push	 edi
  0055a	0f 4e f1	 cmovle	 esi, ecx
  0055d	83 c0 76	 add	 eax, 118		; 00000076H
  00560	56		 push	 esi
  00561	03 c3		 add	 eax, ebx
  00563	6a 01		 push	 1
  00565	50		 push	 eax
  00566	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  0056b	83 c0 22	 add	 eax, 34			; 00000022H
  0056e	50		 push	 eax
  0056f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11655: 					FONT_PRIO_FRONT, color, poolItem[j + i].name, 0);
; 11656: #ifdef _ITEM_PILENUMS
; 11657: 				sprintf(tmsg, "x%d", poolItem[j + i].num);

  00574	ff 77 74	 push	 DWORD PTR [edi+116]
  00577	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0057d	68 00 00 00 00	 push	 OFFSET ??_C@_03EPCHICDI@x?$CFd@
  00582	50		 push	 eax
  00583	e8 00 00 00 00	 call	 _sprintf

; 11658: 				StockFontBuffer(x + 34 + 250, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  00588	6a 00		 push	 0
  0058a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00590	50		 push	 eax
  00591	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  00596	83 c0 76	 add	 eax, 118		; 00000076H
  00599	56		 push	 esi
  0059a	03 c3		 add	 eax, ebx
  0059c	6a 01		 push	 1
  0059e	50		 push	 eax
  0059f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  005a4	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  005a9	50		 push	 eax
  005aa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11659: #endif
; 11660: 				// ??
; 11661: 				sprintf(tmsg, "%8dï¼³", poolItem[j + i].price);

  005af	ff 77 f4	 push	 DWORD PTR [edi-12]
  005b2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  005b8	68 00 00 00 00	 push	 OFFSET ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
  005bd	50		 push	 eax
  005be	e8 00 00 00 00	 call	 _sprintf
  005c3	83 c4 48	 add	 esp, 72			; 00000048H

; 11662: 				StockFontBuffer(x + 312, y + 118 + i * 21,

  005c6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  005cc	6a 00		 push	 0
  005ce	50		 push	 eax
  005cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  005d4	83 c0 76	 add	 eax, 118		; 00000076H
  005d7	56		 push	 esi
  005d8	03 c3		 add	 eax, ebx
  005da	6a 01		 push	 1
  005dc	50		 push	 eax
  005dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  005e2	05 38 01 00 00	 add	 eax, 312		; 00000138H
  005e7	50		 push	 eax
  005e8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005ed	83 c4 18	 add	 esp, 24			; 00000018H
$LN14@poolShopWi:

; 11636: 			for (i = 0; i < MAX_SHOP_ITEM; i++)

  005f0	83 c3 15	 add	 ebx, 21			; 00000015H
  005f3	81 c7 88 00 00
	00		 add	 edi, 136		; 00000088H
  005f9	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  005ff	0f 8c 12 ff ff
	ff		 jl	 $LL16@poolShopWi

; 11663: 					FONT_PRIO_FRONT, color, tmsg, 0);
; 11664: 			}
; 11665: 
; 11666: 			if (focusId >= 0)

  00605	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  0060b	85 c0		 test	 eax, eax
  0060d	78 67		 js	 SHORT $LN18@poolShopWi

; 11667: 			{
; 11668: 				// ??????
; 11669: 				StockDispBuffer(x + 64, y + 350, DISP_PRIO_IME3, poolItem[focusId].graNo, 0);

  0060f	8b f0		 mov	 esi, eax
  00611	c1 e6 04	 shl	 esi, 4
  00614	03 f0		 add	 esi, eax
  00616	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0061b	6a 00		 push	 0
  0061d	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  00622	ff 34 f5 08 00
	00 00		 push	 DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi*8+8]
  00629	6a 69		 push	 105			; 00000069H
  0062b	50		 push	 eax
  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  00631	83 c0 40	 add	 eax, 64			; 00000040H
  00634	50		 push	 eax
  00635	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0063a	83 c4 14	 add	 esp, 20			; 00000014H
  0063d	8d 34 f5 2d 00
	00 00		 lea	 esi, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi*8+45]
  00644	33 ff		 xor	 edi, edi
$LL19@poolShopWi:

; 11670: 
; 11671: 				for (i = 0; i < sizeof(sealItem[0].info) / sizeof(poolItem[0].info[0]); i++)
; 11672: 				{
; 11673: 					// îî¡
; 11674: 					StockFontBuffer(x + 120, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00646	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0064b	6a 00		 push	 0
  0064d	56		 push	 esi
  0064e	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00653	6a 00		 push	 0
  00655	03 c7		 add	 eax, edi
  00657	6a 01		 push	 1
  00659	50		 push	 eax
  0065a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  0065f	83 c0 78	 add	 eax, 120		; 00000078H
  00662	50		 push	 eax
  00663	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00668	83 c7 14	 add	 edi, 20			; 00000014H
  0066b	83 c4 18	 add	 esp, 24			; 00000018H
  0066e	83 c6 1d	 add	 esi, 29			; 0000001dH
  00671	83 ff 3c	 cmp	 edi, 60			; 0000003cH
  00674	72 d0		 jb	 SHORT $LL19@poolShopWi
$LN18@poolShopWi:

; 11675: 						poolItem[focusId].info[i], 0);
; 11676: 				}
; 11677: 			}
; 11678: 
; 11679: 			// ?????
; 11680: 			btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  00676	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  0067b	6a 02		 push	 2
  0067d	68 bb 65 00 00	 push	 26043			; 000065bbH
  00682	05 92 01 00 00	 add	 eax, 402		; 00000192H
  00687	6a 69		 push	 105			; 00000069H
  00689	50		 push	 eax
  0068a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  0068f	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  00694	50		 push	 eax
  00695	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0069a	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow2@@YAHXZ@4PAHA+8, eax

; 11681: 
; 11682: 			// ?????
; 11683: 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_WIN, 1);

  0069f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??poolShopWindow2@@YAHXZ@4HA
  006a4	99		 cdq
  006a5	2b c2		 sub	 eax, edx
  006a7	6a 01		 push	 1
  006a9	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_WIN@@3HA ; CG_ITEMSHOP_WIN
  006af	d1 f8		 sar	 eax, 1
  006b1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??poolShopWindow2@@YAHXZ@4HA
  006b7	6a 68		 push	 104			; 00000068H
  006b9	50		 push	 eax
  006ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow2@@YAHXZ@4HA
  006bf	99		 cdq
  006c0	2b c2		 sub	 eax, edx
  006c2	d1 f8		 sar	 eax, 1
  006c4	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow2@@YAHXZ@4HA
  006ca	50		 push	 eax
  006cb	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006d0	83 c4 28	 add	 esp, 40			; 00000028H
$LN49@poolShopWi:

; 11684: 		}
; 11685: 	}
; 11686: 
; 11687: 	return ret;
; 11688: }

  006d3	5f		 pop	 edi
  006d4	5e		 pop	 esi
  006d5	33 c0		 xor	 eax, eax
  006d7	5b		 pop	 ebx
  006d8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006db	33 cd		 xor	 ecx, ebp
  006dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006e2	8b e5		 mov	 esp, ebp
  006e4	5d		 pop	 ebp
  006e5	c3		 ret	 0
$LN43@poolShopWi:

; 11566: 		{
; 11567: 			// ?????
; 11568: 			if (id == 2)

  006e6	75 30		 jne	 SHORT $LN44@poolShopWi

; 11569: 			{
; 11570: 				ret = 1;

  006e8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006ee	be 01 00 00 00	 mov	 esi, 1
  006f3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11581: 				}
; 11582: 
; 11583: 			DeathAction(ptActMenuWin);
; 11584: 			ptActMenuWin = NULL;
; 11585: 			if (ret == 100)
; 11586: 			{
; 11587: 				windowTypeWN = -1;
; 11588: 			}
; 11589: 			return ret;

  006f8	83 c4 04	 add	 esp, 4
  006fb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00705	8b c6		 mov	 eax, esi
  00707	5f		 pop	 edi

; 11684: 		}
; 11685: 	}
; 11686: 
; 11687: 	return ret;
; 11688: }

  00708	5e		 pop	 esi
  00709	5b		 pop	 ebx
  0070a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0070d	33 cd		 xor	 ecx, ebp
  0070f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00714	8b e5		 mov	 esp, ebp
  00716	5d		 pop	 ebp
  00717	c3		 ret	 0
$LN44@poolShopWi:

; 11571: 			}
; 11572: 			else
; 11573: 				if (id == 100)

  00718	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0071b	74 3f		 je	 SHORT $LN92@poolShopWi
$LN46@poolShopWi:

; 11576: 				}
; 11577: 				else
; 11578: 				{
; 11579: 					selShopItemNo = selId;
; 11580: 					ret = 2;

  0071d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00723	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopItemNo@@3FA, si ; selShopItemNo
  0072a	be 02 00 00 00	 mov	 esi, 2
  0072f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11581: 				}
; 11582: 
; 11583: 			DeathAction(ptActMenuWin);
; 11584: 			ptActMenuWin = NULL;
; 11585: 			if (ret == 100)
; 11586: 			{
; 11587: 				windowTypeWN = -1;
; 11588: 			}
; 11589: 			return ret;

  00734	83 c4 04	 add	 esp, 4
  00737	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00741	8b c6		 mov	 eax, esi
  00743	5f		 pop	 edi

; 11684: 		}
; 11685: 	}
; 11686: 
; 11687: 	return ret;
; 11688: }

  00744	5e		 pop	 esi
  00745	5b		 pop	 ebx
  00746	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00749	33 cd		 xor	 ecx, ebp
  0074b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00750	8b e5		 mov	 esp, ebp
  00752	5d		 pop	 ebp
  00753	c3		 ret	 0
$LN41@poolShopWi:

; 11558: 		{
; 11559: 			id = 100;
; 11560: 			wnCloseFlag = 0;

  00754	33 c0		 xor	 eax, eax
  00756	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN92@poolShopWi:

; 11574: 				{
; 11575: 					ret = 100;

  0075c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00762	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11684: 		}
; 11685: 	}
; 11686: 
; 11687: 	return ret;
; 11688: }

  00767	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0076a	83 c4 04	 add	 esp, 4
  0076d	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  00772	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0077c	8b c6		 mov	 eax, esi
  0077e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00788	33 cd		 xor	 ecx, ebp
  0078a	5f		 pop	 edi
  0078b	5e		 pop	 esi
  0078c	5b		 pop	 ebx
  0078d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00792	8b e5		 mov	 esp, ebp
  00794	5d		 pop	 ebp
  00795	c3		 ret	 0
?poolShopWindow2@@YAHXZ ENDP				; poolShopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPoolShopWindow2@@YAXXZ
_TEXT	SEGMENT
?initPoolShopWindow2@@YAXXZ PROC			; initPoolShopWindow2, COMDAT

; 11428: 	poolShopWindow2ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?poolShopWindow2ProcNo@@3FA, ax ; poolShopWindow2ProcNo

; 11429: }

  00008	c3		 ret	 0
?initPoolShopWindow2@@YAXXZ ENDP			; initPoolShopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?poolShopWindow1@@YAHXZ
_TEXT	SEGMENT
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?poolShopWindow1@@YAHXZ PROC				; poolShopWindow1, COMDAT

; 11342: int poolShopWindow1(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 11343: 	static int x, y, w, h;
; 11344: 	static int btnId[3];
; 11345: 	int id = 0;
; 11346: 	int i;
; 11347: 	int ret = 0;

  00014	33 f6		 xor	 esi, esi
  00016	57		 push	 edi

; 11348: 
; 11349: 	if (poolShopWindow1ProcNo == 0) {

  00017	66 39 35 00 00
	00 00		 cmp	 WORD PTR ?poolShopWindow1ProcNo@@3FA, si ; poolShopWindow1ProcNo
  0001e	0f 85 80 00 00
	00		 jne	 $LN30@poolShopWi

; 11350: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 11351: 			btnId[i] = -2;
; 11352: 		}
; 11353: 		w = 4;
; 11354: 		h = 3;
; 11355: 		x = (640 - w * 64) / 2;
; 11356: 		y = (456 - h * 48) / 2;
; 11357: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00024	6a 01		 push	 1
  00026	56		 push	 esi
  00027	6a 03		 push	 3
  00029	6a 04		 push	 4
  0002b	68 9c 00 00 00	 push	 156			; 0000009cH
  00030	68 c0 00 00 00	 push	 192			; 000000c0H
  00035	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA, -2 ; fffffffeH
  0003f	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00049	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00053	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA, 4
  0005d	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?h@?1??poolShopWindow1@@YAHXZ@4HA, 3
  00067	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA, 192 ; 000000c0H
  00071	c7 05 00 00 00
	00 9c 00 00 00	 mov	 DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA, 156 ; 0000009cH
  0007b	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00080	8b c8		 mov	 ecx, eax
  00082	83 c4 18	 add	 esp, 24			; 00000018H
  00085	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin

; 11358: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 11359: 		x = ptActMenuWin->x;

  0008b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0008e	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA, eax

; 11360: 		y = ptActMenuWin->y;

  00093	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 11361: #endif
; 11362: 		poolShopWindow1ProcNo++;

  00096	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?poolShopWindow1ProcNo@@3FA ; poolShopWindow1ProcNo
  0009d	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA, eax
  000a2	eb 06		 jmp	 SHORT $LN5@poolShopWi
$LN30@poolShopWi:

; 11348: 
; 11349: 	if (poolShopWindow1ProcNo == 0) {

  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN5@poolShopWi:

; 11363: 	}
; 11364: 
; 11365: 
; 11366: 	if (ptActMenuWin != NULL) {

  000aa	85 c9		 test	 ecx, ecx
  000ac	0f 84 8b 02 00
	00		 je	 $LN15@poolShopWi

; 11367: 		id = -1;

  000b2	83 cf ff	 or	 edi, -1

; 11368: 		if (ptActMenuWin->hp >= 1) {

  000b5	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000b9	7c 14		 jl	 SHORT $LN7@poolShopWi

; 11369: 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  000bb	6a 03		 push	 3
  000bd	68 00 00 00 00	 push	 OFFSET ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA
  000c2	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000c7	8b f8		 mov	 edi, eax
  000c9	83 c4 08	 add	 esp, 8

; 11370: 			ret = id + 1;

  000cc	8d 77 01	 lea	 esi, DWORD PTR [edi+1]
$LN7@poolShopWi:

; 11371: 		}
; 11372: 
; 11373: 		if (CheckMenuFlag()
; 11374: 			|| joy_trg[0] & JOY_ESC
; 11375: 			|| actBtn == 1
; 11376: 			|| menuBtn == 1
; 11377: 			|| disconnectServerFlag == TRUE
; 11378: 			|| wnCloseFlag == 1)

  000cf	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000d4	85 c0		 test	 eax, eax
  000d6	0f 85 1b 02 00
	00		 jne	 $LN9@poolShopWi
  000dc	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000e6	0f 85 0b 02 00
	00		 jne	 $LN9@poolShopWi
  000ec	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000f4	0f 84 fd 01 00
	00		 je	 $LN9@poolShopWi
  000fa	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00102	0f 84 ef 01 00
	00		 je	 $LN9@poolShopWi
  00108	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0010f	0f 84 e2 01 00
	00		 je	 $LN9@poolShopWi
  00115	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0011d	0f 84 d4 01 00
	00		 je	 $LN9@poolShopWi

; 11383: 		}
; 11384: 
; 11385: 		if (0 <= id && id <= 2) {

  00123	85 ff		 test	 edi, edi
  00125	78 7f		 js	 SHORT $LN13@poolShopWi
  00127	83 ff 02	 cmp	 edi, 2
  0012a	7f 6c		 jg	 SHORT $LN27@poolShopWi

; 11386: 			char data[256];
; 11387: 			char msg[256];
; 11388: 			sprintf(data, "%d", ret);

  0012c	56		 push	 esi
  0012d	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 _sprintf

; 11389: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0013e	68 ff 00 00 00	 push	 255			; 000000ffH
  00143	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00149	50		 push	 eax
  0014a	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00156	83 c4 18	 add	 esp, 24			; 00000018H

; 11390: 			if (bNewServer)

  00159	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0015f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00166	50		 push	 eax
  00167	6a 00		 push	 0
  00169	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0016f	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00175	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0017b	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00181	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00187	74 07		 je	 SHORT $LN11@poolShopWi

; 11391: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00189	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0018e	eb 05		 jmp	 SHORT $LN31@poolShopWi
$LN11@poolShopWi:

; 11392: 			else
; 11393: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00190	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN31@poolShopWi:

; 11394: 		}
; 11395: 
; 11396: 		if (id >= 0) {
; 11397: 			if (ret == 3) {

  00195	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN27@poolShopWi:
  00198	83 fe 03	 cmp	 esi, 3
  0019b	0f 85 7a 01 00
	00		 jne	 $LN14@poolShopWi
  001a1	e9 5e 01 00 00	 jmp	 $LN26@poolShopWi
$LN13@poolShopWi:

; 11403: 			return ret;
; 11404: 		}
; 11405: 
; 11406: 		if (ptActMenuWin->hp >= 1) {

  001a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001ab	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001af	0f 8c 88 01 00
	00		 jl	 $LN15@poolShopWi

; 11407: 			int xx;
; 11408: 			xx = (w * 64 - strlen(shopWindow1Title) / 2 * 17) / 2;

  001b5	b8 00 00 00 00	 mov	 eax, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  001ba	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  001bd	0f 1f 00	 npad	 3
$LL28@poolShopWi:
  001c0	8a 08		 mov	 cl, BYTE PTR [eax]
  001c2	40		 inc	 eax
  001c3	84 c9		 test	 cl, cl
  001c5	75 f9		 jne	 SHORT $LL28@poolShopWi

; 11409: 			StockFontBuffer(x + xx, y + 12, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA
  001cd	2b c2		 sub	 eax, edx
  001cf	6a 00		 push	 0
  001d1	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  001d6	d1 e8		 shr	 eax, 1
  001d8	83 c1 0c	 add	 ecx, 12			; 0000000cH
  001db	6a 00		 push	 0
  001dd	6a 01		 push	 1
  001df	51		 push	 ecx
  001e0	8b c8		 mov	 ecx, eax
  001e2	c1 e1 04	 shl	 ecx, 4
  001e5	03 c8		 add	 ecx, eax
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA
  001ec	c1 e0 06	 shl	 eax, 6
  001ef	2b c1		 sub	 eax, ecx
  001f1	d1 e8		 shr	 eax, 1
  001f3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11410: 
; 11411: 			xx = (w * 64 - strlen(shopWindow1Msg) / 2 * 17) / 2;

  001ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  00204	83 c4 18	 add	 esp, 24			; 00000018H
  00207	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0020a	66 0f 1f 44 00
	00		 npad	 6
$LL29@poolShopWi:
  00210	8a 01		 mov	 al, BYTE PTR [ecx]
  00212	41		 inc	 ecx
  00213	84 c0		 test	 al, al
  00215	75 f9		 jne	 SHORT $LL29@poolShopWi

; 11412: 			StockFontBuffer(x + xx, y + 32, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Msg, 0);

  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA
  0021c	2b ca		 sub	 ecx, edx
  0021e	6a 00		 push	 0
  00220	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  00225	d1 e9		 shr	 ecx, 1
  00227	83 c0 20	 add	 eax, 32			; 00000020H
  0022a	6a 00		 push	 0
  0022c	6a 01		 push	 1
  0022e	50		 push	 eax
  0022f	8b c1		 mov	 eax, ecx
  00231	c1 e0 04	 shl	 eax, 4
  00234	03 c1		 add	 eax, ecx
  00236	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA
  0023c	c1 e1 06	 shl	 ecx, 6
  0023f	2b c8		 sub	 ecx, eax
  00241	d1 e9		 shr	 ecx, 1
  00243	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA
  00249	51		 push	 ecx
  0024a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11413: 
; 11414: 			btnId[0] =

  0024f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA
  00254	6a 02		 push	 2
  00256	83 c0 49	 add	 eax, 73			; 00000049H
  00259	68 f1 65 00 00	 push	 26097			; 000065f1H
  0025e	6a 69		 push	 105			; 00000069H
  00260	50		 push	 eax
  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA
  00266	c1 e0 06	 shl	 eax, 6
  00269	99		 cdq
  0026a	2b c2		 sub	 eax, edx
  0026c	d1 f8		 sar	 eax, 1
  0026e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0027a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA, eax

; 11415: 				StockDispBuffer(x + w * 64 / 2, y + 14 / 2 + 66, DISP_PRIO_IME3, CG_SEAL_BTN, 2);
; 11416: 			btnId[1] =

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA
  00284	6a 02		 push	 2
  00286	83 c0 60	 add	 eax, 96			; 00000060H
  00289	68 f2 65 00 00	 push	 26098			; 000065f2H
  0028e	6a 69		 push	 105			; 00000069H
  00290	50		 push	 eax
  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA
  00296	c1 e0 06	 shl	 eax, 6
  00299	99		 cdq
  0029a	2b c2		 sub	 eax, edx
  0029c	d1 f8		 sar	 eax, 1
  0029e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002aa	83 c4 40	 add	 esp, 64			; 00000040H
  002ad	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA+4, eax

; 11417: 				StockDispBuffer(x + w * 64 / 2, y + 13 / 2 + 90, DISP_PRIO_IME3, CG_BUY_BTN, 2);
; 11418: 			btnId[2] =

  002b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??poolShopWindow1@@YAHXZ@4HA
  002b7	83 c0 78	 add	 eax, 120		; 00000078H
  002ba	6a 02		 push	 2
  002bc	68 f0 65 00 00	 push	 26096			; 000065f0H
  002c1	6a 69		 push	 105			; 00000069H
  002c3	50		 push	 eax
  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??poolShopWindow1@@YAHXZ@4HA
  002c9	c1 e0 06	 shl	 eax, 6
  002cc	99		 cdq
  002cd	2b c2		 sub	 eax, edx
  002cf	d1 f8		 sar	 eax, 1
  002d1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??poolShopWindow1@@YAHXZ@4HA
  002d7	50		 push	 eax
  002d8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002dd	83 c4 14	 add	 esp, 20			; 00000014H
  002e0	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??poolShopWindow1@@YAHXZ@4PAHA+8, eax

; 11419: 				StockDispBuffer(x + w * 64 / 2, y + 13 / 2 + 114, DISP_PRIO_IME3, CG_EXIT_BTN, 2);
; 11420: 		}
; 11421: 	}
; 11422: 
; 11423: 	return ret;
; 11424: }

  002e5	8b c6		 mov	 eax, esi
  002e7	5f		 pop	 edi
  002e8	5e		 pop	 esi
  002e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ec	33 cd		 xor	 ecx, ebp
  002ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c3		 ret	 0
$LN9@poolShopWi:

; 11379: 		{
; 11380: 			id = 100;
; 11381: 			ret = 3;
; 11382: 			wnCloseFlag = 0;

  002f7	33 c0		 xor	 eax, eax
  002f9	be 03 00 00 00	 mov	 esi, 3
  002fe	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN26@poolShopWi:

; 11398: 				play_se(203, 320, 240);

  00304	68 f0 00 00 00	 push	 240			; 000000f0H
  00309	68 40 01 00 00	 push	 320			; 00000140H
  0030e	68 cb 00 00 00	 push	 203			; 000000cbH
  00313	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00318	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@poolShopWi:

; 11399: 			}
; 11400: 			DeathAction(ptActMenuWin);

  0031b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00321	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00326	83 c4 04	 add	 esp, 4

; 11401: 			ptActMenuWin = NULL;

  00329	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 11402: 			windowTypeWN = -1;

  00333	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN15@poolShopWi:

; 11419: 				StockDispBuffer(x + w * 64 / 2, y + 13 / 2 + 114, DISP_PRIO_IME3, CG_EXIT_BTN, 2);
; 11420: 		}
; 11421: 	}
; 11422: 
; 11423: 	return ret;
; 11424: }

  0033d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00340	8b c6		 mov	 eax, esi
  00342	5f		 pop	 edi
  00343	33 cd		 xor	 ecx, ebp
  00345	5e		 pop	 esi
  00346	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034b	8b e5		 mov	 esp, ebp
  0034d	5d		 pop	 ebp
  0034e	c3		 ret	 0
?poolShopWindow1@@YAHXZ ENDP				; poolShopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPoolShopWindow1@@YAXXZ
_TEXT	SEGMENT
?initPoolShopWindow1@@YAXXZ PROC			; initPoolShopWindow1, COMDAT

; 11339: 	poolShopWindow1ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?poolShopWindow1ProcNo@@3FA, ax ; poolShopWindow1ProcNo

; 11340: }

  00008	c3		 ret	 0
?initPoolShopWindow1@@YAXXZ ENDP			; initPoolShopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?skillShopWindow4@@YAHXZ
_TEXT	SEGMENT
tv444 = -40						; size = 4
_name$1 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?skillShopWindow4@@YAHXZ PROC				; skillShopWindow4, COMDAT

; 11014: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 11015: 	static int x, y, w, h;
; 11016: 	static int btnId[2];
; 11017: 	static char msg1[128];
; 11018: 	int id;
; 11019: 	int i;
; 11020: 	int ret = 0;
; 11021: 
; 11022: 	if (skillShopWindow4ProcNo == 0)

  00010	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow4ProcNo@@3FA, 0 ; skillShopWindow4ProcNo
  00018	56		 push	 esi
  00019	0f 85 eb 00 00
	00		 jne	 $LN5@skillShopW

; 11023: 	{
; 11024: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 11025: 		{
; 11026: 			btnId[i] = -2;

  0001f	57		 push	 edi

; 11027: 		}
; 11028: 
; 11029: 		// ??????î
; 11030: 		w = 8;
; 11031: 		h = 2;
; 11032: 		x = (640 - w * 64) / 2;
; 11033: 		y = (456 - h * 48) / 2;
; 11034: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 02		 push	 2
  00026	6a 08		 push	 8
  00028	68 b4 00 00 00	 push	 180			; 000000b4H
  0002d	6a 40		 push	 64			; 00000040H
  0002f	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA, -2 ; fffffffeH
  00039	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00043	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?w@?1??skillShopWindow4@@YAHXZ@4HA, 8
  0004d	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??skillShopWindow4@@YAHXZ@4HA, 2
  00057	c7 05 00 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA, 64 ; 00000040H
  00061	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA, 180 ; 000000b4H
  0006b	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00070	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00075	83 c4 18	 add	 esp, 24			; 00000018H

; 11035: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 11036: 		x = ptActMenuWin->x;

  00078	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 11037: 		y = ptActMenuWin->y;

  0007b	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA, eax

; 11038: #endif
; 11039: 
; 11040: 		char name[32];
; 11041: 		if (strlen(pet[selShopSkillPetNo - 1].freeName) > 0)

  00083	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  0008a	69 f0 78 0b 00
	00		 imul	 esi, eax, 2936
  00090	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA, ecx
  00096	8d 86 ed f4 ff
	ff		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[esi-2835]
  0009c	8b d0		 mov	 edx, eax
  0009e	8d 7a 01	 lea	 edi, DWORD PTR [edx+1]
$LL39@skillShopW:
  000a1	8a 0a		 mov	 cl, BYTE PTR [edx]
  000a3	42		 inc	 edx
  000a4	84 c9		 test	 cl, cl
  000a6	75 f9		 jne	 SHORT $LL39@skillShopW
  000a8	2b d7		 sub	 edx, edi
  000aa	5f		 pop	 edi
  000ab	8d 55 dc	 lea	 edx, DWORD PTR _name$1[ebp]
  000ae	74 11		 je	 SHORT $LN6@skillShopW

; 11042: 		{
; 11043: 			strcpy(name, pet[selShopSkillPetNo - 1].freeName);

  000b0	2b d0		 sub	 edx, eax
$LL22@skillShopW:
  000b2	8a 08		 mov	 cl, BYTE PTR [eax]
  000b4	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000b7	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  000bb	84 c9		 test	 cl, cl
  000bd	75 f3		 jne	 SHORT $LL22@skillShopW

; 11044: 		}

  000bf	eb 1c		 jmp	 SHORT $LN7@skillShopW
$LN6@skillShopW:

; 11045: 		else
; 11046: 		{
; 11047: 			strcpy(name, pet[selShopSkillPetNo - 1].name);

  000c1	8d 8e dc f4 ff
	ff		 lea	 ecx, DWORD PTR ?pet@@3PAUPET@@A[esi-2852]
  000c7	2b d1		 sub	 edx, ecx
  000c9	0f 1f 80 00 00
	00 00		 npad	 7
$LL23@skillShopW:
  000d0	8a 01		 mov	 al, BYTE PTR [ecx]
  000d2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000d5	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  000d9	84 c0		 test	 al, al
  000db	75 f3		 jne	 SHORT $LL23@skillShopW
$LN7@skillShopW:

; 11048: 		}
; 11049: 
; 11050: 		sprintf(msg1, "ì[%s]íë¤[%s]", name, sealSkill[selShopSkillNo].name);

  000dd	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  000e4	6b c0 70	 imul	 eax, eax, 112
  000e7	05 0c 00 00 00	 add	 eax, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A+12
  000ec	50		 push	 eax
  000ed	8d 45 dc	 lea	 eax, DWORD PTR _name$1[ebp]
  000f0	50		 push	 eax
  000f1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HHEBCLLE@?$LO?g?$FL?$CFs?$FN?G?O?$LE?Y?$FL?$CFs?$FN@
  000f6	68 00 00 00 00	 push	 OFFSET ?msg1@?1??skillShopWindow4@@YAHXZ@4PADA
  000fb	e8 00 00 00 00	 call	 _sprintf
  00100	83 c4 10	 add	 esp, 16			; 00000010H

; 11051: 
; 11052: 		skillShopWindow4ProcNo++;

  00103	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow4ProcNo@@3FA ; skillShopWindow4ProcNo
$LN5@skillShopW:

; 11053: 	}
; 11054: 
; 11055: 
; 11056: 	if (ptActMenuWin != NULL)

  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0010f	85 c0		 test	 eax, eax
  00111	0f 84 af 01 00
	00		 je	 $LN20@skillShopW

; 11057: 	{
; 11058: 		id = -1;

  00117	83 ce ff	 or	 esi, -1

; 11059: 		if (ptActMenuWin->hp >= 1)

  0011a	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0011e	7c 11		 jl	 SHORT $LN9@skillShopW

; 11060: 		{
; 11061: 			// ????î±î¶îî
; 11062: 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00120	6a 02		 push	 2
  00122	68 00 00 00 00	 push	 OFFSET ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA
  00127	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  0012c	83 c4 08	 add	 esp, 8
  0012f	8b f0		 mov	 esi, eax
$LN9@skillShopW:

; 11063: 		}
; 11064: 
; 11065: 		// î??????î?????????????î¼??
; 11066: 		if (CheckMenuFlag()
; 11067: 			|| joy_trg[0] & JOY_ESC
; 11068: 			|| actBtn == 1
; 11069: 			|| menuBtn == 1
; 11070: 			|| disconnectServerFlag == TRUE
; 11071: 			|| wnCloseFlag == 1)

  00131	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00136	85 c0		 test	 eax, eax
  00138	0f 85 99 01 00
	00		 jne	 $LN11@skillShopW
  0013e	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00148	0f 85 89 01 00
	00		 jne	 $LN11@skillShopW
  0014e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00156	0f 84 7b 01 00
	00		 je	 $LN11@skillShopW
  0015c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00164	0f 84 6d 01 00
	00		 je	 $LN11@skillShopW
  0016a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00171	0f 84 60 01 00
	00		 je	 $LN11@skillShopW
  00177	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0017f	0f 84 52 01 00
	00		 je	 $LN11@skillShopW

; 11075: 		}
; 11076: 
; 11077: 
; 11078: 		if (id >= 0)

  00185	85 f6		 test	 esi, esi
  00187	78 6d		 js	 SHORT $LN12@skillShopW

; 11079: 		{
; 11080: 			if (id == 0)

  00189	75 08		 jne	 SHORT $LN13@skillShopW

; 11081: 			{
; 11082: 				ret = 1;

  0018b	8d 70 01	 lea	 esi, DWORD PTR [eax+1]

; 11083: 			}

  0018e	e9 51 01 00 00	 jmp	 $LN40@skillShopW
$LN13@skillShopW:

; 11084: 			else
; 11085: 				if (id == 1)

  00193	83 fe 01	 cmp	 esi, 1
  00196	75 2e		 jne	 SHORT $LN15@skillShopW

; 11086: 				{
; 11087: 					ret = 2;

  00198	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0019e	be 02 00 00 00	 mov	 esi, 2
  001a3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11101: 			}
; 11102: 			return ret;

  001a8	83 c4 04	 add	 esp, 4
  001ab	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001b5	8b c6		 mov	 eax, esi
  001b7	5e		 pop	 esi

; 11115: }

  001b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bb	33 cd		 xor	 ecx, ebp
  001bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c2	8b e5		 mov	 esp, ebp
  001c4	5d		 pop	 ebp
  001c5	c3		 ret	 0
$LN15@skillShopW:

; 11088: 				}
; 11089: 				else
; 11090: 					if (id == 100)

  001c6	83 fe 64	 cmp	 esi, 100		; 00000064H
  001c9	0f 84 10 01 00
	00		 je	 $LN37@skillShopW

; 11093: 					}
; 11094: 
; 11095: 			DeathAction(ptActMenuWin);

  001cf	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001d5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001da	83 c4 04	 add	 esp, 4

; 11096: 			ptActMenuWin = NULL;
; 11097: 			if (ret == 100
; 11098: 				|| ret == 1)

  001dd	33 f6		 xor	 esi, esi

; 11101: 			}
; 11102: 			return ret;

  001df	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  001e5	8b c6		 mov	 eax, esi
  001e7	5e		 pop	 esi

; 11115: }

  001e8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001eb	33 cd		 xor	 ecx, ebp
  001ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f2	8b e5		 mov	 esp, ebp
  001f4	5d		 pop	 ebp
  001f5	c3		 ret	 0
$LN12@skillShopW:

; 11103: 		}
; 11104: 
; 11105: 
; 11106: 		if (ptActMenuWin->hp >= 1) {

  001f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001fb	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001ff	0f 8c c1 00 00
	00		 jl	 $LN20@skillShopW

; 11107: 			StockFontBuffer(x + 20, y + 20 + 0 * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg1, 0);

  00205	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA
  0020a	6a 00		 push	 0
  0020c	68 00 00 00 00	 push	 OFFSET ?msg1@?1??skillShopWindow4@@YAHXZ@4PADA
  00211	6a 00		 push	 0
  00213	83 c0 14	 add	 eax, 20			; 00000014H
  00216	6a 01		 push	 1
  00218	50		 push	 eax
  00219	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA
  0021e	83 c0 14	 add	 eax, 20			; 00000014H
  00221	50		 push	 eax
  00222	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11108: 			StockFontBuffer(x + 20, y + 20 + 1 * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ì´ê¸°ì ì ë°°ì¸ê¹ìï¼", 0);

  00227	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA
  0022c	6a 00		 push	 0
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BNDDJDJA@?$MA?L?$LB?b?$LM?z?$MA?$LL?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@
  00233	6a 00		 push	 0
  00235	83 c0 28	 add	 eax, 40			; 00000028H
  00238	6a 01		 push	 1
  0023a	50		 push	 eax
  0023b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA
  00240	83 c0 14	 add	 eax, 20			; 00000014H
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 11109: 			btnId[0] = StockDispBuffer(x + w * 64 / 3, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA
  0024e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??skillShopWindow4@@YAHXZ@4HA
  00254	83 c0 48	 add	 eax, 72			; 00000048H
  00257	6a 02		 push	 2
  00259	68 ee 65 00 00	 push	 26094			; 000065eeH
  0025e	6a 69		 push	 105			; 00000069H
  00260	50		 push	 eax
  00261	c1 e1 06	 shl	 ecx, 6
  00264	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  00269	f7 e9		 imul	 ecx
  0026b	8b c2		 mov	 eax, edx
  0026d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00270	03 c2		 add	 eax, edx
  00272	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA
  00278	50		 push	 eax
  00279	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 11110: 			btnId[1] = StockDispBuffer(x + w * 64 / 3 * 2, y + 72, DISP_PRIO_IME3, CG_NO_BTN, 2);

  0027e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??skillShopWindow4@@YAHXZ@4HA
  00284	83 c4 44	 add	 esp, 68			; 00000044H
  00287	83 c1 48	 add	 ecx, 72			; 00000048H
  0028a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA, eax
  0028f	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  00294	6a 02		 push	 2
  00296	68 ef 65 00 00	 push	 26095			; 000065efH
  0029b	6a 69		 push	 105			; 00000069H
  0029d	51		 push	 ecx
  0029e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??skillShopWindow4@@YAHXZ@4HA
  002a4	c1 e1 06	 shl	 ecx, 6
  002a7	f7 e9		 imul	 ecx
  002a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow4@@YAHXZ@4HA
  002ae	8b ca		 mov	 ecx, edx
  002b0	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  002b3	03 ca		 add	 ecx, edx
  002b5	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  002b8	50		 push	 eax
  002b9	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002be	83 c4 14	 add	 esp, 20			; 00000014H
  002c1	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow4@@YAHXZ@4PAHA+4, eax
$LN20@skillShopW:

; 11111: 		}
; 11112: 	}
; 11113: 
; 11114: 	return ret;

  002c6	33 c0		 xor	 eax, eax
  002c8	5e		 pop	 esi

; 11115: }

  002c9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002cc	33 cd		 xor	 ecx, ebp
  002ce	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002d3	8b e5		 mov	 esp, ebp
  002d5	5d		 pop	 ebp
  002d6	c3		 ret	 0
$LN11@skillShopW:

; 11072: 		{
; 11073: 			id = 100;
; 11074: 			wnCloseFlag = 0;

  002d7	33 c0		 xor	 eax, eax
  002d9	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN37@skillShopW:

; 11091: 					{
; 11092: 						ret = 100;

  002df	be 64 00 00 00	 mov	 esi, 100		; 00000064H
$LN40@skillShopW:

; 11099: 			{
; 11100: 				windowTypeWN = -1;

  002e4	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002ea	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11115: }

  002ef	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002f2	83 c4 04	 add	 esp, 4
  002f5	8b c6		 mov	 eax, esi
  002f7	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00301	33 cd		 xor	 ecx, ebp
  00303	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0030d	5e		 pop	 esi
  0030e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00313	8b e5		 mov	 esp, ebp
  00315	5d		 pop	 ebp
  00316	c3		 ret	 0
?skillShopWindow4@@YAHXZ ENDP				; skillShopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSkillShopWindow4@@YAXXZ
_TEXT	SEGMENT
?initSkillShopWindow4@@YAXXZ PROC			; initSkillShopWindow4, COMDAT

; 11009: 	skillShopWindow4ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindow4ProcNo@@3FA, ax ; skillShopWindow4ProcNo

; 11010: }

  00008	c3		 ret	 0
?initSkillShopWindow4@@YAXXZ ENDP			; initSkillShopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?skillShopWindow3@@YAHXZ
_TEXT	SEGMENT
tv421 = -136						; size = 4
_skillName$ = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
?skillShopWindow3@@YAHXZ PROC				; skillShopWindow3, COMDAT

; 10893: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 10894: 	static int x, y, w, h;
; 10895: 	static int btnId[1];
; 10896: 	int id;
; 10897: 	int i;
; 10898: 	int ret = 0;
; 10899: 	int x1, y1, x2, y2;
; 10900: 	char skillName[128];
; 10901: 
; 10902: 	if (skillShopWindow3ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow3ProcNo@@3FA, 0 ; skillShopWindow3ProcNo
  0001b	75 69		 jne	 SHORT $LN45@skillShopW

; 10903: 	{
; 10904: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 10905: 		{
; 10906: 			btnId[i] = -2;
; 10907: 		}
; 10908: 
; 10909: 		// ??????î
; 10910: 		w = 5;
; 10911: 		h = 6;
; 10912: 		x = (640 - w * 64) / 2;
; 10913: 		y = (456 - h * 48) / 2;
; 10914: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001d	6a 01		 push	 1
  0001f	6a 00		 push	 0
  00021	6a 06		 push	 6
  00023	6a 05		 push	 5
  00025	6a 54		 push	 84			; 00000054H
  00027	68 a0 00 00 00	 push	 160			; 000000a0H
  0002c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow3@@YAHXZ@4PAHA, -2 ; fffffffeH
  00036	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?w@?1??skillShopWindow3@@YAHXZ@4HA, 5
  00040	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?h@?1??skillShopWindow3@@YAHXZ@4HA, 6
  0004a	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA, 160 ; 000000a0H
  00054	c7 05 00 00 00
	00 54 00 00 00	 mov	 DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA, 84 ; 00000054H
  0005e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00063	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00068	83 c4 18	 add	 esp, 24			; 00000018H

; 10915: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 10916: 		x = ptActMenuWin->x;

  0006b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA, ecx

; 10917: 		y = ptActMenuWin->y;

  00074	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 10918: #endif
; 10919: 		skillShopWindow3ProcNo++;

  00077	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow3ProcNo@@3FA ; skillShopWindow3ProcNo
  0007e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA, ecx
  00084	eb 05		 jmp	 SHORT $LN11@skillShopW
$LN45@skillShopW:

; 10894: 	static int x, y, w, h;
; 10895: 	static int btnId[1];
; 10896: 	int id;
; 10897: 	int i;
; 10898: 	int ret = 0;
; 10899: 	int x1, y1, x2, y2;
; 10900: 	char skillName[128];
; 10901: 
; 10902: 	if (skillShopWindow3ProcNo == 0)

  00086	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN11@skillShopW:
  0008b	53		 push	 ebx
  0008c	56		 push	 esi
  0008d	57		 push	 edi

; 10920: 	}
; 10921: 
; 10922: 	if (ptActMenuWin != NULL)

  0008e	85 c0		 test	 eax, eax
  00090	0f 84 7b 02 00
	00		 je	 $LN24@skillShopW

; 10923: 	{
; 10924: 		id = -1;

  00096	83 cb ff	 or	 ebx, -1

; 10925: 		if (ptActMenuWin->hp >= 1)

  00099	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0009d	7c 7d		 jl	 SHORT $LN52@skillShopW

; 10926: 		{
; 10927: 			// ????î±î¶îî
; 10928: 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0009f	6a 01		 push	 1
  000a1	68 00 00 00 00	 push	 OFFSET ?btnId@?1??skillShopWindow3@@YAHXZ@4PAHA
  000a6	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000ab	83 c4 08	 add	 esp, 8

; 10929: 
; 10930: 			for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo - 1].maxSkill; i++)

  000ae	33 f6		 xor	 esi, esi
  000b0	8b d8		 mov	 ebx, eax
  000b2	33 ff		 xor	 edi, edi
  000b4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL7@skillShopW:
  000c0	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  000c7	69 c9 78 0b 00
	00		 imul	 ecx, ecx, 2936
  000cd	3b b1 cc f4 ff
	ff		 cmp	 esi, DWORD PTR ?pet@@3PAUPET@@A[ecx-2868]
  000d3	7d 47		 jge	 SHORT $LN52@skillShopW

; 10931: 			{
; 10932: 				x1 = x + 41;
; 10933: 				y1 = y + 33 + (i + 1) * 26;

  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA
  000db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA
  000e1	83 c1 3b	 add	 ecx, 59			; 0000003bH
  000e4	03 cf		 add	 ecx, edi
  000e6	83 c2 29	 add	 edx, 41			; 00000029H

; 10934: 				x2 = x1 + 238;
; 10935: 				y2 = y1 + 22;
; 10936: 				if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  000e9	6a 6b		 push	 107			; 0000006bH
  000eb	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  000ee	50		 push	 eax
  000ef	8d 82 ee 00 00
	00		 lea	 eax, DWORD PTR [edx+238]
  000f5	50		 push	 eax
  000f6	51		 push	 ecx
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000fd	83 c4 14	 add	 esp, 20			; 00000014H
  00100	85 c0		 test	 eax, eax
  00102	74 0c		 je	 SHORT $LN5@skillShopW

; 10937: 				{
; 10938: 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  00104	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0010b	74 03		 je	 SHORT $LN5@skillShopW

; 10939: 					{
; 10940: 						id = i + 1;

  0010d	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
$LN5@skillShopW:

; 10929: 
; 10930: 			for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo - 1].maxSkill; i++)

  00110	83 c7 1a	 add	 edi, 26			; 0000001aH
  00113	46		 inc	 esi
  00114	81 ff b6 00 00
	00		 cmp	 edi, 182		; 000000b6H
  0011a	7c a4		 jl	 SHORT $LL7@skillShopW
$LN52@skillShopW:

; 10941: 					}
; 10942: 				}
; 10943: 			}
; 10944: 		}
; 10945: 
; 10946: 		// î??????î?????????????î¼??
; 10947: 		if (CheckMenuFlag()
; 10948: 			|| joy_trg[0] & JOY_ESC
; 10949: 			|| actBtn == 1
; 10950: 			|| menuBtn == 1
; 10951: 			|| disconnectServerFlag == TRUE
; 10952: 			|| wnCloseFlag == 1)

  0011c	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00121	85 c0		 test	 eax, eax
  00123	0f 85 fb 01 00
	00		 jne	 $LN17@skillShopW
  00129	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00133	0f 85 eb 01 00
	00		 jne	 $LN17@skillShopW
  00139	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00141	0f 84 dd 01 00
	00		 je	 $LN17@skillShopW
  00147	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0014f	0f 84 cf 01 00
	00		 je	 $LN17@skillShopW
  00155	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0015c	0f 84 c2 01 00
	00		 je	 $LN17@skillShopW
  00162	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0016a	0f 84 b4 01 00
	00		 je	 $LN17@skillShopW

; 10956: 		}
; 10957: 
; 10958: 		if (id >= 0)

  00170	85 db		 test	 ebx, ebx
  00172	78 70		 js	 SHORT $LN18@skillShopW

; 10959: 		{
; 10960: 			// ?????
; 10961: 			if (id == 0)

  00174	75 2e		 jne	 SHORT $LN19@skillShopW

; 10962: 			{
; 10963: 				ret = 1;

  00176	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017c	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0017f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10974: 				}
; 10975: 
; 10976: 			DeathAction(ptActMenuWin);
; 10977: 			ptActMenuWin = NULL;
; 10978: 			if (ret == 100)
; 10979: 			{
; 10980: 				windowTypeWN = -1;
; 10981: 			}
; 10982: 			return ret;

  00184	83 c4 04	 add	 esp, 4
  00187	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00191	8b c6		 mov	 eax, esi
  00193	5f		 pop	 edi

; 11000: 		}
; 11001: 	}
; 11002: 
; 11003: 	return ret;
; 11004: }

  00194	5e		 pop	 esi
  00195	5b		 pop	 ebx
  00196	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00199	33 cd		 xor	 ecx, ebp
  0019b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a0	8b e5		 mov	 esp, ebp
  001a2	5d		 pop	 ebp
  001a3	c3		 ret	 0
$LN19@skillShopW:

; 10964: 			}
; 10965: 			else
; 10966: 				if (id == 100)

  001a4	83 fb 64	 cmp	 ebx, 100		; 00000064H
  001a7	0f 84 7f 01 00
	00		 je	 $LN41@skillShopW

; 10969: 				}
; 10970: 				else
; 10971: 				{
; 10972: 					selShopSkillSlotNo = id;
; 10973: 					ret = 2;

  001ad	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001b3	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?selShopSkillSlotNo@@3FA, bx ; selShopSkillSlotNo
  001ba	be 02 00 00 00	 mov	 esi, 2
  001bf	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10974: 				}
; 10975: 
; 10976: 			DeathAction(ptActMenuWin);
; 10977: 			ptActMenuWin = NULL;
; 10978: 			if (ret == 100)
; 10979: 			{
; 10980: 				windowTypeWN = -1;
; 10981: 			}
; 10982: 			return ret;

  001c4	83 c4 04	 add	 esp, 4
  001c7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001d1	8b c6		 mov	 eax, esi
  001d3	5f		 pop	 edi

; 11000: 		}
; 11001: 	}
; 11002: 
; 11003: 	return ret;
; 11004: }

  001d4	5e		 pop	 esi
  001d5	5b		 pop	 ebx
  001d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d9	33 cd		 xor	 ecx, ebp
  001db	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e0	8b e5		 mov	 esp, ebp
  001e2	5d		 pop	 ebp
  001e3	c3		 ret	 0
$LN18@skillShopW:

; 10983: 		}
; 10984: 
; 10985: 		if (ptActMenuWin->hp >= 1)

  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001e9	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001ed	0f 8c 1e 01 00
	00		 jl	 $LN24@skillShopW

; 10986: 		{
; 10987: 			StockFontBuffer(x + 75, y + 33,

  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA
  001f8	6a 00		 push	 0
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BOMDKKC@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?G?R?$LB?n?$LP?d?$KD?$LP@
  001ff	6a 00		 push	 0
  00201	83 c0 21	 add	 eax, 33			; 00000021H
  00204	6a 01		 push	 1
  00206	50		 push	 eax
  00207	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA
  0020c	83 c0 4b	 add	 eax, 75			; 0000004bH
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00215	83 c4 18	 add	 esp, 24			; 00000018H

; 10988: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, "ê·¸ìì¹ìí ê¹ìï¼", 0);
; 10989: 			for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo - 1].maxSkill; i++)

  00218	33 f6		 xor	 esi, esi
  0021a	33 db		 xor	 ebx, ebx
  0021c	0f 1f 40 00	 npad	 4
$LL10@skillShopW:
  00220	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  00227	69 c0 78 0b 00
	00		 imul	 eax, eax, 2936
  0022d	3b b0 cc f4 ff
	ff		 cmp	 esi, DWORD PTR ?pet@@3PAUPET@@A[eax-2868]
  00233	0f 8d ac 00 00
	00		 jge	 $LN9@skillShopW

; 10990: 			{
; 10991: 				sprintf(skillName, "ê¸° %d: ", i + 1);

  00239	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0023c	50		 push	 eax
  0023d	89 85 78 ff ff
	ff		 mov	 DWORD PTR tv421[ebp], eax
  00243	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _skillName$[ebp]
  00249	68 00 00 00 00	 push	 OFFSET ??_C@_07BCAPMAGD@?$LB?b?5?$CFd?3?5@
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 _sprintf

; 10992: 				if (petSkill[selShopSkillPetNo - 1][i].useFlag != 0)

  00254	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  0025b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0025e	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00265	2b c1		 sub	 eax, ecx
  00267	83 c0 f9	 add	 eax, -7			; fffffff9H
  0026a	03 c6		 add	 eax, esi
  0026c	6b c0 6a	 imul	 eax, eax, 106
  0026f	66 83 b8 00 00
	00 00 00	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax], 0
  00277	74 2e		 je	 SHORT $LN36@skillShopW

; 10993: 				{
; 10994: 					strcat(skillName, petSkill[selShopSkillPetNo - 1][i].name);

  00279	8d 80 08 00 00
	00		 lea	 eax, DWORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+8]
  0027f	8b f0		 mov	 esi, eax
$LL43@skillShopW:
  00281	8a 08		 mov	 cl, BYTE PTR [eax]
  00283	40		 inc	 eax
  00284	84 c9		 test	 cl, cl
  00286	75 f9		 jne	 SHORT $LL43@skillShopW
  00288	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR _skillName$[ebp]
  0028e	2b c6		 sub	 eax, esi
  00290	4f		 dec	 edi
$LL44@skillShopW:
  00291	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  00294	47		 inc	 edi
  00295	84 c9		 test	 cl, cl
  00297	75 f8		 jne	 SHORT $LL44@skillShopW
  00299	8b c8		 mov	 ecx, eax
  0029b	c1 e9 02	 shr	 ecx, 2
  0029e	f3 a5		 rep movsd
  002a0	8b c8		 mov	 ecx, eax
  002a2	83 e1 03	 and	 ecx, 3
  002a5	f3 a4		 rep movsb
$LN36@skillShopW:

; 10995: 				}
; 10996: 				StockFontBuffer(x + 46, y + 36 + (i + 1) * 26,

  002a7	6a 00		 push	 0
  002a9	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _skillName$[ebp]
  002af	50		 push	 eax
  002b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA
  002b5	83 c0 3e	 add	 eax, 62			; 0000003eH
  002b8	6a 00		 push	 0
  002ba	03 c3		 add	 eax, ebx
  002bc	6a 01		 push	 1
  002be	50		 push	 eax
  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA
  002c4	83 c0 2e	 add	 eax, 46			; 0000002eH
  002c7	50		 push	 eax
  002c8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002cd	8b b5 78 ff ff
	ff		 mov	 esi, DWORD PTR tv421[ebp]
  002d3	83 c3 1a	 add	 ebx, 26			; 0000001aH
  002d6	83 c4 18	 add	 esp, 24			; 00000018H
  002d9	81 fb b6 00 00
	00		 cmp	 ebx, 182		; 000000b6H
  002df	0f 8c 3b ff ff
	ff		 jl	 $LL10@skillShopW
$LN9@skillShopW:

; 10997: 					FONT_PRIO_FRONT, FONT_PAL_WHITE, skillName, 0);
; 10998: 			}
; 10999: 			btnId[0] = StockDispBuffer(x + 160, y + 256, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  002e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow3@@YAHXZ@4HA
  002ea	6a 02		 push	 2
  002ec	68 bb 65 00 00	 push	 26043			; 000065bbH
  002f1	05 00 01 00 00	 add	 eax, 256		; 00000100H
  002f6	6a 69		 push	 105			; 00000069H
  002f8	50		 push	 eax
  002f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow3@@YAHXZ@4HA
  002fe	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  00303	50		 push	 eax
  00304	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00309	83 c4 14	 add	 esp, 20			; 00000014H
  0030c	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow3@@YAHXZ@4PAHA, eax
$LN24@skillShopW:

; 11000: 		}
; 11001: 	}
; 11002: 
; 11003: 	return ret;
; 11004: }

  00311	5f		 pop	 edi
  00312	5e		 pop	 esi
  00313	33 c0		 xor	 eax, eax
  00315	5b		 pop	 ebx
  00316	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00319	33 cd		 xor	 ecx, ebp
  0031b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00320	8b e5		 mov	 esp, ebp
  00322	5d		 pop	 ebp
  00323	c3		 ret	 0
$LN17@skillShopW:

; 10953: 		{
; 10954: 			id = 100;
; 10955: 			wnCloseFlag = 0;

  00324	33 c0		 xor	 eax, eax
  00326	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN41@skillShopW:

; 10967: 				{
; 10968: 					ret = 100;

  0032c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00332	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 11000: 		}
; 11001: 	}
; 11002: 
; 11003: 	return ret;
; 11004: }

  00337	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0033a	83 c4 04	 add	 esp, 4
  0033d	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  00342	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0034c	8b c6		 mov	 eax, esi
  0034e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00358	33 cd		 xor	 ecx, ebp
  0035a	5f		 pop	 edi
  0035b	5e		 pop	 esi
  0035c	5b		 pop	 ebx
  0035d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00362	8b e5		 mov	 esp, ebp
  00364	5d		 pop	 ebp
  00365	c3		 ret	 0
?skillShopWindow3@@YAHXZ ENDP				; skillShopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSkillShopWindow3@@YAXXZ
_TEXT	SEGMENT
?initSkillShopWindow3@@YAXXZ PROC			; initSkillShopWindow3, COMDAT

; 10885: 	skillShopWindow3ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindow3ProcNo@@3FA, ax ; skillShopWindow3ProcNo

; 10886: }

  00008	c3		 ret	 0
?initSkillShopWindow3@@YAXXZ ENDP			; initSkillShopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?skillShopWindow2@@YAHXZ
_TEXT	SEGMENT
tv997 = -264						; size = 4
_id$1$ = -264						; size = 4
_mybuff$1 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
?skillShopWindow2@@YAHXZ PROC				; skillShopWindow2, COMDAT

; 10756: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 10757: 	static int x, y, w, h;
; 10758: 	static int btnId[1];
; 10759: 	int id;
; 10760: 	int i, j;
; 10761: 	int ret = 0;
; 10762: 	int x1, y1, x2, y2;
; 10763: 	int len;
; 10764: 
; 10765: 	if (skillShopWindow2ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow2ProcNo@@3FA, 0 ; skillShopWindow2ProcNo
  0001b	75 66		 jne	 SHORT $LN54@skillShopW

; 10766: 	{
; 10767: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 10768: 		{
; 10769: 			btnId[i] = -2;
; 10770: 		}
; 10771: 
; 10772: 		// ??????î
; 10773: 		w = 7;
; 10774: 		h = 5;
; 10775: 		x = (640 - w * 64) / 2;
; 10776: 		y = (456 - h * 48) / 2;
; 10777: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001d	6a 01		 push	 1
  0001f	6a 00		 push	 0
  00021	6a 05		 push	 5
  00023	6a 07		 push	 7
  00025	6a 6c		 push	 108			; 0000006cH
  00027	6a 60		 push	 96			; 00000060H
  00029	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow2@@YAHXZ@4PAHA, -2 ; fffffffeH
  00033	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?w@?1??skillShopWindow2@@YAHXZ@4HA, 7
  0003d	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?h@?1??skillShopWindow2@@YAHXZ@4HA, 5
  00047	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA, 96 ; 00000060H
  00051	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA, 108 ; 0000006cH
  0005b	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00065	83 c4 18	 add	 esp, 24			; 00000018H

; 10778: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 10779: 		x = ptActMenuWin->x;

  00068	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA, ecx

; 10780: 		y = ptActMenuWin->y;

  00071	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 10781: #endif
; 10782: 		skillShopWindow2ProcNo++;

  00074	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow2ProcNo@@3FA ; skillShopWindow2ProcNo
  0007b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA, ecx
  00081	eb 05		 jmp	 SHORT $LN11@skillShopW
$LN54@skillShopW:

; 10757: 	static int x, y, w, h;
; 10758: 	static int btnId[1];
; 10759: 	int id;
; 10760: 	int i, j;
; 10761: 	int ret = 0;
; 10762: 	int x1, y1, x2, y2;
; 10763: 	int len;
; 10764: 
; 10765: 	if (skillShopWindow2ProcNo == 0)

  00083	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN11@skillShopW:
  00088	53		 push	 ebx
  00089	56		 push	 esi
  0008a	57		 push	 edi

; 10783: 	}
; 10784: 
; 10785: 	if (ptActMenuWin != NULL)

  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 e1 02 00
	00		 je	 $LN25@skillShopW

; 10786: 	{
; 10787: 		id = -1;

  00093	83 ce ff	 or	 esi, -1

; 10788: 		if (ptActMenuWin->hp >= 1)

  00096	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0009a	0f 8c 7f 00 00
	00		 jl	 $LN6@skillShopW

; 10789: 		{
; 10790: 			// ????î±î¶îî
; 10791: 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  000a0	6a 01		 push	 1
  000a2	68 00 00 00 00	 push	 OFFSET ?btnId@?1??skillShopWindow2@@YAHXZ@4PAHA
  000a7	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000ac	8b f0		 mov	 esi, eax
  000ae	83 c4 08	 add	 esp, 8
  000b1	89 b5 f8 fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], esi
  000b7	33 ff		 xor	 edi, edi
  000b9	33 db		 xor	 ebx, ebx
  000bb	be 76 00 00 00	 mov	 esi, OFFSET ?pet@@3PAUPET@@A+118
$LL7@skillShopW:

; 10794: 				if (pet[i].useFlag != 0) {

  000c0	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  000c4	74 44		 je	 SHORT $LN5@skillShopW

; 10795: 					x1 = x + 41;
; 10796: 					y1 = y + 38 + (j + 1) * 24;

  000c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA
  000cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA
  000d2	83 c1 3e	 add	 ecx, 62			; 0000003eH
  000d5	03 cb		 add	 ecx, ebx
  000d7	83 c2 29	 add	 edx, 41			; 00000029H

; 10797: 					x2 = x1 + 366;
; 10798: 					y2 = y1 + 22;
; 10799: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  000da	6a 6b		 push	 107			; 0000006bH
  000dc	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  000df	50		 push	 eax
  000e0	8d 82 6e 01 00
	00		 lea	 eax, DWORD PTR [edx+366]
  000e6	50		 push	 eax
  000e7	51		 push	 ecx
  000e8	52		 push	 edx
  000e9	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000ee	83 c4 14	 add	 esp, 20			; 00000014H
  000f1	85 c0		 test	 eax, eax
  000f3	74 12		 je	 SHORT $LN16@skillShopW

; 10800: 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  000f5	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000fc	74 09		 je	 SHORT $LN16@skillShopW

; 10801: 							id = i + 1;

  000fe	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00101	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
$LN16@skillShopW:

; 10802: 						}
; 10803: 					}
; 10804: 					j++;

  00107	83 c3 18	 add	 ebx, 24			; 00000018H
$LN5@skillShopW:

; 10792: 
; 10793: 			for (i = 0, j = 0; i < MAX_PET; i++) {

  0010a	81 c6 78 0b 00
	00		 add	 esi, 2936		; 00000b78H
  00110	47		 inc	 edi
  00111	81 fe ce 39 00
	00		 cmp	 esi, OFFSET ?pet@@3PAUPET@@A+14798
  00117	7c a7		 jl	 SHORT $LL7@skillShopW
  00119	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _id$1$[ebp]
$LN6@skillShopW:

; 10805: 				}
; 10806: 			}
; 10807: 		}
; 10808: 		if (CheckMenuFlag()
; 10809: 			|| joy_trg[0] & JOY_ESC
; 10810: 			|| actBtn == 1
; 10811: 			|| menuBtn == 1
; 10812: 			|| disconnectServerFlag == TRUE
; 10813: 			|| wnCloseFlag == 1)

  0011f	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00124	85 c0		 test	 eax, eax
  00126	0f 85 5b 02 00
	00		 jne	 $LN18@skillShopW
  0012c	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00136	0f 85 4b 02 00
	00		 jne	 $LN18@skillShopW
  0013c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00144	0f 84 3d 02 00
	00		 je	 $LN18@skillShopW
  0014a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00152	0f 84 2f 02 00
	00		 je	 $LN18@skillShopW
  00158	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0015f	0f 84 22 02 00
	00		 je	 $LN18@skillShopW
  00165	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0016d	0f 84 14 02 00
	00		 je	 $LN18@skillShopW

; 10817: 		}
; 10818: 
; 10819: 		if (id >= 0) {

  00173	85 f6		 test	 esi, esi
  00175	78 70		 js	 SHORT $LN19@skillShopW

; 10820: 			if (id == 0) {

  00177	75 2e		 jne	 SHORT $LN20@skillShopW

; 10821: 				ret = 1;

  00179	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017f	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00182	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10832: 				}
; 10833: 
; 10834: 			DeathAction(ptActMenuWin);
; 10835: 			ptActMenuWin = NULL;
; 10836: 			if (ret == 100) {
; 10837: 				windowTypeWN = -1;
; 10838: 			}
; 10839: 			return ret;

  00187	83 c4 04	 add	 esp, 4
  0018a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00194	8b c6		 mov	 eax, esi
  00196	5f		 pop	 edi

; 10873: 		}
; 10874: 	}
; 10875: 
; 10876: 	return ret;
; 10877: }

  00197	5e		 pop	 esi
  00198	5b		 pop	 ebx
  00199	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019c	33 cd		 xor	 ecx, ebp
  0019e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a3	8b e5		 mov	 esp, ebp
  001a5	5d		 pop	 ebp
  001a6	c3		 ret	 0
$LN20@skillShopW:

; 10822: 			}
; 10823: 			else
; 10824: 				if (id == 100)

  001a7	83 fe 64	 cmp	 esi, 100		; 00000064H
  001aa	0f 84 df 01 00
	00		 je	 $LN51@skillShopW

; 10827: 				}
; 10828: 				else
; 10829: 				{
; 10830: 					selShopSkillPetNo = id;
; 10831: 					ret = 2;

  001b0	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001b6	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopSkillPetNo@@3FA, si ; selShopSkillPetNo
  001bd	be 02 00 00 00	 mov	 esi, 2
  001c2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10832: 				}
; 10833: 
; 10834: 			DeathAction(ptActMenuWin);
; 10835: 			ptActMenuWin = NULL;
; 10836: 			if (ret == 100) {
; 10837: 				windowTypeWN = -1;
; 10838: 			}
; 10839: 			return ret;

  001c7	83 c4 04	 add	 esp, 4
  001ca	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001d4	8b c6		 mov	 eax, esi
  001d6	5f		 pop	 edi

; 10873: 		}
; 10874: 	}
; 10875: 
; 10876: 	return ret;
; 10877: }

  001d7	5e		 pop	 esi
  001d8	5b		 pop	 ebx
  001d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001dc	33 cd		 xor	 ecx, ebp
  001de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e3	8b e5		 mov	 esp, ebp
  001e5	5d		 pop	 ebp
  001e6	c3		 ret	 0
$LN19@skillShopW:

; 10840: 		}
; 10841: 
; 10842: 		if (ptActMenuWin->hp >= 1) {

  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001f0	0f 8c 7e 01 00
	00		 jl	 $LN25@skillShopW

; 10843: 			StockFontBuffer(x + 145, y + 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ëêµ¬íí ë°°ì¸ê¹ìï¼", 0);

  001f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA
  001fb	6a 00		 push	 0
  001fd	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HCEHBKKL@?$LE?$KJ?$LB?$LI?G?Q?E?W?5?$LJ?h?$LP?o?$LB?n?$LP?d?$KD?$LP@
  00202	6a 00		 push	 0
  00204	83 c0 15	 add	 eax, 21			; 00000015H
  00207	6a 01		 push	 1
  00209	50		 push	 eax
  0020a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA
  0020f	05 91 00 00 00	 add	 eax, 145		; 00000091H
  00214	50		 push	 eax
  00215	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 10844: #ifdef _NB_WINDOWS_PetList
; 10845: 			char mybuff[256];
; 10846: 			sprintf_s(mybuff, "%-16s %-3s  %-5s %-5s  %-5s  %s", "íí¸", "Lv", "HP", "ê³µ", "ë°©", "ë¯¼");

  0021a	68 00 00 00 00	 push	 OFFSET ??_C@_02JPEIBJLC@?$LJ?N@
  0021f	68 00 00 00 00	 push	 OFFSET ??_C@_02MCBFLHBI@?$LJ?f@
  00224	68 00 00 00 00	 push	 OFFSET ??_C@_02BJIFLDEI@?$LA?x@
  00229	68 00 00 00 00	 push	 OFFSET ??_C@_02MEIMKHMB@HP@
  0022e	68 00 00 00 00	 push	 OFFSET ??_C@_02FLIMDJ@Lv@
  00233	68 00 00 00 00	 push	 OFFSET ??_C@_04KDDDLIGD@?F?d?F?$KO@
  00238	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$1[ebp]
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@ONLNCGPF@?$CF?916s?5?$CF?93s?5?5?$CF?95s?5?$CF?95s?5?5?$CF?95s?5?5?$CFs@
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 10847: 			StockFontBuffer(x + 42, y + 41, FONT_PRIO_FRONT, 5, mybuff, 0);

  00249	6a 00		 push	 0
  0024b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$1[ebp]
  00251	50		 push	 eax
  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA
  00257	6a 05		 push	 5
  00259	83 c0 29	 add	 eax, 41			; 00000029H
  0025c	6a 01		 push	 1
  0025e	50		 push	 eax
  0025f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA
  00264	83 c0 2a	 add	 eax, 42			; 0000002aH
  00267	50		 push	 eax
  00268	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0026d	bf 00 01 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA+256
  00272	c7 85 f8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv997[ebp], 0
  0027c	83 c4 50	 add	 esp, 80			; 00000050H
  0027f	be 65 00 00 00	 mov	 esi, OFFSET ?pet@@3PAUPET@@A+101
  00284	81 ef 54 00 00
	00		 sub	 edi, OFFSET ?pet@@3PAUPET@@A+84
  0028a	bb 05 00 00 00	 mov	 ebx, 5
  0028f	90		 npad	 1
$LL10@skillShopW:

; 10850: 				if (pet[i].useFlag != 0) {

  00290	66 83 7e 11 00	 cmp	 WORD PTR [esi+17], 0
  00295	0f 84 8f 00 00
	00		 je	 $LN8@skillShopW

; 10851: 					len = strlen(pet[i].freeName);

  0029b	8b ce		 mov	 ecx, esi
  0029d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL53@skillShopW:
  002a0	8a 01		 mov	 al, BYTE PTR [ecx]
  002a2	41		 inc	 ecx
  002a3	84 c0		 test	 al, al
  002a5	75 f9		 jne	 SHORT $LL53@skillShopW
  002a7	2b ca		 sub	 ecx, edx

; 10852: 					if (len > 0) {

  002a9	85 c9		 test	 ecx, ecx
  002ab	7e 12		 jle	 SHORT $LN27@skillShopW

; 10853: 						strcpy(msgWN[1], pet[i].freeName);

  002ad	8b ce		 mov	 ecx, esi
  002af	90		 npad	 1
$LL30@skillShopW:
  002b0	8a 01		 mov	 al, BYTE PTR [ecx]
  002b2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002b5	88 44 0f ee	 mov	 BYTE PTR [edi+ecx-18], al
  002b9	84 c0		 test	 al, al
  002bb	75 f3		 jne	 SHORT $LL30@skillShopW

; 10854: 					}

  002bd	eb 10		 jmp	 SHORT $LN28@skillShopW
$LN27@skillShopW:

; 10855: 					else {
; 10856: 						len = strlen(pet[i].name);
; 10857: 						strcpy(msgWN[1], pet[i].name);

  002bf	8d 46 ef	 lea	 eax, DWORD PTR [esi-17]
$LL31@skillShopW:
  002c2	8a 08		 mov	 cl, BYTE PTR [eax]
  002c4	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  002c7	88 4c 07 ff	 mov	 BYTE PTR [edi+eax-1], cl
  002cb	84 c9		 test	 cl, cl
  002cd	75 f3		 jne	 SHORT $LL31@skillShopW
$LN28@skillShopW:

; 10858: 					}
; 10859: #ifdef _NB_WINDOWS_PetList
; 10860: 					sprintf(mybuff, "%-16s %-3d  %-5d %-5d  %-5d  %d", msgWN[1], pet[i].level, pet[i].maxHp, pet[i].atk, pet[i].def, pet[i].quick);

  002cf	ff 76 c7	 push	 DWORD PTR [esi-57]
  002d2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$1[ebp]
  002d8	ff 76 c3	 push	 DWORD PTR [esi-61]
  002db	ff 76 bf	 push	 DWORD PTR [esi-65]
  002de	ff 76 a7	 push	 DWORD PTR [esi-89]
  002e1	ff 76 bb	 push	 DWORD PTR [esi-69]
  002e4	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MOGFGPOH@?$CF?916s?5?$CF?93d?5?5?$CF?95d?5?$CF?95d?5?5?$CF?95d?5?5?$CFd@
  002ee	50		 push	 eax
  002ef	e8 00 00 00 00	 call	 _sprintf

; 10861: 					StockFontBuffer(x + 42, y + 41 + (j + 1) * 24, FONT_PRIO_FRONT, FONT_PAL_WHITE, mybuff, 0);

  002f4	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv997[ebp]
  002fa	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$1[ebp]
  00300	6a 00		 push	 0
  00302	50		 push	 eax
  00303	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA
  00308	83 c1 41	 add	 ecx, 65			; 00000041H
  0030b	6a 00		 push	 0
  0030d	03 c1		 add	 eax, ecx
  0030f	6a 01		 push	 1
  00311	50		 push	 eax
  00312	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA
  00317	83 c0 2a	 add	 eax, 42			; 0000002aH
  0031a	50		 push	 eax
  0031b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00320	83 c4 38	 add	 esp, 56			; 00000038H

; 10862: #else
; 10863: 					StockFontBuffer(x + 62, y + 28 + (j + 1) * 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 10864: 					sprintf(msgWN[1], "LV.%d", pet[i].level);
; 10865: 					StockFontBuffer(x + 260, y + 28 + (j + 1) * 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 10866: 					sprintf(msgWN[1], "MaxHP %d", pet[i].maxHp);
; 10867: 					StockFontBuffer(x + 314, y + 28 + (j + 1) * 26, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 10868: #endif
; 10869: 					j++;

  00323	83 85 f8 fe ff
	ff 18		 add	 DWORD PTR tv997[ebp], 24 ; 00000018H
$LN8@skillShopW:

; 10848: #endif
; 10849: 			for (i = 0, j = 0; i < MAX_PET; i++) {

  0032a	81 ef 78 0b 00
	00		 sub	 edi, 2936		; 00000b78H
  00330	81 c6 78 0b 00
	00		 add	 esi, 2936		; 00000b78H
  00336	83 eb 01	 sub	 ebx, 1
  00339	0f 85 51 ff ff
	ff		 jne	 $LL10@skillShopW

; 10870: 				}
; 10871: 			}
; 10872: 			btnId[0] = StockDispBuffer(x + w * 64 / 2, y + 204, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  0033f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow2@@YAHXZ@4HA
  00344	6a 02		 push	 2
  00346	05 cc 00 00 00	 add	 eax, 204		; 000000ccH
  0034b	68 bb 65 00 00	 push	 26043			; 000065bbH
  00350	6a 69		 push	 105			; 00000069H
  00352	50		 push	 eax
  00353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??skillShopWindow2@@YAHXZ@4HA
  00358	c1 e0 06	 shl	 eax, 6
  0035b	99		 cdq
  0035c	2b c2		 sub	 eax, edx
  0035e	d1 f8		 sar	 eax, 1
  00360	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??skillShopWindow2@@YAHXZ@4HA
  00366	50		 push	 eax
  00367	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0036c	83 c4 14	 add	 esp, 20			; 00000014H
  0036f	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow2@@YAHXZ@4PAHA, eax
$LN25@skillShopW:

; 10873: 		}
; 10874: 	}
; 10875: 
; 10876: 	return ret;
; 10877: }

  00374	5f		 pop	 edi
  00375	5e		 pop	 esi
  00376	33 c0		 xor	 eax, eax
  00378	5b		 pop	 ebx
  00379	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0037c	33 cd		 xor	 ecx, ebp
  0037e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00383	8b e5		 mov	 esp, ebp
  00385	5d		 pop	 ebp
  00386	c3		 ret	 0
$LN18@skillShopW:

; 10814: 		{
; 10815: 			id = 100;
; 10816: 			wnCloseFlag = 0;

  00387	33 c0		 xor	 eax, eax
  00389	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN51@skillShopW:

; 10825: 				{
; 10826: 					ret = 100;

  0038f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00395	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10873: 		}
; 10874: 	}
; 10875: 
; 10876: 	return ret;
; 10877: }

  0039a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0039d	83 c4 04	 add	 esp, 4
  003a0	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  003a5	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  003af	8b c6		 mov	 eax, esi
  003b1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  003bb	33 cd		 xor	 ecx, ebp
  003bd	5f		 pop	 edi
  003be	5e		 pop	 esi
  003bf	5b		 pop	 ebx
  003c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003c5	8b e5		 mov	 esp, ebp
  003c7	5d		 pop	 ebp
  003c8	c3		 ret	 0
?skillShopWindow2@@YAHXZ ENDP				; skillShopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSkillShopWindow2@@YAXXZ
_TEXT	SEGMENT
?initSkillShopWindow2@@YAXXZ PROC			; initSkillShopWindow2, COMDAT

; 10748: 	skillShopWindow2ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindow2ProcNo@@3FA, ax ; skillShopWindow2ProcNo

; 10749: }

  00008	c3		 ret	 0
?initSkillShopWindow2@@YAXXZ ENDP			; initSkillShopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?skillShopWindow1@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -292					; size = 8
_prevBtnGraNo$ = -284					; size = 8
tv1183 = -276						; size = 4
_id$1$ = -276						; size = 4
_focusId$1$ = -272					; size = 4
$T1 = -268						; size = 4
_selId$1$ = -268					; size = 4
$T2 = -264						; size = 4
_pushId$1$ = -264					; size = 4
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?skillShopWindow1@@YAHXZ PROC				; skillShopWindow1, COMDAT

; 10498: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 10499: 	static int x, y, w, h;
; 10500: 	static int btnId[3];
; 10501: 	int id;
; 10502: 	int pushId;
; 10503: 	int focusId;
; 10504: 	int selId;
; 10505: 	int i, j;
; 10506: 	int ret = 0;
; 10507: 	char tmsg[256];
; 10508: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 10509: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 10510: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 10511: 	int color;
; 10512: 	int prevBtn, nextBtn;
; 10513: 	int x1, y1, x2, y2;
; 10514: 
; 10515: 	if (skillShopWindow1ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow1ProcNo@@3FA, 0 ; skillShopWindow1ProcNo
  0001b	c7 85 e4 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00025	c7 85 e8 fe ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  0002f	c7 85 dc fe ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00039	c7 85 e0 fe ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00043	0f 85 80 00 00
	00		 jne	 $LN86@skillShopW

; 10516: 	{
; 10517: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 10518: 		{
; 10519: 			btnId[i] = -2;
; 10520: 		}
; 10521: 
; 10522: 		// ??????î
; 10523: 		w = 432;
; 10524: 		h = 428;
; 10525: 		x = (640 - w) / 2;
; 10526: 		y = (456 - h) / 2;
; 10527: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00049	6a ff		 push	 -1
  0004b	6a 00		 push	 0
  0004d	68 ac 01 00 00	 push	 428			; 000001acH
  00052	68 b0 01 00 00	 push	 432			; 000001b0H
  00057	6a 0e		 push	 14			; 0000000eH
  00059	6a 68		 push	 104			; 00000068H
  0005b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA, -2 ; fffffffeH
  00065	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0006f	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00079	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??skillShopWindow1@@YAHXZ@4HA, 432 ; 000001b0H
  00083	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??skillShopWindow1@@YAHXZ@4HA, 428 ; 000001acH
  0008d	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA, 104 ; 00000068H
  00097	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA, 14 ; 0000000eH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 10528: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 10529: 		x = ptActMenuWin->x;

  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA, ecx

; 10530: 		y = ptActMenuWin->y;

  000b7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 10531: #endif
; 10532: 		skillShopWindow1ProcNo++;

  000ba	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow1ProcNo@@3FA ; skillShopWindow1ProcNo
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA, ecx
  000c7	eb 05		 jmp	 SHORT $LN17@skillShopW
$LN86@skillShopW:

; 10499: 	static int x, y, w, h;
; 10500: 	static int btnId[3];
; 10501: 	int id;
; 10502: 	int pushId;
; 10503: 	int focusId;
; 10504: 	int selId;
; 10505: 	int i, j;
; 10506: 	int ret = 0;
; 10507: 	char tmsg[256];
; 10508: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 10509: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 10510: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 10511: 	int color;
; 10512: 	int prevBtn, nextBtn;
; 10513: 	int x1, y1, x2, y2;
; 10514: 
; 10515: 	if (skillShopWindow1ProcNo == 0)

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN17@skillShopW:
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	57		 push	 edi

; 10533: 	}
; 10534: 
; 10535: 
; 10536: 	if (ptActMenuWin != NULL)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 94 05 00
	00		 je	 $LN47@skillShopW

; 10537: 	{
; 10538: 		id = -1;

  000d9	83 cb ff	 or	 ebx, -1

; 10539: 		pushId = -1;

  000dc	0b cb		 or	 ecx, ebx

; 10540: 		focusId = -1;

  000de	89 9d f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx

; 10541: 		selId = -1;

  000e4	0b f3		 or	 esi, ebx
  000e6	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx

; 10542: 
; 10543: 		if (ptActMenuWin->hp >= 1)

  000ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000f0	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi
  000f6	0f 8c d9 00 00
	00		 jl	 $LN6@skillShopW

; 10544: 		{
; 10545: 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000fc	6a 03		 push	 3
  000fe	68 00 00 00 00	 push	 OFFSET ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA
  00103	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 10546: 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  00108	6a 03		 push	 3
  0010a	68 00 00 00 00	 push	 OFFSET ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA
  0010f	89 85 ec fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  00115	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 10547: 
; 10548: 
; 10549: 			j = shopWondow2Page * MAX_SKILL_SHOP_SKILL;

  0011a	0f bf 3d 00 00
	00 00		 movsx	 edi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00121	83 c4 10	 add	 esp, 16			; 00000010H
  00124	c1 e7 03	 shl	 edi, 3
  00127	33 db		 xor	 ebx, ebx
  00129	6b f7 70	 imul	 esi, edi, 112
  0012c	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  00132	81 c6 00 00 00
	00		 add	 esi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
$LL7@skillShopW:

; 10551: 			{
; 10552: 				if (sealSkill[j + i].name[0] != '\0')

  00138	80 7e 0c 00	 cmp	 BYTE PTR [esi+12], 0
  0013c	74 72		 je	 SHORT $LN5@skillShopW

; 10553: 				{
; 10554: 					x1 = x + 32;
; 10555: 					y1 = y + i * 21 + 116;

  0013e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00144	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  0014a	83 c1 74	 add	 ecx, 116		; 00000074H
  0014d	03 cb		 add	 ecx, ebx
  0014f	83 c2 20	 add	 edx, 32			; 00000020H

; 10556: 					x2 = x1 + 372;
; 10557: 					y2 = y1 + 20;
; 10558: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00152	6a 6b		 push	 107			; 0000006bH
  00154	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00157	50		 push	 eax
  00158	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  0015e	50		 push	 eax
  0015f	51		 push	 ecx
  00160	52		 push	 edx
  00161	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00166	83 c4 14	 add	 esp, 20			; 00000014H
  00169	85 c0		 test	 eax, eax
  0016b	74 43		 je	 SHORT $LN5@skillShopW

; 10559: 					{
; 10560: 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  0016d	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00174	74 34		 je	 SHORT $LN24@skillShopW

; 10561: 						{
; 10562: 							if (sealSkill[j + i].price <= pc.gold
; 10563: #ifdef _NB_å® æååºéå£°æè¦æ±
; 10564: 								&& sealSkill[j + i].iCoseFame <= pc.fame

  00176	8b 06		 mov	 eax, DWORD PTR [esi]
  00178	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  0017e	7f 13		 jg	 SHORT $LN23@skillShopW
  00180	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00183	3b 05 64 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+100
  00189	7f 08		 jg	 SHORT $LN23@skillShopW

; 10565: #endif	
; 10566: 								)
; 10567: 							{
; 10568: 								selId = j + i;

  0018b	89 bd f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], edi

; 10569: 							}

  00191	eb 17		 jmp	 SHORT $LN24@skillShopW
$LN23@skillShopW:

; 10570: 							else
; 10571: 							{
; 10572: 								play_se(220, 320, 240);

  00193	68 f0 00 00 00	 push	 240			; 000000f0H
  00198	68 40 01 00 00	 push	 320			; 00000140H
  0019d	68 dc 00 00 00	 push	 220			; 000000dcH
  001a2	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001a7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN24@skillShopW:

; 10573: 							}
; 10574: 						}
; 10575: 						focusId = j + i;

  001aa	89 bd f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], edi
$LN5@skillShopW:

; 10550: 			for (i = 0; i < MAX_SKILL_SHOP_SKILL; i++)

  001b0	83 c3 15	 add	 ebx, 21			; 00000015H
  001b3	83 c6 70	 add	 esi, 112		; 00000070H
  001b6	47		 inc	 edi
  001b7	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  001bd	0f 8c 75 ff ff
	ff		 jl	 $LL7@skillShopW
  001c3	8b 9d ec fe ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  001c9	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _selId$1$[ebp]
  001cf	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
$LN6@skillShopW:

; 10576: 					}
; 10577: 				}
; 10578: 			}
; 10579: 		}
; 10580: 
; 10581: 		if (joy_con[0] & JOY_A)

  001d5	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?joy_con@@3PAKA
  001db	f7 c7 00 04 00
	00		 test	 edi, 1024		; 00000400H
  001e1	74 18		 je	 SHORT $LN26@skillShopW

; 10582: 		{
; 10583: 			pushId = 0;

  001e3	33 c0		 xor	 eax, eax

; 10584: 			if (joy_auto[0] & JOY_A)

  001e5	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  001ef	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  001f5	74 08		 je	 SHORT $LN78@skillShopW

; 10585: 			{
; 10586: 				id = 0;

  001f7	33 db		 xor	 ebx, ebx

; 10587: 			}
; 10588: 		}
; 10589: 		if (pushId == 0)

  001f9	eb 08		 jmp	 SHORT $LN79@skillShopW
$LN26@skillShopW:
  001fb	85 c9		 test	 ecx, ecx
  001fd	75 4b		 jne	 SHORT $LN27@skillShopW
$LN78@skillShopW:

; 10590: 		{
; 10591: 			prevBtn = 1;
; 10592: 			if (id == 0)

  001ff	85 db		 test	 ebx, ebx
  00201	75 32		 jne	 SHORT $LN88@skillShopW
$LN79@skillShopW:

; 10593: 			{
; 10594: 				if (shopWondow2Page > 0)

  00203	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  0020a	66 85 d2	 test	 dx, dx
  0020d	7e 2d		 jle	 SHORT $LN30@skillShopW

; 10595: 				{
; 10596: 					shopWondow2Page--;
; 10597: 					play_se(217, 320, 240);

  0020f	68 f0 00 00 00	 push	 240			; 000000f0H
  00214	66 4a		 dec	 dx
  00216	68 40 01 00 00	 push	 320			; 00000140H
  0021b	68 d9 00 00 00	 push	 217			; 000000d9H
  00220	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00227	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0022c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?joy_con@@3PAKA
  00232	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN88@skillShopW:

; 10598: 				}
; 10599: 			}
; 10600: 		}

  00235	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN30@skillShopW:
  0023c	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  00242	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _prevBtnGraNo$[ebp+4]
  00248	eb 0d		 jmp	 SHORT $LN89@skillShopW
$LN27@skillShopW:

; 10601: 		else
; 10602: 		{
; 10603: 			prevBtn = 0;

  0024a	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00251	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _prevBtnGraNo$[ebp]
$LN89@skillShopW:

; 10604: 		}
; 10605: 
; 10606: 		if (joy_con[0] & JOY_B)

  00257	89 85 f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0025d	f7 c7 00 01 00
	00		 test	 edi, 256		; 00000100H
  00263	74 13		 je	 SHORT $LN32@skillShopW

; 10607: 		{
; 10608: 			pushId = 1;
; 10609: 			if (joy_auto[0] & JOY_B)

  00265	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  0026f	74 0c		 je	 SHORT $LN80@skillShopW

; 10610: 			{
; 10611: 				id = 1;

  00271	bb 01 00 00 00	 mov	 ebx, 1

; 10612: 			}
; 10613: 		}
; 10614: 		if (pushId == 1)

  00276	eb 0a		 jmp	 SHORT $LN81@skillShopW
$LN32@skillShopW:
  00278	83 f9 01	 cmp	 ecx, 1
  0027b	75 42		 jne	 SHORT $LN33@skillShopW
$LN80@skillShopW:

; 10615: 		{
; 10616: 			nextBtn = 1;
; 10617: 			if (id == 1)

  0027d	83 fb 01	 cmp	 ebx, 1
  00280	75 2f		 jne	 SHORT $LN36@skillShopW
$LN81@skillShopW:

; 10618: 			{
; 10619: 				if (shopWondow2Page + 1 < shopWondow2MaxPage)

  00282	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00289	0f bf ca	 movsx	 ecx, dx
  0028c	41		 inc	 ecx
  0028d	3b c8		 cmp	 ecx, eax
  0028f	7d 20		 jge	 SHORT $LN36@skillShopW

; 10620: 				{
; 10621: 					shopWondow2Page++;
; 10622: 					play_se(217, 320, 240);

  00291	68 f0 00 00 00	 push	 240			; 000000f0H
  00296	66 42		 inc	 dx
  00298	68 40 01 00 00	 push	 320			; 00000140H
  0029d	68 d9 00 00 00	 push	 217			; 000000d9H
  002a2	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  002a9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002ae	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN36@skillShopW:

; 10623: 				}
; 10624: 			}
; 10625: 		}

  002b1	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR _nextBtnGraNo$[ebp+4]
  002b7	89 bd f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  002bd	eb 0c		 jmp	 SHORT $LN34@skillShopW
$LN33@skillShopW:

; 10626: 		else
; 10627: 		{
; 10628: 			nextBtn = 0;

  002bf	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
  002c5	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN34@skillShopW:

; 10629: 		}
; 10630: 
; 10631: 		if (CheckMenuFlag()
; 10632: 			|| joy_trg[0] & JOY_ESC
; 10633: 			|| actBtn == 1
; 10634: 			|| menuBtn == 1
; 10635: 			|| disconnectServerFlag == TRUE
; 10636: 			|| wnCloseFlag == 1)

  002cb	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002d0	85 c0		 test	 eax, eax
  002d2	0f 85 0f 04 00
	00		 jne	 $LN38@skillShopW
  002d8	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002e2	0f 85 ff 03 00
	00		 jne	 $LN38@skillShopW
  002e8	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  002f0	0f 84 f1 03 00
	00		 je	 $LN38@skillShopW
  002f6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  002fe	0f 84 e3 03 00
	00		 je	 $LN38@skillShopW
  00304	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0030b	0f 84 d6 03 00
	00		 je	 $LN38@skillShopW
  00311	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00319	0f 84 c8 03 00
	00		 je	 $LN38@skillShopW

; 10640: 		}
; 10641: 
; 10642: 		if (id >= 2
; 10643: 			|| selId >= 0)

  0031f	83 fb 02	 cmp	 ebx, 2
  00322	0f 8d 58 03 00
	00		 jge	 $LN40@skillShopW
  00328	85 f6		 test	 esi, esi
  0032a	0f 89 80 03 00
	00		 jns	 $LN43@skillShopW

; 10669: 		}
; 10670: 
; 10671: 		if (ptActMenuWin->hp >= 1)

  00330	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00335	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00339	0f 8c 2e 03 00
	00		 jl	 $LN47@skillShopW

; 10672: 		{
; 10673: 			int xx;
; 10674: 
; 10675: 			xx = (w - strlen(shopWindow1Title) / 2 * 17) / 2;

  0033f	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00344	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL84@skillShopW:
  00347	8a 01		 mov	 al, BYTE PTR [ecx]
  00349	41		 inc	 ecx
  0034a	84 c0		 test	 al, al
  0034c	75 f9		 jne	 SHORT $LL84@skillShopW

; 10676: 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  0034e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00353	2b ca		 sub	 ecx, edx
  00355	6a 00		 push	 0
  00357	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0035c	d1 e9		 shr	 ecx, 1
  0035e	83 c0 12	 add	 eax, 18			; 00000012H
  00361	6a 00		 push	 0
  00363	6a 01		 push	 1
  00365	50		 push	 eax
  00366	8b c1		 mov	 eax, ecx
  00368	c1 e0 04	 shl	 eax, 4
  0036b	03 c1		 add	 eax, ecx
  0036d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??skillShopWindow1@@YAHXZ@4HA
  00373	2b c8		 sub	 ecx, eax
  00375	d1 e9		 shr	 ecx, 1
  00377	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  0037d	51		 push	 ecx
  0037e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00383	83 c4 18	 add	 esp, 24			; 00000018H
  00386	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  0038b	33 f6		 xor	 esi, esi
  0038d	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
$LL10@skillShopW:

; 10677: 
; 10678: 			for (i = 0; i < sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]); i++)
; 10679: 			{
; 10680: 				if (shopWindow2Msg[0] != '\0')
; 10681: 				{
; 10682: 					StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00390	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00395	6a 00		 push	 0
  00397	57		 push	 edi
  00398	83 c0 30	 add	 eax, 48			; 00000030H
  0039b	6a 00		 push	 0
  0039d	03 c6		 add	 eax, esi
  0039f	6a 01		 push	 1
  003a1	50		 push	 eax
  003a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  003a7	83 c0 12	 add	 eax, 18			; 00000012H
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003b0	83 c4 18	 add	 esp, 24			; 00000018H
  003b3	83 c7 2d	 add	 edi, 45			; 0000002dH
  003b6	83 c6 12	 add	 esi, 18			; 00000012H
  003b9	83 eb 01	 sub	 ebx, 1
  003bc	75 d2		 jne	 SHORT $LL10@skillShopW

; 10683: 						shopWindow2Msg[i], 0);
; 10684: 				}
; 10685: 			}
; 10686: #ifdef _NB_å® æååºéå£°æè¦æ±
; 10687: 			sprintf(tmsg, "ëªì± %8dï¼¦", pc.fame);

  003be	ff 35 64 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+100
  003c4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003ca	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 _sprintf

; 10688: 			StockFontBuffer(x + 244, y + 64, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  003d5	53		 push	 ebx
  003d6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003dc	50		 push	 eax
  003dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  003e2	53		 push	 ebx
  003e3	83 c0 40	 add	 eax, 64			; 00000040H
  003e6	6a 01		 push	 1
  003e8	50		 push	 eax
  003e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  003ee	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 10689: #endif
; 10690: 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  003f9	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  003ff	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00405	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  0040a	50		 push	 eax
  0040b	e8 00 00 00 00	 call	 _sprintf

; 10691: 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00410	53		 push	 ebx
  00411	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00417	50		 push	 eax
  00418	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  0041d	53		 push	 ebx
  0041e	83 c0 54	 add	 eax, 84			; 00000054H
  00421	6a 01		 push	 1
  00423	50		 push	 eax
  00424	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00429	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  0042e	50		 push	 eax
  0042f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 10692: 
; 10693: 			// é¡µî?î?
; 10694: 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  00434	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  0043a	83 c4 48	 add	 esp, 72			; 00000048H
  0043d	6a 02		 push	 2
  0043f	ff 30		 push	 DWORD PTR [eax]
  00441	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00446	83 c0 64	 add	 eax, 100		; 00000064H
  00449	6a 69		 push	 105			; 00000069H
  0044b	50		 push	 eax
  0044c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00451	83 c0 20	 add	 eax, 32			; 00000020H
  00454	50		 push	 eax
  00455	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0045a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA, eax

; 10695: 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  0045f	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00465	6a 02		 push	 2
  00467	ff 30		 push	 DWORD PTR [eax]
  00469	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  0046e	83 c0 64	 add	 eax, 100		; 00000064H
  00471	6a 69		 push	 105			; 00000069H
  00473	50		 push	 eax
  00474	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00479	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0047e	50		 push	 eax
  0047f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00484	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA+4, eax

; 10696: 			sprintf(tmsg, "%2d/%2d ìª½", shopWondow2Page + 1, shopWondow2MaxPage);

  00489	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00490	50		 push	 eax
  00491	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00498	40		 inc	 eax
  00499	50		 push	 eax
  0049a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004a0	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JFOFCMBF@?$CF2d?1?$CF2d?5?B?J@
  004a5	50		 push	 eax
  004a6	e8 00 00 00 00	 call	 _sprintf

; 10697: 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  004ab	53		 push	 ebx
  004ac	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004b2	50		 push	 eax
  004b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  004b8	53		 push	 ebx
  004b9	83 c0 5c	 add	 eax, 92			; 0000005cH
  004bc	6a 01		 push	 1
  004be	50		 push	 eax
  004bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  004c4	83 c0 42	 add	 eax, 66			; 00000042H
  004c7	50		 push	 eax
  004c8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004cd	83 c4 50	 add	 esp, 80			; 00000050H

; 10698: 
; 10699: 			j = shopWondow2Page * MAX_SKILL_SHOP_SKILL;

  004d0	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  004d7	69 f8 80 03 00
	00		 imul	 edi, eax, 896
  004dd	81 c7 00 00 00
	00		 add	 edi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
$LL13@skillShopW:

; 10701: 			{
; 10702: 				if (strlen(sealSkill[j + i].name) == 0)

  004e3	8d 57 0c	 lea	 edx, DWORD PTR [edi+12]
  004e6	8b c2		 mov	 eax, edx
  004e8	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  004eb	0f 1f 44 00 00	 npad	 5
$LL85@skillShopW:
  004f0	8a 08		 mov	 cl, BYTE PTR [eax]
  004f2	40		 inc	 eax
  004f3	84 c9		 test	 cl, cl
  004f5	75 f9		 jne	 SHORT $LL85@skillShopW
  004f7	2b c6		 sub	 eax, esi
  004f9	0f 84 b8 00 00
	00		 je	 $LN11@skillShopW

; 10703: 					continue;
; 10704: 
; 10705: 				color = itemColor[0];
; 10706: 
; 10707: 				if (sealSkill[j + i].price > pc.gold)

  004ff	8b 07		 mov	 eax, DWORD PTR [edi]
  00501	33 f6		 xor	 esi, esi
  00503	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  00509	b9 07 00 00 00	 mov	 ecx, 7

; 10708: 					color = itemColor[1];
; 10709: #ifdef _NB_å® æååºéå£°æè¦æ±
; 10710: 				if (sealSkill[j + i].iCoseFame > pc.fame)

  0050e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00511	0f 4f f1	 cmovg	 esi, ecx
  00514	3b 05 64 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+100

; 10711: 					color = itemColor[1];
; 10712: #endif
; 10713: 				StockFontBuffer(x + 34, y + 118 + i * 21, FONT_PRIO_FRONT, color, sealSkill[j + i].name, 0);

  0051a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  0051f	6a 00		 push	 0
  00521	0f 4f f1	 cmovg	 esi, ecx
  00524	83 c0 76	 add	 eax, 118		; 00000076H
  00527	52		 push	 edx
  00528	56		 push	 esi
  00529	03 c3		 add	 eax, ebx
  0052b	6a 01		 push	 1
  0052d	50		 push	 eax
  0052e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00533	83 c0 22	 add	 eax, 34			; 00000022H
  00536	50		 push	 eax
  00537	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 10714: #ifdef _NB_å® æååºéå£°æè¦æ±
; 10715: 				sprintf(tmsg, "%8dï¼³", sealSkill[j + i].price);

  0053c	ff 37		 push	 DWORD PTR [edi]
  0053e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00544	68 00 00 00 00	 push	 OFFSET ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
  00549	50		 push	 eax
  0054a	e8 00 00 00 00	 call	 _sprintf

; 10716: 				StockFontBuffer(x + 212, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  0054f	6a 00		 push	 0
  00551	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00557	50		 push	 eax
  00558	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  0055d	83 c0 76	 add	 eax, 118		; 00000076H
  00560	56		 push	 esi
  00561	03 c3		 add	 eax, ebx
  00563	6a 01		 push	 1
  00565	50		 push	 eax
  00566	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  0056b	05 d4 00 00 00	 add	 eax, 212		; 000000d4H
  00570	50		 push	 eax
  00571	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 10717: 				sprintf(tmsg, "%8dï¼¦", sealSkill[j + i].iCoseFame);

  00576	ff 77 08	 push	 DWORD PTR [edi+8]
  00579	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0057f	68 00 00 00 00	 push	 OFFSET ??_C@_05HKNHMKDL@?$CF8d?$KD?F@
  00584	50		 push	 eax
  00585	e8 00 00 00 00	 call	 _sprintf
  0058a	83 c4 48	 add	 esp, 72			; 00000048H

; 10718: 				StockFontBuffer(x + 312, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  0058d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00593	6a 00		 push	 0
  00595	50		 push	 eax
  00596	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  0059b	83 c0 76	 add	 eax, 118		; 00000076H
  0059e	56		 push	 esi
  0059f	03 c3		 add	 eax, ebx
  005a1	6a 01		 push	 1
  005a3	50		 push	 eax
  005a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  005a9	05 38 01 00 00	 add	 eax, 312		; 00000138H
  005ae	50		 push	 eax
  005af	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005b4	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@skillShopW:

; 10700: 			for (i = 0; i < MAX_SKILL_SHOP_SKILL; i++)

  005b7	83 c3 15	 add	 ebx, 21			; 00000015H
  005ba	83 c7 70	 add	 edi, 112		; 00000070H
  005bd	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  005c3	0f 8c 1a ff ff
	ff		 jl	 $LL13@skillShopW

; 10719: #else
; 10720: 				sprintf(tmsg, "%8dï¼³", sealSkill[j + i].price);
; 10721: 				StockFontBuffer(x + 312, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);
; 10722: #endif
; 10723: 
; 10724: 			}
; 10725: 
; 10726: 			if (focusId >= 0)

  005c9	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  005cf	85 c0		 test	 eax, eax
  005d1	78 3d		 js	 SHORT $LN15@skillShopW

; 10727: 			{
; 10728: 				for (i = 0; i < sizeof(sealSkill[0].info) / sizeof(sealSkill[0].info[0]); i++)

  005d3	6b f8 70	 imul	 edi, eax, 112
  005d6	33 f6		 xor	 esi, esi
  005d8	81 c7 25 00 00
	00		 add	 edi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A+37
  005de	66 90		 npad	 2
$LL16@skillShopW:

; 10729: 				{
; 10730: 					StockFontBuffer(x + 27, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  005e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  005e5	6a 00		 push	 0
  005e7	57		 push	 edi
  005e8	05 34 01 00 00	 add	 eax, 308		; 00000134H
  005ed	6a 00		 push	 0
  005ef	03 c6		 add	 eax, esi
  005f1	6a 01		 push	 1
  005f3	50		 push	 eax
  005f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  005f9	83 c0 1b	 add	 eax, 27			; 0000001bH
  005fc	50		 push	 eax
  005fd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00602	83 c6 14	 add	 esi, 20			; 00000014H
  00605	83 c4 18	 add	 esp, 24			; 00000018H
  00608	83 c7 19	 add	 edi, 25			; 00000019H
  0060b	83 fe 3c	 cmp	 esi, 60			; 0000003cH
  0060e	72 d0		 jb	 SHORT $LL16@skillShopW
$LN15@skillShopW:

; 10731: 						sealSkill[focusId].info[i], 0);
; 10732: 				}
; 10733: 			}
; 10734: 
; 10735: 			btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  00610	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00615	6a 02		 push	 2
  00617	68 f0 65 00 00	 push	 26096			; 000065f0H
  0061c	05 92 01 00 00	 add	 eax, 402		; 00000192H
  00621	6a 69		 push	 105			; 00000069H
  00623	50		 push	 eax
  00624	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00629	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  0062e	50		 push	 eax
  0062f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00634	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??skillShopWindow1@@YAHXZ@4PAHA+8, eax

; 10736: 
; 10737: 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_SKILLSHOP_WIN, 1);

  00639	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??skillShopWindow1@@YAHXZ@4HA
  0063e	99		 cdq
  0063f	2b c2		 sub	 eax, edx
  00641	6a 01		 push	 1
  00643	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_SKILLSHOP_WIN@@3HA ; CG_SKILLSHOP_WIN
  00649	d1 f8		 sar	 eax, 1
  0064b	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??skillShopWindow1@@YAHXZ@4HA
  00651	6a 68		 push	 104			; 00000068H
  00653	50		 push	 eax
  00654	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??skillShopWindow1@@YAHXZ@4HA
  00659	99		 cdq
  0065a	2b c2		 sub	 eax, edx
  0065c	d1 f8		 sar	 eax, 1
  0065e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??skillShopWindow1@@YAHXZ@4HA
  00664	50		 push	 eax
  00665	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0066a	83 c4 28	 add	 esp, 40			; 00000028H
$LN47@skillShopW:

; 10738: 		}
; 10739: 	}
; 10740: 
; 10741: 	return ret;
; 10742: }

  0066d	5f		 pop	 edi
  0066e	5e		 pop	 esi
  0066f	33 c0		 xor	 eax, eax
  00671	5b		 pop	 ebx
  00672	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00675	33 cd		 xor	 ecx, ebp
  00677	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0067c	8b e5		 mov	 esp, ebp
  0067e	5d		 pop	 ebp
  0067f	c3		 ret	 0
$LN40@skillShopW:

; 10644: 		{
; 10645: 			if (id == 2)

  00680	75 29		 jne	 SHORT $LN41@skillShopW

; 10646: 			{
; 10647: 				ret = 1;
; 10648: 				play_se(203, 320, 240);

  00682	68 f0 00 00 00	 push	 240			; 000000f0H
  00687	68 40 01 00 00	 push	 320			; 00000140H
  0068c	68 cb 00 00 00	 push	 203			; 000000cbH
  00691	be 01 00 00 00	 mov	 esi, 1
  00696	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0069b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006a1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006a6	83 c4 10	 add	 esp, 16			; 00000010H

; 10649: 			}

  006a9	eb 57		 jmp	 SHORT $LN46@skillShopW
$LN41@skillShopW:

; 10650: 			else
; 10651: 				if (id == 100)

  006ab	83 fb 64	 cmp	 ebx, 100		; 00000064H
  006ae	74 3f		 je	 SHORT $LN82@skillShopW
$LN43@skillShopW:

; 10654: 				}
; 10655: 				else
; 10656: 				{
; 10657: 					selShopSkillNo = selId;
; 10658: 					ret = 2;

  006b0	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006b6	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopSkillNo@@3FA, si ; selShopSkillNo
  006bd	be 02 00 00 00	 mov	 esi, 2
  006c2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006c7	83 c4 04	 add	 esp, 4

; 10659: 				}
; 10660: 
; 10661: 			DeathAction(ptActMenuWin);
; 10662: 			ptActMenuWin = NULL;
; 10663: 			if (ret == 100
; 10664: 				|| ret == 1)
; 10665: 			{
; 10666: 				windowTypeWN = -1;
; 10667: 			}
; 10668: 			return ret;

  006ca	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  006d4	8b c6		 mov	 eax, esi
  006d6	5f		 pop	 edi

; 10738: 		}
; 10739: 	}
; 10740: 
; 10741: 	return ret;
; 10742: }

  006d7	5e		 pop	 esi
  006d8	5b		 pop	 ebx
  006d9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006dc	33 cd		 xor	 ecx, ebp
  006de	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006e3	8b e5		 mov	 esp, ebp
  006e5	5d		 pop	 ebp
  006e6	c3		 ret	 0
$LN38@skillShopW:

; 10637: 		{
; 10638: 			id = 100;
; 10639: 			wnCloseFlag = 0;

  006e7	33 c0		 xor	 eax, eax
  006e9	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN82@skillShopW:

; 10652: 				{
; 10653: 					ret = 100;

  006ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006f5	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  006fa	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006ff	83 c4 04	 add	 esp, 4
$LN46@skillShopW:

; 10738: 		}
; 10739: 	}
; 10740: 
; 10741: 	return ret;
; 10742: }

  00702	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00705	8b c6		 mov	 eax, esi
  00707	5f		 pop	 edi
  00708	5e		 pop	 esi
  00709	33 cd		 xor	 ecx, ebp
  0070b	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00715	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0071f	5b		 pop	 ebx
  00720	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00725	8b e5		 mov	 esp, ebp
  00727	5d		 pop	 ebp
  00728	c3		 ret	 0
?skillShopWindow1@@YAHXZ ENDP				; skillShopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSkillShopWindow1@@YAXXZ
_TEXT	SEGMENT
?initSkillShopWindow1@@YAXXZ PROC			; initSkillShopWindow1, COMDAT

; 10494: 	skillShopWindow1ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindow1ProcNo@@3FA, ax ; skillShopWindow1ProcNo

; 10495: }

  00008	c3		 ret	 0
?initSkillShopWindow1@@YAXXZ ENDP			; initSkillShopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow10@@YAHXZ
_TEXT	SEGMENT
_upBtnGraNo$ = -276					; size = 8
_downBtnGraNo$ = -268					; size = 8
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?shopWindow10@@YAHXZ PROC				; shopWindow10, COMDAT

; 9210 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 9211 : 	static int x, y, w, h;
; 9212 : 	static int btnId[4];
; 9213 : 	int upBtnGraNo[] = { CG_UP_BTN, CG_UP_BTN_DOWN };
; 9214 : 	int downBtnGraNo[] = { CG_DOWN_BTN, CG_DOWN_BTN_DOWN };
; 9215 : 	int upBtn, downBtn;
; 9216 : 	int id;
; 9217 : 	int pushId = 0;

  00016	33 ff		 xor	 edi, edi
  00018	c7 85 ec fe ff
	ff 4c 66 00 00	 mov	 DWORD PTR _upBtnGraNo$[ebp], 26188 ; 0000664cH
  00022	c7 85 f0 fe ff
	ff 4d 66 00 00	 mov	 DWORD PTR _upBtnGraNo$[ebp+4], 26189 ; 0000664dH
  0002c	c7 85 f4 fe ff
	ff 4e 66 00 00	 mov	 DWORD PTR _downBtnGraNo$[ebp], 26190 ; 0000664eH
  00036	c7 85 f8 fe ff
	ff 4f 66 00 00	 mov	 DWORD PTR _downBtnGraNo$[ebp+4], 26191 ; 0000664fH

; 9218 : 	int i;
; 9219 : 	int ret = 0;
; 9220 : 	char tmsg[256];
; 9221 : 
; 9222 : 	if (shopWindow10ProcNo == 0) {

  00040	66 39 3d 00 00
	00 00		 cmp	 WORD PTR ?shopWindow10ProcNo@@3FA, di ; shopWindow10ProcNo
  00047	75 73		 jne	 SHORT $LN49@shopWindow

; 9223 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 9224 : 			btnId[i] = -2;

  00049	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 9225 : 		}
; 9226 : 		/*
; 9227 : 			w = 5;///440;
; 9228 : 			h = 2;//160;
; 9229 : 			x = (640-w*70)/2;//(640-w)/2;
; 9230 : 			y = (456-h*40)/2;//(456-h)/2;
; 9231 : 			ptActMenuWin = MakeWindowDisp( x, y, w, h, NULL, 1 );
; 9232 : 	*/
; 9233 : 		w = 440;
; 9234 : 		h = 160;
; 9235 : 		x = (640 - w) / 2;
; 9236 : 		y = (456 - h) / 2;
; 9237 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00050	6a ff		 push	 -1
  00052	57		 push	 edi
  00053	68 a0 00 00 00	 push	 160			; 000000a0H
  00058	68 b8 01 00 00	 push	 440			; 000001b8H
  0005d	68 94 00 00 00	 push	 148			; 00000094H
  00062	6a 64		 push	 100			; 00000064H
  00064	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??shopWindow10@@YAHXZ@4PAHA, xmm0
  0006b	c7 05 00 00 00
	00 b8 01 00 00	 mov	 DWORD PTR ?w@?1??shopWindow10@@YAHXZ@4HA, 440 ; 000001b8H
  00075	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow10@@YAHXZ@4HA, 160 ; 000000a0H
  0007f	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA, 100 ; 00000064H
  00089	c7 05 00 00 00
	00 94 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA, 148 ; 00000094H
  00093	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00098	8b c8		 mov	 ecx, eax
  0009a	83 c4 18	 add	 esp, 24			; 00000018H
  0009d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin

; 9238 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 9239 : 		x = ptActMenuWin->x;

  000a3	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA, eax

; 9240 : 		y = ptActMenuWin->y;

  000ab	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 9241 : #endif
; 9242 : 		shopWindow10ProcNo++;

  000ae	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow10ProcNo@@3FA ; shopWindow10ProcNo
  000b5	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA, eax
  000ba	eb 06		 jmp	 SHORT $LN5@shopWindow
$LN49@shopWindow:

; 9218 : 	int i;
; 9219 : 	int ret = 0;
; 9220 : 	char tmsg[256];
; 9221 : 
; 9222 : 	if (shopWindow10ProcNo == 0) {

  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN5@shopWindow:

; 9243 : 	}
; 9244 : 
; 9245 : 	if (ptActMenuWin != NULL) {

  000c2	85 c9		 test	 ecx, ecx
  000c4	0f 84 48 04 00
	00		 je	 $LN29@shopWindow

; 9246 : 		id = -1;

  000ca	83 ce ff	 or	 esi, -1

; 9247 : 		if (ptActMenuWin->hp >= 1) {

  000cd	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000d1	7c 1f		 jl	 SHORT $LN7@shopWindow

; 9248 : 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000d3	6a 04		 push	 4
  000d5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow10@@YAHXZ@4PAHA
  000da	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 9249 : 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  000df	6a 04		 push	 4
  000e1	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow10@@YAHXZ@4PAHA
  000e6	8b f0		 mov	 esi, eax
  000e8	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId
  000ed	83 c4 10	 add	 esp, 16			; 00000010H
  000f0	8b f8		 mov	 edi, eax
$LN7@shopWindow:

; 9250 : 		}
; 9251 : 
; 9252 : 		if (joy_con[0] & JOY_A) {

  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  000f7	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  000fc	74 12		 je	 SHORT $LN9@shopWindow

; 9253 : 			pushId = 0;

  000fe	33 ff		 xor	 edi, edi

; 9254 : 			if (joy_auto[0] & JOY_A) {

  00100	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  0010a	74 08		 je	 SHORT $LN41@shopWindow

; 9255 : 				id = 0;

  0010c	33 f6		 xor	 esi, esi

; 9256 : 			}
; 9257 : 		}
; 9258 : 		if (pushId == 0) {

  0010e	eb 08		 jmp	 SHORT $LN42@shopWindow
$LN9@shopWindow:
  00110	85 ff		 test	 edi, edi
  00112	75 39		 jne	 SHORT $LN10@shopWindow
$LN41@shopWindow:

; 9259 : 			downBtn = 1;
; 9260 : 			if (id == 0) {

  00114	85 f6		 test	 esi, esi
  00116	75 2d		 jne	 SHORT $LN50@shopWindow
$LN42@shopWindow:

; 9261 : 				if (sealItemCnt > 1) {

  00118	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?sealItemCnt@@3FA, 1 ; sealItemCnt
  00120	7e 23		 jle	 SHORT $LN50@shopWindow

; 9262 : 					sealItemCnt--;

  00122	66 ff 0d 00 00
	00 00		 dec	 WORD PTR ?sealItemCnt@@3FA ; sealItemCnt

; 9263 : 					play_se(217, 320, 240);

  00129	68 f0 00 00 00	 push	 240			; 000000f0H
  0012e	68 40 01 00 00	 push	 320			; 00000140H
  00133	68 d9 00 00 00	 push	 217			; 000000d9H
  00138	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0013d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  00142	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@shopWindow:

; 9264 : 				}
; 9265 : 			}
; 9266 : 		}

  00145	8d 9d f8 fe ff
	ff		 lea	 ebx, DWORD PTR _downBtnGraNo$[ebp+4]
  0014b	eb 06		 jmp	 SHORT $LN11@shopWindow
$LN10@shopWindow:

; 9267 : 		else {
; 9268 : 			downBtn = 0;

  0014d	8d 9d f4 fe ff
	ff		 lea	 ebx, DWORD PTR _downBtnGraNo$[ebp]
$LN11@shopWindow:

; 9269 : 		}
; 9270 : 		if (joy_con[0] & JOY_B) {

  00153	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  00158	74 13		 je	 SHORT $LN15@shopWindow

; 9271 : 			pushId = 1;
; 9272 : 			if (joy_auto[0] & JOY_B) {

  0015a	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  00164	74 0c		 je	 SHORT $LN43@shopWindow

; 9273 : 				id = 1;

  00166	be 01 00 00 00	 mov	 esi, 1

; 9274 : 			}
; 9275 : 		}
; 9276 : 		if (pushId == 1) {

  0016b	eb 0a		 jmp	 SHORT $LN44@shopWindow
$LN15@shopWindow:
  0016d	83 ff 01	 cmp	 edi, 1
  00170	75 77		 jne	 SHORT $LN16@shopWindow
$LN43@shopWindow:

; 9277 : 			upBtn = 1;
; 9278 : 			if (id == 1) {

  00172	83 fe 01	 cmp	 esi, 1
  00175	75 6a		 jne	 SHORT $LN19@shopWindow
$LN44@shopWindow:

; 9279 : 				if (sealItemCnt + 1 <= userItem[selShopItemNo].num
; 9280 : 					&& (userItem[selShopItemNo].price * (sealItemCnt + 1) + pc.gold) <= CHAR_getMaxHaveGold()) {

  00177	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  0017e	69 c8 8c 00 00
	00		 imul	 ecx, eax, 140
  00184	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  0018b	3b 81 84 00 00
	00		 cmp	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+132]
  00191	7d 4e		 jge	 SHORT $LN19@shopWindow
  00193	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  00198	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  0019f	66 8b 3d 00 00
	00 00		 mov	 di, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  001a6	69 c9 8c 00 00
	00		 imul	 ecx, ecx, 140
  001ac	0f bf d7	 movsx	 edx, di
  001af	42		 inc	 edx
  001b0	0f af 91 04 00
	00 00		 imul	 edx, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+4]
  001b7	03 15 60 00 00
	00		 add	 edx, DWORD PTR ?pc@@3UPC@@A+96
  001bd	3b d0		 cmp	 edx, eax
  001bf	7f 20		 jg	 SHORT $LN19@shopWindow

; 9281 : 					sealItemCnt++;
; 9282 : 					play_se(217, 320, 240);

  001c1	68 f0 00 00 00	 push	 240			; 000000f0H
  001c6	68 40 01 00 00	 push	 320			; 00000140H
  001cb	66 47		 inc	 di
  001cd	68 d9 00 00 00	 push	 217			; 000000d9H
  001d2	66 89 3d 00 00
	00 00		 mov	 WORD PTR ?sealItemCnt@@3FA, di ; sealItemCnt
  001d9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001de	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@shopWindow:

; 9283 : 				}
; 9284 : 			}
; 9285 : 		}

  001e1	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR _upBtnGraNo$[ebp+4]
  001e7	eb 06		 jmp	 SHORT $LN17@shopWindow
$LN16@shopWindow:

; 9286 : 		else {
; 9287 : 			upBtn = 0;

  001e9	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR _upBtnGraNo$[ebp]
$LN17@shopWindow:

; 9288 : 		}
; 9289 : 		if (CheckMenuFlag()
; 9290 : 			|| joy_trg[0] & JOY_ESC
; 9291 : 			|| actBtn == 1
; 9292 : 			|| menuBtn == 1
; 9293 : 			|| disconnectServerFlag == TRUE
; 9294 : 			|| wnCloseFlag == 1) {

  001ef	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  001f4	85 c0		 test	 eax, eax
  001f6	0f 85 29 03 00
	00		 jne	 $LN21@shopWindow
  001fc	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00206	0f 85 19 03 00
	00		 jne	 $LN21@shopWindow
  0020c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00214	0f 84 0b 03 00
	00		 je	 $LN21@shopWindow
  0021a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00222	0f 84 fd 02 00
	00		 je	 $LN21@shopWindow
  00228	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0022f	0f 84 f0 02 00
	00		 je	 $LN21@shopWindow
  00235	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0023d	0f 84 e2 02 00
	00		 je	 $LN21@shopWindow

; 9297 : 		}
; 9298 : 
; 9299 : 
; 9300 : 		if (id >= 2) {

  00243	83 fe 02	 cmp	 esi, 2
  00246	0f 8c 97 00 00
	00		 jl	 $LN22@shopWindow

; 9301 : 			if (id == 2) {

  0024c	75 2e		 jne	 SHORT $LN23@shopWindow

; 9302 : 				ret = 1;

  0024e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00254	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00257	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9312 : 			if (ret == 100) {
; 9313 : 				windowTypeWN = -1;
; 9314 : 			}
; 9315 : 			return ret;

  0025c	83 c4 04	 add	 esp, 4
  0025f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00269	8b c6		 mov	 eax, esi
  0026b	5f		 pop	 edi

; 9334 : 		}
; 9335 : 	}
; 9336 : 
; 9337 : 	return ret;
; 9338 : }

  0026c	5e		 pop	 esi
  0026d	5b		 pop	 ebx
  0026e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00271	33 cd		 xor	 ecx, ebp
  00273	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00278	8b e5		 mov	 esp, ebp
  0027a	5d		 pop	 ebp
  0027b	c3		 ret	 0
$LN23@shopWindow:

; 9303 : 			}
; 9304 : 			else if (id == 3) {

  0027c	83 fe 03	 cmp	 esi, 3
  0027f	75 30		 jne	 SHORT $LN25@shopWindow

; 9305 : 				ret = 2;

  00281	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00287	be 02 00 00 00	 mov	 esi, 2
  0028c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9312 : 			if (ret == 100) {
; 9313 : 				windowTypeWN = -1;
; 9314 : 			}
; 9315 : 			return ret;

  00291	83 c4 04	 add	 esp, 4
  00294	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0029e	8b c6		 mov	 eax, esi
  002a0	5f		 pop	 edi

; 9334 : 		}
; 9335 : 	}
; 9336 : 
; 9337 : 	return ret;
; 9338 : }

  002a1	5e		 pop	 esi
  002a2	5b		 pop	 ebx
  002a3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a6	33 cd		 xor	 ecx, ebp
  002a8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ad	8b e5		 mov	 esp, ebp
  002af	5d		 pop	 ebp
  002b0	c3		 ret	 0
$LN25@shopWindow:

; 9306 : 			}
; 9307 : 			else if (id == 100) {

  002b1	83 fe 64	 cmp	 esi, 100		; 00000064H
  002b4	0f 84 73 02 00
	00		 je	 $LN46@shopWindow

; 9309 : 			}
; 9310 : 			DeathAction(ptActMenuWin);

  002ba	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002c0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002c5	83 c4 04	 add	 esp, 4

; 9311 : 			ptActMenuWin = NULL;

  002c8	33 f6		 xor	 esi, esi

; 9312 : 			if (ret == 100) {
; 9313 : 				windowTypeWN = -1;
; 9314 : 			}
; 9315 : 			return ret;

  002ca	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  002d0	8b c6		 mov	 eax, esi
  002d2	5f		 pop	 edi

; 9334 : 		}
; 9335 : 	}
; 9336 : 
; 9337 : 	return ret;
; 9338 : }

  002d3	5e		 pop	 esi
  002d4	5b		 pop	 ebx
  002d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002d8	33 cd		 xor	 ecx, ebp
  002da	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002df	8b e5		 mov	 esp, ebp
  002e1	5d		 pop	 ebp
  002e2	c3		 ret	 0
$LN22@shopWindow:

; 9316 : 		}
; 9317 : 		if (ptActMenuWin->hp >= 1) {//userItem

  002e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002e8	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002ec	0f 8c 20 02 00
	00		 jl	 $LN29@shopWindow

; 9318 : 			int xx;
; 9319 : 			xx = (w - strlen(shopWindow3Msg) / 2 * 17) / 2;

  002f2	b8 00 00 00 00	 mov	 eax, OFFSET ?shopWindow3Msg@@3PADA ; shopWindow3Msg
  002f7	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  002fa	66 0f 1f 44 00
	00		 npad	 6
$LL48@shopWindow:
  00300	8a 08		 mov	 cl, BYTE PTR [eax]
  00302	40		 inc	 eax
  00303	84 c9		 test	 cl, cl
  00305	75 f9		 jne	 SHORT $LL48@shopWindow

; 9320 : 			StockFontBuffer(x + xx, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow3Msg, 0);

  00307	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  0030d	2b c2		 sub	 eax, edx
  0030f	6a 00		 push	 0
  00311	68 00 00 00 00	 push	 OFFSET ?shopWindow3Msg@@3PADA ; shopWindow3Msg
  00316	d1 e8		 shr	 eax, 1
  00318	83 c1 14	 add	 ecx, 20			; 00000014H
  0031b	6a 00		 push	 0
  0031d	6a 01		 push	 1
  0031f	51		 push	 ecx
  00320	8b c8		 mov	 ecx, eax
  00322	c1 e1 04	 shl	 ecx, 4
  00325	03 c8		 add	 ecx, eax
  00327	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow10@@YAHXZ@4HA
  0032c	2b c1		 sub	 eax, ecx
  0032e	d1 e8		 shr	 eax, 1
  00330	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  00336	50		 push	 eax
  00337	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9321 : 			StockFontBuffer(x + 16, y + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, userItem[selShopItemNo].name, 0);

  0033c	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00343	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  00349	6a 00		 push	 0
  0034b	05 10 00 00 00	 add	 eax, OFFSET ?userItem@@3PAUITEM_SHOP@@A+16
  00350	50		 push	 eax
  00351	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  00356	6a 00		 push	 0
  00358	83 c0 34	 add	 eax, 52			; 00000034H
  0035b	6a 01		 push	 1
  0035d	50		 push	 eax
  0035e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  00363	83 c0 10	 add	 eax, 16			; 00000010H
  00366	50		 push	 eax
  00367	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9322 : 			sprintf(tmsg, "%2dä¸ª", sealItemCnt);

  0036c	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  00373	50		 push	 eax
  00374	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0037a	68 00 00 00 00	 push	 OFFSET ??_C@_04HNNONBHM@?$CF2d?$DP@
  0037f	50		 push	 eax
  00380	e8 00 00 00 00	 call	 _sprintf

; 9323 : 			StockFontBuffer(x + 300, y + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00385	6a 00		 push	 0
  00387	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0038d	50		 push	 eax
  0038e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  00393	6a 00		 push	 0
  00395	83 c0 34	 add	 eax, 52			; 00000034H
  00398	6a 01		 push	 1
  0039a	50		 push	 eax
  0039b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  003a0	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  003a5	50		 push	 eax
  003a6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9324 : 			sprintf(tmsg, "%8dï¼³ x %2d = %8dï¼³", userItem[selShopItemNo].price, sealItemCnt, userItem[selShopItemNo].price * sealItemCnt);

  003ab	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  003b2	83 c4 54	 add	 esp, 84			; 00000054H
  003b5	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  003bc	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  003c2	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[eax+4]
  003c8	8b c2		 mov	 eax, edx
  003ca	0f af c1	 imul	 eax, ecx
  003cd	50		 push	 eax
  003ce	51		 push	 ecx
  003cf	52		 push	 edx
  003d0	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PBEPDFJI@?$CF8d?$KD?S?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?S@
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 _sprintf

; 9325 : 			StockFontBuffer(x + 146, y + 82, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  003e1	6a 00		 push	 0
  003e3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003e9	50		 push	 eax
  003ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  003ef	6a 00		 push	 0
  003f1	83 c0 52	 add	 eax, 82			; 00000052H
  003f4	6a 01		 push	 1
  003f6	50		 push	 eax
  003f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  003fc	05 92 00 00 00	 add	 eax, 146		; 00000092H
  00401	50		 push	 eax
  00402	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9326 : 			sprintf(tmsg, "éé± %8dï¼³", pc.gold);

  00407	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  0040d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00413	68 00 00 00 00	 push	 OFFSET ??_C@_09DPNFCMLK@?Q?Q?$DP?5?$CF8d?$KD?S@
  00418	50		 push	 eax
  00419	e8 00 00 00 00	 call	 _sprintf

; 9327 : 			StockFontBuffer(x + 248, y + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  0041e	6a 00		 push	 0
  00420	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00426	50		 push	 eax
  00427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  0042c	6a 00		 push	 0
  0042e	83 c0 78	 add	 eax, 120		; 00000078H
  00431	6a 01		 push	 1
  00433	50		 push	 eax
  00434	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  00439	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  0043e	50		 push	 eax
  0043f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9328 : 			btnId[0] = StockDispBuffer(x + 364, y + 60, DISP_PRIO_IME3, downBtnGraNo[downBtn], 2);

  00444	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  00449	83 c4 50	 add	 esp, 80			; 00000050H
  0044c	83 c0 3c	 add	 eax, 60			; 0000003cH
  0044f	6a 02		 push	 2
  00451	ff 33		 push	 DWORD PTR [ebx]
  00453	6a 69		 push	 105			; 00000069H
  00455	50		 push	 eax
  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  0045b	05 6c 01 00 00	 add	 eax, 364		; 0000016cH
  00460	50		 push	 eax
  00461	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 9329 : 			btnId[1] = StockDispBuffer(x + 404, y + 60, DISP_PRIO_IME3, upBtnGraNo[upBtn], 2);

  00466	6a 02		 push	 2
  00468	ff 37		 push	 DWORD PTR [edi]
  0046a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow10@@YAHXZ@4PAHA, eax
  0046f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  00474	83 c0 3c	 add	 eax, 60			; 0000003cH
  00477	6a 69		 push	 105			; 00000069H
  00479	50		 push	 eax
  0047a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  0047f	05 94 01 00 00	 add	 eax, 404		; 00000194H
  00484	50		 push	 eax
  00485	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0048a	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow10@@YAHXZ@4PAHA+4, eax

; 9330 : 
; 9331 : 			btnId[2] = StockDispBuffer(x + 64, y + 120, DISP_PRIO_IME3, CG_OK_BTN, 2);

  0048f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  00494	6a 02		 push	 2
  00496	68 ed 65 00 00	 push	 26093			; 000065edH
  0049b	83 c0 78	 add	 eax, 120		; 00000078H
  0049e	6a 69		 push	 105			; 00000069H
  004a0	50		 push	 eax
  004a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  004a6	83 c0 40	 add	 eax, 64			; 00000040H
  004a9	50		 push	 eax
  004aa	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004af	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow10@@YAHXZ@4PAHA+8, eax

; 9332 : 			btnId[3] = StockDispBuffer(x + 164, y + 120, DISP_PRIO_IME3, CG_CANCEL_BTN, 2);

  004b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  004b9	6a 02		 push	 2
  004bb	68 c2 65 00 00	 push	 26050			; 000065c2H
  004c0	83 c0 78	 add	 eax, 120		; 00000078H
  004c3	6a 69		 push	 105			; 00000069H
  004c5	50		 push	 eax
  004c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  004cb	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  004d0	50		 push	 eax
  004d1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004d6	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow10@@YAHXZ@4PAHA+12, eax
  004db	83 c4 50	 add	 esp, 80			; 00000050H

; 9333 : 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_KOSU_WIN, 1);

  004de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??shopWindow10@@YAHXZ@4HA
  004e3	99		 cdq
  004e4	2b c2		 sub	 eax, edx
  004e6	6a 01		 push	 1
  004e8	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_KOSU_WIN@@3HA ; CG_ITEMSHOP_KOSU_WIN
  004ee	d1 f8		 sar	 eax, 1
  004f0	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??shopWindow10@@YAHXZ@4HA
  004f6	6a 68		 push	 104			; 00000068H
  004f8	50		 push	 eax
  004f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow10@@YAHXZ@4HA
  004fe	99		 cdq
  004ff	2b c2		 sub	 eax, edx
  00501	d1 f8		 sar	 eax, 1
  00503	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow10@@YAHXZ@4HA
  00509	50		 push	 eax
  0050a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0050f	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@shopWindow:

; 9334 : 		}
; 9335 : 	}
; 9336 : 
; 9337 : 	return ret;
; 9338 : }

  00512	5f		 pop	 edi
  00513	5e		 pop	 esi
  00514	33 c0		 xor	 eax, eax
  00516	5b		 pop	 ebx
  00517	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0051a	33 cd		 xor	 ecx, ebp
  0051c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00521	8b e5		 mov	 esp, ebp
  00523	5d		 pop	 ebp
  00524	c3		 ret	 0
$LN21@shopWindow:

; 9295 : 			id = 100;
; 9296 : 			wnCloseFlag = 0;

  00525	33 c0		 xor	 eax, eax
  00527	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN46@shopWindow:

; 9308 : 				ret = 100;

  0052d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00533	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  00538	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9334 : 		}
; 9335 : 	}
; 9336 : 
; 9337 : 	return ret;
; 9338 : }

  0053d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00540	83 c4 04	 add	 esp, 4
  00543	8b c6		 mov	 eax, esi
  00545	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0054f	33 cd		 xor	 ecx, ebp
  00551	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0055b	5f		 pop	 edi
  0055c	5e		 pop	 esi
  0055d	5b		 pop	 ebx
  0055e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00563	8b e5		 mov	 esp, ebp
  00565	5d		 pop	 ebp
  00566	c3		 ret	 0
?shopWindow10@@YAHXZ ENDP				; shopWindow10
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow10@@YAXXZ
_TEXT	SEGMENT
?initShopWindow10@@YAXXZ PROC				; initShopWindow10, COMDAT

; 9206 : 	shopWindow10ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow10ProcNo@@3FA, ax ; shopWindow10ProcNo

; 9207 : }

  00008	c3		 ret	 0
?initShopWindow10@@YAXXZ ENDP				; initShopWindow10
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow8@@YAHXZ
_TEXT	SEGMENT
?shopWindow8@@YAHXZ PROC				; shopWindow8, COMDAT

; 9113 : 	static int x, y, w, h;
; 9114 : 	static int btnId[1];
; 9115 : 	int id;
; 9116 : 	int i;
; 9117 : 	int ret = 0;
; 9118 : 
; 9119 : 	if (shopWindow8ProcNo == 0)

  00000	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow8ProcNo@@3FA, 0 ; shopWindow8ProcNo
  00008	75 6c		 jne	 SHORT $LN32@shopWindow

; 9120 : 	{
; 9121 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 9122 : 		{
; 9123 : 			btnId[i] = -2;
; 9124 : 		}
; 9125 : 
; 9126 : 		// ??????î
; 9127 : 		w = 6;
; 9128 : 		h = 2;
; 9129 : 		x = (640 - w * 64) / 2;
; 9130 : 		y = (456 - h * 48) / 2;
; 9131 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	6a 06		 push	 6
  00012	68 b4 00 00 00	 push	 180			; 000000b4H
  00017	68 80 00 00 00	 push	 128			; 00000080H
  0001c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow8@@YAHXZ@4PAHA, -2 ; fffffffeH
  00026	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?w@?1??shopWindow8@@YAHXZ@4HA, 6
  00030	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow8@@YAHXZ@4HA, 2
  0003a	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow8@@YAHXZ@4HA, 128 ; 00000080H
  00044	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow8@@YAHXZ@4HA, 180 ; 000000b4H
  0004e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00058	83 c4 18	 add	 esp, 24			; 00000018H

; 9132 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 9133 : 		x = ptActMenuWin->x;

  0005b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow8@@YAHXZ@4HA, ecx

; 9134 : 		y = ptActMenuWin->y;

  00064	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 9135 : #endif
; 9136 : 		shopWindow8ProcNo++;

  00067	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow8ProcNo@@3FA ; shopWindow8ProcNo
  0006e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??shopWindow8@@YAHXZ@4HA, ecx
  00074	eb 05		 jmp	 SHORT $LN8@shopWindow
$LN32@shopWindow:

; 9113 : 	static int x, y, w, h;
; 9114 : 	static int btnId[1];
; 9115 : 	int id;
; 9116 : 	int i;
; 9117 : 	int ret = 0;
; 9118 : 
; 9119 : 	if (shopWindow8ProcNo == 0)

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN8@shopWindow:
  0007b	56		 push	 esi

; 9137 : 	}
; 9138 : 
; 9139 : 
; 9140 : 	if (ptActMenuWin != NULL)

  0007c	85 c0		 test	 eax, eax
  0007e	0f 84 27 01 00
	00		 je	 $LN18@shopWindow

; 9141 : 	{
; 9142 : 		id = -1;

  00084	83 ce ff	 or	 esi, -1

; 9143 : 		if (ptActMenuWin->hp >= 1)

  00087	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0008b	7c 11		 jl	 SHORT $LN10@shopWindow

; 9144 : 		{
; 9145 : 			// ????î±î¶îî
; 9146 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0008d	6a 01		 push	 1
  0008f	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow8@@YAHXZ@4PAHA
  00094	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00099	83 c4 08	 add	 esp, 8
  0009c	8b f0		 mov	 esi, eax
$LN10@shopWindow:

; 9147 : 		}
; 9148 : 
; 9149 : 		// î??????î?????????????î¼??
; 9150 : 		if (CheckMenuFlag()
; 9151 : 			|| joy_trg[0] & JOY_ESC
; 9152 : 			|| actBtn == 1
; 9153 : 			|| menuBtn == 1
; 9154 : 			|| disconnectServerFlag == TRUE
; 9155 : 			|| wnCloseFlag == 1)

  0009e	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000a3	85 c0		 test	 eax, eax
  000a5	0f 85 04 01 00
	00		 jne	 $LN12@shopWindow
  000ab	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000b5	0f 85 f4 00 00
	00		 jne	 $LN12@shopWindow
  000bb	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000c3	0f 84 e6 00 00
	00		 je	 $LN12@shopWindow
  000c9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000d1	0f 84 d8 00 00
	00		 je	 $LN12@shopWindow
  000d7	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000de	0f 84 cb 00 00
	00		 je	 $LN12@shopWindow
  000e4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000ec	0f 84 bd 00 00
	00		 je	 $LN12@shopWindow

; 9159 : 		}
; 9160 : 
; 9161 : 
; 9162 : 		if (id >= 0)

  000f2	85 f6		 test	 esi, esi
  000f4	78 44		 js	 SHORT $LN13@shopWindow

; 9163 : 		{
; 9164 : 			if (id == 0)

  000f6	75 1f		 jne	 SHORT $LN14@shopWindow

; 9165 : 			{
; 9166 : 				ret = 1;

  000f8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000fe	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00101	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9176 : 			if (ret == 100)
; 9177 : 			{
; 9178 : 				windowTypeWN = -1;
; 9179 : 			}
; 9180 : 			return ret;

  00106	83 c4 04	 add	 esp, 4
  00109	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00113	8b c6		 mov	 eax, esi
  00115	5e		 pop	 esi

; 9201 : }

  00116	c3		 ret	 0
$LN14@shopWindow:

; 9167 : 			}
; 9168 : 			else
; 9169 : 				if (id == 100)

  00117	83 fe 64	 cmp	 esi, 100		; 00000064H
  0011a	0f 84 97 00 00
	00		 je	 $LN30@shopWindow

; 9172 : 				}
; 9173 : 
; 9174 : 			DeathAction(ptActMenuWin);

  00120	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00126	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0012b	83 c4 04	 add	 esp, 4

; 9175 : 			ptActMenuWin = NULL;

  0012e	33 f6		 xor	 esi, esi

; 9176 : 			if (ret == 100)
; 9177 : 			{
; 9178 : 				windowTypeWN = -1;
; 9179 : 			}
; 9180 : 			return ret;

  00130	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  00136	8b c6		 mov	 eax, esi
  00138	5e		 pop	 esi

; 9201 : }

  00139	c3		 ret	 0
$LN13@shopWindow:

; 9181 : 		}
; 9182 : 
; 9183 : 
; 9184 : 		if (ptActMenuWin->hp >= 1)

  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0013f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00143	7c 66		 jl	 SHORT $LN18@shopWindow

; 9185 : 		{
; 9186 : 			// ?????????
; 9187 : 			for (i = 0; i < sizeof(shopWindow8Msg) / sizeof(shopWindow8Msg[0]); i++)

  00145	33 f6		 xor	 esi, esi
  00147	53		 push	 ebx
  00148	57		 push	 edi
  00149	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow8Msg@@3PAY0CH@DA ; shopWindow8Msg
  0014e	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
$LL7@shopWindow:

; 9188 : 			{
; 9189 : 				if (shopWindow8Msg[0] != '\0')
; 9190 : 				{
; 9191 : 					StockFontBuffer(x + 20, y + 20 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow8@@YAHXZ@4HA
  00156	6a 00		 push	 0
  00158	57		 push	 edi
  00159	83 c0 14	 add	 eax, 20			; 00000014H
  0015c	6a 00		 push	 0
  0015e	03 c6		 add	 eax, esi
  00160	6a 01		 push	 1
  00162	50		 push	 eax
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow8@@YAHXZ@4HA
  00168	83 c0 14	 add	 eax, 20			; 00000014H
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00171	83 c4 18	 add	 esp, 24			; 00000018H
  00174	83 c7 27	 add	 edi, 39			; 00000027H
  00177	83 c6 14	 add	 esi, 20			; 00000014H
  0017a	83 eb 01	 sub	 ebx, 1
  0017d	75 d2		 jne	 SHORT $LL7@shopWindow

; 9192 : 						shopWindow8Msg[i], 0);
; 9193 : 				}
; 9194 : 			}
; 9195 : 
; 9196 : 			btnId[0] = StockDispBuffer(x + 192, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow8@@YAHXZ@4HA
  00184	6a 02		 push	 2
  00186	68 ee 65 00 00	 push	 26094			; 000065eeH
  0018b	83 c0 48	 add	 eax, 72			; 00000048H
  0018e	6a 69		 push	 105			; 00000069H
  00190	50		 push	 eax
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow8@@YAHXZ@4HA
  00196	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001a1	83 c4 14	 add	 esp, 20			; 00000014H
  001a4	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow8@@YAHXZ@4PAHA, eax
  001a9	5f		 pop	 edi
  001aa	5b		 pop	 ebx
$LN18@shopWindow:

; 9197 : 		}
; 9198 : 	}
; 9199 : 
; 9200 : 	return ret;

  001ab	33 c0		 xor	 eax, eax
  001ad	5e		 pop	 esi

; 9201 : }

  001ae	c3		 ret	 0
$LN12@shopWindow:

; 9156 : 		{
; 9157 : 			id = 100;
; 9158 : 			wnCloseFlag = 0;

  001af	33 c0		 xor	 eax, eax
  001b1	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN30@shopWindow:

; 9170 : 				{
; 9171 : 					ret = 100;

  001b7	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001bd	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  001c2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9176 : 			if (ret == 100)
; 9177 : 			{
; 9178 : 				windowTypeWN = -1;
; 9179 : 			}
; 9180 : 			return ret;

  001c7	83 c4 04	 add	 esp, 4
  001ca	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  001d4	8b c6		 mov	 eax, esi
  001d6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001e0	5e		 pop	 esi

; 9201 : }

  001e1	c3		 ret	 0
?shopWindow8@@YAHXZ ENDP				; shopWindow8
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow8@@YAXXZ
_TEXT	SEGMENT
?initShopWindow8@@YAXXZ PROC				; initShopWindow8, COMDAT

; 9108 : 	shopWindow8ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow8ProcNo@@3FA, ax ; shopWindow8ProcNo

; 9109 : }

  00008	c3		 ret	 0
?initShopWindow8@@YAXXZ ENDP				; initShopWindow8
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow7@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -292					; size = 8
_prevBtnGraNo$ = -284					; size = 8
tv1198 = -276						; size = 4
_id$1$ = -276						; size = 4
_focusId$1$ = -272					; size = 4
tv1238 = -268						; size = 4
$T1 = -268						; size = 4
$T2 = -264						; size = 4
_pushId$1$ = -264					; size = 4
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?shopWindow7@@YAHXZ PROC				; shopWindow7, COMDAT

; 8852 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 8853 : 	static int x, y, w, h;
; 8854 : 	static int btnId[3];
; 8855 : 	int id;
; 8856 : 	int pushId;
; 8857 : 	int focusId;
; 8858 : 	int selId;
; 8859 : 	int i, j;
; 8860 : 	int ret = 0;
; 8861 : 	char tmsg[256];
; 8862 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 8863 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 8864 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 8865 : 	int color;
; 8866 : 	int prevBtn, nextBtn;
; 8867 : 	int x1, y1, x2, y2;
; 8868 : 
; 8869 : 	if (shopWindow7ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow7ProcNo@@3FA, 0 ; shopWindow7ProcNo
  0001b	c7 85 e4 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00025	c7 85 e8 fe ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  0002f	c7 85 dc fe ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00039	c7 85 e0 fe ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00043	0f 85 80 00 00
	00		 jne	 $LN89@shopWindow

; 8870 : 	{
; 8871 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 8872 : 		{
; 8873 : 			btnId[i] = -2;
; 8874 : 		}
; 8875 : 
; 8876 : 		// ??????î
; 8877 : 		w = 432;
; 8878 : 		h = 428;
; 8879 : 		x = (640 - w) / 2;
; 8880 : 		y = (456 - h) / 2;
; 8881 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00049	6a ff		 push	 -1
  0004b	6a 00		 push	 0
  0004d	68 ac 01 00 00	 push	 428			; 000001acH
  00052	68 b0 01 00 00	 push	 432			; 000001b0H
  00057	6a 0e		 push	 14			; 0000000eH
  00059	6a 68		 push	 104			; 00000068H
  0005b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA, -2 ; fffffffeH
  00065	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0006f	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00079	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??shopWindow7@@YAHXZ@4HA, 432 ; 000001b0H
  00083	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??shopWindow7@@YAHXZ@4HA, 428 ; 000001acH
  0008d	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA, 104 ; 00000068H
  00097	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA, 14 ; 0000000eH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 8882 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8883 : 		x = ptActMenuWin->x;

  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA, ecx

; 8884 : 		y = ptActMenuWin->y;

  000b7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 8885 : #endif
; 8886 : 		shopWindow7ProcNo++;

  000ba	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow7ProcNo@@3FA ; shopWindow7ProcNo
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA, ecx
  000c7	eb 05		 jmp	 SHORT $LN17@shopWindow
$LN89@shopWindow:

; 8853 : 	static int x, y, w, h;
; 8854 : 	static int btnId[3];
; 8855 : 	int id;
; 8856 : 	int pushId;
; 8857 : 	int focusId;
; 8858 : 	int selId;
; 8859 : 	int i, j;
; 8860 : 	int ret = 0;
; 8861 : 	char tmsg[256];
; 8862 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 8863 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 8864 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 8865 : 	int color;
; 8866 : 	int prevBtn, nextBtn;
; 8867 : 	int x1, y1, x2, y2;
; 8868 : 
; 8869 : 	if (shopWindow7ProcNo == 0)

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN17@shopWindow:
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	57		 push	 edi

; 8887 : 	}
; 8888 : 
; 8889 : 
; 8890 : 	if (ptActMenuWin != NULL)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 88 05 00
	00		 je	 $LN48@shopWindow

; 8891 : 	{
; 8892 : 		id = -1;

  000d9	83 ce ff	 or	 esi, -1

; 8893 : 		pushId = -1;

  000dc	0b ce		 or	 ecx, esi

; 8894 : 		focusId = -1;

  000de	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], esi

; 8895 : 		selId = -1;

  000e4	0b de		 or	 ebx, esi
  000e6	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx

; 8896 : 
; 8897 : 		if (ptActMenuWin->hp >= 1)

  000ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000f0	0f 8c be 00 00
	00		 jl	 $LN6@shopWindow

; 8898 : 		{
; 8899 : 			// ????î±î¶îî
; 8900 : 			//id = selGraId( btnId, sizeof( btnId )/sizeof( int ) );
; 8901 : 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000f6	6a 03		 push	 3
  000f8	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow7@@YAHXZ@4PAHA
  000fd	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 8902 : 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  00102	6a 03		 push	 3
  00104	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow7@@YAHXZ@4PAHA
  00109	89 85 ec fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  0010f	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 8903 : 
; 8904 : 			j = shopWondow2Page * MAX_SHOP_ITEM;

  00114	0f bf 35 00 00
	00 00		 movsx	 esi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  0011b	33 c9		 xor	 ecx, ecx
  0011d	c1 e6 03	 shl	 esi, 3
  00120	83 c4 10	 add	 esp, 16			; 00000010H
  00123	69 fe 8c 00 00
	00		 imul	 edi, esi, 140
  00129	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  0012f	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv1238[ebp], ecx
  00135	81 c7 0c 00 00
	00		 add	 edi, OFFSET ?userItem@@3PAUITEM_SHOP@@A+12
  0013b	0f 1f 44 00 00	 npad	 5
$LL7@shopWindow:

; 8906 : 			{
; 8907 : 				if (userItem[j + i].name[0] != '\0')

  00140	80 7f 04 00	 cmp	 BYTE PTR [edi+4], 0
  00144	74 4a		 je	 SHORT $LN5@shopWindow

; 8908 : 				{
; 8909 : 					x1 = x + 32;
; 8910 : 					y1 = y + i * 21 + 116;

  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  0014b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00151	83 c0 74	 add	 eax, 116		; 00000074H
  00154	03 c8		 add	 ecx, eax
  00156	83 c2 20	 add	 edx, 32			; 00000020H

; 8911 : 					x2 = x1 + 372;
; 8912 : 					y2 = y1 + 20;
; 8913 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00159	6a 6b		 push	 107			; 0000006bH
  0015b	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0015e	50		 push	 eax
  0015f	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  00165	50		 push	 eax
  00166	51		 push	 ecx
  00167	52		 push	 edx
  00168	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0016d	83 c4 14	 add	 esp, 20			; 00000014H
  00170	85 c0		 test	 eax, eax
  00172	74 16		 je	 SHORT $LN92@shopWindow

; 8914 : 					{
; 8915 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  00174	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0017b	74 07		 je	 SHORT $LN23@shopWindow

; 8916 : 						{
; 8917 : 							if (userItem[j + i].sealFlag == 0)

  0017d	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  00181	0f 44 de	 cmove	 ebx, esi
$LN23@shopWindow:

; 8918 : 							{
; 8919 : 								selId = j + i;
; 8920 : 							}
; 8921 : 						}
; 8922 : 						focusId = j + i;

  00184	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], esi
$LN92@shopWindow:

; 8905 : 			for (i = 0; i < MAX_SHOP_ITEM; i++)

  0018a	8b 8d f4 fe ff
	ff		 mov	 ecx, DWORD PTR tv1238[ebp]
$LN5@shopWindow:
  00190	83 c1 15	 add	 ecx, 21			; 00000015H
  00193	81 c7 8c 00 00
	00		 add	 edi, 140		; 0000008cH
  00199	46		 inc	 esi
  0019a	89 8d f4 fe ff
	ff		 mov	 DWORD PTR tv1238[ebp], ecx
  001a0	81 f9 a8 00 00
	00		 cmp	 ecx, 168		; 000000a8H
  001a6	7c 98		 jl	 SHORT $LL7@shopWindow
  001a8	8b b5 ec fe ff
	ff		 mov	 esi, DWORD PTR _id$1$[ebp]
  001ae	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
$LN6@shopWindow:

; 8923 : 					}
; 8924 : 				}
; 8925 : 			}
; 8926 : 		}
; 8927 : 
; 8928 : 
; 8929 : 		// î·??????
; 8930 : 		if (joy_con[0] & JOY_A)

  001b4	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?joy_con@@3PAKA
  001ba	f7 c7 00 04 00
	00		 test	 edi, 1024		; 00000400H
  001c0	74 18		 je	 SHORT $LN25@shopWindow

; 8931 : 		{
; 8932 : 			pushId = 0;

  001c2	33 c0		 xor	 eax, eax

; 8933 : 			if (joy_auto[0] & JOY_A)

  001c4	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  001ce	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  001d4	74 08		 je	 SHORT $LN81@shopWindow

; 8934 : 			{
; 8935 : 				id = 0;

  001d6	33 f6		 xor	 esi, esi

; 8936 : 			}
; 8937 : 		}
; 8938 : 		if (pushId == 0)

  001d8	eb 08		 jmp	 SHORT $LN82@shopWindow
$LN25@shopWindow:
  001da	85 c9		 test	 ecx, ecx
  001dc	75 4b		 jne	 SHORT $LN26@shopWindow
$LN81@shopWindow:

; 8939 : 		{
; 8940 : 			prevBtn = 1;
; 8941 : 			if (id == 0)

  001de	85 f6		 test	 esi, esi
  001e0	75 32		 jne	 SHORT $LN91@shopWindow
$LN82@shopWindow:

; 8942 : 			{
; 8943 : 				if (shopWondow2Page > 0)

  001e2	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  001e9	66 85 d2	 test	 dx, dx
  001ec	7e 2d		 jle	 SHORT $LN29@shopWindow

; 8944 : 				{
; 8945 : 					shopWondow2Page--;
; 8946 : 					play_se(217, 320, 240);	// ?????

  001ee	68 f0 00 00 00	 push	 240			; 000000f0H
  001f3	66 4a		 dec	 dx
  001f5	68 40 01 00 00	 push	 320			; 00000140H
  001fa	68 d9 00 00 00	 push	 217			; 000000d9H
  001ff	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00206	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0020b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?joy_con@@3PAKA
  00211	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN91@shopWindow:

; 8947 : 				}
; 8948 : 			}
; 8949 : 		}

  00214	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN29@shopWindow:
  0021b	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  00221	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _prevBtnGraNo$[ebp+4]
  00227	eb 0d		 jmp	 SHORT $LN93@shopWindow
$LN26@shopWindow:

; 8950 : 		else
; 8951 : 		{
; 8952 : 			prevBtn = 0;

  00229	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00230	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _prevBtnGraNo$[ebp]
$LN93@shopWindow:

; 8953 : 		}
; 8954 : 		// ???????
; 8955 : 		if (joy_con[0] & JOY_B)

  00236	89 85 f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
  0023c	f7 c7 00 01 00
	00		 test	 edi, 256		; 00000100H
  00242	74 13		 je	 SHORT $LN31@shopWindow

; 8956 : 		{
; 8957 : 			pushId = 1;
; 8958 : 			if (joy_auto[0] & JOY_B)

  00244	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  0024e	74 0c		 je	 SHORT $LN83@shopWindow

; 8959 : 			{
; 8960 : 				id = 1;

  00250	be 01 00 00 00	 mov	 esi, 1

; 8961 : 			}
; 8962 : 		}
; 8963 : 		if (pushId == 1)

  00255	eb 0a		 jmp	 SHORT $LN84@shopWindow
$LN31@shopWindow:
  00257	83 f9 01	 cmp	 ecx, 1
  0025a	75 42		 jne	 SHORT $LN32@shopWindow
$LN83@shopWindow:

; 8964 : 		{
; 8965 : 			nextBtn = 1;
; 8966 : 			if (id == 1)

  0025c	83 fe 01	 cmp	 esi, 1
  0025f	75 2f		 jne	 SHORT $LN35@shopWindow
$LN84@shopWindow:

; 8967 : 			{
; 8968 : 				if (shopWondow2Page + 1 < shopWondow2MaxPage)

  00261	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00268	0f bf ca	 movsx	 ecx, dx
  0026b	41		 inc	 ecx
  0026c	3b c8		 cmp	 ecx, eax
  0026e	7d 20		 jge	 SHORT $LN35@shopWindow

; 8969 : 				{
; 8970 : 					shopWondow2Page++;
; 8971 : 					play_se(217, 320, 240);	// ?????

  00270	68 f0 00 00 00	 push	 240			; 000000f0H
  00275	66 42		 inc	 dx
  00277	68 40 01 00 00	 push	 320			; 00000140H
  0027c	68 d9 00 00 00	 push	 217			; 000000d9H
  00281	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00288	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0028d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN35@shopWindow:

; 8972 : 				}
; 8973 : 			}
; 8974 : 		}

  00290	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR _nextBtnGraNo$[ebp+4]
  00296	89 bd f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  0029c	eb 0c		 jmp	 SHORT $LN33@shopWindow
$LN32@shopWindow:

; 8975 : 		else
; 8976 : 		{
; 8977 : 			nextBtn = 0;

  0029e	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
  002a4	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN33@shopWindow:

; 8978 : 		}
; 8979 : 
; 8980 : 
; 8981 : 		// î??????î?????????????î¼??
; 8982 : 		if (CheckMenuFlag()
; 8983 : 			|| joy_trg[0] & JOY_ESC
; 8984 : 			|| actBtn == 1
; 8985 : 			|| menuBtn == 1
; 8986 : 			|| disconnectServerFlag == TRUE
; 8987 : 			|| wnCloseFlag == 1)

  002aa	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002af	85 c0		 test	 eax, eax
  002b1	0f 85 51 04 00
	00		 jne	 $LN37@shopWindow
  002b7	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002c1	0f 85 41 04 00
	00		 jne	 $LN37@shopWindow
  002c7	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  002cf	0f 84 33 04 00
	00		 je	 $LN37@shopWindow
  002d5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  002dd	0f 84 25 04 00
	00		 je	 $LN37@shopWindow
  002e3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  002ea	0f 84 18 04 00
	00		 je	 $LN37@shopWindow
  002f0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  002f8	0f 84 0a 04 00
	00		 je	 $LN37@shopWindow

; 8991 : 		}
; 8992 : 
; 8993 : 		// id = 0, id = 1 ??????????î·????
; 8994 : 		if (id >= 2
; 8995 : 			|| selId >= 0)

  002fe	83 fe 02	 cmp	 esi, 2
  00301	0f 8d 6d 03 00
	00		 jge	 $LN39@shopWindow
  00307	85 db		 test	 ebx, ebx
  00309	0f 89 77 03 00
	00		 jns	 $LN42@shopWindow

; 9029 : 		}
; 9030 : 
; 9031 : 		if (ptActMenuWin->hp >= 1)

  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00314	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00318	0f 8c 43 03 00
	00		 jl	 $LN48@shopWindow

; 9032 : 		{
; 9033 : 			int xx;
; 9034 : 
; 9035 : 			// ????????
; 9036 : 			xx = (w - strlen(shopWindow1Title) / 2 * 17) / 2;

  0031e	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00323	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL87@shopWindow:
  00326	8a 01		 mov	 al, BYTE PTR [ecx]
  00328	41		 inc	 ecx
  00329	84 c0		 test	 al, al
  0032b	75 f9		 jne	 SHORT $LL87@shopWindow

; 9037 : 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  0032d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00332	2b ca		 sub	 ecx, edx
  00334	6a 00		 push	 0
  00336	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0033b	d1 e9		 shr	 ecx, 1
  0033d	83 c0 12	 add	 eax, 18			; 00000012H
  00340	6a 00		 push	 0
  00342	6a 01		 push	 1
  00344	50		 push	 eax
  00345	8b c1		 mov	 eax, ecx
  00347	c1 e0 04	 shl	 eax, 4
  0034a	03 c1		 add	 eax, ecx
  0034c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??shopWindow7@@YAHXZ@4HA
  00352	2b c8		 sub	 ecx, eax
  00354	d1 e9		 shr	 ecx, 1
  00356	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  0035c	51		 push	 ecx
  0035d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00362	83 c4 18	 add	 esp, 24			; 00000018H
  00365	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow7Msg@@3PAY0CH@DA ; shopWindow7Msg
  0036a	33 f6		 xor	 esi, esi
  0036c	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  0036f	90		 npad	 1
$LL10@shopWindow:

; 9038 : 
; 9039 : 			// ?????????
; 9040 : 			for (i = 0; i < sizeof(shopWindow7Msg) / sizeof(shopWindow7Msg[0]); i++)
; 9041 : 			{
; 9042 : 				if (shopWindow7Msg[0] != '\0')
; 9043 : 				{
; 9044 : 					StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00370	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00375	6a 00		 push	 0
  00377	57		 push	 edi
  00378	83 c0 30	 add	 eax, 48			; 00000030H
  0037b	6a 00		 push	 0
  0037d	03 c6		 add	 eax, esi
  0037f	6a 01		 push	 1
  00381	50		 push	 eax
  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00387	83 c0 12	 add	 eax, 18			; 00000012H
  0038a	50		 push	 eax
  0038b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00390	83 c4 18	 add	 esp, 24			; 00000018H
  00393	83 c7 27	 add	 edi, 39			; 00000027H
  00396	83 c6 12	 add	 esi, 18			; 00000012H
  00399	83 eb 01	 sub	 ebx, 1
  0039c	75 d2		 jne	 SHORT $LL10@shopWindow

; 9045 : 						shopWindow7Msg[i], 0);
; 9046 : 				}
; 9047 : 			}
; 9048 : 
; 9049 : 
; 9050 : 			// ???
; 9051 : 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  0039e	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  003a4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  003af	50		 push	 eax
  003b0	e8 00 00 00 00	 call	 _sprintf

; 9052 : 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  003b5	53		 push	 ebx
  003b6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003bc	50		 push	 eax
  003bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  003c2	53		 push	 ebx
  003c3	83 c0 54	 add	 eax, 84			; 00000054H
  003c6	6a 01		 push	 1
  003c8	50		 push	 eax
  003c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  003ce	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  003d3	50		 push	 eax
  003d4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9053 : 
; 9054 : 			// é¡µî?î?
; 9055 : 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  003d9	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  003df	6a 02		 push	 2
  003e1	ff 30		 push	 DWORD PTR [eax]
  003e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  003e8	83 c0 64	 add	 eax, 100		; 00000064H
  003eb	6a 69		 push	 105			; 00000069H
  003ed	50		 push	 eax
  003ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  003f3	83 c0 20	 add	 eax, 32			; 00000020H
  003f6	50		 push	 eax
  003f7	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003fc	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA, eax

; 9056 : 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  00401	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00407	6a 02		 push	 2
  00409	ff 30		 push	 DWORD PTR [eax]
  0040b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00410	83 c0 64	 add	 eax, 100		; 00000064H
  00413	6a 69		 push	 105			; 00000069H
  00415	50		 push	 eax
  00416	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  0041b	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00426	83 c4 4c	 add	 esp, 76			; 0000004cH
  00429	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA+4, eax

; 9057 : 			sprintf(tmsg, "%2d/%2d íì´ì§", shopWondow2Page + 1, shopWondow2MaxPage);

  0042e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00435	50		 push	 eax
  00436	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  0043d	40		 inc	 eax
  0043e	50		 push	 eax
  0043f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00445	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DLBADLDH@?$CF2d?1?$CF2d?5?F?d?$MA?L?A?v@
  0044a	50		 push	 eax
  0044b	e8 00 00 00 00	 call	 _sprintf

; 9058 : 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00450	53		 push	 ebx
  00451	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00457	50		 push	 eax
  00458	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  0045d	53		 push	 ebx
  0045e	83 c0 5c	 add	 eax, 92			; 0000005cH
  00461	6a 01		 push	 1
  00463	50		 push	 eax
  00464	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00469	83 c0 42	 add	 eax, 66			; 00000042H
  0046c	50		 push	 eax
  0046d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9059 : 
; 9060 : 			j = shopWondow2Page * MAX_SHOP_ITEM;

  00472	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00479	8d 73 07	 lea	 esi, DWORD PTR [ebx+7]
  0047c	69 f8 60 04 00
	00		 imul	 edi, eax, 1120
  00482	83 c4 28	 add	 esp, 40			; 00000028H
  00485	81 c7 10 00 00
	00		 add	 edi, OFFSET ?userItem@@3PAUITEM_SHOP@@A+16
  0048b	0f 1f 44 00 00	 npad	 5
$LL13@shopWindow:

; 9062 : 				if (strlen(userItem[j + i].name) == 0)

  00490	8b c7		 mov	 eax, edi
  00492	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL88@shopWindow:
  00495	8a 08		 mov	 cl, BYTE PTR [eax]
  00497	40		 inc	 eax
  00498	84 c9		 test	 cl, cl
  0049a	75 f9		 jne	 SHORT $LL88@shopWindow
  0049c	2b c2		 sub	 eax, edx
  0049e	0f 84 c4 00 00
	00		 je	 $LN11@shopWindow

; 9063 : 					continue;
; 9064 : 				color = itemColor[0];
; 9065 : 				if (userItem[j + i].sealFlag)

  004a4	0f b7 47 fc	 movzx	 eax, WORD PTR [edi-4]

; 9066 : 					color = itemColor[1];
; 9067 : 
; 9068 : 				if ((pc.gold + userItem[j + i].price) > CHAR_getMaxHaveGold())

  004a8	33 c9		 xor	 ecx, ecx
  004aa	66 85 c0	 test	 ax, ax
  004ad	0f 44 f1	 cmove	 esi, ecx
  004b0	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  004b5	8b 4f f4	 mov	 ecx, DWORD PTR [edi-12]
  004b8	03 0d 60 00 00
	00		 add	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  004be	3b c8		 cmp	 ecx, eax
  004c0	b8 07 00 00 00	 mov	 eax, 7

; 9069 : 					color = 7;
; 9070 : 				StockFontBuffer(x + 34, y + 118 + i * 21,

  004c5	6a 00		 push	 0
  004c7	0f 4f f0	 cmovg	 esi, eax
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  004cf	57		 push	 edi
  004d0	83 c0 76	 add	 eax, 118		; 00000076H
  004d3	56		 push	 esi
  004d4	03 c3		 add	 eax, ebx
  004d6	6a 01		 push	 1
  004d8	50		 push	 eax
  004d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  004de	83 c0 22	 add	 eax, 34			; 00000022H
  004e1	50		 push	 eax
  004e2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9071 : 					FONT_PRIO_FRONT, color, userItem[j + i].name, 0);
; 9072 : #ifdef _ITEM_PILENUMS
; 9073 : 				sprintf(tmsg, "x%d", userItem[j + i].num);

  004e7	ff 77 74	 push	 DWORD PTR [edi+116]
  004ea	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004f0	68 00 00 00 00	 push	 OFFSET ??_C@_03EPCHICDI@x?$CFd@
  004f5	50		 push	 eax
  004f6	e8 00 00 00 00	 call	 _sprintf

; 9074 : 				StockFontBuffer(x + 34 + 250, y + 118 + i * 21,

  004fb	6a 00		 push	 0
  004fd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00503	50		 push	 eax
  00504	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00509	83 c0 76	 add	 eax, 118		; 00000076H
  0050c	56		 push	 esi
  0050d	03 c3		 add	 eax, ebx
  0050f	6a 01		 push	 1
  00511	50		 push	 eax
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00517	05 1c 01 00 00	 add	 eax, 284		; 0000011cH
  0051c	50		 push	 eax
  0051d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9075 : 					FONT_PRIO_FRONT, color, tmsg, 0);
; 9076 : #endif
; 9077 : 				sprintf(tmsg, "%8dï¼³", userItem[j + i].price);

  00522	ff 77 f4	 push	 DWORD PTR [edi-12]
  00525	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0052b	68 00 00 00 00	 push	 OFFSET ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
  00530	50		 push	 eax
  00531	e8 00 00 00 00	 call	 _sprintf
  00536	83 c4 48	 add	 esp, 72			; 00000048H

; 9078 : 				StockFontBuffer(x + 312, y + 118 + i * 21,

  00539	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0053f	6a 00		 push	 0
  00541	50		 push	 eax
  00542	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00547	83 c0 76	 add	 eax, 118		; 00000076H
  0054a	56		 push	 esi
  0054b	03 c3		 add	 eax, ebx
  0054d	6a 01		 push	 1
  0054f	50		 push	 eax
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00555	05 38 01 00 00	 add	 eax, 312		; 00000138H
  0055a	50		 push	 eax
  0055b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00560	83 c4 18	 add	 esp, 24			; 00000018H
  00563	be 07 00 00 00	 mov	 esi, 7
$LN11@shopWindow:

; 9061 : 			for (i = 0; i < MAX_SHOP_ITEM; i++) {

  00568	83 c3 15	 add	 ebx, 21			; 00000015H
  0056b	81 c7 8c 00 00
	00		 add	 edi, 140		; 0000008cH
  00571	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  00577	0f 8c 13 ff ff
	ff		 jl	 $LL13@shopWindow

; 9079 : 					FONT_PRIO_FRONT, color, tmsg, 0);
; 9080 : 			}
; 9081 : 			if (focusId >= 0) {

  0057d	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  00583	85 c0		 test	 eax, eax
  00585	78 69		 js	 SHORT $LN15@shopWindow

; 9082 : 				StockDispBuffer(x + 64, y + 350, DISP_PRIO_IME3, userItem[focusId].graNo, 0);

  00587	69 f0 8c 00 00
	00		 imul	 esi, eax, 140
  0058d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00592	6a 00		 push	 0
  00594	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  00599	ff b6 08 00 00
	00		 push	 DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+8]
  0059f	6a 69		 push	 105			; 00000069H
  005a1	50		 push	 eax
  005a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  005a7	83 c0 40	 add	 eax, 64			; 00000040H
  005aa	50		 push	 eax
  005ab	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005b0	83 c4 14	 add	 esp, 20			; 00000014H
  005b3	8d b6 2d 00 00
	00		 lea	 esi, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+45]
  005b9	33 ff		 xor	 edi, edi
  005bb	0f 1f 44 00 00	 npad	 5
$LL16@shopWindow:

; 9083 : 				for (i = 0; i < sizeof(userItem[0].info) / sizeof(userItem[0].info[0]); i++) {
; 9084 : 					StockFontBuffer(x + 120, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  005c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  005c5	6a 00		 push	 0
  005c7	56		 push	 esi
  005c8	05 34 01 00 00	 add	 eax, 308		; 00000134H
  005cd	6a 00		 push	 0
  005cf	03 c7		 add	 eax, edi
  005d1	6a 01		 push	 1
  005d3	50		 push	 eax
  005d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  005d9	83 c0 78	 add	 eax, 120		; 00000078H
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005e2	83 c7 14	 add	 edi, 20			; 00000014H
  005e5	83 c4 18	 add	 esp, 24			; 00000018H
  005e8	83 c6 1d	 add	 esi, 29			; 0000001dH
  005eb	83 ff 3c	 cmp	 edi, 60			; 0000003cH
  005ee	72 d0		 jb	 SHORT $LL16@shopWindow
$LN15@shopWindow:

; 9085 : 						userItem[focusId].info[i], 0);
; 9086 : 				}
; 9087 : 			}
; 9088 : 			if (buyOffFlag == 0) {

  005f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  005f5	05 92 01 00 00	 add	 eax, 402		; 00000192H
  005fa	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?buyOffFlag@@3FA, 0 ; buyOffFlag
  00602	6a 02		 push	 2
  00604	75 07		 jne	 SHORT $LN54@shopWindow

; 9089 : 				btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  00606	68 bb 65 00 00	 push	 26043			; 000065bbH

; 9090 : 			}

  0060b	eb 05		 jmp	 SHORT $LN94@shopWindow
$LN54@shopWindow:

; 9091 : 			else {
; 9092 : 				btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  0060d	68 f0 65 00 00	 push	 26096			; 000065f0H
$LN94@shopWindow:

; 9093 : 			}
; 9094 : 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_WIN, 1);

  00612	6a 69		 push	 105			; 00000069H
  00614	50		 push	 eax
  00615	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  0061a	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  0061f	50		 push	 eax
  00620	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00625	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow7@@YAHXZ@4PAHA+8, eax
  0062a	83 c4 14	 add	 esp, 20			; 00000014H
  0062d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??shopWindow7@@YAHXZ@4HA
  00632	99		 cdq
  00633	2b c2		 sub	 eax, edx
  00635	6a 01		 push	 1
  00637	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_WIN@@3HA ; CG_ITEMSHOP_WIN
  0063d	d1 f8		 sar	 eax, 1
  0063f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??shopWindow7@@YAHXZ@4HA
  00645	6a 68		 push	 104			; 00000068H
  00647	50		 push	 eax
  00648	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow7@@YAHXZ@4HA
  0064d	99		 cdq
  0064e	2b c2		 sub	 eax, edx
  00650	d1 f8		 sar	 eax, 1
  00652	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow7@@YAHXZ@4HA
  00658	50		 push	 eax
  00659	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0065e	83 c4 14	 add	 esp, 20			; 00000014H
$LN48@shopWindow:

; 9095 : 		}
; 9096 : 	}
; 9097 : 	return ret;
; 9098 : }

  00661	5f		 pop	 edi
  00662	5e		 pop	 esi
  00663	33 c0		 xor	 eax, eax
  00665	5b		 pop	 ebx
  00666	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00669	33 cd		 xor	 ecx, ebp
  0066b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00670	8b e5		 mov	 esp, ebp
  00672	5d		 pop	 ebp
  00673	c3		 ret	 0
$LN39@shopWindow:

; 8996 : 		{
; 8997 : 			// ?????
; 8998 : 			if (id == 2)

  00674	75 07		 jne	 SHORT $LN40@shopWindow

; 8999 : 			{
; 9000 : 				ret = 1;

  00676	be 01 00 00 00	 mov	 esi, 1

; 9001 : 			}

  0067b	eb 47		 jmp	 SHORT $LN95@shopWindow
$LN40@shopWindow:

; 9002 : 			else
; 9003 : 				if (id == 100)

  0067d	83 fe 64	 cmp	 esi, 100		; 00000064H
  00680	0f 84 8a 00 00
	00		 je	 $LN85@shopWindow
$LN42@shopWindow:

; 9006 : 				}
; 9007 : 				else
; 9008 : 				{
; 9009 : 					selShopItemNo = selId;
; 9010 : 					sealItemCnt = 1;

  00686	b8 01 00 00 00	 mov	 eax, 1
  0068b	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?selShopItemNo@@3FA, bx ; selShopItemNo
  00692	66 a3 00 00 00
	00		 mov	 WORD PTR ?sealItemCnt@@3FA, ax ; sealItemCnt

; 9011 : 					if (userItem[selShopItemNo].price + pc.gold > CHAR_getMaxHaveGold())

  00698	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  0069d	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo

; 9012 : 					{
; 9013 : 						ret = 3;

  006a4	be 03 00 00 00	 mov	 esi, 3
  006a9	69 c9 8c 00 00
	00		 imul	 ecx, ecx, 140
  006af	8b 89 04 00 00
	00		 mov	 ecx, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+4]
  006b5	03 0d 60 00 00
	00		 add	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  006bb	3b c8		 cmp	 ecx, eax
  006bd	7f 05		 jg	 SHORT $LN95@shopWindow

; 9014 : 					}
; 9015 : 					else
; 9016 : 					{
; 9017 : 						ret = 2;

  006bf	be 02 00 00 00	 mov	 esi, 2
$LN95@shopWindow:

; 9018 : 					}
; 9019 : 				}
; 9020 : 
; 9021 : 			DeathAction(ptActMenuWin);
; 9022 : 			ptActMenuWin = NULL;
; 9023 : 			if (ret == 100
; 9024 : 				|| (buyOffFlag == 1 && ret == 1))

  006c4	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006ca	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006cf	83 c4 04	 add	 esp, 4
  006d2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  006dc	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?buyOffFlag@@3FA, 1 ; buyOffFlag
  006e4	75 51		 jne	 SHORT $LN46@shopWindow
  006e6	83 fe 01	 cmp	 esi, 1
  006e9	75 4c		 jne	 SHORT $LN46@shopWindow

; 9027 : 			}
; 9028 : 			return ret;

  006eb	5f		 pop	 edi
  006ec	8b c6		 mov	 eax, esi
  006ee	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 9095 : 		}
; 9096 : 	}
; 9097 : 	return ret;
; 9098 : }

  006f8	5e		 pop	 esi
  006f9	5b		 pop	 ebx
  006fa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006fd	33 cd		 xor	 ecx, ebp
  006ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00704	8b e5		 mov	 esp, ebp
  00706	5d		 pop	 ebp
  00707	c3		 ret	 0
$LN37@shopWindow:

; 8988 : 		{
; 8989 : 			id = 100;
; 8990 : 			wnCloseFlag = 0;

  00708	33 c0		 xor	 eax, eax
  0070a	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN85@shopWindow:

; 9004 : 				{
; 9005 : 					ret = 100;

  00710	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00716	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  0071b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00720	83 c4 04	 add	 esp, 4
  00723	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 9025 : 			{
; 9026 : 				windowTypeWN = -1;

  0072d	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN46@shopWindow:

; 9095 : 		}
; 9096 : 	}
; 9097 : 	return ret;
; 9098 : }

  00737	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0073a	8b c6		 mov	 eax, esi
  0073c	5f		 pop	 edi
  0073d	5e		 pop	 esi
  0073e	33 cd		 xor	 ecx, ebp
  00740	5b		 pop	 ebx
  00741	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00746	8b e5		 mov	 esp, ebp
  00748	5d		 pop	 ebp
  00749	c3		 ret	 0
?shopWindow7@@YAHXZ ENDP				; shopWindow7
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow7@@YAXXZ
_TEXT	SEGMENT
?initShopWindow7@@YAXXZ PROC				; initShopWindow7, COMDAT

; 8842 : 	shopWindow7ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow7ProcNo@@3FA, ax ; shopWindow7ProcNo

; 8843 : }

  00008	c3		 ret	 0
?initShopWindow7@@YAXXZ ENDP				; initShopWindow7
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow6@@YAHXZ
_TEXT	SEGMENT
?shopWindow6@@YAHXZ PROC				; shopWindow6, COMDAT

; 8761 : 	static int x, y, w, h;
; 8762 : 	static int btnId[1];
; 8763 : 	int id;
; 8764 : 	int i;
; 8765 : 	int ret = 0;
; 8766 : 
; 8767 : 	if (shopWindow6ProcNo == 0) {

  00000	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow6ProcNo@@3FA, 0 ; shopWindow6ProcNo
  00008	75 6c		 jne	 SHORT $LN32@shopWindow

; 8768 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 8769 : 			btnId[i] = -2;
; 8770 : 		}
; 8771 : 		w = 6;
; 8772 : 		h = 2;
; 8773 : 		x = (640 - w * 64) / 2;
; 8774 : 		y = (456 - h * 48) / 2;
; 8775 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	6a 06		 push	 6
  00012	68 b4 00 00 00	 push	 180			; 000000b4H
  00017	68 80 00 00 00	 push	 128			; 00000080H
  0001c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow6@@YAHXZ@4PAHA, -2 ; fffffffeH
  00026	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?w@?1??shopWindow6@@YAHXZ@4HA, 6
  00030	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow6@@YAHXZ@4HA, 2
  0003a	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow6@@YAHXZ@4HA, 128 ; 00000080H
  00044	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow6@@YAHXZ@4HA, 180 ; 000000b4H
  0004e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00053	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00058	83 c4 18	 add	 esp, 24			; 00000018H

; 8776 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8777 : 		x = ptActMenuWin->x;

  0005b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow6@@YAHXZ@4HA, ecx

; 8778 : 		y = ptActMenuWin->y;

  00064	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 8779 : #endif
; 8780 : 		shopWindow6ProcNo++;

  00067	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow6ProcNo@@3FA ; shopWindow6ProcNo
  0006e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??shopWindow6@@YAHXZ@4HA, ecx
  00074	eb 05		 jmp	 SHORT $LN8@shopWindow
$LN32@shopWindow:

; 8761 : 	static int x, y, w, h;
; 8762 : 	static int btnId[1];
; 8763 : 	int id;
; 8764 : 	int i;
; 8765 : 	int ret = 0;
; 8766 : 
; 8767 : 	if (shopWindow6ProcNo == 0) {

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN8@shopWindow:
  0007b	56		 push	 esi

; 8781 : 	}
; 8782 : 	if (ptActMenuWin != NULL) {

  0007c	85 c0		 test	 eax, eax
  0007e	0f 84 27 01 00
	00		 je	 $LN18@shopWindow

; 8783 : 		id = -1;

  00084	83 ce ff	 or	 esi, -1

; 8784 : 		if (ptActMenuWin->hp >= 1) {

  00087	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0008b	7c 11		 jl	 SHORT $LN10@shopWindow

; 8785 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0008d	6a 01		 push	 1
  0008f	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow6@@YAHXZ@4PAHA
  00094	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00099	83 c4 08	 add	 esp, 8
  0009c	8b f0		 mov	 esi, eax
$LN10@shopWindow:

; 8786 : 		}
; 8787 : 		if (CheckMenuFlag()
; 8788 : 			|| joy_trg[0] & JOY_ESC
; 8789 : 			|| actBtn == 1
; 8790 : 			|| menuBtn == 1
; 8791 : 			|| disconnectServerFlag == TRUE
; 8792 : 			|| wnCloseFlag == 1) {

  0009e	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000a3	85 c0		 test	 eax, eax
  000a5	0f 85 04 01 00
	00		 jne	 $LN12@shopWindow
  000ab	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000b5	0f 85 f4 00 00
	00		 jne	 $LN12@shopWindow
  000bb	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000c3	0f 84 e6 00 00
	00		 je	 $LN12@shopWindow
  000c9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000d1	0f 84 d8 00 00
	00		 je	 $LN12@shopWindow
  000d7	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000de	0f 84 cb 00 00
	00		 je	 $LN12@shopWindow
  000e4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000ec	0f 84 bd 00 00
	00		 je	 $LN12@shopWindow

; 8795 : 		}
; 8796 : 
; 8797 : 
; 8798 : 		if (id >= 0) {

  000f2	85 f6		 test	 esi, esi
  000f4	78 44		 js	 SHORT $LN13@shopWindow

; 8799 : 			if (id == 0) {

  000f6	75 1f		 jne	 SHORT $LN14@shopWindow

; 8800 : 				ret = 1;

  000f8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000fe	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00101	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8808 : 			if (ret == 100) {
; 8809 : 				windowTypeWN = -1;
; 8810 : 			}
; 8811 : 			return ret;

  00106	83 c4 04	 add	 esp, 4
  00109	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00113	8b c6		 mov	 eax, esi
  00115	5e		 pop	 esi

; 8832 : }

  00116	c3		 ret	 0
$LN14@shopWindow:

; 8801 : 			}
; 8802 : 			else if (id == 100) {

  00117	83 fe 64	 cmp	 esi, 100		; 00000064H
  0011a	0f 84 97 00 00
	00		 je	 $LN30@shopWindow

; 8804 : 			}
; 8805 : 
; 8806 : 			DeathAction(ptActMenuWin);

  00120	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00126	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0012b	83 c4 04	 add	 esp, 4

; 8807 : 			ptActMenuWin = NULL;

  0012e	33 f6		 xor	 esi, esi

; 8808 : 			if (ret == 100) {
; 8809 : 				windowTypeWN = -1;
; 8810 : 			}
; 8811 : 			return ret;

  00130	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  00136	8b c6		 mov	 eax, esi
  00138	5e		 pop	 esi

; 8832 : }

  00139	c3		 ret	 0
$LN13@shopWindow:

; 8812 : 		}
; 8813 : 
; 8814 : 
; 8815 : 		if (ptActMenuWin->hp >= 1)

  0013a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0013f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00143	7c 66		 jl	 SHORT $LN18@shopWindow

; 8816 : 		{
; 8817 : 			// ?????????
; 8818 : 			for (i = 0; i < sizeof(shopWindow6Msg) / sizeof(shopWindow6Msg[0]); i++)

  00145	33 f6		 xor	 esi, esi
  00147	53		 push	 ebx
  00148	57		 push	 edi
  00149	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow6Msg@@3PAY0CH@DA ; shopWindow6Msg
  0014e	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
$LL7@shopWindow:

; 8819 : 			{
; 8820 : 				if (shopWindow6Msg[0] != '\0')
; 8821 : 				{
; 8822 : 					StockFontBuffer(x + 20, y + 20 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00151	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow6@@YAHXZ@4HA
  00156	6a 00		 push	 0
  00158	57		 push	 edi
  00159	83 c0 14	 add	 eax, 20			; 00000014H
  0015c	6a 00		 push	 0
  0015e	03 c6		 add	 eax, esi
  00160	6a 01		 push	 1
  00162	50		 push	 eax
  00163	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow6@@YAHXZ@4HA
  00168	83 c0 14	 add	 eax, 20			; 00000014H
  0016b	50		 push	 eax
  0016c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00171	83 c4 18	 add	 esp, 24			; 00000018H
  00174	83 c7 27	 add	 edi, 39			; 00000027H
  00177	83 c6 14	 add	 esi, 20			; 00000014H
  0017a	83 eb 01	 sub	 ebx, 1
  0017d	75 d2		 jne	 SHORT $LL7@shopWindow

; 8823 : 						shopWindow6Msg[i], 0);
; 8824 : 				}
; 8825 : 			}
; 8826 : 
; 8827 : 			btnId[0] = StockDispBuffer(x + 192, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow6@@YAHXZ@4HA
  00184	6a 02		 push	 2
  00186	68 ee 65 00 00	 push	 26094			; 000065eeH
  0018b	83 c0 48	 add	 eax, 72			; 00000048H
  0018e	6a 69		 push	 105			; 00000069H
  00190	50		 push	 eax
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow6@@YAHXZ@4HA
  00196	05 c0 00 00 00	 add	 eax, 192		; 000000c0H
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001a1	83 c4 14	 add	 esp, 20			; 00000014H
  001a4	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow6@@YAHXZ@4PAHA, eax
  001a9	5f		 pop	 edi
  001aa	5b		 pop	 ebx
$LN18@shopWindow:

; 8828 : 		}
; 8829 : 	}
; 8830 : 
; 8831 : 	return ret;

  001ab	33 c0		 xor	 eax, eax
  001ad	5e		 pop	 esi

; 8832 : }

  001ae	c3		 ret	 0
$LN12@shopWindow:

; 8793 : 			id = 100;
; 8794 : 			wnCloseFlag = 0;

  001af	33 c0		 xor	 eax, eax
  001b1	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN30@shopWindow:

; 8803 : 				ret = 100;

  001b7	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001bd	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  001c2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8808 : 			if (ret == 100) {
; 8809 : 				windowTypeWN = -1;
; 8810 : 			}
; 8811 : 			return ret;

  001c7	83 c4 04	 add	 esp, 4
  001ca	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  001d4	8b c6		 mov	 eax, esi
  001d6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001e0	5e		 pop	 esi

; 8832 : }

  001e1	c3		 ret	 0
?shopWindow6@@YAHXZ ENDP				; shopWindow6
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow6@@YAXXZ
_TEXT	SEGMENT
?initShopWindow6@@YAXXZ PROC				; initShopWindow6, COMDAT

; 8756 : 	shopWindow6ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow6ProcNo@@3FA, ax ; shopWindow6ProcNo

; 8757 : }

  00008	c3		 ret	 0
?initShopWindow6@@YAXXZ ENDP				; initShopWindow6
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow5@@YAHXZ
_TEXT	SEGMENT
?shopWindow5@@YAHXZ PROC				; shopWindow5, COMDAT

; 8684 : 	static int x, y, w, h;
; 8685 : 	static int btnId[2];
; 8686 : 	int id;
; 8687 : 	int i;
; 8688 : 	int ret = 0;
; 8689 : 
; 8690 : 	if (shopWindow5ProcNo == 0) {

  00000	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow5ProcNo@@3FA, 0 ; shopWindow5ProcNo
  00008	75 76		 jne	 SHORT $LN37@shopWindow

; 8691 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 8692 : 			btnId[i] = -2;
; 8693 : 		}
; 8694 : 		w = 6;
; 8695 : 		h = 2;
; 8696 : 		x = (640 - w * 64) / 2;
; 8697 : 		y = (456 - h * 48) / 2;
; 8698 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	6a 06		 push	 6
  00012	68 b4 00 00 00	 push	 180			; 000000b4H
  00017	68 80 00 00 00	 push	 128			; 00000080H
  0001c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow5@@YAHXZ@4PAHA, -2 ; fffffffeH
  00026	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow5@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00030	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?w@?1??shopWindow5@@YAHXZ@4HA, 6
  0003a	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow5@@YAHXZ@4HA, 2
  00044	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow5@@YAHXZ@4HA, 128 ; 00000080H
  0004e	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow5@@YAHXZ@4HA, 180 ; 000000b4H
  00058	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0005d	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00062	83 c4 18	 add	 esp, 24			; 00000018H

; 8699 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8700 : 		x = ptActMenuWin->x;

  00065	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00068	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow5@@YAHXZ@4HA, ecx

; 8701 : 		y = ptActMenuWin->y;

  0006e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 8702 : #endif
; 8703 : 		shopWindow5ProcNo++;

  00071	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow5ProcNo@@3FA ; shopWindow5ProcNo
  00078	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??shopWindow5@@YAHXZ@4HA, ecx
  0007e	eb 05		 jmp	 SHORT $LN8@shopWindow
$LN37@shopWindow:

; 8684 : 	static int x, y, w, h;
; 8685 : 	static int btnId[2];
; 8686 : 	int id;
; 8687 : 	int i;
; 8688 : 	int ret = 0;
; 8689 : 
; 8690 : 	if (shopWindow5ProcNo == 0) {

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN8@shopWindow:
  00085	56		 push	 esi

; 8704 : 	}
; 8705 : 
; 8706 : 	if (ptActMenuWin != NULL) {

  00086	85 c0		 test	 eax, eax
  00088	0f 84 61 01 00
	00		 je	 $LN21@shopWindow

; 8707 : 		id = -1;

  0008e	83 ce ff	 or	 esi, -1

; 8708 : 		if (ptActMenuWin->hp >= 1) {

  00091	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00095	7c 11		 jl	 SHORT $LN10@shopWindow

; 8709 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00097	6a 02		 push	 2
  00099	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow5@@YAHXZ@4PAHA
  0009e	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000a3	83 c4 08	 add	 esp, 8
  000a6	8b f0		 mov	 esi, eax
$LN10@shopWindow:

; 8710 : 		}
; 8711 : 		if (CheckMenuFlag()
; 8712 : 			|| joy_trg[0] & JOY_ESC
; 8713 : 			|| actBtn == 1
; 8714 : 			|| menuBtn == 1
; 8715 : 			|| disconnectServerFlag == TRUE
; 8716 : 			|| wnCloseFlag == 1) {

  000a8	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000ad	85 c0		 test	 eax, eax
  000af	0f 85 3e 01 00
	00		 jne	 $LN12@shopWindow
  000b5	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000bf	0f 85 2e 01 00
	00		 jne	 $LN12@shopWindow
  000c5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000cd	0f 84 20 01 00
	00		 je	 $LN12@shopWindow
  000d3	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000db	0f 84 12 01 00
	00		 je	 $LN12@shopWindow
  000e1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000e8	0f 84 05 01 00
	00		 je	 $LN12@shopWindow
  000ee	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f6	0f 84 f7 00 00
	00		 je	 $LN12@shopWindow

; 8719 : 		}
; 8720 : 		if (id >= 0) {

  000fc	85 f6		 test	 esi, esi
  000fe	78 53		 js	 SHORT $LN13@shopWindow

; 8721 : 			if (id == 0) {

  00100	75 08		 jne	 SHORT $LN14@shopWindow

; 8722 : 				ret = 1;

  00102	8d 70 01	 lea	 esi, DWORD PTR [eax+1]

; 8723 : 			}

  00105	e9 f6 00 00 00	 jmp	 $LN38@shopWindow
$LN14@shopWindow:

; 8724 : 			else if (id == 1) {

  0010a	83 fe 01	 cmp	 esi, 1
  0010d	75 21		 jne	 SHORT $LN16@shopWindow

; 8725 : 				ret = 2;

  0010f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00115	be 02 00 00 00	 mov	 esi, 2
  0011a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8735 : 			}
; 8736 : 			return ret;

  0011f	83 c4 04	 add	 esp, 4
  00122	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0012c	8b c6		 mov	 eax, esi
  0012e	5e		 pop	 esi

; 8752 : }

  0012f	c3		 ret	 0
$LN16@shopWindow:

; 8726 : 			}
; 8727 : 			else if (id == 100) {

  00130	83 fe 64	 cmp	 esi, 100		; 00000064H
  00133	0f 84 c2 00 00
	00		 je	 $LN35@shopWindow

; 8729 : 			}
; 8730 : 
; 8731 : 			DeathAction(ptActMenuWin);

  00139	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0013f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00144	83 c4 04	 add	 esp, 4

; 8732 : 			ptActMenuWin = NULL;
; 8733 : 			if (ret == 100 || ret == 1) {

  00147	33 f6		 xor	 esi, esi

; 8735 : 			}
; 8736 : 			return ret;

  00149	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  0014f	8b c6		 mov	 eax, esi
  00151	5e		 pop	 esi

; 8752 : }

  00152	c3		 ret	 0
$LN13@shopWindow:

; 8737 : 		}
; 8738 : 
; 8739 : 		if (ptActMenuWin->hp >= 1) {

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00158	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0015c	0f 8c 8d 00 00
	00		 jl	 $LN21@shopWindow

; 8740 : 			for (i = 0; i < sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]); i++) {

  00162	33 f6		 xor	 esi, esi
  00164	53		 push	 ebx
  00165	57		 push	 edi
  00166	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  0016b	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  0016e	66 90		 npad	 2
$LL7@shopWindow:

; 8741 : 				if (shopWindow5Msg[0] != '\0') {
; 8742 : 					StockFontBuffer(x + 20, y + 20 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00170	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow5@@YAHXZ@4HA
  00175	6a 00		 push	 0
  00177	57		 push	 edi
  00178	83 c0 14	 add	 eax, 20			; 00000014H
  0017b	6a 00		 push	 0
  0017d	03 c6		 add	 eax, esi
  0017f	6a 01		 push	 1
  00181	50		 push	 eax
  00182	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow5@@YAHXZ@4HA
  00187	83 c0 14	 add	 eax, 20			; 00000014H
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00190	83 c4 18	 add	 esp, 24			; 00000018H
  00193	83 c7 27	 add	 edi, 39			; 00000027H
  00196	83 c6 14	 add	 esi, 20			; 00000014H
  00199	83 eb 01	 sub	 ebx, 1
  0019c	75 d2		 jne	 SHORT $LL7@shopWindow

; 8743 : 						shopWindow5Msg[i], 0);
; 8744 : 				}
; 8745 : 			}
; 8746 : 			btnId[0] = StockDispBuffer(x + 128, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow5@@YAHXZ@4HA
  001a3	6a 02		 push	 2
  001a5	68 ee 65 00 00	 push	 26094			; 000065eeH
  001aa	83 c0 48	 add	 eax, 72			; 00000048H
  001ad	6a 69		 push	 105			; 00000069H
  001af	50		 push	 eax
  001b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow5@@YAHXZ@4HA
  001b5	83 e8 80	 sub	 eax, -128		; ffffff80H
  001b8	50		 push	 eax
  001b9	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001be	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow5@@YAHXZ@4PAHA, eax

; 8747 : 			btnId[1] = StockDispBuffer(x + 256, y + 72, DISP_PRIO_IME3, CG_NO_BTN, 2);

  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow5@@YAHXZ@4HA
  001c8	6a 02		 push	 2
  001ca	68 ef 65 00 00	 push	 26095			; 000065efH
  001cf	83 c0 48	 add	 eax, 72			; 00000048H
  001d2	6a 69		 push	 105			; 00000069H
  001d4	50		 push	 eax
  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow5@@YAHXZ@4HA
  001da	05 00 01 00 00	 add	 eax, 256		; 00000100H
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001e5	83 c4 28	 add	 esp, 40			; 00000028H
  001e8	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow5@@YAHXZ@4PAHA+4, eax
  001ed	5f		 pop	 edi
  001ee	5b		 pop	 ebx
$LN21@shopWindow:

; 8748 : 		}
; 8749 : 	}
; 8750 : 
; 8751 : 	return ret;

  001ef	33 c0		 xor	 eax, eax
  001f1	5e		 pop	 esi

; 8752 : }

  001f2	c3		 ret	 0
$LN12@shopWindow:

; 8717 : 			id = 100;
; 8718 : 			wnCloseFlag = 0;

  001f3	33 c0		 xor	 eax, eax
  001f5	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN35@shopWindow:

; 8728 : 				ret = 100;

  001fb	be 64 00 00 00	 mov	 esi, 100		; 00000064H
$LN38@shopWindow:

; 8734 : 				windowTypeWN = -1;

  00200	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00206	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8735 : 			}
; 8736 : 			return ret;

  0020b	83 c4 04	 add	 esp, 4
  0020e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00218	8b c6		 mov	 eax, esi
  0021a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00224	5e		 pop	 esi

; 8752 : }

  00225	c3		 ret	 0
?shopWindow5@@YAHXZ ENDP				; shopWindow5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow5@@YAXXZ
_TEXT	SEGMENT
?initShopWindow5@@YAXXZ PROC				; initShopWindow5, COMDAT

; 8679 : 	shopWindow5ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow5ProcNo@@3FA, ax ; shopWindow5ProcNo

; 8680 : }

  00008	c3		 ret	 0
?initShopWindow5@@YAXXZ ENDP				; initShopWindow5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow4@@YAHXZ
_TEXT	SEGMENT
?shopWindow4@@YAHXZ PROC				; shopWindow4, COMDAT

; 8602 : 	static int x, y, w, h;
; 8603 : 	static int btnId[2];
; 8604 : 	int id;
; 8605 : 	int i;
; 8606 : 	int ret = 0;
; 8607 : 	if (shopWindow4ProcNo == 0) {

  00000	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow4ProcNo@@3FA, 0 ; shopWindow4ProcNo
  00008	75 76		 jne	 SHORT $LN36@shopWindow

; 8608 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 8609 : 			btnId[i] = -2;
; 8610 : 		}
; 8611 : 		w = 6;
; 8612 : 		h = 2;
; 8613 : 		x = (640 - w * 64) / 2;
; 8614 : 		y = (456 - h * 48) / 2;
; 8615 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0000a	6a 01		 push	 1
  0000c	6a 00		 push	 0
  0000e	6a 02		 push	 2
  00010	6a 06		 push	 6
  00012	68 b4 00 00 00	 push	 180			; 000000b4H
  00017	68 80 00 00 00	 push	 128			; 00000080H
  0001c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow4@@YAHXZ@4PAHA, -2 ; fffffffeH
  00026	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow4@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00030	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?w@?1??shopWindow4@@YAHXZ@4HA, 6
  0003a	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow4@@YAHXZ@4HA, 2
  00044	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow4@@YAHXZ@4HA, 128 ; 00000080H
  0004e	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow4@@YAHXZ@4HA, 180 ; 000000b4H
  00058	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0005d	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00062	83 c4 18	 add	 esp, 24			; 00000018H

; 8616 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8617 : 		x = ptActMenuWin->x;

  00065	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00068	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow4@@YAHXZ@4HA, ecx

; 8618 : 		y = ptActMenuWin->y;

  0006e	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 8619 : #endif
; 8620 : 		shopWindow4ProcNo++;

  00071	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow4ProcNo@@3FA ; shopWindow4ProcNo
  00078	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??shopWindow4@@YAHXZ@4HA, ecx
  0007e	eb 05		 jmp	 SHORT $LN8@shopWindow
$LN36@shopWindow:

; 8602 : 	static int x, y, w, h;
; 8603 : 	static int btnId[2];
; 8604 : 	int id;
; 8605 : 	int i;
; 8606 : 	int ret = 0;
; 8607 : 	if (shopWindow4ProcNo == 0) {

  00080	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN8@shopWindow:
  00085	56		 push	 esi

; 8621 : 	}
; 8622 : 
; 8623 : 
; 8624 : 	if (ptActMenuWin != NULL) {

  00086	85 c0		 test	 eax, eax
  00088	0f 84 76 01 00
	00		 je	 $LN20@shopWindow

; 8625 : 		id = -1;

  0008e	83 ce ff	 or	 esi, -1

; 8626 : 		if (ptActMenuWin->hp >= 1) {

  00091	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00095	7c 11		 jl	 SHORT $LN10@shopWindow

; 8627 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00097	6a 02		 push	 2
  00099	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow4@@YAHXZ@4PAHA
  0009e	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000a3	83 c4 08	 add	 esp, 8
  000a6	8b f0		 mov	 esi, eax
$LN10@shopWindow:

; 8628 : 		}
; 8629 : 		if (CheckMenuFlag()
; 8630 : 			|| joy_trg[0] & JOY_ESC
; 8631 : 			|| actBtn == 1
; 8632 : 			|| menuBtn == 1
; 8633 : 			|| disconnectServerFlag == TRUE
; 8634 : 			|| wnCloseFlag == 1) {

  000a8	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000ad	85 c0		 test	 eax, eax
  000af	0f 85 53 01 00
	00		 jne	 $LN12@shopWindow
  000b5	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000bf	0f 85 43 01 00
	00		 jne	 $LN12@shopWindow
  000c5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000cd	0f 84 35 01 00
	00		 je	 $LN12@shopWindow
  000d3	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000db	0f 84 27 01 00
	00		 je	 $LN12@shopWindow
  000e1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000e8	0f 84 1a 01 00
	00		 je	 $LN12@shopWindow
  000ee	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f6	0f 84 0c 01 00
	00		 je	 $LN12@shopWindow

; 8637 : 		}
; 8638 : 
; 8639 : 
; 8640 : 		if (id >= 0) {

  000fc	85 f6		 test	 esi, esi
  000fe	78 6a		 js	 SHORT $LN13@shopWindow

; 8641 : 			if (id == 0) {

  00100	75 1f		 jne	 SHORT $LN14@shopWindow

; 8642 : 				ret = 1;

  00102	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00108	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0010b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8652 : 			if (ret == 100) {
; 8653 : 				windowTypeWN = -1;
; 8654 : 			}
; 8655 : 			return ret;

  00110	83 c4 04	 add	 esp, 4
  00113	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0011d	8b c6		 mov	 eax, esi
  0011f	5e		 pop	 esi

; 8673 : }

  00120	c3		 ret	 0
$LN14@shopWindow:

; 8643 : 			}
; 8644 : 			else if (id == 1) {

  00121	83 fe 01	 cmp	 esi, 1
  00124	75 21		 jne	 SHORT $LN16@shopWindow

; 8645 : 				ret = 2;

  00126	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0012c	be 02 00 00 00	 mov	 esi, 2
  00131	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8652 : 			if (ret == 100) {
; 8653 : 				windowTypeWN = -1;
; 8654 : 			}
; 8655 : 			return ret;

  00136	83 c4 04	 add	 esp, 4
  00139	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00143	8b c6		 mov	 eax, esi
  00145	5e		 pop	 esi

; 8673 : }

  00146	c3		 ret	 0
$LN16@shopWindow:

; 8646 : 			}
; 8647 : 			else if (id == 100) {

  00147	83 fe 64	 cmp	 esi, 100		; 00000064H
  0014a	0f 84 c0 00 00
	00		 je	 $LN34@shopWindow

; 8649 : 			}
; 8650 : 			DeathAction(ptActMenuWin);

  00150	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00156	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0015b	83 c4 04	 add	 esp, 4

; 8651 : 			ptActMenuWin = NULL;

  0015e	33 f6		 xor	 esi, esi

; 8652 : 			if (ret == 100) {
; 8653 : 				windowTypeWN = -1;
; 8654 : 			}
; 8655 : 			return ret;

  00160	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  00166	8b c6		 mov	 eax, esi
  00168	5e		 pop	 esi

; 8673 : }

  00169	c3		 ret	 0
$LN13@shopWindow:

; 8656 : 		}
; 8657 : 
; 8658 : 
; 8659 : 		if (ptActMenuWin->hp >= 1) {

  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0016f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00173	0f 8c 8b 00 00
	00		 jl	 $LN20@shopWindow

; 8660 : 			for (i = 0; i < sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]); i++) {

  00179	33 f6		 xor	 esi, esi
  0017b	53		 push	 ebx
  0017c	57		 push	 edi
  0017d	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
  00182	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
$LL7@shopWindow:

; 8661 : 				if (shopWindow4Msg[0] != '\0') {
; 8662 : 					StockFontBuffer(x + 20, y + 20 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00185	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow4@@YAHXZ@4HA
  0018a	6a 00		 push	 0
  0018c	57		 push	 edi
  0018d	83 c0 14	 add	 eax, 20			; 00000014H
  00190	6a 00		 push	 0
  00192	03 c6		 add	 eax, esi
  00194	6a 01		 push	 1
  00196	50		 push	 eax
  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow4@@YAHXZ@4HA
  0019c	83 c0 14	 add	 eax, 20			; 00000014H
  0019f	50		 push	 eax
  001a0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001a5	83 c4 18	 add	 esp, 24			; 00000018H
  001a8	83 c7 27	 add	 edi, 39			; 00000027H
  001ab	83 c6 14	 add	 esi, 20			; 00000014H
  001ae	83 eb 01	 sub	 ebx, 1
  001b1	75 d2		 jne	 SHORT $LL7@shopWindow

; 8663 : 						shopWindow4Msg[i], 0);
; 8664 : 				}
; 8665 : 			}
; 8666 : 
; 8667 : 			btnId[0] = StockDispBuffer(x + 128, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  001b3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow4@@YAHXZ@4HA
  001b8	6a 02		 push	 2
  001ba	68 ee 65 00 00	 push	 26094			; 000065eeH
  001bf	83 c0 48	 add	 eax, 72			; 00000048H
  001c2	6a 69		 push	 105			; 00000069H
  001c4	50		 push	 eax
  001c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow4@@YAHXZ@4HA
  001ca	83 e8 80	 sub	 eax, -128		; ffffff80H
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001d3	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow4@@YAHXZ@4PAHA, eax

; 8668 : 			btnId[1] = StockDispBuffer(x + 256, y + 72, DISP_PRIO_IME3, CG_NO_BTN, 2);

  001d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow4@@YAHXZ@4HA
  001dd	6a 02		 push	 2
  001df	68 ef 65 00 00	 push	 26095			; 000065efH
  001e4	83 c0 48	 add	 eax, 72			; 00000048H
  001e7	6a 69		 push	 105			; 00000069H
  001e9	50		 push	 eax
  001ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow4@@YAHXZ@4HA
  001ef	05 00 01 00 00	 add	 eax, 256		; 00000100H
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001fa	83 c4 28	 add	 esp, 40			; 00000028H
  001fd	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow4@@YAHXZ@4PAHA+4, eax
  00202	5f		 pop	 edi
  00203	5b		 pop	 ebx
$LN20@shopWindow:

; 8669 : 		}
; 8670 : 	}
; 8671 : 
; 8672 : 	return ret;

  00204	33 c0		 xor	 eax, eax
  00206	5e		 pop	 esi

; 8673 : }

  00207	c3		 ret	 0
$LN12@shopWindow:

; 8635 : 			id = 100;
; 8636 : 			wnCloseFlag = 0;

  00208	33 c0		 xor	 eax, eax
  0020a	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN34@shopWindow:

; 8648 : 				ret = 100;

  00210	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00216	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  0021b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8652 : 			if (ret == 100) {
; 8653 : 				windowTypeWN = -1;
; 8654 : 			}
; 8655 : 			return ret;

  00220	83 c4 04	 add	 esp, 4
  00223	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0022d	8b c6		 mov	 eax, esi
  0022f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00239	5e		 pop	 esi

; 8673 : }

  0023a	c3		 ret	 0
?shopWindow4@@YAHXZ ENDP				; shopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow4@@YAXXZ
_TEXT	SEGMENT
?initShopWindow4@@YAXXZ PROC				; initShopWindow4, COMDAT

; 8597 : 	shopWindow4ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow4ProcNo@@3FA, ax ; shopWindow4ProcNo

; 8598 : }

  00008	c3		 ret	 0
?initShopWindow4@@YAXXZ ENDP				; initShopWindow4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow3@@YAHXZ
_TEXT	SEGMENT
_upBtnGraNo$ = -276					; size = 8
_downBtnGraNo$ = -268					; size = 8
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?shopWindow3@@YAHXZ PROC				; shopWindow3, COMDAT

; 8455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi

; 8456 : 	static int x, y, w, h;
; 8457 : 	static int btnId[4];
; 8458 : 	int upBtnGraNo[] = { CG_UP_BTN, CG_UP_BTN_DOWN };
; 8459 : 	int downBtnGraNo[] = { CG_DOWN_BTN, CG_DOWN_BTN_DOWN };
; 8460 : 	int upBtn, downBtn;
; 8461 : 	int id;
; 8462 : 	int pushId = 0;

  00016	33 ff		 xor	 edi, edi
  00018	c7 85 ec fe ff
	ff 4c 66 00 00	 mov	 DWORD PTR _upBtnGraNo$[ebp], 26188 ; 0000664cH
  00022	c7 85 f0 fe ff
	ff 4d 66 00 00	 mov	 DWORD PTR _upBtnGraNo$[ebp+4], 26189 ; 0000664dH
  0002c	c7 85 f4 fe ff
	ff 4e 66 00 00	 mov	 DWORD PTR _downBtnGraNo$[ebp], 26190 ; 0000664eH
  00036	c7 85 f8 fe ff
	ff 4f 66 00 00	 mov	 DWORD PTR _downBtnGraNo$[ebp+4], 26191 ; 0000664fH

; 8463 : 	int i;
; 8464 : 	int ret = 0;
; 8465 : 	char tmsg[256];
; 8466 : 
; 8467 : 	if (shopWindow3ProcNo == 0) {

  00040	66 39 3d 00 00
	00 00		 cmp	 WORD PTR ?shopWindow3ProcNo@@3FA, di ; shopWindow3ProcNo
  00047	75 73		 jne	 SHORT $LN50@shopWindow

; 8468 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 8469 : 			btnId[i] = -2;

  00049	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 8470 : 		}
; 8471 : 		w = 440;
; 8472 : 		h = 160;
; 8473 : 		x = (640 - w) / 2;
; 8474 : 		y = (456 - h) / 2;
; 8475 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00050	6a ff		 push	 -1
  00052	57		 push	 edi
  00053	68 a0 00 00 00	 push	 160			; 000000a0H
  00058	68 b8 01 00 00	 push	 440			; 000001b8H
  0005d	68 94 00 00 00	 push	 148			; 00000094H
  00062	6a 64		 push	 100			; 00000064H
  00064	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??shopWindow3@@YAHXZ@4PAHA, xmm0
  0006b	c7 05 00 00 00
	00 b8 01 00 00	 mov	 DWORD PTR ?w@?1??shopWindow3@@YAHXZ@4HA, 440 ; 000001b8H
  00075	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow3@@YAHXZ@4HA, 160 ; 000000a0H
  0007f	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA, 100 ; 00000064H
  00089	c7 05 00 00 00
	00 94 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA, 148 ; 00000094H
  00093	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00098	8b c8		 mov	 ecx, eax
  0009a	83 c4 18	 add	 esp, 24			; 00000018H
  0009d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin

; 8476 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8477 : 		x = ptActMenuWin->x;

  000a3	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA, eax

; 8478 : 		y = ptActMenuWin->y;

  000ab	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 8479 : #endif		
; 8480 : 		shopWindow3ProcNo++;

  000ae	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow3ProcNo@@3FA ; shopWindow3ProcNo
  000b5	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA, eax
  000ba	eb 06		 jmp	 SHORT $LN5@shopWindow
$LN50@shopWindow:

; 8463 : 	int i;
; 8464 : 	int ret = 0;
; 8465 : 	char tmsg[256];
; 8466 : 
; 8467 : 	if (shopWindow3ProcNo == 0) {

  000bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN5@shopWindow:

; 8481 : 	}
; 8482 : 
; 8483 : 
; 8484 : 	if (ptActMenuWin != NULL) {

  000c2	85 c9		 test	 ecx, ecx
  000c4	0f 84 ea 04 00
	00		 je	 $LN29@shopWindow

; 8485 : 		id = -1;

  000ca	83 ce ff	 or	 esi, -1

; 8486 : 		if (ptActMenuWin->hp >= 1) {

  000cd	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000d1	7c 1f		 jl	 SHORT $LN7@shopWindow

; 8487 : 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000d3	6a 04		 push	 4
  000d5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow3@@YAHXZ@4PAHA
  000da	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 8488 : 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  000df	6a 04		 push	 4
  000e1	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow3@@YAHXZ@4PAHA
  000e6	8b f0		 mov	 esi, eax
  000e8	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId
  000ed	83 c4 10	 add	 esp, 16			; 00000010H
  000f0	8b f8		 mov	 edi, eax
$LN7@shopWindow:

; 8489 : 		}
; 8490 : 
; 8491 : 		if (joy_con[0] & JOY_A) {

  000f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  000f7	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  000fc	74 12		 je	 SHORT $LN9@shopWindow

; 8492 : 			pushId = 0;

  000fe	33 ff		 xor	 edi, edi

; 8493 : 			if (joy_auto[0] & JOY_A) {

  00100	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  0010a	74 08		 je	 SHORT $LN42@shopWindow

; 8494 : 				id = 0;

  0010c	33 f6		 xor	 esi, esi

; 8495 : 			}
; 8496 : 		}
; 8497 : 		if (pushId == 0) {

  0010e	eb 08		 jmp	 SHORT $LN43@shopWindow
$LN9@shopWindow:
  00110	85 ff		 test	 edi, edi
  00112	75 45		 jne	 SHORT $LN10@shopWindow
$LN42@shopWindow:

; 8498 : 			downBtn = 1;
; 8499 : 			if (id == 0) {

  00114	85 f6		 test	 esi, esi
  00116	75 32		 jne	 SHORT $LN51@shopWindow
$LN43@shopWindow:

; 8500 : 				if (sealItemCnt > 1) {

  00118	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  0011f	66 83 f9 01	 cmp	 cx, 1
  00123	7e 2c		 jle	 SHORT $LN13@shopWindow

; 8501 : 					sealItemCnt--;
; 8502 : 					play_se(217, 320, 240);	// ?????

  00125	68 f0 00 00 00	 push	 240			; 000000f0H
  0012a	66 49		 dec	 cx
  0012c	68 40 01 00 00	 push	 320			; 00000140H
  00131	68 d9 00 00 00	 push	 217			; 000000d9H
  00136	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?sealItemCnt@@3FA, cx ; sealItemCnt
  0013d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00142	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  00147	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN51@shopWindow:

; 8503 : 				}
; 8504 : 			}
; 8505 : 		}

  0014a	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
$LN13@shopWindow:
  00151	8d 9d f8 fe ff
	ff		 lea	 ebx, DWORD PTR _downBtnGraNo$[ebp+4]
  00157	eb 0d		 jmp	 SHORT $LN11@shopWindow
$LN10@shopWindow:

; 8506 : 		else {
; 8507 : 			downBtn = 0;

  00159	66 8b 0d 00 00
	00 00		 mov	 cx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  00160	8d 9d f4 fe ff
	ff		 lea	 ebx, DWORD PTR _downBtnGraNo$[ebp]
$LN11@shopWindow:

; 8508 : 		}
; 8509 : 		if (joy_con[0] & JOY_B) {

  00166	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  0016b	74 13		 je	 SHORT $LN15@shopWindow

; 8510 : 			pushId = 1;
; 8511 : 			if (joy_auto[0] & JOY_B) {

  0016d	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  00177	74 0c		 je	 SHORT $LN44@shopWindow

; 8512 : 				id = 1;

  00179	be 01 00 00 00	 mov	 esi, 1

; 8513 : 			}
; 8514 : 		}
; 8515 : 		if (pushId == 1) {

  0017e	eb 0a		 jmp	 SHORT $LN45@shopWindow
$LN15@shopWindow:
  00180	83 ff 01	 cmp	 edi, 1
  00183	75 6b		 jne	 SHORT $LN16@shopWindow
$LN44@shopWindow:

; 8516 : 			upBtn = 1;
; 8517 : 			if (id == 1) {

  00185	83 fe 01	 cmp	 esi, 1
  00188	75 5e		 jne	 SHORT $LN19@shopWindow
$LN45@shopWindow:

; 8518 : 				if (sealItemCnt + 1 <= nowUserItemCnt
; 8519 : 					&& sealItem[selShopItemNo].price * (sealItemCnt + 1) <= pc.gold
; 8520 : #ifdef _NEW_MANOR_LAW
; 8521 : 					&& sealItem[selShopItemNo].costfame * (sealItemCnt + 1) <= pc.fame

  0018a	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?nowUserItemCnt@@3FA ; nowUserItemCnt
  00191	0f bf d1	 movsx	 edx, cx
  00194	42		 inc	 edx
  00195	3b d0		 cmp	 edx, eax
  00197	7f 4f		 jg	 SHORT $LN19@shopWindow
  00199	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  001a0	69 f8 8c 00 00
	00		 imul	 edi, eax, 140
  001a6	8b 87 04 00 00
	00		 mov	 eax, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[edi+4]
  001ac	0f af c2	 imul	 eax, edx
  001af	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  001b5	7f 31		 jg	 SHORT $LN19@shopWindow
  001b7	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[edi+136]
  001bd	0f af c2	 imul	 eax, edx
  001c0	3b 05 64 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+100
  001c6	7f 20		 jg	 SHORT $LN19@shopWindow

; 8522 : #endif
; 8523 : 					) {
; 8524 : 					sealItemCnt++;
; 8525 : 					play_se(217, 320, 240);	// ?????

  001c8	68 f0 00 00 00	 push	 240			; 000000f0H
  001cd	66 41		 inc	 cx
  001cf	68 40 01 00 00	 push	 320			; 00000140H
  001d4	68 d9 00 00 00	 push	 217			; 000000d9H
  001d9	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?sealItemCnt@@3FA, cx ; sealItemCnt
  001e0	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001e5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@shopWindow:

; 8526 : 				}
; 8527 : 			}
; 8528 : 		}

  001e8	8d bd f0 fe ff
	ff		 lea	 edi, DWORD PTR _upBtnGraNo$[ebp+4]
  001ee	eb 06		 jmp	 SHORT $LN17@shopWindow
$LN16@shopWindow:

; 8529 : 		else {
; 8530 : 			upBtn = 0;

  001f0	8d bd ec fe ff
	ff		 lea	 edi, DWORD PTR _upBtnGraNo$[ebp]
$LN17@shopWindow:

; 8531 : 		}
; 8532 : 		if (CheckMenuFlag()
; 8533 : 			|| joy_trg[0] & JOY_ESC
; 8534 : 			|| actBtn == 1
; 8535 : 			|| menuBtn == 1
; 8536 : 			|| disconnectServerFlag == TRUE
; 8537 : 			|| wnCloseFlag == 1) {

  001f6	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  001fb	85 c0		 test	 eax, eax
  001fd	0f 85 c4 03 00
	00		 jne	 $LN21@shopWindow
  00203	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0020d	0f 85 b4 03 00
	00		 jne	 $LN21@shopWindow
  00213	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0021b	0f 84 a6 03 00
	00		 je	 $LN21@shopWindow
  00221	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00229	0f 84 98 03 00
	00		 je	 $LN21@shopWindow
  0022f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00236	0f 84 8b 03 00
	00		 je	 $LN21@shopWindow
  0023c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00244	0f 84 7d 03 00
	00		 je	 $LN21@shopWindow

; 8540 : 		}
; 8541 : 
; 8542 : 
; 8543 : 		if (id >= 2) {

  0024a	83 fe 02	 cmp	 esi, 2
  0024d	0f 8c 97 00 00
	00		 jl	 $LN22@shopWindow

; 8544 : 			if (id == 2) {

  00253	75 2e		 jne	 SHORT $LN23@shopWindow

; 8545 : 				ret = 1;

  00255	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0025b	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  0025e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8555 : 			if (ret == 100) {
; 8556 : 				windowTypeWN = -1;
; 8557 : 			}
; 8558 : 			return ret;

  00263	83 c4 04	 add	 esp, 4
  00266	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00270	8b c6		 mov	 eax, esi
  00272	5f		 pop	 edi

; 8589 : 		}
; 8590 : 	}
; 8591 : 
; 8592 : 	return ret;
; 8593 : }

  00273	5e		 pop	 esi
  00274	5b		 pop	 ebx
  00275	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00278	33 cd		 xor	 ecx, ebp
  0027a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027f	8b e5		 mov	 esp, ebp
  00281	5d		 pop	 ebp
  00282	c3		 ret	 0
$LN23@shopWindow:

; 8546 : 			}
; 8547 : 			else if (id == 3) {

  00283	83 fe 03	 cmp	 esi, 3
  00286	75 30		 jne	 SHORT $LN25@shopWindow

; 8548 : 				ret = 2;

  00288	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0028e	be 02 00 00 00	 mov	 esi, 2
  00293	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8555 : 			if (ret == 100) {
; 8556 : 				windowTypeWN = -1;
; 8557 : 			}
; 8558 : 			return ret;

  00298	83 c4 04	 add	 esp, 4
  0029b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  002a5	8b c6		 mov	 eax, esi
  002a7	5f		 pop	 edi

; 8589 : 		}
; 8590 : 	}
; 8591 : 
; 8592 : 	return ret;
; 8593 : }

  002a8	5e		 pop	 esi
  002a9	5b		 pop	 ebx
  002aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ad	33 cd		 xor	 ecx, ebp
  002af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b4	8b e5		 mov	 esp, ebp
  002b6	5d		 pop	 ebp
  002b7	c3		 ret	 0
$LN25@shopWindow:

; 8549 : 			}
; 8550 : 			else if (id == 100) {

  002b8	83 fe 64	 cmp	 esi, 100		; 00000064H
  002bb	0f 84 0e 03 00
	00		 je	 $LN47@shopWindow

; 8552 : 			}
; 8553 : 			DeathAction(ptActMenuWin);

  002c1	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002c7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002cc	83 c4 04	 add	 esp, 4

; 8554 : 			ptActMenuWin = NULL;

  002cf	33 f6		 xor	 esi, esi

; 8555 : 			if (ret == 100) {
; 8556 : 				windowTypeWN = -1;
; 8557 : 			}
; 8558 : 			return ret;

  002d1	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  002d7	8b c6		 mov	 eax, esi
  002d9	5f		 pop	 edi

; 8589 : 		}
; 8590 : 	}
; 8591 : 
; 8592 : 	return ret;
; 8593 : }

  002da	5e		 pop	 esi
  002db	5b		 pop	 ebx
  002dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002df	33 cd		 xor	 ecx, ebp
  002e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002e6	8b e5		 mov	 esp, ebp
  002e8	5d		 pop	 ebp
  002e9	c3		 ret	 0
$LN22@shopWindow:

; 8559 : 		}
; 8560 : 		if (ptActMenuWin->hp >= 1) {

  002ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002ef	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002f3	0f 8c bb 02 00
	00		 jl	 $LN29@shopWindow

; 8561 : 			int xx;
; 8562 : 			xx = (w - strlen(shopWindow3Msg) / 2 * 17) / 2;

  002f9	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow3Msg@@3PADA ; shopWindow3Msg
  002fe	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL49@shopWindow:
  00301	8a 01		 mov	 al, BYTE PTR [ecx]
  00303	41		 inc	 ecx
  00304	84 c0		 test	 al, al
  00306	75 f9		 jne	 SHORT $LL49@shopWindow

; 8563 : 			StockFontBuffer(x + xx, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow3Msg, 0);

  00308	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  0030d	2b ca		 sub	 ecx, edx
  0030f	6a 00		 push	 0
  00311	68 00 00 00 00	 push	 OFFSET ?shopWindow3Msg@@3PADA ; shopWindow3Msg
  00316	d1 e9		 shr	 ecx, 1
  00318	83 c0 14	 add	 eax, 20			; 00000014H
  0031b	6a 00		 push	 0
  0031d	6a 01		 push	 1
  0031f	50		 push	 eax
  00320	8b c1		 mov	 eax, ecx
  00322	c1 e0 04	 shl	 eax, 4
  00325	03 c1		 add	 eax, ecx
  00327	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??shopWindow3@@YAHXZ@4HA
  0032d	2b c8		 sub	 ecx, eax
  0032f	d1 e9		 shr	 ecx, 1
  00331	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  00337	51		 push	 ecx
  00338	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8564 : 			StockFontBuffer(x + 16, y + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  0033d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00344	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  0034a	6a 00		 push	 0
  0034c	05 10 00 00 00	 add	 eax, OFFSET ?sealItem@@3PAUITEM_SHOP@@A+16
  00351	50		 push	 eax
  00352	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00357	6a 00		 push	 0
  00359	83 c0 34	 add	 eax, 52			; 00000034H
  0035c	6a 01		 push	 1
  0035e	50		 push	 eax
  0035f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  00364	83 c0 10	 add	 eax, 16			; 00000010H
  00367	50		 push	 eax
  00368	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8565 : 				sealItem[selShopItemNo].name, 0);
; 8566 : 			sprintf(tmsg, "%2dä¸ª", sealItemCnt);

  0036d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  00374	50		 push	 eax
  00375	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0037b	68 00 00 00 00	 push	 OFFSET ??_C@_04HNNONBHM@?$CF2d?$DP@
  00380	50		 push	 eax
  00381	e8 00 00 00 00	 call	 _sprintf

; 8567 : 			StockFontBuffer(x + 300, y + 52, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00386	6a 00		 push	 0
  00388	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0038e	50		 push	 eax
  0038f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00394	6a 00		 push	 0
  00396	83 c0 34	 add	 eax, 52			; 00000034H
  00399	6a 01		 push	 1
  0039b	50		 push	 eax
  0039c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  003a1	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  003a6	50		 push	 eax
  003a7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8568 : 			sprintf(tmsg, "%8dï¼³ x %2d = %8dï¼³", sealItem[selShopItemNo].price,

  003ac	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  003b3	83 c4 54	 add	 esp, 84			; 00000054H
  003b6	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  003bd	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  003c3	8b 90 04 00 00
	00		 mov	 edx, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[eax+4]
  003c9	8b c2		 mov	 eax, edx
  003cb	0f af c1	 imul	 eax, ecx
  003ce	50		 push	 eax
  003cf	51		 push	 ecx
  003d0	52		 push	 edx
  003d1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003d7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PBEPDFJI@?$CF8d?$KD?S?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?S@
  003dc	50		 push	 eax
  003dd	e8 00 00 00 00	 call	 _sprintf

; 8569 : 				sealItemCnt, sealItem[selShopItemNo].price * sealItemCnt);
; 8570 : 			StockFontBuffer(x + 16, y + 82, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  003e2	6a 00		 push	 0
  003e4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003ea	50		 push	 eax
  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  003f0	6a 00		 push	 0
  003f2	83 c0 52	 add	 eax, 82			; 00000052H
  003f5	6a 01		 push	 1
  003f7	50		 push	 eax
  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  003fd	83 c0 10	 add	 eax, 16			; 00000010H
  00400	50		 push	 eax
  00401	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8571 : 				tmsg, 0);
; 8572 : #ifdef _NEW_MANOR_LAW
; 8573 : 			if (sealItem[selShopItemNo].costfame > -1) {

  00406	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  0040d	83 c4 2c	 add	 esp, 44			; 0000002cH
  00410	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  00416	8b 90 88 00 00
	00		 mov	 edx, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[eax+136]
  0041c	83 fa ff	 cmp	 edx, -1
  0041f	7e 47		 jle	 SHORT $LN30@shopWindow

; 8574 : 				sprintf(tmsg, "%8dï¼¦ x %2d = %8dï¼¦", sealItem[selShopItemNo].costfame, sealItemCnt,

  00421	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  00428	8b c2		 mov	 eax, edx
  0042a	0f af c1	 imul	 eax, ecx
  0042d	50		 push	 eax
  0042e	51		 push	 ecx
  0042f	52		 push	 edx
  00430	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00436	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FKIEDAAE@?$CF8d?$KD?F?5x?5?$CF2d?5?$DN?5?$CF8d?$KD?F@
  0043b	50		 push	 eax
  0043c	e8 00 00 00 00	 call	 _sprintf

; 8575 : 					sealItem[selShopItemNo].costfame * sealItemCnt);
; 8576 : 				StockFontBuffer(x + 16, y + 102, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00441	6a 00		 push	 0
  00443	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00449	50		 push	 eax
  0044a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  0044f	6a 00		 push	 0
  00451	83 c0 66	 add	 eax, 102		; 00000066H
  00454	6a 01		 push	 1
  00456	50		 push	 eax
  00457	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  0045c	83 c0 10	 add	 eax, 16			; 00000010H
  0045f	50		 push	 eax
  00460	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00465	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN30@shopWindow:

; 8577 : 			}
; 8578 : 			sprintf(tmsg, "ëªì± %8dï¼¦", pc.fame);

  00468	ff 35 64 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+100
  0046e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00474	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@
  00479	50		 push	 eax
  0047a	e8 00 00 00 00	 call	 _sprintf

; 8579 : 			StockFontBuffer(x + 248, y + 100, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  0047f	6a 00		 push	 0
  00481	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00487	50		 push	 eax
  00488	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  0048d	6a 00		 push	 0
  0048f	83 c0 64	 add	 eax, 100		; 00000064H
  00492	6a 01		 push	 1
  00494	50		 push	 eax
  00495	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  0049a	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  0049f	50		 push	 eax
  004a0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8580 : #endif
; 8581 : 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  004a5	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  004ab	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004b1	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  004b6	50		 push	 eax
  004b7	e8 00 00 00 00	 call	 _sprintf

; 8582 : 			StockFontBuffer(x + 248, y + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  004bc	6a 00		 push	 0
  004be	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004c4	50		 push	 eax
  004c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  004ca	6a 00		 push	 0
  004cc	83 c0 78	 add	 eax, 120		; 00000078H
  004cf	6a 01		 push	 1
  004d1	50		 push	 eax
  004d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  004d7	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  004dc	50		 push	 eax
  004dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8583 : 			btnId[0] = StockDispBuffer(x + 364, y + 60, DISP_PRIO_IME3, downBtnGraNo[downBtn], 2);

  004e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  004e7	83 c4 48	 add	 esp, 72			; 00000048H
  004ea	83 c0 3c	 add	 eax, 60			; 0000003cH
  004ed	6a 02		 push	 2
  004ef	ff 33		 push	 DWORD PTR [ebx]
  004f1	6a 69		 push	 105			; 00000069H
  004f3	50		 push	 eax
  004f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  004f9	05 6c 01 00 00	 add	 eax, 364		; 0000016cH
  004fe	50		 push	 eax
  004ff	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 8584 : 			btnId[1] = StockDispBuffer(x + 404, y + 60, DISP_PRIO_IME3, upBtnGraNo[upBtn], 2);

  00504	6a 02		 push	 2
  00506	ff 37		 push	 DWORD PTR [edi]
  00508	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow3@@YAHXZ@4PAHA, eax
  0050d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00512	83 c0 3c	 add	 eax, 60			; 0000003cH
  00515	6a 69		 push	 105			; 00000069H
  00517	50		 push	 eax
  00518	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  0051d	05 94 01 00 00	 add	 eax, 404		; 00000194H
  00522	50		 push	 eax
  00523	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00528	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow3@@YAHXZ@4PAHA+4, eax

; 8585 : 
; 8586 : 			btnId[2] = StockDispBuffer(x + 64, y + 140, DISP_PRIO_IME3, CG_OK_BTN, 2);

  0052d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00532	6a 02		 push	 2
  00534	68 ed 65 00 00	 push	 26093			; 000065edH
  00539	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  0053e	6a 69		 push	 105			; 00000069H
  00540	50		 push	 eax
  00541	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  00546	83 c0 40	 add	 eax, 64			; 00000040H
  00549	50		 push	 eax
  0054a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0054f	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow3@@YAHXZ@4PAHA+8, eax

; 8587 : 			btnId[3] = StockDispBuffer(x + 164, y + 140, DISP_PRIO_IME3, CG_CANCEL_BTN, 2);

  00554	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00559	6a 02		 push	 2
  0055b	68 c2 65 00 00	 push	 26050			; 000065c2H
  00560	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00565	6a 69		 push	 105			; 00000069H
  00567	50		 push	 eax
  00568	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  0056d	05 a4 00 00 00	 add	 eax, 164		; 000000a4H
  00572	50		 push	 eax
  00573	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00578	83 c4 50	 add	 esp, 80			; 00000050H
  0057b	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow3@@YAHXZ@4PAHA+12, eax

; 8588 : 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_KOSU_WIN, 1);

  00580	6a 01		 push	 1
  00582	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??shopWindow3@@YAHXZ@4HA
  00587	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_KOSU_WIN@@3HA ; CG_ITEMSHOP_KOSU_WIN
  0058d	99		 cdq
  0058e	2b c2		 sub	 eax, edx
  00590	d1 f8		 sar	 eax, 1
  00592	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??shopWindow3@@YAHXZ@4HA
  00598	6a 68		 push	 104			; 00000068H
  0059a	50		 push	 eax
  0059b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow3@@YAHXZ@4HA
  005a0	99		 cdq
  005a1	2b c2		 sub	 eax, edx
  005a3	d1 f8		 sar	 eax, 1
  005a5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow3@@YAHXZ@4HA
  005ab	50		 push	 eax
  005ac	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005b1	83 c4 14	 add	 esp, 20			; 00000014H
$LN29@shopWindow:

; 8589 : 		}
; 8590 : 	}
; 8591 : 
; 8592 : 	return ret;
; 8593 : }

  005b4	5f		 pop	 edi
  005b5	5e		 pop	 esi
  005b6	33 c0		 xor	 eax, eax
  005b8	5b		 pop	 ebx
  005b9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005bc	33 cd		 xor	 ecx, ebp
  005be	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005c3	8b e5		 mov	 esp, ebp
  005c5	5d		 pop	 ebp
  005c6	c3		 ret	 0
$LN21@shopWindow:

; 8538 : 			id = 100;
; 8539 : 			wnCloseFlag = 0;

  005c7	33 c0		 xor	 eax, eax
  005c9	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN47@shopWindow:

; 8551 : 				ret = 100;

  005cf	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  005d5	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  005da	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8589 : 		}
; 8590 : 	}
; 8591 : 
; 8592 : 	return ret;
; 8593 : }

  005df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005e2	83 c4 04	 add	 esp, 4
  005e5	8b c6		 mov	 eax, esi
  005e7	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  005f1	33 cd		 xor	 ecx, ebp
  005f3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  005fd	5f		 pop	 edi
  005fe	5e		 pop	 esi
  005ff	5b		 pop	 ebx
  00600	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00605	8b e5		 mov	 esp, ebp
  00607	5d		 pop	 ebp
  00608	c3		 ret	 0
?shopWindow3@@YAHXZ ENDP				; shopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow3@@YAXXZ
_TEXT	SEGMENT
?initShopWindow3@@YAXXZ PROC				; initShopWindow3, COMDAT

; 8451 : 	shopWindow3ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow3ProcNo@@3FA, ax ; shopWindow3ProcNo

; 8452 : }

  00008	c3		 ret	 0
?initShopWindow3@@YAXXZ ENDP				; initShopWindow3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow2@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -292					; size = 8
_prevBtnGraNo$ = -284					; size = 8
tv1427 = -276						; size = 4
_pushId$1$ = -276					; size = 4
_focusId$1$ = -272					; size = 4
$T1 = -268						; size = 4
_id$1$ = -268						; size = 4
$T2 = -264						; size = 4
_selId$1$ = -264					; size = 4
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?shopWindow2@@YAHXZ PROC				; shopWindow2, COMDAT

; 8236 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 8237 : 	static int x, y, w, h;
; 8238 : 	static int btnId[3];
; 8239 : 	int id;
; 8240 : 	int pushId;
; 8241 : 	int focusId;
; 8242 : 	int selId;
; 8243 : 	int i, j;
; 8244 : 	int ret = 0;
; 8245 : 	char tmsg[256];
; 8246 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 8247 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 8248 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 8249 : 	int color;
; 8250 : 	int prevBtn, nextBtn;
; 8251 : 	int x1, y1, x2, y2;
; 8252 : 
; 8253 : 	if (shopWindow2ProcNo == 0) {

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindow2ProcNo@@3FA, 0 ; shopWindow2ProcNo
  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	c7 85 e4 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00028	c7 85 e8 fe ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  00032	c7 85 dc fe ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  0003c	c7 85 e0 fe ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00046	0f 85 95 00 00
	00		 jne	 $LN92@shopWindow

; 8254 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 8255 : 			btnId[i] = -2;
; 8256 : 		}
; 8257 : 		w = 432;
; 8258 : 		h = 428;
; 8259 : 		x = (640 - w) / 2;
; 8260 : 		y = (456 - h) / 2;
; 8261 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  0004c	6a ff		 push	 -1
  0004e	6a 00		 push	 0
  00050	68 ac 01 00 00	 push	 428			; 000001acH
  00055	68 b0 01 00 00	 push	 432			; 000001b0H
  0005a	6a 0e		 push	 14			; 0000000eH
  0005c	6a 68		 push	 104			; 00000068H
  0005e	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA, -2 ; fffffffeH
  00068	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00072	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  0007c	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??shopWindow2@@YAHXZ@4HA, 432 ; 000001b0H
  00086	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??shopWindow2@@YAHXZ@4HA, 428 ; 000001acH
  00090	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA, 104 ; 00000068H
  0009a	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA, 14 ; 0000000eH
  000a4	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a9	8b f0		 mov	 esi, eax
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 8262 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8263 : 		x = ptActMenuWin->x;
; 8264 : 		ptActMenuWin->y += DISPLACEMENT_Y / 2;

  000ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  000b3	99		 cdq
  000b4	2b c2		 sub	 eax, edx
  000b6	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  000bc	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  000bf	d1 f8		 sar	 eax, 1
  000c1	01 46 1c	 add	 DWORD PTR [esi+28], eax
  000c4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA, ecx

; 8265 : 		y = ptActMenuWin->y;

  000ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000d0	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 8266 : #endif
; 8267 : 		shopWindow2ProcNo++;

  000d3	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow2ProcNo@@3FA ; shopWindow2ProcNo
  000da	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA, eax
  000df	eb 06		 jmp	 SHORT $LN17@shopWindow
$LN92@shopWindow:

; 8237 : 	static int x, y, w, h;
; 8238 : 	static int btnId[3];
; 8239 : 	int id;
; 8240 : 	int pushId;
; 8241 : 	int focusId;
; 8242 : 	int selId;
; 8243 : 	int i, j;
; 8244 : 	int ret = 0;
; 8245 : 	char tmsg[256];
; 8246 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 8247 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 8248 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 8249 : 	int color;
; 8250 : 	int prevBtn, nextBtn;
; 8251 : 	int x1, y1, x2, y2;
; 8252 : 
; 8253 : 	if (shopWindow2ProcNo == 0) {

  000e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN17@shopWindow:

; 8268 : 	}
; 8269 : 
; 8270 : 
; 8271 : 	if (ptActMenuWin != NULL) {

  000e7	85 c9		 test	 ecx, ecx
  000e9	0f 84 e1 05 00
	00		 je	 $LN50@shopWindow

; 8272 : 		id = -1;

  000ef	83 cb ff	 or	 ebx, -1

; 8273 : 		pushId = -1;
; 8274 : 		focusId = -1;
; 8275 : 		selId = -1;

  000f2	0b f3		 or	 esi, ebx
  000f4	89 9d f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx
  000fa	0b fb		 or	 edi, ebx
  000fc	89 b5 f8 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi

; 8276 : 		if (ptActMenuWin->hp >= 1) {

  00102	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  00106	0f 8c ee 00 00
	00		 jl	 $LN6@shopWindow

; 8277 : 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  0010c	6a 03		 push	 3
  0010e	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow2@@YAHXZ@4PAHA
  00113	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 8278 : 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  00118	6a 03		 push	 3
  0011a	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow2@@YAHXZ@4PAHA
  0011f	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  00125	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 8279 : 
; 8280 : 			j = shopWondow2Page * MAX_SHOP_ITEM;

  0012a	0f bf 3d 00 00
	00 00		 movsx	 edi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00131	83 c4 10	 add	 esp, 16			; 00000010H
  00134	c1 e7 03	 shl	 edi, 3
  00137	33 db		 xor	 ebx, ebx
  00139	69 f7 8c 00 00
	00		 imul	 esi, edi, 140
  0013f	89 85 ec fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  00145	81 c6 04 00 00
	00		 add	 esi, OFFSET ?sealItem@@3PAUITEM_SHOP@@A+4
  0014b	0f 1f 44 00 00	 npad	 5
$LL7@shopWindow:

; 8282 : 				if (sealItem[j + i].name[0] != '\0') {

  00150	80 7e 0c 00	 cmp	 BYTE PTR [esi+12], 0
  00154	74 7c		 je	 SHORT $LN5@shopWindow

; 8283 : 					x1 = x + 32;
; 8284 : 					y1 = y + i * 21 + 116;

  00156	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0015c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00162	83 c1 74	 add	 ecx, 116		; 00000074H
  00165	03 cb		 add	 ecx, ebx
  00167	83 c2 20	 add	 edx, 32			; 00000020H

; 8285 : 					x2 = x1 + 372;
; 8286 : 					y2 = y1 + 20;
; 8287 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  0016a	6a 6b		 push	 107			; 0000006bH
  0016c	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0016f	50		 push	 eax
  00170	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  00176	50		 push	 eax
  00177	51		 push	 ecx
  00178	52		 push	 edx
  00179	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0017e	83 c4 14	 add	 esp, 20			; 00000014H
  00181	85 c0		 test	 eax, eax
  00183	74 4d		 je	 SHORT $LN5@shopWindow

; 8288 : 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00185	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0018c	74 3e		 je	 SHORT $LN24@shopWindow

; 8289 : 
; 8290 : 							if (sealItem[j + i].price <= pc.gold &&
; 8291 : 								sealItem[j + i].sealFlag == 0
; 8292 : #ifdef _NEW_MANOR_LAW
; 8293 : 								&& sealItem[j + i].costfame <= pc.fame

  0018e	8b 06		 mov	 eax, DWORD PTR [esi]
  00190	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  00196	7f 1d		 jg	 SHORT $LN23@shopWindow
  00198	66 83 7e 08 00	 cmp	 WORD PTR [esi+8], 0
  0019d	75 16		 jne	 SHORT $LN23@shopWindow
  0019f	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR [esi+132]
  001a5	3b 05 64 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+100
  001ab	7f 08		 jg	 SHORT $LN23@shopWindow

; 8294 : #endif
; 8295 : 								) {
; 8296 : 								selId = j + i;

  001ad	89 bd f8 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], edi

; 8297 : 							}

  001b3	eb 17		 jmp	 SHORT $LN24@shopWindow
$LN23@shopWindow:

; 8298 : 							else {
; 8299 : 								play_se(220, 320, 240);

  001b5	68 f0 00 00 00	 push	 240			; 000000f0H
  001ba	68 40 01 00 00	 push	 320			; 00000140H
  001bf	68 dc 00 00 00	 push	 220			; 000000dcH
  001c4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001c9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN24@shopWindow:

; 8300 : 							}
; 8301 : 						}
; 8302 : 						focusId = j + i;

  001cc	89 bd f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], edi
$LN5@shopWindow:

; 8281 : 			for (i = 0; i < MAX_SHOP_ITEM; i++) {

  001d2	83 c3 15	 add	 ebx, 21			; 00000015H
  001d5	81 c6 8c 00 00
	00		 add	 esi, 140		; 0000008cH
  001db	47		 inc	 edi
  001dc	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  001e2	0f 8c 68 ff ff
	ff		 jl	 $LL7@shopWindow
  001e8	8b 9d f4 fe ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  001ee	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _selId$1$[ebp]
  001f4	8b bd ec fe ff
	ff		 mov	 edi, DWORD PTR _pushId$1$[ebp]
$LN6@shopWindow:

; 8303 : 					}
; 8304 : 				}
; 8305 : 			}
; 8306 : 		}
; 8307 : 
; 8308 : 		if (joy_con[0] & JOY_A) {

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  001ff	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  00204	74 12		 je	 SHORT $LN26@shopWindow

; 8309 : 			pushId = 0;

  00206	33 ff		 xor	 edi, edi

; 8310 : 			if (joy_auto[0] & JOY_A) {

  00208	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  00212	74 08		 je	 SHORT $LN84@shopWindow

; 8311 : 				id = 0;

  00214	33 db		 xor	 ebx, ebx

; 8312 : 			}
; 8313 : 		}
; 8314 : 		if (pushId == 0) {

  00216	eb 08		 jmp	 SHORT $LN85@shopWindow
$LN26@shopWindow:
  00218	85 ff		 test	 edi, edi
  0021a	75 44		 jne	 SHORT $LN27@shopWindow
$LN84@shopWindow:

; 8315 : 			prevBtn = 1;
; 8316 : 			if (id == 0) {

  0021c	85 db		 test	 ebx, ebx
  0021e	75 31		 jne	 SHORT $LN94@shopWindow
$LN85@shopWindow:

; 8317 : 				if (shopWondow2Page > 0) {

  00220	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00227	66 85 d2	 test	 dx, dx
  0022a	7e 2c		 jle	 SHORT $LN30@shopWindow

; 8318 : 					shopWondow2Page--;
; 8319 : 					play_se(217, 320, 240);	// ?????

  0022c	68 f0 00 00 00	 push	 240			; 000000f0H
  00231	66 4a		 dec	 dx
  00233	68 40 01 00 00	 push	 320			; 00000140H
  00238	68 d9 00 00 00	 push	 217			; 000000d9H
  0023d	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00244	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00249	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  0024e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN94@shopWindow:

; 8320 : 				}
; 8321 : 			}
; 8322 : 		}

  00251	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN30@shopWindow:
  00258	8d 8d e8 fe ff
	ff		 lea	 ecx, DWORD PTR _prevBtnGraNo$[ebp+4]
  0025e	eb 0d		 jmp	 SHORT $LN95@shopWindow
$LN27@shopWindow:

; 8323 : 		else {
; 8324 : 			prevBtn = 0;

  00260	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00267	8d 8d e4 fe ff
	ff		 lea	 ecx, DWORD PTR _prevBtnGraNo$[ebp]
$LN95@shopWindow:

; 8325 : 		}
; 8326 : 		if (joy_con[0] & JOY_B) {

  0026d	89 8d f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], ecx
  00273	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  00278	74 13		 je	 SHORT $LN32@shopWindow

; 8327 : 			pushId = 1;
; 8328 : 			if (joy_auto[0] & JOY_B) {

  0027a	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  00284	74 0c		 je	 SHORT $LN86@shopWindow

; 8329 : 				id = 1;

  00286	bb 01 00 00 00	 mov	 ebx, 1

; 8330 : 			}
; 8331 : 		}
; 8332 : 		if (pushId == 1) {

  0028b	eb 0a		 jmp	 SHORT $LN87@shopWindow
$LN32@shopWindow:
  0028d	83 ff 01	 cmp	 edi, 1
  00290	75 42		 jne	 SHORT $LN33@shopWindow
$LN86@shopWindow:

; 8333 : 			nextBtn = 1;
; 8334 : 			if (id == 1) {

  00292	83 fb 01	 cmp	 ebx, 1
  00295	75 2f		 jne	 SHORT $LN36@shopWindow
$LN87@shopWindow:

; 8335 : 				if (shopWondow2Page + 1 < shopWondow2MaxPage) {

  00297	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  0029e	0f bf ca	 movsx	 ecx, dx
  002a1	41		 inc	 ecx
  002a2	3b c8		 cmp	 ecx, eax
  002a4	7d 20		 jge	 SHORT $LN36@shopWindow

; 8336 : 					shopWondow2Page++;
; 8337 : 					play_se(217, 320, 240);

  002a6	68 f0 00 00 00	 push	 240			; 000000f0H
  002ab	66 42		 inc	 dx
  002ad	68 40 01 00 00	 push	 320			; 00000140H
  002b2	68 d9 00 00 00	 push	 217			; 000000d9H
  002b7	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  002be	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002c3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN36@shopWindow:

; 8338 : 				}
; 8339 : 			}
; 8340 : 		}

  002c6	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR _nextBtnGraNo$[ebp+4]
  002cc	89 bd f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], edi
  002d2	eb 0c		 jmp	 SHORT $LN34@shopWindow
$LN33@shopWindow:

; 8341 : 		else {
; 8342 : 			nextBtn = 0;

  002d4	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
  002da	89 85 f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
$LN34@shopWindow:

; 8343 : 		}
; 8344 : 		if (CheckMenuFlag()
; 8345 : 			|| joy_trg[0] & JOY_ESC
; 8346 : 			|| actBtn == 1
; 8347 : 			|| menuBtn == 1
; 8348 : 			|| disconnectServerFlag == TRUE
; 8349 : 			|| wnCloseFlag == 1) {

  002e0	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002e5	85 c0		 test	 eax, eax
  002e7	0f 85 e3 04 00
	00		 jne	 $LN38@shopWindow
  002ed	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002f7	0f 85 d3 04 00
	00		 jne	 $LN38@shopWindow
  002fd	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00305	0f 84 c5 04 00
	00		 je	 $LN38@shopWindow
  0030b	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00313	0f 84 b7 04 00
	00		 je	 $LN38@shopWindow
  00319	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00320	0f 84 aa 04 00
	00		 je	 $LN38@shopWindow
  00326	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0032e	0f 84 9c 04 00
	00		 je	 $LN38@shopWindow

; 8352 : 		}
; 8353 : 
; 8354 : 		if (id >= 2 || selId >= 0) {

  00334	83 fb 02	 cmp	 ebx, 2
  00337	0f 8d a6 03 00
	00		 jge	 $LN40@shopWindow
  0033d	85 f6		 test	 esi, esi
  0033f	0f 89 d9 03 00
	00		 jns	 $LN43@shopWindow

; 8381 : 		}
; 8382 : 
; 8383 : 		if (ptActMenuWin->hp >= 1) {

  00345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0034a	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0034e	0f 8c 7c 03 00
	00		 jl	 $LN50@shopWindow

; 8384 : 			int xx;
; 8385 : 			xx = (w - strlen(shopWindow1Title) / 2 * 17) / 2;

  00354	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00359	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0035c	0f 1f 40 00	 npad	 4
$LL90@shopWindow:
  00360	8a 01		 mov	 al, BYTE PTR [ecx]
  00362	41		 inc	 ecx
  00363	84 c0		 test	 al, al
  00365	75 f9		 jne	 SHORT $LL90@shopWindow

; 8386 : 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  00367	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0036c	2b ca		 sub	 ecx, edx
  0036e	6a 00		 push	 0
  00370	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00375	d1 e9		 shr	 ecx, 1
  00377	83 c0 12	 add	 eax, 18			; 00000012H
  0037a	6a 00		 push	 0
  0037c	6a 01		 push	 1
  0037e	50		 push	 eax
  0037f	8b c1		 mov	 eax, ecx
  00381	c1 e0 04	 shl	 eax, 4
  00384	03 c1		 add	 eax, ecx
  00386	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??shopWindow2@@YAHXZ@4HA
  0038c	2b c8		 sub	 ecx, eax
  0038e	d1 e9		 shr	 ecx, 1
  00390	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00396	51		 push	 ecx
  00397	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0039c	83 c4 18	 add	 esp, 24			; 00000018H
  0039f	bf 00 00 00 00	 mov	 edi, OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  003a4	33 f6		 xor	 esi, esi
  003a6	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  003a9	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@shopWindow:

; 8387 : 			for (i = 0; i < sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]); i++) {
; 8388 : 				if (shopWindow2Msg[0] != '\0') {
; 8389 : 					StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  003b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  003b5	6a 00		 push	 0
  003b7	57		 push	 edi
  003b8	83 c0 30	 add	 eax, 48			; 00000030H
  003bb	6a 00		 push	 0
  003bd	03 c6		 add	 eax, esi
  003bf	6a 01		 push	 1
  003c1	50		 push	 eax
  003c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  003c7	83 c0 12	 add	 eax, 18			; 00000012H
  003ca	50		 push	 eax
  003cb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003d0	83 c4 18	 add	 esp, 24			; 00000018H
  003d3	83 c7 2d	 add	 edi, 45			; 0000002dH
  003d6	83 c6 12	 add	 esi, 18			; 00000012H
  003d9	83 eb 01	 sub	 ebx, 1
  003dc	75 d2		 jne	 SHORT $LL10@shopWindow

; 8390 : 						shopWindow2Msg[i], 0);
; 8391 : 				}
; 8392 : 			}
; 8393 : #ifdef _NEW_MANOR_LAW
; 8394 : 
; 8395 : 			sprintf(tmsg, "ëªì± %8dï¼¦", pc.fame);

  003de	ff 35 64 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+100
  003e4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003ea	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBBNADAJ@?$LI?m?$LM?$LK?5?$CF8d?$KD?F@
  003ef	50		 push	 eax
  003f0	e8 00 00 00 00	 call	 _sprintf

; 8396 : 			StockFontBuffer(x + 244, y + 64, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  003f5	53		 push	 ebx
  003f6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003fc	50		 push	 eax
  003fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  00402	53		 push	 ebx
  00403	83 c0 40	 add	 eax, 64			; 00000040H
  00406	6a 01		 push	 1
  00408	50		 push	 eax
  00409	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  0040e	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  00413	50		 push	 eax
  00414	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8397 : #endif
; 8398 : 			sprintf(tmsg, "ì¤í¤  %8dï¼³", pc.gold);

  00419	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  0041f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00425	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DBGBFDKA@?$LN?$LK?E?f?5?5?$CF8d?$KD?S@
  0042a	50		 push	 eax
  0042b	e8 00 00 00 00	 call	 _sprintf

; 8399 : 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00430	53		 push	 ebx
  00431	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00437	50		 push	 eax
  00438	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0043d	53		 push	 ebx
  0043e	83 c0 54	 add	 eax, 84			; 00000054H
  00441	6a 01		 push	 1
  00443	50		 push	 eax
  00444	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00449	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  0044e	50		 push	 eax
  0044f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8400 : 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  00454	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  0045a	83 c4 48	 add	 esp, 72			; 00000048H
  0045d	6a 02		 push	 2
  0045f	ff 30		 push	 DWORD PTR [eax]
  00461	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  00466	83 c0 64	 add	 eax, 100		; 00000064H
  00469	6a 69		 push	 105			; 00000069H
  0046b	50		 push	 eax
  0046c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00471	83 c0 20	 add	 eax, 32			; 00000020H
  00474	50		 push	 eax
  00475	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0047a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA, eax

; 8401 : 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  0047f	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  00485	6a 02		 push	 2
  00487	ff 30		 push	 DWORD PTR [eax]
  00489	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0048e	83 c0 64	 add	 eax, 100		; 00000064H
  00491	6a 69		 push	 105			; 00000069H
  00493	50		 push	 eax
  00494	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00499	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0049e	50		 push	 eax
  0049f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004a4	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA+4, eax

; 8402 : 			sprintf(tmsg, "%2d/%2d íì´ì§", shopWondow2Page + 1, shopWondow2MaxPage);

  004a9	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  004b0	50		 push	 eax
  004b1	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  004b8	40		 inc	 eax
  004b9	50		 push	 eax
  004ba	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004c0	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DLBADLDH@?$CF2d?1?$CF2d?5?F?d?$MA?L?A?v@
  004c5	50		 push	 eax
  004c6	e8 00 00 00 00	 call	 _sprintf

; 8403 : 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  004cb	53		 push	 ebx
  004cc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004d2	50		 push	 eax
  004d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  004d8	53		 push	 ebx
  004d9	83 c0 5c	 add	 eax, 92			; 0000005cH
  004dc	6a 01		 push	 1
  004de	50		 push	 eax
  004df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  004e4	83 c0 42	 add	 eax, 66			; 00000042H
  004e7	50		 push	 eax
  004e8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004ed	83 c4 50	 add	 esp, 80			; 00000050H

; 8404 : 			j = shopWondow2Page * MAX_SHOP_ITEM;

  004f0	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  004f7	69 f8 60 04 00
	00		 imul	 edi, eax, 1120
  004fd	81 c7 10 00 00
	00		 add	 edi, OFFSET ?sealItem@@3PAUITEM_SHOP@@A+16
$LL13@shopWindow:

; 8406 : 				if (strlen(sealItem[j + i].name) == 0)	continue;

  00503	8b c7		 mov	 eax, edi
  00505	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL91@shopWindow:
  00508	8a 08		 mov	 cl, BYTE PTR [eax]
  0050a	40		 inc	 eax
  0050b	84 c9		 test	 cl, cl
  0050d	75 f9		 jne	 SHORT $LL91@shopWindow
  0050f	2b c2		 sub	 eax, edx
  00511	0f 84 d9 00 00
	00		 je	 $LN11@shopWindow

; 8407 : 				color = itemColor[0];
; 8408 : 				if (sealItem[j + i].level > pc.level)

  00517	8b 47 f0	 mov	 eax, DWORD PTR [edi-16]
  0051a	33 f6		 xor	 esi, esi
  0051c	3b 05 38 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+56

; 8409 : 					color = itemColor[2];
; 8410 : 				if (sealItem[j + i].sealFlag)

  00522	b9 07 00 00 00	 mov	 ecx, 7
  00527	b8 06 00 00 00	 mov	 eax, 6
  0052c	0f 4f f0	 cmovg	 esi, eax
  0052f	66 83 7f fc 00	 cmp	 WORD PTR [edi-4], 0

; 8411 : 					color = itemColor[1];
; 8412 : 				if (sealItem[j + i].price > pc.gold) {

  00534	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  00537	0f 45 f1	 cmovne	 esi, ecx
  0053a	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96

; 8413 : 					color = itemColor[1];
; 8414 : 				}
; 8415 : #ifdef _NEW_MANOR_LAW
; 8416 : 				if (sealItem[j + i].costfame > pc.fame) {

  00540	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00543	0f 4f f1	 cmovg	 esi, ecx
  00546	3b 05 64 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+100

; 8417 : 					color = itemColor[1];
; 8418 : 				}
; 8419 : #endif
; 8420 : 				StockFontBuffer(x + 34, y + 118 + i * 21, FONT_PRIO_FRONT, color, sealItem[j + i].name, 0);

  0054c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  00551	6a 00		 push	 0
  00553	0f 4f f1	 cmovg	 esi, ecx
  00556	83 c0 76	 add	 eax, 118		; 00000076H
  00559	57		 push	 edi
  0055a	56		 push	 esi
  0055b	03 c3		 add	 eax, ebx
  0055d	6a 01		 push	 1
  0055f	50		 push	 eax
  00560	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  00565	83 c0 22	 add	 eax, 34			; 00000022H
  00568	50		 push	 eax
  00569	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8421 : #ifdef _NEW_MANOR_LAW
; 8422 : 				if (sealItem[j + i].costfame > -1) {

  0056e	8b 47 f4	 mov	 eax, DWORD PTR [edi-12]
  00571	83 c4 18	 add	 esp, 24			; 00000018H
  00574	8b 4f 78	 mov	 ecx, DWORD PTR [edi+120]
  00577	50		 push	 eax
  00578	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0057e	83 f9 ff	 cmp	 ecx, -1
  00581	7e 38		 jle	 SHORT $LN57@shopWindow

; 8423 : 					sprintf(tmsg, "%8dï¼¦%8dï¼³", sealItem[j + i].costfame, sealItem[j + i].price);

  00583	51		 push	 ecx
  00584	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JBEIEHEP@?$CF8d?$KD?F?$CF8d?$KD?S@
  00589	50		 push	 eax
  0058a	e8 00 00 00 00	 call	 _sprintf

; 8424 : 					StockFontBuffer(x + 242, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  0058f	6a 00		 push	 0
  00591	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00597	50		 push	 eax
  00598	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0059d	83 c0 76	 add	 eax, 118		; 00000076H
  005a0	56		 push	 esi
  005a1	03 c3		 add	 eax, ebx
  005a3	6a 01		 push	 1
  005a5	50		 push	 eax
  005a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  005ab	05 f2 00 00 00	 add	 eax, 242		; 000000f2H
  005b0	50		 push	 eax
  005b1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005b6	83 c4 28	 add	 esp, 40			; 00000028H

; 8425 : 				}

  005b9	eb 35		 jmp	 SHORT $LN11@shopWindow
$LN57@shopWindow:

; 8426 : 				else
; 8427 : #endif
; 8428 : 				{
; 8429 : 					sprintf(tmsg, "%8dï¼³", sealItem[j + i].price);

  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
  005c0	50		 push	 eax
  005c1	e8 00 00 00 00	 call	 _sprintf

; 8430 : 					StockFontBuffer(x + 312, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  005c6	6a 00		 push	 0
  005c8	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  005ce	50		 push	 eax
  005cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  005d4	83 c0 76	 add	 eax, 118		; 00000076H
  005d7	56		 push	 esi
  005d8	03 c3		 add	 eax, ebx
  005da	6a 01		 push	 1
  005dc	50		 push	 eax
  005dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  005e2	05 38 01 00 00	 add	 eax, 312		; 00000138H
  005e7	50		 push	 eax
  005e8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005ed	83 c4 24	 add	 esp, 36			; 00000024H
$LN11@shopWindow:

; 8405 : 			for (i = 0; i < MAX_SHOP_ITEM; i++) {

  005f0	83 c3 15	 add	 ebx, 21			; 00000015H
  005f3	81 c7 8c 00 00
	00		 add	 edi, 140		; 0000008cH
  005f9	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  005ff	0f 8c fe fe ff
	ff		 jl	 $LL13@shopWindow

; 8431 : 				}
; 8432 : 			}
; 8433 : 			if (focusId >= 0) {

  00605	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  0060b	85 c0		 test	 eax, eax
  0060d	78 64		 js	 SHORT $LN15@shopWindow

; 8434 : 				StockDispBuffer(x + 64, y + 350, DISP_PRIO_IME3, sealItem[focusId].graNo, 0);

  0060f	69 f0 8c 00 00
	00		 imul	 esi, eax, 140
  00615	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  0061a	6a 00		 push	 0
  0061c	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  00621	ff b6 08 00 00
	00		 push	 DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[esi+8]
  00627	6a 69		 push	 105			; 00000069H
  00629	50		 push	 eax
  0062a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  0062f	83 c0 40	 add	 eax, 64			; 00000040H
  00632	50		 push	 eax
  00633	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00638	83 c4 14	 add	 esp, 20			; 00000014H
  0063b	8d b6 2d 00 00
	00		 lea	 esi, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[esi+45]
  00641	33 ff		 xor	 edi, edi
$LL16@shopWindow:

; 8435 : 				for (i = 0; i < sizeof(sealItem[0].info) / sizeof(sealItem[0].info[0]); i++) {
; 8436 : 					StockFontBuffer(x + 120, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00643	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  00648	6a 00		 push	 0
  0064a	56		 push	 esi
  0064b	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00650	6a 00		 push	 0
  00652	03 c7		 add	 eax, edi
  00654	6a 01		 push	 1
  00656	50		 push	 eax
  00657	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  0065c	83 c0 78	 add	 eax, 120		; 00000078H
  0065f	50		 push	 eax
  00660	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00665	83 c7 14	 add	 edi, 20			; 00000014H
  00668	83 c4 18	 add	 esp, 24			; 00000018H
  0066b	83 c6 1d	 add	 esi, 29			; 0000001dH
  0066e	83 ff 3c	 cmp	 edi, 60			; 0000003cH
  00671	72 d0		 jb	 SHORT $LL16@shopWindow
$LN15@shopWindow:

; 8437 : 						sealItem[focusId].info[i], 0);
; 8438 : 				}
; 8439 : 			}
; 8440 : 			btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_RETURN_BTN, 2);

  00673	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  00678	6a 02		 push	 2
  0067a	68 bb 65 00 00	 push	 26043			; 000065bbH
  0067f	05 92 01 00 00	 add	 eax, 402		; 00000192H
  00684	6a 69		 push	 105			; 00000069H
  00686	50		 push	 eax
  00687	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  0068c	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  00691	50		 push	 eax
  00692	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00697	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow2@@YAHXZ@4PAHA+8, eax

; 8441 : 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_ITEMSHOP_WIN, 1);

  0069c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??shopWindow2@@YAHXZ@4HA
  006a1	99		 cdq
  006a2	2b c2		 sub	 eax, edx
  006a4	6a 01		 push	 1
  006a6	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEMSHOP_WIN@@3HA ; CG_ITEMSHOP_WIN
  006ac	d1 f8		 sar	 eax, 1
  006ae	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??shopWindow2@@YAHXZ@4HA
  006b4	6a 68		 push	 104			; 00000068H
  006b6	50		 push	 eax
  006b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow2@@YAHXZ@4HA
  006bc	99		 cdq
  006bd	2b c2		 sub	 eax, edx
  006bf	d1 f8		 sar	 eax, 1
  006c1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow2@@YAHXZ@4HA
  006c7	50		 push	 eax
  006c8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006cd	83 c4 28	 add	 esp, 40			; 00000028H
$LN50@shopWindow:

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  006d0	5f		 pop	 edi
  006d1	5e		 pop	 esi
  006d2	33 c0		 xor	 eax, eax
  006d4	5b		 pop	 ebx
  006d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006d8	33 cd		 xor	 ecx, ebp
  006da	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006df	8b e5		 mov	 esp, ebp
  006e1	5d		 pop	 ebp
  006e2	c3		 ret	 0
$LN40@shopWindow:

; 8355 : 			if (id == 2) {

  006e3	75 30		 jne	 SHORT $LN41@shopWindow

; 8356 : 				ret = 1;

  006e5	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006eb	be 01 00 00 00	 mov	 esi, 1
  006f0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8372 : 				}
; 8373 : 			}
; 8374 : 
; 8375 : 			DeathAction(ptActMenuWin);
; 8376 : 			ptActMenuWin = NULL;
; 8377 : 			if (ret == 100) {
; 8378 : 				windowTypeWN = -1;
; 8379 : 			}
; 8380 : 			return ret;

  006f5	83 c4 04	 add	 esp, 4
  006f8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00702	8b c6		 mov	 eax, esi
  00704	5f		 pop	 edi

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  00705	5e		 pop	 esi
  00706	5b		 pop	 ebx
  00707	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0070a	33 cd		 xor	 ecx, ebp
  0070c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00711	8b e5		 mov	 esp, ebp
  00713	5d		 pop	 ebp
  00714	c3		 ret	 0
$LN41@shopWindow:

; 8357 : 			}
; 8358 : 			else if (id == 100) {

  00715	83 fb 64	 cmp	 ebx, 100		; 00000064H
  00718	0f 84 ba 00 00
	00		 je	 $LN88@shopWindow
$LN43@shopWindow:

; 8360 : 			}
; 8361 : 			else {
; 8362 : 				selShopItemNo = selId;
; 8363 : 				sealItemCnt = 1;
; 8364 : 				if (nowUserItemCnt <= 0) {

  0071e	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?nowUserItemCnt@@3FA, 0 ; nowUserItemCnt
  00726	b8 01 00 00 00	 mov	 eax, 1
  0072b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00731	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopItemNo@@3FA, si ; selShopItemNo
  00738	66 a3 00 00 00
	00		 mov	 WORD PTR ?sealItemCnt@@3FA, ax ; sealItemCnt
  0073e	7f 28		 jg	 SHORT $LN45@shopWindow

; 8365 : 					ret = 4;

  00740	8d 70 03	 lea	 esi, DWORD PTR [eax+3]
  00743	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8372 : 				}
; 8373 : 			}
; 8374 : 
; 8375 : 			DeathAction(ptActMenuWin);
; 8376 : 			ptActMenuWin = NULL;
; 8377 : 			if (ret == 100) {
; 8378 : 				windowTypeWN = -1;
; 8379 : 			}
; 8380 : 			return ret;

  00748	83 c4 04	 add	 esp, 4
  0074b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00755	8b c6		 mov	 eax, esi
  00757	5f		 pop	 edi

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  00758	5e		 pop	 esi
  00759	5b		 pop	 ebx
  0075a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0075d	33 cd		 xor	 ecx, ebp
  0075f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00764	8b e5		 mov	 esp, ebp
  00766	5d		 pop	 ebp
  00767	c3		 ret	 0
$LN45@shopWindow:

; 8366 : 				}
; 8367 : 				else if (sealItem[selId].level > pc.level) {

  00768	69 c6 8c 00 00
	00		 imul	 eax, esi, 140
  0076e	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[eax]
  00774	3b 05 38 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+56
  0077a	7e 2a		 jle	 SHORT $LN47@shopWindow

; 8368 : 					ret = 3;

  0077c	be 03 00 00 00	 mov	 esi, 3
  00781	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8372 : 				}
; 8373 : 			}
; 8374 : 
; 8375 : 			DeathAction(ptActMenuWin);
; 8376 : 			ptActMenuWin = NULL;
; 8377 : 			if (ret == 100) {
; 8378 : 				windowTypeWN = -1;
; 8379 : 			}
; 8380 : 			return ret;

  00786	83 c4 04	 add	 esp, 4
  00789	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00793	8b c6		 mov	 eax, esi
  00795	5f		 pop	 edi

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  00796	5e		 pop	 esi
  00797	5b		 pop	 ebx
  00798	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0079b	33 cd		 xor	 ecx, ebp
  0079d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007a2	8b e5		 mov	 esp, ebp
  007a4	5d		 pop	 ebp
  007a5	c3		 ret	 0
$LN47@shopWindow:

; 8369 : 				}
; 8370 : 				else {
; 8371 : 					ret = 2;

  007a6	be 02 00 00 00	 mov	 esi, 2
  007ab	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8372 : 				}
; 8373 : 			}
; 8374 : 
; 8375 : 			DeathAction(ptActMenuWin);
; 8376 : 			ptActMenuWin = NULL;
; 8377 : 			if (ret == 100) {
; 8378 : 				windowTypeWN = -1;
; 8379 : 			}
; 8380 : 			return ret;

  007b0	83 c4 04	 add	 esp, 4
  007b3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  007bd	8b c6		 mov	 eax, esi
  007bf	5f		 pop	 edi

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  007c0	5e		 pop	 esi
  007c1	5b		 pop	 ebx
  007c2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007c5	33 cd		 xor	 ecx, ebp
  007c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007cc	8b e5		 mov	 esp, ebp
  007ce	5d		 pop	 ebp
  007cf	c3		 ret	 0
$LN38@shopWindow:

; 8350 : 			id = 100;
; 8351 : 			wnCloseFlag = 0;

  007d0	33 c0		 xor	 eax, eax
  007d2	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN88@shopWindow:

; 8359 : 				ret = 100;

  007d8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  007de	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 8442 : 		}
; 8443 : 	}
; 8444 : 	return ret;
; 8445 : }

  007e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007e6	83 c4 04	 add	 esp, 4
  007e9	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  007ee	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  007f8	8b c6		 mov	 eax, esi
  007fa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00804	33 cd		 xor	 ecx, ebp
  00806	5f		 pop	 edi
  00807	5e		 pop	 esi
  00808	5b		 pop	 ebx
  00809	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0080e	8b e5		 mov	 esp, ebp
  00810	5d		 pop	 ebp
  00811	c3		 ret	 0
?shopWindow2@@YAHXZ ENDP				; shopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow2@@YAXXZ
_TEXT	SEGMENT
?initShopWindow2@@YAXXZ PROC				; initShopWindow2, COMDAT

; 8232 : 	shopWindow2ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow2ProcNo@@3FA, ax ; shopWindow2ProcNo

; 8233 : }

  00008	c3		 ret	 0
?initShopWindow2@@YAXXZ ENDP				; initShopWindow2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?shopWindow1@@YAHXZ
_TEXT	SEGMENT
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?shopWindow1@@YAHXZ PROC				; shopWindow1, COMDAT

; 8123 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 8124 : 	static int x, y, w, h;
; 8125 : 	static int btnId[3];
; 8126 : 	int id = 0;
; 8127 : 	int i;
; 8128 : 	int ret = 0;

  00014	33 f6		 xor	 esi, esi
  00016	57		 push	 edi

; 8129 : 
; 8130 : 	if (shopWindow1ProcNo == 0)

  00017	66 39 35 00 00
	00 00		 cmp	 WORD PTR ?shopWindow1ProcNo@@3FA, si ; shopWindow1ProcNo
  0001e	0f 85 80 00 00
	00		 jne	 $LN30@shopWindow

; 8131 : 	{
; 8132 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 8133 : 		{
; 8134 : 			btnId[i] = -2;
; 8135 : 		}
; 8136 : 
; 8137 : 		// ??????î
; 8138 : 		w = 4;
; 8139 : 		h = 3;
; 8140 : 		x = (640 - w * 64) / 2;
; 8141 : 		y = (456 - h * 48) / 2;
; 8142 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00024	6a 01		 push	 1
  00026	56		 push	 esi
  00027	6a 03		 push	 3
  00029	6a 04		 push	 4
  0002b	68 9c 00 00 00	 push	 156			; 0000009cH
  00030	68 c0 00 00 00	 push	 192			; 000000c0H
  00035	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA, -2 ; fffffffeH
  0003f	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00049	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00053	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA, 4
  0005d	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?h@?1??shopWindow1@@YAHXZ@4HA, 3
  00067	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA, 192 ; 000000c0H
  00071	c7 05 00 00 00
	00 9c 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA, 156 ; 0000009cH
  0007b	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00080	8b c8		 mov	 ecx, eax
  00082	83 c4 18	 add	 esp, 24			; 00000018H
  00085	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin

; 8143 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 8144 : 		x = ptActMenuWin->x;

  0008b	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0008e	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA, eax

; 8145 : 		y = ptActMenuWin->y;

  00093	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 8146 : #endif
; 8147 : 		shopWindow1ProcNo++;

  00096	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?shopWindow1ProcNo@@3FA ; shopWindow1ProcNo
  0009d	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA, eax
  000a2	eb 06		 jmp	 SHORT $LN5@shopWindow
$LN30@shopWindow:

; 8129 : 
; 8130 : 	if (shopWindow1ProcNo == 0)

  000a4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN5@shopWindow:

; 8148 : 	}
; 8149 : 
; 8150 : 
; 8151 : 	if (ptActMenuWin != NULL)

  000aa	85 c9		 test	 ecx, ecx
  000ac	0f 84 8b 02 00
	00		 je	 $LN15@shopWindow

; 8152 : 	{
; 8153 : 		id = -1;

  000b2	83 cf ff	 or	 edi, -1

; 8154 : 		if (ptActMenuWin->hp >= 1)

  000b5	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000b9	7c 14		 jl	 SHORT $LN7@shopWindow

; 8155 : 		{
; 8156 : 			// ????î±î¶îî
; 8157 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  000bb	6a 03		 push	 3
  000bd	68 00 00 00 00	 push	 OFFSET ?btnId@?1??shopWindow1@@YAHXZ@4PAHA
  000c2	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000c7	8b f8		 mov	 edi, eax
  000c9	83 c4 08	 add	 esp, 8

; 8158 : 			ret = id + 1;

  000cc	8d 77 01	 lea	 esi, DWORD PTR [edi+1]
$LN7@shopWindow:

; 8159 : 		}
; 8160 : 
; 8161 : 		// î??????î?????????????î¼??
; 8162 : 		if (CheckMenuFlag()
; 8163 : 			|| joy_trg[0] & JOY_ESC
; 8164 : 			|| actBtn == 1
; 8165 : 			|| menuBtn == 1
; 8166 : 			|| disconnectServerFlag == TRUE
; 8167 : 			|| wnCloseFlag == 1)

  000cf	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000d4	85 c0		 test	 eax, eax
  000d6	0f 85 1b 02 00
	00		 jne	 $LN9@shopWindow
  000dc	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000e6	0f 85 0b 02 00
	00		 jne	 $LN9@shopWindow
  000ec	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000f4	0f 84 fd 01 00
	00		 je	 $LN9@shopWindow
  000fa	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00102	0f 84 ef 01 00
	00		 je	 $LN9@shopWindow
  00108	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0010f	0f 84 e2 01 00
	00		 je	 $LN9@shopWindow
  00115	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0011d	0f 84 d4 01 00
	00		 je	 $LN9@shopWindow

; 8172 : 		}
; 8173 : 
; 8174 : 		if (0 <= id && id <= 2)

  00123	85 ff		 test	 edi, edi
  00125	78 7f		 js	 SHORT $LN13@shopWindow
  00127	83 ff 02	 cmp	 edi, 2
  0012a	7f 6c		 jg	 SHORT $LN27@shopWindow

; 8175 : 		{
; 8176 : #if 1
; 8177 : 			char data[256];
; 8178 : 			char msg[256];
; 8179 : 			sprintf(data, "%d", ret);

  0012c	56		 push	 esi
  0012d	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00133	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 _sprintf

; 8180 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0013e	68 ff 00 00 00	 push	 255			; 000000ffH
  00143	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00149	50		 push	 eax
  0014a	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00156	83 c4 18	 add	 esp, 24			; 00000018H

; 8181 : #if 0
; 8182 : 			if (bNewServer)
; 8183 : 				lssproto_WN_send(sockfd, nowGx, nowGy, menuIndexWN, idWN, 0, msg);
; 8184 : 			else
; 8185 : 				oldlssproto_WN_send(sockfd, nowGx, nowGy, menuIndexWN, idWN, 0, msg);
; 8186 : #else
; 8187 : 			if (bNewServer)

  00159	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0015f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00166	50		 push	 eax
  00167	6a 00		 push	 0
  00169	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0016f	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00175	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0017b	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00181	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00187	74 07		 je	 SHORT $LN11@shopWindow

; 8188 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00189	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0018e	eb 05		 jmp	 SHORT $LN31@shopWindow
$LN11@shopWindow:

; 8189 : 			else
; 8190 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00190	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN31@shopWindow:

; 8191 : #endif
; 8192 : #endif
; 8193 : 		}
; 8194 : 
; 8195 : 		if (id >= 0)
; 8196 : 		{
; 8197 : 			if (ret == 3)

  00195	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN27@shopWindow:
  00198	83 fe 03	 cmp	 esi, 3
  0019b	0f 85 7a 01 00
	00		 jne	 $LN14@shopWindow
  001a1	e9 5e 01 00 00	 jmp	 $LN26@shopWindow
$LN13@shopWindow:

; 8204 : 			return ret;
; 8205 : 		}
; 8206 : 
; 8207 : 		if (ptActMenuWin->hp >= 1)

  001a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001ab	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001af	0f 8c 88 01 00
	00		 jl	 $LN15@shopWindow

; 8208 : 		{
; 8209 : 			int xx;
; 8210 : 
; 8211 : 			xx = (w * 64 - strlen(shopWindow1Title) / 2 * 17) / 2;

  001b5	b8 00 00 00 00	 mov	 eax, OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  001ba	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  001bd	0f 1f 00	 npad	 3
$LL28@shopWindow:
  001c0	8a 08		 mov	 cl, BYTE PTR [eax]
  001c2	40		 inc	 eax
  001c3	84 c9		 test	 cl, cl
  001c5	75 f9		 jne	 SHORT $LL28@shopWindow

; 8212 : 			StockFontBuffer(x + xx, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Title, 0);

  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA
  001cd	2b c2		 sub	 eax, edx
  001cf	6a 00		 push	 0
  001d1	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  001d6	d1 e8		 shr	 eax, 1
  001d8	83 c1 14	 add	 ecx, 20			; 00000014H
  001db	6a 00		 push	 0
  001dd	6a 01		 push	 1
  001df	51		 push	 ecx
  001e0	8b c8		 mov	 ecx, eax
  001e2	c1 e1 04	 shl	 ecx, 4
  001e5	03 c8		 add	 ecx, eax
  001e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA
  001ec	c1 e0 06	 shl	 eax, 6
  001ef	2b c1		 sub	 eax, ecx
  001f1	d1 e8		 shr	 eax, 1
  001f3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA
  001f9	50		 push	 eax
  001fa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8213 : 
; 8214 : 			xx = (w * 64 - strlen(shopWindow1Msg) / 2 * 17) / 2;

  001ff	b9 00 00 00 00	 mov	 ecx, OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  00204	83 c4 18	 add	 esp, 24			; 00000018H
  00207	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0020a	66 0f 1f 44 00
	00		 npad	 6
$LL29@shopWindow:
  00210	8a 01		 mov	 al, BYTE PTR [ecx]
  00212	41		 inc	 ecx
  00213	84 c0		 test	 al, al
  00215	75 f9		 jne	 SHORT $LL29@shopWindow

; 8215 : 			StockFontBuffer(x + xx, y + 40, FONT_PRIO_FRONT, FONT_PAL_WHITE, shopWindow1Msg, 0);

  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA
  0021c	2b ca		 sub	 ecx, edx
  0021e	6a 00		 push	 0
  00220	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  00225	d1 e9		 shr	 ecx, 1
  00227	83 c0 28	 add	 eax, 40			; 00000028H
  0022a	6a 00		 push	 0
  0022c	6a 01		 push	 1
  0022e	50		 push	 eax
  0022f	8b c1		 mov	 eax, ecx
  00231	c1 e0 04	 shl	 eax, 4
  00234	03 c1		 add	 eax, ecx
  00236	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA
  0023c	c1 e1 06	 shl	 ecx, 6
  0023f	2b c8		 sub	 ecx, eax
  00241	d1 e9		 shr	 ecx, 1
  00243	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA
  00249	51		 push	 ecx
  0024a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 8216 : 
; 8217 : 			btnId[0] =

  0024f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA
  00254	6a 02		 push	 2
  00256	83 c0 48	 add	 eax, 72			; 00000048H
  00259	68 f2 65 00 00	 push	 26098			; 000065f2H
  0025e	6a 69		 push	 105			; 00000069H
  00260	50		 push	 eax
  00261	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA
  00266	c1 e0 06	 shl	 eax, 6
  00269	99		 cdq
  0026a	2b c2		 sub	 eax, edx
  0026c	d1 f8		 sar	 eax, 1
  0026e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA
  00274	50		 push	 eax
  00275	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0027a	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA, eax

; 8218 : 				StockDispBuffer(x + w * 64 / 2, y + 12 / 2 + 66, DISP_PRIO_IME3, CG_BUY_BTN, 2);
; 8219 : 			btnId[1] =

  0027f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA
  00284	6a 02		 push	 2
  00286	83 c0 60	 add	 eax, 96			; 00000060H
  00289	68 f1 65 00 00	 push	 26097			; 000065f1H
  0028e	6a 69		 push	 105			; 00000069H
  00290	50		 push	 eax
  00291	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA
  00296	c1 e0 06	 shl	 eax, 6
  00299	99		 cdq
  0029a	2b c2		 sub	 eax, edx
  0029c	d1 f8		 sar	 eax, 1
  0029e	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA
  002a4	50		 push	 eax
  002a5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002aa	83 c4 40	 add	 esp, 64			; 00000040H
  002ad	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA+4, eax

; 8220 : 				StockDispBuffer(x + w * 64 / 2, y + 12 / 2 + 90, DISP_PRIO_IME3, CG_SEAL_BTN, 2);
; 8221 : 			btnId[2] =

  002b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??shopWindow1@@YAHXZ@4HA
  002b7	83 c0 78	 add	 eax, 120		; 00000078H
  002ba	6a 02		 push	 2
  002bc	68 f0 65 00 00	 push	 26096			; 000065f0H
  002c1	6a 69		 push	 105			; 00000069H
  002c3	50		 push	 eax
  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??shopWindow1@@YAHXZ@4HA
  002c9	c1 e0 06	 shl	 eax, 6
  002cc	99		 cdq
  002cd	2b c2		 sub	 eax, edx
  002cf	d1 f8		 sar	 eax, 1
  002d1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??shopWindow1@@YAHXZ@4HA
  002d7	50		 push	 eax
  002d8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002dd	83 c4 14	 add	 esp, 20			; 00000014H
  002e0	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??shopWindow1@@YAHXZ@4PAHA+8, eax

; 8222 : 				StockDispBuffer(x + w * 64 / 2, y + 12 / 2 + 114, DISP_PRIO_IME3, CG_EXIT_BTN, 2);
; 8223 : 		}
; 8224 : 	}
; 8225 : 
; 8226 : 	return ret;
; 8227 : }

  002e5	8b c6		 mov	 eax, esi
  002e7	5f		 pop	 edi
  002e8	5e		 pop	 esi
  002e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ec	33 cd		 xor	 ecx, ebp
  002ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002f3	8b e5		 mov	 esp, ebp
  002f5	5d		 pop	 ebp
  002f6	c3		 ret	 0
$LN9@shopWindow:

; 8168 : 		{
; 8169 : 			id = 100;
; 8170 : 			ret = 3;	// î·??
; 8171 : 			wnCloseFlag = 0;

  002f7	33 c0		 xor	 eax, eax
  002f9	be 03 00 00 00	 mov	 esi, 3
  002fe	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN26@shopWindow:

; 8198 : 			{
; 8199 : 				play_se(203, 320, 240);	// ?????î¼???

  00304	68 f0 00 00 00	 push	 240			; 000000f0H
  00309	68 40 01 00 00	 push	 320			; 00000140H
  0030e	68 cb 00 00 00	 push	 203			; 000000cbH
  00313	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00318	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@shopWindow:

; 8200 : 			}
; 8201 : 			DeathAction(ptActMenuWin);

  0031b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00321	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00326	83 c4 04	 add	 esp, 4

; 8202 : 			ptActMenuWin = NULL;

  00329	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 8203 : 			windowTypeWN = -1;

  00333	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN15@shopWindow:

; 8222 : 				StockDispBuffer(x + w * 64 / 2, y + 12 / 2 + 114, DISP_PRIO_IME3, CG_EXIT_BTN, 2);
; 8223 : 		}
; 8224 : 	}
; 8225 : 
; 8226 : 	return ret;
; 8227 : }

  0033d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00340	8b c6		 mov	 eax, esi
  00342	5f		 pop	 edi
  00343	33 cd		 xor	 ecx, ebp
  00345	5e		 pop	 esi
  00346	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034b	8b e5		 mov	 esp, ebp
  0034d	5d		 pop	 ebp
  0034e	c3		 ret	 0
?shopWindow1@@YAHXZ ENDP				; shopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShopWindow1@@YAXXZ
_TEXT	SEGMENT
?initShopWindow1@@YAXXZ PROC				; initShopWindow1, COMDAT

; 8119 : 	shopWindow1ProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindow1ProcNo@@3FA, ax ; shopWindow1ProcNo

; 8120 : }

  00008	c3		 ret	 0
?initShopWindow1@@YAXXZ ENDP				; initShopWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 1840 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	68 00 01 00 00	 push	 256			; 00000100H
  00011	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	ff 30		 push	 DWORD PTR [eax]
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1496 :     }
; 1497 :     #endif
; 1498 : 
; 1499 :     #if __STDC_WANT_SECURE_LIB__
; 1500 : 
; 1501 :         _Success_(return >= 0)
; 1502 :         _Check_return_opt_
; 1503 :         _CRT_STDIO_INLINE int __CRTDECL vsprintf_s(
; 1504 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1505 :             _In_                                          size_t      const _BufferCount,
; 1506 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1507 :                                                           va_list           _ArgList
; 1508 :             )
; 1509 :     #if defined _NO_CRT_STDIO_INLINE
; 1510 :     ;
; 1511 :     #else
; 1512 :         {
; 1513 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1514 :         }
; 1515 :     #endif
; 1516 : 
; 1517 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
; 1518 :             _Success_(return >= 0)
; 1519 :             int, vsprintf_s,
; 1520 :             _Always_(_Post_z_)            char,        _Buffer,
; 1521 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1522 :                                           va_list,     _ArgList
; 1523 :             )
; 1524 : 
; 1525 :     #endif
; 1526 : 
; 1527 :     _Success_(return >= 0)
; 1528 :     _Check_return_opt_
; 1529 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p_l(
; 1530 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1531 :         _In_                                          size_t      const _BufferCount,
; 1532 :         _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
; 1533 :         _In_opt_                                      _locale_t   const _Locale,
; 1534 :                                                       va_list           _ArgList
; 1535 :         )
; 1536 :     #if defined _NO_CRT_STDIO_INLINE
; 1537 :     ;
; 1538 :     #else
; 1539 :     {
; 1540 :         int const _Result = __stdio_common_vsprintf_p(
; 1541 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1542 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1543 : 
; 1544 :         return _Result < 0 ? -1 : _Result;
; 1545 :     }
; 1546 :     #endif
; 1547 : 
; 1548 :     _Success_(return >= 0)
; 1549 :     _Check_return_opt_
; 1550 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p(
; 1551 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1552 :         _In_                                          size_t      const _BufferCount,
; 1553 :         _In_z_ _Printf_format_string_                 char const* const _Format,
; 1554 :                                                       va_list           _ArgList
; 1555 :         )
; 1556 :     #if defined _NO_CRT_STDIO_INLINE
; 1557 :     ;
; 1558 :     #else
; 1559 :     {
; 1560 :         return _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1561 :     }
; 1562 :     #endif
; 1563 : 
; 1564 :     _Success_(return >= 0)
; 1565 :     _Check_return_opt_
; 1566 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s_l(
; 1567 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1568 :         _In_                                              size_t      const _BufferCount,
; 1569 :         _In_                                              size_t      const _MaxCount,
; 1570 :         _In_z_ _Printf_format_string_params_(2)           char const* const _Format,
; 1571 :         _In_opt_                                          _locale_t   const _Locale,
; 1572 :                                                           va_list          _ArgList
; 1573 :         )
; 1574 :     #if defined _NO_CRT_STDIO_INLINE
; 1575 :     ;
; 1576 :     #else
; 1577 :     {
; 1578 :         int const _Result = __stdio_common_vsnprintf_s(
; 1579 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1580 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1581 : 
; 1582 :         return _Result < 0 ? -1 : _Result;
; 1583 :     }
; 1584 :     #endif
; 1585 : 
; 1586 :     _Success_(return >= 0)
; 1587 :     _Check_return_opt_
; 1588 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s(
; 1589 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1590 :         _In_                                              size_t      const _BufferCount,
; 1591 :         _In_                                              size_t      const _MaxCount,
; 1592 :         _In_z_ _Printf_format_string_                     char const* const _Format,
; 1593 :                                                           va_list           _ArgList
; 1594 :         )
; 1595 :     #if defined _NO_CRT_STDIO_INLINE
; 1596 :     ;
; 1597 :     #else
; 1598 :     {
; 1599 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1600 :     }
; 1601 :     #endif
; 1602 : 
; 1603 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1604 :         _Success_(return >= 0)
; 1605 :         int, _vsnprintf_s,
; 1606 :         _Always_(_Post_z_)            char,        _Buffer,
; 1607 :         _In_                          size_t,      _BufferCount,
; 1608 :         _In_z_ _Printf_format_string_ char const*, _Format,
; 1609 :                                       va_list,     _ArgList
; 1610 :         )
; 1611 : 
; 1612 :     #if __STDC_WANT_SECURE_LIB__
; 1613 : 
; 1614 :         _Success_(return >= 0)
; 1615 :         _Check_return_opt_
; 1616 :         _CRT_STDIO_INLINE int __CRTDECL vsnprintf_s(
; 1617 :             _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1618 :             _In_                                              size_t      const _BufferCount,
; 1619 :             _In_                                              size_t      const _MaxCount,
; 1620 :             _In_z_ _Printf_format_string_                     char const* const _Format,
; 1621 :                                                               va_list           _ArgList
; 1622 :             )
; 1623 :     #if defined _NO_CRT_STDIO_INLINE
; 1624 :     ;
; 1625 :     #else
; 1626 :         {
; 1627 :             return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1628 :         }
; 1629 :     #endif
; 1630 : 
; 1631 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1632 :             _Success_(return >= 0)
; 1633 :             int, vsnprintf_s,
; 1634 :             _Always_(_Post_z_)            char,        _Buffer,
; 1635 :             _In_                          size_t,      _BufferCount,
; 1636 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1637 :                                           va_list,     _ArgList
; 1638 :             )
; 1639 : 
; 1640 :     #endif
; 1641 : 
; 1642 :     _Check_return_opt_
; 1643 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_l(
; 1644 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1645 :         _In_opt_                                _locale_t   const _Locale,
; 1646 :                                                 va_list           _ArgList
; 1647 :         )
; 1648 :     #if defined _NO_CRT_STDIO_INLINE
; 1649 :     ;
; 1650 :     #else
; 1651 :     {
; 1652 :         int const _Result = __stdio_common_vsprintf(
; 1653 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1654 :             NULL, 0, _Format, _Locale, _ArgList);
; 1655 : 
; 1656 :         return _Result < 0 ? -1 : _Result;
; 1657 :     }
; 1658 :     #endif
; 1659 : 
; 1660 :     _Check_return_
; 1661 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf(
; 1662 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1663 :                                       va_list           _ArgList
; 1664 :         )
; 1665 :     #if defined _NO_CRT_STDIO_INLINE
; 1666 :     ;
; 1667 :     #else
; 1668 :     {
; 1669 :         return _vscprintf_l(_Format, NULL, _ArgList);
; 1670 :     }
; 1671 :     #endif
; 1672 : 
; 1673 :     _Check_return_opt_
; 1674 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p_l(
; 1675 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1676 :         _In_opt_                                _locale_t   const _Locale,
; 1677 :                                                 va_list           _ArgList
; 1678 :         )
; 1679 :     #if defined _NO_CRT_STDIO_INLINE
; 1680 :     ;
; 1681 :     #else
; 1682 :     {
; 1683 :         int const _Result = __stdio_common_vsprintf_p(
; 1684 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1685 :             NULL, 0, _Format, _Locale, _ArgList);
; 1686 : 
; 1687 :         return _Result < 0 ? -1 : _Result;
; 1688 :     }
; 1689 :     #endif
; 1690 : 
; 1691 :     _Check_return_
; 1692 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p(
; 1693 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1694 :                                       va_list           _ArgList
; 1695 :         )
; 1696 :     #if defined _NO_CRT_STDIO_INLINE
; 1697 :     ;
; 1698 :     #else
; 1699 :     {
; 1700 :         return _vscprintf_p_l(_Format, NULL, _ArgList);
; 1701 :     }
; 1702 :     #endif
; 1703 : 
; 1704 :     _Check_return_opt_
; 1705 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c_l(
; 1706 :         _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
; 1707 :         _In_                                    size_t      const _BufferCount,
; 1708 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1709 :         _In_opt_                                _locale_t   const _Locale,
; 1710 :                                                 va_list           _ArgList
; 1711 :         )
; 1712 :     #if defined _NO_CRT_STDIO_INLINE
; 1713 :     ;
; 1714 :     #else
; 1715 :     {
; 1716 :         int const _Result = __stdio_common_vsprintf(
; 1717 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1718 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1719 : 
; 1720 :         return _Result < 0 ? -1 : _Result;
; 1721 :     }
; 1722 :     #endif
; 1723 : 
; 1724 :     _Success_(return >= 0)
; 1725 :     _Check_return_opt_
; 1726 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c(
; 1727 :         _Out_writes_opt_(_BufferCount) char*       const _Buffer,
; 1728 :         _In_                           size_t      const _BufferCount,
; 1729 :         _In_z_ _Printf_format_string_  char const* const _Format,
; 1730 :                                        va_list           _ArgList
; 1731 :         )
; 1732 :     #if defined _NO_CRT_STDIO_INLINE
; 1733 :     ;
; 1734 :     #else
; 1735 :     {
; 1736 :         return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1737 :     }
; 1738 :     #endif
; 1739 : 
; 1740 :     _Success_(return >= 0)
; 1741 :     _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sprintf_s_l)
; 1742 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_l(
; 1743 :         _Pre_notnull_ _Always_(_Post_z_)        char*       const _Buffer,
; 1744 :         _In_z_ _Printf_format_string_params_(0) char const* const _Format,
; 1745 :         _In_opt_                                _locale_t   const _Locale,
; 1746 :         ...)
; 1747 :     #if defined _NO_CRT_STDIO_INLINE
; 1748 :     ;
; 1749 :     #else
; 1750 :     {
; 1751 :         int _Result;
; 1752 :         va_list _ArgList;
; 1753 :         __crt_va_start(_ArgList, _Locale);
; 1754 : 
; 1755 :         _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
; 1756 : 
; 1757 :         __crt_va_end(_ArgList);
; 1758 :         return _Result;
; 1759 :     }
; 1760 :     #endif
; 1761 : 
; 1762 :     _Success_(return >= 0)
; 1763 :     _Check_return_opt_
; 1764 :     _CRT_STDIO_INLINE int __CRTDECL sprintf(
; 1765 :         _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
; 1766 :         _In_z_ _Printf_format_string_    char const* const _Format,
; 1767 :         ...)
; 1768 :     #if defined _NO_CRT_STDIO_INLINE
; 1769 :     ;
; 1770 :     #else
; 1771 :     {
; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }
; 1781 :     #endif
; 1782 : 
; 1783 :     __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(
; 1784 :         _Success_(return >= 0)
; 1785 :         int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, sprintf, vsprintf,
; 1786 :         _Pre_notnull_ _Always_(_Post_z_), char,        _Buffer,
; 1787 :         _In_z_ _Printf_format_string_     char const*, _Format
; 1788 :         )
; 1789 : 
; 1790 :     _Success_(return >= 0)
; 1791 :     _Check_return_opt_
; 1792 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_s_l(
; 1793 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1794 :         _In_                                          size_t      const _BufferCount,
; 1795 :         _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
; 1796 :         _In_opt_                                      _locale_t   const _Locale,
; 1797 :         ...)
; 1798 :     #if defined _NO_CRT_STDIO_INLINE
; 1799 :     ;
; 1800 :     #else
; 1801 :     {
; 1802 :         int _Result;
; 1803 :         va_list _ArgList;
; 1804 :         __crt_va_start(_ArgList, _Locale);
; 1805 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1806 :         __crt_va_end(_ArgList);
; 1807 :         return _Result;
; 1808 :     }
; 1809 :     #endif
; 1810 : 
; 1811 :     #if __STDC_WANT_SECURE_LIB__
; 1812 : 
; 1813 :         _Success_(return >= 0)
; 1814 :         _Check_return_opt_
; 1815 :         _CRT_STDIO_INLINE int __CRTDECL sprintf_s(
; 1816 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1817 :             _In_                                          size_t      const _BufferCount,
; 1818 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1819 :             ...)
; 1820 :     #if defined _NO_CRT_STDIO_INLINE
; 1821 :     ;
; 1822 :     #else
; 1823 :         {
; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);
; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1828 :             __crt_va_end(_ArgList);
; 1829 :             return _Result;
; 1830 :         }
; 1831 :     #endif
; 1832 : 
; 1833 :     #endif
; 1834 : 
; 1835 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowDragonFusion@@YAXXZ
_TEXT	SEGMENT
tv1734 = -556						; size = 4
_id$1$ = -552						; size = 4
tv1732 = -552						; size = 4
_i$4$ = -548						; size = 4
_id2$1$ = -544						; size = 4
tv1737 = -544						; size = 4
_btnTitle$ = -540					; size = 24
_msg$1 = -516						; size = 256
_data$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowDragonFusion@@YAXXZ PROC			; serverWindowDragonFusion, COMDAT

; 21114: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 02 00
	00		 sub	 esp, 556		; 0000022cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 21115: 	static int winX, winY;
; 21116: 	static int winW, winH;
; 21117: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 21118: 	static int btnLoc[6][2];
; 21119: 	static int btnCnt;
; 21120: 	char* btnTitle[] = { " ï¼¯ï¼« ", "CANCEL", "?  ?", "?  ?", "??", "??" };
; 21121: 
; 21122: 	static int selectID[5] = { -1,-1,-1,-1,-1 };
; 21123: 	static int selects = 0;
; 21124: 
; 21125: 	int id, id2;
; 21126: 	int i, j, k;
; 21127: 	int mask, btn, len;
; 21128: 	int x1, y1, x2, y2;
; 21129: 
; 21130: 	if (ptActMenuWin == NULL) {

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00024	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002e	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00038	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00042	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004c	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00056	85 f6		 test	 esi, esi
  00058	0f 85 27 01 00
	00		 jne	 $LN129@serverWind

; 21131: 		winW = 7;
; 21132: 		winH = 5;
; 21133: 		winX = (640 - winW * 64) / 2;
; 21134: 		winY = (456 - winH * 48) / 2;
; 21135: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	56		 push	 esi
  00061	6a 05		 push	 5
  00063	6a 07		 push	 7
  00065	6a 6c		 push	 108			; 0000006cH
  00067	6a 60		 push	 96			; 00000060H
  00069	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowDragonFusion@@YAXXZ@4HA, 7
  00073	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowDragonFusion@@YAXXZ@4HA, 5
  0007d	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA, 96 ; 00000060H
  00087	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA, 108 ; 0000006cH
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 21136: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 21137: 		winX = ptActMenuWin->x;
; 21138: 		winY = ptActMenuWin->y;
; 21139: #endif
; 21140: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 21141: 			btnId[i] = -2;

  00096	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0009d	83 c4 18	 add	 esp, 24			; 00000018H

; 21142: 		}
; 21143: 		mask = 1;
; 21144: 		btnCnt = 0;
; 21145: 		for (i = 0; i < 6; i++, mask <<= 1) {

  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ae	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA, ecx
  000b7	33 c9		 xor	 ecx, ecx
  000b9	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA, eax
  000be	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  000c1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA, xmm0
  000c8	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000d2	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000dc	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowDragonFusion@@YAXXZ@4HA, esi
$LL7@serverWind:

; 21146: 			if (buttonTypeWN & mask) {

  000e2	85 d0		 test	 edx, eax
  000e4	74 06		 je	 SHORT $LN5@serverWind

; 21147: 				btnCnt++;

  000e6	46		 inc	 esi
  000e7	83 fe 04	 cmp	 esi, 4

; 21148: 				if (btnCnt == 4)

  000ea	74 08		 je	 SHORT $LN83@serverWind
$LN5@serverWind:

; 21142: 		}
; 21143: 		mask = 1;
; 21144: 		btnCnt = 0;
; 21145: 		for (i = 0; i < 6; i++, mask <<= 1) {

  000ec	41		 inc	 ecx
  000ed	03 c0		 add	 eax, eax
  000ef	83 f9 06	 cmp	 ecx, 6
  000f2	7c ee		 jl	 SHORT $LL7@serverWind
$LN83@serverWind:

; 21147: 				btnCnt++;

  000f4	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowDragonFusion@@YAXXZ@4HA, esi

; 21149: 					break;
; 21150: 			}
; 21151: 		}
; 21152: 		if (btnCnt > 0) {

  000fa	85 f6		 test	 esi, esi
  000fc	7e 30		 jle	 SHORT $LN9@serverWind

; 21153: 			int w;
; 21154: 			w = winW * 64 / (btnCnt + 1);

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00103	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00106	c1 e0 06	 shl	 eax, 6
  00109	99		 cdq
  0010a	f7 f9		 idiv	 ecx
  0010c	33 c9		 xor	 ecx, ecx

; 21155: 			for (i = 0; i < btnCnt; i++) {

  0010e	85 f6		 test	 esi, esi
  00110	7e 1c		 jle	 SHORT $LN9@serverWind

; 21153: 			int w;
; 21154: 			w = winW * 64 / (btnCnt + 1);

  00112	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 21156: 				btnLoc[i][0] = w * (i + 1) - 27;

  00115	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA[ecx*8], edx
  0011c	03 d0		 add	 edx, eax

; 21157: 				btnLoc[i][1] = 196;

  0011e	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00129	41		 inc	 ecx
  0012a	3b ce		 cmp	 ecx, esi
  0012c	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 21158: 			}
; 21159: 		}
; 21160: 
; 21161: 		if (selects >= 0 && selects < 5) {

  0012e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00133	83 f8 04	 cmp	 eax, 4
  00136	77 16		 ja	 SHORT $LN33@serverWind

; 21162: 			sprintf(msgWN[0], "ï¼ï¼ï¼      %dë§ë¦¬ ì í    ï¼ï¼ï¼", selects + 1);

  00138	40		 inc	 eax
  00139	50		 push	 eax
  0013a	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JBOBCJOD@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$CFd?$LI?$LG?$LI?$KO?5?$LM?$LB?E?C?5?5?5?5?$KD?$LN?$KD?$LN@
  0013f	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00144	e8 00 00 00 00	 call	 _sprintf
  00149	83 c4 0c	 add	 esp, 12			; 0000000cH

; 21163: 		}

  0014c	eb 12		 jmp	 SHORT $LN34@serverWind
$LN33@serverWind:

; 21164: 		else {
; 21165: 			sprintf(msgWN[0], "ï¼ï¼ï¼      ê²°ì íì§ìµëê¹ï¼     ï¼ï¼ï¼");

  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@LPGMCPCH@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?$LA?a?A?$KE?G?O?$LM?K?$LN?$MA?$LE?O?$LB?n?$KD?$LP?5?5?5@
  00153	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00158	e8 00 00 00 00	 call	 _sprintf
  0015d	83 c4 08	 add	 esp, 8
$LN34@serverWind:

; 21166: 		}
; 21167: 
; 21168: 		play_se(202, 320, 240);	// ????????

  00160	68 f0 00 00 00	 push	 240			; 000000f0H
  00165	68 40 01 00 00	 push	 320			; 00000140H
  0016a	68 ca 00 00 00	 push	 202			; 000000caH
  0016f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 21169: 	}
; 21170: 	if (ptActMenuWin != NULL) {

  00174	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017d	85 f6		 test	 esi, esi
  0017f	0f 84 c4 04 00
	00		 je	 $LN27@serverWind
$LN129@serverWind:
  00185	53		 push	 ebx
  00186	57		 push	 edi

; 21171: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  00187	6a 06		 push	 6
  00189	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA
  0018e	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId

; 21172: 		id2 = -1;

  00193	83 cf ff	 or	 edi, -1
  00196	83 c4 08	 add	 esp, 8

; 21173: 		if (ptActMenuWin->hp >= 1) {

  00199	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  0019d	8b d8		 mov	 ebx, eax
  0019f	89 9d d8 fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx
  001a5	89 bd e0 fd ff
	ff		 mov	 DWORD PTR _id2$1$[ebp], edi
  001ab	0f 8c 9b 00 00
	00		 jl	 $LN12@serverWind

; 21174: 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  001b1	8d 77 02	 lea	 esi, DWORD PTR [edi+2]
  001b4	8d 5f 16	 lea	 ebx, DWORD PTR [edi+22]
  001b7	bf 76 00 00 00	 mov	 edi, OFFSET ?pet@@3PAUPET@@A+118
  001bc	0f 1f 40 00	 npad	 4
$LL13@serverWind:

; 21175: 				if (pet[i - 1].useFlag != 0) {

  001c0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  001c4	74 6b		 je	 SHORT $LN11@serverWind

; 21176: 					x1 = winX + 41;
; 21177: 					y1 = winY + 18 + (j + 1) * 21;

  001c6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  001cc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  001d2	83 c1 27	 add	 ecx, 39			; 00000027H
  001d5	03 cb		 add	 ecx, ebx
  001d7	83 c2 29	 add	 edx, 41			; 00000029H

; 21178: 					x2 = x1 + 366;
; 21179: 					y2 = y1 + 20;
; 21180: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  001da	6a 6b		 push	 107			; 0000006bH
  001dc	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  001df	50		 push	 eax
  001e0	8d 82 6e 01 00
	00		 lea	 eax, DWORD PTR [edx+366]
  001e6	50		 push	 eax
  001e7	51		 push	 ecx
  001e8	52		 push	 edx
  001e9	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001ee	83 c4 14	 add	 esp, 20			; 00000014H
  001f1	85 c0		 test	 eax, eax
  001f3	74 39		 je	 SHORT $LN42@serverWind

; 21181: 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  001f5	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001fc	74 30		 je	 SHORT $LN42@serverWind

; 21182: 							id2 = i;
; 21183: 							if (selects < 5) {

  001fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00204	89 b5 e0 fd ff
	ff		 mov	 DWORD PTR _id2$1$[ebp], esi
  0020a	83 f9 05	 cmp	 ecx, 5
  0020d	7d 1f		 jge	 SHORT $LN42@serverWind

; 21184: 								int k;
; 21185: 								for (k = 0; k < 5; k++) {

  0020f	33 c0		 xor	 eax, eax
$LL16@serverWind:

; 21186: 									if (selectID[k] == i)

  00211	39 34 85 00 00
	00 00		 cmp	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA[eax*4], esi
  00218	74 14		 je	 SHORT $LN42@serverWind

; 21184: 								int k;
; 21185: 								for (k = 0; k < 5; k++) {

  0021a	40		 inc	 eax
  0021b	83 f8 05	 cmp	 eax, 5
  0021e	7c f1		 jl	 SHORT $LL16@serverWind

; 21187: 										break;
; 21188: 								}
; 21189: 								if (k >= 5) {
; 21190: 									selectID[selects++] = i;

  00220	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA[ecx*4], esi
  00227	41		 inc	 ecx
  00228	89 0d 00 00 00
	00		 mov	 DWORD PTR ?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA, ecx
$LN42@serverWind:

; 21191: 								}
; 21192: 							}
; 21193: 						}
; 21194: 					}
; 21195: 					j++;

  0022e	83 c3 15	 add	 ebx, 21			; 00000015H
$LN11@serverWind:

; 21174: 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  00231	81 c7 78 0b 00
	00		 add	 edi, 2936		; 00000b78H
  00237	46		 inc	 esi
  00238	81 ff 56 2e 00
	00		 cmp	 edi, OFFSET ?pet@@3PAUPET@@A+11862
  0023e	7e 80		 jle	 SHORT $LL13@serverWind
  00240	8b bd e0 fd ff
	ff		 mov	 edi, DWORD PTR _id2$1$[ebp]
  00246	8b 9d d8 fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 21196: 				}
; 21197: 			}
; 21198: 		}
; 21199: 		if (CheckMenuFlag()
; 21200: 			|| joy_trg[0] & JOY_ESC
; 21201: 			|| actBtn == 1
; 21202: 			|| menuBtn == 1
; 21203: 			|| disconnectServerFlag == TRUE
; 21204: 			|| wnCloseFlag == 1) {

  0024c	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00251	85 c0		 test	 eax, eax
  00253	0f 85 c4 03 00
	00		 jne	 $LN44@serverWind
  00259	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00263	0f 85 b4 03 00
	00		 jne	 $LN44@serverWind
  00269	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00271	0f 84 a6 03 00
	00		 je	 $LN44@serverWind
  00277	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0027f	0f 84 98 03 00
	00		 je	 $LN44@serverWind
  00285	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0028c	0f 84 8b 03 00
	00		 je	 $LN44@serverWind
  00292	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0029a	0f 84 7d 03 00
	00		 je	 $LN44@serverWind

; 21208: 		}
; 21209: 
; 21210: 		if (0 <= id && id < 6) {

  002a0	85 db		 test	 ebx, ebx
  002a2	0f 88 cf 00 00
	00		 js	 $LN127@serverWind
  002a8	83 fb 06	 cmp	 ebx, 6
  002ab	0f 8d 7e 03 00
	00		 jge	 $LN52@serverWind

; 21211: 			//|| 0 <= id2 && id2 < 8 ){
; 21212: 			char data[256];
; 21213: 			char msg[256];
; 21214: 			if (0 <= id && id < 6) {
; 21215: 				btn = 1;
; 21216: 				btn <<= id;
; 21217: 			}
; 21218: 			else {
; 21219: 				btn = 0;
; 21220: 			}
; 21221: 			if (id2 < 0)
; 21222: 				id2 = 0;
; 21223: 
; 21224: 			sprintf(data, "%d|%d|%d|%d|%d", selectID[0], selectID[1], selectID[2], selectID[3], selectID[4]);

  002b1	ff 35 10 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+16
  002b7	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002bd	8b cb		 mov	 ecx, ebx
  002bf	ff 35 0c 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+12
  002c5	be 01 00 00 00	 mov	 esi, 1
  002ca	ff 35 08 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+8
  002d0	d3 e6		 shl	 esi, cl
  002d2	ff 35 04 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+4
  002d8	ff 35 00 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA
  002de	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DIJJDGHC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@
  002e3	50		 push	 eax
  002e4	e8 00 00 00 00	 call	 _sprintf
  002e9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 21225: 			if (bNewServer)

  002ec	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002f3	74 2d		 je	 SHORT $LN49@serverWind

; 21226: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, data);

  002f5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002fb	50		 push	 eax
  002fc	56		 push	 esi
  002fd	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00303	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00309	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0030f	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00315	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0031b	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00320	eb 2b		 jmp	 SHORT $LN134@serverWind
$LN49@serverWind:

; 21227: 			else
; 21228: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00322	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$1[ebp]
  00328	50		 push	 eax
  00329	56		 push	 esi
  0032a	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00330	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00336	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0033c	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00342	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00348	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN134@serverWind:

; 21229: 
; 21230: 			for (i = 0; i < 5; i++) {
; 21231: 				selectID[i] = -1;

  0034d	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  00354	83 c4 1c	 add	 esp, 28			; 0000001cH
  00357	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA, xmm0
  0035e	c7 05 10 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA+16, -1

; 21232: 			}
; 21233: 			selects = 0;

  00368	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selects@?1??serverWindowDragonFusion@@YAXXZ@4HA, 0
  00372	e9 ae 02 00 00	 jmp	 $LN135@serverWind
$LN127@serverWind:

; 21234: 			windowTypeWN = -1;
; 21235: 		}
; 21236: 
; 21237: 		if (id >= 0 || id2 >= 0) {

  00377	85 ff		 test	 edi, edi
  00379	0f 89 b0 02 00
	00		 jns	 $LN52@serverWind

; 21240: 			return;
; 21241: 		}
; 21242: 
; 21243: 
; 21244: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1) {

  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00384	85 c0		 test	 eax, eax
  00386	0f 84 bb 02 00
	00		 je	 $LN132@serverWind
  0038c	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00390	0f 8c b1 02 00
	00		 jl	 $LN132@serverWind

; 21245: 			StockFontBuffer(winX + 54, winY + 21,

  00396	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  0039b	6a 00		 push	 0
  0039d	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  003a2	6a 00		 push	 0
  003a4	83 c0 15	 add	 eax, 21			; 00000015H
  003a7	6a 01		 push	 1
  003a9	50		 push	 eax
  003aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  003af	83 c0 36	 add	 eax, 54			; 00000036H
  003b2	50		 push	 eax
  003b3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003b8	bf ac 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA+172
  003bd	83 c4 18	 add	 esp, 24			; 00000018H
  003c0	b8 01 00 00 00	 mov	 eax, 1
  003c5	be 3f 00 00 00	 mov	 esi, 63			; 0000003fH
  003ca	81 ef 00 00 00
	00		 sub	 edi, OFFSET ?pet@@3PAUPET@@A
  003d0	89 85 dc fd ff
	ff		 mov	 DWORD PTR _i$4$[ebp], eax
  003d6	b9 05 00 00 00	 mov	 ecx, 5
  003db	89 b5 e0 fd ff
	ff		 mov	 DWORD PTR tv1737[ebp], esi
  003e1	bb 65 00 00 00	 mov	 ebx, OFFSET ?pet@@3PAUPET@@A+101
  003e6	89 bd d4 fd ff
	ff		 mov	 DWORD PTR tv1734[ebp], edi
  003ec	89 8d d8 fd ff
	ff		 mov	 DWORD PTR tv1732[ebp], ecx
$LL22@serverWind:

; 21248: 				len = strlen(pet[i - 1].name);
; 21249: 				if (pet[i - 1].useFlag != 0) {

  003f2	66 83 7b 11 00	 cmp	 WORD PTR [ebx+17], 0
  003f7	0f 84 78 01 00
	00		 je	 $LN20@serverWind

; 21250: 					len = strlen(pet[i - 1].freeName);

  003fd	8b cb		 mov	 ecx, ebx
  003ff	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL131@serverWind:
  00402	8a 01		 mov	 al, BYTE PTR [ecx]
  00404	41		 inc	 ecx
  00405	84 c0		 test	 al, al
  00407	75 f9		 jne	 SHORT $LL131@serverWind
  00409	2b ca		 sub	 ecx, edx

; 21251: 					if (len > 0) {

  0040b	85 c9		 test	 ecx, ecx
  0040d	7e 11		 jle	 SHORT $LN55@serverWind

; 21252: 						strcpy(msgWN[1], pet[i - 1].freeName);

  0040f	8b cb		 mov	 ecx, ebx
$LL70@serverWind:
  00411	8a 01		 mov	 al, BYTE PTR [ecx]
  00413	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00416	88 44 0f ee	 mov	 BYTE PTR [edi+ecx-18], al
  0041a	84 c0		 test	 al, al
  0041c	75 f3		 jne	 SHORT $LL70@serverWind

; 21253: 					}

  0041e	eb 10		 jmp	 SHORT $LN56@serverWind
$LN55@serverWind:

; 21254: 					else {
; 21255: 						len = strlen(pet[i - 1].name);
; 21256: 						strcpy(msgWN[1], pet[i - 1].name);

  00420	8d 4b ef	 lea	 ecx, DWORD PTR [ebx-17]
$LL71@serverWind:
  00423	8a 01		 mov	 al, BYTE PTR [ecx]
  00425	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00428	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  0042c	84 c0		 test	 al, al
  0042e	75 f3		 jne	 SHORT $LL71@serverWind
$LN56@serverWind:

; 21257: 					}
; 21258: 					StockFontBuffer(winX + 62, winY + 21 + (j + 1) * 21,

  00430	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00435	6a 00		 push	 0
  00437	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0043c	6a 00		 push	 0
  0043e	03 c6		 add	 eax, esi
  00440	6a 01		 push	 1
  00442	50		 push	 eax
  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00448	83 c0 3e	 add	 eax, 62			; 0000003eH
  0044b	50		 push	 eax
  0044c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00451	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _i$4$[ebp]
  00457	83 c4 18	 add	 esp, 24			; 00000018H
  0045a	8b bd e0 fd ff
	ff		 mov	 edi, DWORD PTR tv1737[ebp]
  00460	33 f6		 xor	 esi, esi
$LL25@serverWind:

; 21263: 						if (selectID[k] == i) {

  00462	39 04 b5 00 00
	00 00		 cmp	 DWORD PTR ?selectID@?1??serverWindowDragonFusion@@YAXXZ@4PAHA[esi*4], eax
  00469	75 72		 jne	 SHORT $LN23@serverWind

; 21264: 							if (k == 0)

  0046b	85 f6		 test	 esi, esi
  0046d	75 07		 jne	 SHORT $LN58@serverWind

; 21265: 								sprintf(msgWN[1], "ë¶ë¥´ë¤");

  0046f	68 00 00 00 00	 push	 OFFSET ??_C@_06CALAJCAP@?$LK?N?$LI?$KD?$LE?Y@
  00474	eb 2e		 jmp	 SHORT $LN136@serverWind
$LN58@serverWind:

; 21266: 							else if (k == 1)

  00476	83 fe 01	 cmp	 esi, 1
  00479	75 07		 jne	 SHORT $LN60@serverWind

; 21267: 								sprintf(msgWN[1], "ì¢ìíë¤");

  0047b	68 00 00 00 00	 push	 OFFSET ??_C@_08FAALJAKG@?A?A?$LO?F?G?O?$LE?Y@
  00480	eb 22		 jmp	 SHORT $LN136@serverWind
$LN60@serverWind:

; 21268: 							else if (k == 2)

  00482	83 fe 02	 cmp	 esi, 2
  00485	75 07		 jne	 SHORT $LN62@serverWind

; 21269: 								sprintf(msgWN[1], "è°ä¼");

  00487	68 00 00 00 00	 push	 OFFSET ??_C@_03GKEDPABO@?$DP?$NM?Q@
  0048c	eb 16		 jmp	 SHORT $LN136@serverWind
$LN62@serverWind:

; 21270: 							else if (k == 3)

  0048e	83 fe 03	 cmp	 esi, 3
  00491	75 07		 jne	 SHORT $LN64@serverWind

; 21271: 								sprintf(msgWN[1], "æ¯ç¾");

  00493	68 00 00 00 00	 push	 OFFSET ??_C@_03MNGAGPGA@?c?S?$DP@
  00498	eb 0a		 jmp	 SHORT $LN136@serverWind
$LN64@serverWind:

; 21272: 							else if (k == 4)

  0049a	83 fe 04	 cmp	 esi, 4
  0049d	75 12		 jne	 SHORT $LN66@serverWind

; 21273: 								sprintf(msgWN[1], "å¢ç");

  0049f	68 00 00 00 00	 push	 OFFSET ??_C@_04KHFBBOKF@?q?r?l?L@
$LN136@serverWind:

; 21274: 
; 21275: 							StockFontBuffer(winX + 220, winY + 21 + (j + 1) * 21,

  004a4	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  004a9	e8 00 00 00 00	 call	 _sprintf
  004ae	83 c4 08	 add	 esp, 8
$LN66@serverWind:
  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  004b6	6a 00		 push	 0
  004b8	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  004bd	6a 05		 push	 5
  004bf	03 c7		 add	 eax, edi
  004c1	6a 01		 push	 1
  004c3	50		 push	 eax
  004c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  004c9	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  004ce	50		 push	 eax
  004cf	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004d4	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _i$4$[ebp]
  004da	83 c4 18	 add	 esp, 24			; 00000018H
$LN23@serverWind:

; 21259: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 21260: 
; 21261: 					//selectID
; 21262: 					for (k = 0; k < (sizeof(selectID) / sizeof(selectID[0])); k++) {

  004dd	46		 inc	 esi
  004de	83 fe 05	 cmp	 esi, 5
  004e1	0f 82 7b ff ff
	ff		 jb	 $LL25@serverWind

; 21276: 								FONT_PRIO_FRONT, FONT_PAL_GREEN, msgWN[1], 0);
; 21277: 						}
; 21278: 					}
; 21279: 					sprintf(msgWN[1], "LV.%d", pet[i - 1].level);

  004e7	ff 73 bb	 push	 DWORD PTR [ebx-69]
  004ea	68 00 00 00 00	 push	 OFFSET ??_C@_05POAOFMIF@LV?4?$CFd@
  004ef	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  004f4	e8 00 00 00 00	 call	 _sprintf

; 21280: 					StockFontBuffer(winX + 260, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);

  004f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  004fe	8b b5 e0 fd ff
	ff		 mov	 esi, DWORD PTR tv1737[ebp]
  00504	03 c6		 add	 eax, esi
  00506	6a 00		 push	 0
  00508	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0050d	6a 00		 push	 0
  0050f	6a 01		 push	 1
  00511	50		 push	 eax
  00512	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00517	05 04 01 00 00	 add	 eax, 260		; 00000104H
  0051c	50		 push	 eax
  0051d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 21281: 					sprintf(msgWN[1], "MaxHP %d", pet[i - 1].maxHp);

  00522	ff 73 a7	 push	 DWORD PTR [ebx-89]
  00525	68 00 00 00 00	 push	 OFFSET ??_C@_08LBNAPDDE@MaxHP?5?$CFd@
  0052a	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0052f	e8 00 00 00 00	 call	 _sprintf

; 21282: 					StockFontBuffer(winX + 314, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);

  00534	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  00539	6a 00		 push	 0
  0053b	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  00540	6a 00		 push	 0
  00542	03 c6		 add	 eax, esi
  00544	6a 01		 push	 1
  00546	50		 push	 eax
  00547	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  0054c	05 3a 01 00 00	 add	 eax, 314		; 0000013aH
  00551	50		 push	 eax
  00552	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00557	8b bd d4 fd ff
	ff		 mov	 edi, DWORD PTR tv1734[ebp]
  0055d	83 c4 48	 add	 esp, 72			; 00000048H
  00560	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR _i$4$[ebp]

; 21283: 					j++;

  00566	83 c6 15	 add	 esi, 21			; 00000015H
  00569	8b 8d d8 fd ff
	ff		 mov	 ecx, DWORD PTR tv1732[ebp]
  0056f	89 b5 e0 fd ff
	ff		 mov	 DWORD PTR tv1737[ebp], esi
$LN20@serverWind:

; 21246: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[0], 0);
; 21247: 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  00575	40		 inc	 eax
  00576	81 ef 78 0b 00
	00		 sub	 edi, 2936		; 00000b78H
  0057c	81 c3 78 0b 00
	00		 add	 ebx, 2936		; 00000b78H
  00582	89 85 dc fd ff
	ff		 mov	 DWORD PTR _i$4$[ebp], eax
  00588	83 e9 01	 sub	 ecx, 1
  0058b	89 bd d4 fd ff
	ff		 mov	 DWORD PTR tv1734[ebp], edi
  00591	89 8d d8 fd ff
	ff		 mov	 DWORD PTR tv1732[ebp], ecx
  00597	0f 85 55 fe ff
	ff		 jne	 $LL22@serverWind

; 21284: 				}
; 21285: 			}
; 21286: 			j = 0;

  0059d	33 ff		 xor	 edi, edi

; 21287: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  0059f	bb 01 00 00 00	 mov	 ebx, 1
  005a4	33 f6		 xor	 esi, esi
  005a6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL28@serverWind:

; 21288: 				btnId[i] = -2;

  005b0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 21289: 				if (buttonTypeWN & mask) {

  005ba	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  005c0	74 40		 je	 SHORT $LN26@serverWind

; 21290: 					if (j < btnCnt) {

  005c2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowDragonFusion@@YAXXZ@4HA
  005c8	7d 38		 jge	 SHORT $LN26@serverWind

; 21291: 						btnId[i] =

  005ca	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA[edi*8+4]
  005d1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowDragonFusion@@YAXXZ@4HA
  005d7	6a 02		 push	 2
  005d9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  005e0	6a 04		 push	 4
  005e2	6a 01		 push	 1
  005e4	50		 push	 eax
  005e5	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowDragonFusion@@YAXXZ@4PAY01HA[edi*8]
  005ec	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowDragonFusion@@YAXXZ@4HA
  005f2	50		 push	 eax
  005f3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005f8	83 c4 18	 add	 esp, 24			; 00000018H
  005fb	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowDragonFusion@@YAXXZ@4PAHA[esi], eax

; 21292: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 21293: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 21294: 						j++;

  00601	47		 inc	 edi
$LN26@serverWind:

; 21287: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  00602	83 c6 04	 add	 esi, 4
  00605	03 db		 add	 ebx, ebx
  00607	83 fe 18	 cmp	 esi, 24			; 00000018H
  0060a	7c a4		 jl	 SHORT $LL28@serverWind
  0060c	5f		 pop	 edi
  0060d	5b		 pop	 ebx
  0060e	5e		 pop	 esi

; 21295: 					}
; 21296: 				}
; 21297: 			}
; 21298: 		}
; 21299: 	}
; 21300: 
; 21301: }

  0060f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00612	33 cd		 xor	 ecx, ebp
  00614	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00619	8b e5		 mov	 esp, ebp
  0061b	5d		 pop	 ebp
  0061c	c3		 ret	 0
$LN44@serverWind:

; 21205: 			id = 100;
; 21206: 			windowTypeWN = -1;
; 21207: 			wnCloseFlag = 0;

  0061d	33 c0		 xor	 eax, eax
  0061f	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN135@serverWind:

; 21238: 			DeathAction(ptActMenuWin);

  00625	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN52@serverWind:
  0062f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00635	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0063a	83 c4 04	 add	 esp, 4

; 21239: 			ptActMenuWin = NULL;

  0063d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN132@serverWind:
  00647	5f		 pop	 edi
  00648	5b		 pop	 ebx
$LN27@serverWind:

; 21295: 					}
; 21296: 				}
; 21297: 			}
; 21298: 		}
; 21299: 	}
; 21300: 
; 21301: }

  00649	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0064c	33 cd		 xor	 ecx, ebp
  0064e	5e		 pop	 esi
  0064f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00654	8b e5		 mov	 esp, ebp
  00656	5d		 pop	 ebp
  00657	c3		 ret	 0
?serverWindowDragonFusion@@YAXXZ ENDP			; serverWindowDragonFusion
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?showRacemanRankWN@@YAXXZ
_TEXT	SEGMENT
tv545 = -32						; size = 4
_btnTitle$ = -28					; size = 24
__$ArrayPad$ = -4					; size = 4
?showRacemanRankWN@@YAXXZ PROC				; showRacemanRankWN, COMDAT

; 20820: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 20821: 	static int winW, winH;
; 20822: 	static int winX, winY;
; 20823: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 20824: 	static int btnLoc[6][2];
; 20825: 	static int btnCnt;
; 20826: 
; 20827: 	int  id;// id2 ;
; 20828: 	int  i, j;
; 20829: 	int  mask;
; 20830: 	int  btn;
; 20831: 	char* btnTitle[] =
; 20832: 	{
; 20833: 		" ï¼¯ï¼« ",
; 20834: 		"CANCEL",
; 20835: 		"?  ?",
; 20836: 		"?  ?",
; 20837: 		"??",
; 20838: 		"??"
; 20839: 	};
; 20840: 
; 20841: 
; 20842: 	if (ptActMenuWin == NULL)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00017	56		 push	 esi
  00018	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  0001f	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00026	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0002d	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00034	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0003b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00042	0f 85 c9 00 00
	00		 jne	 $LN52@showRacema

; 20843: 	{
; 20844: 		winW = 10 - 2 - 2;
; 20845: 		winH = 7;
; 20846: 		winX = (640 - winW * 64) / 2;
; 20847: 		winY = (456 - winH * 48) / 2;
; 20848: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00048	6a 01		 push	 1
  0004a	6a 00		 push	 0
  0004c	6a 07		 push	 7
  0004e	6a 06		 push	 6
  00050	6a 3c		 push	 60			; 0000003cH
  00052	68 80 00 00 00	 push	 128			; 00000080H
  00057	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winW@?1??showRacemanRankWN@@YAXXZ@4HA, 6
  00061	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winH@?1??showRacemanRankWN@@YAXXZ@4HA, 7
  0006b	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?winX@?1??showRacemanRankWN@@YAXXZ@4HA, 128 ; 00000080H
  00075	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?winY@?1??showRacemanRankWN@@YAXXZ@4HA, 60 ; 0000003cH
  0007f	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 20849: 		mask = 1;
; 20850: 		btnCnt = 0;
; 20851: 		for (i = 0; i < 10; i++, mask <<= 1)

  00084	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  0008a	33 f6		 xor	 esi, esi
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00094	b8 01 00 00 00	 mov	 eax, 1
  00099	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??showRacemanRankWN@@YAXXZ@4HA, esi
  0009f	33 c9		 xor	 ecx, ecx
$LL4@showRacema:

; 20852: 		{
; 20853: 			if (buttonTypeWN & mask)

  000a1	85 d0		 test	 edx, eax
  000a3	74 06		 je	 SHORT $LN2@showRacema

; 20854: 			{
; 20855: 				btnCnt++;

  000a5	46		 inc	 esi
  000a6	83 fe 04	 cmp	 esi, 4

; 20856: 				if (btnCnt == 4)

  000a9	74 08		 je	 SHORT $LN38@showRacema
$LN2@showRacema:

; 20849: 		mask = 1;
; 20850: 		btnCnt = 0;
; 20851: 		for (i = 0; i < 10; i++, mask <<= 1)

  000ab	41		 inc	 ecx
  000ac	03 c0		 add	 eax, eax
  000ae	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000b1	7c ee		 jl	 SHORT $LL4@showRacema
$LN38@showRacema:

; 20854: 			{
; 20855: 				btnCnt++;

  000b3	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??showRacemanRankWN@@YAXXZ@4HA, esi

; 20857: 					break;
; 20858: 			}
; 20859: 		}
; 20860: 		if (btnCnt > 0)

  000b9	85 f6		 test	 esi, esi
  000bb	7e 30		 jle	 SHORT $LN6@showRacema

; 20861: 		{
; 20862: 			int w;
; 20863: 			w = winW * 64 / (btnCnt + 1);

  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??showRacemanRankWN@@YAXXZ@4HA
  000c2	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000c5	c1 e0 06	 shl	 eax, 6
  000c8	99		 cdq
  000c9	f7 f9		 idiv	 ecx
  000cb	33 c9		 xor	 ecx, ecx

; 20864: 			for (i = 0; i < btnCnt; i++)

  000cd	85 f6		 test	 esi, esi
  000cf	7e 1c		 jle	 SHORT $LN6@showRacema

; 20861: 		{
; 20862: 			int w;
; 20863: 			w = winW * 64 / (btnCnt + 1);

  000d1	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL7@showRacema:

; 20865: 			{
; 20866: 				btnLoc[i][0] = w * (i + 1) - 27;

  000d4	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA[ecx*8], edx
  000db	03 d0		 add	 edx, eax

; 20867: 				btnLoc[i][1] = 295;

  000dd	c7 04 cd 04 00
	00 00 27 01 00
	00		 mov	 DWORD PTR ?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA[ecx*8+4], 295 ; 00000127H
  000e8	41		 inc	 ecx
  000e9	3b ce		 cmp	 ecx, esi
  000eb	7c e7		 jl	 SHORT $LL7@showRacema
$LN6@showRacema:

; 20868: 			}
; 20869: 		}
; 20870: 		play_se(202, 320, 240);

  000ed	68 f0 00 00 00	 push	 240			; 000000f0H
  000f2	68 40 01 00 00	 push	 320			; 00000140H
  000f7	68 ca 00 00 00	 push	 202			; 000000caH
  000fc	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00101	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20871: 
; 20872: 	}
; 20873: 	if (ptActMenuWin != NULL)

  00104	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0010b	0f 84 26 02 00
	00		 je	 $LN12@showRacema
$LN52@showRacema:

; 20874: 	{
; 20875: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  00111	6a 06		 push	 6
  00113	68 00 00 00 00	 push	 OFFSET ?btnId@?1??showRacemanRankWN@@YAXXZ@4PAHA
  00118	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  0011d	83 c4 08	 add	 esp, 8
  00120	8b f0		 mov	 esi, eax

; 20876: 
; 20877: 		if (CheckMenuFlag()
; 20878: 			|| joy_trg[0] & JOY_ESC
; 20879: 			|| actBtn == 1
; 20880: 			|| menuBtn == 1
; 20881: 			|| disconnectServerFlag == TRUE
; 20882: 			|| wnCloseFlag == 1)

  00122	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00127	85 c0		 test	 eax, eax
  00129	0f 85 8b 01 00
	00		 jne	 $LN20@showRacema
  0012f	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00139	0f 85 7b 01 00
	00		 jne	 $LN20@showRacema
  0013f	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00147	0f 84 6d 01 00
	00		 je	 $LN20@showRacema
  0014d	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00155	0f 84 5f 01 00
	00		 je	 $LN20@showRacema
  0015b	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00162	0f 84 52 01 00
	00		 je	 $LN20@showRacema
  00168	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00170	0f 84 44 01 00
	00		 je	 $LN20@showRacema

; 20889: 		}
; 20890: 
; 20891: 		if (0 <= id && id < 6
; 20892: 			//|| 0 <= id2 && id2 < 12
; 20893: 			|| id == 100)

  00176	85 f6		 test	 esi, esi
  00178	78 13		 js	 SHORT $LN23@showRacema
  0017a	83 fe 06	 cmp	 esi, 6
  0017d	7d 0e		 jge	 SHORT $LN23@showRacema

; 20900: 			}
; 20901: 			else
; 20902: 				if (0 <= id && id < 6)
; 20903: 				{
; 20904: 					btn = 1;
; 20905: 					btn <<= id;

  0017f	b8 01 00 00 00	 mov	 eax, 1
  00184	8b ce		 mov	 ecx, esi
  00186	d3 e0		 shl	 eax, cl
  00188	e9 5c 01 00 00	 jmp	 $LN27@showRacema
$LN23@showRacema:

; 20889: 		}
; 20890: 
; 20891: 		if (0 <= id && id < 6
; 20892: 			//|| 0 <= id2 && id2 < 12
; 20893: 			|| id == 100)

  0018d	83 fe 64	 cmp	 esi, 100		; 00000064H
  00190	0f 84 4e 01 00
	00		 je	 $LN51@showRacema

; 20917: 		}
; 20918: 		if (id >= 0) { //|| id2 >= 0) {

  00196	85 f6		 test	 esi, esi
  00198	0f 89 81 01 00
	00		 jns	 $LN55@showRacema

; 20921: 			return;
; 20922: 		}
; 20923: 
; 20924: 		if (ptActMenuWin->hp >= 1)

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001a3	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001a7	0f 8c 8a 01 00
	00		 jl	 $LN12@showRacema

; 20925: 		{
; 20926: 			StockFontBuffer(winX + 235 - 130, winY + 21 + 10,

  001ad	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRacemanRankWN@@YAXXZ@4HA
  001b2	53		 push	 ebx
  001b3	57		 push	 edi
  001b4	6a 00		 push	 0
  001b6	68 00 00 00 00	 push	 OFFSET ?ranktitle@@3PADA ; ranktitle
  001bb	6a 04		 push	 4
  001bd	83 c0 1f	 add	 eax, 31			; 0000001fH
  001c0	6a 01		 push	 1
  001c2	50		 push	 eax
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRacemanRankWN@@YAXXZ@4HA
  001c8	83 c0 69	 add	 eax, 105		; 00000069H
  001cb	50		 push	 eax
  001cc	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 20927: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, ranktitle, 0);//"âçå® ä¸ªäººæä¸ºå¤©äººæè¡æ¦â", 0 );
; 20928: 			StockFontBuffer(winX + 25, winY + 16 + 2 * 21,

  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRacemanRankWN@@YAXXZ@4HA
  001d6	6a 00		 push	 0
  001d8	68 00 00 00 00	 push	 OFFSET ??_C@_0CP@FDBDKEML@?$KB?$KO?$LM?$KO?B?w?$KB?$KP?5?5?5?5?$KB?$KO?5?5?5?$MA?L?5?5?5?$LI?$KH?5?5?5?5?$KB?$KP?5@
  001dd	6a 05		 push	 5
  001df	83 c0 3a	 add	 eax, 58			; 0000003aH
  001e2	6a 01		 push	 1
  001e4	50		 push	 eax
  001e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRacemanRankWN@@YAXXZ@4HA
  001ea	83 c0 19	 add	 eax, 25			; 00000019H
  001ed	50		 push	 eax
  001ee	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001f3	83 c4 30	 add	 esp, 48			; 00000030H
  001f6	be 00 00 00 00	 mov	 esi, OFFSET ?linemsgWN@@3PAY0MI@DA ; linemsgWN
  001fb	33 ff		 xor	 edi, edi
  001fd	0f 1f 00	 npad	 3
$LL10@showRacema:

; 20934: 			{
; 20935: 				if (strlen(linemsgWN[i]) != NULL)

  00200	8b ce		 mov	 ecx, esi
  00202	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL56@showRacema:
  00205	8a 01		 mov	 al, BYTE PTR [ecx]
  00207	41		 inc	 ecx
  00208	84 c0		 test	 al, al
  0020a	75 f9		 jne	 SHORT $LL56@showRacema
  0020c	2b ca		 sub	 ecx, edx
  0020e	74 23		 je	 SHORT $LN8@showRacema

; 20936: 				{
; 20937: 					StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, linemsgWN[i], 0);

  00210	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRacemanRankWN@@YAXXZ@4HA
  00215	6a 00		 push	 0
  00217	56		 push	 esi
  00218	83 c0 4d	 add	 eax, 77			; 0000004dH
  0021b	6a 00		 push	 0
  0021d	03 c7		 add	 eax, edi
  0021f	6a 01		 push	 1
  00221	50		 push	 eax
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRacemanRankWN@@YAXXZ@4HA
  00227	83 c0 28	 add	 eax, 40			; 00000028H
  0022a	50		 push	 eax
  0022b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00230	83 c4 18	 add	 esp, 24			; 00000018H
$LN8@showRacema:

; 20929: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âìì°¨â    â   ì´   ë¦    â      âí¬íìâ", 0);
; 20930: 
; 20931: 			//å¤çèµæ
; 20932: 			int fontcolor = FONT_PAL_WHITE;
; 20933: 			for (i = 0; i < 10; i++)			//ä¸æ¬¡åè¡

  00233	81 c6 c8 00 00
	00		 add	 esi, 200		; 000000c8H
  00239	83 c7 15	 add	 edi, 21			; 00000015H
  0023c	81 fe d0 07 00
	00		 cmp	 esi, OFFSET ?linemsgWN@@3PAY0MI@DA+2000
  00242	7c bc		 jl	 SHORT $LL10@showRacema

; 20938: 				}
; 20939: 			}
; 20940: 			//å¤çæé®
; 20941: 			j = 0;

  00244	33 db		 xor	 ebx, ebx

; 20942: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00246	bf 01 00 00 00	 mov	 edi, 1
  0024b	33 f6		 xor	 esi, esi
  0024d	0f 1f 00	 npad	 3
$LL13@showRacema:

; 20943: 			{
; 20944: 				btnId[i] = -2;

  00250	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??showRacemanRankWN@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 20945: 				if (buttonTypeWN & mask)

  0025a	85 3d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, edi ; buttonTypeWN
  00260	74 3d		 je	 SHORT $LN11@showRacema

; 20946: 				{
; 20947: 					if (j < btnCnt)

  00262	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?btnCnt@?1??showRacemanRankWN@@YAXXZ@4HA
  00268	7d 35		 jge	 SHORT $LN11@showRacema

; 20948: 					{
; 20949: 						btnId[i] =

  0026a	8b 04 dd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA[ebx*8+4]
  00271	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??showRacemanRankWN@@YAXXZ@4HA
  00277	6a 02		 push	 2
  00279	ff 74 35 e4	 push	 DWORD PTR _btnTitle$[ebp+esi]
  0027d	6a 04		 push	 4
  0027f	6a 01		 push	 1
  00281	50		 push	 eax
  00282	8b 04 dd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??showRacemanRankWN@@YAXXZ@4PAY01HA[ebx*8]
  00289	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??showRacemanRankWN@@YAXXZ@4HA
  0028f	50		 push	 eax
  00290	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00295	83 c4 18	 add	 esp, 24			; 00000018H
  00298	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??showRacemanRankWN@@YAXXZ@4PAHA[esi], eax

; 20950: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 20951: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 20952: 						j++;

  0029e	43		 inc	 ebx
$LN11@showRacema:

; 20942: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  0029f	83 c6 04	 add	 esi, 4
  002a2	03 ff		 add	 edi, edi
  002a4	83 fe 18	 cmp	 esi, 24			; 00000018H
  002a7	7c a7		 jl	 SHORT $LL13@showRacema
  002a9	5f		 pop	 edi
  002aa	5b		 pop	 ebx
  002ab	5e		 pop	 esi

; 20953: 					}
; 20954: 				}
; 20955: 			}
; 20956: 
; 20957: 		}
; 20958: 	}
; 20959: }

  002ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002af	33 cd		 xor	 ecx, ebp
  002b1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b6	8b e5		 mov	 esp, ebp
  002b8	5d		 pop	 ebp
  002b9	c3		 ret	 0
$LN20@showRacema:

; 20883: 		{
; 20884: 			id = 100;
; 20885: 			windowTypeWN = -1;
; 20886: 			wnCloseFlag = 0;
; 20887: 			DeathAction(ptActMenuWin);

  002ba	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002c0	33 c0		 xor	 eax, eax
  002c2	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002cc	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  002d2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002d7	83 c4 04	 add	 esp, 4

; 20888: 			ptActMenuWin = NULL;

  002da	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN51@showRacema:

; 20894: 		{
; 20895: 			//char data[256];
; 20896: 			//char msg[256];
; 20897: 			if (id == 100)
; 20898: 			{
; 20899: 				btn = WINDOW_BUTTONTYPE_CANCEL;

  002e4	b8 02 00 00 00	 mov	 eax, 2
$LN27@showRacema:

; 20906: 				}
; 20907: 				else
; 20908: 				{
; 20909: 					btn = 0;
; 20910: 				}
; 20911: 
; 20912: 
; 20913: 			//makeEscapeString( data, msg, sizeof( msg )-1 );
; 20914: 
; 20915: 			lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  002e9	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  002ee	50		 push	 eax
  002ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002f5	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  002fb	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00301	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00307	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0030d	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00312	83 c4 1c	 add	 esp, 28			; 0000001cH

; 20916: 			windowTypeWN = -1;

  00315	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN55@showRacema:

; 20919: 			DeathAction(ptActMenuWin);

  0031f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00325	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0032a	83 c4 04	 add	 esp, 4

; 20920: 			ptActMenuWin = NULL;

  0032d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN12@showRacema:

; 20953: 					}
; 20954: 				}
; 20955: 			}
; 20956: 
; 20957: 		}
; 20958: 	}
; 20959: }

  00337	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0033a	33 cd		 xor	 ecx, ebp
  0033c	5e		 pop	 esi
  0033d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00342	8b e5		 mov	 esp, ebp
  00344	5d		 pop	 ebp
  00345	c3		 ret	 0
?showRacemanRankWN@@YAXXZ ENDP				; showRacemanRankWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initRacemanRankWN@@YAXPAD@Z
_TEXT	SEGMENT
_namebuf$ = -300					; size = 256
_catchbuf$ = -44					; size = 32
_rankbuf$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initRacemanRankWN@@YAXPAD@Z PROC			; initRacemanRankWN, COMDAT

; 20787: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 01 00
	00		 sub	 esp, 300		; 0000012cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _data$[ebp]

; 20788: 	int i, j;
; 20789: 
; 20790: 	makeStringFromEscaped(data);

  00019	57		 push	 edi
  0001a	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 20791: 
; 20792: 	selStartLine = 0;
; 20793: 	char namebuf[256], catchbuf[32], rankbuf[8];
; 20794: 
; 20795: 	memset(linemsgWN, 0, sizeof(linemsgWN));

  0001f	68 d0 07 00 00	 push	 2000			; 000007d0H
  00024	6a 00		 push	 0
  00026	68 00 00 00 00	 push	 OFFSET ?linemsgWN@@3PAY0MI@DA ; linemsgWN
  0002b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, 0 ; selStartLine
  00035	e8 00 00 00 00	 call	 _memset

; 20796: 	ranktitle[0] = '\0';
; 20797: 	//lnmake = 0;
; 20798: 	//getStrSplit( (char *)msgWN, data, sizeof( msgWN[0] ),
; 20799: 	//	sizeof( msgWN )/sizeof( msgWN[0] ), 80 );
; 20800: 
; 20801: 	getStringToken(data, ' ', 1, sizeof(ranktitle) - 1, ranktitle);

  0003a	68 00 00 00 00	 push	 OFFSET ?ranktitle@@3PADA ; ranktitle
  0003f	6a 3b		 push	 59			; 0000003bH
  00041	6a 01		 push	 1
  00043	6a 20		 push	 32			; 00000020H
  00045	57		 push	 edi
  00046	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?ranktitle@@3PADA, 0
  0004d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00052	83 c4 24	 add	 esp, 36			; 00000024H
  00055	be 01 00 00 00	 mov	 esi, 1
  0005a	bb 00 00 00 00	 mov	 ebx, OFFSET ?linemsgWN@@3PAY0MI@DA ; linemsgWN
  0005f	90		 npad	 1
$LL4@initRacema:

; 20804: 		//å¤çå­ä¸²
; 20805: 		if (i % 3 == 1)

  00060	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  00065	8b ce		 mov	 ecx, esi
  00067	f7 e6		 mul	 esi
  00069	46		 inc	 esi
  0006a	d1 ea		 shr	 edx, 1
  0006c	8d 04 52	 lea	 eax, DWORD PTR [edx+edx*2]
  0006f	2b c8		 sub	 ecx, eax
  00071	83 f9 01	 cmp	 ecx, 1
  00074	75 14		 jne	 SHORT $LN5@initRacema

; 20806: 			getStringToken(data, ' ', i + 1, sizeof(rankbuf) - 1, rankbuf);

  00076	8d 45 f4	 lea	 eax, DWORD PTR _rankbuf$[ebp]
  00079	50		 push	 eax
  0007a	6a 07		 push	 7
  0007c	56		 push	 esi
  0007d	6a 20		 push	 32			; 00000020H
  0007f	57		 push	 edi
  00080	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00085	83 c4 14	 add	 esp, 20			; 00000014H
  00088	eb 51		 jmp	 SHORT $LN2@initRacema
$LN5@initRacema:

; 20807: 		else if (i % 3 == 2)

  0008a	83 f9 02	 cmp	 ecx, 2
  0008d	75 1a		 jne	 SHORT $LN7@initRacema

; 20808: 			getStringToken(data, ' ', i + 1, sizeof(namebuf) - 1, namebuf);

  0008f	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _namebuf$[ebp]
  00095	50		 push	 eax
  00096	68 ff 00 00 00	 push	 255			; 000000ffH
  0009b	56		 push	 esi
  0009c	6a 20		 push	 32			; 00000020H
  0009e	57		 push	 edi
  0009f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000a4	83 c4 14	 add	 esp, 20			; 00000014H
  000a7	eb 32		 jmp	 SHORT $LN2@initRacema
$LN7@initRacema:

; 20809: 		else {
; 20810: 			getStringToken(data, ' ', i + 1, sizeof(catchbuf) - 1, catchbuf);

  000a9	8d 45 d4	 lea	 eax, DWORD PTR _catchbuf$[ebp]
  000ac	50		 push	 eax
  000ad	6a 1f		 push	 31			; 0000001fH
  000af	56		 push	 esi
  000b0	6a 20		 push	 32			; 00000020H
  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 20811: 			//sprintf(msgWN[j]," %-7s%-18s%-16s%13d%12d%14d%", lvbuf, fmnamebuf, namebuf, sumdp, taldp-sumdp, taldp);				
; 20812: 			sprintf(linemsgWN[j], " %-10s%-27s%s", rankbuf, namebuf, catchbuf);

  000b8	8d 45 d4	 lea	 eax, DWORD PTR _catchbuf$[ebp]
  000bb	50		 push	 eax
  000bc	8d 85 d4 fe ff
	ff		 lea	 eax, DWORD PTR _namebuf$[ebp]
  000c2	50		 push	 eax
  000c3	8d 45 f4	 lea	 eax, DWORD PTR _rankbuf$[ebp]
  000c6	50		 push	 eax
  000c7	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IFIHGCPG@?5?$CF?910s?$CF?927s?$CFs@
  000cc	53		 push	 ebx
  000cd	e8 00 00 00 00	 call	 _sprintf
  000d2	83 c4 28	 add	 esp, 40			; 00000028H

; 20813: 			j++;

  000d5	81 c3 c8 00 00
	00		 add	 ebx, 200		; 000000c8H
$LN2@initRacema:

; 20802: 	j = 0;
; 20803: 	for (i = 1; i < 31; i++) {

  000db	83 fe 1f	 cmp	 esi, 31			; 0000001fH
  000de	7c 80		 jl	 SHORT $LL4@initRacema

; 20814: 		}
; 20815: 	}
; 20816: 
; 20817: }

  000e0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e3	5f		 pop	 edi
  000e4	5e		 pop	 esi
  000e5	33 cd		 xor	 ecx, ebp
  000e7	5b		 pop	 ebx
  000e8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ed	8b e5		 mov	 esp, ebp
  000ef	5d		 pop	 ebp
  000f0	c3		 ret	 0
?initRacemanRankWN@@YAXPAD@Z ENDP			; initRacemanRankWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?showContractWN@@YAXXZ
_TEXT	SEGMENT
_y$1$ = -1076						; size = 4
_x$1$ = -1072						; size = 4
tv1042 = -1072						; size = 4
_dataBuf$ = -1068					; size = 1024
_sideComment$1 = -44					; size = 40
__$ArrayPad$ = -4					; size = 4
?showContractWN@@YAXXZ PROC				; showContractWN, COMDAT

; 20563: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 04 00
	00		 sub	 esp, 1076		; 00000434H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 20564: #define MAX_LINE	40
; 20565: #define MAX_CHAR	56
; 20566: #define LINE_PER_PAGE	8
; 20567: 	static int winX, winY;
; 20568: 	static int winW, winH;
; 20569: 	static int fontId[] = { -2, -2, -2, -2, -2, -2, -2, -2 };
; 20570: 	static int page = 0;
; 20571: 	static int max_page = 0;
; 20572: 	static char msgLine[MAX_LINE][MAX_CHAR + 1];
; 20573: 	char* pStart;
; 20574: 	int selFontBtnId = -1;
; 20575: 	char dataBuf[1024];
; 20576: 
; 20577: 	int id;
; 20578: 	int i;
; 20579: 
; 20580: 	static int totalMsgLine;
; 20581: 	static int lineSkip;
; 20582: 
; 20583: 	static int inBlacklist = FALSE;
; 20584: 
; 20585: 
; 20586: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	0f 85 59 01 00
	00		 jne	 $LN99@showContra

; 20587: 	{
; 20588: 		//winW = msgWN_W;
; 20589: 		//winH = msgWN_H;
; 20590: 		winW = 9;
; 20591: 		winH = 8;
; 20592: 		winX = (640 - winW * 64) / 2;
; 20593: 		winY = (456 - winH * 48) / 2;
; 20594: 
; 20595: 
; 20596: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00023	6a 01		 push	 1
  00025	6a 00		 push	 0
  00027	6a 08		 push	 8
  00029	6a 09		 push	 9
  0002b	6a 24		 push	 36			; 00000024H
  0002d	6a 20		 push	 32			; 00000020H
  0002f	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?winW@?1??showContractWN@@YAXXZ@4HA, 9
  00039	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??showContractWN@@YAXXZ@4HA, 8
  00043	c7 05 00 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA, 32 ; 00000020H
  0004d	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA, 36 ; 00000024H
  00057	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 20597: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 20598: 		winX = ptActMenuWin->x;
; 20599: 		winY = ptActMenuWin->y;
; 20600: #endif
; 20601: 
; 20602: 		// å¥çº¦åå®¹æç
; 20603: 		memset(msgLine, 0, sizeof(msgLine));

  0005c	68 e8 08 00 00	 push	 2280			; 000008e8H
  00061	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00066	6a 00		 push	 0
  00068	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006b	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0006e	68 00 00 00 00	 push	 OFFSET ?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA
  00073	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA, ecx
  00079	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA, eax
  0007e	e8 00 00 00 00	 call	 _memset
  00083	83 c4 24	 add	 esp, 36			; 00000024H

; 20604: 		page = 0;

  00086	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA, 0

; 20605: 		max_page = 0;

  00090	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?max_page@?1??showContractWN@@YAXXZ@4HA, 0

; 20606: 		pStart = contractDetail;

  0009a	be 00 00 00 00	 mov	 esi, OFFSET ?contractDetail@@3PADA ; contractDetail

; 20607: 		for (i = 0; i < MAX_LINE; i++) {

  0009f	33 db		 xor	 ebx, ebx
  000a1	bf 00 00 00 00	 mov	 edi, OFFSET ?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA
  000a6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL4@showContra:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  000b0	68 00 00 00 00	 push	 OFFSET ??_C@_02JOGGLHBA@?2n@
  000b5	56		 push	 esi
  000b6	89 b5 d0 fb ff
	ff		 mov	 DWORD PTR tv1042[ebp], esi
  000bc	e8 00 00 00 00	 call	 _strstr
  000c1	83 c4 08	 add	 esp, 8
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 20610: 			if (pFind != NULL && pFind - pStart < MAX_CHAR) { // ææ¢è¡ç¬¦å·ä¸æªè¶è¡

  000c4	85 c0		 test	 eax, eax
  000c6	74 0e		 je	 SHORT $LN94@showContra
  000c8	8b c8		 mov	 ecx, eax
  000ca	2b ce		 sub	 ecx, esi
  000cc	83 f9 38	 cmp	 ecx, 56			; 00000038H
  000cf	7d 1d		 jge	 SHORT $LN100@showContra

; 20611: 				strncpy(msgLine[i], pStart, pFind - pStart);
; 20612: 				pStart = pFind + 2;

  000d1	8d 70 02	 lea	 esi, DWORD PTR [eax+2]

; 20613: 			}

  000d4	eb 1f		 jmp	 SHORT $LN2@showContra
$LN94@showContra:

; 20614: 			else if (pFind != NULL && pFind - pStart >= MAX_CHAR) { // ææ¢è¡ç¬¦å·ä½å·²è¶è¡
; 20615: 				strncpy(msgLine[i], pStart, MAX_CHAR);
; 20616: 				pStart += MAX_CHAR;
; 20617: 			}
; 20618: 			else if (strlen(pStart) > MAX_CHAR) {

  000d6	8b ce		 mov	 ecx, esi
  000d8	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  000db	0f 1f 44 00 00	 npad	 5
$LL102@showContra:
  000e0	8a 01		 mov	 al, BYTE PTR [ecx]
  000e2	41		 inc	 ecx
  000e3	84 c0		 test	 al, al
  000e5	75 f9		 jne	 SHORT $LL102@showContra
  000e7	2b ca		 sub	 ecx, edx
  000e9	83 f9 38	 cmp	 ecx, 56			; 00000038H
  000ec	76 25		 jbe	 SHORT $LN24@showContra
$LN100@showContra:

; 20607: 		for (i = 0; i < MAX_LINE; i++) {

  000ee	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  000f3	03 f1		 add	 esi, ecx
$LN2@showContra:
  000f5	51		 push	 ecx
  000f6	ff b5 d0 fb ff
	ff		 push	 DWORD PTR tv1042[ebp]
  000fc	57		 push	 edi
  000fd	e8 00 00 00 00	 call	 _strncpy
  00102	83 c7 39	 add	 edi, 57			; 00000039H
  00105	83 c4 0c	 add	 esp, 12			; 0000000cH
  00108	43		 inc	 ebx
  00109	81 ff e8 08 00
	00		 cmp	 edi, OFFSET ?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA+2280
  0010f	7c 9f		 jl	 SHORT $LL4@showContra
  00111	eb 19		 jmp	 SHORT $LN3@showContra
$LN24@showContra:

; 20619: 				strncpy(msgLine[i], pStart, MAX_CHAR);
; 20620: 				pStart += MAX_CHAR;
; 20621: 			}
; 20622: 			else {
; 20623: 				strncpy(msgLine[i], pStart, strlen(pStart));

  00113	8b ce		 mov	 ecx, esi
  00115	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL103@showContra:
  00118	8a 01		 mov	 al, BYTE PTR [ecx]
  0011a	41		 inc	 ecx
  0011b	84 c0		 test	 al, al
  0011d	75 f9		 jne	 SHORT $LL103@showContra
  0011f	2b ca		 sub	 ecx, edx
  00121	51		 push	 ecx
  00122	56		 push	 esi
  00123	57		 push	 edi
  00124	e8 00 00 00 00	 call	 _strncpy
  00129	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@showContra:

; 20624: 				pStart += strlen(pStart);
; 20625: 				break;
; 20626: 			}
; 20627: 
; 20628: 		}
; 20629: 		max_page = i / LINE_PER_PAGE;
; 20630: 
; 20631: 		//lineSkip = 20;
; 20632: 		//totalMsgLine = (winH*48-56)/lineSkip;
; 20633: 
; 20634: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 20635: 		{
; 20636: 			fontId[i] = -2;

  0012c	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00133	8b c3		 mov	 eax, ebx
  00135	99		 cdq
  00136	83 e2 07	 and	 edx, 7

; 20637: 		}
; 20638: 
; 20639: 		play_se(202, 320, 240);	// ????????

  00139	68 f0 00 00 00	 push	 240			; 000000f0H
  0013e	03 c2		 add	 eax, edx
  00140	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA, xmm0
  00147	c1 f8 03	 sar	 eax, 3
  0014a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00151	68 40 01 00 00	 push	 320			; 00000140H
  00156	68 ca 00 00 00	 push	 202			; 000000caH
  0015b	a3 00 00 00 00	 mov	 DWORD PTR ?max_page@?1??showContractWN@@YAXXZ@4HA, eax
  00160	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+16, xmm0
  00167	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0016c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20640: 
; 20641: 
; 20642: 	}
; 20643: 
; 20644: 
; 20645: 	if (ptActMenuWin != NULL)

  0016f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00176	0f 84 ea 04 00
	00		 je	 $LN53@showContra
$LN99@showContra:

; 20646: 	{
; 20647: 		// ?????î±î¶îî
; 20648: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0017c	6a 08		 push	 8
  0017e	68 00 00 00 00	 push	 OFFSET ?fontId@?1??showContractWN@@YAXXZ@4PAHA
  00183	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00188	83 c4 08	 add	 esp, 8
  0018b	8b f0		 mov	 esi, eax

; 20649: 
; 20650: 		if (CheckMenuFlag()
; 20651: 			|| (joy_trg[0] & JOY_ESC)
; 20652: 			|| actBtn == 1
; 20653: 			|| menuBtn == 1
; 20654: 			|| disconnectServerFlag == TRUE
; 20655: 			|| wnCloseFlag == 1)

  0018d	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00192	85 c0		 test	 eax, eax
  00194	0f 85 78 04 00
	00		 jne	 $LN28@showContra
  0019a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  001a4	0f 85 68 04 00
	00		 jne	 $LN28@showContra
  001aa	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  001b2	0f 84 5a 04 00
	00		 je	 $LN28@showContra
  001b8	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001c0	0f 84 4c 04 00
	00		 je	 $LN28@showContra
  001c6	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001cd	0f 84 3f 04 00
	00		 je	 $LN28@showContra
  001d3	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001db	0f 84 31 04 00
	00		 je	 $LN28@showContra

; 20662: 		}
; 20663: 
; 20664: 		if (id >= 0) {

  001e1	85 f6		 test	 esi, esi
  001e3	78 21		 js	 SHORT $LN105@showContra

; 20665: 			switch (id) {

  001e5	83 fe 07	 cmp	 esi, 7
  001e8	0f 87 4e 04 00
	00		 ja	 $LN41@showContra
  001ee	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN104@showContra[esi*4]
$LN30@showContra:

; 20666: 			case 0:
; 20667: 			case 1:
; 20668: 			case 2:
; 20669: 			case 3:
; 20670: 				// ç­¾å
; 20671: 				if (contractSignIndex != id)

  001f5	83 c8 ff	 or	 eax, -1
  001f8	39 35 00 00 00
	00		 cmp	 DWORD PTR ?contractSignIndex@@3HA, esi ; contractSignIndex
  001fe	0f 45 c6	 cmovne	 eax, esi

; 20672: 					contractSignIndex = id;
; 20673: 				else
; 20674: 					contractSignIndex = -1;
; 20675: 				break;

  00201	a3 00 00 00 00	 mov	 DWORD PTR ?contractSignIndex@@3HA, eax ; contractSignIndex
$LN105@showContra:

; 20690: 				return;
; 20691: 			}
; 20692: 		}
; 20693: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 20694: 		{
; 20695: 			fontId[i] = -2;

  00206	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
$LN8@showContra:
  0020c	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 20696: 		}
; 20697: 
; 20698: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00213	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00218	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA, xmm0
  0021f	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00226	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+16, xmm0
  0022d	85 c0		 test	 eax, eax
  0022f	0f 84 31 04 00
	00		 je	 $LN53@showContra
  00235	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00239	0f 8c 27 04 00
	00		 jl	 $LN53@showContra

; 20699: 		{
; 20700: 			char sideComment[4][10] = { "ç²æ¹", "ä¹æ¹", "ä¸æ¹", "ä¸æ¹" };

  0023f	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04JNNPBDKK@?K?$KD?$NL?$LA@
  00244	33 ff		 xor	 edi, edi
  00246	89 45 d4	 mov	 DWORD PTR _sideComment$1[ebp], eax
  00249	33 f6		 xor	 esi, esi
  0024b	0f b6 05 04 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_04JNNPBDKK@?K?$KD?$NL?$LA@+4
  00252	88 45 d8	 mov	 BYTE PTR _sideComment$1[ebp+4], al
  00255	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04NFLPMLHN@?k?$OA?$NL?$LA@
  0025a	89 45 de	 mov	 DWORD PTR _sideComment$1[ebp+10], eax
  0025d	0f b6 05 04 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_04NFLPMLHN@?k?$OA?$NL?$LA@+4
  00264	88 45 e2	 mov	 BYTE PTR _sideComment$1[ebp+14], al
  00267	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04NLDKAEJ@?$NM?$LA?$NL?$LA@
  0026c	89 45 e8	 mov	 DWORD PTR _sideComment$1[ebp+20], eax
  0026f	0f b6 05 04 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_04NLDKAEJ@?$NM?$LA?$NL?$LA@+4
  00276	88 45 ec	 mov	 BYTE PTR _sideComment$1[ebp+24], al
  00279	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04FHAMEFIC@?o?K?$NL?$LA@
  0027e	89 45 f2	 mov	 DWORD PTR _sideComment$1[ebp+30], eax
  00281	0f b6 05 04 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_04FHAMEFIC@?o?K?$NL?$LA@+4
  00288	c7 45 d9 00 00
	00 00		 mov	 DWORD PTR _sideComment$1[ebp+5], 0
  0028f	c6 45 dd 00	 mov	 BYTE PTR _sideComment$1[ebp+9], 0
  00293	c7 45 e3 00 00
	00 00		 mov	 DWORD PTR _sideComment$1[ebp+15], 0
  0029a	c6 45 e7 00	 mov	 BYTE PTR _sideComment$1[ebp+19], 0
  0029e	c7 45 ed 00 00
	00 00		 mov	 DWORD PTR _sideComment$1[ebp+25], 0
  002a5	c6 45 f1 00	 mov	 BYTE PTR _sideComment$1[ebp+29], 0
  002a9	88 45 f6	 mov	 BYTE PTR _sideComment$1[ebp+34], al
  002ac	c7 45 f7 00 00
	00 00		 mov	 DWORD PTR _sideComment$1[ebp+35], 0
  002b3	c6 45 fb 00	 mov	 BYTE PTR _sideComment$1[ebp+39], 0
$LL15@showContra:

; 20704: 				StockFontBufferExt(winX + 30, winY + (i * 26) + 30,

  002b7	8d 04 cf	 lea	 eax, DWORD PTR [edi+ecx*8]
  002ba	6b c0 39	 imul	 eax, eax, 57
  002bd	6a 12		 push	 18			; 00000012H
  002bf	6a 00		 push	 0
  002c1	05 00 00 00 00	 add	 eax, OFFSET ?msgLine@?1??showContractWN@@YAXXZ@4PAY0DJ@DA
  002c6	50		 push	 eax
  002c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  002cc	83 c0 1e	 add	 eax, 30			; 0000001eH
  002cf	6a 00		 push	 0
  002d1	03 c6		 add	 eax, esi
  002d3	6a 01		 push	 1
  002d5	50		 push	 eax
  002d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  002db	83 c0 1e	 add	 eax, 30			; 0000001eH
  002de	50		 push	 eax
  002df	e8 00 00 00 00	 call	 ?StockFontBufferExt@@YAHHHDHPADHH@Z ; StockFontBufferExt
  002e4	83 c6 1a	 add	 esi, 26			; 0000001aH
  002e7	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  002ea	83 c4 1c	 add	 esp, 28			; 0000001cH
  002ed	81 fe d0 00 00
	00		 cmp	 esi, 208		; 000000d0H
  002f3	7d 7f		 jge	 SHORT $LN111@showContra

; 20701: 
; 20702: 			// æ¾ç¤ºå¥çº¦åå®¹
; 20703: 			for (i = 0; i < LINE_PER_PAGE; i++) {

  002f5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
  002fb	eb ba		 jmp	 SHORT $LL15@showContra
$LN36@showContra:

; 20676: 			case 6: // ??
; 20677: 				if (page > 0)	page--;

  002fd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
  00303	85 c9		 test	 ecx, ecx
  00305	0f 8e 01 ff ff
	ff		 jle	 $LN8@showContra
  0030b	49		 dec	 ecx
  0030c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA, ecx

; 20678: 				break;

  00312	e9 f5 fe ff ff	 jmp	 $LN8@showContra
$LN38@showContra:

; 20679: 			case 7: // ??
; 20680: 				if (page < max_page)	page++;

  00317	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
  0031d	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?max_page@?1??showContractWN@@YAXXZ@4HA
  00323	0f 8d e3 fe ff
	ff		 jge	 $LN8@showContra
  00329	41		 inc	 ecx
  0032a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA, ecx

; 20681: 				break;

  00330	e9 d7 fe ff ff	 jmp	 $LN8@showContra
$LN40@showContra:

; 20682: 			case 4: // ??
; 20683: 				if (contractSignIndex != -1)

  00335	a1 00 00 00 00	 mov	 eax, DWORD PTR ?contractSignIndex@@3HA ; contractSignIndex
  0033a	83 f8 ff	 cmp	 eax, -1
  0033d	0f 84 f9 02 00
	00		 je	 $LN41@showContra

; 20684: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, contractSignIndex, "");

  00343	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00348	50		 push	 eax
  00349	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0034f	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00355	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0035b	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00361	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00367	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0036c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0036f	e9 c8 02 00 00	 jmp	 $LN41@showContra
$LN111@showContra:

; 20705: 					FONT_PRIO_FRONT, FONT_PAL_WHITE, msgLine[(page * LINE_PER_PAGE) + i], 0, 18);
; 20706: 			}
; 20707: 
; 20708: 			for (i = 0; i < contractArgnum; i++) {

  00374	33 f6		 xor	 esi, esi
  00376	39 35 00 00 00
	00		 cmp	 DWORD PTR ?contractArgnum@@3HA, esi ; contractArgnum
  0037c	0f 8e 21 01 00
	00		 jle	 $LN17@showContra
  00382	8d 7d d4	 lea	 edi, DWORD PTR _sideComment$1[ebp]
  00385	bb 04 00 00 00	 mov	 ebx, OFFSET ?contractSign@@3PAUcontractSignTag@@A+4
  0038a	66 0f 1f 44 00
	00		 npad	 6
$LL18@showContra:

; 20709: 				int x, y;
; 20710: 
; 20711: 				// ç­¾åæ æ¨ªæ
; 20712: 				//x = winX+40+(i%2)*240;
; 20713: 				//y = winY+(winH*48)-130+((i/2)*28);
; 20714: 				// ç­¾åæ çºµæ
; 20715: 				x = winX + 40;

  00390	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  00395	83 c0 28	 add	 eax, 40			; 00000028H
  00398	89 85 d0 fb ff
	ff		 mov	 DWORD PTR _x$1$[ebp], eax

; 20716: 				y = winY + (winH * 48) - 110 + (i * 24);

  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??showContractWN@@YAXXZ@4HA
  003a3	8d 04 46	 lea	 eax, DWORD PTR [esi+eax*2]
  003a6	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  003a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  003ae	8d 04 c8	 lea	 eax, DWORD PTR [eax+ecx*8]
  003b1	83 c0 92	 add	 eax, -110		; ffffff92H

; 20717: 
; 20718: 				if (contractSign[i].used) {

  003b4	83 7b fc 00	 cmp	 DWORD PTR [ebx-4], 0
  003b8	89 85 cc fb ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  003be	74 3d		 je	 SHORT $LN44@showContra

; 20719: 					// å·²ç­¾è¿åçæ ä½
; 20720: 					sprintf(dataBuf, "%sï¼ %s  %s", sideComment[i],

  003c0	53		 push	 ebx
  003c1	8d 43 20	 lea	 eax, DWORD PTR [ebx+32]
  003c4	50		 push	 eax
  003c5	57		 push	 edi
  003c6	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003cc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EOHPHPFN@?$CFs?$KD?$LK?5?$CFs?5?5?$CFs@
  003d1	50		 push	 eax
  003d2	e8 00 00 00 00	 call	 _sprintf

; 20721: 						contractSign[i].fmname, contractSign[i].name);
; 20722: 					StockFontBuffer(x, y,

  003d7	6a 00		 push	 0
  003d9	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003df	50		 push	 eax
  003e0	6a 00		 push	 0
  003e2	6a 01		 push	 1
  003e4	ff b5 cc fb ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  003ea	ff b5 d0 fb ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  003f0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003f5	83 c4 2c	 add	 esp, 44			; 0000002cH

; 20723: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 20724: 				}

  003f8	e9 93 00 00 00	 jmp	 $LN16@showContra
$LN44@showContra:

; 20725: 				else {
; 20726: 					// é¢å®ç­¾åçæ ä½
; 20727: 					if (contractSignIndex == i) {

  003fd	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00403	39 35 00 00 00
	00		 cmp	 DWORD PTR ?contractSignIndex@@3HA, esi ; contractSignIndex
  00409	75 39		 jne	 SHORT $LN46@showContra

; 20728: 						sprintf(dataBuf, "%sï¼ %s  %s", sideComment[i], pc.familyName, pc.name);

  0040b	68 70 00 00 00	 push	 OFFSET ?pc@@3UPC@@A+112
  00410	68 f6 50 00 00	 push	 OFFSET ?pc@@3UPC@@A+20726
  00415	57		 push	 edi
  00416	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EOHPHPFN@?$CFs?$KD?$LK?5?$CFs?5?5?$CFs@
  0041b	50		 push	 eax
  0041c	e8 00 00 00 00	 call	 _sprintf

; 20729: 						fontId[i] =

  00421	6a 02		 push	 2
  00423	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00429	50		 push	 eax
  0042a	6a 06		 push	 6
  0042c	6a 01		 push	 1
  0042e	ff b5 cc fb ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  00434	ff b5 d0 fb ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  0043a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0043f	83 c4 2c	 add	 esp, 44			; 0000002cH

; 20730: 							StockFontBuffer(x, y, FONT_PRIO_FRONT, FONT_PAL_RED, dataBuf, 2);
; 20731: 					}

  00442	eb 45		 jmp	 SHORT $LN112@showContra
$LN46@showContra:

; 20732: 					else {
; 20733: 						// å¯ç­¾åçæ ä½
; 20734: 						if (contractSigned == FALSE) {

  00444	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?contractSigned@@3HA, 0 ; contractSigned
  0044b	57		 push	 edi
  0044c	75 0f		 jne	 SHORT $LN48@showContra

; 20735: 							sprintf(dataBuf, "%sï¼   å¨æ­¤ç­¾å", sideComment[i]);

  0044e	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KIMCNEJC@?$CFs?$KD?$LK?5?5?5?n?$KE?s?$KO?$DP?Y?$KD@
  00453	50		 push	 eax
  00454	e8 00 00 00 00	 call	 _sprintf

; 20736: 							fontId[i] =

  00459	6a 02		 push	 2

; 20737: 								StockFontBuffer(x, y, FONT_PRIO_FRONT, FONT_PAL_BLUE2, dataBuf, 2);
; 20738: 						}

  0045b	eb 0d		 jmp	 SHORT $LN113@showContra
$LN48@showContra:

; 20739: 						// å·²ç­¾è¿åä¸å¯åç­¾
; 20740: 						else {
; 20741: 							sprintf(dataBuf, "%sï¼   å°æªç­¾å", sideComment[i]);

  0045d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IJDIOBDJ@?$CFs?$KD?$LK?5?5?5?$DP?Z?$LB?$DP?Y?$KD@
  00462	50		 push	 eax
  00463	e8 00 00 00 00	 call	 _sprintf

; 20742: 							fontId[i] =

  00468	6a 00		 push	 0
$LN113@showContra:

; 20705: 					FONT_PRIO_FRONT, FONT_PAL_WHITE, msgLine[(page * LINE_PER_PAGE) + i], 0, 18);
; 20706: 			}
; 20707: 
; 20708: 			for (i = 0; i < contractArgnum; i++) {

  0046a	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00470	50		 push	 eax
  00471	6a 08		 push	 8
  00473	6a 01		 push	 1
  00475	ff b5 cc fb ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  0047b	ff b5 d0 fb ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  00481	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00486	83 c4 24	 add	 esp, 36			; 00000024H
$LN112@showContra:
  00489	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA[esi*4], eax
$LN16@showContra:
  00490	46		 inc	 esi
  00491	83 c7 0a	 add	 edi, 10			; 0000000aH
  00494	83 c3 44	 add	 ebx, 68			; 00000044H
  00497	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?contractArgnum@@3HA ; contractArgnum
  0049d	0f 8c ed fe ff
	ff		 jl	 $LL18@showContra
$LN17@showContra:

; 20743: 								StockFontBuffer(x, y, FONT_PRIO_FRONT, FONT_PAL_BLUE2, dataBuf, 0);
; 20744: 						}
; 20745: 					}
; 20746: 				}
; 20747: 			}
; 20748: 
; 20749: 			fontId[4] =

  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??showContractWN@@YAXXZ@4HA
  004a8	6a 02		 push	 2
  004aa	68 00 00 00 00	 push	 OFFSET ??_C@_05BCDBBDGC@?$DP?$KB?$KB?o?R@
  004af	6a 04		 push	 4
  004b1	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  004b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  004b9	83 c0 ce	 add	 eax, -50		; ffffffceH
  004bc	c1 e1 04	 shl	 ecx, 4
  004bf	03 c1		 add	 eax, ecx
  004c1	6a 01		 push	 1
  004c3	50		 push	 eax
  004c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  004c9	83 c0 64	 add	 eax, 100		; 00000064H
  004cc	50		 push	 eax
  004cd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004d2	83 c4 18	 add	 esp, 24			; 00000018H
  004d5	a3 10 00 00 00	 mov	 DWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+16, eax

; 20750: 				StockFontBuffer(winX + 100, winY + (winH * 48) - 50,
; 20751: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ç¡®ãå®", 2);
; 20752: 
; 20753: 			if (contractTime[0] != NULL) {

  004da	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?contractTime@@3PADA, 0
  004e1	74 59		 je	 SHORT $LN50@showContra

; 20754: 				sprintf(dataBuf, "ç«ä¹¦æ¥ï¼%s", contractTime);

  004e3	68 00 00 00 00	 push	 OFFSET ?contractTime@@3PADA ; contractTime
  004e8	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  004ee	68 00 00 00 00	 push	 OFFSET ??_C@_09OOIHKOPD@?X?$KB?$DP?l?m?$KD?$LK?$CFs@
  004f3	50		 push	 eax
  004f4	e8 00 00 00 00	 call	 _sprintf

; 20755: 				StockFontBuffer(winX + (winW * 64) - 200, winY + (winH * 48) - 50,

  004f9	6a 00		 push	 0
  004fb	8d 85 d4 fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00501	50		 push	 eax
  00502	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??showContractWN@@YAXXZ@4HA
  00507	6a 00		 push	 0
  00509	6a 01		 push	 1
  0050b	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0050e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  00513	83 c0 ce	 add	 eax, -50		; ffffffceH
  00516	c1 e1 04	 shl	 ecx, 4
  00519	03 c1		 add	 eax, ecx
  0051b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winW@?1??showContractWN@@YAXXZ@4HA
  00521	50		 push	 eax
  00522	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  00527	c1 e1 06	 shl	 ecx, 6
  0052a	05 38 ff ff ff	 add	 eax, -200		; ffffff38H
  0052f	03 c1		 add	 eax, ecx
  00531	50		 push	 eax
  00532	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00537	83 c4 24	 add	 esp, 36			; 00000024H

; 20756: 					FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 20757: 			}

  0053a	eb 44		 jmp	 SHORT $LN51@showContra
$LN50@showContra:

; 20758: 			else {
; 20759: 				fontId[5] =

  0053c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??showContractWN@@YAXXZ@4HA
  00541	6a 02		 push	 2
  00543	68 00 00 00 00	 push	 OFFSET ??_C@_06GJCJAMOC@?v?$KC?$KB?$KB?a?$LM@
  00548	6a 04		 push	 4
  0054a	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0054d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  00552	83 c0 ce	 add	 eax, -50		; ffffffceH
  00555	c1 e1 04	 shl	 ecx, 4
  00558	03 c1		 add	 eax, ecx
  0055a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winW@?1??showContractWN@@YAXXZ@4HA
  00560	6a 01		 push	 1
  00562	50		 push	 eax
  00563	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  00568	c1 e1 06	 shl	 ecx, 6
  0056b	05 6a ff ff ff	 add	 eax, -150		; ffffff6aH
  00570	03 c1		 add	 eax, ecx
  00572	50		 push	 eax
  00573	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00578	83 c4 18	 add	 esp, 24			; 00000018H
  0057b	a3 14 00 00 00	 mov	 DWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+20, eax
$LN51@showContra:

; 20760: 					StockFontBuffer(winX + (winW * 64) - 150, winY + (winH * 48) - 50,
; 20761: 						FONT_PRIO_FRONT, FONT_PAL_YELLOW, "åãæ¶", 2);
; 20762: 			}
; 20763: 
; 20764: 			if (page > 0)

  00580	a1 00 00 00 00	 mov	 eax, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
  00585	85 c0		 test	 eax, eax
  00587	7e 33		 jle	 SHORT $LN52@showContra

; 20765: 				fontId[6] =

  00589	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  0058e	6a 02		 push	 2
  00590	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00595	6a 04		 push	 4
  00597	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  0059c	6a 01		 push	 1
  0059e	50		 push	 eax
  0059f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  005a4	05 96 00 00 00	 add	 eax, 150		; 00000096H
  005a9	50		 push	 eax
  005aa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005af	a3 18 00 00 00	 mov	 DWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+24, eax
  005b4	83 c4 18	 add	 esp, 24			; 00000018H
  005b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?page@?1??showContractWN@@YAXXZ@4HA
$LN52@showContra:

; 20766: 				StockFontBuffer(winX + 150, winY + 248,
; 20767: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "??", 2);
; 20768: 
; 20769: 			if (page < max_page)

  005bc	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?max_page@?1??showContractWN@@YAXXZ@4HA
  005c2	0f 8d 9e 00 00
	00		 jge	 $LN53@showContra

; 20770: 				fontId[7] =

  005c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showContractWN@@YAXXZ@4HA
  005cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winW@?1??showContractWN@@YAXXZ@4HA
  005d3	05 f8 00 00 00	 add	 eax, 248		; 000000f8H
  005d8	6a 02		 push	 2
  005da	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  005df	6a 04		 push	 4
  005e1	6a 01		 push	 1
  005e3	50		 push	 eax
  005e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showContractWN@@YAXXZ@4HA
  005e9	c1 e1 06	 shl	 ecx, 6
  005ec	05 38 ff ff ff	 add	 eax, -200		; ffffff38H
  005f1	03 c1		 add	 eax, ecx
  005f3	50		 push	 eax
  005f4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005f9	83 c4 18	 add	 esp, 24			; 00000018H
  005fc	a3 1c 00 00 00	 mov	 DWORD PTR ?fontId@?1??showContractWN@@YAXXZ@4PAHA+28, eax
  00601	5f		 pop	 edi

; 20771: 				StockFontBuffer(winX + (winW * 64) - 200, winY + 248,
; 20772: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "??", 2);
; 20773: 
; 20774: 		}
; 20775: 	}
; 20776: 
; 20777: }

  00602	5e		 pop	 esi
  00603	5b		 pop	 ebx
  00604	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00607	33 cd		 xor	 ecx, ebp
  00609	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0060e	8b e5		 mov	 esp, ebp
  00610	5d		 pop	 ebp
  00611	c3		 ret	 0
$LN28@showContra:

; 20656: 		{
; 20657: 			id = 100;
; 20658: 			windowTypeWN = -1;
; 20659: 			wnCloseFlag = 0;
; 20660: 			DeathAction(ptActMenuWin);

  00612	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00618	33 c0		 xor	 eax, eax
  0061a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00624	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  0062a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0062f	83 c4 04	 add	 esp, 4

; 20661: 			ptActMenuWin = NULL;

  00632	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN41@showContra:

; 20685: 			default:
; 20686: 				windowTypeWN = -1;
; 20687: 				wnCloseFlag = 0;
; 20688: 				DeathAction(ptActMenuWin);

  0063c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00642	33 c0		 xor	 eax, eax
  00644	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0064e	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00654	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00659	83 c4 04	 add	 esp, 4

; 20689: 				ptActMenuWin = NULL;

  0065c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN53@showContra:

; 20771: 				StockFontBuffer(winX + (winW * 64) - 200, winY + 248,
; 20772: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "??", 2);
; 20773: 
; 20774: 		}
; 20775: 	}
; 20776: 
; 20777: }

  00666	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00669	5f		 pop	 edi
  0066a	5e		 pop	 esi
  0066b	33 cd		 xor	 ecx, ebp
  0066d	5b		 pop	 ebx
  0066e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00673	8b e5		 mov	 esp, ebp
  00675	5d		 pop	 ebp
  00676	c3		 ret	 0
  00677	90		 npad	 1
$LN104@showContra:
  00678	00 00 00 00	 DD	 $LN30@showContra
  0067c	00 00 00 00	 DD	 $LN30@showContra
  00680	00 00 00 00	 DD	 $LN30@showContra
  00684	00 00 00 00	 DD	 $LN30@showContra
  00688	00 00 00 00	 DD	 $LN40@showContra
  0068c	00 00 00 00	 DD	 $LN41@showContra
  00690	00 00 00 00	 DD	 $LN36@showContra
  00694	00 00 00 00	 DD	 $LN38@showContra
?showContractWN@@YAXXZ ENDP				; showContractWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initContractWN@@YAXPAD@Z
_TEXT	SEGMENT
tv259 = -1096						; size = 4
_contractArg$ = -1092					; size = 512
_buf$ = -580						; size = 512
_token$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initContractWN@@YAXPAD@Z PROC				; initContractWN, COMDAT

; 20526: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 04 00
	00		 sub	 esp, 1096		; 00000448H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 20527: 	char	buf[512], token[64];
; 20528: 	int		i, index;
; 20529: 	char	contractArg[512] = "";

  00018	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _contractArg$[ebp]
  0001e	57		 push	 edi
  0001f	68 00 02 00 00	 push	 512			; 00000200H
  00024	6a 00		 push	 0
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 _memset

; 20530: 
; 20531: 	strcpy(contractTime, "");
; 20532: 
; 20533: 	getStringToken(data, '|', 1, sizeof(contractDetail) - 1, contractDetail);

  0002c	68 00 00 00 00	 push	 OFFSET ?contractDetail@@3PADA ; contractDetail
  00031	68 ff 07 00 00	 push	 2047			; 000007ffH
  00036	6a 01		 push	 1
  00038	6a 7c		 push	 124			; 0000007cH
  0003a	56		 push	 esi
  0003b	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?contractTime@@3PADA, 0
  00042	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 20534: 	getStringToken(data, '|', 2, sizeof(buf) - 1, buf);

  00047	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	68 ff 01 00 00	 push	 511			; 000001ffH
  00053	6a 02		 push	 2
  00055	6a 7c		 push	 124			; 0000007cH
  00057	56		 push	 esi
  00058	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 20535: 	contractArgnum = atoi(buf);

  0005d	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 _atoi
  00069	a3 00 00 00 00	 mov	 DWORD PTR ?contractArgnum@@3HA, eax ; contractArgnum

; 20536: 	getStringToken(data, '|', 3, sizeof(contractArg) - 1, contractArg);

  0006e	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _contractArg$[ebp]
  00074	50		 push	 eax
  00075	68 ff 01 00 00	 push	 511			; 000001ffH
  0007a	6a 03		 push	 3
  0007c	6a 7c		 push	 124			; 0000007cH
  0007e	56		 push	 esi
  0007f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00084	83 c4 4c	 add	 esp, 76			; 0000004cH

; 20537: 	getStringToken(data, '|', 4, sizeof(contractTime) - 1, contractTime);

  00087	68 00 00 00 00	 push	 OFFSET ?contractTime@@3PADA ; contractTime
  0008c	68 ff 01 00 00	 push	 511			; 000001ffH
  00091	6a 04		 push	 4
  00093	6a 7c		 push	 124			; 0000007cH
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0009b	83 c4 14	 add	 esp, 20			; 00000014H

; 20538: 
; 20539: 	for (i = 0; i < 4; i++) {
; 20540: 		contractSign[i].used = FALSE;

  0009e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?contractSign@@3PAUcontractSignTag@@A, 0
  000a8	c7 05 44 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?contractSign@@3PAUcontractSignTag@@A+68, 0

; 20541: 	}
; 20542: 	contractSignIndex = -1;
; 20543: 	contractSigned = FALSE;
; 20544: 
; 20545: 	for (i = 0; i < 4; i++) {

  000b2	33 db		 xor	 ebx, ebx
  000b4	c7 05 88 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?contractSign@@3PAUcontractSignTag@@A+136, 0
  000be	c7 05 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?contractSign@@3PAUcontractSignTag@@A+204, 0
  000c8	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?contractSignIndex@@3HA, -1 ; contractSignIndex
  000d2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?contractSigned@@3HA, 0 ; contractSigned
  000dc	0f 1f 40 00	 npad	 4
$LL7@initContra:

; 20546: 		if (getStringToken(contractArg, ',', i + 1, sizeof(buf) - 1, buf) != 0)

  000e0	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000e6	43		 inc	 ebx
  000e7	50		 push	 eax
  000e8	68 ff 01 00 00	 push	 511			; 000001ffH
  000ed	53		 push	 ebx
  000ee	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _contractArg$[ebp]
  000f4	6a 2c		 push	 44			; 0000002cH
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000fc	83 c4 14	 add	 esp, 20			; 00000014H
  000ff	85 c0		 test	 eax, eax
  00101	0f 85 d3 00 00
	00		 jne	 $LN16@initContra

; 20547: 			break;
; 20548: 		if (strlen(buf) == 0)	break;

  00107	8d 8d bc fd ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0010d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL29@initContra:
  00110	8a 01		 mov	 al, BYTE PTR [ecx]
  00112	41		 inc	 ecx
  00113	84 c0		 test	 al, al
  00115	75 f9		 jne	 SHORT $LL29@initContra
  00117	2b ca		 sub	 ecx, edx
  00119	0f 84 bb 00 00
	00		 je	 $LN16@initContra

; 20549: 		getStringToken(buf, ':', 1, sizeof(token) - 1, token);

  0011f	8d 45 bc	 lea	 eax, DWORD PTR _token$[ebp]
  00122	50		 push	 eax
  00123	6a 3f		 push	 63			; 0000003fH
  00125	6a 01		 push	 1
  00127	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0012d	6a 3a		 push	 58			; 0000003aH
  0012f	50		 push	 eax
  00130	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 20550: 		index = atoi(token);

  00135	8d 45 bc	 lea	 eax, DWORD PTR _token$[ebp]
  00138	50		 push	 eax
  00139	e8 00 00 00 00	 call	 _atoi
  0013e	83 c4 18	 add	 esp, 24			; 00000018H

; 20551: 		if (index < 0 || index >= 4)	break;

  00141	83 f8 03	 cmp	 eax, 3
  00144	0f 87 90 00 00
	00		 ja	 $LN16@initContra

; 20552: 		getStringToken(buf, ':', 2, sizeof(contractSign[index].name) - 1, contractSign[index].name);

  0014a	8b f8		 mov	 edi, eax
  0014c	c1 e7 04	 shl	 edi, 4
  0014f	03 f8		 add	 edi, eax
  00151	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00157	8d 34 bd 04 00
	00 00		 lea	 esi, DWORD PTR ?contractSign@@3PAUcontractSignTag@@A[edi*4+4]
  0015e	56		 push	 esi
  0015f	6a 1f		 push	 31			; 0000001fH
  00161	6a 02		 push	 2
  00163	6a 3a		 push	 58			; 0000003aH
  00165	50		 push	 eax
  00166	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 20553: 		getStringToken(buf, ':', 3, sizeof(contractSign[index].fmname) - 1, contractSign[index].fmname);

  0016b	8d 04 bd 24 00
	00 00		 lea	 eax, DWORD PTR ?contractSign@@3PAUcontractSignTag@@A[edi*4+36]
  00172	50		 push	 eax
  00173	6a 1f		 push	 31			; 0000001fH
  00175	6a 03		 push	 3
  00177	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0017d	6a 3a		 push	 58			; 0000003aH
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00185	83 c4 28	 add	 esp, 40			; 00000028H

; 20554: 		contractSign[index].used = TRUE;

  00188	c7 04 bd 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?contractSign@@3PAUcontractSignTag@@A[edi*4], 1

; 20555: 		// å¤æ­æ¯å¦ç­¾è¿å
; 20556: 		if (!strcmp(contractSign[index].name, pc.name))

  00193	b8 70 00 00 00	 mov	 eax, OFFSET ?pc@@3UPC@@A+112
$LL30@initContra:
  00198	8a 0e		 mov	 cl, BYTE PTR [esi]
  0019a	3a 08		 cmp	 cl, BYTE PTR [eax]
  0019c	75 1a		 jne	 SHORT $LN31@initContra
  0019e	84 c9		 test	 cl, cl
  001a0	74 12		 je	 SHORT $LN32@initContra
  001a2	8a 4e 01	 mov	 cl, BYTE PTR [esi+1]
  001a5	3a 48 01	 cmp	 cl, BYTE PTR [eax+1]
  001a8	75 0e		 jne	 SHORT $LN31@initContra
  001aa	83 c6 02	 add	 esi, 2
  001ad	83 c0 02	 add	 eax, 2
  001b0	84 c9		 test	 cl, cl
  001b2	75 e4		 jne	 SHORT $LL30@initContra
$LN32@initContra:
  001b4	33 c9		 xor	 ecx, ecx
  001b6	eb 05		 jmp	 SHORT $LN33@initContra
$LN31@initContra:
  001b8	1b c9		 sbb	 ecx, ecx
  001ba	83 c9 01	 or	 ecx, 1
$LN33@initContra:
  001bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?contractSigned@@3HA ; contractSigned
  001c2	85 c9		 test	 ecx, ecx
  001c4	b9 01 00 00 00	 mov	 ecx, 1
  001c9	0f 44 c1	 cmove	 eax, ecx
  001cc	a3 00 00 00 00	 mov	 DWORD PTR ?contractSigned@@3HA, eax ; contractSigned
  001d1	83 fb 04	 cmp	 ebx, 4
  001d4	0f 8c 06 ff ff
	ff		 jl	 $LL7@initContra
$LN16@initContra:

; 20557: 			contractSigned = TRUE;
; 20558: 	}
; 20559: 
; 20560: }

  001da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001dd	5f		 pop	 edi
  001de	5e		 pop	 esi
  001df	33 cd		 xor	 ecx, ebp
  001e1	5b		 pop	 ebx
  001e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e7	8b e5		 mov	 esp, ebp
  001e9	5d		 pop	 ebp
  001ea	c3		 ret	 0
?initContractWN@@YAXPAD@Z ENDP				; initContractWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?showMouseGetNameWN@@YAXXZ
_TEXT	SEGMENT
_dataBuf$ = -388					; size = 256
_sendName$1 = -132					; size = 64
_sendName$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
?showMouseGetNameWN@@YAXXZ PROC				; showMouseGetNameWN, COMDAT

; 20353: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 84 01 00
	00		 sub	 esp, 388		; 00000184H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 20354: 	static int winX, winY;
; 20355: 	static int winW, winH;
; 20356: 	static int fontId[] = { -2, -2, -2, -2 };
; 20357: 	int selFontBtnId = -1;
; 20358: 	char dataBuf[256];
; 20359: 	char sendName[64];
; 20360: 
; 20361: 	int id;
; 20362: 	int i;
; 20363: 
; 20364: 	static int totalMsgLine;
; 20365: 	static int lineSkip;
; 20366: 
; 20367: 	static int inBlacklist = FALSE;
; 20368: 
; 20369: 
; 20370: 	if (ptActMenuWin == NULL) {

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 85 99 00 00
	00		 jne	 $LN37@showMouseG

; 20371: 		//winW = msgWN_W;
; 20372: 		//winH = msgWN_H;
; 20373: 		winW = 5;
; 20374: 		winH = 5;
; 20375: 		winX = (640 - winW * 64) / 2;
; 20376: 		winY = (456 - winH * 48) / 2;
; 20377: 
; 20378: 
; 20379: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 05		 push	 5
  00026	6a 05		 push	 5
  00028	6a 6c		 push	 108			; 0000006cH
  0002a	68 a0 00 00 00	 push	 160			; 000000a0H
  0002f	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??showMouseGetNameWN@@YAXXZ@4HA, 5
  00039	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??showMouseGetNameWN@@YAXXZ@4HA, 5
  00043	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA, 160 ; 000000a0H
  0004d	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA, 108 ; 0000006cH
  00057	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 20380: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 20381: 		winX = ptActMenuWin->x;
; 20382: 		winY = ptActMenuWin->y;
; 20383: #endif
; 20384: 		//lineSkip = 20;
; 20385: 		//totalMsgLine = (winH*48-56)/lineSkip;
; 20386: 
; 20387: 
; 20388: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 20389: 		{
; 20390: 			fontId[i] = -2;

  0005c	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 20391: 		}
; 20392: 
; 20393: 		play_se(202, 320, 240);

  00063	68 f0 00 00 00	 push	 240			; 000000f0H
  00068	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  0006d	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00070	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00073	68 40 01 00 00	 push	 320			; 00000140H
  00078	68 ca 00 00 00	 push	 202			; 000000caH
  0007d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA, ecx
  00083	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA, eax
  00088	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA, xmm0
  0008f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 20394: 
; 20395: 
; 20396: 		if (checkInBlacklist(mouseGetName))

  00094	68 00 00 00 00	 push	 OFFSET ?mouseGetName@@3PADA ; mouseGetName
  00099	e8 00 00 00 00	 call	 ?checkInBlacklist@@YAHPAD@Z ; checkInBlacklist
  0009e	83 c4 28	 add	 esp, 40			; 00000028H

; 20397: 			inBlacklist = TRUE;
; 20398: 		else
; 20399: 			inBlacklist = FALSE;
; 20400: 
; 20401: 	}
; 20402: 
; 20403: 
; 20404: 	if (ptActMenuWin != NULL) {

  000a1	f7 d8		 neg	 eax
  000a3	1b c0		 sbb	 eax, eax
  000a5	f7 d8		 neg	 eax
  000a7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000ae	a3 00 00 00 00	 mov	 DWORD PTR ?inBlacklist@?1??showMouseGetNameWN@@YAXXZ@4HA, eax
  000b3	0f 84 58 02 00
	00		 je	 $LN21@showMouseG
$LN37@showMouseG:
  000b9	56		 push	 esi

; 20405: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  000ba	6a 04		 push	 4
  000bc	68 00 00 00 00	 push	 OFFSET ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA
  000c1	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000c6	83 c4 08	 add	 esp, 8
  000c9	8b f0		 mov	 esi, eax

; 20406: 
; 20407: 		if (CheckMenuFlag()
; 20408: 			|| (joy_trg[0] & JOY_ESC)
; 20409: 			|| actBtn == 1
; 20410: 			|| menuBtn == 1
; 20411: 			|| disconnectServerFlag == TRUE
; 20412: 			|| wnCloseFlag == 1)

  000cb	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000d0	85 c0		 test	 eax, eax
  000d2	0f 85 d6 01 00
	00		 jne	 $LN12@showMouseG
  000d8	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000e2	0f 85 c6 01 00
	00		 jne	 $LN12@showMouseG
  000e8	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000f0	0f 84 b8 01 00
	00		 je	 $LN12@showMouseG
  000f6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000fe	0f 84 aa 01 00
	00		 je	 $LN12@showMouseG
  00104	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0010b	0f 84 9d 01 00
	00		 je	 $LN12@showMouseG
  00111	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00119	0f 84 8f 01 00
	00		 je	 $LN12@showMouseG

; 20420: 		}
; 20421: 
; 20422: 		if (id >= 0)

  0011f	85 f6		 test	 esi, esi
  00121	0f 88 81 00 00
	00		 js	 $LN13@showMouseG

; 20423: 		{
; 20424: 			switch (id) {

  00127	83 ee 01	 sub	 esi, 1
  0012a	74 2e		 je	 SHORT $LN14@showMouseG
  0012c	83 ee 01	 sub	 esi, 1
  0012f	0f 85 aa 01 00
	00		 jne	 $LN20@showMouseG

; 20434: 				break;
; 20435: #endif
; 20436: 			case 2: // é»åå
; 20437: 				if (inBlacklist)

  00135	39 35 00 00 00
	00		 cmp	 DWORD PTR ?inBlacklist@?1??showMouseGetNameWN@@YAXXZ@4HA, esi
  0013b	0f 85 9e 01 00
	00		 jne	 $LN20@showMouseG

; 20438: 					removeBlacklist(mouseGetName);
; 20439: 				else {
; 20440: 					char sendName[64];
; 20441: 					sprintf(sendName, " IceCloud go Shit!!! ");

  00141	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _sendName$1[ebp]
  00147	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@IHBEEPL@?5IceCloud?5go?5Shit?$CB?$CB?$CB?5@
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 _sprintf
  00152	83 c4 08	 add	 esp, 8

; 20442: 					addBlacklist(mouseGetName);
; 20443: 				}
; 20444: 				break;

  00155	e9 85 01 00 00	 jmp	 $LN20@showMouseG
$LN14@showMouseG:

; 20425: #ifdef _TELLCHANNEL
; 20426: 			case 1: // å¯è¯­
; 20427: //				pc.etcFlag |= PC_ETCFLAG_CHAT_TELL;
; 20428: 				pNowStrBuffer->buffer[0] = NULL;

  0015a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer

; 20429: 				pNowStrBuffer->cursor = 0;
; 20430: 				pNowStrBuffer->cnt = 0;
; 20431: 				sprintf(sendName, "%s ", mouseGetName);

  0015f	68 00 00 00 00	 push	 OFFSET ?mouseGetName@@3PADA ; mouseGetName
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_03IKGEINEE@?$CFs?5@
  00169	c6 00 00	 mov	 BYTE PTR [eax], 0
  0016c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer
  00171	c6 80 09 01 00
	00 00		 mov	 BYTE PTR [eax+265], 0
  00178	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer
  0017d	c6 80 07 01 00
	00 00		 mov	 BYTE PTR [eax+263], 0
  00184	8d 45 bc	 lea	 eax, DWORD PTR _sendName$[ebp]
  00187	50		 push	 eax
  00188	e8 00 00 00 00	 call	 _sprintf

; 20432: 				StrToNowStrBuffer(sendName);

  0018d	8d 45 bc	 lea	 eax, DWORD PTR _sendName$[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 ?StrToNowStrBuffer@@YAXPAD@Z ; StrToNowStrBuffer
  00196	83 c4 10	 add	 esp, 16			; 00000010H

; 20433: 				TalkMode = 1;

  00199	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?TalkMode@@3HA, 1 ; TalkMode
  001a3	e9 37 01 00 00	 jmp	 $LN20@showMouseG
$LN13@showMouseG:

; 20462: 			return;
; 20463: 		}
; 20464: 
; 20465: 
; 20466: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  001a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001ad	85 c0		 test	 eax, eax
  001af	0f 84 5b 01 00
	00		 je	 $LN40@showMouseG
  001b5	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001b9	0f 8c 51 01 00
	00		 jl	 $LN40@showMouseG

; 20467: 		{
; 20468: 
; 20469: 
; 20470: 			sprintf(dataBuf, "ä½ æç®å¯¹ %s ï¼", mouseGetName);

  001bf	68 00 00 00 00	 push	 OFFSET ?mouseGetName@@3PADA ; mouseGetName
  001c4	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  001ca	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPLMBEOA@?$DP?v?h?$NP?$KJ?$DP?5?$CFs?5?$KD?$LK@
  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 _sprintf

; 20471: 			StockFontBuffer(winX + 40, winY + 30,

  001d5	6a 00		 push	 0
  001d7	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  001dd	50		 push	 eax
  001de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
  001e3	6a 00		 push	 0
  001e5	83 c0 1e	 add	 eax, 30			; 0000001eH
  001e8	6a 01		 push	 1
  001ea	50		 push	 eax
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
  001f0	83 c0 28	 add	 eax, 40			; 00000028H
  001f3	50		 push	 eax
  001f4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 20472: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 20473: 
; 20474: 			fontId[1] =

  001f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
  001fe	6a 02		 push	 2
  00200	68 00 00 00 00	 push	 OFFSET ??_C@_09MEHCFAEH@?5?Z?K?$KB?$KB?$KB?$KB?$DP?5@
  00205	6a 04		 push	 4
  00207	83 c0 3c	 add	 eax, 60			; 0000003cH
  0020a	6a 01		 push	 1
  0020c	50		 push	 eax
  0020d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
  00212	83 c0 6e	 add	 eax, 110		; 0000006eH
  00215	50		 push	 eax
  00216	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 20475: 				StockFontBuffer(winX + 110, winY + 60,
; 20476: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, " å¯ããè¯­ ", 2);
; 20477: 			/*if( inBlacklist)
; 20478: 				fontId[2] =
; 20479: 					StockFontBuffer( winX+110, winY+90,
; 20480: 						FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ç§»åºé»åå", 2 );
; 20481: 			else
; 20482: 				fontId[2] =
; 20483: 					StockFontBuffer( winX+110, winY+90,
; 20484: 						FONT_PRIO_FRONT, FONT_PAL_YELLOW, "å å¥é»åå", 2 );
; 20485: 
; 20486: 			fontId[3] =
; 20487: 					StockFontBuffer( winX+110, winY+120,
; 20488: 						FONT_PRIO_FRONT, FONT_PAL_YELLOW, "æ¸é¤é»åå", 2 );*/
; 20489: 
; 20490: 			fontId[4] =

  0021b	6a 02		 push	 2
  0021d	a3 04 00 00 00	 mov	 DWORD PTR ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA+4, eax
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
  00227	68 00 00 00 00	 push	 OFFSET ??_C@_08NELLBCLM@?5?$DP?5?5?5?5?$DP?5@
  0022c	6a 04		 push	 4
  0022e	83 c0 78	 add	 eax, 120		; 00000078H
  00231	6a 01		 push	 1
  00233	50		 push	 eax
  00234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
  00239	83 c0 6e	 add	 eax, 110		; 0000006eH
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00242	83 c4 54	 add	 esp, 84			; 00000054H
  00245	a3 10 00 00 00	 mov	 DWORD PTR ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA+16, eax

; 20491: 				StockFontBuffer(winX + 110, winY + 120,
; 20492: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, " æ¥    è¯¢ ", 2);
; 20493: 
; 20494: 			fontId[5] =

  0024a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
  0024f	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00254	6a 02		 push	 2
  00256	68 00 00 00 00	 push	 OFFSET ??_C@_09NHGAGPIH@?5?$DP?5?5?5?5?l?Q?5@
  0025b	6a 04		 push	 4
  0025d	6a 01		 push	 1
  0025f	50		 push	 eax
  00260	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
  00265	83 c0 6e	 add	 eax, 110		; 0000006eH
  00268	50		 push	 eax
  00269	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 20495: 				StockFontBuffer(winX + 110, winY + 140,
; 20496: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, " è¸¢    äºº ", 2);
; 20497: 
; 20498: 
; 20499: 			fontId[0] =

  0026e	6a 02		 push	 2
  00270	a3 14 00 00 00	 mov	 DWORD PTR ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA+20, eax
  00275	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showMouseGetNameWN@@YAXXZ@4HA
  0027a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OKNLNJFO@?5?v?$KC?$KB?$KB?$KB?$KB?a?$LM?5@
  0027f	6a 04		 push	 4
  00281	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00286	6a 01		 push	 1
  00288	50		 push	 eax
  00289	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showMouseGetNameWN@@YAXXZ@4HA
  0028e	83 c0 6e	 add	 eax, 110		; 0000006eH
  00291	50		 push	 eax
  00292	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00297	83 c4 30	 add	 esp, 48			; 00000030H
  0029a	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??showMouseGetNameWN@@YAXXZ@4PAHA, eax
  0029f	5e		 pop	 esi

; 20500: 				StockFontBuffer(winX + 110, winY + 200,
; 20501: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, " åããæ¶ ", 2);
; 20502: 
; 20503: 		}
; 20504: 	}
; 20505: 
; 20506: }

  002a0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002a3	33 cd		 xor	 ecx, ebp
  002a5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002aa	8b e5		 mov	 esp, ebp
  002ac	5d		 pop	 ebp
  002ad	c3		 ret	 0
$LN12@showMouseG:

; 20413: 		{
; 20414: 			mouseGetName[0] = NULL;
; 20415: 			id = 100;
; 20416: 			windowTypeWN = -1;
; 20417: 			wnCloseFlag = 0;
; 20418: 			DeathAction(ptActMenuWin);

  002ae	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002b4	33 c0		 xor	 eax, eax
  002b6	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?mouseGetName@@3PADA, 0
  002bd	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002c7	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  002cd	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002d2	83 c4 04	 add	 esp, 4

; 20419: 			ptActMenuWin = NULL;

  002d5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN20@showMouseG:

; 20445: 			case 3: // æ¸é¤é»åå
; 20446: 				cleanBlacklist();
; 20447: 				break;
; 20448: 			case 4: // æ¥è¯¢
; 20449: 				// Black Jack
; 20450: 				break;
; 20451: 			case 5: // è¸¢äºº
; 20452: 				//
; 20453: 				break;
; 20454: 
; 20455: 			}
; 20456: 			mouseGetName[0] = NULL;
; 20457: 
; 20458: 			windowTypeWN = -1;
; 20459: 			wnCloseFlag = 0;
; 20460: 			DeathAction(ptActMenuWin);

  002df	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002e5	33 c0		 xor	 eax, eax
  002e7	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?mouseGetName@@3PADA, 0
  002ee	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002f8	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  002fe	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00303	83 c4 04	 add	 esp, 4

; 20461: 			ptActMenuWin = NULL;

  00306	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN40@showMouseG:
  00310	5e		 pop	 esi
$LN21@showMouseG:

; 20500: 				StockFontBuffer(winX + 110, winY + 200,
; 20501: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, " åããæ¶ ", 2);
; 20502: 
; 20503: 		}
; 20504: 	}
; 20505: 
; 20506: }

  00311	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00314	33 cd		 xor	 ecx, ebp
  00316	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031b	8b e5		 mov	 esp, ebp
  0031d	5d		 pop	 ebp
  0031e	c3		 ret	 0
?showMouseGetNameWN@@YAXXZ ENDP				; showMouseGetNameWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initMouseGetNameWN@@YAXPAD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?initMouseGetNameWN@@YAXPAD@Z PROC			; initMouseGetNameWN, COMDAT

; 20345: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 20346: 	strncpy(mouseGetName, name, 20);

  00003	6a 14		 push	 20			; 00000014H
  00005	ff 75 08	 push	 DWORD PTR _name$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ?mouseGetName@@3PADA ; mouseGetName
  0000d	e8 00 00 00 00	 call	 _strncpy
  00012	83 c4 0c	 add	 esp, 12			; 0000000cH

; 20347: 	//	windowTypeWN = WINDOW_MESSAGETYPE_MOUSEGETNAME;
; 20348: }

  00015	5d		 pop	 ebp
  00016	c3		 ret	 0
?initMouseGetNameWN@@YAXPAD@Z ENDP			; initMouseGetNameWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?showRidePetWN@@YAXXZ
_TEXT	SEGMENT
_btnTitle$ = -540					; size = 24
_buf$ = -516						; size = 256
_dataBuf$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
?showRidePetWN@@YAXXZ PROC				; showRidePetWN, COMDAT

; 17155: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 17156: 	static int winX, winY;
; 17157: 	static int winW, winH;
; 17158: 	static int fontId[] = { -2, -2 };
; 17159: 
; 17160: 	static int btnLoc[6][2];
; 17161: 	static int btnCnt;
; 17162: 	//static int msgLine;
; 17163: 	//static STR_BUFFER input;
; 17164: 	char dataBuf[256];
; 17165: 	char buf[256];
; 17166: 
; 17167: 	//int	dataStatus;
; 17168: 	/*
; 17169: 	char *dataStatusStr[] =
; 17170: 	{
; 17171: 		"æªä½¿ç¨",
; 17172: 		" ä¿®æ¹ ",
; 17173: 		" æ¥å ",
; 17174: 		"è®¾å®ä¸­",
; 17175: 		"ç­å¾åç­",
; 17176: 		"å·²æå®"
; 17177: 	};
; 17178: 	*/
; 17179: 
; 17180: 	char* btnTitle[] =
; 17181: 	{
; 17182: 		" ï¼¯ï¼« ",
; 17183: 		"CANCEL",
; 17184: 		"?  ?",
; 17185: 		"?  ?",
; 17186: 		"??",
; 17187: 		"??"
; 17188: 	};
; 17189: 	int id;
; 17190: 	int i, j;
; 17191: 	int mask;
; 17192: 	int btn;
; 17193: 
; 17194: 
; 17195: 	static int totalMsgLine;
; 17196: 	static int lineSkip;
; 17197: 
; 17198: 
; 17199: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00026	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00030	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0003a	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00044	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004e	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00058	0f 85 0b 01 00
	00		 jne	 $LN59@showRidePe

; 17200: 	{
; 17201: 		//winW = msgWN_W;
; 17202: 		//winH = msgWN_H;
; 17203: 		winW = 7;
; 17204: 		winH = 6;
; 17205: 		winX = (640 - winW * 64) / 2;
; 17206: 		winY = (456 - winH * 48) / 2;
; 17207: 
; 17208: 
; 17209: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	6a 06		 push	 6
  00064	6a 07		 push	 7
  00066	6a 54		 push	 84			; 00000054H
  00068	6a 60		 push	 96			; 00000060H
  0006a	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??showRidePetWN@@YAXXZ@4HA, 7
  00074	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winH@?1??showRidePetWN@@YAXXZ@4HA, 6
  0007e	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA, 96 ; 00000060H
  00088	c7 05 00 00 00
	00 54 00 00 00	 mov	 DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA, 84 ; 00000054H
  00092	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 17210: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17211: 		winX = ptActMenuWin->x;
; 17212: 		winY = ptActMenuWin->y;
; 17213: #endif
; 17214: 		//lineSkip = 20;
; 17215: 		//totalMsgLine = (winH*48-56)/lineSkip;
; 17216: 
; 17217: 
; 17218: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17219: 		{
; 17220: 			fontId[i] = -2;
; 17221: 		}
; 17222: 
; 17223: 		mask = 1;
; 17224: 		btnCnt = 0;
; 17225: 		for (i = 0; i < 6; i++, mask <<= 1)

  00097	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  0009d	33 f6		 xor	 esi, esi
  0009f	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000a4	83 c4 18	 add	 esp, 24			; 00000018H
  000a7	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??showRidePetWN@@YAXXZ@4HA, esi
  000ad	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b0	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA, ecx
  000b9	33 c9		 xor	 ecx, ecx
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA, eax
  000c0	b8 01 00 00 00	 mov	 eax, 1
  000c5	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA, -2 ; fffffffeH
  000cf	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA+4, -2 ; fffffffeH
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@showRidePe:

; 17226: 		{
; 17227: 			if (buttonTypeWN & mask)

  000e0	85 d0		 test	 edx, eax
  000e2	74 06		 je	 SHORT $LN5@showRidePe

; 17228: 			{
; 17229: 				btnCnt++;

  000e4	46		 inc	 esi
  000e5	83 fe 04	 cmp	 esi, 4

; 17230: 				if (btnCnt == 4)

  000e8	74 08		 je	 SHORT $LN43@showRidePe
$LN5@showRidePe:

; 17210: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17211: 		winX = ptActMenuWin->x;
; 17212: 		winY = ptActMenuWin->y;
; 17213: #endif
; 17214: 		//lineSkip = 20;
; 17215: 		//totalMsgLine = (winH*48-56)/lineSkip;
; 17216: 
; 17217: 
; 17218: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17219: 		{
; 17220: 			fontId[i] = -2;
; 17221: 		}
; 17222: 
; 17223: 		mask = 1;
; 17224: 		btnCnt = 0;
; 17225: 		for (i = 0; i < 6; i++, mask <<= 1)

  000ea	41		 inc	 ecx
  000eb	03 c0		 add	 eax, eax
  000ed	83 f9 06	 cmp	 ecx, 6
  000f0	7c ee		 jl	 SHORT $LL7@showRidePe
$LN43@showRidePe:

; 17228: 			{
; 17229: 				btnCnt++;

  000f2	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??showRidePetWN@@YAXXZ@4HA, esi

; 17231: 					break;
; 17232: 			}
; 17233: 		}
; 17234: 
; 17235: 		// ????????î¸î?î³????
; 17236: 		if (btnCnt > 0)

  000f8	85 f6		 test	 esi, esi
  000fa	7e 49		 jle	 SHORT $LN9@showRidePe

; 17237: 		{
; 17238: 			int w;
; 17239: 			w = winW * 64 / (btnCnt + 1);

  000fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??showRidePetWN@@YAXXZ@4HA
  00101	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00104	c1 e0 06	 shl	 eax, 6
  00107	99		 cdq
  00108	f7 f9		 idiv	 ecx
  0010a	33 d2		 xor	 edx, edx

; 17240: 			for (i = 0; i < btnCnt; i++)

  0010c	85 f6		 test	 esi, esi
  0010e	7e 35		 jle	 SHORT $LN9@showRidePe

; 17237: 		{
; 17238: 			int w;
; 17239: 			w = winW * 64 / (btnCnt + 1);

  00110	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??showRidePetWN@@YAXXZ@4HA
  00116	8d 3c 49	 lea	 edi, DWORD PTR [ecx+ecx*2]
  00119	c1 e7 04	 shl	 edi, 4
  0011c	8d 48 e5	 lea	 ecx, DWORD PTR [eax-27]
  0011f	83 c7 dd	 add	 edi, -35		; ffffffddH
  00122	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL10@showRidePe:

; 17241: 			{
; 17242: 				btnLoc[i][0] = w * (i + 1) - 27;

  00130	89 0c d5 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA[edx*8], ecx
  00137	03 c8		 add	 ecx, eax

; 17243: 				btnLoc[i][1] = winH * 48 - 35;

  00139	89 3c d5 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA[edx*8+4], edi
  00140	42		 inc	 edx
  00141	3b d6		 cmp	 edx, esi
  00143	7c eb		 jl	 SHORT $LL10@showRidePe
$LN9@showRidePe:

; 17244: 			}
; 17245: 		}
; 17246: 
; 17247: 		play_se(202, 320, 240);	// ????????

  00145	68 f0 00 00 00	 push	 240			; 000000f0H
  0014a	68 40 01 00 00	 push	 320			; 00000140H
  0014f	68 ca 00 00 00	 push	 202			; 000000caH
  00154	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00159	83 c4 0c	 add	 esp, 12			; 0000000cH

; 17248: 	}
; 17249: 
; 17250: 
; 17251: 	if (ptActMenuWin != NULL)

  0015c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00163	0f 84 c8 03 00
	00		 je	 $LN29@showRidePe
$LN59@showRidePe:

; 17252: 	{
; 17253: 		// ?????î±î¶îî
; 17254: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  00169	6a 02		 push	 2
  0016b	68 00 00 00 00	 push	 OFFSET ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA
  00170	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00175	83 c4 08	 add	 esp, 8
  00178	8b f8		 mov	 edi, eax

; 17255: 
; 17256: 		// î??????î?????????????î¼??
; 17257: 		if (CheckMenuFlag()
; 17258: 			|| (joy_trg[0] & JOY_ESC)
; 17259: 			|| actBtn == 1
; 17260: 			|| menuBtn == 1
; 17261: 			|| disconnectServerFlag == TRUE
; 17262: 			|| wnCloseFlag == 1)

  0017a	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0017f	85 c0		 test	 eax, eax
  00181	0f 85 d8 02 00
	00		 jne	 $LN20@showRidePe
  00187	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00191	0f 85 c8 02 00
	00		 jne	 $LN20@showRidePe
  00197	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0019f	0f 84 ba 02 00
	00		 je	 $LN20@showRidePe
  001a5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001ad	0f 84 ac 02 00
	00		 je	 $LN20@showRidePe
  001b3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001ba	0f 84 9f 02 00
	00		 je	 $LN20@showRidePe
  001c0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001c8	0f 84 91 02 00
	00		 je	 $LN20@showRidePe

; 17275: 		}
; 17276: 
; 17277: 		// ï¼¯ï¼«
; 17278: 		if (0 <= id && id < 6)

  001ce	85 ff		 test	 edi, edi
  001d0	0f 88 d9 00 00
	00		 js	 $LN28@showRidePe
  001d6	83 ff 06	 cmp	 edi, 6
  001d9	7d 50		 jge	 SHORT $LN58@showRidePe

; 17279: 		{
; 17280: 			//char msg[256];
; 17281: 			btn = 1;
; 17282: 			btn <<= id;
; 17283: 
; 17284: 			//makeEscapeString( input.buffer, msg, sizeof( msg )-1 );
; 17285: 			if (bNewServer)

  001db	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  001e0	b8 01 00 00 00	 mov	 eax, 1
  001e5	8b cf		 mov	 ecx, edi
  001e7	d3 e0		 shl	 eax, cl
  001e9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001f0	50		 push	 eax
  001f1	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  001f7	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  001fd	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00203	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00209	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0020f	74 0d		 je	 SHORT $LN23@showRidePe

; 17286: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  00211	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00216	83 c4 1c	 add	 esp, 28			; 0000001cH
  00219	e9 aa 02 00 00	 jmp	 $LN61@showRidePe
$LN23@showRidePe:

; 17287: 			else
; 17288: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  0021e	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
  00223	83 c4 1c	 add	 esp, 28			; 0000001cH

; 17289: 
; 17290: 			windowTypeWN = -1;
; 17291: 
; 17292: 		}

  00226	e9 9d 02 00 00	 jmp	 $LN61@showRidePe
$LN58@showRidePe:

; 17293: 		else if ((6 <= id) && (id < 6 + 8))

  0022b	83 ff 0e	 cmp	 edi, 14			; 0000000eH
  0022e	7d 77		 jge	 SHORT $LN27@showRidePe

; 17294: 		{
; 17295: 
; 17296: 
; 17297: 			int dataSel = id - 6;
; 17298: 			sprintf(dataBuf, "%d|%s", FMPKSelectData[dataSel].fmindex,

  00230	68 00 01 00 00	 push	 256			; 00000100H
  00235	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0023b	50		 push	 eax
  0023c	8d 34 7f	 lea	 esi, DWORD PTR [edi+edi*2]
  0023f	8d 04 f5 70 ff
	ff ff		 lea	 eax, DWORD PTR ?FMPKSelectData@@3PAUFMPKSelect@@A[esi*8-144]
  00246	50		 push	 eax
  00247	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0024c	50		 push	 eax
  0024d	ff 34 f5 84 ff
	ff ff		 push	 DWORD PTR ?FMPKSelectData@@3PAUFMPKSelect@@A[esi*8-124]
  00254	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0025a	68 00 00 00 00	 push	 OFFSET ??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@
  0025f	50		 push	 eax
  00260	e8 00 00 00 00	 call	 _sprintf
  00265	83 c4 1c	 add	 esp, 28			; 0000001cH

; 17299: 				makeEscapeString(FMPKSelectData[dataSel].fmname, buf, sizeof(buf)));
; 17300: 			if (bNewServer)

  00268	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0026e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00275	50		 push	 eax
  00276	6a 01		 push	 1
  00278	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0027e	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00284	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0028a	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00290	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00296	74 07		 je	 SHORT $LN26@showRidePe

; 17301: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  00298	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0029d	eb 05		 jmp	 SHORT $LN62@showRidePe
$LN26@showRidePe:

; 17302: 					WINDOW_BUTTONTYPE_OK, dataBuf);
; 17303: 			else
; 17304: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  0029f	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN62@showRidePe:

; 17305: 					WINDOW_BUTTONTYPE_OK, dataBuf);
; 17306: 		}
; 17307: 
; 17308: 
; 17309: 		if (id >= 0)

  002a4	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN27@showRidePe:
  002a7	85 ff		 test	 edi, edi
  002a9	0f 89 19 02 00
	00		 jns	 $LN61@showRidePe
$LN28@showRidePe:

; 17321: 			return;
; 17322: 		}
; 17323: 
; 17324: 
; 17325: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002b4	85 c0		 test	 eax, eax
  002b6	0f 84 75 02 00
	00		 je	 $LN29@showRidePe
  002bc	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002c0	0f 8c 6b 02 00
	00		 jl	 $LN29@showRidePe

; 17326: 		{
; 17327: 
; 17328: 
; 17329: 			j = 0;

  002c6	53		 push	 ebx
  002c7	33 db		 xor	 ebx, ebx

; 17330: 
; 17331: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  002c9	bf 01 00 00 00	 mov	 edi, 1
  002ce	33 f6		 xor	 esi, esi
$LL13@showRidePe:

; 17332: 			{
; 17333: 				fontId[i] = -2;

  002d0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 17334: 				if (buttonTypeWN & mask)

  002da	85 3d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, edi ; buttonTypeWN
  002e0	74 40		 je	 SHORT $LN11@showRidePe

; 17335: 				{
; 17336: 					if (j < btnCnt)

  002e2	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?btnCnt@?1??showRidePetWN@@YAXXZ@4HA
  002e8	7d 38		 jge	 SHORT $LN11@showRidePe

; 17337: 					{
; 17338: 						fontId[i] =

  002ea	8b 04 dd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA[ebx*8+4]
  002f1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  002f7	6a 02		 push	 2
  002f9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00300	6a 04		 push	 4
  00302	6a 01		 push	 1
  00304	50		 push	 eax
  00305	8b 04 dd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??showRidePetWN@@YAXXZ@4PAY01HA[ebx*8]
  0030c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  00312	50		 push	 eax
  00313	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00318	83 c4 18	 add	 esp, 24			; 00000018H
  0031b	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??showRidePetWN@@YAXXZ@4PAHA[esi], eax

; 17339: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 17340: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 17341: 						j++;

  00321	43		 inc	 ebx
$LN11@showRidePe:

; 17330: 
; 17331: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00322	83 c6 04	 add	 esi, 4
  00325	03 ff		 add	 edi, edi
  00327	83 fe 18	 cmp	 esi, 24			; 00000018H
  0032a	7c a4		 jl	 SHORT $LL13@showRidePe

; 17342: 					}
; 17343: 				}
; 17344: 			}
; 17345: 
; 17346: 			sprintf(dataBuf, "%s", "íì¹ê°ë¥ííí¸ë ë¤ìê³¼ ê°ìµëë¤.ï¼");

  0032c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@FDKHNEAG@?E?$LO?$LN?B?$LA?$KB?$LE?I?G?Q?F?d?F?$KO?$LE?B?5?$LE?Y?$MA?$LN?$LA?z?5?$LA?$LA?$LN?$MA?$LE?O?$LE@
  00331	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00337	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0033c	50		 push	 eax
  0033d	e8 00 00 00 00	 call	 _sprintf

; 17347: 			StockFontBuffer(winX + 30, winY + 40, FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);

  00342	6a 00		 push	 0
  00344	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0034a	50		 push	 eax
  0034b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  00350	6a 00		 push	 0
  00352	83 c0 28	 add	 eax, 40			; 00000028H
  00355	6a 01		 push	 1
  00357	50		 push	 eax
  00358	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  0035d	83 c0 1e	 add	 eax, 30			; 0000001eH
  00360	50		 push	 eax
  00361	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00366	83 c4 24	 add	 esp, 36			; 00000024H

; 17348: 
; 17349: 			if (pActPet12 == NULL)

  00369	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActPet12@@3PAUaction@@A, 0
  00370	5b		 pop	 ebx
  00371	75 2d		 jne	 SHORT $LN33@showRidePe

; 17350: 				if (rideablePet[0] != 0)

  00373	a1 00 00 00 00	 mov	 eax, DWORD PTR ?rideablePet@@3PAHA
  00378	85 c0		 test	 eax, eax
  0037a	74 24		 je	 SHORT $LN33@showRidePe

; 17351: 					pActPet12 = MakeAnimDisp(winX + 115, winY + 180, rideablePet[0], 0);

  0037c	6a 00		 push	 0
  0037e	50		 push	 eax
  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  00384	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00389	50		 push	 eax
  0038a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  0038f	83 c0 73	 add	 eax, 115		; 00000073H
  00392	50		 push	 eax
  00393	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00398	83 c4 10	 add	 esp, 16			; 00000010H
  0039b	a3 00 00 00 00	 mov	 DWORD PTR ?pActPet12@@3PAUaction@@A, eax
$LN33@showRidePe:

; 17352: 
; 17353: 			if (pActPet13 == NULL)

  003a0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActPet13@@3PAUaction@@A, 0
  003a7	75 2f		 jne	 SHORT $LN35@showRidePe

; 17354: 				if (rideablePet[1] != 0)

  003a9	a1 04 00 00 00	 mov	 eax, DWORD PTR ?rideablePet@@3PAHA+4
  003ae	85 c0		 test	 eax, eax
  003b0	74 26		 je	 SHORT $LN35@showRidePe

; 17355: 					pActPet13 = MakeAnimDisp(winX + 335, winY + 180, rideablePet[1], 0);

  003b2	6a 00		 push	 0
  003b4	50		 push	 eax
  003b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  003ba	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  003bf	50		 push	 eax
  003c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  003c5	05 4f 01 00 00	 add	 eax, 335		; 0000014fH
  003ca	50		 push	 eax
  003cb	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  003d0	83 c4 10	 add	 esp, 16			; 00000010H
  003d3	a3 00 00 00 00	 mov	 DWORD PTR ?pActPet13@@3PAUaction@@A, eax
$LN35@showRidePe:

; 17356: 
; 17357: 			if (pActPet14 == NULL)

  003d8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActPet14@@3PAUaction@@A, 0
  003df	75 2f		 jne	 SHORT $LN37@showRidePe

; 17358: 				if (rideablePet[2] != 0)

  003e1	a1 08 00 00 00	 mov	 eax, DWORD PTR ?rideablePet@@3PAHA+8
  003e6	85 c0		 test	 eax, eax
  003e8	74 26		 je	 SHORT $LN37@showRidePe

; 17359: 					pActPet14 = MakeAnimDisp(winX + 225, winY + 180, rideablePet[2], 0);

  003ea	6a 00		 push	 0
  003ec	50		 push	 eax
  003ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  003f2	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  003f7	50		 push	 eax
  003f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  003fd	05 e1 00 00 00	 add	 eax, 225		; 000000e1H
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00408	83 c4 10	 add	 esp, 16			; 00000010H
  0040b	a3 00 00 00 00	 mov	 DWORD PTR ?pActPet14@@3PAUaction@@A, eax
$LN37@showRidePe:

; 17360: 
; 17361: 			sprintf(dataBuf, "%s", "ìëë¥¼ ìëë¬ ì°¾ìë³´ì¸ìï¼");

  00410	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@IIIFLCHO@?$LL?s?$LE?k?$LI?$KG?5?$LM?$KN?$LF?Q?$LH?$KP?5?C?$KD?$LO?F?$LK?$LI?$LM?$LM?$LP?d?$KD?$KB@
  00415	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0041b	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 _sprintf

; 17362: 			StockFontBuffer(winX + 30, winY + 220,

  00426	6a 00		 push	 0
  00428	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0042e	50		 push	 eax
  0042f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??showRidePetWN@@YAXXZ@4HA
  00434	6a 00		 push	 0
  00436	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  0043b	6a 01		 push	 1
  0043d	50		 push	 eax
  0043e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??showRidePetWN@@YAXXZ@4HA
  00443	83 c0 1e	 add	 eax, 30			; 0000001eH
  00446	50		 push	 eax
  00447	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0044c	83 c4 24	 add	 esp, 36			; 00000024H
  0044f	5f		 pop	 edi

; 17363: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 17364: 
; 17365: 		}
; 17366: 	}
; 17367: 
; 17368: }

  00450	5e		 pop	 esi
  00451	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00454	33 cd		 xor	 ecx, ebp
  00456	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0045b	8b e5		 mov	 esp, ebp
  0045d	5d		 pop	 ebp
  0045e	c3		 ret	 0
$LN20@showRidePe:

; 17263: 		{
; 17264: 			id = 100;
; 17265: 			windowTypeWN = -1;
; 17266: 			wnCloseFlag = 0;
; 17267: 			DeathAction(ptActMenuWin);

  0045f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00465	33 c0		 xor	 eax, eax
  00467	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00471	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00477	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17268: 			ptActMenuWin = NULL;
; 17269: 			DeathAction(pActPet12);

  0047c	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet12@@3PAUaction@@A
  00482	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0048c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17270: 			pActPet12 = NULL;
; 17271: 			DeathAction(pActPet13);

  00491	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet13@@3PAUaction@@A
  00497	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet12@@3PAUaction@@A, 0
  004a1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17272: 			pActPet13 = NULL;
; 17273: 			DeathAction(pActPet14);

  004a6	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet14@@3PAUaction@@A
  004ac	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet13@@3PAUaction@@A, 0
  004b6	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004bb	83 c4 10	 add	 esp, 16			; 00000010H

; 17274: 			pActPet14 = NULL;

  004be	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet14@@3PAUaction@@A, 0
$LN61@showRidePe:

; 17310: 		{
; 17311: 			windowTypeWN = -1;
; 17312: 			wnCloseFlag = 0;
; 17313: 			DeathAction(ptActMenuWin);

  004c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004ce	33 c0		 xor	 eax, eax
  004d0	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  004da	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  004e0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17314: 			ptActMenuWin = NULL;
; 17315: 			DeathAction(pActPet12);

  004e5	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet12@@3PAUaction@@A
  004eb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  004f5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17316: 			pActPet12 = NULL;
; 17317: 			DeathAction(pActPet13);

  004fa	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet13@@3PAUaction@@A
  00500	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet12@@3PAUaction@@A, 0
  0050a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17318: 			pActPet13 = NULL;
; 17319: 			DeathAction(pActPet14);

  0050f	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet14@@3PAUaction@@A
  00515	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet13@@3PAUaction@@A, 0
  0051f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00524	83 c4 10	 add	 esp, 16			; 00000010H

; 17320: 			pActPet14 = NULL;

  00527	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet14@@3PAUaction@@A, 0
$LN29@showRidePe:

; 17363: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 17364: 
; 17365: 		}
; 17366: 	}
; 17367: 
; 17368: }

  00531	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00534	5f		 pop	 edi
  00535	33 cd		 xor	 ecx, ebp
  00537	5e		 pop	 esi
  00538	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0053d	8b e5		 mov	 esp, ebp
  0053f	5d		 pop	 ebp
  00540	c3		 ret	 0
?showRidePetWN@@YAXXZ ENDP				; showRidePetWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initShowRidePetWN@@YAXXZ
_TEXT	SEGMENT
_leaderimageNo$1$ = -4					; size = 4
?initShowRidePetWN@@YAXXZ PROC				; initShowRidePetWN, COMDAT

; 17107: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	57		 push	 edi

; 17108: 	//int baseimageNo = pc.graNo - (pc.graNo % 5);
; 17109: 	int leaderimageNo = 100700 + ((pc.baseGraNo - 100000) / 20) * 10 + (pc.familySprite) * 5;

  00007	8b 3d 50 51 00
	00		 mov	 edi, DWORD PTR ?pc@@3UPC@@A+20816
  0000d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00012	8b 1d 7c a1 00
	00		 mov	 ebx, DWORD PTR ?pc@@3UPC@@A+41340
  00018	8b 35 08 51 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20744
  0001e	8d 8f 60 79 fe
	ff		 lea	 ecx, DWORD PTR [edi-100000]
  00024	f7 e9		 imul	 ecx
  00026	a1 4c 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20812
  0002b	c1 fa 03	 sar	 edx, 3
  0002e	8b ca		 mov	 ecx, edx
  00030	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00033	03 ca		 add	 ecx, edx

; 17110: 	int i = 0, j;

  00035	33 d2		 xor	 edx, edx

; 17111: 
; 17112: 	rideablePet[0] = 0;

  00037	89 15 00 00 00
	00		 mov	 DWORD PTR ?rideablePet@@3PAHA, edx

; 17113: 	rideablePet[1] = 0;

  0003d	89 15 04 00 00
	00		 mov	 DWORD PTR ?rideablePet@@3PAHA+4, edx

; 17114: 	rideablePet[2] = 0;

  00043	89 15 08 00 00
	00		 mov	 DWORD PTR ?rideablePet@@3PAHA+8, edx
  00049	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0004c	8d 80 ac 4e 00
	00		 lea	 eax, DWORD PTR [eax+20140]
  00052	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00055	89 45 fc	 mov	 DWORD PTR _leaderimageNo$1$[ebp], eax
  00058	33 c0		 xor	 eax, eax
  0005a	66 0f 1f 44 00
	00		 npad	 6
$LL4@initShowRi:

; 17134: 	{
; 17135: #ifdef _LEADERRIDE
; 17136: 		if (ridePetTable[j].charNo == pc.baseGraNo ||

  00060	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?ridePetTable@@3PAUtagRidePetTable@@A[eax+4]
  00066	3b cf		 cmp	 ecx, edi
  00068	74 13		 je	 SHORT $LN6@initShowRi
  0006a	3b 4d fc	 cmp	 ecx, DWORD PTR _leaderimageNo$1$[ebp]
  0006d	75 27		 jne	 SHORT $LN2@initShowRi
  0006f	85 db		 test	 ebx, ebx
  00071	74 23		 je	 SHORT $LN2@initShowRi
  00073	83 fe 02	 cmp	 esi, 2
  00076	74 1e		 je	 SHORT $LN2@initShowRi
  00078	83 fe ff	 cmp	 esi, -1
  0007b	74 19		 je	 SHORT $LN2@initShowRi
$LN6@initShowRi:

; 17137: 			(ridePetTable[j].charNo == leaderimageNo && pc.big4fm != 0 && pc.familyleader != FMMEMBER_APPLY && pc.familyleader != FMMEMBER_NONE))
; 17138: #else
; 17139: 		if (ridePetTable[j].charNo == pc.baseGraNo)
; 17140: #endif
; 17141: 		{
; 17142: 			rideablePet[i] = ridePetTable[j].petNo;

  0007d	8b 88 08 00 00
	00		 mov	 ecx, DWORD PTR ?ridePetTable@@3PAUtagRidePetTable@@A[eax+8]
  00083	89 0c 95 00 00
	00 00		 mov	 DWORD PTR ?rideablePet@@3PAHA[edx*4], ecx

; 17143: 			i++;

  0008a	42		 inc	 edx

; 17144: 			showNum = i;

  0008b	89 15 00 00 00
	00		 mov	 DWORD PTR ?showNum@@3HA, edx ; showNum

; 17145: 			if (i >= 3) break;

  00091	83 fa 03	 cmp	 edx, 3
  00094	7d 0a		 jge	 SHORT $LN10@initShowRi
$LN2@initShowRi:

; 17115: 
; 17116: 
; 17117: 	/*
; 17118: 	if( pc.ridePetNo != -1 )
; 17119: 	{
; 17120: 		for( j=0 ; j< sizeof(ridePetTable)/sizeof(tagRidePetTable) ; j++ )
; 17121: 		{
; 17122: 			if( ridePetTable[j].rideNo == pc.graNo )
; 17123: 			{
; 17124: 				baseimageNo = ridePetTable[j].charNo;
; 17125: 				break;
; 17126: 			}
; 17127: 		}
; 17128: 
; 17129: 	}else
; 17130: 		baseimageNo = pc.graNo - (pc.graNo % 5);
; 17131: 	*/
; 17132: 
; 17133: 	for (j = 0; j < sizeof(ridePetTable) / sizeof(tagRidePetTable); j++)

  00096	83 c0 10	 add	 eax, 16			; 00000010H
  00099	3d 20 09 00 00	 cmp	 eax, 2336		; 00000920H
  0009e	72 c0		 jb	 SHORT $LL4@initShowRi
$LN10@initShowRi:
  000a0	5f		 pop	 edi

; 17146: 		}
; 17147: 	}
; 17148: }

  000a1	5e		 pop	 esi
  000a2	5b		 pop	 ebx
  000a3	8b e5		 mov	 esp, ebp
  000a5	5d		 pop	 ebp
  000a6	c3		 ret	 0
?initShowRidePetWN@@YAXXZ ENDP				; initShowRidePetWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMPKDetailWN@@YAXH@Z
_TEXT	SEGMENT
_btnTitle$ = -796					; size = 24
_buf$ = -772						; size = 256
_buf2$ = -516						; size = 256
_dataBuf$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?FMPKDetailWN@@YAXH@Z PROC				; FMPKDetailWN, COMDAT

; 16543: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 03 00
	00		 sub	 esp, 796		; 0000031cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 16544: 
; 16545: 	static int winX, winY;
; 16546: 	static int winW, winH;
; 16547: 	static int fontId[] = { -2, -2, -2, -2, -2, -2, -2 };
; 16548: 	static int btnId[] = { -2, -2, -2, -2, -2 };
; 16549: 	static int btnLoc[6][2];
; 16550: 	static int btnCnt;
; 16551: 	//static int msgLine;
; 16552: 	//static STR_BUFFER input;
; 16553: 	static int pushBtnFlag[4];
; 16554: 	int selBtnId;
; 16555: 	char dataBuf[256];
; 16556: 	char buf[256];
; 16557: 	char buf2[256];
; 16558: 
; 16559: 
; 16560: 	char* btnTitle[] =
; 16561: 	{
; 16562: 		" ï¼¯ï¼« ",
; 16563: 		"CANCEL",
; 16564: 		"?  ?",
; 16565: 		"?  ?",
; 16566: 		"??",
; 16567: 		"??"
; 16568: 	};
; 16569: 	int id;
; 16570: 	int i, j;
; 16571: 	int mask;
; 16572: 	int btn;
; 16573: 
; 16574: 
; 16575: 	static int totalMsgLine;
; 16576: 	static int lineSkip;
; 16577: 
; 16578: 
; 16579: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	c7 85 e4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00026	c7 85 e8 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00030	c7 85 ec fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0003a	c7 85 f0 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00044	c7 85 f4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004e	c7 85 f8 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00058	0f 85 1b 01 00
	00		 jne	 $LN92@FMPKDetail

; 16580: 	{
; 16581: 		winW = 6;
; 16582: 		winH = 8;
; 16583: 		winX = (640 - winW * 64) / 2;
; 16584: 		winY = (456 - winH * 48) / 2;
; 16585: 
; 16586: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	6a 08		 push	 8
  00064	6a 06		 push	 6
  00066	6a 24		 push	 36			; 00000024H
  00068	68 80 00 00 00	 push	 128			; 00000080H
  0006d	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winW@?1??FMPKDetailWN@@YAXH@Z@4HA, 6
  00077	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??FMPKDetailWN@@YAXH@Z@4HA, 8
  00081	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA, 128 ; 00000080H
  0008b	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA, 36 ; 00000024H
  00095	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 16587: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 16588: 		winX = ptActMenuWin->x;
; 16589: 		winY = ptActMenuWin->y;
; 16590: #endif		
; 16591: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 16592: 		{
; 16593: 			fontId[i] = -2;

  0009a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 16594: 		}
; 16595: 
; 16596: 		mask = 1;
; 16597: 		btnCnt = 0;

  000a1	33 f6		 xor	 esi, esi

; 16598: 		for (i = 0; i < 6; i++, mask <<= 1)

  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a9	83 c4 18	 add	 esp, 24			; 00000018H
  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b4	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA, ecx
  000bd	33 c9		 xor	 ecx, ecx
  000bf	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA, eax
  000c4	b8 01 00 00 00	 mov	 eax, 1
  000c9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA, xmm0
  000d0	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+16, -2 ; fffffffeH
  000da	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+20, -2 ; fffffffeH
  000e4	c7 05 18 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+24, -2 ; fffffffeH
  000ee	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKDetailWN@@YAXH@Z@4HA, esi
$LL7@FMPKDetail:

; 16599: 		{
; 16600: 			if (buttonTypeWN & mask)

  000f4	85 d0		 test	 edx, eax
  000f6	74 06		 je	 SHORT $LN5@FMPKDetail

; 16601: 			{
; 16602: 				btnCnt++;

  000f8	46		 inc	 esi
  000f9	83 fe 04	 cmp	 esi, 4

; 16603: 				if (btnCnt == 4)

  000fc	74 08		 je	 SHORT $LN53@FMPKDetail
$LN5@FMPKDetail:

; 16598: 		for (i = 0; i < 6; i++, mask <<= 1)

  000fe	41		 inc	 ecx
  000ff	03 c0		 add	 eax, eax
  00101	83 f9 06	 cmp	 ecx, 6
  00104	7c ee		 jl	 SHORT $LL7@FMPKDetail
$LN53@FMPKDetail:

; 16601: 			{
; 16602: 				btnCnt++;

  00106	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKDetailWN@@YAXH@Z@4HA, esi

; 16604: 					break;
; 16605: 			}
; 16606: 		}
; 16607: 
; 16608: 		// ????????î¸î?î³????
; 16609: 		if (btnCnt > 0)

  0010c	85 f6		 test	 esi, esi
  0010e	7e 45		 jle	 SHORT $LN9@FMPKDetail

; 16610: 		{
; 16611: 			int w;
; 16612: 			w = winW * 64 / (btnCnt + 1);

  00110	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMPKDetailWN@@YAXH@Z@4HA
  00115	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00118	c1 e0 06	 shl	 eax, 6
  0011b	99		 cdq
  0011c	f7 f9		 idiv	 ecx
  0011e	33 d2		 xor	 edx, edx

; 16613: 			for (i = 0; i < btnCnt; i++)

  00120	85 f6		 test	 esi, esi
  00122	7e 31		 jle	 SHORT $LN9@FMPKDetail

; 16610: 		{
; 16611: 			int w;
; 16612: 			w = winW * 64 / (btnCnt + 1);

  00124	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??FMPKDetailWN@@YAXH@Z@4HA
  0012a	8d 3c 49	 lea	 edi, DWORD PTR [ecx+ecx*2]
  0012d	c1 e7 04	 shl	 edi, 4
  00130	8d 48 e5	 lea	 ecx, DWORD PTR [eax-27]
  00133	83 c7 c8	 add	 edi, -56		; ffffffc8H
  00136	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL10@FMPKDetail:

; 16614: 			{
; 16615: 				btnLoc[i][0] = w * (i + 1) - 27;

  00140	89 0c d5 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA[edx*8], ecx
  00147	03 c8		 add	 ecx, eax

; 16616: 				btnLoc[i][1] = winH * 48 - 56;

  00149	89 3c d5 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA[edx*8+4], edi
  00150	42		 inc	 edx
  00151	3b d6		 cmp	 edx, esi
  00153	7c eb		 jl	 SHORT $LL10@FMPKDetail
$LN9@FMPKDetail:

; 16617: 			}
; 16618: 		}
; 16619: 
; 16620: 		play_se(202, 320, 240);

  00155	68 f0 00 00 00	 push	 240			; 000000f0H
  0015a	68 40 01 00 00	 push	 320			; 00000140H
  0015f	68 ca 00 00 00	 push	 202			; 000000caH
  00164	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00169	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16621: 	}
; 16622: 
; 16623: 
; 16624: 	if (ptActMenuWin != NULL)

  0016c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00173	0f 84 b4 05 00
	00		 je	 $LN44@FMPKDetail
$LN92@FMPKDetail:
  00179	53		 push	 ebx

; 16625: 	{
; 16626: 		// ?????î±î¶îî
; 16627: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0017a	6a 07		 push	 7
  0017c	68 00 00 00 00	 push	 OFFSET ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA
  00181	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId

; 16628: 		selBtnId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  00186	6a 05		 push	 5
  00188	68 00 00 00 00	 push	 OFFSET ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA
  0018d	8b f0		 mov	 esi, eax
  0018f	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  00194	83 c4 10	 add	 esp, 16			; 00000010H
  00197	8b d8		 mov	 ebx, eax

; 16629: 
; 16630: 		// î??????î?????????????î¼??
; 16631: 		if (CheckMenuFlag()
; 16632: 			|| (joy_trg[0] & JOY_ESC)
; 16633: 			|| actBtn == 1
; 16634: 			|| menuBtn == 1
; 16635: 			|| disconnectServerFlag == TRUE
; 16636: 			|| wnCloseFlag == 1

  00199	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0019e	85 c0		 test	 eax, eax
  001a0	0f 85 37 01 00
	00		 jne	 $LN25@FMPKDetail
  001a6	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  001b0	0f 85 27 01 00
	00		 jne	 $LN25@FMPKDetail
  001b6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  001be	0f 84 19 01 00
	00		 je	 $LN25@FMPKDetail
  001c4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001cc	0f 84 0b 01 00
	00		 je	 $LN25@FMPKDetail
  001d2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001d9	0f 84 fe 00 00
	00		 je	 $LN25@FMPKDetail
  001df	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001e7	0f 84 f0 00 00
	00		 je	 $LN25@FMPKDetail

; 16644: 		}
; 16645: 
; 16646: 		// ï¼¯ï¼«
; 16647: 		if (0 <= id && id < 6)

  001ed	85 f6		 test	 esi, esi
  001ef	0f 88 c1 00 00
	00		 js	 $LN26@FMPKDetail
  001f5	83 fe 06	 cmp	 esi, 6
  001f8	0f 8d bb 00 00
	00		 jge	 $LN104@FMPKDetail

; 16648: 		{
; 16649: 			btn = 1;
; 16650: 			btn <<= id;
; 16651: 
; 16652: 			sprintf(dataBuf, "%s|%s|%s|%d|%d|%d",

  001fe	ff 35 30 00 00
	00		 push	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48
  00204	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0020a	8b ce		 mov	 ecx, esi
  0020c	ff 35 2c 00 00
	00		 push	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44
  00212	bf 01 00 00 00	 mov	 edi, 1
  00217	ff 35 28 00 00
	00		 push	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40
  0021d	d3 e7		 shl	 edi, cl
  0021f	68 00 01 00 00	 push	 256			; 00000100H
  00224	50		 push	 eax
  00225	68 16 00 00 00	 push	 OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+22
  0022a	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0022f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00232	50		 push	 eax
  00233	68 00 01 00 00	 push	 256			; 00000100H
  00238	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0023e	50		 push	 eax
  0023f	68 05 00 00 00	 push	 OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+5
  00244	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00249	83 c4 0c	 add	 esp, 12			; 0000000cH
  0024c	50		 push	 eax
  0024d	68 00 00 00 00	 push	 OFFSET ?FMPKDetailData@@3UFMPKDetail@@A ; FMPKDetailData
  00252	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00258	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@PKDFJBMN@?$CFs?$HM?$CFs?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFd@
  0025d	50		 push	 eax
  0025e	e8 00 00 00 00	 call	 _sprintf
  00263	83 c4 20	 add	 esp, 32			; 00000020H

; 16653: 				FMPKDetailData.time,
; 16654: 				makeEscapeString(FMPKDetailData.atkFMName, buf, sizeof(buf)),
; 16655: 				makeEscapeString(FMPKDetailData.defFMName, buf2, sizeof(buf2)),
; 16656: 				FMPKDetailData.readyTime,
; 16657: 				FMPKDetailData.member,
; 16658: 				FMPKDetailData.win
; 16659: 			);
; 16660: 			if (bNewServer)

  00266	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0026c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00273	50		 push	 eax
  00274	57		 push	 edi
  00275	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0027b	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00281	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00287	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0028d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00293	74 07		 je	 SHORT $LN28@FMPKDetail

; 16661: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, dataBuf);

  00295	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0029a	eb 05		 jmp	 SHORT $LN105@FMPKDetail
$LN28@FMPKDetail:

; 16662: 			else
; 16663: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, dataBuf);

  0029c	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN105@FMPKDetail:

; 16664: 
; 16665: 			windowTypeWN = -1;

  002a1	83 c4 1c	 add	 esp, 28			; 0000001cH
  002a4	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN98@FMPKDetail:

; 16673: 		}
; 16674: 
; 16675: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  002ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002b4	eb 54		 jmp	 SHORT $LN31@FMPKDetail
$LN26@FMPKDetail:

; 16666: 
; 16667: 		}
; 16668: 		else if (id == 6)

  002b6	83 fe 06	 cmp	 esi, 6
$LN104@FMPKDetail:
  002b9	75 f3		 jne	 SHORT $LN98@FMPKDetail

; 16669: 		{
; 16670: 			FMPKDetailData.win++;

  002bb	a1 30 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48
  002c0	40		 inc	 eax
  002c1	a3 30 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48, eax
  002c6	83 f8 01	 cmp	 eax, 1

; 16671: 			if (FMPKDetailData.win > 1)

  002c9	7e e3		 jle	 SHORT $LN98@FMPKDetail

; 16672: 				FMPKDetailData.win = 0;

  002cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002d1	c7 05 30 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48, 0
  002db	eb 2d		 jmp	 SHORT $LN31@FMPKDetail
$LN25@FMPKDetail:

; 16637: 			)
; 16638: 		{
; 16639: 			id = 100;
; 16640: 			windowTypeWN = -1;
; 16641: 			wnCloseFlag = 0;
; 16642: 			DeathAction(ptActMenuWin);

  002dd	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002e3	33 c0		 xor	 eax, eax
  002e5	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002ef	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  002f4	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  002fa	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002ff	83 c4 04	 add	 esp, 4

; 16643: 			ptActMenuWin = NULL;

  00302	33 c9		 xor	 ecx, ecx
  00304	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin
$LN31@FMPKDetail:

; 16673: 		}
; 16674: 
; 16675: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  0030a	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00311	0f 84 a2 00 00
	00		 je	 $LN99@FMPKDetail

; 16676: 			switch (selBtnId) {

  00317	83 fb 03	 cmp	 ebx, 3
  0031a	0f 87 99 00 00
	00		 ja	 $LN99@FMPKDetail
  00320	ff 24 9d 00 00
	00 00		 jmp	 DWORD PTR $LN97@FMPKDetail[ebx*4]
$LN33@FMPKDetail:

; 16677: 			case 0:
; 16678: 				pushBtnFlag[0] = TRUE;
; 16679: 				FMPKDetailData.readyTime++;

  00327	a1 28 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40
  0032c	40		 inc	 eax
  0032d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA, 1
  00337	a3 28 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40, eax
  0033c	83 f8 28	 cmp	 eax, 40			; 00000028H

; 16680: 				if (FMPKDetailData.readyTime > 40)

  0033f	7e 78		 jle	 SHORT $LN99@FMPKDetail

; 16681: 					FMPKDetailData.readyTime = 1;

  00341	c7 05 28 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40, 1

; 16682: 				break;

  0034b	eb 6c		 jmp	 SHORT $LN99@FMPKDetail
$LN35@FMPKDetail:

; 16683: 			case 1:
; 16684: 				pushBtnFlag[1] = TRUE;
; 16685: 				FMPKDetailData.readyTime--;

  0034d	a1 28 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40
  00352	48		 dec	 eax
  00353	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4, 1
  0035d	a3 28 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40, eax
  00362	83 f8 01	 cmp	 eax, 1

; 16686: 				if (FMPKDetailData.readyTime < 1)

  00365	7d 52		 jge	 SHORT $LN99@FMPKDetail

; 16687: 					FMPKDetailData.readyTime = 40;

  00367	c7 05 28 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40, 40 ; 00000028H

; 16688: 				break;

  00371	eb 46		 jmp	 SHORT $LN99@FMPKDetail
$LN37@FMPKDetail:

; 16689: 			case 2:
; 16690: 				pushBtnFlag[2] = TRUE;
; 16691: 				FMPKDetailData.member++;

  00373	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44
  00378	40		 inc	 eax
  00379	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8, 1
  00383	a3 2c 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44, eax
  00388	83 f8 32	 cmp	 eax, 50			; 00000032H

; 16692: 				if (FMPKDetailData.member > 50)

  0038b	7e 2c		 jle	 SHORT $LN99@FMPKDetail

; 16693: 					FMPKDetailData.member = 1;

  0038d	c7 05 2c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44, 1

; 16694: 				break;

  00397	eb 20		 jmp	 SHORT $LN99@FMPKDetail
$LN39@FMPKDetail:

; 16695: 			case 3:
; 16696: 				pushBtnFlag[3] = TRUE;
; 16697: 				FMPKDetailData.member--;

  00399	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44

; 16698: 				if (FMPKDetailData.member < 1)

  0039e	ba 32 00 00 00	 mov	 edx, 50			; 00000032H
  003a3	48		 dec	 eax
  003a4	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12, 1
  003ae	83 f8 01	 cmp	 eax, 1
  003b1	0f 4c c2	 cmovl	 eax, edx
  003b4	a3 2c 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44, eax
$LN99@FMPKDetail:

; 16699: 					FMPKDetailData.member = 50;
; 16700: 				break;
; 16701: 
; 16702: 			}
; 16703: 
; 16704: 
; 16705: 		if (id >= 0 && id < 6)

  003b9	83 fe 05	 cmp	 esi, 5
  003bc	77 36		 ja	 SHORT $LN41@FMPKDetail

; 16706: 		{
; 16707: 			windowTypeWN = -1;
; 16708: 			wnCloseFlag = 0;

  003be	33 c0		 xor	 eax, eax
  003c0	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 16709: 			DeathAction(ptActMenuWin);

  003ca	51		 push	 ecx
  003cb	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  003d1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  003d6	83 c4 04	 add	 esp, 4

; 16710: 			ptActMenuWin = NULL;

  003d9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  003e3	5b		 pop	 ebx
  003e4	5f		 pop	 edi

; 16777: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 2);
; 16778: 
; 16779: 		}
; 16780: 	}
; 16781: 
; 16782: 
; 16783: }

  003e5	5e		 pop	 esi
  003e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e9	33 cd		 xor	 ecx, ebp
  003eb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003f0	8b e5		 mov	 esp, ebp
  003f2	5d		 pop	 ebp
  003f3	c3		 ret	 0
$LN41@FMPKDetail:

; 16711: 			return;
; 16712: 		}
; 16713: 
; 16714: 
; 16715: 		for (int i = 0; i < 4; i++)
; 16716: 		{
; 16717: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  003f4	a1 28 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+40
  003f9	83 e0 01	 and	 eax, 1
  003fc	74 15		 je	 SHORT $LN60@FMPKDetail
  003fe	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA, 1
  00405	75 0c		 jne	 SHORT $LN60@FMPKDetail

; 16718: 				pushBtnFlag[i] = TRUE;

  00407	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA, 1
  00411	eb 0e		 jmp	 SHORT $LN96@FMPKDetail
$LN60@FMPKDetail:

; 16719: 			else	pushBtnFlag[i] = FALSE;

  00413	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA, 0
  0041d	85 c0		 test	 eax, eax
  0041f	74 15		 je	 SHORT $LN81@FMPKDetail
$LN96@FMPKDetail:

; 16711: 			return;
; 16712: 		}
; 16713: 
; 16714: 
; 16715: 		for (int i = 0; i < 4; i++)
; 16716: 		{
; 16717: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  00421	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4, 1
  00428	75 0c		 jne	 SHORT $LN81@FMPKDetail

; 16718: 				pushBtnFlag[i] = TRUE;

  0042a	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4, 1
  00434	eb 0e		 jmp	 SHORT $LN95@FMPKDetail
$LN81@FMPKDetail:

; 16719: 			else	pushBtnFlag[i] = FALSE;

  00436	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4, 0
  00440	85 c0		 test	 eax, eax
  00442	74 15		 je	 SHORT $LN84@FMPKDetail
$LN95@FMPKDetail:

; 16711: 			return;
; 16712: 		}
; 16713: 
; 16714: 
; 16715: 		for (int i = 0; i < 4; i++)
; 16716: 		{
; 16717: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  00444	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8, 1
  0044b	75 0c		 jne	 SHORT $LN84@FMPKDetail

; 16718: 				pushBtnFlag[i] = TRUE;

  0044d	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8, 1
  00457	eb 0e		 jmp	 SHORT $LN94@FMPKDetail
$LN84@FMPKDetail:

; 16719: 			else	pushBtnFlag[i] = FALSE;

  00459	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8, 0
  00463	85 c0		 test	 eax, eax
  00465	74 13		 je	 SHORT $LN87@FMPKDetail
$LN94@FMPKDetail:

; 16711: 			return;
; 16712: 		}
; 16713: 
; 16714: 
; 16715: 		for (int i = 0; i < 4; i++)
; 16716: 		{
; 16717: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  00467	83 3d 0c 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12, 1

; 16718: 				pushBtnFlag[i] = TRUE;

  0046e	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12, 1
  00478	74 0a		 je	 SHORT $LN88@FMPKDetail
$LN87@FMPKDetail:

; 16719: 			else	pushBtnFlag[i] = FALSE;

  0047a	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12, 0
$LN88@FMPKDetail:

; 16720: 		}
; 16721: 
; 16722: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00484	85 c9		 test	 ecx, ecx
  00486	0f 84 a0 02 00
	00		 je	 $LN103@FMPKDetail
  0048c	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  00490	0f 8c 96 02 00
	00		 jl	 $LN103@FMPKDetail

; 16723: 		{
; 16724: 
; 16725: 
; 16726: 			j = 0;

  00496	33 ff		 xor	 edi, edi

; 16727: 
; 16728: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00498	bb 01 00 00 00	 mov	 ebx, 1
  0049d	33 f6		 xor	 esi, esi
  0049f	90		 npad	 1
$LL18@FMPKDetail:

; 16729: 			{
; 16730: 				fontId[i] = -2;

  004a0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 16731: 				if (buttonTypeWN & mask)

  004aa	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  004b0	74 40		 je	 SHORT $LN16@FMPKDetail

; 16732: 				{
; 16733: 					if (j < btnCnt)

  004b2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??FMPKDetailWN@@YAXH@Z@4HA
  004b8	7d 38		 jge	 SHORT $LN16@FMPKDetail

; 16734: 					{
; 16735: 						fontId[i] =

  004ba	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA[edi*8+4]
  004c1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  004c7	6a 02		 push	 2
  004c9	ff b4 35 e4 fc
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  004d0	6a 04		 push	 4
  004d2	6a 01		 push	 1
  004d4	50		 push	 eax
  004d5	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKDetailWN@@YAXH@Z@4PAY01HA[edi*8]
  004dc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  004e2	50		 push	 eax
  004e3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004e8	83 c4 18	 add	 esp, 24			; 00000018H
  004eb	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA[esi], eax

; 16736: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 16737: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 16738: 						j++;

  004f1	47		 inc	 edi
$LN16@FMPKDetail:

; 16727: 
; 16728: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  004f2	83 c6 04	 add	 esi, 4
  004f5	03 db		 add	 ebx, ebx
  004f7	83 fe 18	 cmp	 esi, 24			; 00000018H
  004fa	7c a4		 jl	 SHORT $LL18@FMPKDetail

; 16739: 					}
; 16740: 				}
; 16741: 			}
; 16742: 
; 16743: 			StockFontBuffer(winX + 140, winY + 30,

  004fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  00501	6a 00		 push	 0
  00503	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LDIFEIBI@?$LA?$KB?A?$LH?$LE?k?$LA?a?$LN?E?C?$LL@
  00508	6a 00		 push	 0
  0050a	83 c0 1e	 add	 eax, 30			; 0000001eH
  0050d	6a 01		 push	 1
  0050f	50		 push	 eax
  00510	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  00515	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  0051a	50		 push	 eax
  0051b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16744: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, "ê°ì¡±ëê²°ì ì²­", 0);
; 16745: #ifdef _READ16BITBMP
; 16746: 			if (!g_bUseAlpha) StockDispHLine(winX + 100, winY + 50, 3);
; 16747: #endif
; 16748: 
; 16749: 			sprintf(dataBuf, "%s %s", "ëì ê°ì¡±ï¼", FMPKDetailData.atkFMName);

  00520	68 05 00 00 00	 push	 OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+5
  00525	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBIJEBEK@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH?$KD?$LK@
  0052a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00530	68 00 00 00 00	 push	 OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs@
  00535	50		 push	 eax
  00536	e8 00 00 00 00	 call	 _sprintf

; 16750: 			StockFontBuffer(winX + 40, winY + 90,

  0053b	6a 00		 push	 0
  0053d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00543	50		 push	 eax
  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  00549	6a 00		 push	 0
  0054b	83 c0 5a	 add	 eax, 90			; 0000005aH
  0054e	6a 01		 push	 1
  00550	50		 push	 eax
  00551	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  00556	83 c0 28	 add	 eax, 40			; 00000028H
  00559	50		 push	 eax
  0055a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0055f	83 c4 40	 add	 esp, 64			; 00000040H

; 16751: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16752: 
; 16753: 			sprintf(dataBuf, "%s %s", "ì ì²­ê°ì¡±ï¼", FMPKDetailData.defFMName);

  00562	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00568	68 16 00 00 00	 push	 OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+22
  0056d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PHNGNCKG@?$LN?E?C?$LL?$LA?$KB?A?$LH?$KD?$LK@
  00572	68 00 00 00 00	 push	 OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs@
  00577	50		 push	 eax
  00578	e8 00 00 00 00	 call	 _sprintf

; 16754: 			StockFontBuffer(winX + 40, winY + 90 + 40,

  0057d	6a 00		 push	 0
  0057f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00585	50		 push	 eax
  00586	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  0058b	6a 00		 push	 0
  0058d	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00592	6a 01		 push	 1
  00594	50		 push	 eax
  00595	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  0059a	83 c0 28	 add	 eax, 40			; 00000028H
  0059d	50		 push	 eax
  0059e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16755: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16756: 
; 16757: 			sprintf(dataBuf, "ì¤ë¹ìê°ï¼ %d ë¶", FMPKDetailData.readyTime);

  005a3	ff 35 28 00 00
	00		 push	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40
  005a9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  005af	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PNKEDEKN@?A?X?$LK?q?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?5?$LK?P@
  005b4	50		 push	 eax
  005b5	e8 00 00 00 00	 call	 _sprintf

; 16758: 			StockFontBuffer(winX + 40, winY + 90 + 80,

  005ba	6a 00		 push	 0
  005bc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  005c2	50		 push	 eax
  005c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  005c8	6a 00		 push	 0
  005ca	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  005cf	6a 01		 push	 1
  005d1	50		 push	 eax
  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  005d7	83 c0 28	 add	 eax, 40			; 00000028H
  005da	50		 push	 eax
  005db	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16759: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16760: 
; 16761: 			btnId[0] = StockDispBuffer(winX + 190, winY + 98 + 80, DISP_PRIO_IME3,

  005e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA
  005e5	83 c4 4c	 add	 esp, 76			; 0000004cH
  005e8	05 4c 66 00 00	 add	 eax, 26188		; 0000664cH
  005ed	6a 02		 push	 2
  005ef	50		 push	 eax
  005f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  005f5	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  005fa	6a 69		 push	 105			; 00000069H
  005fc	50		 push	 eax
  005fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  00602	05 be 00 00 00	 add	 eax, 190		; 000000beH
  00607	50		 push	 eax
  00608	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0060d	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA, eax

; 16762: 				CG_UP_BTN + pushBtnFlag[0], 2);
; 16763: 			btnId[1] = StockDispBuffer(winX + 190 + 40, winY + 98 + 80, DISP_PRIO_IME3,

  00612	a1 04 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4
  00617	6a 02		 push	 2
  00619	05 4e 66 00 00	 add	 eax, 26190		; 0000664eH
  0061e	50		 push	 eax
  0061f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  00624	05 b2 00 00 00	 add	 eax, 178		; 000000b2H
  00629	6a 69		 push	 105			; 00000069H
  0062b	50		 push	 eax
  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  00631	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  00636	50		 push	 eax
  00637	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 16764: 				CG_DOWN_BTN + pushBtnFlag[1], 2);
; 16765: 
; 16766: 			sprintf(dataBuf, "ì°¸ê°ììï¼ %d ëª", FMPKDetailData.member);

  0063c	ff 35 2c 00 00
	00		 push	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44
  00642	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+4, eax
  00647	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0064d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HNBGGGNE@?B?$PM?$LA?$KB?$MA?Z?$LM?v?$KD?$LK?5?$CFd?5?$LI?m@
  00652	50		 push	 eax
  00653	e8 00 00 00 00	 call	 _sprintf

; 16767: 			StockFontBuffer(winX + 40, winY + 90 + 120,

  00658	6a 00		 push	 0
  0065a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00660	50		 push	 eax
  00661	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  00666	6a 00		 push	 0
  00668	05 d2 00 00 00	 add	 eax, 210		; 000000d2H
  0066d	6a 01		 push	 1
  0066f	50		 push	 eax
  00670	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  00675	83 c0 28	 add	 eax, 40			; 00000028H
  00678	50		 push	 eax
  00679	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16768: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16769: 
; 16770: 			btnId[2] = StockDispBuffer(winX + 190, winY + 98 + 120, DISP_PRIO_IME3,

  0067e	a1 08 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8
  00683	83 c4 4c	 add	 esp, 76			; 0000004cH
  00686	05 4c 66 00 00	 add	 eax, 26188		; 0000664cH
  0068b	6a 02		 push	 2
  0068d	50		 push	 eax
  0068e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  00693	05 da 00 00 00	 add	 eax, 218		; 000000daH
  00698	6a 69		 push	 105			; 00000069H
  0069a	50		 push	 eax
  0069b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  006a0	05 be 00 00 00	 add	 eax, 190		; 000000beH
  006a5	50		 push	 eax
  006a6	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006ab	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+8, eax

; 16771: 				CG_UP_BTN + pushBtnFlag[2], 2);
; 16772: 			btnId[3] = StockDispBuffer(winX + 190 + 40, winY + 98 + 120, DISP_PRIO_IME3,

  006b0	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12
  006b5	05 4e 66 00 00	 add	 eax, 26190		; 0000664eH
  006ba	6a 02		 push	 2
  006bc	50		 push	 eax
  006bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  006c2	05 da 00 00 00	 add	 eax, 218		; 000000daH
  006c7	6a 69		 push	 105			; 00000069H
  006c9	50		 push	 eax
  006ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  006cf	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  006d4	50		 push	 eax
  006d5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006da	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+12, eax

; 16773: 				CG_DOWN_BTN + pushBtnFlag[3], 2);
; 16774: 
; 16775: 			sprintf(dataBuf, "ì¹ë¦¬ì¡°ê±´ï¼ %s", winStr[FMPKDetailData.win]);

  006df	a1 30 00 00 00	 mov	 eax, DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48
  006e4	c1 e0 04	 shl	 eax, 4
  006e7	05 00 00 00 00	 add	 eax, OFFSET ?winStr@@3PAY0BA@DA ; winStr
  006ec	50		 push	 eax
  006ed	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  006f3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DBFPDLEJ@?$LN?B?$LI?$KO?A?$LG?$LA?G?$KD?$LK?5?$CFs@
  006f8	50		 push	 eax
  006f9	e8 00 00 00 00	 call	 _sprintf

; 16776: 			fontId[6] = StockFontBuffer(winX + 40, winY + 90 + 160,

  006fe	6a 02		 push	 2
  00700	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00706	50		 push	 eax
  00707	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKDetailWN@@YAXH@Z@4HA
  0070c	6a 00		 push	 0
  0070e	05 fa 00 00 00	 add	 eax, 250		; 000000faH
  00713	6a 01		 push	 1
  00715	50		 push	 eax
  00716	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKDetailWN@@YAXH@Z@4HA
  0071b	83 c0 28	 add	 eax, 40			; 00000028H
  0071e	50		 push	 eax
  0071f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00724	83 c4 4c	 add	 esp, 76			; 0000004cH
  00727	a3 18 00 00 00	 mov	 DWORD PTR ?fontId@?1??FMPKDetailWN@@YAXH@Z@4PAHA+24, eax
$LN103@FMPKDetail:
  0072c	5b		 pop	 ebx
$LN44@FMPKDetail:

; 16777: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 2);
; 16778: 
; 16779: 		}
; 16780: 	}
; 16781: 
; 16782: 
; 16783: }

  0072d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00730	5f		 pop	 edi
  00731	33 cd		 xor	 ecx, ebp
  00733	5e		 pop	 esi
  00734	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00739	8b e5		 mov	 esp, ebp
  0073b	5d		 pop	 ebp
  0073c	c3		 ret	 0
  0073d	0f 1f 00	 npad	 3
$LN97@FMPKDetail:
  00740	00 00 00 00	 DD	 $LN33@FMPKDetail
  00744	00 00 00 00	 DD	 $LN35@FMPKDetail
  00748	00 00 00 00	 DD	 $LN37@FMPKDetail
  0074c	00 00 00 00	 DD	 $LN39@FMPKDetail
?FMPKDetailWN@@YAXH@Z ENDP				; FMPKDetailWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMPKDetailWN@@YAXPAD@Z
_TEXT	SEGMENT
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMPKDetailWN@@YAXPAD@Z PROC			; initFMPKDetailWN, COMDAT

; 16521: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 16522: 
; 16523: 	char buf2[256];
; 16524: 
; 16525: 	getStringToken(data, '|', 1, sizeof(buf2) - 1, buf2);

  00017	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0001d	50		 push	 eax
  0001e	68 ff 00 00 00	 push	 255			; 000000ffH
  00023	6a 01		 push	 1
  00025	6a 7c		 push	 124			; 0000007cH
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16526: 	strcpy(FMPKDetailData.time, makeStringFromEscaped(buf2));

  0002d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00039	ba 00 00 00 00	 mov	 edx, OFFSET ?FMPKDetailData@@3UFMPKDetail@@A ; FMPKDetailData
  0003e	83 c4 18	 add	 esp, 24			; 00000018H
  00041	2b d0		 sub	 edx, eax
$LL3@initFMPKDe:
  00043	8a 08		 mov	 cl, BYTE PTR [eax]
  00045	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00048	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  0004c	84 c9		 test	 cl, cl
  0004e	75 f3		 jne	 SHORT $LL3@initFMPKDe

; 16527: 	getStringToken(data, '|', 2, sizeof(buf2) - 1, buf2);

  00050	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00056	50		 push	 eax
  00057	68 ff 00 00 00	 push	 255			; 000000ffH
  0005c	6a 02		 push	 2
  0005e	6a 7c		 push	 124			; 0000007cH
  00060	56		 push	 esi
  00061	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16528: 	strcpy(FMPKDetailData.atkFMName, makeStringFromEscaped(buf2));

  00066	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00072	ba 05 00 00 00	 mov	 edx, OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+5
  00077	83 c4 18	 add	 esp, 24			; 00000018H
  0007a	2b d0		 sub	 edx, eax
  0007c	0f 1f 40 00	 npad	 4
$LL4@initFMPKDe:
  00080	8a 08		 mov	 cl, BYTE PTR [eax]
  00082	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00085	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00089	84 c9		 test	 cl, cl
  0008b	75 f3		 jne	 SHORT $LL4@initFMPKDe

; 16529: 	getStringToken(data, '|', 3, sizeof(buf2) - 1, buf2);

  0008d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00093	50		 push	 eax
  00094	68 ff 00 00 00	 push	 255			; 000000ffH
  00099	6a 03		 push	 3
  0009b	6a 7c		 push	 124			; 0000007cH
  0009d	56		 push	 esi
  0009e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16530: 	strcpy(FMPKDetailData.defFMName, makeStringFromEscaped(buf2));

  000a3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000af	ba 16 00 00 00	 mov	 edx, OFFSET ?FMPKDetailData@@3UFMPKDetail@@A+22
  000b4	83 c4 18	 add	 esp, 24			; 00000018H
  000b7	2b d0		 sub	 edx, eax
  000b9	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@initFMPKDe:
  000c0	8a 08		 mov	 cl, BYTE PTR [eax]
  000c2	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000c5	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  000c9	84 c9		 test	 cl, cl
  000cb	75 f3		 jne	 SHORT $LL5@initFMPKDe

; 16531: 	getStringToken(data, '|', 4, sizeof(buf2) - 1, buf2);

  000cd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000d3	50		 push	 eax
  000d4	68 ff 00 00 00	 push	 255			; 000000ffH
  000d9	6a 04		 push	 4
  000db	6a 7c		 push	 124			; 0000007cH
  000dd	56		 push	 esi
  000de	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16532: 	FMPKDetailData.readyTime = atoi(buf2);

  000e3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 _atoi
  000ef	a3 28 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+40, eax

; 16533: 	getStringToken(data, '|', 5, sizeof(buf2) - 1, buf2);

  000f4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000fa	50		 push	 eax
  000fb	68 ff 00 00 00	 push	 255			; 000000ffH
  00100	6a 05		 push	 5
  00102	6a 7c		 push	 124			; 0000007cH
  00104	56		 push	 esi
  00105	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16534: 	FMPKDetailData.member = atoi(buf2);

  0010a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 _atoi
  00116	a3 2c 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+44, eax

; 16535: 	getStringToken(data, '|', 6, sizeof(buf2) - 1, buf2);

  0011b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00121	50		 push	 eax
  00122	68 ff 00 00 00	 push	 255			; 000000ffH
  00127	6a 06		 push	 6
  00129	6a 7c		 push	 124			; 0000007cH
  0012b	56		 push	 esi
  0012c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00131	83 c4 44	 add	 esp, 68			; 00000044H

; 16536: 	FMPKDetailData.win = atoi(buf2);

  00134	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 _atoi

; 16537: 
; 16538: }

  00140	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00143	83 c4 04	 add	 esp, 4
  00146	33 cd		 xor	 ecx, ebp
  00148	a3 30 00 00 00	 mov	 DWORD PTR ?FMPKDetailData@@3UFMPKDetail@@A+48, eax
  0014d	5e		 pop	 esi
  0014e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c3		 ret	 0
?initFMPKDetailWN@@YAXPAD@Z ENDP			; initFMPKDetailWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMPKSelectWN@@YAXH@Z
_TEXT	SEGMENT
_btnTitle$ = -540					; size = 24
_buf$ = -516						; size = 256
_dataBuf$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?FMPKSelectWN@@YAXH@Z PROC				; FMPKSelectWN, COMDAT

; 16312: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 16313: 	static int winX, winY;
; 16314: 	static int winW, winH;
; 16315: 	static int fontId[] = { -2, -2, -2, -2, -2, -2,
; 16316: 							-2, -2, -2, -2, -2, -2, -2, -2 };
; 16317: 	static int btnLoc[6][2];
; 16318: 	static int btnCnt;
; 16319: 	//static int msgLine;
; 16320: 	//static STR_BUFFER input;
; 16321: 	char dataBuf[256];
; 16322: 	char buf[256];
; 16323: 
; 16324: 	//int	dataStatus;
; 16325: 	/*
; 16326: 	char *dataStatusStr[] =
; 16327: 	{
; 16328: 		"æªä½¿ç¨",
; 16329: 		" ä¿®æ¹ ",
; 16330: 		" æ¥å ",
; 16331: 		"è®¾å®ä¸­",
; 16332: 		"ç­å¾åç­",
; 16333: 		"å·²æå®"
; 16334: 	};
; 16335: 	*/
; 16336: 
; 16337: 	char* btnTitle[] =
; 16338: 	{
; 16339: 		" ï¼¯ï¼« ",
; 16340: 		"CANCEL",
; 16341: 		"?  ?",
; 16342: 		"?  ?",
; 16343: 		"??",
; 16344: 		"??"
; 16345: 	};
; 16346: 	int id;
; 16347: 	int i, j;
; 16348: 	int mask;
; 16349: 	int btn;
; 16350: 
; 16351: 
; 16352: 	static int totalMsgLine;
; 16353: 	static int lineSkip;
; 16354: 
; 16355: 
; 16356: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00026	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00030	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0003a	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00044	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004e	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00058	0f 85 1b 01 00
	00		 jne	 $LN58@FMPKSelect

; 16357: 	{
; 16358: 		//winW = msgWN_W;
; 16359: 		//winH = msgWN_H;
; 16360: 		winW = 4;
; 16361: 		winH = 8;
; 16362: 		winX = (640 - winW * 64) / 2;
; 16363: 		winY = (456 - winH * 48) / 2;
; 16364: 
; 16365: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	6a 00		 push	 0
  00062	6a 08		 push	 8
  00064	6a 04		 push	 4
  00066	6a 24		 push	 36			; 00000024H
  00068	68 c0 00 00 00	 push	 192			; 000000c0H
  0006d	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?winW@?1??FMPKSelectWN@@YAXH@Z@4HA, 4
  00077	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??FMPKSelectWN@@YAXH@Z@4HA, 8
  00081	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA, 192 ; 000000c0H
  0008b	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA, 36 ; 00000024H
  00095	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0009a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 16366: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 16367: 		winX = ptActMenuWin->x;
; 16368: 		winY = ptActMenuWin->y;
; 16369: #endif
; 16370: 		//lineSkip = 20;
; 16371: 		//totalMsgLine = (winH*48-56)/lineSkip;
; 16372: 
; 16373: 
; 16374: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 16375: 		{
; 16376: 			fontId[i] = -2;
; 16377: 		}
; 16378: 
; 16379: 		mask = 1;
; 16380: 		btnCnt = 0;

  000a1	33 f6		 xor	 esi, esi

; 16381: 		for (i = 0; i < 6; i++, mask <<= 1)

  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a9	83 c4 18	 add	 esp, 24			; 00000018H
  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b4	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA, ecx
  000bd	33 c9		 xor	 ecx, ecx
  000bf	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA, eax
  000c4	b8 01 00 00 00	 mov	 eax, 1
  000c9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA, xmm0
  000d0	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKSelectWN@@YAXH@Z@4HA, esi
  000d6	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA+16, xmm0
  000dd	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA+32, xmm0
  000e4	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA+48, xmm0
  000ec	0f 1f 40 00	 npad	 4
$LL7@FMPKSelect:

; 16382: 		{
; 16383: 			if (buttonTypeWN & mask)

  000f0	85 d0		 test	 edx, eax
  000f2	74 06		 je	 SHORT $LN5@FMPKSelect

; 16384: 			{
; 16385: 				btnCnt++;

  000f4	46		 inc	 esi
  000f5	83 fe 04	 cmp	 esi, 4

; 16386: 				if (btnCnt == 4)

  000f8	74 08		 je	 SHORT $LN41@FMPKSelect
$LN5@FMPKSelect:

; 16381: 		for (i = 0; i < 6; i++, mask <<= 1)

  000fa	41		 inc	 ecx
  000fb	03 c0		 add	 eax, eax
  000fd	83 f9 06	 cmp	 ecx, 6
  00100	7c ee		 jl	 SHORT $LL7@FMPKSelect
$LN41@FMPKSelect:

; 16384: 			{
; 16385: 				btnCnt++;

  00102	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKSelectWN@@YAXH@Z@4HA, esi

; 16387: 					break;
; 16388: 			}
; 16389: 		}
; 16390: 
; 16391: 		// ????????î¸î?î³????
; 16392: 		if (btnCnt > 0)

  00108	85 f6		 test	 esi, esi
  0010a	7e 49		 jle	 SHORT $LN9@FMPKSelect

; 16393: 		{
; 16394: 			int w;
; 16395: 			w = winW * 64 / (btnCnt + 1);

  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMPKSelectWN@@YAXH@Z@4HA
  00111	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00114	c1 e0 06	 shl	 eax, 6
  00117	99		 cdq
  00118	f7 f9		 idiv	 ecx
  0011a	33 d2		 xor	 edx, edx

; 16396: 			for (i = 0; i < btnCnt; i++)

  0011c	85 f6		 test	 esi, esi
  0011e	7e 35		 jle	 SHORT $LN9@FMPKSelect

; 16393: 		{
; 16394: 			int w;
; 16395: 			w = winW * 64 / (btnCnt + 1);

  00120	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??FMPKSelectWN@@YAXH@Z@4HA
  00126	8d 3c 49	 lea	 edi, DWORD PTR [ecx+ecx*2]
  00129	c1 e7 04	 shl	 edi, 4
  0012c	8d 48 e5	 lea	 ecx, DWORD PTR [eax-27]
  0012f	83 c7 c8	 add	 edi, -56		; ffffffc8H
  00132	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL10@FMPKSelect:

; 16397: 			{
; 16398: 				btnLoc[i][0] = w * (i + 1) - 27;

  00140	89 0c d5 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA[edx*8], ecx
  00147	03 c8		 add	 ecx, eax

; 16399: 				btnLoc[i][1] = winH * 48 - 56;

  00149	89 3c d5 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA[edx*8+4], edi
  00150	42		 inc	 edx
  00151	3b d6		 cmp	 edx, esi
  00153	7c eb		 jl	 SHORT $LL10@FMPKSelect
$LN9@FMPKSelect:

; 16400: 			}
; 16401: 		}
; 16402: 
; 16403: 		play_se(202, 320, 240);	// ????????

  00155	68 f0 00 00 00	 push	 240			; 000000f0H
  0015a	68 40 01 00 00	 push	 320			; 00000140H
  0015f	68 ca 00 00 00	 push	 202			; 000000caH
  00164	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00169	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16404: 	}
; 16405: 
; 16406: 
; 16407: 	if (ptActMenuWin != NULL)

  0016c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00173	0f 84 66 02 00
	00		 je	 $LN15@FMPKSelect
$LN58@FMPKSelect:

; 16408: 	{
; 16409: 		// ?????î±î¶îî
; 16410: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  00179	6a 0e		 push	 14			; 0000000eH
  0017b	68 00 00 00 00	 push	 OFFSET ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA
  00180	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00185	83 c4 08	 add	 esp, 8
  00188	8b f8		 mov	 edi, eax

; 16411: 
; 16412: 		// î??????î?????????????î¼??
; 16413: 		if (CheckMenuFlag()
; 16414: 			|| (joy_trg[0] & JOY_ESC)
; 16415: 			|| actBtn == 1
; 16416: 			|| menuBtn == 1
; 16417: 			|| disconnectServerFlag == TRUE
; 16418: 			|| wnCloseFlag == 1)

  0018a	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0018f	85 c0		 test	 eax, eax
  00191	0f 85 58 02 00
	00		 jne	 $LN23@FMPKSelect
  00197	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  001a1	0f 85 48 02 00
	00		 jne	 $LN23@FMPKSelect
  001a7	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  001af	0f 84 3a 02 00
	00		 je	 $LN23@FMPKSelect
  001b5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001bd	0f 84 2c 02 00
	00		 je	 $LN23@FMPKSelect
  001c3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001ca	0f 84 1f 02 00
	00		 je	 $LN23@FMPKSelect
  001d0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001d8	0f 84 11 02 00
	00		 je	 $LN23@FMPKSelect

; 16425: 		}
; 16426: 
; 16427: 		// ï¼¯ï¼«
; 16428: 		if (0 <= id && id < 6)

  001de	85 ff		 test	 edi, edi
  001e0	0f 88 d9 00 00
	00		 js	 $LN31@FMPKSelect
  001e6	83 ff 06	 cmp	 edi, 6
  001e9	7d 50		 jge	 SHORT $LN57@FMPKSelect

; 16429: 		{
; 16430: 			//char msg[256];
; 16431: 			btn = 1;
; 16432: 			btn <<= id;
; 16433: 
; 16434: 			//makeEscapeString( input.buffer, msg, sizeof( msg )-1 );
; 16435: 			if (bNewServer)

  001eb	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  001f0	b8 01 00 00 00	 mov	 eax, 1
  001f5	8b cf		 mov	 ecx, edi
  001f7	d3 e0		 shl	 eax, cl
  001f9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00200	50		 push	 eax
  00201	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00207	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0020d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00213	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00219	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0021f	74 0d		 je	 SHORT $LN26@FMPKSelect

; 16436: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  00221	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00226	83 c4 1c	 add	 esp, 28			; 0000001cH
  00229	e9 eb 01 00 00	 jmp	 $LN60@FMPKSelect
$LN26@FMPKSelect:

; 16437: 			else
; 16438: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  0022e	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
  00233	83 c4 1c	 add	 esp, 28			; 0000001cH

; 16439: 
; 16440: 			windowTypeWN = -1;
; 16441: 
; 16442: 		}

  00236	e9 de 01 00 00	 jmp	 $LN60@FMPKSelect
$LN57@FMPKSelect:

; 16443: 		else if ((6 <= id) && (id < 6 + 8))

  0023b	83 ff 0e	 cmp	 edi, 14			; 0000000eH
  0023e	7d 77		 jge	 SHORT $LN30@FMPKSelect

; 16444: 		{
; 16445: 
; 16446: 
; 16447: 			int dataSel = id - 6;
; 16448: 			sprintf(dataBuf, "%d|%s", FMPKSelectData[dataSel].fmindex,

  00240	68 00 01 00 00	 push	 256			; 00000100H
  00245	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0024b	50		 push	 eax
  0024c	8d 34 7f	 lea	 esi, DWORD PTR [edi+edi*2]
  0024f	8d 04 f5 70 ff
	ff ff		 lea	 eax, DWORD PTR ?FMPKSelectData@@3PAUFMPKSelect@@A[esi*8-144]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0025c	50		 push	 eax
  0025d	ff 34 f5 84 ff
	ff ff		 push	 DWORD PTR ?FMPKSelectData@@3PAUFMPKSelect@@A[esi*8-124]
  00264	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0026a	68 00 00 00 00	 push	 OFFSET ??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@
  0026f	50		 push	 eax
  00270	e8 00 00 00 00	 call	 _sprintf
  00275	83 c4 1c	 add	 esp, 28			; 0000001cH

; 16449: 				makeEscapeString(FMPKSelectData[dataSel].fmname, buf, sizeof(buf)));
; 16450: 			if (bNewServer)

  00278	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0027e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00285	50		 push	 eax
  00286	6a 01		 push	 1
  00288	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0028e	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00294	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0029a	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  002a0	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  002a6	74 07		 je	 SHORT $LN29@FMPKSelect

; 16451: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  002a8	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  002ad	eb 05		 jmp	 SHORT $LN63@FMPKSelect
$LN29@FMPKSelect:

; 16452: 					WINDOW_BUTTONTYPE_OK, dataBuf);
; 16453: 			else
; 16454: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  002af	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN63@FMPKSelect:

; 16455: 					WINDOW_BUTTONTYPE_OK, dataBuf);
; 16456: 		}
; 16457: 
; 16458: 
; 16459: 		if (id >= 0)

  002b4	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN30@FMPKSelect:
  002b7	85 ff		 test	 edi, edi
  002b9	0f 89 5a 01 00
	00		 jns	 $LN60@FMPKSelect
$LN31@FMPKSelect:

; 16464: 			ptActMenuWin = NULL;
; 16465: 			return;
; 16466: 		}
; 16467: 
; 16468: 
; 16469: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002c4	85 c0		 test	 eax, eax
  002c6	0f 84 13 01 00
	00		 je	 $LN15@FMPKSelect
  002cc	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002d0	0f 8c 09 01 00
	00		 jl	 $LN15@FMPKSelect

; 16470: 		{
; 16471: 
; 16472: 
; 16473: 			j = 0;

  002d6	53		 push	 ebx
  002d7	33 db		 xor	 ebx, ebx

; 16474: 
; 16475: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  002d9	bf 01 00 00 00	 mov	 edi, 1
  002de	33 f6		 xor	 esi, esi
$LL13@FMPKSelect:

; 16476: 			{
; 16477: 				fontId[i] = -2;

  002e0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 16478: 				if (buttonTypeWN & mask)

  002ea	85 3d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, edi ; buttonTypeWN
  002f0	74 40		 je	 SHORT $LN11@FMPKSelect

; 16479: 				{
; 16480: 					if (j < btnCnt)

  002f2	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?btnCnt@?1??FMPKSelectWN@@YAXH@Z@4HA
  002f8	7d 38		 jge	 SHORT $LN11@FMPKSelect

; 16481: 					{
; 16482: 						fontId[i] =

  002fa	8b 04 dd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA[ebx*8+4]
  00301	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA
  00307	6a 02		 push	 2
  00309	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00310	6a 04		 push	 4
  00312	6a 01		 push	 1
  00314	50		 push	 eax
  00315	8b 04 dd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKSelectWN@@YAXH@Z@4PAY01HA[ebx*8]
  0031c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA
  00322	50		 push	 eax
  00323	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00328	83 c4 18	 add	 esp, 24			; 00000018H
  0032b	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA[esi], eax

; 16483: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 16484: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 16485: 						j++;

  00331	43		 inc	 ebx
$LN11@FMPKSelect:

; 16474: 
; 16475: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00332	83 c6 04	 add	 esi, 4
  00335	03 ff		 add	 edi, edi
  00337	83 fe 18	 cmp	 esi, 24			; 00000018H
  0033a	7c a4		 jl	 SHORT $LL13@FMPKSelect

; 16486: 					}
; 16487: 				}
; 16488: 			}
; 16489: 
; 16490: 			sprintf(dataBuf, "%s", "ì ì²­íì¤ ê°ì¡±ì ì íí´ì£¼ì¸ìï¼");

  0033c	68 00 00 00 00	 push	 OFFSET ??_C@_0BP@FOLPFEDH@?$LN?E?C?$LL?G?O?$LN?G?5?$LA?$KB?A?$LH?$MA?$LL?5?$LM?$LB?E?C?G?X?A?V?$LM?$LM?$LP?d?$KD?$LK@
  00341	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 _sprintf

; 16491: 			StockFontBuffer(winX + 30, winY + 40,

  00352	6a 00		 push	 0
  00354	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  0035a	50		 push	 eax
  0035b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA
  00360	6a 00		 push	 0
  00362	83 c0 28	 add	 eax, 40			; 00000028H
  00365	6a 01		 push	 1
  00367	50		 push	 eax
  00368	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA
  0036d	83 c0 1e	 add	 eax, 30			; 0000001eH
  00370	50		 push	 eax
  00371	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16492: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16493: 
; 16494: 			for (i = 0; i < FMPKSelectNum; i++)

  00376	33 f6		 xor	 esi, esi
  00378	83 c4 24	 add	 esp, 36			; 00000024H
  0037b	39 35 00 00 00
	00		 cmp	 DWORD PTR ?FMPKSelectNum@@3HA, esi ; FMPKSelectNum
  00381	7e 5b		 jle	 SHORT $LN62@FMPKSelect

; 16486: 					}
; 16487: 				}
; 16488: 			}
; 16489: 
; 16490: 			sprintf(dataBuf, "%s", "ì ì²­íì¤ ê°ì¡±ì ì íí´ì£¼ì¸ìï¼");

  00383	8d 7e 5a	 lea	 edi, DWORD PTR [esi+90]
  00386	bb 00 00 00 00	 mov	 ebx, OFFSET ?FMPKSelectData@@3PAUFMPKSelect@@A ; FMPKSelectData
  0038b	0f 1f 44 00 00	 npad	 5
$LL16@FMPKSelect:

; 16495: 			{
; 16496: 				sprintf(dataBuf, "%-16s", FMPKSelectData[i].fmname);

  00390	53		 push	 ebx
  00391	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00397	68 00 00 00 00	 push	 OFFSET ??_C@_05EMGOANLP@?$CF?916s@
  0039c	50		 push	 eax
  0039d	e8 00 00 00 00	 call	 _sprintf

; 16497: 
; 16498: 				fontId[i + 6] = StockFontBuffer(winX + 40, winY + 60 + (i * 30) + 30,

  003a2	6a 02		 push	 2
  003a4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003aa	50		 push	 eax
  003ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKSelectWN@@YAXH@Z@4HA
  003b0	6a 00		 push	 0
  003b2	03 c7		 add	 eax, edi
  003b4	6a 01		 push	 1
  003b6	50		 push	 eax
  003b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKSelectWN@@YAXH@Z@4HA
  003bc	83 c0 28	 add	 eax, 40			; 00000028H
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003c5	89 04 b5 18 00
	00 00		 mov	 DWORD PTR ?fontId@?1??FMPKSelectWN@@YAXH@Z@4PAHA[esi*4+24], eax
  003cc	83 c4 24	 add	 esp, 36			; 00000024H
  003cf	46		 inc	 esi
  003d0	83 c3 18	 add	 ebx, 24			; 00000018H
  003d3	83 c7 1e	 add	 edi, 30			; 0000001eH
  003d6	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?FMPKSelectNum@@3HA ; FMPKSelectNum
  003dc	7c b2		 jl	 SHORT $LL16@FMPKSelect
$LN62@FMPKSelect:
  003de	5b		 pop	 ebx
$LN15@FMPKSelect:
  003df	5f		 pop	 edi

; 16499: 					FONT_PRIO_FRONT, FONT_PAL_WHITE,
; 16500: 					dataBuf, 2);
; 16501: 
; 16502: 			} // for List end
; 16503: 
; 16504: 		}
; 16505: 	}
; 16506: 
; 16507: }

  003e0	5e		 pop	 esi
  003e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e4	33 cd		 xor	 ecx, ebp
  003e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003eb	8b e5		 mov	 esp, ebp
  003ed	5d		 pop	 ebp
  003ee	c3		 ret	 0
$LN23@FMPKSelect:

; 16419: 		{
; 16420: 			id = 100;
; 16421: 			windowTypeWN = -1;
; 16422: 			wnCloseFlag = 0;
; 16423: 			DeathAction(ptActMenuWin);

  003ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003f5	33 c0		 xor	 eax, eax
  003f7	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00401	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00407	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0040c	83 c4 04	 add	 esp, 4

; 16424: 			ptActMenuWin = NULL;

  0040f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN60@FMPKSelect:

; 16460: 		{
; 16461: 			windowTypeWN = -1;
; 16462: 			wnCloseFlag = 0;
; 16463: 			DeathAction(ptActMenuWin);

  00419	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0041f	33 c0		 xor	 eax, eax
  00421	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0042b	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00431	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 16499: 					FONT_PRIO_FRONT, FONT_PAL_WHITE,
; 16500: 					dataBuf, 2);
; 16501: 
; 16502: 			} // for List end
; 16503: 
; 16504: 		}
; 16505: 	}
; 16506: 
; 16507: }

  00436	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00439	83 c4 04	 add	 esp, 4
  0043c	33 cd		 xor	 ecx, ebp
  0043e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00448	5f		 pop	 edi
  00449	5e		 pop	 esi
  0044a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0044f	8b e5		 mov	 esp, ebp
  00451	5d		 pop	 ebp
  00452	c3		 ret	 0
?FMPKSelectWN@@YAXH@Z ENDP				; FMPKSelectWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMPKSelectWN@@YAXPAD@Z
_TEXT	SEGMENT
_data$GSCopy$1$ = -520					; size = 4
_buf$ = -516						; size = 256
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMPKSelectWN@@YAXPAD@Z PROC			; initFMPKSelectWN, COMDAT

; 16290: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 02 00
	00		 sub	 esp, 520		; 00000208H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]

; 16291: 
; 16292: 	int i;
; 16293: 	char buf[256], buf2[256];
; 16294: 
; 16295: 
; 16296: 	getStringToken(data, '|', 1, sizeof(buf) - 1, buf);

  00016	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0001c	56		 push	 esi
  0001d	51		 push	 ecx
  0001e	68 ff 00 00 00	 push	 255			; 000000ffH
  00023	6a 01		 push	 1
  00025	6a 7c		 push	 124			; 0000007cH
  00027	50		 push	 eax
  00028	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], eax
  0002e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16297: 	FMPKSelectNum = atoi(buf);

  00033	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 _atoi
  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	a3 00 00 00 00	 mov	 DWORD PTR ?FMPKSelectNum@@3HA, eax ; FMPKSelectNum

; 16298: 
; 16299: 	for (i = 0; i < FMPKSelectNum; i++)

  00047	33 f6		 xor	 esi, esi
  00049	85 c0		 test	 eax, eax
  0004b	0f 8e 8d 00 00
	00		 jle	 $LN3@initFMPKSe

; 16290: {

  00051	53		 push	 ebx
  00052	57		 push	 edi
  00053	bf 00 00 00 00	 mov	 edi, OFFSET ?FMPKSelectData@@3PAUFMPKSelect@@A ; FMPKSelectData
  00058	bb 03 00 00 00	 mov	 ebx, 3
  0005d	0f 1f 00	 npad	 3
$LL4@initFMPKSe:

; 16300: 	{
; 16301: 
; 16302: 		getStringToken(data, '|', i * 2 + 2, sizeof(buf2) - 1, buf2);

  00060	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00066	50		 push	 eax
  00067	68 ff 00 00 00	 push	 255			; 000000ffH
  0006c	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  0006f	50		 push	 eax
  00070	6a 7c		 push	 124			; 0000007cH
  00072	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  00078	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16303: 		FMPKSelectData[i].fmindex = atoi(buf2);

  0007d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00083	50		 push	 eax
  00084	e8 00 00 00 00	 call	 _atoi
  00089	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 16304: 		getStringToken(data, '|', i * 2 + 3, sizeof(buf2) - 1, buf2);

  0008c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00092	50		 push	 eax
  00093	68 ff 00 00 00	 push	 255			; 000000ffH
  00098	53		 push	 ebx
  00099	6a 7c		 push	 124			; 0000007cH
  0009b	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  000a1	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16305: 		strcpy(FMPKSelectData[i].fmname, makeStringFromEscaped(buf2));

  000a6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000b2	8b d7		 mov	 edx, edi
  000b4	83 c4 30	 add	 esp, 48			; 00000030H
  000b7	2b d0		 sub	 edx, eax
  000b9	0f 1f 80 00 00
	00 00		 npad	 7
$LL6@initFMPKSe:
  000c0	8a 08		 mov	 cl, BYTE PTR [eax]
  000c2	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000c5	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  000c9	84 c9		 test	 cl, cl
  000cb	75 f3		 jne	 SHORT $LL6@initFMPKSe

; 16298: 
; 16299: 	for (i = 0; i < FMPKSelectNum; i++)

  000cd	46		 inc	 esi
  000ce	83 c3 02	 add	 ebx, 2
  000d1	83 c7 18	 add	 edi, 24			; 00000018H
  000d4	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?FMPKSelectNum@@3HA ; FMPKSelectNum
  000da	7c 84		 jl	 SHORT $LL4@initFMPKSe
  000dc	5f		 pop	 edi
  000dd	5b		 pop	 ebx
$LN3@initFMPKSe:

; 16306: 
; 16307: 	}
; 16308: 
; 16309: }

  000de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e1	33 cd		 xor	 ecx, ebp
  000e3	5e		 pop	 esi
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
?initFMPKSelectWN@@YAXPAD@Z ENDP			; initFMPKSelectWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMPKListWN@@YAXH@Z
_TEXT	SEGMENT
tv1381 = -1088						; size = 4
_pushStatus$ = -1088					; size = 4
_showcolor$ = -1088					; size = 4
$T1 = -1084						; size = 4
$T2 = -1084						; size = 4
_showcolor$1$ = -1080					; size = 4
_dataStatusStr$ = -1076					; size = 24
_btnTitle$ = -1052					; size = 24
_dataBuf2$ = -1028					; size = 256
_buf$ = -772						; size = 256
_dataBuf$ = -516					; size = 512
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?FMPKListWN@@YAXH@Z PROC				; FMPKListWN, COMDAT

; 16007: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 40 04 00
	00		 sub	 esp, 1088		; 00000440H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 16008: 	static int winX, winY;
; 16009: 	static int winW, winH;
; 16010: 	static int fontId[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
; 16011: 	static int btnLoc[6][2];
; 16012: 	static int btnCnt;
; 16013: 	//static int msgLine;
; 16014: 	//static STR_BUFFER input;
; 16015: 	char dataBuf[512];
; 16016: 	char dataBuf2[256];
; 16017: 	char buf[256];
; 16018: 
; 16019: 	char* dataStatusStr[] =
; 16020: 	{
; 16021: 		" ì¶  ê° ",
; 16022: 		" ì  ì  ",
; 16023: 		" ì°  ê²° ",
; 16024: 		"ì¤ ì  ì¤",
; 16025: 		"ìëµëê¸°",
; 16026: 		"ì  ì "
; 16027: 	};
; 16028: 	int showcolor;
; 16029: 	int pushStatus;
; 16030: 
; 16031: 	char* btnTitle[] =
; 16032: 	{
; 16033: 		" ï¼¯ï¼« ",
; 16034: 		"CANCEL",
; 16035: 		"?  ?",
; 16036: 		"?  ?",
; 16037: 		"??",
; 16038: 		"??"
; 16039: 	};
; 16040: 	int id;
; 16041: 	int i, j;
; 16042: 	int mask;
; 16043: 	int btn;
; 16044: 
; 16045: 
; 16046: 	static int totalMsgLine;
; 16047: 	static int lineSkip;
; 16048: 
; 16049: 
; 16050: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	c7 85 cc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp], OFFSET ??_C@_08KEIECNNH@?5?C?$NP?5?5?$LA?$KB?5@
  00026	c7 85 d0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp+4], OFFSET ??_C@_08FOJJNHLG@?5?$LM?v?5?5?A?$KE?5@
  00030	c7 85 d4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp+8], OFFSET ??_C@_08PCGBOOHO@?5?$LP?$KM?5?5?$LA?a?5@
  0003a	c7 85 d8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp+12], OFFSET ??_C@_08EJIOEONO@?$LM?$LD?5?A?$KE?5?A?$NP@
  00044	c7 85 dc fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp+16], OFFSET ??_C@_08MOJFPAKN@?$MA?$MA?$LE?d?$LE?k?$LB?b@
  0004e	c7 85 e0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _dataStatusStr$[ebp+20], OFFSET ??_C@_06LCJOFINF@?$LP?$LJ?5?5?A?$KE@
  00058	c7 85 e4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00062	c7 85 e8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0006c	c7 85 ec fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00076	c7 85 f0 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00080	c7 85 f4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0008a	c7 85 f8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00094	0f 85 1f 01 00
	00		 jne	 $LN83@FMPKListWN

; 16051: 	{
; 16052: 		winW = 8;
; 16053: 		winH = 8;
; 16054: 		winX = (640 - winW * 64) / 2;
; 16055: 		winY = (456 - winH * 48) / 2;
; 16056: 
; 16057: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0009a	6a 01		 push	 1
  0009c	6a 00		 push	 0
  0009e	6a 08		 push	 8
  000a0	6a 08		 push	 8
  000a2	6a 24		 push	 36			; 00000024H
  000a4	6a 40		 push	 64			; 00000040H
  000a6	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winW@?1??FMPKListWN@@YAXH@Z@4HA, 8
  000b0	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??FMPKListWN@@YAXH@Z@4HA, 8
  000ba	c7 05 00 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA, 64 ; 00000040H
  000c4	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA, 36 ; 00000024H
  000ce	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 16058: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 16059: 		winX = ptActMenuWin->x;
; 16060: 		winY = ptActMenuWin->y;
; 16061: #endif	
; 16062: 
; 16063: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 16064: 		{
; 16065: 			fontId[i] = -2;

  000d3	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 16066: 		}
; 16067: 
; 16068: 
; 16069: 		mask = 1;
; 16070: 		btnCnt = 0;

  000da	33 f6		 xor	 esi, esi

; 16071: 		for (i = 0; i < 6; i++, mask <<= 1)

  000dc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000e2	83 c4 18	 add	 esp, 24			; 00000018H
  000e5	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ea	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ed	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000f0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA, xmm0
  000f7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA, ecx
  000fd	33 c9		 xor	 ecx, ecx
  000ff	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00106	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA, eax
  0010b	b8 01 00 00 00	 mov	 eax, 1
  00110	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA+16, xmm0
  00117	c7 05 20 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA+32, -2 ; fffffffeH
  00121	c7 05 24 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA+36, -2 ; fffffffeH
  0012b	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKListWN@@YAXH@Z@4HA, esi
$LL7@FMPKListWN:

; 16072: 		{
; 16073: 			if (buttonTypeWN & mask)

  00131	85 d0		 test	 edx, eax
  00133	74 06		 je	 SHORT $LN5@FMPKListWN

; 16074: 			{
; 16075: 				btnCnt++;

  00135	46		 inc	 esi
  00136	83 fe 04	 cmp	 esi, 4

; 16076: 				if (btnCnt == 4)

  00139	74 08		 je	 SHORT $LN56@FMPKListWN
$LN5@FMPKListWN:

; 16071: 		for (i = 0; i < 6; i++, mask <<= 1)

  0013b	41		 inc	 ecx
  0013c	03 c0		 add	 eax, eax
  0013e	83 f9 06	 cmp	 ecx, 6
  00141	7c ee		 jl	 SHORT $LL7@FMPKListWN
$LN56@FMPKListWN:

; 16074: 			{
; 16075: 				btnCnt++;

  00143	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMPKListWN@@YAXH@Z@4HA, esi

; 16077: 					break;
; 16078: 			}
; 16079: 		}
; 16080: 
; 16081: 		// ????????î¸î?î³????
; 16082: 		if (btnCnt > 0)

  00149	85 f6		 test	 esi, esi
  0014b	7e 48		 jle	 SHORT $LN9@FMPKListWN

; 16083: 		{
; 16084: 			int w;
; 16085: 			w = winW * 64 / (btnCnt + 1);

  0014d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMPKListWN@@YAXH@Z@4HA
  00152	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00155	c1 e0 06	 shl	 eax, 6
  00158	99		 cdq
  00159	f7 f9		 idiv	 ecx
  0015b	33 d2		 xor	 edx, edx

; 16086: 			for (i = 0; i < btnCnt; i++)

  0015d	85 f6		 test	 esi, esi
  0015f	7e 34		 jle	 SHORT $LN9@FMPKListWN

; 16083: 		{
; 16084: 			int w;
; 16085: 			w = winW * 64 / (btnCnt + 1);

  00161	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winH@?1??FMPKListWN@@YAXH@Z@4HA
  00167	8d 3c 49	 lea	 edi, DWORD PTR [ecx+ecx*2]
  0016a	c1 e7 04	 shl	 edi, 4
  0016d	8d 48 e5	 lea	 ecx, DWORD PTR [eax-27]
  00170	83 c7 d8	 add	 edi, -40		; ffffffd8H
  00173	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL10@FMPKListWN:

; 16087: 			{
; 16088: 				btnLoc[i][0] = w * (i + 1) - 27;

  00180	89 0c d5 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA[edx*8], ecx
  00187	03 c8		 add	 ecx, eax

; 16089: 				btnLoc[i][1] = winH * 48 - 40;

  00189	89 3c d5 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA[edx*8+4], edi
  00190	42		 inc	 edx
  00191	3b d6		 cmp	 edx, esi
  00193	7c eb		 jl	 SHORT $LL10@FMPKListWN
$LN9@FMPKListWN:

; 16090: 			}
; 16091: 		}
; 16092: 
; 16093: 
; 16094: 		play_se(202, 320, 240);	// ????????

  00195	68 f0 00 00 00	 push	 240			; 000000f0H
  0019a	68 40 01 00 00	 push	 320			; 00000140H
  0019f	68 ca 00 00 00	 push	 202			; 000000caH
  001a4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001a9	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16095: 	}
; 16096: 
; 16097: 
; 16098: 	if (ptActMenuWin != NULL)

  001ac	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001b3	0f 84 07 05 00
	00		 je	 $LN15@FMPKListWN
$LN83@FMPKListWN:

; 16099: 	{
; 16100: 		// ?????î±î¶îî
; 16101: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  001b9	6a 0a		 push	 10			; 0000000aH
  001bb	68 00 00 00 00	 push	 OFFSET ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA
  001c0	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001c5	83 c4 08	 add	 esp, 8
  001c8	8b f0		 mov	 esi, eax

; 16102: 
; 16103: 		// î??????î?????????????î¼??
; 16104: 		if (CheckMenuFlag()
; 16105: 			|| (joy_trg[0] & JOY_ESC)
; 16106: 			|| actBtn == 1
; 16107: 			|| menuBtn == 1
; 16108: 			|| disconnectServerFlag == TRUE
; 16109: 			|| wnCloseFlag == 1)

  001ca	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  001cf	85 c0		 test	 eax, eax
  001d1	0f 85 95 04 00
	00		 jne	 $LN25@FMPKListWN
  001d7	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  001e1	0f 85 85 04 00
	00		 jne	 $LN25@FMPKListWN
  001e7	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  001ef	0f 84 77 04 00
	00		 je	 $LN25@FMPKListWN
  001f5	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001fd	0f 84 69 04 00
	00		 je	 $LN25@FMPKListWN
  00203	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0020a	0f 84 5c 04 00
	00		 je	 $LN25@FMPKListWN
  00210	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00218	0f 84 4e 04 00
	00		 je	 $LN25@FMPKListWN

; 16116: 		}
; 16117: 
; 16118: 		// ï¼¯ï¼«
; 16119: 		if (0 <= id && id < 6)

  0021e	85 f6		 test	 esi, esi
  00220	0f 88 a7 00 00
	00		 js	 $LN33@FMPKListWN
  00226	83 fe 06	 cmp	 esi, 6
  00229	7d 50		 jge	 SHORT $LN82@FMPKListWN

; 16120: 		{
; 16121: 			//char msg[256];
; 16122: 			btn = 1;
; 16123: 			btn <<= id;
; 16124: 
; 16125: 			//makeEscapeString( input.buffer, msg, sizeof( msg )-1 );
; 16126: 			if (bNewServer)

  0022b	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00230	b8 01 00 00 00	 mov	 eax, 1
  00235	8b ce		 mov	 ecx, esi
  00237	d3 e0		 shl	 eax, cl
  00239	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00240	50		 push	 eax
  00241	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00247	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0024d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00253	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00259	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0025f	74 0d		 je	 SHORT $LN28@FMPKListWN

; 16127: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  00261	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00266	83 c4 1c	 add	 esp, 28			; 0000001cH
  00269	e9 28 04 00 00	 jmp	 $LN85@FMPKListWN
$LN28@FMPKListWN:

; 16128: 			else
; 16129: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, "");

  0026e	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
  00273	83 c4 1c	 add	 esp, 28			; 0000001cH

; 16130: 
; 16131: 			windowTypeWN = -1;
; 16132: 
; 16133: 		}

  00276	e9 1b 04 00 00	 jmp	 $LN85@FMPKListWN
$LN82@FMPKListWN:

; 16134: 		else if ((6 <= id) && (id < 10))

  0027b	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0027e	7d 45		 jge	 SHORT $LN32@FMPKListWN

; 16135: 		{
; 16136: 
; 16137: 			int dataSel = id - 6;

  00280	8d 46 fa	 lea	 eax, DWORD PTR [esi-6]
  00283	c1 e0 06	 shl	 eax, 6

; 16138: 			if (bNewServer)

  00286	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0028d	8d 80 00 00 00
	00		 lea	 eax, DWORD PTR ?FMPKDataList@@3PAUFMPKData@@A[eax]
  00293	50		 push	 eax
  00294	6a 01		 push	 1
  00296	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0029c	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  002a2	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  002a8	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  002ae	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  002b4	74 07		 je	 SHORT $LN31@FMPKListWN

; 16139: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  002b6	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  002bb	eb 05		 jmp	 SHORT $LN88@FMPKListWN
$LN31@FMPKListWN:

; 16140: 					WINDOW_BUTTONTYPE_OK, FMPKDataList[dataSel].time);
; 16141: 			else
; 16142: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN,

  002bd	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN88@FMPKListWN:

; 16143: 					WINDOW_BUTTONTYPE_OK, FMPKDataList[dataSel].time);
; 16144: 		}
; 16145: 
; 16146: 
; 16147: 		if (id >= 0)

  002c2	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN32@FMPKListWN:
  002c5	85 f6		 test	 esi, esi
  002c7	0f 89 c9 03 00
	00		 jns	 $LN85@FMPKListWN
$LN33@FMPKListWN:

; 16153: 			return;
; 16154: 		}
; 16155: 
; 16156: 
; 16157: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  002cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002d2	85 c0		 test	 eax, eax
  002d4	0f 84 e6 03 00
	00		 je	 $LN15@FMPKListWN
  002da	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002de	0f 8c dc 03 00
	00		 jl	 $LN15@FMPKListWN

; 16158: 		{
; 16159: 
; 16160: 
; 16161: 			j = 0;

  002e4	53		 push	 ebx
  002e5	33 ff		 xor	 edi, edi

; 16162: 
; 16163: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  002e7	bb 01 00 00 00	 mov	 ebx, 1
  002ec	33 f6		 xor	 esi, esi
  002ee	66 90		 npad	 2
$LL13@FMPKListWN:

; 16164: 			{
; 16165: 				fontId[i] = -2;

  002f0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 16166: 				if (buttonTypeWN & mask)

  002fa	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00300	74 40		 je	 SHORT $LN11@FMPKListWN

; 16167: 				{
; 16168: 					if (j < btnCnt)

  00302	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??FMPKListWN@@YAXH@Z@4HA
  00308	7d 38		 jge	 SHORT $LN11@FMPKListWN

; 16169: 					{
; 16170: 						fontId[i] =

  0030a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA[edi*8+4]
  00311	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  00317	6a 02		 push	 2
  00319	ff b4 35 e4 fb
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00320	6a 04		 push	 4
  00322	6a 01		 push	 1
  00324	50		 push	 eax
  00325	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMPKListWN@@YAXH@Z@4PAY01HA[edi*8]
  0032c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  00332	50		 push	 eax
  00333	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00338	83 c4 18	 add	 esp, 24			; 00000018H
  0033b	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA[esi], eax

; 16171: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 16172: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 16173: 						j++;

  00341	47		 inc	 edi
$LN11@FMPKListWN:

; 16162: 
; 16163: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00342	83 c6 04	 add	 esi, 4
  00345	03 db		 add	 ebx, ebx
  00347	83 fe 18	 cmp	 esi, 24			; 00000018H
  0034a	7c a4		 jl	 SHORT $LL13@FMPKListWN

; 16174: 					}
; 16175: 				}
; 16176: 			}
; 16177: 
; 16178: 
; 16179: 			StockFontBuffer(winX + 200, winY + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  0034c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  00351	6a 00		 push	 0
  00353	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OOICEDBI@?$LA?$KB?A?$LH?$MA?$PM?E?u?$MA?O?A?$KE@
  00358	6a 00		 push	 0
  0035a	83 c0 1e	 add	 eax, 30			; 0000001eH
  0035d	6a 01		 push	 1
  0035f	50		 push	 eax
  00360	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  00365	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0036a	50		 push	 eax
  0036b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16180: 				"ê°ì¡±ì í¬ì¼ì ", 0);
; 16181: 			sprintf(dataBuf, "íì¬ìê°ï¼ %d:%d", serverTime / 100, serverTime % 100);

  00370	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?serverTime@@3HA ; serverTime
  00376	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0037b	f7 ee		 imul	 esi
  0037d	c1 fa 05	 sar	 edx, 5
  00380	8b ca		 mov	 ecx, edx
  00382	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00385	03 ca		 add	 ecx, edx
  00387	6b c1 64	 imul	 eax, ecx, 100
  0038a	2b f0		 sub	 esi, eax
  0038c	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00392	56		 push	 esi
  00393	51		 push	 ecx
  00394	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NLEMPNJJ@?G?v?$MA?g?$LN?C?$LA?$KD?$KD?$LK?5?$CFd?3?$CFd@
  00399	50		 push	 eax
  0039a	e8 00 00 00 00	 call	 _sprintf

; 16182: 			StockFontBuffer(winX + 360, winY + 45, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  0039f	6a 00		 push	 0
  003a1	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003a7	50		 push	 eax
  003a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  003ad	6a 00		 push	 0
  003af	83 c0 2d	 add	 eax, 45			; 0000002dH
  003b2	6a 01		 push	 1
  003b4	50		 push	 eax
  003b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  003ba	05 68 01 00 00	 add	 eax, 360		; 00000168H
  003bf	50		 push	 eax
  003c0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003c5	83 c4 40	 add	 esp, 64			; 00000040H

; 16183: 				dataBuf, 0);
; 16184: 			//StockDispHLine( winX+80, winY+30, 2 );
; 16185: 
; 16186: 			sprintf(dataBuf, "%10s  %16s  %16s  %8s  %8s"

  003c8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003ce	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MJLHBHM@?B?$PM?$LA?$KB?5?$MA?N?$LP?x?5?$LM?v@
  003d3	68 00 00 00 00	 push	 OFFSET ??_C@_08PFKCNHNG@?A?X?$LK?q?$LN?C?$LA?$KD@
  003d8	68 00 00 00 00	 push	 OFFSET ??_C@_08MBJKFBBE@?$LN?E?C?$LL?$LA?$KB?A?$LH@
  003dd	68 00 00 00 00	 push	 OFFSET ??_C@_08PFKHECNF@?$LF?$LF?$MA?$PM?$LA?$KB?A?$LH@
  003e2	68 00 00 00 00	 push	 OFFSET ??_C@_08GLHNCABG@?$LA?$LD?$MA?$PM?$LN?C?$LA?$KD@
  003e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@LCOOKBCN@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF8s?5?5?$CF8s@
  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 _sprintf

; 16187: 				, "ê°ì ìê°", "ëì ê°ì¡±", "ì ì²­ê°ì¡±"
; 16188: 				, "ì¤ë¹ìê°", "ì°¸ê° ì¸ì ì");
; 16189: 
; 16190: 			StockFontBuffer(winX + 20, winY + 70,

  003f2	6a 00		 push	 0
  003f4	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  003fa	50		 push	 eax
  003fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  00400	6a 00		 push	 0
  00402	83 c0 46	 add	 eax, 70			; 00000046H
  00405	6a 01		 push	 1
  00407	50		 push	 eax
  00408	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  0040d	83 c0 14	 add	 eax, 20			; 00000014H
  00410	50		 push	 eax
  00411	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00416	c7 85 c0 fb ff
	ff 18 00 00 00	 mov	 DWORD PTR tv1381[ebp], OFFSET ?fontId@?1??FMPKListWN@@YAXH@Z@4PAHA+24
  00420	83 c4 34	 add	 esp, 52			; 00000034H
  00423	8b 85 c0 fb ff
	ff		 mov	 eax, DWORD PTR _showcolor$[ebp]
  00429	33 db		 xor	 ebx, ebx
  0042b	8b bd c0 fb ff
	ff		 mov	 edi, DWORD PTR _pushStatus$[ebp]
  00431	be 34 00 00 00	 mov	 esi, OFFSET ?FMPKDataList@@3PAUFMPKData@@A+52
  00436	89 85 c8 fb ff
	ff		 mov	 DWORD PTR _showcolor$1$[ebp], eax
  0043c	0f 1f 40 00	 npad	 4
$LL16@FMPKListWN:

; 16194: 			{
; 16195: 				//char min[3], sec[3];
; 16196: 				int pktime = atoi(FMPKDataList[i].time);

  00440	8d 46 cc	 lea	 eax, DWORD PTR [esi-52]
  00443	50		 push	 eax
  00444	e8 00 00 00 00	 call	 _atoi
  00449	8b c8		 mov	 ecx, eax
  0044b	83 c4 04	 add	 esp, 4

; 16197: 				if (pktime >= 10000) {

  0044e	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  00453	81 f9 10 27 00
	00		 cmp	 ecx, 10000		; 00002710H
  00459	7c 12		 jl	 SHORT $LN37@FMPKListWN

; 16198: 					//if( strlen(FMPKDataList[i].time) > 4 ) {
; 16199: 						//sscanf(FMPKDataList[i].time+1, "%2s%2s", min, sec);
; 16200: 						//sprintf( buf, "æå¤© %d:%d", (pktime-10000)/100, pktime%100 );
; 16201: 					sprintf(buf, "ë´ì¼ %d:00", (pktime - 10000) / 100);

  0045b	c7 85 c4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0L@KPJDMHLO@?$LD?$LL?$MA?O?5?$CFd?300@
  00465	81 c1 f0 d8 ff
	ff		 add	 ecx, -10000		; ffffd8f0H

; 16202: 					//sprintf( buf, "æå¤© %s:%s", min, sec );
; 16203: 				}

  0046b	eb 0a		 jmp	 SHORT $LN89@FMPKListWN
$LN37@FMPKListWN:

; 16204: 				else {
; 16205: 					//sscanf(FMPKDataList[i].time, "%2s%2s", min, sec);
; 16206: 					//sprintf( buf, "ä»å¤© %d:%d", pktime/100, pktime%100 );
; 16207: 					sprintf(buf, "ì¤ë %d:00", pktime / 100);

  0046d	c7 85 c4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T1[ebp], OFFSET ??_C@_0L@FBMAKMIA@?$LP?$MA?$LE?C?5?$CFd?300@
$LN89@FMPKListWN:

; 16208: 					//sprintf( buf, "ä»å¤© %s:%s", min, sec );
; 16209: 				}
; 16210: #ifdef _READ16BITBMP
; 16211: 				if (!g_bUseAlpha) StockDispHLine(winX + 36, winY + 90 + (i * 60), 7);
; 16212: #endif
; 16213: 
; 16214: 				if (FMPKDataList[i].flag != -1)

  00477	f7 e9		 imul	 ecx
  00479	c1 fa 05	 sar	 edx, 5
  0047c	8b c2		 mov	 eax, edx
  0047e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00481	03 c2		 add	 eax, edx
  00483	50		 push	 eax
  00484	ff b5 c4 fb ff
	ff		 push	 DWORD PTR $T1[ebp]
  0048a	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00490	50		 push	 eax
  00491	e8 00 00 00 00	 call	 _sprintf
  00496	83 c4 0c	 add	 esp, 12			; 0000000cH
  00499	83 7e 04 ff	 cmp	 DWORD PTR [esi+4], -1
  0049d	0f 84 0b 01 00
	00		 je	 $LN39@FMPKListWN

; 16215: 				{
; 16216: 					sprintf(dataBuf, "%10s  %16s  %16s  %4dåé  %6däºº"

  004a3	ff 36		 push	 DWORD PTR [esi]
  004a5	8d 46 e6	 lea	 eax, DWORD PTR [esi-26]
  004a8	ff 76 fc	 push	 DWORD PTR [esi-4]
  004ab	50		 push	 eax
  004ac	8d 46 d2	 lea	 eax, DWORD PTR [esi-46]
  004af	50		 push	 eax
  004b0	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  004b6	50		 push	 eax
  004b7	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  004bd	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FLGBJLNM@?$CF10s?5?5?$CF16s?5?5?$CF16s?5?5?$CF4d?$NN?B?$DP?5?5?$CF6d?l?Q@
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 _sprintf

; 16217: 						, buf, FMPKDataList[i].atkFMName, FMPKDataList[i].defFMName
; 16218: 						, FMPKDataList[i].readyTime, FMPKDataList[i].member);
; 16219: 					sprintf(dataBuf2, "ì¹ë¦¬ì¡°ê±´ï¼ %s", winStr[FMPKDataList[i].win]);

  004c8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  004cb	c1 e0 04	 shl	 eax, 4
  004ce	05 00 00 00 00	 add	 eax, OFFSET ?winStr@@3PAY0BA@DA ; winStr
  004d3	50		 push	 eax
  004d4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf2$[ebp]
  004da	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DBFPDLEJ@?$LN?B?$LI?$KO?A?$LG?$LA?G?$KD?$LK?5?$CFs@
  004df	50		 push	 eax
  004e0	e8 00 00 00 00	 call	 _sprintf

; 16220: 
; 16221: 					switch (FMPKDataList[i].flag) {

  004e5	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  004e8	83 c4 28	 add	 esp, 40			; 00000028H
  004eb	40		 inc	 eax
  004ec	83 f8 05	 cmp	 eax, 5
  004ef	77 41		 ja	 SHORT $LN17@FMPKListWN
  004f1	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN86@FMPKListWN[eax*4]
$LN41@FMPKListWN:

; 16222: 					case -1:
; 16223: 						showcolor = FONT_PAL_WHITE;

  004f8	c7 85 c8 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR _showcolor$1$[ebp], 0

; 16224: 						pushStatus = 2;

  00502	bf 02 00 00 00	 mov	 edi, 2

; 16225: 						break;

  00507	eb 29		 jmp	 SHORT $LN17@FMPKListWN
$LN42@FMPKListWN:

; 16226: 					case 0:
; 16227: 					case 1:
; 16228: 						showcolor = FONT_PAL_YELLOW;

  00509	c7 85 c8 fb ff
	ff 04 00 00 00	 mov	 DWORD PTR _showcolor$1$[ebp], 4

; 16229: 						pushStatus = 2;

  00513	bf 02 00 00 00	 mov	 edi, 2

; 16230: 						break;

  00518	eb 18		 jmp	 SHORT $LN17@FMPKListWN
$LN44@FMPKListWN:

; 16231: 					case 2:
; 16232: 					case 3:
; 16233: 						showcolor = FONT_PAL_GREEN;

  0051a	c7 85 c8 fb ff
	ff 05 00 00 00	 mov	 DWORD PTR _showcolor$1$[ebp], 5

; 16234: 						pushStatus = 0;
; 16235: 						break;

  00524	eb 0a		 jmp	 SHORT $LN90@FMPKListWN
$LN46@FMPKListWN:

; 16236: 					case 4:
; 16237: 						showcolor = FONT_PAL_RED;

  00526	c7 85 c8 fb ff
	ff 06 00 00 00	 mov	 DWORD PTR _showcolor$1$[ebp], 6
$LN90@FMPKListWN:

; 16238: 						pushStatus = 0;
; 16239: 						break;
; 16240: 					}
; 16241: #ifdef _FMVER21
; 16242: 					if (pc.familyleader != FMMEMBER_LEADER)	pushStatus = 0;

  00530	33 ff		 xor	 edi, edi
$LN17@FMPKListWN:
  00532	33 c0		 xor	 eax, eax
  00534	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3

; 16243: #else
; 16244: 					if (pc.familyleader != 1)	pushStatus = 0;
; 16245: #endif					
; 16246: 					StockFontBuffer(winX + 20, winY + 106 + (i * 60),

  0053b	50		 push	 eax
  0053c	0f 45 f8	 cmovne	 edi, eax
  0053f	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00545	50		 push	 eax
  00546	ff b5 c8 fb ff
	ff		 push	 DWORD PTR _showcolor$1$[ebp]
  0054c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  00551	83 c0 6a	 add	 eax, 106		; 0000006aH
  00554	03 c3		 add	 eax, ebx
  00556	6a 01		 push	 1
  00558	50		 push	 eax
  00559	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  0055e	83 c0 14	 add	 eax, 20			; 00000014H
  00561	50		 push	 eax
  00562	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16247: 						FONT_PRIO_FRONT, showcolor, dataBuf, 0);
; 16248: 					StockFontBuffer(winX + 50, winY + 130 + (i * 60),

  00567	6a 00		 push	 0
  00569	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _dataBuf2$[ebp]
  0056f	50		 push	 eax
  00570	ff b5 c8 fb ff
	ff		 push	 DWORD PTR _showcolor$1$[ebp]
  00576	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  0057b	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00580	03 c3		 add	 eax, ebx
  00582	6a 01		 push	 1
  00584	50		 push	 eax
  00585	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  0058a	83 c0 32	 add	 eax, 50			; 00000032H
  0058d	50		 push	 eax
  0058e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16249: 						FONT_PRIO_FRONT, showcolor, dataBuf2, 0);
; 16250: 
; 16251: 					fontId[i + 6] = StockFontBuffer(winX + 400, winY + 100 + (i * 60) + 30,

  00593	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00596	83 c4 30	 add	 esp, 48			; 00000030H
  00599	8b 95 c8 fb ff
	ff		 mov	 edx, DWORD PTR _showcolor$1$[ebp]
  0059f	8b 84 85 d0 fb
	ff ff		 mov	 eax, DWORD PTR _dataStatusStr$[ebp+eax*4+4]
  005a6	89 85 c4 fb ff
	ff		 mov	 DWORD PTR $T2[ebp], eax

; 16252: 						FONT_PRIO_FRONT, showcolor,
; 16253: 						dataStatusStr[FMPKDataList[i].flag + 1], pushStatus);
; 16254: 				}

  005ac	eb 5e		 jmp	 SHORT $LN91@FMPKListWN
$LN39@FMPKListWN:

; 16255: 				else
; 16256: 				{
; 16257: 					sprintf(dataBuf, "%10s", buf);

  005ae	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  005b4	50		 push	 eax
  005b5	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  005bb	68 00 00 00 00	 push	 OFFSET ??_C@_04FIBCPIPH@?$CF10s@
  005c0	50		 push	 eax
  005c1	e8 00 00 00 00	 call	 _sprintf

; 16258: 					StockFontBuffer(winX + 20, winY + 106 + (i * 60),

  005c6	6a 00		 push	 0
  005c8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  005ce	50		 push	 eax
  005cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  005d4	83 c0 6a	 add	 eax, 106		; 0000006aH
  005d7	6a 00		 push	 0
  005d9	03 c3		 add	 eax, ebx
  005db	6a 01		 push	 1
  005dd	50		 push	 eax
  005de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  005e3	83 c0 14	 add	 eax, 20			; 00000014H
  005e6	50		 push	 eax
  005e7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 16259: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16260: 
; 16261: #ifdef _FMVER21
; 16262: 					if (pc.familyleader != FMMEMBER_LEADER)	pushStatus = 0;

  005ec	33 c0		 xor	 eax, eax

; 16263: #else
; 16264: 					if (pc.familyleader != 1)	pushStatus = 0;
; 16265: #endif
; 16266: 					else pushStatus = 2;
; 16267: 					fontId[i + 6] = StockFontBuffer(winX + 400, winY + 100 + (i * 60) + 30,

  005ee	c7 85 c4 fb ff
	ff 00 00 00 00	 mov	 DWORD PTR $T2[ebp], OFFSET ??_C@_08KEIECNNH@?5?C?$NP?5?5?$LA?$KB?5@
  005f8	83 c4 24	 add	 esp, 36			; 00000024H
  005fb	bf 02 00 00 00	 mov	 edi, 2
  00600	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3
  00607	0f 45 f8	 cmovne	 edi, eax
  0060a	33 d2		 xor	 edx, edx
$LN91@FMPKListWN:

; 16191: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 16192: 
; 16193: 			for (i = 0; i < 4; i++)

  0060c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMPKListWN@@YAXH@Z@4HA
  00611	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??FMPKListWN@@YAXH@Z@4HA
  00617	03 c3		 add	 eax, ebx
  00619	57		 push	 edi
  0061a	ff b5 c4 fb ff
	ff		 push	 DWORD PTR $T2[ebp]
  00620	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00625	81 c1 90 01 00
	00		 add	 ecx, 400		; 00000190H
  0062b	52		 push	 edx
  0062c	6a 01		 push	 1
  0062e	50		 push	 eax
  0062f	51		 push	 ecx
  00630	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00635	8b 8d c0 fb ff
	ff		 mov	 ecx, DWORD PTR tv1381[ebp]
  0063b	83 c6 40	 add	 esi, 64			; 00000040H
  0063e	83 c4 18	 add	 esp, 24			; 00000018H
  00641	83 c3 3c	 add	 ebx, 60			; 0000003cH
  00644	89 01		 mov	 DWORD PTR [ecx], eax
  00646	83 c1 04	 add	 ecx, 4
  00649	89 8d c0 fb ff
	ff		 mov	 DWORD PTR tv1381[ebp], ecx
  0064f	81 fe 34 01 00
	00		 cmp	 esi, OFFSET ?FMPKDataList@@3PAUFMPKData@@A+308
  00655	0f 8c e5 fd ff
	ff		 jl	 $LL16@FMPKListWN
  0065b	5b		 pop	 ebx
  0065c	5f		 pop	 edi

; 16268: 						FONT_PRIO_FRONT, FONT_PAL_WHITE,
; 16269: 						dataStatusStr[0], pushStatus);
; 16270: 				}
; 16271: 
; 16272: 			} // for List end
; 16273: 
; 16274: 
; 16275: 
; 16276: 
; 16277: 
; 16278: 		}
; 16279: 	}
; 16280: }

  0065d	5e		 pop	 esi
  0065e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00661	33 cd		 xor	 ecx, ebp
  00663	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00668	8b e5		 mov	 esp, ebp
  0066a	5d		 pop	 ebp
  0066b	c3		 ret	 0
$LN25@FMPKListWN:

; 16110: 		{
; 16111: 			id = 100;
; 16112: 			windowTypeWN = -1;
; 16113: 			wnCloseFlag = 0;
; 16114: 			DeathAction(ptActMenuWin);

  0066c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00672	33 c0		 xor	 eax, eax
  00674	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0067e	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  00684	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00689	83 c4 04	 add	 esp, 4

; 16115: 			ptActMenuWin = NULL;

  0068c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN85@FMPKListWN:

; 16148: 		{
; 16149: 			windowTypeWN = -1;
; 16150: 			wnCloseFlag = 0;
; 16151: 			DeathAction(ptActMenuWin);

  00696	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0069c	33 c0		 xor	 eax, eax
  0069e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  006a8	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
  006ae	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006b3	83 c4 04	 add	 esp, 4

; 16152: 			ptActMenuWin = NULL;

  006b6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN15@FMPKListWN:

; 16268: 						FONT_PRIO_FRONT, FONT_PAL_WHITE,
; 16269: 						dataStatusStr[0], pushStatus);
; 16270: 				}
; 16271: 
; 16272: 			} // for List end
; 16273: 
; 16274: 
; 16275: 
; 16276: 
; 16277: 
; 16278: 		}
; 16279: 	}
; 16280: }

  006c0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006c3	5f		 pop	 edi
  006c4	33 cd		 xor	 ecx, ebp
  006c6	5e		 pop	 esi
  006c7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006cc	8b e5		 mov	 esp, ebp
  006ce	5d		 pop	 ebp
  006cf	c3		 ret	 0
$LN86@FMPKListWN:
  006d0	00 00 00 00	 DD	 $LN41@FMPKListWN
  006d4	00 00 00 00	 DD	 $LN42@FMPKListWN
  006d8	00 00 00 00	 DD	 $LN42@FMPKListWN
  006dc	00 00 00 00	 DD	 $LN44@FMPKListWN
  006e0	00 00 00 00	 DD	 $LN44@FMPKListWN
  006e4	00 00 00 00	 DD	 $LN46@FMPKListWN
?FMPKListWN@@YAXH@Z ENDP				; FMPKListWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMPKListWN@@YAXPAD@Z
_TEXT	SEGMENT
tv671 = -264						; size = 4
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMPKListWN@@YAXPAD@Z PROC				; initFMPKListWN, COMDAT

; 15976: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]

; 15977: 	int i;
; 15978: 	char buf2[256];
; 15979: 
; 15980: 	getStringToken(data, '|', 1, sizeof(buf2) - 1, buf2);

  00017	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	50		 push	 eax
  00020	68 ff 00 00 00	 push	 255			; 000000ffH
  00025	6a 01		 push	 1
  00027	6a 7c		 push	 124			; 0000007cH
  00029	53		 push	 ebx
  0002a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15981: 	serverTime = atoi(buf2);

  0002f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 _atoi
  0003b	a3 00 00 00 00	 mov	 DWORD PTR ?serverTime@@3HA, eax ; serverTime
  00040	be 00 00 00 00	 mov	 esi, OFFSET ?FMPKDataList@@3PAUFMPKData@@A ; FMPKDataList
  00045	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0004b	c7 85 f8 fe ff
	ff 1a 00 00 00	 mov	 DWORD PTR tv671[ebp], OFFSET ?FMPKDataList@@3PAUFMPKData@@A+26
  00055	83 c4 18	 add	 esp, 24			; 00000018H
  00058	bf 03 00 00 00	 mov	 edi, 3
  0005d	2b f0		 sub	 esi, eax
  0005f	90		 npad	 1
$LL4@initFMPKLi:

; 15982: 
; 15983: 	for (i = 0; i < 4; i++)
; 15984: 	{
; 15985: 		getStringToken(data, '|', i * 7 + 2, sizeof(buf2) - 1, buf2);

  00060	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00066	50		 push	 eax
  00067	68 ff 00 00 00	 push	 255			; 000000ffH
  0006c	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  0006f	50		 push	 eax
  00070	6a 7c		 push	 124			; 0000007cH
  00072	53		 push	 ebx
  00073	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00078	83 c4 14	 add	 esp, 20			; 00000014H

; 15986: 		strcpy(FMPKDataList[i].time, buf2);

  0007b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
$LL6@initFMPKLi:
  00081	8a 08		 mov	 cl, BYTE PTR [eax]
  00083	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00086	88 4c 06 ff	 mov	 BYTE PTR [esi+eax-1], cl
  0008a	84 c9		 test	 cl, cl
  0008c	75 f3		 jne	 SHORT $LL6@initFMPKLi

; 15987: 		getStringToken(data, '|', i * 7 + 3, sizeof(buf2) - 1, buf2);

  0008e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00094	50		 push	 eax
  00095	68 ff 00 00 00	 push	 255			; 000000ffH
  0009a	57		 push	 edi
  0009b	6a 7c		 push	 124			; 0000007cH
  0009d	53		 push	 ebx
  0009e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15988: 		strcpy(FMPKDataList[i].atkFMName, makeStringFromEscaped(makeStringFromEscaped(buf2)));

  000a3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000b5	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR tv671[ebp]
  000bb	83 c4 1c	 add	 esp, 28			; 0000001cH
  000be	2b d0		 sub	 edx, eax
$LL7@initFMPKLi:
  000c0	8a 08		 mov	 cl, BYTE PTR [eax]
  000c2	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000c5	88 4c 02 eb	 mov	 BYTE PTR [edx+eax-21], cl
  000c9	84 c9		 test	 cl, cl
  000cb	75 f3		 jne	 SHORT $LL7@initFMPKLi

; 15989: 		getStringToken(data, '|', i * 7 + 4, sizeof(buf2) - 1, buf2);

  000cd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000d3	50		 push	 eax
  000d4	68 ff 00 00 00	 push	 255			; 000000ffH
  000d9	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000dc	50		 push	 eax
  000dd	6a 7c		 push	 124			; 0000007cH
  000df	53		 push	 ebx
  000e0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15990: 		strcpy(FMPKDataList[i].defFMName, makeStringFromEscaped(makeStringFromEscaped(buf2)));

  000e5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000eb	50		 push	 eax
  000ec	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000f7	8b 95 f8 fe ff
	ff		 mov	 edx, DWORD PTR tv671[ebp]
  000fd	83 c4 1c	 add	 esp, 28			; 0000001cH
  00100	2b d0		 sub	 edx, eax
$LL8@initFMPKLi:
  00102	8a 08		 mov	 cl, BYTE PTR [eax]
  00104	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00107	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  0010b	84 c9		 test	 cl, cl
  0010d	75 f3		 jne	 SHORT $LL8@initFMPKLi

; 15991: 		getStringToken(data, '|', i * 7 + 5, sizeof(buf2) - 1, buf2);

  0010f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00115	50		 push	 eax
  00116	68 ff 00 00 00	 push	 255			; 000000ffH
  0011b	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  0011e	50		 push	 eax
  0011f	6a 7c		 push	 124			; 0000007cH
  00121	53		 push	 ebx
  00122	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15992: 		FMPKDataList[i].readyTime = atoi(buf2);

  00127	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 _atoi
  00133	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv671[ebp]
  00139	89 41 16	 mov	 DWORD PTR [ecx+22], eax

; 15993: 		getStringToken(data, '|', i * 7 + 6, sizeof(buf2) - 1, buf2);

  0013c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00142	50		 push	 eax
  00143	68 ff 00 00 00	 push	 255			; 000000ffH
  00148	8d 47 03	 lea	 eax, DWORD PTR [edi+3]
  0014b	50		 push	 eax
  0014c	6a 7c		 push	 124			; 0000007cH
  0014e	53		 push	 ebx
  0014f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15994: 		FMPKDataList[i].member = atoi(buf2);

  00154	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 _atoi
  00160	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv671[ebp]
  00166	89 41 1a	 mov	 DWORD PTR [ecx+26], eax

; 15995: 		getStringToken(data, '|', i * 7 + 7, sizeof(buf2) - 1, buf2);

  00169	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0016f	50		 push	 eax
  00170	68 ff 00 00 00	 push	 255			; 000000ffH
  00175	8d 47 04	 lea	 eax, DWORD PTR [edi+4]
  00178	50		 push	 eax
  00179	6a 7c		 push	 124			; 0000007cH
  0017b	53		 push	 ebx
  0017c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00181	83 c4 44	 add	 esp, 68			; 00000044H

; 15996: 		FMPKDataList[i].flag = atoi(buf2);

  00184	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 _atoi
  00190	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv671[ebp]
  00196	89 41 1e	 mov	 DWORD PTR [ecx+30], eax

; 15997: 		getStringToken(data, '|', i * 7 + 8, sizeof(buf2) - 1, buf2);

  00199	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  0019f	50		 push	 eax
  001a0	68 ff 00 00 00	 push	 255			; 000000ffH
  001a5	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  001a8	50		 push	 eax
  001a9	6a 7c		 push	 124			; 0000007cH
  001ab	53		 push	 ebx
  001ac	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15998: 		FMPKDataList[i].win = atoi(buf2);

  001b1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  001b7	50		 push	 eax
  001b8	e8 00 00 00 00	 call	 _atoi
  001bd	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR tv671[ebp]
  001c3	83 c7 07	 add	 edi, 7
  001c6	83 c4 1c	 add	 esp, 28			; 0000001cH
  001c9	83 c6 40	 add	 esi, 64			; 00000040H
  001cc	89 41 22	 mov	 DWORD PTR [ecx+34], eax
  001cf	83 c1 40	 add	 ecx, 64			; 00000040H
  001d2	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv671[ebp], ecx
  001d8	83 ff 1f	 cmp	 edi, 31			; 0000001fH
  001db	0f 8c 7f fe ff
	ff		 jl	 $LL4@initFMPKLi

; 15999: 
; 16000: 	}
; 16001: 
; 16002: }

  001e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e4	5f		 pop	 edi
  001e5	5e		 pop	 esi
  001e6	33 cd		 xor	 ecx, ebp
  001e8	5b		 pop	 ebx
  001e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ee	8b e5		 mov	 esp, ebp
  001f0	5d		 pop	 ebp
  001f1	c3		 ret	 0
?initFMPKListWN@@YAXPAD@Z ENDP				; initFMPKListWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMWindowType4@@YAXH@Z
_TEXT	SEGMENT
tv839 = -548						; size = 4
_i$3$ = -544						; size = 4
_btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_king$ = 8						; size = 4
?FMWindowType4@@YAXH@Z PROC				; FMWindowType4, COMDAT

; 15073: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 15074: 	static int winX, winY;
; 15075: 	static int winW, winH;
; 15076: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 15077: 	static int btnLoc[6][2];
; 15078: 	static int btnCnt;
; 15079: 	static int msgLine;
; 15080: 	static int fmdelid;
; 15081: 	char* btnTitle[] =
; 15082: 	{
; 15083: 		" ï¼¯ï¼« ",
; 15084: 		"CANCEL",
; 15085: 		"?  ?",
; 15086: 		"?  ?",
; 15087: 		"??",
; 15088: 		"??"
; 15089: 	};
; 15090: 	int  id, id2;
; 15091: 	int  i, j;
; 15092: 	int  mask;
; 15093: 	int  btn;
; 15094: 
; 15095: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	8b 45 08	 mov	 eax, DWORD PTR _king$[ebp]
  0001d	53		 push	 ebx
  0001e	56		 push	 esi
  0001f	57		 push	 edi
  00020	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  0002a	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00034	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0003e	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00048	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00052	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0005c	0f 85 4b 01 00
	00		 jne	 $LN86@FMWindowTy

; 15096: 	{
; 15097: #ifdef _NEW_MANOR_LAW
; 15098: 		if (king == 0) {

  00062	85 c0		 test	 eax, eax
  00064	75 18		 jne	 SHORT $LN18@FMWindowTy

; 15099: 			winW = 10;

  00066	bb 0a 00 00 00	 mov	 ebx, 10			; 0000000aH
$LN93@FMWindowTy:

; 15104: 			winH = 7;
; 15105: 		}
; 15106: #else
; 15107: 		winW = 10;
; 15108: 		winH = 7;
; 15109: #endif
; 15110: 		winX = (640 - winW * 64) / 2;

  0006b	bf 07 00 00 00	 mov	 edi, 7
  00070	89 1d 00 00 00
	00		 mov	 DWORD PTR ?winW@?1??FMWindowType4@@YAXH@Z@4HA, ebx
  00076	89 3d 00 00 00
	00		 mov	 DWORD PTR ?winH@?1??FMWindowType4@@YAXH@Z@4HA, edi
  0007c	eb 16		 jmp	 SHORT $LN20@FMWindowTy
$LN18@FMWindowTy:

; 15100: 			winH = 7;
; 15101: 		}
; 15102: 		else if (king == 1) {

  0007e	83 f8 01	 cmp	 eax, 1
  00081	75 05		 jne	 SHORT $LN92@FMWindowTy

; 15103: 			winW = 8;

  00083	8d 58 07	 lea	 ebx, DWORD PTR [eax+7]
  00086	eb e3		 jmp	 SHORT $LN93@FMWindowTy
$LN92@FMWindowTy:

; 15100: 			winH = 7;
; 15101: 		}
; 15102: 		else if (king == 1) {

  00088	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?winW@?1??FMWindowType4@@YAXH@Z@4HA
  0008e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?winH@?1??FMWindowType4@@YAXH@Z@4HA
$LN20@FMWindowTy:

; 15111: 		winY = (456 - winH * 48) / 2;

  00094	8d 0c 7f	 lea	 ecx, DWORD PTR [edi+edi*2]
  00097	b8 c8 01 00 00	 mov	 eax, 456		; 000001c8H

; 15112: 
; 15113: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0009c	6a 01		 push	 1
  0009e	c1 e1 04	 shl	 ecx, 4
  000a1	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  000a6	2b c1		 sub	 eax, ecx
  000a8	2b f3		 sub	 esi, ebx
  000aa	6a 00		 push	 0
  000ac	99		 cdq
  000ad	57		 push	 edi
  000ae	2b c2		 sub	 eax, edx
  000b0	c1 e6 05	 shl	 esi, 5
  000b3	d1 f8		 sar	 eax, 1
  000b5	53		 push	 ebx
  000b6	50		 push	 eax
  000b7	56		 push	 esi
  000b8	89 35 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA, esi
  000be	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA, eax
  000c3	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000c8	8b c8		 mov	 ecx, eax
  000ca	83 c4 18	 add	 esp, 24			; 00000018H
  000cd	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin

; 15114: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 15115: 		if (ptActMenuWin->x == 0)

  000d3	83 79 18 00	 cmp	 DWORD PTR [ecx+24], 0
  000d7	75 13		 jne	 SHORT $LN21@FMWindowTy

; 15116: 		{
; 15117: 			ptActMenuWin->x += DISPLACEMENT_X / 2;

  000d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  000de	99		 cdq
  000df	2b c2		 sub	 eax, edx
  000e1	d1 f8		 sar	 eax, 1
  000e3	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  000e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN21@FMWindowTy:

; 15118: 		}
; 15119: 
; 15120: 		winX = ptActMenuWin->x;

  000ec	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 15121: 		winY = ptActMenuWin->y;
; 15122: #endif
; 15123: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 15124: 		{
; 15125: 			btnId[i] = -2;
; 15126: 		}
; 15127: 		mask = 1;
; 15128: 		btnCnt = 0;

  000ef	33 f6		 xor	 esi, esi
  000f1	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 15129: 		for (i = 0; i < 10; i++, mask <<= 1)

  000f8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000fe	a3 00 00 00 00	 mov	 DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA, eax
  00103	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00106	33 c9		 xor	 ecx, ecx
  00108	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA, eax
  0010d	b8 01 00 00 00	 mov	 eax, 1
  00112	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA, xmm0
  00119	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA+16, -2 ; fffffffeH
  00123	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA+20, -2 ; fffffffeH
  0012d	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType4@@YAXH@Z@4HA, esi
$LL7@FMWindowTy:

; 15130: 		{
; 15131: 			if (buttonTypeWN & mask)

  00133	85 d0		 test	 edx, eax
  00135	74 06		 je	 SHORT $LN5@FMWindowTy

; 15132: 			{
; 15133: 				btnCnt++;

  00137	46		 inc	 esi
  00138	83 fe 04	 cmp	 esi, 4

; 15134: 				if (btnCnt == 4)

  0013b	74 08		 je	 SHORT $LN63@FMWindowTy
$LN5@FMWindowTy:

; 15129: 		for (i = 0; i < 10; i++, mask <<= 1)

  0013d	41		 inc	 ecx
  0013e	03 c0		 add	 eax, eax
  00140	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00143	7c ee		 jl	 SHORT $LL7@FMWindowTy
$LN63@FMWindowTy:

; 15132: 			{
; 15133: 				btnCnt++;

  00145	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType4@@YAXH@Z@4HA, esi

; 15135: 					break;
; 15136: 			}
; 15137: 		}
; 15138: 		if (btnCnt > 0)

  0014b	85 f6		 test	 esi, esi
  0014d	7e 30		 jle	 SHORT $LN9@FMWindowTy

; 15139: 		{
; 15140: 			int w;
; 15141: 			w = winW * 64 / (btnCnt + 1);

  0014f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMWindowType4@@YAXH@Z@4HA
  00154	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00157	c1 e0 06	 shl	 eax, 6
  0015a	99		 cdq
  0015b	f7 f9		 idiv	 ecx
  0015d	33 c9		 xor	 ecx, ecx

; 15142: 			for (i = 0; i < btnCnt; i++)

  0015f	85 f6		 test	 esi, esi
  00161	7e 1c		 jle	 SHORT $LN9@FMWindowTy

; 15139: 		{
; 15140: 			int w;
; 15141: 			w = winW * 64 / (btnCnt + 1);

  00163	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@FMWindowTy:

; 15143: 			{
; 15144: 				btnLoc[i][0] = w * (i + 1) - 27;

  00166	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA[ecx*8], edx
  0016d	03 d0		 add	 edx, eax

; 15145: 				btnLoc[i][1] = 295;

  0016f	c7 04 cd 04 00
	00 00 27 01 00
	00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA[ecx*8+4], 295 ; 00000127H
  0017a	41		 inc	 ecx
  0017b	3b ce		 cmp	 ecx, esi
  0017d	7c e7		 jl	 SHORT $LL10@FMWindowTy
$LN9@FMWindowTy:

; 15146: 			}
; 15147: 		}
; 15148: 		msgLine = 10;
; 15149: 		play_se(202, 320, 240);

  0017f	68 f0 00 00 00	 push	 240			; 000000f0H
  00184	68 40 01 00 00	 push	 320			; 00000140H
  00189	68 ca 00 00 00	 push	 202			; 000000caH
  0018e	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??FMWindowType4@@YAXH@Z@4HA, 10 ; 0000000aH
  00198	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 15150: 	}
; 15151: 
; 15152: 	if (ptActMenuWin != NULL)

  001a0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001a7	0f 84 28 03 00
	00		 je	 $LN15@FMWindowTy
$LN86@FMWindowTy:

; 15153: 	{
; 15154: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  001ad	6a 06		 push	 6
  001af	68 00 00 00 00	 push	 OFFSET ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA
  001b4	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001b9	83 c4 08	 add	 esp, 8
  001bc	8b f0		 mov	 esi, eax

; 15155: 
; 15156: 		id2 = -1;

  001be	83 cf ff	 or	 edi, -1

; 15157: 
; 15158: 		if (CheckMenuFlag()
; 15159: 			|| joy_trg[0] & JOY_ESC
; 15160: 			|| actBtn == 1
; 15161: 			|| menuBtn == 1
; 15162: 			|| disconnectServerFlag == TRUE
; 15163: 			|| wnCloseFlag == 1)

  001c1	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  001c6	85 c0		 test	 eax, eax
  001c8	75 52		 jne	 SHORT $LN27@FMWindowTy
  001ca	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  001d4	75 46		 jne	 SHORT $LN27@FMWindowTy
  001d6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  001de	74 3c		 je	 SHORT $LN27@FMWindowTy
  001e0	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001e8	74 32		 je	 SHORT $LN27@FMWindowTy
  001ea	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001f1	74 29		 je	 SHORT $LN27@FMWindowTy
  001f3	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001fb	74 1f		 je	 SHORT $LN27@FMWindowTy

; 15168: 		}
; 15169: 
; 15170: 		if (0 <= id && id < 6
; 15171: 			|| 0 <= id2 && id2 < 12
; 15172: 			|| id == 100)

  001fd	85 f6		 test	 esi, esi
  001ff	78 10		 js	 SHORT $LN31@FMWindowTy
  00201	83 fe 06	 cmp	 esi, 6
  00204	7d 0b		 jge	 SHORT $LN31@FMWindowTy

; 15179: 			}
; 15180: 			else
; 15181: 				if (0 <= id && id < 6)
; 15182: 				{
; 15183: 					btn = 1;
; 15184: 					btn <<= id;

  00206	bf 01 00 00 00	 mov	 edi, 1
  0020b	8b ce		 mov	 ecx, esi
  0020d	d3 e7		 shl	 edi, cl
  0020f	eb 27		 jmp	 SHORT $LN35@FMWindowTy
$LN31@FMWindowTy:

; 15168: 		}
; 15169: 
; 15170: 		if (0 <= id && id < 6
; 15171: 			|| 0 <= id2 && id2 < 12
; 15172: 			|| id == 100)

  00211	83 fe 64	 cmp	 esi, 100		; 00000064H
  00214	0f 85 9c 00 00
	00		 jne	 $LN28@FMWindowTy
  0021a	eb 17		 jmp	 SHORT $LN88@FMWindowTy
$LN27@FMWindowTy:

; 15164: 		{
; 15165: 			id = 100;
; 15166: 			windowTypeWN = -1;
; 15167: 			wnCloseFlag = 0;

  0021c	33 c0		 xor	 eax, eax
  0021e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00228	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  0022d	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN88@FMWindowTy:

; 15173: 		{
; 15174: 			char data[256];
; 15175: 			char msg[256];
; 15176: 			if (id == 100)
; 15177: 			{
; 15178: 				btn = WINDOW_BUTTONTYPE_CANCEL;

  00233	bf 02 00 00 00	 mov	 edi, 2
$LN35@FMWindowTy:

; 15185: 				}
; 15186: 				else
; 15187: 				{
; 15188: 					btn = 0;
; 15189: 				}
; 15190: 			if (id2 < 0)
; 15191: 				id2 = 0;
; 15192: 			sprintf(data, "%d|%d", FMdengonidex, id2);

  00238	6a 00		 push	 0
  0023a	ff 35 00 00 00
	00		 push	 DWORD PTR ?FMdengonidex@@3HA ; FMdengonidex
  00240	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
  0024b	50		 push	 eax
  0024c	e8 00 00 00 00	 call	 _sprintf

; 15193: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00251	68 ff 00 00 00	 push	 255			; 000000ffH
  00256	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0025c	50		 push	 eax
  0025d	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00263	50		 push	 eax
  00264	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00269	83 c4 1c	 add	 esp, 28			; 0000001cH

; 15194: 
; 15195: 			if (bNewServer)

  0026c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00272	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00279	50		 push	 eax
  0027a	57		 push	 edi
  0027b	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00281	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00287	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0028d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00293	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00299	74 07		 je	 SHORT $LN37@FMWindowTy

; 15196: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0029b	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  002a0	eb 05		 jmp	 SHORT $LN94@FMWindowTy
$LN37@FMWindowTy:

; 15197: 			else
; 15198: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  002a2	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN94@FMWindowTy:

; 15199: 			windowTypeWN = -1;

  002a7	83 c4 1c	 add	 esp, 28			; 0000001cH
  002aa	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002b4	33 ff		 xor	 edi, edi
$LN28@FMWindowTy:

; 15200: 		}
; 15201: 		if (id >= 0 || id2 >= 0) {

  002b6	85 f6		 test	 esi, esi
  002b8	0f 89 ff 01 00
	00		 jns	 $LN40@FMWindowTy
  002be	85 ff		 test	 edi, edi
  002c0	0f 89 f7 01 00
	00		 jns	 $LN40@FMWindowTy

; 15204: 			return;
; 15205: 		}
; 15206: 
; 15207: 		if (ptActMenuWin->hp >= 1)

  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002cb	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  002cf	0f 8c 00 02 00
	00		 jl	 $LN15@FMWindowTy

; 15208: 		{
; 15209: #ifdef _NEW_MANOR_LAW
; 15210: 			if (king == 0) {

  002d5	8b 45 08	 mov	 eax, DWORD PTR _king$[ebp]
  002d8	85 c0		 test	 eax, eax
  002da	75 2c		 jne	 SHORT $LN42@FMWindowTy

; 15211: 				StockFontBuffer(winX + 235, winY + 21,

  002dc	50		 push	 eax
  002dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  002e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KCIAGAPO@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?5?$KB?$KP@
  002e7	6a 04		 push	 4
  002e9	83 c0 15	 add	 eax, 21			; 00000015H
  002ec	6a 01		 push	 1
  002ee	50		 push	 eax
  002ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  002f4	05 eb 00 00 00	 add	 eax, 235		; 000000ebH
  002f9	50		 push	 eax
  002fa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 15212: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "âìë² ë¶ì¡± ìì â", 0);
; 15213: 				StockFontBuffer(winX + 25, winY + 16 + 2 * 21,

  002ff	6a 00		 push	 0
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_0DO@OAPGBLPG@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@

; 15214: 					FONT_PRIO_FRONT, FONT_PAL_GREEN, "âììâ âë¶ì¡±ì´ë¦â âì¡±ì¥â âê¸°ì¬ëââëªì±ââë¶ì¡±ëªì±â", 0);
; 15215: 			}

  00306	eb 2f		 jmp	 SHORT $LN95@FMWindowTy
$LN42@FMWindowTy:

; 15216: 			else if (king == 1) {

  00308	83 f8 01	 cmp	 eax, 1
  0030b	75 48		 jne	 SHORT $LN44@FMWindowTy

; 15217: 				StockFontBuffer(winX + 155, winY + 21,

  0030d	6a 00		 push	 0
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NPAMGOGD@?$KB?$KO?$LM?$KN?$LJ?v?5?$LK?N?A?$LH?5?$LM?x?$MA?$KH?$KB?$KP@
  00314	6a 04		 push	 4
  00316	50		 push	 eax
  00317	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  0031c	83 c0 15	 add	 eax, 21			; 00000015H
  0031f	50		 push	 eax
  00320	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  00325	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  0032a	50		 push	 eax
  0032b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 15218: 					FONT_PRIO_FRONT, FONT_PAL_YELLOW, "âìë² ë¶ì¡± ììâ", 0);
; 15219: 				StockFontBuffer(winX + 25, winY + 16 + 2 * 21,

  00330	6a 00		 push	 0
  00332	68 00 00 00 00	 push	 OFFSET ??_C@_0EB@DMPCKEKC@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?$KB?$KO?$LA?$KB?5?A?$LH?5?$LI?m?5?D?$KK?$KB?$KP?$KB?$KO?A?$LH?5?$MA?e?5@
$LN95@FMWindowTy:

; 15220: 					FONT_PRIO_FRONT, FONT_PAL_GREEN, "âììââê° ì¡± ëª ì¹­ââì¡± ì¥ ì´ ë¦ââê°ì¡±ìííââê°ì¸ê¸°ì¸â", 0);
; 15221: 			}
; 15222: #else
; 15223: 			StockFontBuffer(winX + 235, winY + 21,
; 15224: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "âå²ä¸æå¼ºä¹å®¶æå¼ºèæè¡æ¦â", 0);
; 15225: 			StockFontBuffer(winX + 25, winY + 16 + 2 * 21,
; 15226: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âåæ¬¡â âå®¶  æ  å  ç§°â âæ  é¿  å  ç§°â âç»¼åå£°æââæåå£°æââå®¶ææ»å£°æâ", 0);
; 15227: #endif
; 15228: 			for (i = 0; i < msgLine; i++)

  00337	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  0033c	6a 05		 push	 5
  0033e	83 c0 3a	 add	 eax, 58			; 0000003aH
  00341	6a 01		 push	 1
  00343	50		 push	 eax
  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  00349	83 c0 19	 add	 eax, 25			; 00000019H
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00352	83 c4 30	 add	 esp, 48			; 00000030H
$LN44@FMWindowTy:
  00355	33 d2		 xor	 edx, edx
  00357	89 95 e0 fd ff
	ff		 mov	 DWORD PTR _i$3$[ebp], edx
  0035d	39 15 00 00 00
	00		 cmp	 DWORD PTR ?msgLine@?1??FMWindowType4@@YAXH@Z@4HA, edx
  00363	0f 8e dc 00 00
	00		 jle	 $LN12@FMWindowTy
  00369	33 db		 xor	 ebx, ebx
  0036b	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
$LL13@FMWindowTy:

; 15229: 			{
; 15230: 				if (strlen(msgWN[i]) > 0)

  00370	8b cf		 mov	 ecx, edi
  00372	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL91@FMWindowTy:
  00375	8a 01		 mov	 al, BYTE PTR [ecx]
  00377	41		 inc	 ecx
  00378	84 c0		 test	 al, al
  0037a	75 f9		 jne	 SHORT $LL91@FMWindowTy
  0037c	2b ce		 sub	 ecx, esi
  0037e	0f 84 a5 00 00
	00		 je	 $LN11@FMWindowTy

; 15231: 				{
; 15232: 					int fontcolor = FONT_PAL_WHITE;
; 15233: 					if (lnmake != 0) {

  00384	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?lnmake@@3FA ; lnmake
  0038a	33 f6		 xor	 esi, esi
  0038c	66 85 c0	 test	 ax, ax
  0038f	74 0d		 je	 SHORT $LN47@FMWindowTy

; 15234: 						fontcolor = FONT_PAL_GRAY;
; 15235: 						if (lnmake == i) fontcolor = FONT_PAL_WHITE;

  00391	98		 cwde
  00392	33 c9		 xor	 ecx, ecx
  00394	3b c2		 cmp	 eax, edx
  00396	be 07 00 00 00	 mov	 esi, 7
  0039b	0f 44 f1	 cmove	 esi, ecx
$LN47@FMWindowTy:

; 15236: 					}
; 15237: 					if (i < selStartLine) {

  0039e	8b 45 08	 mov	 eax, DWORD PTR _king$[ebp]
  003a1	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  003a7	7d 4f		 jge	 SHORT $LN51@FMWindowTy

; 15238: #ifdef _NEW_MANOR_LAW
; 15239: 						if (king == 0) StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);

  003a9	85 c0		 test	 eax, eax
  003ab	75 23		 jne	 SHORT $LN49@FMWindowTy
  003ad	50		 push	 eax
  003ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  003b3	57		 push	 edi
  003b4	83 c0 4d	 add	 eax, 77			; 0000004dH
  003b7	56		 push	 esi
  003b8	03 c3		 add	 eax, ebx
  003ba	6a 01		 push	 1
  003bc	50		 push	 eax
  003bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  003c2	83 c0 28	 add	 eax, 40			; 00000028H
  003c5	50		 push	 eax
  003c6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003cb	83 c4 18	 add	 esp, 24			; 00000018H
  003ce	eb 31		 jmp	 SHORT $LN90@FMWindowTy
$LN49@FMWindowTy:

; 15240: 						else if (king == 1) StockFontBuffer(winX + 60, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);

  003d0	83 f8 01	 cmp	 eax, 1
  003d3	75 54		 jne	 SHORT $LN11@FMWindowTy
  003d5	6a 00		 push	 0
  003d7	57		 push	 edi
  003d8	56		 push	 esi
  003d9	50		 push	 eax
  003da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  003df	83 c0 4d	 add	 eax, 77			; 0000004dH
  003e2	03 c3		 add	 eax, ebx
  003e4	50		 push	 eax
  003e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  003ea	83 c0 3c	 add	 eax, 60			; 0000003cH
  003ed	50		 push	 eax
  003ee	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003f3	83 c4 18	 add	 esp, 24			; 00000018H

; 15241: #else
; 15242: 						StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);
; 15243: #endif
; 15244: 					}
; 15245: #ifdef _NEW_MANOR_LAW
; 15246: 					if (king == 0) StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);

  003f6	eb 09		 jmp	 SHORT $LN90@FMWindowTy
$LN51@FMWindowTy:
  003f8	85 c0		 test	 eax, eax
  003fa	74 05		 je	 SHORT $LN90@FMWindowTy

; 15247: 					else if (king == 1) StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);

  003fc	83 f8 01	 cmp	 eax, 1
  003ff	75 28		 jne	 SHORT $LN11@FMWindowTy
$LN90@FMWindowTy:

; 15220: 					FONT_PRIO_FRONT, FONT_PAL_GREEN, "âììââê° ì¡± ëª ì¹­ââì¡± ì¥ ì´ ë¦ââê°ì¡±ìííââê°ì¸ê¸°ì¸â", 0);
; 15221: 			}
; 15222: #else
; 15223: 			StockFontBuffer(winX + 235, winY + 21,
; 15224: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "âå²ä¸æå¼ºä¹å®¶æå¼ºèæè¡æ¦â", 0);
; 15225: 			StockFontBuffer(winX + 25, winY + 16 + 2 * 21,
; 15226: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âåæ¬¡â âå®¶  æ  å  ç§°â âæ  é¿  å  ç§°â âç»¼åå£°æââæåå£°æââå®¶ææ»å£°æâ", 0);
; 15227: #endif
; 15228: 			for (i = 0; i < msgLine; i++)

  00401	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  00406	6a 00		 push	 0
  00408	57		 push	 edi
  00409	83 c0 4d	 add	 eax, 77			; 0000004dH
  0040c	56		 push	 esi
  0040d	03 c3		 add	 eax, ebx
  0040f	6a 01		 push	 1
  00411	50		 push	 eax
  00412	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  00417	83 c0 28	 add	 eax, 40			; 00000028H
  0041a	50		 push	 eax
  0041b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00420	8b 95 e0 fd ff
	ff		 mov	 edx, DWORD PTR _i$3$[ebp]
  00426	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@FMWindowTy:
  00429	42		 inc	 edx
  0042a	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  00430	83 c3 15	 add	 ebx, 21			; 00000015H
  00433	89 95 e0 fd ff
	ff		 mov	 DWORD PTR _i$3$[ebp], edx
  00439	3b 15 00 00 00
	00		 cmp	 edx, DWORD PTR ?msgLine@?1??FMWindowType4@@YAXH@Z@4HA
  0043f	0f 8c 2b ff ff
	ff		 jl	 $LL13@FMWindowTy
$LN12@FMWindowTy:

; 15248: #else
; 15249: 					StockFontBuffer(winX + 40, winY + 14 + (i + 3) * 21, FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);
; 15250: #endif
; 15251: 				}
; 15252: 			}
; 15253: 			j = 0;

  00445	33 ff		 xor	 edi, edi

; 15254: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00447	bb 01 00 00 00	 mov	 ebx, 1
  0044c	33 f6		 xor	 esi, esi
  0044e	66 90		 npad	 2
$LL16@FMWindowTy:

; 15255: 			{
; 15256: 				btnId[i] = -2;

  00450	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 15257: 				if (buttonTypeWN & mask)

  0045a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00460	74 40		 je	 SHORT $LN14@FMWindowTy

; 15258: 				{
; 15259: 					if (j < btnCnt)

  00462	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??FMWindowType4@@YAXH@Z@4HA
  00468	7d 38		 jge	 SHORT $LN14@FMWindowTy

; 15260: 					{
; 15261: 						btnId[i] =

  0046a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA[edi*8+4]
  00471	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMWindowType4@@YAXH@Z@4HA
  00477	6a 02		 push	 2
  00479	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00480	6a 04		 push	 4
  00482	6a 01		 push	 1
  00484	50		 push	 eax
  00485	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType4@@YAXH@Z@4PAY01HA[edi*8]
  0048c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType4@@YAXH@Z@4HA
  00492	50		 push	 eax
  00493	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00498	83 c4 18	 add	 esp, 24			; 00000018H
  0049b	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??FMWindowType4@@YAXH@Z@4PAHA[esi], eax

; 15262: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 15263: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 15264: 						j++;

  004a1	47		 inc	 edi
$LN14@FMWindowTy:

; 15254: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  004a2	83 c6 04	 add	 esi, 4
  004a5	03 db		 add	 ebx, ebx
  004a7	83 fe 18	 cmp	 esi, 24			; 00000018H
  004aa	7c a4		 jl	 SHORT $LL16@FMWindowTy

; 15265: 					}
; 15266: 				}
; 15267: 			}
; 15268: 		}
; 15269: 	}
; 15270: }

  004ac	5f		 pop	 edi
  004ad	5e		 pop	 esi
  004ae	5b		 pop	 ebx
  004af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004b2	33 cd		 xor	 ecx, ebp
  004b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004b9	8b e5		 mov	 esp, ebp
  004bb	5d		 pop	 ebp
  004bc	c3		 ret	 0
$LN40@FMWindowTy:

; 15202: 			DeathAction(ptActMenuWin);

  004bd	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004c3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004c8	83 c4 04	 add	 esp, 4

; 15203: 			ptActMenuWin = NULL;

  004cb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN15@FMWindowTy:

; 15265: 					}
; 15266: 				}
; 15267: 			}
; 15268: 		}
; 15269: 	}
; 15270: }

  004d5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004d8	5f		 pop	 edi
  004d9	5e		 pop	 esi
  004da	33 cd		 xor	 ecx, ebp
  004dc	5b		 pop	 ebx
  004dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004e2	8b e5		 mov	 esp, ebp
  004e4	5d		 pop	 ebp
  004e5	c3		 ret	 0
?FMWindowType4@@YAXH@Z ENDP				; FMWindowType4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMWindowType4@@YAXPADH@Z
_TEXT	SEGMENT
_makecolor$ = -112					; size = 4
tv327 = -108						; size = 4
_sumdp$1$ = -108					; size = 4
_fmnamebuf$ = -104					; size = 36
_namebuf$ = -68						; size = 36
_dpbuf$ = -32						; size = 20
_lvbuf$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_king$ = 12						; size = 4
?initFMWindowType4@@YAXPADH@Z PROC			; initFMWindowType4, COMDAT

; 15012: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00015	57		 push	 edi

; 15013: 	makeStringFromEscaped(data);

  00016	56		 push	 esi
  00017	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15014: 
; 15015: 	FMdengonidex = 0;
; 15016: 	selStartLine = 0;
; 15017: 	lnmake = 0;
; 15018: 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  0001c	6a 50		 push	 80			; 00000050H
  0001e	6a 19		 push	 25			; 00000019H
  00020	68 00 01 00 00	 push	 256			; 00000100H
  00025	33 c0		 xor	 eax, eax
  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, 0 ; FMdengonidex
  00031	56		 push	 esi
  00032	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00037	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, 0 ; selStartLine
  00041	66 a3 00 00 00
	00		 mov	 WORD PTR ?lnmake@@3FA, ax ; lnmake
  00047	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  0004c	68 00 00 00 00	 push	 OFFSET ?FMHoldTime@@3_JA ; FMHoldTime
  00051	e8 00 00 00 00	 call	 __time64
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 15029: 	FMdengonidex = atoi(msgWN[10]);

  00056	68 00 0a 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+2560
  0005b	e8 00 00 00 00	 call	 _atoi
  00060	8b 75 0c	 mov	 esi, DWORD PTR _king$[ebp]
  00063	83 c4 20	 add	 esp, 32			; 00000020H
  00066	a3 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, eax ; FMdengonidex

; 15030: 	for (int i = 0; i < 10; i++) {

  0006b	33 db		 xor	 ebx, ebx
  0006d	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
$LL4@initFMWind:

; 15031: 		if (strlen(msgWN[i]) > 0) {

  00072	8b c7		 mov	 eax, edi
  00074	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL18@initFMWind:
  00077	8a 08		 mov	 cl, BYTE PTR [eax]
  00079	40		 inc	 eax
  0007a	84 c9		 test	 cl, cl
  0007c	75 f9		 jne	 SHORT $LL18@initFMWind
  0007e	2b c2		 sub	 eax, edx
  00080	0f 84 ae 01 00
	00		 je	 $LN2@initFMWind

; 15032: 			if (i >= selStartLine) {

  00086	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0008c	0f 8c a2 01 00
	00		 jl	 $LN2@initFMWind

; 15033: 				if (king == 0) {

  00092	85 f6		 test	 esi, esi
  00094	0f 85 f9 00 00
	00		 jne	 $LN7@initFMWind

; 15034: 					//å¤çå­ä¸²
; 15035: 					getStringToken(msgWN[i], '|', 2, sizeof(lvbuf) - 1, lvbuf);

  0009a	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  0009d	50		 push	 eax
  0009e	6a 07		 push	 7
  000a0	6a 02		 push	 2
  000a2	6a 7c		 push	 124			; 0000007cH
  000a4	57		 push	 edi
  000a5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15036: 					getStringToken(msgWN[i], '|', 3, sizeof(fmnamebuf) - 1, fmnamebuf);

  000aa	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  000ad	50		 push	 eax
  000ae	6a 23		 push	 35			; 00000023H
  000b0	6a 03		 push	 3
  000b2	6a 7c		 push	 124			; 0000007cH
  000b4	57		 push	 edi
  000b5	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15037: 					makeStringFromEscaped(fmnamebuf);

  000ba	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15038: 					getStringToken(msgWN[i], '|', 4, sizeof(namebuf) - 1, namebuf);

  000c3	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  000c6	50		 push	 eax
  000c7	6a 23		 push	 35			; 00000023H
  000c9	6a 04		 push	 4
  000cb	6a 7c		 push	 124			; 0000007cH
  000cd	57		 push	 edi
  000ce	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000d3	83 c4 40	 add	 esp, 64			; 00000040H

; 15039: 					makeStringFromEscaped(namebuf);

  000d6	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15040: 					getStringToken(msgWN[i], '|', 5, sizeof(dpbuf) - 1, dpbuf);

  000df	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  000e2	50		 push	 eax
  000e3	6a 13		 push	 19			; 00000013H
  000e5	6a 05		 push	 5
  000e7	6a 7c		 push	 124			; 0000007cH
  000e9	57		 push	 edi
  000ea	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15041: 					sumdp = atoi(dpbuf);

  000ef	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 _atoi
  000f8	89 45 94	 mov	 DWORD PTR _sumdp$1$[ebp], eax

; 15042: 					getStringToken(msgWN[i], '|', 6, sizeof(dpbuf) - 1, dpbuf);

  000fb	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  000fe	50		 push	 eax
  000ff	6a 13		 push	 19			; 00000013H
  00101	6a 06		 push	 6
  00103	6a 7c		 push	 124			; 0000007cH
  00105	57		 push	 edi
  00106	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15043: 					taldp = atoi(dpbuf);

  0010b	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 _atoi
  00114	8b f0		 mov	 esi, eax

; 15044: 					getStringToken(msgWN[i], '|', 7, sizeof(makecolor) - 1, makecolor);

  00116	8d 45 90	 lea	 eax, DWORD PTR _makecolor$[ebp]
  00119	50		 push	 eax
  0011a	6a 03		 push	 3
  0011c	6a 07		 push	 7
  0011e	6a 7c		 push	 124			; 0000007cH
  00120	57		 push	 edi
  00121	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00126	83 c4 48	 add	 esp, 72			; 00000048H

; 15045: 					if (strcmp(makecolor, "1") == 0) lnmake = i;

  00129	8d 45 90	 lea	 eax, DWORD PTR _makecolor$[ebp]
  0012c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01HIHLOKLC@1@
$LL19@initFMWind:
  00131	8a 10		 mov	 dl, BYTE PTR [eax]
  00133	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00135	75 1a		 jne	 SHORT $LN20@initFMWind
  00137	84 d2		 test	 dl, dl
  00139	74 12		 je	 SHORT $LN21@initFMWind
  0013b	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0013e	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00141	75 0e		 jne	 SHORT $LN20@initFMWind
  00143	83 c0 02	 add	 eax, 2
  00146	83 c1 02	 add	 ecx, 2
  00149	84 d2		 test	 dl, dl
  0014b	75 e4		 jne	 SHORT $LL19@initFMWind
$LN21@initFMWind:
  0014d	33 d2		 xor	 edx, edx
  0014f	eb 05		 jmp	 SHORT $LN22@initFMWind
$LN20@initFMWind:
  00151	1b d2		 sbb	 edx, edx
  00153	83 ca 01	 or	 edx, 1
$LN22@initFMWind:
  00156	0f b7 0d 00 00
	00 00		 movzx	 ecx, WORD PTR ?lnmake@@3FA ; lnmake
  0015d	85 d2		 test	 edx, edx

; 15046: 					sprintf(msgWN[i], " %-7s%-18s%-16s%13d%12d%14d%", lvbuf, fmnamebuf, namebuf, sumdp, taldp - sumdp, taldp);

  0015f	56		 push	 esi
  00160	0f b7 c3	 movzx	 eax, bx
  00163	0f 44 c8	 cmove	 ecx, eax
  00166	8b 45 94	 mov	 eax, DWORD PTR _sumdp$1$[ebp]
  00169	2b f0		 sub	 esi, eax
  0016b	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?lnmake@@3FA, cx ; lnmake
  00172	56		 push	 esi
  00173	50		 push	 eax
  00174	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  00177	50		 push	 eax
  00178	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  0017b	50		 push	 eax
  0017c	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  0017f	50		 push	 eax
  00180	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@EPBIJHBO@?5?$CF?97s?$CF?918s?$CF?916s?$CF13d?$CF12d?$CF14d?$CF@
  00185	57		 push	 edi
  00186	e8 00 00 00 00	 call	 _sprintf
  0018b	83 c4 20	 add	 esp, 32			; 00000020H

; 15047: 				}

  0018e	e9 9e 00 00 00	 jmp	 $LN23@initFMWind
$LN7@initFMWind:

; 15048: 				else if (king == 1) {

  00193	83 fe 01	 cmp	 esi, 1
  00196	0f 85 98 00 00
	00		 jne	 $LN2@initFMWind

; 15049: #ifdef _NEW_MANOR_LAW
; 15050: 					getStringToken(msgWN[i], '|', 2, sizeof(lvbuf) - 1, lvbuf);

  0019c	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  0019f	50		 push	 eax
  001a0	6a 07		 push	 7
  001a2	6a 02		 push	 2
  001a4	6a 7c		 push	 124			; 0000007cH
  001a6	57		 push	 edi
  001a7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15051: 					getStringToken(msgWN[i], '|', 3, sizeof(fmnamebuf) - 1, fmnamebuf);

  001ac	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  001af	50		 push	 eax
  001b0	6a 23		 push	 35			; 00000023H
  001b2	6a 03		 push	 3
  001b4	6a 7c		 push	 124			; 0000007cH
  001b6	57		 push	 edi
  001b7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15052: 					makeStringFromEscaped(fmnamebuf);

  001bc	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15053: 					getStringToken(msgWN[i], '|', 4, sizeof(namebuf) - 1, namebuf);

  001c5	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  001c8	50		 push	 eax
  001c9	6a 23		 push	 35			; 00000023H
  001cb	6a 04		 push	 4
  001cd	6a 7c		 push	 124			; 0000007cH
  001cf	57		 push	 edi
  001d0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  001d5	83 c4 40	 add	 esp, 64			; 00000040H

; 15054: 					makeStringFromEscaped(namebuf);

  001d8	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  001db	50		 push	 eax
  001dc	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15055: 					getStringToken(msgWN[i], '|', 5, sizeof(dpbuf) - 1, dpbuf);

  001e1	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  001e4	50		 push	 eax
  001e5	6a 13		 push	 19			; 00000013H
  001e7	6a 05		 push	 5
  001e9	6a 7c		 push	 124			; 0000007cH
  001eb	57		 push	 edi
  001ec	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15056: 					fmmomentum = atoi(dpbuf);

  001f1	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  001f4	50		 push	 eax
  001f5	e8 00 00 00 00	 call	 _atoi
  001fa	8b f0		 mov	 esi, eax

; 15057: 					getStringToken(msgWN[i], '|', 6, sizeof(dpbuf) - 1, dpbuf);

  001fc	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  001ff	50		 push	 eax
  00200	6a 13		 push	 19			; 00000013H
  00202	6a 06		 push	 6
  00204	6a 7c		 push	 124			; 0000007cH
  00206	57		 push	 edi
  00207	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15058: 					momentum = atoi(dpbuf);

  0020c	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  0020f	50		 push	 eax
  00210	e8 00 00 00 00	 call	 _atoi

; 15059: 					sprintf(msgWN[i], "%-7s%-16s%-16s%8d%12d", lvbuf, fmnamebuf, namebuf, fmmomentum, momentum);

  00215	50		 push	 eax
  00216	56		 push	 esi
  00217	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  0021a	50		 push	 eax
  0021b	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  0021e	50		 push	 eax
  0021f	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  00222	50		 push	 eax
  00223	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HKOCFEKA@?$CF?97s?$CF?916s?$CF?916s?$CF8d?$CF12d@
  00228	57		 push	 edi
  00229	e8 00 00 00 00	 call	 _sprintf
  0022e	83 c4 50	 add	 esp, 80			; 00000050H
$LN23@initFMWind:

; 15030: 	for (int i = 0; i < 10; i++) {

  00231	8b 75 0c	 mov	 esi, DWORD PTR _king$[ebp]
$LN2@initFMWind:
  00234	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  0023a	43		 inc	 ebx
  0023b	81 ff 00 0a 00
	00		 cmp	 edi, OFFSET ?msgWN@@3PAY0BAA@DA+2560
  00241	0f 8c 2b fe ff
	ff		 jl	 $LL4@initFMWind

; 15060: #endif
; 15061: 				}
; 15062: 			}
; 15063: 		}
; 15064: 	}
; 15065: }

  00247	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0024a	5f		 pop	 edi
  0024b	5e		 pop	 esi
  0024c	33 cd		 xor	 ecx, ebp
  0024e	5b		 pop	 ebx
  0024f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00254	8b e5		 mov	 esp, ebp
  00256	5d		 pop	 ebp
  00257	c3		 ret	 0
?initFMWindowType4@@YAXPADH@Z ENDP			; initFMWindowType4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMWindowType3@@YAXH@Z
_TEXT	SEGMENT
tv787 = -676						; size = 4
tv749 = -676						; size = 4
tv792 = -672						; size = 4
_btnTitle$ = -668					; size = 24
_data$1 = -644						; size = 256
_msg$2 = -388						; size = 256
_szMessage$ = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
_king$ = 8						; size = 4
?FMWindowType3@@YAXH@Z PROC				; FMWindowType3, COMDAT

; 15311: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec a4 02 00
	00		 sub	 esp, 676		; 000002a4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 15312: 	static int winX, winY;
; 15313: 	static int winW, winH;
; 15314: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 15315: 	static int btnLoc[6][2];
; 15316: 	static int btnCnt;
; 15317: 	static int msgLine;
; 15318: 	static int fmdelid;
; 15319: #ifdef _NEW_MANOR_LAW
; 15320: 	char szMessage[128];
; 15321: #endif
; 15322: 	char* btnTitle[] =
; 15323: 	{
; 15324: 		" ï¼¯ï¼« ",
; 15325: 		"CANCEL",
; 15326: 		"?  ?",
; 15327: 		"?  ?",
; 15328: 		"??",
; 15329: 		"??"
; 15330: 	};
; 15331: 	int  id, id2;
; 15332: 	int  i, j;
; 15333: 	int  mask;
; 15334: 	int  btn;
; 15335: 
; 15336: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	56		 push	 esi
  0001b	c7 85 64 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00025	c7 85 68 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002f	c7 85 6c fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00039	c7 85 70 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00043	c7 85 74 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004d	c7 85 78 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00057	0f 85 0a 01 00
	00		 jne	 $LN76@FMWindowTy

; 15337: 	{
; 15338: 		winW = 8;
; 15339: 		winH = 7;
; 15340: 		winX = (640 - winW * 64) / 2;
; 15341: 		winY = (456 - winH * 48) / 2;
; 15342: 
; 15343: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005d	6a 01		 push	 1
  0005f	6a 00		 push	 0
  00061	6a 07		 push	 7
  00063	6a 08		 push	 8
  00065	6a 3c		 push	 60			; 0000003cH
  00067	6a 40		 push	 64			; 00000040H
  00069	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winW@?1??FMWindowType3@@YAXH@Z@4HA, 8
  00073	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winH@?1??FMWindowType3@@YAXH@Z@4HA, 7
  0007d	c7 05 00 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA, 64 ; 00000040H
  00087	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA, 60 ; 0000003cH
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 15344: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 15345: 		winX = ptActMenuWin->x;
; 15346: 		winY = ptActMenuWin->y;
; 15347: #endif
; 15348: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 15349: 		{
; 15350: 			btnId[i] = -2;

  00096	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 15351: 		}
; 15352: 		mask = 1;
; 15353: 		btnCnt = 0;

  0009d	33 f6		 xor	 esi, esi

; 15354: 		for (i = 0; i < 10; i++, mask <<= 1)

  0009f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a5	83 c4 18	 add	 esp, 24			; 00000018H
  000a8	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ad	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b0	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA, ecx
  000b9	33 c9		 xor	 ecx, ecx
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA, eax
  000c0	b8 01 00 00 00	 mov	 eax, 1
  000c5	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA, xmm0
  000cc	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA+16, -2 ; fffffffeH
  000d6	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA+20, -2 ; fffffffeH
  000e0	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType3@@YAXH@Z@4HA, esi
$LL7@FMWindowTy:

; 15355: 		{
; 15356: 			if (buttonTypeWN & mask)

  000e6	85 d0		 test	 edx, eax
  000e8	74 06		 je	 SHORT $LN5@FMWindowTy

; 15357: 			{
; 15358: 				btnCnt++;

  000ea	46		 inc	 esi
  000eb	83 fe 04	 cmp	 esi, 4

; 15359: 				if (btnCnt == 4)

  000ee	74 08		 je	 SHORT $LN53@FMWindowTy
$LN5@FMWindowTy:

; 15354: 		for (i = 0; i < 10; i++, mask <<= 1)

  000f0	41		 inc	 ecx
  000f1	03 c0		 add	 eax, eax
  000f3	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  000f6	7c ee		 jl	 SHORT $LL7@FMWindowTy
$LN53@FMWindowTy:

; 15357: 			{
; 15358: 				btnCnt++;

  000f8	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType3@@YAXH@Z@4HA, esi

; 15360: 					break;
; 15361: 			}
; 15362: 		}
; 15363: 		if (btnCnt > 0)

  000fe	85 f6		 test	 esi, esi
  00100	7e 37		 jle	 SHORT $LN9@FMWindowTy

; 15364: 		{
; 15365: 			int w;
; 15366: 			w = winW * 64 / (btnCnt + 1);

  00102	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMWindowType3@@YAXH@Z@4HA
  00107	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0010a	c1 e0 06	 shl	 eax, 6
  0010d	99		 cdq
  0010e	f7 f9		 idiv	 ecx
  00110	33 c9		 xor	 ecx, ecx

; 15367: 			for (i = 0; i < btnCnt; i++)

  00112	85 f6		 test	 esi, esi
  00114	7e 23		 jle	 SHORT $LN9@FMWindowTy

; 15364: 		{
; 15365: 			int w;
; 15366: 			w = winW * 64 / (btnCnt + 1);

  00116	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
  00119	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@FMWindowTy:

; 15368: 			{
; 15369: 				btnLoc[i][0] = w * (i + 1) - 27;

  00120	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA[ecx*8], edx
  00127	03 d0		 add	 edx, eax

; 15370: 				btnLoc[i][1] = 295;

  00129	c7 04 cd 04 00
	00 00 27 01 00
	00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA[ecx*8+4], 295 ; 00000127H
  00134	41		 inc	 ecx
  00135	3b ce		 cmp	 ecx, esi
  00137	7c e7		 jl	 SHORT $LL10@FMWindowTy
$LN9@FMWindowTy:

; 15371: 			}
; 15372: 		}
; 15373: 		msgLine = 10;
; 15374: 		play_se(202, 320, 240);

  00139	68 f0 00 00 00	 push	 240			; 000000f0H
  0013e	68 40 01 00 00	 push	 320			; 00000140H
  00143	68 ca 00 00 00	 push	 202			; 000000caH
  00148	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??FMWindowType3@@YAXH@Z@4HA, 10 ; 0000000aH
  00152	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00157	83 c4 0c	 add	 esp, 12			; 0000000cH

; 15375: 	}
; 15376: 
; 15377: 	if (ptActMenuWin != NULL)

  0015a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00161	0f 84 ff 02 00
	00		 je	 $LN15@FMWindowTy
$LN76@FMWindowTy:
  00167	57		 push	 edi

; 15378: 	{
; 15379: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  00168	6a 06		 push	 6
  0016a	68 00 00 00 00	 push	 OFFSET ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA
  0016f	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00174	83 c4 08	 add	 esp, 8
  00177	8b f0		 mov	 esi, eax

; 15380: 
; 15381: 		id2 = -1;

  00179	83 cf ff	 or	 edi, -1

; 15382: 
; 15383: 		if (CheckMenuFlag()
; 15384: 			|| joy_trg[0] & JOY_ESC
; 15385: 			|| actBtn == 1
; 15386: 			|| menuBtn == 1
; 15387: 			|| disconnectServerFlag == TRUE
; 15388: 			|| wnCloseFlag == 1)

  0017c	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00181	85 c0		 test	 eax, eax
  00183	75 52		 jne	 SHORT $LN23@FMWindowTy
  00185	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0018f	75 46		 jne	 SHORT $LN23@FMWindowTy
  00191	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00199	74 3c		 je	 SHORT $LN23@FMWindowTy
  0019b	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  001a3	74 32		 je	 SHORT $LN23@FMWindowTy
  001a5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  001ac	74 29		 je	 SHORT $LN23@FMWindowTy
  001ae	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  001b6	74 1f		 je	 SHORT $LN23@FMWindowTy

; 15393: 		}
; 15394: 
; 15395: 		if (0 <= id && id < 6
; 15396: 			|| 0 <= id2 && id2 < 12
; 15397: 			|| id == 100)

  001b8	85 f6		 test	 esi, esi
  001ba	78 10		 js	 SHORT $LN27@FMWindowTy
  001bc	83 fe 06	 cmp	 esi, 6
  001bf	7d 0b		 jge	 SHORT $LN27@FMWindowTy

; 15404: 			}
; 15405: 			else
; 15406: 				if (0 <= id && id < 6)
; 15407: 				{
; 15408: 					btn = 1;
; 15409: 					btn <<= id;

  001c1	bf 01 00 00 00	 mov	 edi, 1
  001c6	8b ce		 mov	 ecx, esi
  001c8	d3 e7		 shl	 edi, cl
  001ca	eb 27		 jmp	 SHORT $LN31@FMWindowTy
$LN27@FMWindowTy:

; 15393: 		}
; 15394: 
; 15395: 		if (0 <= id && id < 6
; 15396: 			|| 0 <= id2 && id2 < 12
; 15397: 			|| id == 100)

  001cc	83 fe 64	 cmp	 esi, 100		; 00000064H
  001cf	0f 85 9c 00 00
	00		 jne	 $LN24@FMWindowTy
  001d5	eb 17		 jmp	 SHORT $LN78@FMWindowTy
$LN23@FMWindowTy:

; 15389: 		{
; 15390: 			id = 100;
; 15391: 			windowTypeWN = -1;
; 15392: 			wnCloseFlag = 0;

  001d7	33 c0		 xor	 eax, eax
  001d9	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  001e3	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  001e8	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN78@FMWindowTy:

; 15398: 		{
; 15399: 			char data[256];
; 15400: 			char msg[256];
; 15401: 			if (id == 100)
; 15402: 			{
; 15403: 				btn = WINDOW_BUTTONTYPE_CANCEL;

  001ee	bf 02 00 00 00	 mov	 edi, 2
$LN31@FMWindowTy:

; 15410: 				}
; 15411: 				else
; 15412: 				{
; 15413: 					btn = 0;
; 15414: 				}
; 15415: 			if (id2 < 0)
; 15416: 				id2 = 0;
; 15417: 			sprintf(data, "%d|%d", FMdengonidex, id2);

  001f3	6a 00		 push	 0
  001f5	ff 35 00 00 00
	00		 push	 DWORD PTR ?FMdengonidex@@3HA ; FMdengonidex
  001fb	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00201	68 00 00 00 00	 push	 OFFSET ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 _sprintf

; 15418: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0020c	68 ff 00 00 00	 push	 255			; 000000ffH
  00211	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00217	50		 push	 eax
  00218	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00224	83 c4 1c	 add	 esp, 28			; 0000001cH

; 15419: 
; 15420: 			if (bNewServer)

  00227	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0022d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00234	50		 push	 eax
  00235	57		 push	 edi
  00236	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0023c	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00242	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00248	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0024e	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00254	74 07		 je	 SHORT $LN33@FMWindowTy

; 15421: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00256	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0025b	eb 05		 jmp	 SHORT $LN82@FMWindowTy
$LN33@FMWindowTy:

; 15422: 			else
; 15423: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0025d	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN82@FMWindowTy:

; 15424: 			windowTypeWN = -1;

  00262	83 c4 1c	 add	 esp, 28			; 0000001cH
  00265	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0026f	33 ff		 xor	 edi, edi
$LN24@FMWindowTy:

; 15425: 		}
; 15426: 		if (id >= 0 || id2 >= 0) {

  00271	85 f6		 test	 esi, esi
  00273	0f 89 d4 01 00
	00		 jns	 $LN36@FMWindowTy
  00279	85 ff		 test	 edi, edi
  0027b	0f 89 cc 01 00
	00		 jns	 $LN36@FMWindowTy

; 15429: 			return;
; 15430: 		}
; 15431: 
; 15432: 		if (ptActMenuWin->hp >= 1)

  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00286	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0028a	0f 8c d5 01 00
	00		 jl	 $LN81@FMWindowTy

; 15433: 		{
; 15434: 			StockFontBuffer(winX + 34, winY + 21,

  00290	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA
  00295	6a 00		 push	 0
  00297	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@CPAJCIOI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$KB?$KO?$LM?$KN?$LJ?v?5?$LA?$KB?A?$LH?5?$LM@
  0029c	6a 04		 push	 4
  0029e	83 c0 15	 add	 eax, 21			; 00000015H
  002a1	6a 01		 push	 1
  002a3	50		 push	 eax
  002a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA
  002a9	83 c0 22	 add	 eax, 34			; 00000022H
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 15435: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "                  âìë² ê°ì¡± ììâ", 0);
; 15436: 
; 15437: #ifdef _NEW_MANOR_LAW
; 15438: 			if (king == 0) sprintf(szMessage, "âììâ âë¶ì¡±ì´ë¦â âì¡±ì¥â  âí¬ì¸í¸â");

  002b2	8b 45 08	 mov	 eax, DWORD PTR _king$[ebp]
  002b5	83 c4 18	 add	 esp, 24			; 00000018H
  002b8	85 c0		 test	 eax, eax
  002ba	74 05		 je	 SHORT $LN79@FMWindowTy

; 15439: 			else if (king == 1) sprintf(szMessage, "âììâ âë¶ì¡±ì´ë¦â âì¡±ì¥â  âí¬ì¸í¸â");

  002bc	83 f8 01	 cmp	 eax, 1
  002bf	75 14		 jne	 SHORT $LN40@FMWindowTy
$LN79@FMWindowTy:
  002c1	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp]
  002c7	68 00 00 00 00	 push	 OFFSET ??_C@_0CL@PEELKHDI@?$KB?$KO?$LM?x?$MA?$KH?$KB?$KP?5?$KB?$KO?$LK?N?A?$LH?$MA?L?$LI?$KH?$KB?$KP?5?$KB?$KO?A?$LH?$MA?e?$KB?$KP?5@
  002cc	50		 push	 eax
  002cd	e8 00 00 00 00	 call	 _sprintf
  002d2	83 c4 08	 add	 esp, 8
$LN40@FMWindowTy:

; 15440: 			StockFontBuffer(winX + 39, winY + 16 + 2 * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, szMessage, 0);

  002d5	53		 push	 ebx
  002d6	6a 00		 push	 0
  002d8	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _szMessage$[ebp]
  002de	50		 push	 eax
  002df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA
  002e4	6a 05		 push	 5
  002e6	83 c0 3a	 add	 eax, 58			; 0000003aH
  002e9	6a 01		 push	 1
  002eb	50		 push	 eax
  002ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA
  002f1	83 c0 27	 add	 eax, 39			; 00000027H
  002f4	50		 push	 eax
  002f5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 15441: #else
; 15442: 			StockFontBuffer(winX + 39, winY + 16 + 2 * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, "âå æ¬¡â âå®¶  æ  å  ç§°â âæ  é¿  å  ç§°â  âå®¶æå£°æå¼â", 0);
; 15443: #endif
; 15444: 			for (i = 0; i < msgLine; i++)

  002fa	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?msgLine@?1??FMWindowType3@@YAXH@Z@4HA
  00300	83 c4 18	 add	 esp, 24			; 00000018H
  00303	33 f6		 xor	 esi, esi
  00305	85 ff		 test	 edi, edi
  00307	0f 8e c2 00 00
	00		 jle	 $LN12@FMWindowTy

; 15440: 			StockFontBuffer(winX + 39, winY + 16 + 2 * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, szMessage, 0);

  0030d	33 d2		 xor	 edx, edx
  0030f	bb 00 00 00 00	 mov	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00314	89 95 60 fd ff
	ff		 mov	 DWORD PTR tv792[ebp], edx
  0031a	66 0f 1f 44 00
	00		 npad	 6
$LL13@FMWindowTy:

; 15445: 			{
; 15446: 				if (strlen(msgWN[i]) > 0)

  00320	8b cb		 mov	 ecx, ebx
  00322	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00325	89 85 5c fd ff
	ff		 mov	 DWORD PTR tv787[ebp], eax
  0032b	0f 1f 44 00 00	 npad	 5
$LL80@FMWindowTy:
  00330	8a 01		 mov	 al, BYTE PTR [ecx]
  00332	41		 inc	 ecx
  00333	84 c0		 test	 al, al
  00335	75 f9		 jne	 SHORT $LL80@FMWindowTy
  00337	2b 8d 5c fd ff
	ff		 sub	 ecx, DWORD PTR tv787[ebp]
  0033d	74 78		 je	 SHORT $LN11@FMWindowTy

; 15447: 				{
; 15448: 					int fontcolor = FONT_PAL_WHITE;
; 15449: 					if (lnmake != 0) {

  0033f	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?lnmake@@3FA ; lnmake
  00345	33 ff		 xor	 edi, edi
  00347	66 85 c0	 test	 ax, ax
  0034a	74 0d		 je	 SHORT $LN43@FMWindowTy

; 15450: 						fontcolor = FONT_PAL_GRAY;
; 15451: 						if (lnmake == i) fontcolor = FONT_PAL_WHITE;

  0034c	98		 cwde
  0034d	33 c9		 xor	 ecx, ecx
  0034f	3b c6		 cmp	 eax, esi
  00351	bf 07 00 00 00	 mov	 edi, 7
  00356	0f 44 f9	 cmove	 edi, ecx
$LN43@FMWindowTy:

; 15452: 					}
; 15453: 					if (i < selStartLine) {

  00359	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0035f	7d 28		 jge	 SHORT $LN44@FMWindowTy

; 15454: 						StockFontBuffer(winX + 58, winY + 14 + (i + 3) * 21,

  00361	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA
  00366	6a 00		 push	 0
  00368	53		 push	 ebx
  00369	83 c0 4d	 add	 eax, 77			; 0000004dH
  0036c	57		 push	 edi
  0036d	03 c2		 add	 eax, edx
  0036f	6a 01		 push	 1
  00371	50		 push	 eax
  00372	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA
  00377	83 c0 3a	 add	 eax, 58			; 0000003aH
  0037a	50		 push	 eax
  0037b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00380	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR tv792[ebp]
  00386	83 c4 18	 add	 esp, 24			; 00000018H
$LN44@FMWindowTy:

; 15455: 							FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);
; 15456: 					}
; 15457: 					StockFontBuffer(winX + 58, winY + 14 + (i + 3) * 21,

  00389	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA
  0038e	6a 00		 push	 0
  00390	53		 push	 ebx
  00391	83 c0 4d	 add	 eax, 77			; 0000004dH
  00394	57		 push	 edi
  00395	03 c2		 add	 eax, edx
  00397	6a 01		 push	 1
  00399	50		 push	 eax
  0039a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA
  0039f	83 c0 3a	 add	 eax, 58			; 0000003aH
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003a8	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?msgLine@?1??FMWindowType3@@YAXH@Z@4HA
  003ae	83 c4 18	 add	 esp, 24			; 00000018H
  003b1	8b 95 60 fd ff
	ff		 mov	 edx, DWORD PTR tv792[ebp]
$LN11@FMWindowTy:

; 15441: #else
; 15442: 			StockFontBuffer(winX + 39, winY + 16 + 2 * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, "âå æ¬¡â âå®¶  æ  å  ç§°â âæ  é¿  å  ç§°â  âå®¶æå£°æå¼â", 0);
; 15443: #endif
; 15444: 			for (i = 0; i < msgLine; i++)

  003b7	46		 inc	 esi
  003b8	83 c2 15	 add	 edx, 21			; 00000015H
  003bb	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  003c1	89 95 60 fd ff
	ff		 mov	 DWORD PTR tv792[ebp], edx
  003c7	3b f7		 cmp	 esi, edi
  003c9	0f 8c 51 ff ff
	ff		 jl	 $LL13@FMWindowTy
$LN12@FMWindowTy:

; 15458: 						FONT_PRIO_FRONT, fontcolor, msgWN[i], 0);
; 15459: 				}
; 15460: 			}
; 15461: 			j = 0;

  003cf	33 db		 xor	 ebx, ebx

; 15462: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  003d1	bf 01 00 00 00	 mov	 edi, 1
  003d6	33 f6		 xor	 esi, esi
  003d8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL16@FMWindowTy:

; 15463: 			{
; 15464: 				btnId[i] = -2;

  003e0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 15465: 				if (buttonTypeWN & mask)

  003ea	85 3d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, edi ; buttonTypeWN
  003f0	74 40		 je	 SHORT $LN14@FMWindowTy

; 15466: 				{
; 15467: 					if (j < btnCnt)

  003f2	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?btnCnt@?1??FMWindowType3@@YAXH@Z@4HA
  003f8	7d 38		 jge	 SHORT $LN14@FMWindowTy

; 15468: 					{
; 15469: 						btnId[i] =

  003fa	8b 04 dd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA[ebx*8+4]
  00401	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMWindowType3@@YAXH@Z@4HA
  00407	6a 02		 push	 2
  00409	ff b4 35 64 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00410	6a 04		 push	 4
  00412	6a 01		 push	 1
  00414	50		 push	 eax
  00415	8b 04 dd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType3@@YAXH@Z@4PAY01HA[ebx*8]
  0041c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType3@@YAXH@Z@4HA
  00422	50		 push	 eax
  00423	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00428	83 c4 18	 add	 esp, 24			; 00000018H
  0042b	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??FMWindowType3@@YAXH@Z@4PAHA[esi], eax

; 15470: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 15471: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 15472: 						j++;

  00431	43		 inc	 ebx
$LN14@FMWindowTy:

; 15462: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00432	83 c6 04	 add	 esi, 4
  00435	03 ff		 add	 edi, edi
  00437	83 fe 18	 cmp	 esi, 24			; 00000018H
  0043a	7c a4		 jl	 SHORT $LL16@FMWindowTy

; 15359: 				if (btnCnt == 4)

  0043c	5b		 pop	 ebx
  0043d	5f		 pop	 edi
  0043e	5e		 pop	 esi

; 15473: 					}
; 15474: 				}
; 15475: 			}
; 15476: 		}
; 15477: 	}
; 15478: }

  0043f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00442	33 cd		 xor	 ecx, ebp
  00444	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00449	8b e5		 mov	 esp, ebp
  0044b	5d		 pop	 ebp
  0044c	c3		 ret	 0
$LN36@FMWindowTy:

; 15427: 			DeathAction(ptActMenuWin);

  0044d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00453	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00458	83 c4 04	 add	 esp, 4

; 15428: 			ptActMenuWin = NULL;

  0045b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN81@FMWindowTy:
  00465	5f		 pop	 edi
$LN15@FMWindowTy:

; 15473: 					}
; 15474: 				}
; 15475: 			}
; 15476: 		}
; 15477: 	}
; 15478: }

  00466	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00469	33 cd		 xor	 ecx, ebp
  0046b	5e		 pop	 esi
  0046c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00471	8b e5		 mov	 esp, ebp
  00473	5d		 pop	 ebp
  00474	c3		 ret	 0
?FMWindowType3@@YAXH@Z ENDP				; FMWindowType3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMWindowType3@@YAXPAD@Z
_TEXT	SEGMENT
tv252 = -112						; size = 4
_makecolor$ = -108					; size = 4
_fmnamebuf$ = -104					; size = 36
_namebuf$ = -68						; size = 36
_dpbuf$ = -32						; size = 20
_lvbuf$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMWindowType3@@YAXPAD@Z PROC			; initFMWindowType3, COMDAT

; 15273: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 70	 sub	 esp, 112		; 00000070H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00014	57		 push	 edi

; 15274: 	makeStringFromEscaped(data);

  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15275: 
; 15276: 	FMdengonidex = 0;
; 15277: 	selStartLine = 0;
; 15278: 	lnmake = 0;
; 15279: 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  0001b	6a 32		 push	 50			; 00000032H
  0001d	6a 19		 push	 25			; 00000019H
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	33 c0		 xor	 eax, eax
  00026	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, 0 ; FMdengonidex
  00030	56		 push	 esi
  00031	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00036	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, 0 ; selStartLine
  00040	66 a3 00 00 00
	00		 mov	 WORD PTR ?lnmake@@3FA, ax ; lnmake
  00046	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  0004b	68 00 00 00 00	 push	 OFFSET ?FMHoldTime@@3_JA ; FMHoldTime
  00050	e8 00 00 00 00	 call	 __time64
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 15286: 	FMdengonidex = atoi(msgWN[10]);

  00055	68 00 0a 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+2560
  0005a	e8 00 00 00 00	 call	 _atoi
  0005f	83 c4 20	 add	 esp, 32			; 00000020H
  00062	a3 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, eax ; FMdengonidex

; 15287: 	for (int i = 0; i < 10; i++) {

  00067	33 ff		 xor	 edi, edi
  00069	be 00 00 00 00	 mov	 esi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0006e	66 90		 npad	 2
$LL4@initFMWind:

; 15288: 		if (strlen(msgWN[i]) > 0) {

  00070	8b ce		 mov	 ecx, esi
  00072	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL15@initFMWind:
  00075	8a 01		 mov	 al, BYTE PTR [ecx]
  00077	41		 inc	 ecx
  00078	84 c0		 test	 al, al
  0007a	75 f9		 jne	 SHORT $LL15@initFMWind
  0007c	2b ca		 sub	 ecx, edx
  0007e	0f 84 d5 00 00
	00		 je	 $LN2@initFMWind

; 15289: 			if (i >= selStartLine) {

  00084	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0008a	0f 8c c9 00 00
	00		 jl	 $LN2@initFMWind

; 15290: 				//å¤çå­ä¸²
; 15291: 				getStringToken(msgWN[i], '|', 2, sizeof(lvbuf) - 1, lvbuf);

  00090	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  00093	50		 push	 eax
  00094	6a 07		 push	 7
  00096	6a 02		 push	 2
  00098	6a 7c		 push	 124			; 0000007cH
  0009a	56		 push	 esi
  0009b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15292: 				getStringToken(msgWN[i], '|', 3, sizeof(fmnamebuf) - 1, fmnamebuf);

  000a0	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  000a3	50		 push	 eax
  000a4	6a 23		 push	 35			; 00000023H
  000a6	6a 03		 push	 3
  000a8	6a 7c		 push	 124			; 0000007cH
  000aa	56		 push	 esi
  000ab	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15293: 				makeStringFromEscaped(fmnamebuf);

  000b0	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15294: 				getStringToken(msgWN[i], '|', 4, sizeof(namebuf) - 1, namebuf);

  000b9	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  000bc	50		 push	 eax
  000bd	6a 23		 push	 35			; 00000023H
  000bf	6a 04		 push	 4
  000c1	6a 7c		 push	 124			; 0000007cH
  000c3	56		 push	 esi
  000c4	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000c9	83 c4 40	 add	 esp, 64			; 00000040H

; 15295: 				makeStringFromEscaped(namebuf);

  000cc	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  000cf	50		 push	 eax
  000d0	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 15296: 				getStringToken(msgWN[i], '|', 5, sizeof(dpbuf) - 1, dpbuf);

  000d5	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  000d8	50		 push	 eax
  000d9	6a 13		 push	 19			; 00000013H
  000db	6a 05		 push	 5
  000dd	6a 7c		 push	 124			; 0000007cH
  000df	56		 push	 esi
  000e0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 15297: 				getStringToken(msgWN[i], '|', 6, sizeof(makecolor) - 1, makecolor);

  000e5	8d 45 94	 lea	 eax, DWORD PTR _makecolor$[ebp]
  000e8	50		 push	 eax
  000e9	6a 03		 push	 3
  000eb	6a 06		 push	 6
  000ed	6a 7c		 push	 124			; 0000007cH
  000ef	56		 push	 esi
  000f0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000f5	83 c4 2c	 add	 esp, 44			; 0000002cH

; 15298: 				if (strcmp(makecolor, "1") == 0) lnmake = i;

  000f8	8d 4d 94	 lea	 ecx, DWORD PTR _makecolor$[ebp]
  000fb	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_01HIHLOKLC@1@
$LL16@initFMWind:
  00100	8a 11		 mov	 dl, BYTE PTR [ecx]
  00102	3a 10		 cmp	 dl, BYTE PTR [eax]
  00104	75 1a		 jne	 SHORT $LN17@initFMWind
  00106	84 d2		 test	 dl, dl
  00108	74 12		 je	 SHORT $LN18@initFMWind
  0010a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0010d	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00110	75 0e		 jne	 SHORT $LN17@initFMWind
  00112	83 c1 02	 add	 ecx, 2
  00115	83 c0 02	 add	 eax, 2
  00118	84 d2		 test	 dl, dl
  0011a	75 e4		 jne	 SHORT $LL16@initFMWind
$LN18@initFMWind:
  0011c	33 d2		 xor	 edx, edx
  0011e	eb 05		 jmp	 SHORT $LN19@initFMWind
$LN17@initFMWind:
  00120	1b d2		 sbb	 edx, edx
  00122	83 ca 01	 or	 edx, 1
$LN19@initFMWind:
  00125	0f b7 0d 00 00
	00 00		 movzx	 ecx, WORD PTR ?lnmake@@3FA ; lnmake
  0012c	85 d2		 test	 edx, edx
  0012e	0f b7 c7	 movzx	 eax, di
  00131	0f 44 c8	 cmove	 ecx, eax

; 15299: 				sprintf(msgWN[i], " %-9s%-19s%-17s%12s", lvbuf, fmnamebuf, namebuf, dpbuf);

  00134	8d 45 e0	 lea	 eax, DWORD PTR _dpbuf$[ebp]
  00137	50		 push	 eax
  00138	8d 45 bc	 lea	 eax, DWORD PTR _namebuf$[ebp]
  0013b	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?lnmake@@3FA, cx ; lnmake
  00142	50		 push	 eax
  00143	8d 45 98	 lea	 eax, DWORD PTR _fmnamebuf$[ebp]
  00146	50		 push	 eax
  00147	8d 45 f4	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  0014a	50		 push	 eax
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BGDICKKN@?5?$CF?99s?$CF?919s?$CF?917s?$CF12s@
  00150	56		 push	 esi
  00151	e8 00 00 00 00	 call	 _sprintf
  00156	83 c4 18	 add	 esp, 24			; 00000018H
$LN2@initFMWind:

; 15287: 	for (int i = 0; i < 10; i++) {

  00159	81 c6 00 01 00
	00		 add	 esi, 256		; 00000100H
  0015f	47		 inc	 edi
  00160	81 fe 00 0a 00
	00		 cmp	 esi, OFFSET ?msgWN@@3PAY0BAA@DA+2560
  00166	0f 8c 04 ff ff
	ff		 jl	 $LL4@initFMWind

; 15300: 			}
; 15301: 		}
; 15302: 	}
; 15303: }

  0016c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016f	5f		 pop	 edi
  00170	33 cd		 xor	 ecx, ebp
  00172	5e		 pop	 esi
  00173	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00178	8b e5		 mov	 esp, ebp
  0017a	5d		 pop	 ebp
  0017b	c3		 ret	 0
?initFMWindowType3@@YAXPAD@Z ENDP			; initFMWindowType3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMWindowType2@@YAXXZ
_TEXT	SEGMENT
_id$1$ = -1576						; size = 4
tv880 = -1576						; size = 4
tv939 = -1572						; size = 4
_y1$1$ = -1568						; size = 4
tv928 = -1568						; size = 4
tv837 = -1568						; size = 4
_btnTitle$ = -1564					; size = 24
_buf$ = -1540						; size = 1024
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?FMWindowType2@@YAXXZ PROC				; FMWindowType2, COMDAT

; 14514: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 06 00
	00		 sub	 esp, 1576		; 00000628H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 14515: 	static int winX, winY;
; 14516: 	static int winW, winH;
; 14517: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14518: #ifdef _FIX_10_FMPOINT
; 14519: 	static int btnId[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
; 14520: 	static int btnLoc[12][2];
; 14521: #else
; 14522: 	static int btnId[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
; 14523: 	static int btnLoc[11][2];
; 14524: #endif
; 14525: #else
; 14526: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 14527: 	static int btnLoc[6][2];
; 14528: #endif
; 14529: 
; 14530: 	static int btnCnt;
; 14531: 	static int msgLine;
; 14532: 	char* btnTitle[] =
; 14533: 	{
; 14534: 		" ï¼¯ï¼« ",
; 14535: 		"CANCEL",
; 14536: 		"?  ?",
; 14537: 		"?  ?",
; 14538: 		"??",
; 14539: 		"??"
; 14540: 	};
; 14541: 	int  id, id2;
; 14542: 	int  i, j;
; 14543: 	int  mask;
; 14544: 	int  btn;
; 14545: 	int  x1, y1, x2, y2;
; 14546: 	char buf[1024];
; 14547: 	if (ptActMenuWin == NULL)

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001b	c7 85 e4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00025	c7 85 e8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002f	c7 85 ec f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00039	c7 85 f0 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00043	c7 85 f4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004d	c7 85 f8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00057	85 ff		 test	 edi, edi
  00059	0f 85 fe 00 00
	00		 jne	 $LN83@FMWindowTy

; 14548: 	{
; 14549: 		winW = 5;
; 14550: 		winH = 7;
; 14551: 		winX = (640 - winW * 64) / 2;
; 14552: 		winY = (456 - winH * 48) / 2;
; 14553: 
; 14554: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005f	6a 01		 push	 1
  00061	57		 push	 edi
  00062	6a 07		 push	 7
  00064	6a 05		 push	 5
  00066	6a 3c		 push	 60			; 0000003cH
  00068	68 a0 00 00 00	 push	 160			; 000000a0H
  0006d	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??FMWindowType2@@YAXXZ@4HA, 5
  00077	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winH@?1??FMWindowType2@@YAXXZ@4HA, 7
  00081	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA, 160 ; 000000a0H
  0008b	c7 05 00 00 00
	00 3c 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA, 60 ; 0000003cH
  00095	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0009a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 14555: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 14556: 		winX = ptActMenuWin->x;
; 14557: 		winY = ptActMenuWin->y;
; 14558: #endif
; 14559: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 14560: 		{
; 14561: 			btnId[i] = -2;
; 14562: 		}
; 14563: 		mask = 1;
; 14564: 		btnCnt = 0;

  000a1	33 f6		 xor	 esi, esi

; 14565: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14566: #ifdef _FIX_10_FMPOINT
; 14567: 		for (i = 0; i < 16; i++, mask <<= 1)

  000a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a9	83 c4 18	 add	 esp, 24			; 00000018H
  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000b1	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b4	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA, ecx
  000bd	33 c9		 xor	 ecx, ecx
  000bf	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA, eax
  000c4	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000c7	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA, xmm0
  000ce	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType2@@YAXXZ@4HA, esi
  000d4	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA+16, xmm0
  000db	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA+32, xmm0
$LL7@FMWindowTy:

; 14568: #else
; 14569: 		for (i = 0; i < 15; i++, mask <<= 1)
; 14570: #endif
; 14571: #else
; 14572: 		for (i = 0; i < 10; i++, mask <<= 1)
; 14573: #endif
; 14574: 		{
; 14575: 			if (buttonTypeWN & mask)

  000e2	85 d0		 test	 edx, eax
  000e4	74 06		 je	 SHORT $LN5@FMWindowTy

; 14576: 			{
; 14577: 				btnCnt++;

  000e6	46		 inc	 esi
  000e7	83 fe 0a	 cmp	 esi, 10			; 0000000aH

; 14578: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14579: 				if (btnCnt == fm_point_num)

  000ea	74 08		 je	 SHORT $LN63@FMWindowTy
$LN5@FMWindowTy:

; 14565: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14566: #ifdef _FIX_10_FMPOINT
; 14567: 		for (i = 0; i < 16; i++, mask <<= 1)

  000ec	41		 inc	 ecx
  000ed	03 c0		 add	 eax, eax
  000ef	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000f2	7c ee		 jl	 SHORT $LL7@FMWindowTy
$LN63@FMWindowTy:

; 14576: 			{
; 14577: 				btnCnt++;

  000f4	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType2@@YAXXZ@4HA, esi

; 14580: #else
; 14581: 				if (btnCnt == 4)
; 14582: #endif
; 14583: 					break;
; 14584: 			}
; 14585: 		}
; 14586: 		if (btnCnt > 0)

  000fa	85 f6		 test	 esi, esi
  000fc	7e 30		 jle	 SHORT $LN9@FMWindowTy

; 14587: 		{
; 14588: 			int w;
; 14589: 			w = winW * 64 / (btnCnt + 1);

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMWindowType2@@YAXXZ@4HA
  00103	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00106	c1 e0 06	 shl	 eax, 6
  00109	99		 cdq
  0010a	f7 f9		 idiv	 ecx
  0010c	33 c9		 xor	 ecx, ecx

; 14590: 			for (i = 0; i < btnCnt; i++)

  0010e	85 f6		 test	 esi, esi
  00110	7e 1c		 jle	 SHORT $LN9@FMWindowTy

; 14587: 		{
; 14588: 			int w;
; 14589: 			w = winW * 64 / (btnCnt + 1);

  00112	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@FMWindowTy:

; 14591: 			{
; 14592: 				btnLoc[i][0] = w * (i + 1) - 27;

  00115	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA[ecx*8], edx
  0011c	03 d0		 add	 edx, eax

; 14593: 				btnLoc[i][1] = 185;

  0011e	c7 04 cd 04 00
	00 00 b9 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA[ecx*8+4], 185 ; 000000b9H
  00129	41		 inc	 ecx
  0012a	3b ce		 cmp	 ecx, esi
  0012c	7c e7		 jl	 SHORT $LL10@FMWindowTy
$LN9@FMWindowTy:

; 14594: 			}
; 14595: 		}
; 14596: 
; 14597: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14598: 		msgLine = fm_point_num;
; 14599: #else
; 14600: 		msgLine = 4;
; 14601: #endif
; 14602: 		play_se(202, 320, 240);

  0012e	68 f0 00 00 00	 push	 240			; 000000f0H
  00133	68 40 01 00 00	 push	 320			; 00000140H
  00138	68 ca 00 00 00	 push	 202			; 000000caH
  0013d	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??FMWindowType2@@YAXXZ@4HA, 10 ; 0000000aH
  00147	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 14603: 	}
; 14604: 
; 14605: 	if (ptActMenuWin != NULL)

  0014c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00152	83 c4 0c	 add	 esp, 12			; 0000000cH
  00155	85 ff		 test	 edi, edi
  00157	0f 84 cb 03 00
	00		 je	 $LN18@FMWindowTy
$LN83@FMWindowTy:
  0015d	53		 push	 ebx

; 14606: 	{
; 14607: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  0015e	6a 0c		 push	 12			; 0000000cH
  00160	68 00 00 00 00	 push	 OFFSET ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA
  00165	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  0016a	83 c4 08	 add	 esp, 8
  0016d	8b d8		 mov	 ebx, eax

; 14608: 
; 14609: 		id2 = -1;

  0016f	83 ce ff	 or	 esi, -1
  00172	89 9d d8 f9 ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 14610: 		if (ptActMenuWin->hp >= 1)

  00178	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  0017c	0f 8c dc 00 00
	00		 jl	 $LN12@FMWindowTy

; 14611: 		{
; 14612: 			for (i = selStartLine; i < msgLine; i++)

  00182	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00188	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??FMWindowType2@@YAXXZ@4HA
  0018e	0f 8d ca 00 00
	00		 jge	 $LN12@FMWindowTy
  00194	6b c7 15	 imul	 eax, edi, 21
  00197	8b df		 mov	 ebx, edi
  00199	c1 e3 08	 shl	 ebx, 8
  0019c	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  001a2	89 85 dc f9 ff
	ff		 mov	 DWORD PTR tv939[ebp], eax
  001a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL13@FMWindowTy:

; 14613: 			{
; 14614: 				if (strlen(msgWN[i]) > 0)

  001b0	8b cb		 mov	 ecx, ebx
  001b2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001b5	89 85 e0 f9 ff
	ff		 mov	 DWORD PTR tv928[ebp], eax
  001bb	0f 1f 44 00 00	 npad	 5
$LL85@FMWindowTy:
  001c0	8a 01		 mov	 al, BYTE PTR [ecx]
  001c2	41		 inc	 ecx
  001c3	84 c0		 test	 al, al
  001c5	75 f9		 jne	 SHORT $LL85@FMWindowTy
  001c7	2b 8d e0 f9 ff
	ff		 sub	 ecx, DWORD PTR tv928[ebp]
  001cd	74 6f		 je	 SHORT $LN11@FMWindowTy

; 14615: 				{
; 14616: 					x1 = winX + 30;
; 14617: 					y1 = winY + 18 + (i + 3) * 21;

  001cf	8b 95 dc f9 ff
	ff		 mov	 edx, DWORD PTR tv939[ebp]
  001d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA
  001db	83 c2 51	 add	 edx, 81			; 00000051H
  001de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA
  001e3	83 c1 1e	 add	 ecx, 30			; 0000001eH
  001e6	03 c2		 add	 eax, edx

; 14618: 					x2 = x1 + 260;
; 14619: 					y2 = y1 + 20;
; 14620: 
; 14621: 					// åªææé¿æå¯ä»¥ä¿®æ¹
; 14622: #ifdef _FMVER21
; 14623: 					if (pc.familyleader == FMMEMBER_LEADER && FMmsgWN[i - selStartLine + 1] <= 0)

  001e8	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3
  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001f5	89 85 e0 f9 ff
	ff		 mov	 DWORD PTR _y1$1$[ebp], eax
  001fb	75 41		 jne	 SHORT $LN11@FMWindowTy
  001fd	8b c7		 mov	 eax, edi
  001ff	2b c2		 sub	 eax, edx
  00201	83 3c 85 04 00
	00 00 00	 cmp	 DWORD PTR ?FMmsgWN@@3PAHA[eax*4+4], 0
  00209	7f 33		 jg	 SHORT $LN11@FMWindowTy

; 14624: #else
; 14625: 					if (pc.familyleader == 1 && FMmsgWN[i - selStartLine + 1] <= 0)
; 14626: #endif
; 14627: 						if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  0020b	8b 95 e0 f9 ff
	ff		 mov	 edx, DWORD PTR _y1$1$[ebp]
  00211	6a 6b		 push	 107			; 0000006bH
  00213	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  00216	50		 push	 eax
  00217	8d 81 04 01 00
	00		 lea	 eax, DWORD PTR [ecx+260]
  0021d	50		 push	 eax
  0021e	52		 push	 edx
  0021f	51		 push	 ecx
  00220	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00225	83 c4 14	 add	 esp, 20			; 00000014H
  00228	85 c0		 test	 eax, eax
  0022a	74 12		 je	 SHORT $LN11@FMWindowTy

; 14628: 						{
; 14629: 							if (mouse.onceState & MOUSE_LEFT_CRICK)

  0022c	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00233	74 09		 je	 SHORT $LN11@FMWindowTy

; 14630: 							{
; 14631: 								id2 = i - selStartLine + 1;

  00235	8b f7		 mov	 esi, edi
  00237	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0023d	46		 inc	 esi
$LN11@FMWindowTy:

; 14611: 		{
; 14612: 			for (i = selStartLine; i < msgLine; i++)

  0023e	83 85 dc f9 ff
	ff 15		 add	 DWORD PTR tv939[ebp], 21 ; 00000015H
  00245	47		 inc	 edi
  00246	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  0024c	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??FMWindowType2@@YAXXZ@4HA
  00252	0f 8c 58 ff ff
	ff		 jl	 $LL13@FMWindowTy
  00258	8b 9d d8 f9 ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@FMWindowTy:

; 14632: 							}
; 14633: 						}
; 14634: 				}
; 14635: 			}
; 14636: 		}
; 14637: 		if (CheckMenuFlag()
; 14638: 			|| joy_trg[0] & JOY_ESC
; 14639: 			|| actBtn == 1
; 14640: 			|| menuBtn == 1
; 14641: 			|| disconnectServerFlag == TRUE
; 14642: 			|| wnCloseFlag == 1)

  0025e	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00263	85 c0		 test	 eax, eax
  00265	75 3e		 jne	 SHORT $LN31@FMWindowTy
  00267	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00271	75 32		 jne	 SHORT $LN31@FMWindowTy
  00273	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0027b	74 28		 je	 SHORT $LN31@FMWindowTy
  0027d	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00285	74 1e		 je	 SHORT $LN31@FMWindowTy
  00287	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0028e	74 15		 je	 SHORT $LN31@FMWindowTy
  00290	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00298	74 0b		 je	 SHORT $LN31@FMWindowTy

; 14647: 		}
; 14648: 
; 14649: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14650: #ifdef _FIX_10_FMPOINT
; 14651: 		if (0 <= id && id < 16
; 14652: 			|| 0 <= id2 && id2 < 17
; 14653: #else
; 14654: 		if (0 <= id && id < 11
; 14655: 			|| 0 <= id2 && id2 < 16
; 14656: #endif
; 14657: #else
; 14658: 		if (0 <= id && id < 6
; 14659: 			|| 0 <= id2 && id2 < 11
; 14660: #endif
; 14661: 			|| id == 100)

  0029a	85 db		 test	 ebx, ebx
  0029c	78 1e		 js	 SHORT $LN34@FMWindowTy
  0029e	83 fb 10	 cmp	 ebx, 16			; 00000010H
  002a1	7c 22		 jl	 SHORT $LN33@FMWindowTy
  002a3	eb 17		 jmp	 SHORT $LN34@FMWindowTy
$LN31@FMWindowTy:

; 14643: 		{
; 14644: 			id = 100;
; 14645: 			windowTypeWN = -1;
; 14646: 			wnCloseFlag = 0;

  002a5	33 c0		 xor	 eax, eax
  002a7	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002b1	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  002b6	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN34@FMWindowTy:

; 14647: 		}
; 14648: 
; 14649: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14650: #ifdef _FIX_10_FMPOINT
; 14651: 		if (0 <= id && id < 16
; 14652: 			|| 0 <= id2 && id2 < 17
; 14653: #else
; 14654: 		if (0 <= id && id < 11
; 14655: 			|| 0 <= id2 && id2 < 16
; 14656: #endif
; 14657: #else
; 14658: 		if (0 <= id && id < 6
; 14659: 			|| 0 <= id2 && id2 < 11
; 14660: #endif
; 14661: 			|| id == 100)

  002bc	85 f6		 test	 esi, esi
  002be	78 1e		 js	 SHORT $LN35@FMWindowTy
  002c0	83 fe 11	 cmp	 esi, 17			; 00000011H
  002c3	7d 19		 jge	 SHORT $LN35@FMWindowTy
$LN33@FMWindowTy:

; 14662: 		{
; 14663: 			char data[256];
; 14664: 				char msg[256];
; 14665: 				if (id == 100)

  002c5	83 fb 64	 cmp	 ebx, 100		; 00000064H
  002c8	74 1d		 je	 SHORT $LN82@FMWindowTy

; 14668: 				}
; 14669: 				else
; 14670: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14671: #ifdef _FIX_10_FMPOINT
; 14672: 					if (0 <= id && id < 12)

  002ca	83 fb 0b	 cmp	 ebx, 11			; 0000000bH
  002cd	77 0b		 ja	 SHORT $LN38@FMWindowTy

; 14673: #else
; 14674: 					if (0 <= id && id < 11)
; 14675: #endif
; 14676: #else
; 14677: 					if (0 <= id && id < 6)
; 14678: #endif
; 14679: 					{
; 14680: 						btn = 1;
; 14681: 						btn <<= id;

  002cf	bf 01 00 00 00	 mov	 edi, 1
  002d4	8b cb		 mov	 ecx, ebx
  002d6	d3 e7		 shl	 edi, cl

; 14682: 					}

  002d8	eb 12		 jmp	 SHORT $LN39@FMWindowTy
$LN38@FMWindowTy:

; 14683: 					else
; 14684: 					{
; 14685: 						btn = 0;

  002da	33 ff		 xor	 edi, edi
  002dc	eb 0e		 jmp	 SHORT $LN39@FMWindowTy
$LN35@FMWindowTy:

; 14647: 		}
; 14648: 
; 14649: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14650: #ifdef _FIX_10_FMPOINT
; 14651: 		if (0 <= id && id < 16
; 14652: 			|| 0 <= id2 && id2 < 17
; 14653: #else
; 14654: 		if (0 <= id && id < 11
; 14655: 			|| 0 <= id2 && id2 < 16
; 14656: #endif
; 14657: #else
; 14658: 		if (0 <= id && id < 6
; 14659: 			|| 0 <= id2 && id2 < 11
; 14660: #endif
; 14661: 			|| id == 100)

  002de	83 fb 64	 cmp	 ebx, 100		; 00000064H
  002e1	0f 85 c8 00 00
	00		 jne	 $LN32@FMWindowTy
$LN82@FMWindowTy:

; 14666: 				{
; 14667: 					btn = WINDOW_BUTTONTYPE_CANCEL;

  002e7	bf 02 00 00 00	 mov	 edi, 2
$LN39@FMWindowTy:

; 14686: 					}
; 14687: 			if (id2 < 0)
; 14688: 				id2 = 0;
; 14689: 			sprintf(data, "%d", id2);

  002ec	33 c0		 xor	 eax, eax
  002ee	85 f6		 test	 esi, esi
  002f0	0f 49 c6	 cmovns	 eax, esi
  002f3	8b f0		 mov	 esi, eax
  002f5	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002fb	56		 push	 esi
  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 _sprintf

; 14690: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00307	68 ff 00 00 00	 push	 255			; 000000ffH
  0030c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00312	50		 push	 eax
  00313	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00319	50		 push	 eax
  0031a	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 14691: 
; 14692: 			sprintf(buf, "P|%d|%s", FMpidWN[id2], FMnameWN[id2]);

  0031f	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  00322	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4]
  00329	50		 push	 eax
  0032a	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?FMpidWN@@3PAHA[esi*4]
  00331	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00337	68 00 00 00 00	 push	 OFFSET ??_C@_07MEJNJNBN@P?$HM?$CFd?$HM?$CFs@
  0033c	50		 push	 eax
  0033d	e8 00 00 00 00	 call	 _sprintf

; 14693: 
; 14694: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14695: 			if (1 <= id2 && id2 <= fm_point_num + 1) {

  00342	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00345	83 c4 28	 add	 esp, 40			; 00000028H
  00348	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0034b	77 25		 ja	 SHORT $LN43@FMWindowTy

; 14696: #else
; 14697: 			if (1 <= id2 && id2 < 5) {
; 14698: #endif
; 14699: 				if (bNewServer)

  0034d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00354	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0035a	50		 push	 eax
  0035b	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00361	74 07		 je	 SHORT $LN42@FMWindowTy

; 14700: 					lssproto_FM_send(sockfd, buf);

  00363	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00368	eb 05		 jmp	 SHORT $LN89@FMWindowTy
$LN42@FMWindowTy:

; 14701: 				else
; 14702: 					old_lssproto_FM_send(sockfd, buf);

  0036a	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN89@FMWindowTy:

; 14703: 			}
; 14704: 
; 14705: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14706: 			if (0 <= id && id < fm_point_num + 2) {

  0036f	83 c4 08	 add	 esp, 8
$LN43@FMWindowTy:
  00372	83 fb 0b	 cmp	 ebx, 11			; 0000000bH
  00375	77 2e		 ja	 SHORT $LN46@FMWindowTy

; 14707: #else
; 14708: 			if (0 <= id && id < 6) {
; 14709: #endif
; 14710: 				if (bNewServer)

  00377	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0037d	50		 push	 eax
  0037e	57		 push	 edi
  0037f	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00385	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0038b	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00391	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00397	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd

; 14711: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);
; 14712: 				else
; 14713: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);
; 14714: 			}
; 14715: 			windowTypeWN = -1;

  0039d	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  003a2	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN46@FMWindowTy:
  003a5	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN32@FMWindowTy:

; 14716: 			}
; 14717: 		if (id >= 0 || id2 >= 0) {

  003af	85 db		 test	 ebx, ebx
  003b1	0f 89 58 01 00
	00		 jns	 $LN48@FMWindowTy
  003b7	85 f6		 test	 esi, esi
  003b9	0f 89 50 01 00
	00		 jns	 $LN48@FMWindowTy

; 14720: 			return;
; 14721: 		}
; 14722: 
; 14723: 		if (ptActMenuWin->hp >= 1)

  003bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003c4	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003c8	0f 8c 59 01 00
	00		 jl	 $LN88@FMWindowTy

; 14724: 		{
; 14725: 			StockFontBuffer(winX + 34, winY + 28,

  003ce	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA
  003d3	6a 00		 push	 0
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@EPJNIDND@?5?5?5?5?5?5?5?5?$KB?$KO?$LA?$KB?A?$LH?$LB?b?$LJ?$NN?G?A?$LH?N?$LB?W?$LH?$KF?$LI?q?$LH?O?$KB@
  003da	6a 04		 push	 4
  003dc	83 c0 1c	 add	 eax, 28			; 0000001cH
  003df	6a 01		 push	 1
  003e1	50		 push	 eax
  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA
  003e7	83 c0 22	 add	 eax, 34			; 00000022H
  003ea	50		 push	 eax
  003eb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 14726: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "        âê°ì¡±ê¸°ë°íë¡ê·¸ë¨ëª©ë¡â", 0);
; 14727: 			StockFontBuffer(winX + 30, winY + 18 + 2 * 21,

  003f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA
  003f5	6a 00		 push	 0
  003f7	68 00 00 00 00	 push	 OFFSET ??_C@_0CI@NMHOIHGJ@?$KB?$KO?$MA?e?5?$LM?R?$KB?$KP?$KB?$KO?$LF?$LP?$KB?$KP?$KB?$KO?$LD?$LC?$KB?$KP?5?5?5?5?5?5?5?5?$KB?$KO@
  003fc	6a 05		 push	 5
  003fe	83 c0 3c	 add	 eax, 60			; 0000003cH
  00401	6a 01		 push	 1
  00403	50		 push	 eax
  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA
  00409	83 c0 1e	 add	 eax, 30			; 0000001eH
  0040c	50		 push	 eax
  0040d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 14728: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âì¥ ìââëââë¨â        âì  íâ", 0);
; 14729: 			for (i = 0; i < msgLine; i++)

  00412	33 f6		 xor	 esi, esi
  00414	83 c4 30	 add	 esp, 48			; 00000030H
  00417	39 35 00 00 00
	00		 cmp	 DWORD PTR ?msgLine@?1??FMWindowType2@@YAXXZ@4HA, esi
  0041d	7e 6a		 jle	 SHORT $LN15@FMWindowTy

; 14724: 		{
; 14725: 			StockFontBuffer(winX + 34, winY + 28,

  0041f	8d 5e 54	 lea	 ebx, DWORD PTR [esi+84]
  00422	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
$LL16@FMWindowTy:

; 14730: 			{
; 14731: 				if (strlen(msgWN[i]) > 0)

  00427	8b cf		 mov	 ecx, edi
  00429	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0042c	0f 1f 40 00	 npad	 4
$LL86@FMWindowTy:
  00430	8a 01		 mov	 al, BYTE PTR [ecx]
  00432	41		 inc	 ecx
  00433	84 c0		 test	 al, al
  00435	75 f9		 jne	 SHORT $LL86@FMWindowTy
  00437	2b ca		 sub	 ecx, edx
  00439	74 3c		 je	 SHORT $LN14@FMWindowTy

; 14732: 				{
; 14733: 					if (i < selStartLine) {

  0043b	6a 00		 push	 0
  0043d	57		 push	 edi
  0043e	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00444	7d 04		 jge	 SHORT $LN51@FMWindowTy

; 14734: 						StockFontBuffer(winX + 30, winY + 21 + (i + 3) * 21,

  00446	6a 00		 push	 0

; 14735: 							FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 14736: 					}

  00448	eb 12		 jmp	 SHORT $LN90@FMWindowTy
$LN51@FMWindowTy:

; 14737: 					else {
; 14738: 						int Font_Color = FONT_PAL_WHITE;
; 14739: 						if (FMmsgWN[i + 1] <= 0) Font_Color = FONT_PAL_GRAY;
; 14740: 
; 14741: 						StockFontBuffer(winX + 30, winY + 21 + (i + 3) * 21,

  0044a	33 c9		 xor	 ecx, ecx
  0044c	b8 07 00 00 00	 mov	 eax, 7
  00451	39 0c b5 04 00
	00 00		 cmp	 DWORD PTR ?FMmsgWN@@3PAHA[esi*4+4], ecx
  00458	0f 4f c1	 cmovg	 eax, ecx
  0045b	50		 push	 eax
$LN90@FMWindowTy:

; 14728: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âì¥ ìââëââë¨â        âì  íâ", 0);
; 14729: 			for (i = 0; i < msgLine; i++)

  0045c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA
  00461	03 c3		 add	 eax, ebx
  00463	6a 01		 push	 1
  00465	50		 push	 eax
  00466	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA
  0046b	83 c0 1e	 add	 eax, 30			; 0000001eH
  0046e	50		 push	 eax
  0046f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00474	83 c4 18	 add	 esp, 24			; 00000018H
$LN14@FMWindowTy:
  00477	46		 inc	 esi
  00478	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  0047e	83 c3 15	 add	 ebx, 21			; 00000015H
  00481	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?msgLine@?1??FMWindowType2@@YAXXZ@4HA
  00487	7c 9e		 jl	 SHORT $LL16@FMWindowTy
$LN15@FMWindowTy:

; 14742: 							FONT_PRIO_FRONT, Font_Color, msgWN[i], 0);
; 14743: 					}
; 14744: 				}
; 14745: 			}
; 14746: 			j = 0;

  00489	33 db		 xor	 ebx, ebx

; 14747: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14748: #ifdef _FIX_10_FMPOINT
; 14749: 			for (i = 0, mask = 1; i < 12; i++, mask <<= 1)

  0048b	bf 01 00 00 00	 mov	 edi, 1
  00490	33 f6		 xor	 esi, esi
  00492	0f 1f 40 00 66
	66 0f 1f 84 00
	00 00 00 00	 npad	 14
$LL19@FMWindowTy:

; 14750: #else
; 14751: 			for (i = 0, mask = 1; i < 11; i++, mask <<= 1)
; 14752: #endif
; 14753: #else
; 14754: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)
; 14755: #endif
; 14756: 			{
; 14757: 				btnId[i] = -2;

  004a0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 14758: 				if (buttonTypeWN & mask)

  004aa	85 3d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, edi ; buttonTypeWN
  004b0	74 42		 je	 SHORT $LN17@FMWindowTy

; 14759: 				{
; 14760: 					if (j < btnCnt)

  004b2	3b 1d 00 00 00
	00		 cmp	 ebx, DWORD PTR ?btnCnt@?1??FMWindowType2@@YAXXZ@4HA
  004b8	7d 3a		 jge	 SHORT $LN17@FMWindowTy

; 14761: 					{
; 14762: 						btnId[i] =

  004ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType2@@YAXXZ@4HA
  004bf	6a 02		 push	 2
  004c1	ff b4 35 e4 f9
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  004c8	83 c0 6e	 add	 eax, 110		; 0000006eH
  004cb	03 04 dd 04 00
	00 00		 add	 eax, DWORD PTR ?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA[ebx*8+4]
  004d2	6a 04		 push	 4
  004d4	6a 01		 push	 1
  004d6	50		 push	 eax
  004d7	8b 04 dd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType2@@YAXXZ@4PAY01HA[ebx*8]
  004de	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType2@@YAXXZ@4HA
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004ea	83 c4 18	 add	 esp, 24			; 00000018H
  004ed	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??FMWindowType2@@YAXXZ@4PAHA[esi], eax

; 14763: 							StockFontBuffer(winX + btnLoc[j][0], winY + 110 + btnLoc[j][1],
; 14764: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 14765: 						j++;

  004f3	43		 inc	 ebx
$LN17@FMWindowTy:

; 14747: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14748: #ifdef _FIX_10_FMPOINT
; 14749: 			for (i = 0, mask = 1; i < 12; i++, mask <<= 1)

  004f4	83 c6 04	 add	 esi, 4
  004f7	03 ff		 add	 edi, edi
  004f9	83 fe 30	 cmp	 esi, 48			; 00000030H
  004fc	7c a2		 jl	 SHORT $LL19@FMWindowTy

; 14766: 					}
; 14767: 				}
; 14768: 			}
; 14769: 		}
; 14770: 			}
; 14771: 		}

  004fe	5b		 pop	 ebx
  004ff	5f		 pop	 edi
  00500	5e		 pop	 esi
  00501	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00504	33 cd		 xor	 ecx, ebp
  00506	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0050b	8b e5		 mov	 esp, ebp
  0050d	5d		 pop	 ebp
  0050e	c3		 ret	 0
$LN48@FMWindowTy:

; 14718: 			DeathAction(ptActMenuWin);

  0050f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00515	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0051a	83 c4 04	 add	 esp, 4

; 14719: 			ptActMenuWin = NULL;

  0051d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN88@FMWindowTy:
  00527	5b		 pop	 ebx
$LN18@FMWindowTy:

; 14766: 					}
; 14767: 				}
; 14768: 			}
; 14769: 		}
; 14770: 			}
; 14771: 		}

  00528	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0052b	5f		 pop	 edi
  0052c	33 cd		 xor	 ecx, ebp
  0052e	5e		 pop	 esi
  0052f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00534	8b e5		 mov	 esp, ebp
  00536	5d		 pop	 ebp
  00537	c3		 ret	 0
?FMWindowType2@@YAXXZ ENDP				; FMWindowType2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMWindowType2@@YAXPAD@Z
_TEXT	SEGMENT
tv418 = -96						; size = 4
_getstatus$ = -92					; size = 4
_buf4$ = -88						; size = 20
_buf3$ = -68						; size = 20
_buf1$ = -48						; size = 9
_buf2$ = -36						; size = 9
_tmp$ = -24						; size = 8
_buf0$ = -16						; size = 9
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMWindowType2@@YAXPAD@Z PROC			; initFMWindowType2, COMDAT

; 14457: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 60	 sub	 esp, 96			; 00000060H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi
  00011	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00014	57		 push	 edi

; 14458: 	makeStringFromEscaped(data);

  00015	56		 push	 esi
  00016	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 14459: 
; 14460: 	selStartLine = 0;
; 14461: 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  0001b	6a 64		 push	 100			; 00000064H
  0001d	6a 19		 push	 25			; 00000019H
  0001f	68 00 01 00 00	 push	 256			; 00000100H
  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0002a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, 0 ; selStartLine
  00034	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  00039	83 c4 18	 add	 esp, 24			; 00000018H
  0003c	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00041	33 f6		 xor	 esi, esi
$LL4@initFMWind:

; 14471: #else
; 14472: 	for (int i = 0; i < 4; i++) {
; 14473: #endif
; 14474: 		if (strlen(msgWN[i]) > 0) {

  00043	8b cf		 mov	 ecx, edi
  00045	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL38@initFMWind:
  00048	8a 01		 mov	 al, BYTE PTR [ecx]
  0004a	41		 inc	 ecx
  0004b	84 c0		 test	 al, al
  0004d	75 f9		 jne	 SHORT $LL38@initFMWind
  0004f	2b ca		 sub	 ecx, edx
  00051	0f 84 78 02 00
	00		 je	 $LN2@initFMWind

; 14475: 			if (i >= selStartLine) {

  00057	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0005d	0f 8c 6c 02 00
	00		 jl	 $LN2@initFMWind

; 14476: 				getStringToken(msgWN[i], '|', 5, sizeof(getstatus) - 1, getstatus);

  00063	8d 45 a4	 lea	 eax, DWORD PTR _getstatus$[ebp]
  00066	50		 push	 eax
  00067	6a 03		 push	 3
  00069	6a 05		 push	 5
  0006b	6a 7c		 push	 124			; 0000007cH
  0006d	57		 push	 edi
  0006e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14477: 				FMmsgWN[i - (selStartLine - 1)] = atoi(getstatus);

  00073	8d 45 a4	 lea	 eax, DWORD PTR _getstatus$[ebp]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 _atoi
  0007c	8b ce		 mov	 ecx, esi
  0007e	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00084	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?FMmsgWN@@3PAHA[ecx*4+4], eax

; 14478: 				getStringToken(msgWN[i], '|', 1, sizeof(tmp) - 1, tmp);

  0008b	8d 45 e8	 lea	 eax, DWORD PTR _tmp$[ebp]
  0008e	50		 push	 eax
  0008f	6a 07		 push	 7
  00091	6a 01		 push	 1
  00093	6a 7c		 push	 124			; 0000007cH
  00095	57		 push	 edi
  00096	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14479: 				FMpidWN[i - (selStartLine - 1)] = atoi(tmp);

  0009b	8d 45 e8	 lea	 eax, DWORD PTR _tmp$[ebp]
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 _atoi
  000a4	8b ce		 mov	 ecx, esi
  000a6	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  000ac	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?FMpidWN@@3PAHA[ecx*4+4], eax

; 14480: 				getStringToken(msgWN[i], '|', 2, sizeof(tmp) - 1, tmp);

  000b3	8d 45 e8	 lea	 eax, DWORD PTR _tmp$[ebp]
  000b6	50		 push	 eax
  000b7	6a 07		 push	 7
  000b9	6a 02		 push	 2
  000bb	6a 7c		 push	 124			; 0000007cH
  000bd	57		 push	 edi
  000be	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000c3	83 c4 44	 add	 esp, 68			; 00000044H

; 14481: 				getStringToken(msgWN[i], '|', 6, sizeof(buf4) - 1, buf4);

  000c6	8d 45 a8	 lea	 eax, DWORD PTR _buf4$[ebp]
  000c9	50		 push	 eax
  000ca	6a 13		 push	 19			; 00000013H
  000cc	6a 06		 push	 6
  000ce	6a 7c		 push	 124			; 0000007cH
  000d0	57		 push	 edi
  000d1	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14482: 
; 14483: 				tmp_i = atoi(tmp);

  000d6	8d 45 e8	 lea	 eax, DWORD PTR _tmp$[ebp]
  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 _atoi
  000df	83 c4 18	 add	 esp, 24			; 00000018H

; 14484: 				//(tmp_i==100)?(strcpy(buf0,"è¨ä¾é£æ¯")):(strcpy(buf0,"å  é² å¡")); 
; 14485: 				if (tmp_i == 100)      strcpy(buf0, "ì´ê¸°ë¥´ë§ì");

  000e2	83 f8 64	 cmp	 eax, 100		; 00000064H
  000e5	75 24		 jne	 SHORT $LN7@initFMWind
  000e7	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@+8
  000ed	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@
  000f5	66 89 45 f8	 mov	 WORD PTR _buf0$[ebp+8], ax
  000f9	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@PNJCCPBJ@?$LM?$KE?$LB?b?$LI?$KD?$LI?$LG?$MA?$LL@+10
  000fe	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  00103	88 45 fa	 mov	 BYTE PTR _buf0$[ebp+10], al
  00106	e9 16 01 00 00	 jmp	 $LN25@initFMWind
$LN7@initFMWind:

; 14486: 				else if (tmp_i == 200) strcpy(buf0, "ë§ë¦¬ëì¤");

  0010b	3d c8 00 00 00	 cmp	 eax, 200		; 000000c8H
  00110	75 1a		 jne	 SHORT $LN9@initFMWind
  00112	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08FHGEHAHK@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK@
  0011a	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08FHGEHAHK@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK@+8
  0011f	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  00124	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  00127	e9 f5 00 00 00	 jmp	 $LN25@initFMWind
$LN9@initFMWind:

; 14487: 				else if (tmp_i == 300) strcpy(buf0, "ì    ì");

  0012c	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  00131	75 1a		 jne	 SHORT $LN11@initFMWind
  00133	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08HCKLDHDO@?$MA?p?5?5?5?5?$MA?p@
  0013b	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08HCKLDHDO@?$MA?p?5?5?5?5?$MA?p@+8
  00140	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  00145	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  00148	e9 d4 00 00 00	 jmp	 $LN25@initFMWind
$LN11@initFMWind:

; 14488: 				else if (tmp_i == 400) strcpy(buf0, "ì¹´ë£¨íë");

  0014d	3d 90 01 00 00	 cmp	 eax, 400		; 00000190H
  00152	75 1a		 jne	 SHORT $LN13@initFMWind
  00154	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08IPKKANCP@?D?$KL?$LH?g?E?$LI?$LD?$KK@
  0015c	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08IPKKANCP@?D?$KL?$LH?g?E?$LI?$LD?$KK@+8
  00161	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  00166	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  00169	e9 b3 00 00 00	 jmp	 $LN25@initFMWind
$LN13@initFMWind:

; 14489: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14490: 				else if (tmp_i == 500) strcpy(buf0, "ì    ë´");

  0016e	3d f4 01 00 00	 cmp	 eax, 500		; 000001f4H
  00173	75 1a		 jne	 SHORT $LN15@initFMWind
  00175	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08GDPNKJEK@?$LP?$KB?5?5?5?5?$LF?$KH@
  0017d	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08GDPNKJEK@?$LP?$KB?5?5?5?5?$LF?$KH@+8
  00182	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  00187	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  0018a	e9 92 00 00 00	 jmp	 $LN25@initFMWind
$LN15@initFMWind:

; 14491: 				else if (tmp_i == 600) strcpy(buf0, "í ë¥´ í");

  0018f	3d 58 02 00 00	 cmp	 eax, 600		; 00000258H
  00194	75 17		 jne	 SHORT $LN17@initFMWind
  00196	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08PLFMPCKD@?E?$LI?5?$LI?$KD?5?E?$LI@
  0019e	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08PLFMPCKD@?E?$LI?5?$LI?$KD?5?E?$LI@+8
  001a3	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  001a8	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  001ab	eb 74		 jmp	 SHORT $LN25@initFMWind
$LN17@initFMWind:

; 14492: 				else if (tmp_i == 700) strcpy(buf0, "ë    ì¤");

  001ad	3d bc 02 00 00	 cmp	 eax, 700		; 000002bcH
  001b2	75 17		 jne	 SHORT $LN19@initFMWind
  001b4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08NFLGLILK@?$LE?O?5?5?5?5?$LN?$LK@
  001bc	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08NFLGLILK@?$LE?O?5?5?5?5?$LN?$LK@+8
  001c1	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  001c6	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  001c9	eb 56		 jmp	 SHORT $LN25@initFMWind
$LN19@initFMWind:

; 14493: 				else if (tmp_i == 800) strcpy(buf0, "å¼ ç é¡¿");

  001cb	3d 20 03 00 00	 cmp	 eax, 800		; 00000320H
  001d0	75 10		 jne	 SHORT $LN21@initFMWind
  001d2	c7 45 f0 dd d7
	20 d6		 mov	 DWORD PTR _buf0$[ebp], -702490659 ; d620d7ddH
  001d9	c7 45 f4 ad 20
	3f 00		 mov	 DWORD PTR _buf0$[ebp+4], 4137133 ; 003f20adH
  001e0	eb 3f		 jmp	 SHORT $LN25@initFMWind
$LN21@initFMWind:

; 14494: 				else if (tmp_i == 900) strcpy(buf0, "ì¼ ì´ ì¤");

  001e2	3d 84 03 00 00	 cmp	 eax, 900		; 00000384H
  001e7	75 17		 jne	 SHORT $LN23@initFMWind
  001e9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08BBBHHHEB@?$LO?$NP?5?$MA?L?5?$LP?$MA@
  001f1	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08BBBHHHEB@?$LO?$NP?5?$MA?L?5?$LP?$MA@+8
  001f6	66 0f d6 45 f0	 movq	 QWORD PTR _buf0$[ebp], xmm0
  001fb	88 45 f8	 mov	 BYTE PTR _buf0$[ebp+8], al
  001fe	eb 21		 jmp	 SHORT $LN25@initFMWind
$LN23@initFMWind:

; 14495: #endif
; 14496: #ifdef _FIX_10_FMPOINT
; 14497: 				else if (tmp_i == 1000)strcpy(buf0, "ììì");

  00200	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00205	75 1a		 jne	 SHORT $LN25@initFMWind
  00207	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@
  0020c	89 45 f0	 mov	 DWORD PTR _buf0$[ebp], eax
  0020f	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@+4
  00215	66 89 45 f4	 mov	 WORD PTR _buf0$[ebp+4], ax
  00219	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06LKHMHEK@?$LO?F?$LN?C?$LO?F@+6
  0021e	88 45 f6	 mov	 BYTE PTR _buf0$[ebp+6], al
$LN25@initFMWind:

; 14498: #endif
; 14499: 				(FMmsgWN[i - (selStartLine - 1)] > 0) ? (strcpy(buf3, buf4)) : (strcpy(buf3, "ë¯¸ì¬ì©"));

  00221	8b c6		 mov	 eax, esi
  00223	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00229	83 3c 85 04 00
	00 00 00	 cmp	 DWORD PTR ?FMmsgWN@@3PAHA[eax*4+4], 0
  00231	7e 13		 jle	 SHORT $LN29@initFMWind
  00233	33 c0		 xor	 eax, eax
$LL28@initFMWind:
  00235	8a 4c 05 a8	 mov	 cl, BYTE PTR _buf4$[ebp+eax]
  00239	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  0023c	88 4c 05 bb	 mov	 BYTE PTR _buf3$[ebp+eax-1], cl
  00240	84 c9		 test	 cl, cl
  00242	75 f1		 jne	 SHORT $LL28@initFMWind
  00244	eb 1a		 jmp	 SHORT $LN30@initFMWind
$LN29@initFMWind:
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@
  0024b	89 45 bc	 mov	 DWORD PTR _buf3$[ebp], eax
  0024e	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@+4
  00254	66 89 45 c0	 mov	 WORD PTR _buf3$[ebp+4], ax
  00258	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06OOGDCHLD@?$LJ?L?$LL?g?$LP?k@+6
  0025d	88 45 c2	 mov	 BYTE PTR _buf3$[ebp+6], al
$LN30@initFMWind:

; 14500: 				//å¤çå­ä¸²
; 14501: 				if (i < 10) {

  00260	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00263	7d 6a		 jge	 SHORT $LN2@initFMWind

; 14502: 					getStringToken(msgWN[i], '|', 3, sizeof(buf1) - 1, buf1);

  00265	8d 45 d0	 lea	 eax, DWORD PTR _buf1$[ebp]
  00268	50		 push	 eax
  00269	6a 08		 push	 8
  0026b	6a 03		 push	 3
  0026d	6a 7c		 push	 124			; 0000007cH
  0026f	57		 push	 edi
  00270	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14503: 					getStringToken(msgWN[i], '|', 4, sizeof(buf2) - 1, buf2);

  00275	8d 45 dc	 lea	 eax, DWORD PTR _buf2$[ebp]
  00278	50		 push	 eax
  00279	6a 08		 push	 8
  0027b	6a 04		 push	 4
  0027d	6a 7c		 push	 124			; 0000007cH
  0027f	57		 push	 edi
  00280	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14504: 					sprintf(msgWN[i], "%9s%5s %5s%18s", buf0, buf1, buf2, buf3);

  00285	8d 45 bc	 lea	 eax, DWORD PTR _buf3$[ebp]
  00288	50		 push	 eax
  00289	8d 45 dc	 lea	 eax, DWORD PTR _buf2$[ebp]
  0028c	50		 push	 eax
  0028d	8d 45 d0	 lea	 eax, DWORD PTR _buf1$[ebp]
  00290	50		 push	 eax
  00291	8d 45 f0	 lea	 eax, DWORD PTR _buf0$[ebp]
  00294	50		 push	 eax
  00295	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HOFHBIDI@?$CF9s?$CF5s?5?$CF5s?$CF18s@
  0029a	57		 push	 edi
  0029b	e8 00 00 00 00	 call	 _sprintf
  002a0	83 c4 40	 add	 esp, 64			; 00000040H

; 14505: 					sprintf(FMnameWN[i - (selStartLine - 1)], "%s|%s|%s", tmp, buf1, buf2);

  002a3	8d 45 dc	 lea	 eax, DWORD PTR _buf2$[ebp]
  002a6	50		 push	 eax
  002a7	8d 45 d0	 lea	 eax, DWORD PTR _buf1$[ebp]
  002aa	50		 push	 eax
  002ab	8d 45 e8	 lea	 eax, DWORD PTR _tmp$[ebp]
  002ae	50		 push	 eax
  002af	8b c6		 mov	 eax, esi
  002b1	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?selStartLine@@3HA ; selStartLine
  002b7	68 00 00 00 00	 push	 OFFSET ??_C@_08CKOJLPBB@?$CFs?$HM?$CFs?$HM?$CFs@
  002bc	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  002bf	8d 04 85 14 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4+20]
  002c6	50		 push	 eax
  002c7	e8 00 00 00 00	 call	 _sprintf
  002cc	83 c4 14	 add	 esp, 20			; 00000014H
$LN2@initFMWind:

; 14462: 		sizeof(msgWN) / sizeof(msgWN[0]), 100);
; 14463: 
; 14464: 	char getstatus[4];
; 14465: 	char buf0[9], buf1[9], buf2[9], buf3[20], buf4[20];;
; 14466: 	char tmp[8];
; 14467: 	int  tmp_i;
; 14468: 
; 14469: #ifdef _FIX_9_FMPOINT			   // WON ADD ä¹å¤§åºå­
; 14470: 	for (int i = 0; i < fm_point_num; i++) {

  002cf	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  002d5	46		 inc	 esi
  002d6	81 ff 00 0a 00
	00		 cmp	 edi, OFFSET ?msgWN@@3PAY0BAA@DA+2560
  002dc	0f 8c 61 fd ff
	ff		 jl	 $LL4@initFMWind

; 14506: 				}
; 14507: 			}
; 14508: 		}
; 14509: 	}
; 14510: 	}

  002e2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e5	5f		 pop	 edi
  002e6	33 cd		 xor	 ecx, ebp
  002e8	5e		 pop	 esi
  002e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ee	8b e5		 mov	 esp, ebp
  002f0	5d		 pop	 ebp
  002f1	c3		 ret	 0
?initFMWindowType2@@YAXPAD@Z ENDP			; initFMWindowType2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMWindowType1@@YAXXZ
_TEXT	SEGMENT
?winY@?1??FMWindowType1@@YAXXZ@4HA$2 = -564		; size = 4
tv822 = -560						; size = 4
_w$1$ = -556						; size = 4
?winX@?1??FMWindowType1@@YAXXZ@4HA$2 = -552		; size = 4
tv1003 = -552						; size = 4
tv991 = -552						; size = 4
tv836 = -548						; size = 4
tv743 = -548						; size = 4
?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA$1 = -544	; size = 4
_i$2$ = -544						; size = 4
_btnTitle$ = -540					; size = 24
_msg1$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?FMWindowType1@@YAXXZ PROC				; FMWindowType1, COMDAT

; 14295: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 02 00
	00		 sub	 esp, 564		; 00000234H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 14296: 	static int winX, winY;
; 14297: 	static int winW, winH;
; 14298: 	static int fontId[] = { -2, -2, -2, -2, -2, -2 };
; 14299: 	static int btnLoc[6][2];
; 14300: 	static int btnCnt;
; 14301: 	static int msgLine;
; 14302: 	static STR_BUFFER input;
; 14303: 	char* btnTitle[] =
; 14304: 	{
; 14305: 		" ï¼¯ï¼« ",
; 14306: 		"CANCEL",
; 14307: 		"?  ?",
; 14308: 		"?  ?",
; 14309: 		"??",
; 14310: 		"??"
; 14311: 	};
; 14312: 	int id;
; 14313: 	int i, j;
; 14314: 	int mask;
; 14315: 	int btn;
; 14316: 
; 14317: 	static int totalMsgLine;
; 14318: 	static int lineSkip;
; 14319: 
; 14320: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	57		 push	 edi
  0001d	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00027	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  00031	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  0003b	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00045	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004f	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00059	0f 85 40 02 00
	00		 jne	 $LN65@FMWindowTy

; 14321: 	{
; 14322: 		winW = msgWN_W;
; 14323: 		winH = msgWN_H;

  0005f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?msgWN_H@@3HA ; msgWN_H

; 14324: 		winX = (640 - winW * 64) / 2;
; 14325: 		winY = (456 - winH * 48) / 2;

  00065	b8 c8 01 00 00	 mov	 eax, 456		; 000001c8H
  0006a	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  00070	bf 0a 00 00 00	 mov	 edi, 10			; 0000000aH

; 14326: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00075	6a 01		 push	 1
  00077	6a 00		 push	 0
  00079	8d 0c 76	 lea	 ecx, DWORD PTR [esi+esi*2]
  0007c	89 1d 00 00 00
	00		 mov	 DWORD PTR ?winW@?1??FMWindowType1@@YAXXZ@4HA, ebx
  00082	c1 e1 04	 shl	 ecx, 4
  00085	2b fb		 sub	 edi, ebx
  00087	2b c1		 sub	 eax, ecx
  00089	c1 e7 05	 shl	 edi, 5
  0008c	99		 cdq
  0008d	56		 push	 esi
  0008e	2b c2		 sub	 eax, edx
  00090	89 35 00 00 00
	00		 mov	 DWORD PTR ?winH@?1??FMWindowType1@@YAXXZ@4HA, esi
  00096	d1 f8		 sar	 eax, 1
  00098	53		 push	 ebx
  00099	50		 push	 eax
  0009a	57		 push	 edi
  0009b	89 3d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA, edi
  000a1	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA, eax
  000a6	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000ab	8b c8		 mov	 ecx, eax

; 14327: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 14328: 		ptActMenuWin->x += DISPLACEMENT_X / 2;
; 14329: 		ptActMenuWin->y += DISPLACEMENT_Y / 2;
; 14330: 		winX = ptActMenuWin->x;
; 14331: 		winY = ptActMenuWin->y;
; 14332: #endif
; 14333: 		lineSkip = 20;
; 14334: 		totalMsgLine = (winH * 48 - 56) / lineSkip;
; 14335: 
; 14336: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 14337: 		{
; 14338: 			fontId[i] = -2;

  000ad	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X

; 14339: 		}
; 14340: 
; 14341: 		mask = 1;
; 14342: 		btnCnt = 0;

  000b9	33 ff		 xor	 edi, edi
  000bb	99		 cdq
  000bc	83 c4 18	 add	 esp, 24			; 00000018H
  000bf	2b c2		 sub	 eax, edx
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin
  000c7	d1 f8		 sar	 eax, 1
  000c9	01 41 18	 add	 DWORD PTR [ecx+24], eax
  000cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  000d1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000d7	99		 cdq
  000d8	2b c2		 sub	 eax, edx
  000da	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?lineSkip@?1??FMWindowType1@@YAXXZ@4HA, 20 ; 00000014H
  000e4	d1 f8		 sar	 eax, 1
  000e6	01 41 1c	 add	 DWORD PTR [ecx+28], eax
  000e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000ee	89 3d 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType1@@YAXXZ@4HA, edi
  000f4	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000f7	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000fa	89 85 cc fd ff
	ff		 mov	 DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA$2[ebp], eax
  00100	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA, eax
  00105	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??FMWindowType1@@YAXXZ@4HA
  0010a	89 8d d8 fd ff
	ff		 mov	 DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA$2[ebp], ecx
  00110	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA, ecx
  00116	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA, xmm0
  0011d	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00120	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  0012a	c1 e0 04	 shl	 eax, 4
  0012d	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv743[ebp], eax
  00133	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  0013d	8d 70 c8	 lea	 esi, DWORD PTR [eax-56]
  00140	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00145	f7 ee		 imul	 esi
  00147	89 b5 d0 fd ff
	ff		 mov	 DWORD PTR tv822[ebp], esi
  0014d	b8 01 00 00 00	 mov	 eax, 1
  00152	c1 fa 03	 sar	 edx, 3
  00155	8b da		 mov	 ebx, edx
  00157	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  0015a	03 da		 add	 ebx, edx

; 14343: 		for (i = 0; i < 6; i++, mask <<= 1)

  0015c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  00162	89 9d e0 fd ff
	ff		 mov	 DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA$1[ebp], ebx
  00168	33 c9		 xor	 ecx, ecx
  0016a	89 1d 00 00 00
	00		 mov	 DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA, ebx
$LL7@FMWindowTy:

; 14344: 		{
; 14345: 			if (buttonTypeWN & mask)

  00170	85 d0		 test	 edx, eax
  00172	74 06		 je	 SHORT $LN5@FMWindowTy

; 14346: 			{
; 14347: 				btnCnt++;

  00174	47		 inc	 edi
  00175	83 ff 04	 cmp	 edi, 4

; 14348: 				if (btnCnt == 4)

  00178	74 08		 je	 SHORT $LN43@FMWindowTy
$LN5@FMWindowTy:

; 14343: 		for (i = 0; i < 6; i++, mask <<= 1)

  0017a	41		 inc	 ecx
  0017b	03 c0		 add	 eax, eax
  0017d	83 f9 06	 cmp	 ecx, 6
  00180	7c ee		 jl	 SHORT $LL7@FMWindowTy
$LN43@FMWindowTy:

; 14346: 			{
; 14347: 				btnCnt++;

  00182	89 3d 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType1@@YAXXZ@4HA, edi

; 14349: 					break;
; 14350: 			}
; 14351: 		}
; 14352: 		if (btnCnt > 0)

  00188	85 ff		 test	 edi, edi
  0018a	7e 6f		 jle	 SHORT $LN9@FMWindowTy

; 14353: 		{
; 14354: 			int w;
; 14355: 			w = winW * 64 / (btnCnt + 1);

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMWindowType1@@YAXXZ@4HA
  00191	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  00194	c1 e0 06	 shl	 eax, 6
  00197	33 db		 xor	 ebx, ebx
  00199	99		 cdq
  0019a	f7 f9		 idiv	 ecx
  0019c	89 85 d4 fd ff
	ff		 mov	 DWORD PTR _w$1$[ebp], eax

; 14356: 			for (i = 0; i < btnCnt; i++)

  001a2	85 ff		 test	 edi, edi
  001a4	7e 4f		 jle	 SHORT $LN75@FMWindowTy

; 14353: 		{
; 14354: 			int w;
; 14355: 			w = winW * 64 / (btnCnt + 1);

  001a6	8b c6		 mov	 eax, esi
  001a8	99		 cdq
  001a9	f7 bd e0 fd ff
	ff		 idiv	 DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA$1[ebp]
  001af	8b f0		 mov	 esi, eax
  001b1	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA$1[ebp]
  001b7	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  001ba	0f af f1	 imul	 esi, ecx
  001bd	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  001c0	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR tv743[ebp]
  001c6	c1 e1 02	 shl	 ecx, 2
  001c9	2b c1		 sub	 eax, ecx
  001cb	8b 8d d4 fd ff
	ff		 mov	 ecx, DWORD PTR _w$1$[ebp]
  001d1	99		 cdq
  001d2	2b c2		 sub	 eax, edx
  001d4	d1 f8		 sar	 eax, 1
  001d6	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
  001d9	03 d6		 add	 edx, esi
  001db	8d 41 e5	 lea	 eax, DWORD PTR [ecx-27]
  001de	66 90		 npad	 2
$LL10@FMWindowTy:

; 14357: 			{
; 14358: 				btnLoc[i][0] = w * (i + 1) - 27;

  001e0	89 04 dd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA[ebx*8], eax
  001e7	03 c1		 add	 eax, ecx

; 14359: 				btnLoc[i][1] = ((winH * 48 - 56) / totalMsgLine) * (totalMsgLine - 1)

  001e9	89 14 dd 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA[ebx*8+4], edx
  001f0	43		 inc	 ebx
  001f1	3b df		 cmp	 ebx, edi
  001f3	7c eb		 jl	 SHORT $LL10@FMWindowTy
$LN75@FMWindowTy:

; 14360: 					+ (winH * 48 - totalMsgLine * lineSkip) / 2 + 8;
; 14361: 			}
; 14362: 		}
; 14363: 		msgLine = totalMsgLine - 2;

  001f5	8b 9d e0 fd ff
	ff		 mov	 ebx, DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA$1[ebp]
$LN9@FMWindowTy:

; 14364: 		input.buffer[0] = '\0';
; 14365: 		input.cnt = 0;
; 14366: 		input.cursor = 0;
; 14367: 		initStrBuffer(&input,

  001fb	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR tv743[ebp]
  00201	8d 0c 9b	 lea	 ecx, DWORD PTR [ebx+ebx*4]
  00204	c1 e1 02	 shl	 ecx, 2
  00207	8d 7b fe	 lea	 edi, DWORD PTR [ebx-2]
  0020a	2b c1		 sub	 eax, ecx
  0020c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?msgWNLen@@3HA ; msgWNLen
  00212	99		 cdq
  00213	2b c2		 sub	 eax, edx
  00215	89 3d 00 00 00
	00		 mov	 DWORD PTR ?msgLine@?1??FMWindowType1@@YAXXZ@4HA, edi
  0021b	8b c8		 mov	 ecx, eax
  0021d	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A, 0
  00224	8b 85 d0 fd ff
	ff		 mov	 eax, DWORD PTR tv822[ebp]
  0022a	99		 cdq
  0022b	f7 fb		 idiv	 ebx
  0022d	6a 01		 push	 1
  0022f	0f af c7	 imul	 eax, edi
  00232	d1 f9		 sar	 ecx, 1
  00234	03 8d cc fd ff
	ff		 add	 ecx, DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA$2[ebp]
  0023a	6a 00		 push	 0
  0023c	56		 push	 esi
  0023d	03 c1		 add	 eax, ecx
  0023f	c6 05 07 01 00
	00 00		 mov	 BYTE PTR ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A+263, 0
  00246	50		 push	 eax
  00247	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  0024c	8d 0c f6	 lea	 ecx, DWORD PTR [esi+esi*8]
  0024f	c1 e0 06	 shl	 eax, 6
  00252	2b c1		 sub	 eax, ecx
  00254	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A+265, 0
  0025b	99		 cdq
  0025c	2b c2		 sub	 eax, edx
  0025e	d1 f8		 sar	 eax, 1
  00260	03 85 d8 fd ff
	ff		 add	 eax, DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA$2[ebp]
  00266	50		 push	 eax
  00267	68 00 00 00 00	 push	 OFFSET ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
  0026c	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 14368: 			winX + (msgWN_W * 64 - msgWNLen * 9) / 2,
; 14369: 			winY + ((winH * 48 - 56) / totalMsgLine) * (totalMsgLine - 2) + (winH * 48 - totalMsgLine * lineSkip) / 2,
; 14370: 			msgWNLen, FONT_PAL_WHITE, FONT_PRIO_FRONT);
; 14371: 		GetKeyInputFocus(&input);

  00271	68 00 00 00 00	 push	 OFFSET ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
  00276	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 14372: 		play_se(202, 320, 240);

  0027b	68 f0 00 00 00	 push	 240			; 000000f0H
  00280	68 40 01 00 00	 push	 320			; 00000140H
  00285	68 ca 00 00 00	 push	 202			; 000000caH
  0028a	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0028f	83 c4 28	 add	 esp, 40			; 00000028H

; 14373: 	}
; 14374: 
; 14375: 	if (ptActMenuWin != NULL)

  00292	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00299	0f 84 9f 03 00
	00		 je	 $LN32@FMWindowTy
$LN65@FMWindowTy:

; 14376: 	{
; 14377: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0029f	6a 06		 push	 6
  002a1	68 00 00 00 00	 push	 OFFSET ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA
  002a6	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  002ab	83 c4 08	 add	 esp, 8
  002ae	8b f0		 mov	 esi, eax

; 14378: 
; 14379: 		if (CheckMenuFlag()
; 14380: 			|| ((joy_trg[0] & JOY_ESC) && GetImeString() == NULL)
; 14381: 			|| actBtn == 1
; 14382: 			|| menuBtn == 1
; 14383: 			|| disconnectServerFlag == TRUE
; 14384: 			|| wnCloseFlag == 1)

  002b0	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002b5	85 c0		 test	 eax, eax
  002b7	0f 85 4d 03 00
	00		 jne	 $LN23@FMWindowTy
  002bd	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002c7	74 0d		 je	 SHORT $LN24@FMWindowTy
  002c9	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  002ce	85 c0		 test	 eax, eax
  002d0	0f 84 34 03 00
	00		 je	 $LN23@FMWindowTy
$LN24@FMWindowTy:
  002d6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  002de	0f 84 26 03 00
	00		 je	 $LN23@FMWindowTy
  002e4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  002ec	0f 84 18 03 00
	00		 je	 $LN23@FMWindowTy
  002f2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  002f9	0f 84 0b 03 00
	00		 je	 $LN23@FMWindowTy
  002ff	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00307	0f 84 fd 02 00
	00		 je	 $LN23@FMWindowTy

; 14389: 		}
; 14390: 
; 14391: 		// OK		
; 14392: 		if (id == 0 && strcmp(input.buffer, "") != 0 || id != 0)

  0030d	85 f6		 test	 esi, esi
  0030f	75 3d		 jne	 SHORT $LN76@FMWindowTy
  00311	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_00CNPNBAHC@@
  00316	b8 00 00 00 00	 mov	 eax, OFFSET ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
  0031b	0f 1f 44 00 00	 npad	 5
$LL69@FMWindowTy:
  00320	8a 10		 mov	 dl, BYTE PTR [eax]
  00322	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00324	75 1a		 jne	 SHORT $LN70@FMWindowTy
  00326	84 d2		 test	 dl, dl
  00328	74 12		 je	 SHORT $LN71@FMWindowTy
  0032a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0032d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00330	75 0e		 jne	 SHORT $LN70@FMWindowTy
  00332	83 c0 02	 add	 eax, 2
  00335	83 c1 02	 add	 ecx, 2
  00338	84 d2		 test	 dl, dl
  0033a	75 e4		 jne	 SHORT $LL69@FMWindowTy
$LN71@FMWindowTy:
  0033c	33 c0		 xor	 eax, eax
  0033e	eb 05		 jmp	 SHORT $LN72@FMWindowTy
$LN70@FMWindowTy:
  00340	1b c0		 sbb	 eax, eax
  00342	83 c8 01	 or	 eax, 1
$LN72@FMWindowTy:
  00345	85 c0		 test	 eax, eax
  00347	75 14		 jne	 SHORT $LN68@FMWindowTy
  00349	e9 ce 02 00 00	 jmp	 $LN67@FMWindowTy
$LN76@FMWindowTy:

; 14393: 			if (0 <= id && id < 6)

  0034e	0f 88 99 00 00
	00		 js	 $LN31@FMWindowTy
  00354	83 fe 06	 cmp	 esi, 6
  00357	0f 8d bf 02 00
	00		 jge	 $LN67@FMWindowTy
$LN68@FMWindowTy:

; 14394: 			{
; 14395: 				char msg[256], msg1[256];
; 14396: 				btn = 1;
; 14397: 				btn <<= id;
; 14398: 
; 14399: 				makeEscapeString(input.buffer, msg1, sizeof(msg1) - 1);

  0035d	68 ff 00 00 00	 push	 255			; 000000ffH
  00362	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg1$1[ebp]
  00368	8b ce		 mov	 ecx, esi
  0036a	50		 push	 eax
  0036b	bf 01 00 00 00	 mov	 edi, 1
  00370	68 00 00 00 00	 push	 OFFSET ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
  00375	d3 e7		 shl	 edi, cl
  00377	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 14400: 				sprintf(msg, "%d|%s", FMdengonidex, msg1);

  0037c	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg1$1[ebp]
  00382	50		 push	 eax
  00383	ff 35 00 00 00
	00		 push	 DWORD PTR ?FMdengonidex@@3HA ; FMdengonidex
  00389	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0038f	68 00 00 00 00	 push	 OFFSET ??_C@_05GOJDKKEO@?$CFd?$HM?$CFs@
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 _sprintf
  0039a	83 c4 1c	 add	 esp, 28			; 0000001cH

; 14401: 				if (bNewServer)

  0039d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  003a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  003aa	50		 push	 eax
  003ab	57		 push	 edi
  003ac	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  003b2	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  003b8	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  003be	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  003c4	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003ca	74 07		 je	 SHORT $LN29@FMWindowTy

; 14402: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  003cc	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  003d1	eb 05		 jmp	 SHORT $LN77@FMWindowTy
$LN29@FMWindowTy:

; 14403: 				else
; 14404: 					old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  003d3	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN77@FMWindowTy:

; 14405: 
; 14406: 				windowTypeWN = -1;

  003d8	83 c4 1c	 add	 esp, 28			; 0000001cH
  003db	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 14407: 			}
; 14408: 		if (id >= 0)

  003e5	85 f6		 test	 esi, esi
  003e7	0f 89 2f 02 00
	00		 jns	 $LN67@FMWindowTy
$LN31@FMWindowTy:

; 14413: 			return;
; 14414: 		}
; 14415: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  003ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003f2	85 c0		 test	 eax, eax
  003f4	0f 84 44 02 00
	00		 je	 $LN32@FMWindowTy
  003fa	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003fe	0f 8c 3a 02 00
	00		 jl	 $LN32@FMWindowTy

; 14416: 		{
; 14417: 			StockFontBuffer(winX + 200,

  00404	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA
  00409	6a 00		 push	 0
  0040b	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BNBIMIKL@?$KB?$KO?$LA?$KB?5?A?$LH?5?$LA?T?5?$LN?C?5?F?G?5?$KB?$KP@
  00410	6a 05		 push	 5
  00412	83 c0 19	 add	 eax, 25			; 00000019H
  00415	6a 01		 push	 1
  00417	50		 push	 eax
  00418	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA
  0041d	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00422	50		 push	 eax
  00423	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00428	be 01 00 00 00	 mov	 esi, 1
  0042d	c7 85 e0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2$[ebp], 0
  00437	83 c4 18	 add	 esp, 24			; 00000018H
  0043a	89 b5 dc fd ff
	ff		 mov	 DWORD PTR tv836[ebp], esi
  00440	bb 00 07 00 00	 mov	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA+1792
$LL13@FMWindowTy:

; 14421: 			{
; 14422: 				if (strlen(msgWN[i]) > 0)

  00445	8d 93 00 f9 ff
	ff		 lea	 edx, DWORD PTR [ebx-1792]
  0044b	8b ca		 mov	 ecx, edx
  0044d	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL73@FMWindowTy:
  00450	8a 01		 mov	 al, BYTE PTR [ecx]
  00452	41		 inc	 ecx
  00453	84 c0		 test	 al, al
  00455	75 f9		 jne	 SHORT $LL73@FMWindowTy
  00457	2b cf		 sub	 ecx, edi
  00459	74 74		 je	 SHORT $LN33@FMWindowTy

; 14423: 				{
; 14424: 					StockFontBuffer(winX + (msgWN_W * 64 - msgWNLen * 9) / 2,

  0045b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??FMWindowType1@@YAXXZ@4HA
  00460	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA
  00466	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?lineSkip@?1??FMWindowType1@@YAXXZ@4HA
  0046d	6a 00		 push	 0
  0046f	8d 3c 40	 lea	 edi, DWORD PTR [eax+eax*2]
  00472	52		 push	 edx
  00473	c1 e7 04	 shl	 edi, 4
  00476	8b c7		 mov	 eax, edi
  00478	2b c1		 sub	 eax, ecx
  0047a	99		 cdq
  0047b	2b c2		 sub	 eax, edx
  0047d	8b c8		 mov	 ecx, eax
  0047f	8d 47 c8	 lea	 eax, DWORD PTR [edi-56]
  00482	99		 cdq
  00483	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA
  00489	d1 f9		 sar	 ecx, 1
  0048b	0f af 85 e0 fd
	ff ff		 imul	 eax, DWORD PTR _i$2$[ebp]
  00492	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA
  00498	6a 00		 push	 0
  0049a	6a 01		 push	 1
  0049c	83 c0 0f	 add	 eax, 15			; 0000000fH
  0049f	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  004a2	50		 push	 eax
  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWNLen@@3HA ; msgWNLen
  004a8	8d 0c c0	 lea	 ecx, DWORD PTR [eax+eax*8]
  004ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  004b0	c1 e0 06	 shl	 eax, 6
  004b3	2b c1		 sub	 eax, ecx
  004b5	99		 cdq
  004b6	2b c2		 sub	 eax, edx
  004b8	d1 f8		 sar	 eax, 1
  004ba	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA
  004c0	50		 push	 eax
  004c1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004c6	8b b5 dc fd ff
	ff		 mov	 esi, DWORD PTR tv836[ebp]
  004cc	83 c4 18	 add	 esp, 24			; 00000018H
$LN33@FMWindowTy:

; 14425: 						winY + ((winH * 48 - 56) / totalMsgLine) * (i * 2) + (winH * 48 - totalMsgLine * lineSkip) / 2 + 30,
; 14426: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 14427: 				}
; 14428: 				if (strlen(msgWN[i + 7]) > 0)

  004cf	8b c3		 mov	 eax, ebx
  004d1	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL74@FMWindowTy:
  004d4	8a 08		 mov	 cl, BYTE PTR [eax]
  004d6	40		 inc	 eax
  004d7	84 c9		 test	 cl, cl
  004d9	75 f9		 jne	 SHORT $LL74@FMWindowTy
  004db	2b c2		 sub	 eax, edx
  004dd	0f 84 7c 00 00
	00		 je	 $LN11@FMWindowTy

; 14429: 				{
; 14430: 					StockFontBuffer(winX + (msgWN_W * 64 - msgWNLen * 9) / 2 + 300,

  004e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??FMWindowType1@@YAXXZ@4HA
  004e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA
  004ee	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?lineSkip@?1??FMWindowType1@@YAXXZ@4HA
  004f5	8b b5 dc fd ff
	ff		 mov	 esi, DWORD PTR tv836[ebp]
  004fb	8d 3c 40	 lea	 edi, DWORD PTR [eax+eax*2]
  004fe	c1 e7 04	 shl	 edi, 4
  00501	8b c7		 mov	 eax, edi
  00503	2b c1		 sub	 eax, ecx
  00505	99		 cdq
  00506	2b c2		 sub	 eax, edx
  00508	8b c8		 mov	 ecx, eax
  0050a	8d 47 c8	 lea	 eax, DWORD PTR [edi-56]
  0050d	99		 cdq
  0050e	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?totalMsgLine@?1??FMWindowType1@@YAXXZ@4HA
  00514	6a 00		 push	 0
  00516	0f af c6	 imul	 eax, esi
  00519	d1 f9		 sar	 ecx, 1
  0051b	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA
  00521	53		 push	 ebx
  00522	6a 04		 push	 4
  00524	83 c0 1e	 add	 eax, 30			; 0000001eH
  00527	03 c1		 add	 eax, ecx
  00529	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  0052f	6a 01		 push	 1
  00531	50		 push	 eax
  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWNLen@@3HA ; msgWNLen
  00537	c1 e1 06	 shl	 ecx, 6
  0053a	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  0053d	2b c8		 sub	 ecx, eax
  0053f	8b c9		 mov	 ecx, ecx
  00541	85 c9		 test	 ecx, ecx
  00543	79 03		 jns	 SHORT $LN79@FMWindowTy
  00545	83 c1 01	 add	 ecx, 1
$LN79@FMWindowTy:
  00548	d1 f9		 sar	 ecx, 1
  0054a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA
  0054f	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  00554	03 c1		 add	 eax, ecx
  00556	50		 push	 eax
  00557	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0055c	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@FMWindowTy:

; 14418: 				winY + 25,
; 14419: 				FONT_PRIO_FRONT, FONT_PAL_GREEN, "âê° ì¡± ê² ì í â", 0);
; 14420: 			for (i = 0; i < 7; i++)

  0055f	ff 85 e0 fd ff
	ff		 inc	 DWORD PTR _i$2$[ebp]
  00565	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  0056b	83 c6 02	 add	 esi, 2
  0056e	89 b5 dc fd ff
	ff		 mov	 DWORD PTR tv836[ebp], esi
  00574	81 fb 00 0e 00
	00		 cmp	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA+3584
  0057a	0f 8c c5 fe ff
	ff		 jl	 $LL13@FMWindowTy

; 14431: 						winY + ((winH * 48 - 56) / totalMsgLine) * (i * 2 + 1) + (winH * 48 - totalMsgLine * lineSkip) / 2 + 30,
; 14432: 						FONT_PRIO_FRONT, FONT_PAL_YELLOW, msgWN[i + 7], 0);
; 14433: 				}
; 14434: 			}
; 14435: 			j = 0;

  00580	33 ff		 xor	 edi, edi

; 14436: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00582	bb 01 00 00 00	 mov	 ebx, 1
  00587	33 f6		 xor	 esi, esi
  00589	0f 1f 80 00 00
	00 00		 npad	 7
$LL16@FMWindowTy:

; 14437: 			{
; 14438: 				fontId[i] = -2;

  00590	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 14439: 				if (buttonTypeWN & mask)

  0059a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  005a0	74 40		 je	 SHORT $LN14@FMWindowTy

; 14440: 				{
; 14441: 					if (j < btnCnt)

  005a2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??FMWindowType1@@YAXXZ@4HA
  005a8	7d 38		 jge	 SHORT $LN14@FMWindowTy

; 14442: 					{
; 14443: 						fontId[i] =

  005aa	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA[edi*8+4]
  005b1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMWindowType1@@YAXXZ@4HA
  005b7	6a 02		 push	 2
  005b9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  005c0	6a 04		 push	 4
  005c2	6a 01		 push	 1
  005c4	50		 push	 eax
  005c5	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType1@@YAXXZ@4PAY01HA[edi*8]
  005cc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType1@@YAXXZ@4HA
  005d2	50		 push	 eax
  005d3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005d8	83 c4 18	 add	 esp, 24			; 00000018H
  005db	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??FMWindowType1@@YAXXZ@4PAHA[esi], eax

; 14444: 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 14445: 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 14446: 						j++;

  005e1	47		 inc	 edi
$LN14@FMWindowTy:

; 14436: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  005e2	83 c6 04	 add	 esi, 4
  005e5	03 db		 add	 ebx, ebx
  005e7	83 fe 18	 cmp	 esi, 24			; 00000018H
  005ea	7c a4		 jl	 SHORT $LL16@FMWindowTy

; 14447: 					}
; 14448: 				}
; 14449: 			}
; 14450: 			StockFontBuffer2(&input);

  005ec	68 00 00 00 00	 push	 OFFSET ?input@?1??FMWindowType1@@YAXXZ@4USTR_BUFFER@@A
  005f1	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  005f6	83 c4 04	 add	 esp, 4
  005f9	5f		 pop	 edi

; 14451: 		}
; 14452: 	}
; 14453: }

  005fa	5e		 pop	 esi
  005fb	5b		 pop	 ebx
  005fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005ff	33 cd		 xor	 ecx, ebp
  00601	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00606	8b e5		 mov	 esp, ebp
  00608	5d		 pop	 ebp
  00609	c3		 ret	 0
$LN23@FMWindowTy:

; 14385: 		{
; 14386: 			id = 100;
; 14387: 			windowTypeWN = -1;
; 14388: 			wnCloseFlag = 0;

  0060a	33 c0		 xor	 eax, eax
  0060c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00616	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN67@FMWindowTy:

; 14409: 		{
; 14410: 			DeathAction(ptActMenuWin);

  0061c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00622	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 14411: 			ptActMenuWin = NULL;
; 14412: 			GetKeyInputFocus(&MyChatBuffer);

  00627	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  0062c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00636	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0063b	83 c4 08	 add	 esp, 8
$LN32@FMWindowTy:

; 14451: 		}
; 14452: 	}
; 14453: }

  0063e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00641	5f		 pop	 edi
  00642	5e		 pop	 esi
  00643	33 cd		 xor	 ecx, ebp
  00645	5b		 pop	 ebx
  00646	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0064b	8b e5		 mov	 esp, ebp
  0064d	5d		 pop	 ebp
  0064e	c3		 ret	 0
?FMWindowType1@@YAXXZ ENDP				; FMWindowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMWindowType1@@YAXPAD@Z
_TEXT	SEGMENT
tv543 = -660						; size = 4
tv539 = -656						; size = 4
_i$1$ = -652						; size = 4
_k$1$ = -648						; size = 4
_m_buf1$ = -644						; size = 512
_m_buf$ = -132						; size = 128
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMWindowType1@@YAXPAD@Z PROC			; initFMWindowType1, COMDAT

; 14256: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 94 02 00
	00		 sub	 esp, 660		; 00000294H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00018	57		 push	 edi

; 14257: 	char m_buf[128], m_buf1[512];
; 14258: 	FMdengonidex = 0;
; 14259: 	msgWN_W = 9;
; 14260: 	msgWN_H = 9;
; 14261: 	msgWNLen = (msgWN_W * 64 - 48) / 9;
; 14262: 	makeStringFromEscaped(data);

  00019	56		 push	 esi
  0001a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, 0 ; FMdengonidex
  00024	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?msgWN_W@@3HA, 9 ; msgWN_W
  0002e	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?msgWN_H@@3HA, 9 ; msgWN_H
  00038	c7 05 00 00 00
	00 3a 00 00 00	 mov	 DWORD PTR ?msgWNLen@@3HA, 58 ; msgWNLen, 0000003aH
  00042	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 14263: 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWNLen@@3HA ; msgWNLen
  0004c	83 c0 28	 add	 eax, 40			; 00000028H
  0004f	50		 push	 eax
  00050	6a 19		 push	 25			; 00000019H
  00052	68 00 01 00 00	 push	 256			; 00000100H
  00057	56		 push	 esi
  00058	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0005d	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 14264: 		sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen + 40);
; 14265: 	FMdengonidex = atoi(msgWN[7]);

  00062	68 00 07 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+1792
  00067	e8 00 00 00 00	 call	 _atoi
  0006c	bb 00 00 00 00	 mov	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00071	a3 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, eax ; FMdengonidex
  00076	8b fb		 mov	 edi, ebx
  00078	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _m_buf1$[ebp]
  0007e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00081	be 07 00 00 00	 mov	 esi, 7
  00086	2b f8		 sub	 edi, eax
  00088	89 b5 74 fd ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  0008e	89 bd 70 fd ff
	ff		 mov	 DWORD PTR tv539[ebp], edi
$LL4@initFMWind:

; 14267: 		if (strlen(msgWN[i - 7]) > 0) {

  00094	8b cb		 mov	 ecx, ebx
  00096	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00099	0f 1f 80 00 00
	00 00		 npad	 7
$LL37@initFMWind:
  000a0	8a 01		 mov	 al, BYTE PTR [ecx]
  000a2	41		 inc	 ecx
  000a3	84 c0		 test	 al, al
  000a5	75 f9		 jne	 SHORT $LL37@initFMWind
  000a7	2b ca		 sub	 ecx, edx
  000a9	0f 84 0b 01 00
	00		 je	 $LN2@initFMWind

; 14268: 			if (i >= selStartLine) {

  000af	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  000b5	0f 8c ff 00 00
	00		 jl	 $LN2@initFMWind

; 14269: 				int n = 0;

  000bb	33 f6		 xor	 esi, esi

; 14270: 				char* p = msgWN[i - 7];
; 14271: 				for (size_t j = 0; j < strlen(msgWN[i - 7]); j++) {

  000bd	33 c0		 xor	 eax, eax
  000bf	90		 npad	 1
$LL7@initFMWind:

; 14272: 					if (IS_2BYTEWORD(*(p + j)) == 1) {

  000c0	8a 14 03	 mov	 dl, BYTE PTR [ebx+eax]
  000c3	80 fa ff	 cmp	 dl, -1
  000c6	7f 03		 jg	 SHORT $LN13@initFMWind

; 14273: 						j++;

  000c8	40		 inc	 eax

; 14274: 						continue;

  000c9	eb 06		 jmp	 SHORT $LN5@initFMWind
$LN13@initFMWind:

; 14275: 					}
; 14276: 					else if (*(p + j) == '|')

  000cb	80 fa 7c	 cmp	 dl, 124			; 0000007cH
  000ce	75 01		 jne	 SHORT $LN5@initFMWind

; 14277: 						n++;

  000d0	46		 inc	 esi
$LN5@initFMWind:

; 14270: 				char* p = msgWN[i - 7];
; 14271: 				for (size_t j = 0; j < strlen(msgWN[i - 7]); j++) {

  000d1	40		 inc	 eax
  000d2	3b c1		 cmp	 eax, ecx
  000d4	72 ea		 jb	 SHORT $LL7@initFMWind

; 14278: 				}
; 14279: 				getStringToken(msgWN[i - 7], '|', (n + 1), sizeof(msgWN[i]) - 1, msgWN[i]);

  000d6	8d 83 00 07 00
	00		 lea	 eax, DWORD PTR [ebx+1792]
  000dc	46		 inc	 esi
  000dd	50		 push	 eax
  000de	68 ff 00 00 00	 push	 255			; 000000ffH
  000e3	56		 push	 esi
  000e4	6a 7c		 push	 124			; 0000007cH
  000e6	53		 push	 ebx
  000e7	89 b5 6c fd ff
	ff		 mov	 DWORD PTR tv543[ebp], esi
  000ed	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14280: 				getStringToken(msgWN[i - 7], '|', 1, sizeof(m_buf1) - 1, m_buf1);

  000f2	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _m_buf1$[ebp]
  000f8	50		 push	 eax
  000f9	68 ff 01 00 00	 push	 511			; 000001ffH
  000fe	6a 01		 push	 1
  00100	6a 7c		 push	 124			; 0000007cH
  00102	53		 push	 ebx
  00103	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00108	b8 02 00 00 00	 mov	 eax, 2
  0010d	83 c4 28	 add	 esp, 40			; 00000028H
  00110	89 85 78 fd ff
	ff		 mov	 DWORD PTR _k$1$[ebp], eax

; 14281: 				for (int k = 2; k < (n + 1); k++) {

  00116	3b f0		 cmp	 esi, eax
  00118	0f 8e 83 00 00
	00		 jle	 $LN9@initFMWind
  0011e	66 90		 npad	 2
$LL10@initFMWind:

; 14282: 					getStringToken(msgWN[i - 7], '|', k, sizeof(m_buf) - 1, m_buf);

  00120	8d 8d 7c ff ff
	ff		 lea	 ecx, DWORD PTR _m_buf$[ebp]
  00126	51		 push	 ecx
  00127	6a 7f		 push	 127			; 0000007fH
  00129	50		 push	 eax
  0012a	6a 7c		 push	 124			; 0000007cH
  0012c	53		 push	 ebx
  0012d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 14283: 					strcat(m_buf1, "|");

  00132	8d bd 7c fd ff
	ff		 lea	 edi, DWORD PTR _m_buf1$[ebp]
  00138	83 c4 14	 add	 esp, 20			; 00000014H
  0013b	4f		 dec	 edi
  0013c	0f 1f 40 00	 npad	 4
$LL38@initFMWind:
  00140	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00143	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00146	84 c0		 test	 al, al
  00148	75 f6		 jne	 SHORT $LL38@initFMWind
  0014a	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ??_C@_01DNKMNLPK@?$HM@

; 14284: 					strcat(m_buf1, m_buf);

  00150	8d 95 7c ff ff
	ff		 lea	 edx, DWORD PTR _m_buf$[ebp]
  00156	66 89 07	 mov	 WORD PTR [edi], ax
  00159	8b f2		 mov	 esi, edx
  0015b	0f 1f 44 00 00	 npad	 5
$LL39@initFMWind:
  00160	8a 02		 mov	 al, BYTE PTR [edx]
  00162	42		 inc	 edx
  00163	84 c0		 test	 al, al
  00165	75 f9		 jne	 SHORT $LL39@initFMWind
  00167	8d bd 7c fd ff
	ff		 lea	 edi, DWORD PTR _m_buf1$[ebp]
  0016d	2b d6		 sub	 edx, esi
  0016f	4f		 dec	 edi
$LL40@initFMWind:
  00170	8a 47 01	 mov	 al, BYTE PTR [edi+1]
  00173	47		 inc	 edi
  00174	84 c0		 test	 al, al
  00176	75 f8		 jne	 SHORT $LL40@initFMWind
  00178	8b 85 78 fd ff
	ff		 mov	 eax, DWORD PTR _k$1$[ebp]
  0017e	8b ca		 mov	 ecx, edx
  00180	c1 e9 02	 shr	 ecx, 2
  00183	40		 inc	 eax
  00184	f3 a5		 rep movsd
  00186	8b ca		 mov	 ecx, edx
  00188	89 85 78 fd ff
	ff		 mov	 DWORD PTR _k$1$[ebp], eax
  0018e	83 e1 03	 and	 ecx, 3
  00191	f3 a4		 rep movsb
  00193	3b 85 6c fd ff
	ff		 cmp	 eax, DWORD PTR tv543[ebp]
  00199	7c 85		 jl	 SHORT $LL10@initFMWind
  0019b	8b bd 70 fd ff
	ff		 mov	 edi, DWORD PTR tv539[ebp]
$LN9@initFMWind:

; 14285: 				}
; 14286: 				strcpy(msgWN[i - 7], m_buf1);

  001a1	8d 8d 7c fd ff
	ff		 lea	 ecx, DWORD PTR _m_buf1$[ebp]
$LL19@initFMWind:
  001a7	8a 01		 mov	 al, BYTE PTR [ecx]
  001a9	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001ac	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  001b0	84 c0		 test	 al, al
  001b2	75 f3		 jne	 SHORT $LL19@initFMWind
  001b4	8b b5 74 fd ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
$LN2@initFMWind:

; 14266: 	for (int i = 7; i < 14; i++) {

  001ba	46		 inc	 esi
  001bb	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  001c1	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  001c7	89 b5 74 fd ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  001cd	89 bd 70 fd ff
	ff		 mov	 DWORD PTR tv539[ebp], edi
  001d3	81 fb 00 07 00
	00		 cmp	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA+1792
  001d9	0f 8c b5 fe ff
	ff		 jl	 $LL4@initFMWind

; 14287: 			}
; 14288: 		}
; 14289: 	}
; 14290: }

  001df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e2	5f		 pop	 edi
  001e3	5e		 pop	 esi
  001e4	33 cd		 xor	 ecx, ebp
  001e6	5b		 pop	 ebx
  001e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ec	8b e5		 mov	 esp, ebp
  001ee	5d		 pop	 ebp
  001ef	c3		 ret	 0
?initFMWindowType1@@YAXPAD@Z ENDP			; initFMWindowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?FMWindowType@@YAXXZ
_TEXT	SEGMENT
_now_time$1 = -1620					; size = 8
_now_time$2 = -1612					; size = 8
_iNameX1$ = -1604					; size = 4
_iNameY1$ = -1600					; size = 4
_iNameX2$ = -1596					; size = 4
_iNameY2$ = -1592					; size = 4
tv1538 = -1588						; size = 8
tv1517 = -1588						; size = 8
tv908 = -1584						; size = 4
_x1$1$ = -1584						; size = 4
tv1473 = -1580						; size = 4
_id$1$ = -1580						; size = 4
_y1$1$ = -1576						; size = 4
_x2$1$ = -1572						; size = 4
_y2$1$ = -1568						; size = 4
_btnTitle$ = -1564					; size = 24
_buf$ = -1540						; size = 1024
_data$3 = -516						; size = 256
_msg$4 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?FMWindowType@@YAXXZ PROC				; FMWindowType, COMDAT

; 13541: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 06 00
	00		 sub	 esp, 1620		; 00000654H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 13542: 	static int winX, winY;
; 13543: 	static int winW, winH;
; 13544: 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 13545: 	static int btnLoc[6][2];
; 13546: 	static int btnCnt;
; 13547: 	static int msgLine;
; 13548: 	static int fmdelid;
; 13549: 	char* btnTitle[] =
; 13550: 	{
; 13551: 		" ï¼¯ï¼« ",
; 13552: 		"CANCEL",
; 13553: 		"?  ?",
; 13554: 		"?  ?",
; 13555: 		"??",
; 13556: 		"??"
; 13557: 	};
; 13558: 	int  id, id2;
; 13559: 	int  i, j;
; 13560: 	int  mask;
; 13561: 	int  btn;
; 13562: 	int  x1, y1, x2, y2;
; 13563: 	char buf[1024];
; 13564: #ifdef _FM_MODIFY
; 13565: 	int iNameX1, iNameY1, iNameX2, iNameY2;
; 13566: #endif
; 13567: 
; 13568: 	if (fmDutyproc == 1) {

  00013	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?fmDutyproc@@3HA, 1 ; fmDutyproc
  0001a	c7 85 e4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00024	c7 85 e8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002e	c7 85 ec f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00038	c7 85 f0 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@
  00042	c7 85 f4 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0004c	c7 85 f8 f9 ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  00056	75 28		 jne	 SHORT $LN24@FMWindowTy

; 13569: 		fmDutyRet = fmselectdetuyWindow(200, 100, fmdelid);

  00058	ff 35 00 00 00
	00		 push	 DWORD PTR ?fmdelid@?1??FMWindowType@@YAXXZ@4HA
  0005e	6a 64		 push	 100			; 00000064H
  00060	68 c8 00 00 00	 push	 200			; 000000c8H
  00065	e8 00 00 00 00	 call	 ?fmselectdetuyWindow@@YAHHHH@Z ; fmselectdetuyWindow
  0006a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?fmDutyRet@@3HA, eax ; fmDutyRet

; 13873: 					}
; 13874: 				}
; 13875: 			}
; 13876: 		}
; 13877: 	}
; 13878: }

  00072	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00075	33 cd		 xor	 ecx, ebp
  00077	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007c	8b e5		 mov	 esp, ebp
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN24@FMWindowTy:
  00080	53		 push	 ebx

; 13570: 		return;
; 13571: 	}
; 13572: 	if (fmDutyRet != 0)

  00081	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?fmDutyRet@@3HA ; fmDutyRet
  00087	56		 push	 esi
  00088	85 db		 test	 ebx, ebx
  0008a	74 0c		 je	 SHORT $LN25@FMWindowTy

; 13573: 		ptActMenuWin = NULL;

  0008c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 13574: 
; 13575: 	if (ptActMenuWin == NULL)

  00096	eb 0e		 jmp	 SHORT $LN135@FMWindowTy
$LN25@FMWindowTy:
  00098	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0009e	85 f6		 test	 esi, esi
  000a0	0f 85 0b 01 00
	00		 jne	 $LN134@FMWindowTy
$LN135@FMWindowTy:

; 13576: 	{
; 13577: #ifndef _FM_MODIFY
; 13578: 		winW = 7;
; 13579: #else
; 13580: #ifdef _NEW_MANOR_LAW
; 13581: 		winW = 9;
; 13582: #else
; 13583: 		winW = 8;
; 13584: #endif
; 13585: #endif
; 13586: 		winH = 8;
; 13587: 		winX = (640 - winW * 64) / 2;
; 13588: 		winY = (456 - winH * 48) / 2;
; 13589: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  000a6	6a 01		 push	 1
  000a8	6a 00		 push	 0
  000aa	6a 08		 push	 8
  000ac	6a 09		 push	 9
  000ae	6a 24		 push	 36			; 00000024H
  000b0	6a 20		 push	 32			; 00000020H
  000b2	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?winW@?1??FMWindowType@@YAXXZ@4HA, 9
  000bc	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??FMWindowType@@YAXXZ@4HA, 8
  000c6	c7 05 00 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA, 32 ; 00000020H
  000d0	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA, 36 ; 00000024H
  000da	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 13590: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 13591: 		winX = ptActMenuWin->x;
; 13592: 		winY = ptActMenuWin->y;
; 13593: #endif
; 13594: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 13595: 		{
; 13596: 			btnId[i] = -2;

  000df	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 13597: 		}
; 13598: 		mask = 1;
; 13599: 		btnCnt = 0;

  000e6	33 f6		 xor	 esi, esi

; 13600: 		for (i = 0; i < 10; i++, mask <<= 1)

  000e8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000ee	83 c4 18	 add	 esp, 24			; 00000018H
  000f1	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000f6	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000f9	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000fc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA, ecx
  00102	33 c9		 xor	 ecx, ecx
  00104	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA, eax
  00109	b8 01 00 00 00	 mov	 eax, 1
  0010e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??FMWindowType@@YAXXZ@4PAHA, xmm0
  00115	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  0011f	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  00129	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType@@YAXXZ@4HA, esi
  0012f	90		 npad	 1
$LL7@FMWindowTy:

; 13601: 		{
; 13602: 			if (buttonTypeWN & mask)

  00130	85 d0		 test	 edx, eax
  00132	74 06		 je	 SHORT $LN5@FMWindowTy

; 13603: 			{
; 13604: 				btnCnt++;

  00134	46		 inc	 esi
  00135	83 fe 04	 cmp	 esi, 4

; 13605: 				if (btnCnt == 4)

  00138	74 08		 je	 SHORT $LN108@FMWindowTy
$LN5@FMWindowTy:

; 13600: 		for (i = 0; i < 10; i++, mask <<= 1)

  0013a	41		 inc	 ecx
  0013b	03 c0		 add	 eax, eax
  0013d	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  00140	7c ee		 jl	 SHORT $LL7@FMWindowTy
$LN108@FMWindowTy:

; 13603: 			{
; 13604: 				btnCnt++;

  00142	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??FMWindowType@@YAXXZ@4HA, esi

; 13606: 					break;
; 13607: 			}
; 13608: 		}
; 13609: 		if (btnCnt > 0)

  00148	85 f6		 test	 esi, esi
  0014a	7e 30		 jle	 SHORT $LN9@FMWindowTy

; 13610: 		{
; 13611: 			int w;
; 13612: 			w = winW * 64 / (btnCnt + 1);

  0014c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??FMWindowType@@YAXXZ@4HA
  00151	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00154	c1 e0 06	 shl	 eax, 6
  00157	99		 cdq
  00158	f7 f9		 idiv	 ecx
  0015a	33 c9		 xor	 ecx, ecx

; 13613: 			for (i = 0; i < btnCnt; i++)

  0015c	85 f6		 test	 esi, esi
  0015e	7e 1c		 jle	 SHORT $LN9@FMWindowTy

; 13610: 		{
; 13611: 			int w;
; 13612: 			w = winW * 64 / (btnCnt + 1);

  00160	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@FMWindowTy:

; 13614: 			{
; 13615: 				btnLoc[i][0] = w * (i + 1) - 27;

  00163	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA[ecx*8], edx
  0016a	03 d0		 add	 edx, eax

; 13616: 				btnLoc[i][1] = 335;

  0016c	c7 04 cd 04 00
	00 00 4f 01 00
	00		 mov	 DWORD PTR ?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA[ecx*8+4], 335 ; 0000014fH
  00177	41		 inc	 ecx
  00178	3b ce		 cmp	 ecx, esi
  0017a	7c e7		 jl	 SHORT $LL10@FMWindowTy
$LN9@FMWindowTy:

; 13617: 			}
; 13618: 		}
; 13619: 		msgLine = 11;
; 13620: 		play_se(202, 320, 240);

  0017c	68 f0 00 00 00	 push	 240			; 000000f0H
  00181	68 40 01 00 00	 push	 320			; 00000140H
  00186	68 ca 00 00 00	 push	 202			; 000000caH
  0018b	c7 05 00 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?msgLine@?1??FMWindowType@@YAXXZ@4HA, 11 ; 0000000bH
  00195	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 13621: 	}
; 13622: 
; 13623: 	if (ptActMenuWin != NULL)

  0019a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001a3	85 f6		 test	 esi, esi
  001a5	0f 84 2f 02 00
	00		 je	 $LN146@FMWindowTy
  001ab	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?fmDutyRet@@3HA ; fmDutyRet
$LN134@FMWindowTy:
  001b1	57		 push	 edi

; 13624: 	{
; 13625: 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  001b2	6a 06		 push	 6
  001b4	68 00 00 00 00	 push	 OFFSET ?btnId@?1??FMWindowType@@YAXXZ@4PAHA
  001b9	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001be	83 c4 08	 add	 esp, 8
  001c1	89 85 d4 f9 ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax

; 13626: 
; 13627: 		id2 = -1;

  001c7	83 cf ff	 or	 edi, -1

; 13628: 
; 13629: 		if (fmDutyRet != 0)

  001ca	85 db		 test	 ebx, ebx
  001cc	74 17		 je	 SHORT $LN31@FMWindowTy

; 13630: 		{
; 13631: 			if (fmDutyRet != FMMEMBER_LEADER || fmDutyRet != FMMEMBER_APPLY) {
; 13632: 				id2 = fmdelid;

  001ce	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?fmdelid@?1??FMWindowType@@YAXXZ@4HA

; 13633: 				FMmsgWN[id2] = fmDutyRet;
; 13634: 			}
; 13635: 			fmDutyRet = 0;

  001d4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmDutyRet@@3HA, 0 ; fmDutyRet
  001de	89 1c bd 00 00
	00 00		 mov	 DWORD PTR ?FMmsgWN@@3PAHA[edi*4], ebx
$LN31@FMWindowTy:

; 13636: 		}
; 13637: 
; 13638: 		if (ptActMenuWin->hp >= 1)

  001e5	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  001e9	0f 8c 02 03 00
	00		 jl	 $LN137@FMWindowTy

; 13639: 		{
; 13640: 			for (i = selStartLine; i < msgLine; i++)

  001ef	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001f5	8b f2		 mov	 esi, edx
  001f7	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?msgLine@?1??FMWindowType@@YAXXZ@4HA
  001fd	0f 8d ee 02 00
	00		 jge	 $LN137@FMWindowTy
$LL13@FMWindowTy:

; 13641: 			{
; 13642: 				if (strlen(msgWN[i]) > 0)

  00203	8b ce		 mov	 ecx, esi
  00205	c1 e1 08	 shl	 ecx, 8
  00208	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0020e	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
$LL138@FMWindowTy:
  00211	8a 01		 mov	 al, BYTE PTR [ecx]
  00213	41		 inc	 ecx
  00214	84 c0		 test	 al, al
  00216	75 f9		 jne	 SHORT $LL138@FMWindowTy
  00218	2b cb		 sub	 ecx, ebx
  0021a	0f 84 c4 02 00
	00		 je	 $LN11@FMWindowTy

; 13643: 				{
; 13644: 					if (i == 10) {

  00220	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA
  00226	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  0022b	6b de 15	 imul	 ebx, esi, 21
  0022e	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00231	75 31		 jne	 SHORT $LN36@FMWindowTy

; 13645: 						x1 = winX + 25;

  00233	83 c1 19	 add	 ecx, 25			; 00000019H

; 13646: 						y1 = winY + 28 + (i + 3) * 21;

  00236	83 c0 5b	 add	 eax, 91			; 0000005bH
  00239	03 c3		 add	 eax, ebx
  0023b	89 8d d0 f9 ff
	ff		 mov	 DWORD PTR _x1$1$[ebp], ecx

; 13647: 						x2 = x1 + 405;
; 13648: 						y2 = y1 + 20;
; 13649: 					}

  00241	8b 9d d0 f9 ff
	ff		 mov	 ebx, DWORD PTR _x1$1$[ebp]
  00247	81 c1 95 01 00
	00		 add	 ecx, 405		; 00000195H
  0024d	89 85 d8 f9 ff
	ff		 mov	 DWORD PTR _y1$1$[ebp], eax
  00253	83 c0 14	 add	 eax, 20			; 00000014H
  00256	89 8d dc f9 ff
	ff		 mov	 DWORD PTR _x2$1$[ebp], ecx
  0025c	89 85 e0 f9 ff
	ff		 mov	 DWORD PTR _y2$1$[ebp], eax
  00262	eb 47		 jmp	 SHORT $LN37@FMWindowTy
$LN36@FMWindowTy:

; 13650: 					else {
; 13651: #ifdef _NEW_MANOR_LAW
; 13652: 						x1 = winX + 420;
; 13653: #else
; 13654: 						x1 = winX + 364;
; 13655: #endif
; 13656: 						y1 = winY + 18 + (i + 3) * 21;

  00264	83 c0 51	 add	 eax, 81			; 00000051H
  00267	03 c3		 add	 eax, ebx

; 13657: 						x2 = x1 + 70;

  00269	8d 99 a4 01 00
	00		 lea	 ebx, DWORD PTR [ecx+420]
  0026f	89 85 c0 f9 ff
	ff		 mov	 DWORD PTR _iNameY1$[ebp], eax
  00275	8d 53 46	 lea	 edx, DWORD PTR [ebx+70]
  00278	89 85 d8 f9 ff
	ff		 mov	 DWORD PTR _y1$1$[ebp], eax

; 13658: 						y2 = y1 + 20;

  0027e	83 c0 14	 add	 eax, 20			; 00000014H
  00281	89 85 c8 f9 ff
	ff		 mov	 DWORD PTR _iNameY2$[ebp], eax
  00287	89 85 e0 f9 ff
	ff		 mov	 DWORD PTR _y2$1$[ebp], eax

; 13659: #ifdef _FM_MODIFY
; 13660: 						iNameX1 = winX + 95;

  0028d	8d 41 5f	 lea	 eax, DWORD PTR [ecx+95]
  00290	89 85 bc f9 ff
	ff		 mov	 DWORD PTR _iNameX1$[ebp], eax

; 13661: 						iNameY1 = winY + 18 + (i + 3) * 21;
; 13662: 						iNameX2 = iNameX1 + 118;

  00296	83 c0 76	 add	 eax, 118		; 00000076H
  00299	89 95 dc f9 ff
	ff		 mov	 DWORD PTR _x2$1$[ebp], edx
  0029f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  002a5	89 85 c4 f9 ff
	ff		 mov	 DWORD PTR _iNameX2$[ebp], eax
$LN37@FMWindowTy:

; 13663: 						iNameY2 = iNameY1 + 20;
; 13664: #endif
; 13665: 					}
; 13666: 
; 13667: 					// åªææé¿ãé¿èæå¯ä»¥ä¿®æ¹
; 13668: 					/*if( pc.familyleader == FMMEMBER_LEADER &&
; 13669: 						FMmsgWN[i-selStartLine+1] > 0 && FMmsgWN[i-selStartLine+1] < FMMEMBER_NUMBER &&
; 13670: 						FMmsgWN[i-selStartLine+1] != FMMEMBER_LEADER ||
; 13671: 						( pc.familyleader == FMMEMBER_ELDER || pc.familyleader == FMMEMBER_VICELEADER ) &&
; 13672: 						( FMmsgWN[i-selStartLine+1] == FMMEMBER_MEMBER || FMmsgWN[i-selStartLine+1] == FMMEMBER_APPLY ) ||
; 13673: 						(i-selStartLine+1) == 11  &&
; 13674: 						(pc.familyleader == FMMEMBER_LEADER || pc.familyleader == FMMEMBER_ELDER || pc.familyleader == FMMEMBER_VICELEADER))*/
; 13675: 					if (pc.familyleader == FMMEMBER_LEADER &&
; 13676: 						FMmsgWN[i - selStartLine + 1] > 0 && FMmsgWN[i - selStartLine + 1] < FMMEMBER_NUMBER &&
; 13677: 						FMmsgWN[i - selStartLine + 1] != FMMEMBER_LEADER ||
; 13678: 						pc.familyleader == FMMEMBER_ELDER &&
; 13679: 						(FMmsgWN[i - selStartLine + 1] == FMMEMBER_MEMBER || FMmsgWN[i - selStartLine + 1] == FMMEMBER_APPLY) ||

  002ab	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3
  002b2	75 1a		 jne	 SHORT $LN40@FMWindowTy
  002b4	8b c6		 mov	 eax, esi
  002b6	2b c2		 sub	 eax, edx
  002b8	8b 0c 85 04 00
	00 00		 mov	 ecx, DWORD PTR ?FMmsgWN@@3PAHA[eax*4+4]
  002bf	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  002c2	83 f8 03	 cmp	 eax, 3
  002c5	77 25		 ja	 SHORT $LN41@FMWindowTy
  002c7	83 f9 03	 cmp	 ecx, 3
  002ca	75 40		 jne	 SHORT $LN42@FMWindowTy
  002cc	eb 1e		 jmp	 SHORT $LN41@FMWindowTy
$LN40@FMWindowTy:
  002ce	83 3d 08 51 00
	00 04		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 4
  002d5	75 15		 jne	 SHORT $LN41@FMWindowTy
  002d7	8b c6		 mov	 eax, esi
  002d9	2b c2		 sub	 eax, edx
  002db	8b 04 85 04 00
	00 00		 mov	 eax, DWORD PTR ?FMmsgWN@@3PAHA[eax*4+4]
  002e2	83 f8 01	 cmp	 eax, 1
  002e5	74 25		 je	 SHORT $LN42@FMWindowTy
  002e7	83 f8 02	 cmp	 eax, 2
  002ea	74 20		 je	 SHORT $LN42@FMWindowTy
$LN41@FMWindowTy:
  002ec	8b c6		 mov	 eax, esi
  002ee	2b c2		 sub	 eax, edx
  002f0	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  002f3	0f 85 1e 01 00
	00		 jne	 $LN54@FMWindowTy
  002f9	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
  002fe	83 f8 03	 cmp	 eax, 3
  00301	74 09		 je	 SHORT $LN42@FMWindowTy
  00303	83 f8 04	 cmp	 eax, 4
  00306	0f 85 0b 01 00
	00		 jne	 $LN54@FMWindowTy
$LN42@FMWindowTy:

; 13680: 						(i - selStartLine + 1) == 11 &&
; 13681: 						(pc.familyleader == FMMEMBER_LEADER || pc.familyleader == FMMEMBER_ELDER))
; 13682: 						if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  0030c	6a 6b		 push	 107			; 0000006bH
  0030e	ff b5 e0 f9 ff
	ff		 push	 DWORD PTR _y2$1$[ebp]
  00314	ff b5 dc f9 ff
	ff		 push	 DWORD PTR _x2$1$[ebp]
  0031a	ff b5 d8 f9 ff
	ff		 push	 DWORD PTR _y1$1$[ebp]
  00320	53		 push	 ebx
  00321	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00326	83 c4 14	 add	 esp, 20			; 00000014H
  00329	85 c0		 test	 eax, eax
  0032b	0f 84 e0 00 00
	00		 je	 $LN143@FMWindowTy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  00331	8d 85 b4 f9 ff
	ff		 lea	 eax, DWORD PTR _now_time$2[ebp]
  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 __time64
  0033d	83 c4 04	 add	 esp, 4
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 13686: 							if (mouse.onceState & MOUSE_LEFT_CRICK && (now_time - FMHoldTime) >= 1)

  00340	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00347	0f 84 c4 00 00
	00		 je	 $LN143@FMWindowTy
  0034d	8b 8d b4 f9 ff
	ff		 mov	 ecx, DWORD PTR _now_time$2[ebp]
  00353	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?FMHoldTime@@3_JA
  00359	8b 85 b8 f9 ff
	ff		 mov	 eax, DWORD PTR _now_time$2[ebp+4]
  0035f	1b 05 04 00 00
	00		 sbb	 eax, DWORD PTR ?FMHoldTime@@3_JA+4
  00365	89 85 d0 f9 ff
	ff		 mov	 DWORD PTR tv1538[ebp+4], eax
  0036b	0f 88 a0 00 00
	00		 js	 $LN143@FMWindowTy
  00371	7f 09		 jg	 SHORT $LN139@FMWindowTy
  00373	83 f9 01	 cmp	 ecx, 1
  00376	0f 82 95 00 00
	00		 jb	 $LN143@FMWindowTy
$LN139@FMWindowTy:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  0037c	68 00 00 00 00	 push	 OFFSET ?FMHoldTime@@3_JA ; FMHoldTime
  00381	e8 00 00 00 00	 call	 __time64
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 13689: 								id2 = i - selStartLine + 1;

  00386	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0038c	8b c6		 mov	 eax, esi
  0038e	2b c2		 sub	 eax, edx
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  00390	83 c4 04	 add	 esp, 4
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 13689: 								id2 = i - selStartLine + 1;

  00393	8d 78 01	 lea	 edi, DWORD PTR [eax+1]

; 13690: 
; 13691: 								if (id2 >= 1 && id2 <= 10)

  00396	83 f8 09	 cmp	 eax, 9
  00399	77 4f		 ja	 SHORT $LN45@FMWindowTy

; 13692: 									switch (FMmsgWN[id2]) {

  0039b	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?FMmsgWN@@3PAHA[edi*4]
  003a2	83 e8 01	 sub	 eax, 1
  003a5	74 0a		 je	 SHORT $LN47@FMWindowTy
  003a7	83 e8 01	 sub	 eax, 1
  003aa	74 05		 je	 SHORT $LN47@FMWindowTy
  003ac	83 e8 02	 sub	 eax, 2
  003af	75 66		 jne	 SHORT $LN54@FMWindowTy
$LN47@FMWindowTy:

; 13693: 									case FMMEMBER_MEMBER:		// ä¸è¬æå
; 13694: 									case FMMEMBER_APPLY:		// ç³è¯·å å¥
; 13695: 									case FMMEMBER_ELDER:		  // é¿è
; 13696: 									//case FMMEMBER_ELDER:		  // é¿è
; 13697: 									//case FMMEMBER_INVITE:		  // ç¥­å¸
; 13698: 									//case FMMEMBER_BAILEE:	 	  // è´¢å¡							
; 13699: 									//case FMMEMBER_VICELEADER:   // å¯æé¿
; 13700: 										fmDutyproc = 1;

  003b1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?fmDutyproc@@3HA, 1 ; fmDutyproc

; 13701: 										fmdelid = id2;

  003bb	89 3d 00 00 00
	00		 mov	 DWORD PTR ?fmdelid@?1??FMWindowType@@YAXXZ@4HA, edi
$LN80@FMWindowTy:

; 13810: 			DeathAction(ptActMenuWin);

  003c1	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003c7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13811: 			ptActMenuWin = NULL;

  003cc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  003d6	83 c4 04	 add	 esp, 4
$LN148@FMWindowTy:
  003d9	5f		 pop	 edi
$LN146@FMWindowTy:
  003da	5e		 pop	 esi
  003db	5b		 pop	 ebx

; 13873: 					}
; 13874: 				}
; 13875: 			}
; 13876: 		}
; 13877: 	}
; 13878: }

  003dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003df	33 cd		 xor	 ecx, ebp
  003e1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003e6	8b e5		 mov	 esp, ebp
  003e8	5d		 pop	 ebp
  003e9	c3		 ret	 0
$LN45@FMWindowTy:

; 13702: 										id2 = -1;
; 13703: 										DeathAction(ptActMenuWin);
; 13704: 										ptActMenuWin = NULL;
; 13705: 										return;
; 13706: 										break;
; 13707: 									default:
; 13708: 										break;
; 13709: 									}
; 13710: 								else if (id2 == 11)

  003ea	83 ff 0b	 cmp	 edi, 11			; 0000000bH
  003ed	75 28		 jne	 SHORT $LN54@FMWindowTy

; 13711: 									switch (FMmsgWN[id2]) {

  003ef	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?FMmsgWN@@3PAHA+44
  003f4	83 e8 00	 sub	 eax, 0
  003f7	74 0c		 je	 SHORT $LN53@FMWindowTy
  003f9	83 e8 01	 sub	 eax, 1
  003fc	75 19		 jne	 SHORT $LN54@FMWindowTy

; 13712: 									case 1:  // YES								
; 13713: 										FMmsgWN[id2] = 0;

  003fe	a3 2c 00 00 00	 mov	 DWORD PTR ?FMmsgWN@@3PAHA+44, eax

; 13714: 										break;

  00403	eb 12		 jmp	 SHORT $LN54@FMWindowTy
$LN53@FMWindowTy:

; 13715: 									case 0:  // N O																
; 13716: 										FMmsgWN[id2] = 1;

  00405	c7 05 2c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?FMmsgWN@@3PAHA+44, 1
  0040f	eb 06		 jmp	 SHORT $LN54@FMWindowTy
$LN143@FMWindowTy:

; 13686: 							if (mouse.onceState & MOUSE_LEFT_CRICK && (now_time - FMHoldTime) >= 1)

  00411	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
$LN54@FMWindowTy:

; 13717: 										break;
; 13718: 									default:
; 13719: 										break;
; 13720: 									}
; 13721: 							}
; 13722: 						}
; 13723: #ifdef _FM_MODIFY
; 13724: 					//æ»é¼ ç§»å°äººåä¸æ¹æ¾ç¤ºæ¹æ¡
; 13725: 					if (i < 10) {

  00417	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0041a	0f 8d c4 00 00
	00		 jge	 $LN11@FMWindowTy

; 13726: 						if (MakeHitBox(iNameX1, iNameY1, iNameX2, iNameY2, DISP_PRIO_BOX2)) {

  00420	6a 6b		 push	 107			; 0000006bH
  00422	ff b5 c8 f9 ff
	ff		 push	 DWORD PTR _iNameY2$[ebp]
  00428	ff b5 c4 f9 ff
	ff		 push	 DWORD PTR _iNameX2$[ebp]
  0042e	ff b5 c0 f9 ff
	ff		 push	 DWORD PTR _iNameY1$[ebp]
  00434	ff b5 bc f9 ff
	ff		 push	 DWORD PTR _iNameX1$[ebp]
  0043a	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0043f	83 c4 14	 add	 esp, 20			; 00000014H
  00442	85 c0		 test	 eax, eax
  00444	0f 84 94 00 00
	00		 je	 $LN145@FMWindowTy
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  0044a	8d 85 ac f9 ff
	ff		 lea	 eax, DWORD PTR _now_time$1[ebp]
  00450	50		 push	 eax
  00451	e8 00 00 00 00	 call	 __time64
  00456	83 c4 04	 add	 esp, 4
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 13729: 							if (mouse.onceState & MOUSE_LEFT_CRICK && (now_time - FMHoldTime) >= 1) {

  00459	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00460	0f 84 78 00 00
	00		 je	 $LN145@FMWindowTy
  00466	8b 8d ac f9 ff
	ff		 mov	 ecx, DWORD PTR _now_time$1[ebp]
  0046c	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?FMHoldTime@@3_JA
  00472	8b 85 b0 f9 ff
	ff		 mov	 eax, DWORD PTR _now_time$1[ebp+4]
  00478	1b 05 04 00 00
	00		 sbb	 eax, DWORD PTR ?FMHoldTime@@3_JA+4
  0047e	89 85 d0 f9 ff
	ff		 mov	 DWORD PTR tv1517[ebp+4], eax
  00484	78 58		 js	 SHORT $LN145@FMWindowTy
  00486	7f 05		 jg	 SHORT $LN140@FMWindowTy
  00488	83 f9 01	 cmp	 ecx, 1
  0048b	72 51		 jb	 SHORT $LN145@FMWindowTy
$LN140@FMWindowTy:

; 13730: 								//å¯è¯­æ¨¡å¼
; 13731: #ifdef _TELLCHANNEL
; 13732: 								TalkMode = 1;
; 13733: 								sprintf(secretName, "%s ", FMnameWN[i + 1]);

  0048d	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  00490	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?TalkMode@@3HA, 1 ; TalkMode
  0049a	8d 04 85 14 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4+20]
  004a1	50		 push	 eax
  004a2	68 00 00 00 00	 push	 OFFSET ??_C@_03IKGEINEE@?$CFs?5@
  004a7	68 00 00 00 00	 push	 OFFSET ?secretName@@3PADA ; secretName
  004ac	e8 00 00 00 00	 call	 _sprintf

; 13734: #endif
; 13735: 								pNowStrBuffer->buffer[0] = NULL;

  004b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer

; 13736: 								pNowStrBuffer->cursor = 0;
; 13737: 								pNowStrBuffer->cnt = 0;
; 13738: #ifdef _FRIENDCHANNEL
; 13739: 								StrToNowStrBuffer(secretName);

  004b6	68 00 00 00 00	 push	 OFFSET ?secretName@@3PADA ; secretName
  004bb	c6 00 00	 mov	 BYTE PTR [eax], 0
  004be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer
  004c3	c6 80 09 01 00
	00 00		 mov	 BYTE PTR [eax+265], 0
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pNowStrBuffer@@3PAUSTR_BUFFER@@A ; pNowStrBuffer
  004cf	c6 80 07 01 00
	00 00		 mov	 BYTE PTR [eax+263], 0
  004d6	e8 00 00 00 00	 call	 ?StrToNowStrBuffer@@YAXPAD@Z ; StrToNowStrBuffer
  004db	83 c4 10	 add	 esp, 16			; 00000010H
$LN145@FMWindowTy:

; 13639: 		{
; 13640: 			for (i = selStartLine; i < msgLine; i++)

  004de	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
$LN11@FMWindowTy:
  004e4	46		 inc	 esi
  004e5	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?msgLine@?1??FMWindowType@@YAXXZ@4HA
  004eb	0f 8c 12 fd ff
	ff		 jl	 $LL13@FMWindowTy
$LN137@FMWindowTy:

; 13740: #endif
; 13741: 							}
; 13742: 						}
; 13743: 					}
; 13744: #endif
; 13745: 				}
; 13746: 			}
; 13747: 		}
; 13748: 		if (CheckMenuFlag()
; 13749: 			|| joy_trg[0] & JOY_ESC
; 13750: 			|| actBtn == 1
; 13751: 			|| menuBtn == 1
; 13752: 			|| disconnectServerFlag == TRUE
; 13753: 			|| wnCloseFlag == 1)

  004f1	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  004f6	85 c0		 test	 eax, eax
  004f8	75 44		 jne	 SHORT $LN59@FMWindowTy
  004fa	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00504	75 38		 jne	 SHORT $LN59@FMWindowTy
  00506	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0050e	74 2e		 je	 SHORT $LN59@FMWindowTy
  00510	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00518	74 24		 je	 SHORT $LN59@FMWindowTy
  0051a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00521	74 1b		 je	 SHORT $LN59@FMWindowTy
  00523	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0052b	74 11		 je	 SHORT $LN59@FMWindowTy

; 13758: 		}
; 13759: 
; 13760: 		if (0 <= id && id < 6
; 13761: 			|| 0 <= id2 && id2 < 12
; 13762: 			|| id == 100)

  0052d	8b 9d d4 f9 ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  00533	85 db		 test	 ebx, ebx
  00535	78 1e		 js	 SHORT $LN62@FMWindowTy
  00537	83 fb 06	 cmp	 ebx, 6
  0053a	7c 22		 jl	 SHORT $LN61@FMWindowTy
  0053c	eb 17		 jmp	 SHORT $LN62@FMWindowTy
$LN59@FMWindowTy:

; 13754: 		{
; 13755: 			id = 100;
; 13756: 			windowTypeWN = -1;
; 13757: 			wnCloseFlag = 0;

  0053e	33 c0		 xor	 eax, eax
  00540	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0054a	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  0054f	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN62@FMWindowTy:

; 13758: 		}
; 13759: 
; 13760: 		if (0 <= id && id < 6
; 13761: 			|| 0 <= id2 && id2 < 12
; 13762: 			|| id == 100)

  00555	85 ff		 test	 edi, edi
  00557	78 1e		 js	 SHORT $LN63@FMWindowTy
  00559	83 ff 0c	 cmp	 edi, 12			; 0000000cH
  0055c	7d 19		 jge	 SHORT $LN63@FMWindowTy
$LN61@FMWindowTy:

; 13763: 		{
; 13764: 			char data[256];
; 13765: 			char msg[256];
; 13766: 			if (id == 100)

  0055e	83 fb 64	 cmp	 ebx, 100		; 00000064H
  00561	74 1d		 je	 SHORT $LN133@FMWindowTy

; 13769: 			}
; 13770: 			else
; 13771: 				if (0 <= id && id < 6)

  00563	83 fb 05	 cmp	 ebx, 5
  00566	77 0b		 ja	 SHORT $LN66@FMWindowTy

; 13772: 				{
; 13773: 					btn = 1;
; 13774: 					btn <<= id;

  00568	be 01 00 00 00	 mov	 esi, 1
  0056d	8b cb		 mov	 ecx, ebx
  0056f	d3 e6		 shl	 esi, cl

; 13775: 				}

  00571	eb 12		 jmp	 SHORT $LN67@FMWindowTy
$LN66@FMWindowTy:

; 13776: 				else
; 13777: 				{
; 13778: 					btn = 0;

  00573	33 f6		 xor	 esi, esi
  00575	eb 0e		 jmp	 SHORT $LN67@FMWindowTy
$LN63@FMWindowTy:

; 13758: 		}
; 13759: 
; 13760: 		if (0 <= id && id < 6
; 13761: 			|| 0 <= id2 && id2 < 12
; 13762: 			|| id == 100)

  00577	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0057a	0f 85 44 01 00
	00		 jne	 $LN60@FMWindowTy
$LN133@FMWindowTy:

; 13767: 			{
; 13768: 				btn = WINDOW_BUTTONTYPE_CANCEL;

  00580	be 02 00 00 00	 mov	 esi, 2
$LN67@FMWindowTy:

; 13779: 				}
; 13780: 			if (id2 < 0)
; 13781: 				id2 = 0;
; 13782: 			sprintf(data, "%d|%d|%d", FMdengonidex, id2, FMmsgWN[id2]);

  00585	33 c0		 xor	 eax, eax
  00587	85 ff		 test	 edi, edi
  00589	0f 49 c7	 cmovns	 eax, edi
  0058c	8b f8		 mov	 edi, eax
  0058e	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  00594	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?FMmsgWN@@3PAHA[edi*4]
  0059b	57		 push	 edi
  0059c	ff 35 00 00 00
	00		 push	 DWORD PTR ?FMdengonidex@@3HA ; FMdengonidex
  005a2	68 00 00 00 00	 push	 OFFSET ??_C@_08ILNEEICH@?$CFd?$HM?$CFd?$HM?$CFd@
  005a7	50		 push	 eax
  005a8	e8 00 00 00 00	 call	 _sprintf

; 13783: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  005ad	68 ff 00 00 00	 push	 255			; 000000ffH
  005b2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$4[ebp]
  005b8	50		 push	 eax
  005b9	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  005bf	50		 push	 eax
  005c0	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 13784: 
; 13785: 			if (1 <= id2 && id2 < 11) {

  005c5	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  005c8	83 c4 20	 add	 esp, 32			; 00000020H
  005cb	83 f8 09	 cmp	 eax, 9
  005ce	77 52		 ja	 SHORT $LN71@FMWindowTy

; 13786: 				sprintf(buf, "M|%s|%d|%d", FMnameWN[id2], FMpidWN[id2], FMmsgWN[id2]);

  005d0	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?FMmsgWN@@3PAHA[edi*4]
  005d7	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]
  005da	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?FMpidWN@@3PAHA[edi*4]
  005e1	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4]
  005e8	50		 push	 eax
  005e9	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  005ef	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IBINOEKJ@M?$HM?$CFs?$HM?$CFd?$HM?$CFd@
  005f4	50		 push	 eax
  005f5	e8 00 00 00 00	 call	 _sprintf
  005fa	83 c4 14	 add	 esp, 20			; 00000014H

; 13787: 				if (bNewServer)

  005fd	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00603	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0060a	50		 push	 eax
  0060b	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00611	74 07		 je	 SHORT $LN70@FMWindowTy

; 13788: 					lssproto_FM_send(sockfd, buf);

  00613	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00618	eb 05		 jmp	 SHORT $LN149@FMWindowTy
$LN70@FMWindowTy:

; 13789: 				else
; 13790: 					old_lssproto_FM_send(sockfd, buf);

  0061a	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN149@FMWindowTy:

; 13791: 			}
; 13792: 			if (id2 == 11) {

  0061f	83 c4 08	 add	 esp, 8
$LN71@FMWindowTy:
  00622	83 ff 0b	 cmp	 edi, 11			; 0000000bH
  00625	75 40		 jne	 SHORT $LN74@FMWindowTy

; 13793: 				sprintf(buf, "T|%d", FMmsgWN[id2]);

  00627	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?FMmsgWN@@3PAHA[edi*4]
  0062e	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00634	68 00 00 00 00	 push	 OFFSET ??_C@_04OKLAFEGF@T?$HM?$CFd@
  00639	50		 push	 eax
  0063a	e8 00 00 00 00	 call	 _sprintf
  0063f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13794: 				if (bNewServer)

  00642	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00648	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0064f	50		 push	 eax
  00650	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00656	74 07		 je	 SHORT $LN73@FMWindowTy

; 13795: 					lssproto_FM_send(sockfd, buf);

  00658	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  0065d	eb 05		 jmp	 SHORT $LN150@FMWindowTy
$LN73@FMWindowTy:

; 13796: 				else
; 13797: 					old_lssproto_FM_send(sockfd, buf);

  0065f	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN150@FMWindowTy:

; 13798: 			}
; 13799: 			/*if( FMmsgWN[id2] != FMMEMBER_ELDER && FMmsgWN[id2] != FMMEMBER_INVITE &&
; 13800: 				FMmsgWN[id2] != FMMEMBER_BAILEE && FMmsgWN[id2] != FMMEMBER_VICELEADER )*/
; 13801: 			if (FMmsgWN[id2] == FMMEMBER_NONE || FMmsgWN[id2] == FMMEMBER_MEMBER || FMmsgWN[id2] == 0) {

  00664	83 c4 08	 add	 esp, 8
$LN74@FMWindowTy:
  00667	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?FMmsgWN@@3PAHA[edi*4]
  0066e	83 f8 ff	 cmp	 eax, -1
  00671	74 09		 je	 SHORT $LN76@FMWindowTy
  00673	83 f8 01	 cmp	 eax, 1
  00676	74 04		 je	 SHORT $LN76@FMWindowTy
  00678	85 c0		 test	 eax, eax
  0067a	75 3e		 jne	 SHORT $LN78@FMWindowTy
$LN76@FMWindowTy:

; 13802: 				if (bNewServer)

  0067c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00683	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$4[ebp]
  00689	50		 push	 eax
  0068a	56		 push	 esi
  0068b	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00691	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00697	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0069d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  006a3	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  006a9	74 07		 je	 SHORT $LN77@FMWindowTy

; 13803: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  006ab	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  006b0	eb 05		 jmp	 SHORT $LN151@FMWindowTy
$LN77@FMWindowTy:

; 13804: 				else
; 13805: 					old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  006b2	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN151@FMWindowTy:

; 13806: 			}
; 13807: 			windowTypeWN = -1;

  006b7	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN78@FMWindowTy:
  006ba	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN60@FMWindowTy:

; 13808: 		}
; 13809: 		if (id >= 0 || id2 >= 0) {

  006c4	85 db		 test	 ebx, ebx
  006c6	0f 89 f5 fc ff
	ff		 jns	 $LN80@FMWindowTy
  006cc	85 ff		 test	 edi, edi
  006ce	0f 89 ed fc ff
	ff		 jns	 $LN80@FMWindowTy

; 13812: 			return;
; 13813: 		}
; 13814: 
; 13815: 		if (ptActMenuWin->hp >= 1)

  006d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006d9	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  006dd	0f 8c f6 fc ff
	ff		 jl	 $LN148@FMWindowTy

; 13816: 		{
; 13817: 			//if (DISPLACEMENT_X)
; 13818: 			//{
; 13819: 			//	ptActMenuWin->x = winX + DISPLACEMENT_X / 2;
; 13820: 			//	ptActMenuWin->y = winY + DISPLACEMENT_Y / 2;
; 13821: 			//}
; 13822: 			//else
; 13823: 			//{
; 13824: 			//	ptActMenuWin->x = winX;
; 13825: 			//	ptActMenuWin->y = winY;
; 13826: 			//}
; 13827: 
; 13828: 
; 13829: #ifndef _FM_MODIFY
; 13830: 			StockFontBuffer(winX + 34, winY + 21,
; 13831: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "              âå®¶ææååè¡¨â", 0);
; 13832: 			StockFontBuffer(winX + 24, winY + 21 + 2 * 21,
; 13833: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " âç¶æâ â æ å å§ å â âç­çº§â âä¸ªäººå£°æâ âå å¥â", 0);
; 13834: #else
; 13835: 			StockFontBuffer(winX + 34, winY + 21,

  006e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  006e8	6a 00		 push	 0
  006ea	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@OGEDCEOL@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?$LK?N?A?$LH?$LP?x@
  006ef	6a 04		 push	 4
  006f1	83 c0 15	 add	 eax, 21			; 00000015H
  006f4	6a 01		 push	 1
  006f6	50		 push	 eax
  006f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA
  006fc	83 c0 22	 add	 eax, 34			; 00000022H
  006ff	50		 push	 eax
  00700	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 13836: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "                         ë¶ì¡±ì ê´ë¦¬", 0);
; 13837: #ifdef _NEW_MANOR_LAW
; 13838: 			StockFontBuffer(winX + 24, winY + 21 + 2 * 21,

  00705	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  0070a	6a 00		 push	 0
  0070c	68 00 00 00 00	 push	 OFFSET ??_C@_0EI@MNEGDEON@?5?$KD?$NL?A?$KC?$LM?S?$KD?$NN?$KD?$NL?$LE?P?$LD?W?$MA?S?$KD?$NN?5?5?5?5?5?$KD?$NL?$LH?$LJ?$LK?$KH?$KD@
  00711	6a 04		 push	 4
  00713	83 c0 3f	 add	 eax, 63			; 0000003fH
  00716	6a 01		 push	 1
  00718	50		 push	 eax
  00719	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA
  0071e	83 c0 18	 add	 eax, 24			; 00000018H
  00721	50		 push	 eax
  00722	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 13839: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " ï¼»ì ìï¼½ï¼»ëë¤ìï¼½     ï¼»ë ë²¨ï¼½  ï¼»ëªì±ï¼½ ï¼»ê¸°ì¬ëï¼½ ï¼»ì§ìï¼½ ï¼»ë§¨í ï¼½", 0);
; 13840: #else
; 13841: 			StockFontBuffer(winX + 24, winY + 21 + 2 * 21,
; 13842: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " âç¶æâ â æ å å§ å â âç­çº§â âä¸ªäººå£°æâ âå å¥ââä¼ºæå¨â", 0);
; 13843: #endif
; 13844: #endif
; 13845: 			for (i = 0; i < msgLine; i++) {

  00727	33 f6		 xor	 esi, esi
  00729	83 c4 30	 add	 esp, 48			; 00000030H
  0072c	39 35 00 00 00
	00		 cmp	 DWORD PTR ?msgLine@?1??FMWindowType@@YAXXZ@4HA, esi
  00732	0f 8e b6 00 00
	00		 jle	 $LN19@FMWindowTy

; 13816: 		{
; 13817: 			//if (DISPLACEMENT_X)
; 13818: 			//{
; 13819: 			//	ptActMenuWin->x = winX + DISPLACEMENT_X / 2;
; 13820: 			//	ptActMenuWin->y = winY + DISPLACEMENT_Y / 2;
; 13821: 			//}
; 13822: 			//else
; 13823: 			//{
; 13824: 			//	ptActMenuWin->x = winX;
; 13825: 			//	ptActMenuWin->y = winY;
; 13826: 			//}
; 13827: 
; 13828: 
; 13829: #ifndef _FM_MODIFY
; 13830: 			StockFontBuffer(winX + 34, winY + 21,
; 13831: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "              âå®¶ææååè¡¨â", 0);
; 13832: 			StockFontBuffer(winX + 24, winY + 21 + 2 * 21,
; 13833: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " âç¶æâ â æ å å§ å â âç­çº§â âä¸ªäººå£°æâ âå å¥â", 0);
; 13834: #else
; 13835: 			StockFontBuffer(winX + 34, winY + 21,

  00738	33 db		 xor	 ebx, ebx
  0073a	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0073f	90		 npad	 1
$LL20@FMWindowTy:

; 13846: 				if (strlen(msgWN[i]) > 0) {

  00740	8b cf		 mov	 ecx, edi
  00742	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL141@FMWindowTy:
  00745	8a 01		 mov	 al, BYTE PTR [ecx]
  00747	41		 inc	 ecx
  00748	84 c0		 test	 al, al
  0074a	75 f9		 jne	 SHORT $LL141@FMWindowTy
  0074c	2b ca		 sub	 ecx, edx
  0074e	0f 84 84 00 00
	00		 je	 $LN18@FMWindowTy

; 13847: 					if (i < selStartLine) {

  00754	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  0075a	3b f2		 cmp	 esi, edx
  0075c	7d 0f		 jge	 SHORT $LN83@FMWindowTy

; 13848: 						StockFontBuffer(winX + 34, winY + 21,

  0075e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  00763	6a 00		 push	 0
  00765	57		 push	 edi
  00766	6a 00		 push	 0
  00768	83 c0 15	 add	 eax, 21			; 00000015H

; 13849: 							FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 13850: 					}

  0076b	eb 57		 jmp	 SHORT $LN152@FMWindowTy
$LN83@FMWindowTy:

; 13851: 					else if ((i - selStartLine + 1) == 11) {

  0076d	8b 0c b5 04 00
	00 00		 mov	 ecx, DWORD PTR ?FMmsgWN@@3PAHA[esi*4+4]
  00774	8b c6		 mov	 eax, esi
  00776	2b c2		 sub	 eax, edx
  00778	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0077b	75 22		 jne	 SHORT $LN85@FMWindowTy

; 13852: 						int Font_Color = FONT_PAL_GREEN;

  0077d	b8 05 00 00 00	 mov	 eax, 5

; 13853: 						if (FMmsgWN[i + 1] == 1) Font_Color = FONT_PAL_GREEN;

  00782	83 f9 01	 cmp	 ecx, 1
  00785	74 0a		 je	 SHORT $LN89@FMWindowTy

; 13854: 						else if (FMmsgWN[i + 1] == 0) Font_Color = FONT_PAL_RED;

  00787	85 c9		 test	 ecx, ecx
  00789	b9 06 00 00 00	 mov	 ecx, 6
  0078e	0f 44 c1	 cmove	 eax, ecx
$LN89@FMWindowTy:

; 13855: 						StockFontBuffer(winX + 34, winY + 31 + (i + 3) * 21,

  00791	6a 00		 push	 0
  00793	57		 push	 edi
  00794	50		 push	 eax
  00795	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  0079a	83 c0 5e	 add	 eax, 94			; 0000005eH

; 13856: 							FONT_PRIO_FRONT, Font_Color, msgWN[i], 0);
; 13857: 					}

  0079d	eb 23		 jmp	 SHORT $LN153@FMWindowTy
$LN85@FMWindowTy:

; 13858: 					else {
; 13859: 						int Font_Color = FONT_PAL_WHITE;

  0079f	33 c0		 xor	 eax, eax

; 13860: 						if (FMmsgWN[i + 1] == 2) Font_Color = FONT_PAL_BLUE2;

  007a1	83 f9 02	 cmp	 ecx, 2
  007a4	75 05		 jne	 SHORT $LN90@FMWindowTy
  007a6	8d 41 06	 lea	 eax, DWORD PTR [ecx+6]
  007a9	eb 0b		 jmp	 SHORT $LN92@FMWindowTy
$LN90@FMWindowTy:

; 13861: 						else if (FMmsgWN[i + 1] == -1) Font_Color = FONT_PAL_RED;

  007ab	83 f9 ff	 cmp	 ecx, -1
  007ae	b9 06 00 00 00	 mov	 ecx, 6
  007b3	0f 44 c1	 cmove	 eax, ecx
$LN92@FMWindowTy:

; 13862: 						StockFontBuffer(winX + 34, winY + 21 + (i + 3) * 21, FONT_PRIO_FRONT, Font_Color, msgWN[i], 0);

  007b6	6a 00		 push	 0
  007b8	57		 push	 edi
  007b9	50		 push	 eax
  007ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  007bf	83 c0 54	 add	 eax, 84			; 00000054H
$LN153@FMWindowTy:

; 13839: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " ï¼»ì ìï¼½ï¼»ëë¤ìï¼½     ï¼»ë ë²¨ï¼½  ï¼»ëªì±ï¼½ ï¼»ê¸°ì¬ëï¼½ ï¼»ì§ìï¼½ ï¼»ë§¨í ï¼½", 0);
; 13840: #else
; 13841: 			StockFontBuffer(winX + 24, winY + 21 + 2 * 21,
; 13842: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, " âç¶æâ â æ å å§ å â âç­çº§â âä¸ªäººå£°æâ âå å¥ââä¼ºæå¨â", 0);
; 13843: #endif
; 13844: #endif
; 13845: 			for (i = 0; i < msgLine; i++) {

  007c2	03 c3		 add	 eax, ebx
$LN152@FMWindowTy:
  007c4	6a 01		 push	 1
  007c6	50		 push	 eax
  007c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA
  007cc	83 c0 22	 add	 eax, 34			; 00000022H
  007cf	50		 push	 eax
  007d0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  007d5	83 c4 18	 add	 esp, 24			; 00000018H
$LN18@FMWindowTy:
  007d8	46		 inc	 esi
  007d9	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  007df	83 c3 15	 add	 ebx, 21			; 00000015H
  007e2	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?msgLine@?1??FMWindowType@@YAXXZ@4HA
  007e8	0f 8c 52 ff ff
	ff		 jl	 $LL20@FMWindowTy
$LN19@FMWindowTy:

; 13863: 					}
; 13864: 				}
; 13865: 			}
; 13866: 			j = 0;

  007ee	33 ff		 xor	 edi, edi

; 13867: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  007f0	bb 01 00 00 00	 mov	 ebx, 1
  007f5	33 f6		 xor	 esi, esi
  007f7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL23@FMWindowTy:

; 13868: 				btnId[i] = -2;

  00800	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??FMWindowType@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 13869: 				if (buttonTypeWN & mask) {

  0080a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00810	74 40		 je	 SHORT $LN21@FMWindowTy

; 13870: 					if (j < btnCnt) {

  00812	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??FMWindowType@@YAXXZ@4HA
  00818	7d 38		 jge	 SHORT $LN21@FMWindowTy

; 13871: 						btnId[i] = StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1], FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);

  0081a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA[edi*8+4]
  00821	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??FMWindowType@@YAXXZ@4HA
  00827	6a 02		 push	 2
  00829	ff b4 35 e4 f9
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00830	6a 04		 push	 4
  00832	6a 01		 push	 1
  00834	50		 push	 eax
  00835	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??FMWindowType@@YAXXZ@4PAY01HA[edi*8]
  0083c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??FMWindowType@@YAXXZ@4HA
  00842	50		 push	 eax
  00843	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00848	83 c4 18	 add	 esp, 24			; 00000018H
  0084b	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??FMWindowType@@YAXXZ@4PAHA[esi], eax

; 13872: 						j++;

  00851	47		 inc	 edi
$LN21@FMWindowTy:

; 13867: 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  00852	83 c6 04	 add	 esi, 4
  00855	03 db		 add	 ebx, ebx
  00857	83 fe 18	 cmp	 esi, 24			; 00000018H
  0085a	7c a4		 jl	 SHORT $LL23@FMWindowTy

; 13873: 					}
; 13874: 				}
; 13875: 			}
; 13876: 		}
; 13877: 	}
; 13878: }

  0085c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0085f	5f		 pop	 edi
  00860	5e		 pop	 esi
  00861	33 cd		 xor	 ecx, ebp
  00863	5b		 pop	 ebx
  00864	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00869	8b e5		 mov	 esp, ebp
  0086b	5d		 pop	 ebp
  0086c	c3		 ret	 0
?FMWindowType@@YAXXZ ENDP				; FMWindowType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFMWindowType@@YAXPAD@Z
_TEXT	SEGMENT
_iGSId$1$ = -296					; size = 4
tv387 = -296						; size = 4
_i$1$ = -292						; size = 4
_dpbuf$ = -288						; size = 64
_szGSname$ = -224					; size = 64
_namebuf$ = -160					; size = 32
_tmp$ = -128						; size = 32
_onlinebuf$ = -96					; size = 32
_lvbuf$ = -64						; size = 8
_szPlanetId$ = -56					; size = 8
_momentum$ = -48					; size = 12
_statusbuf$ = -36					; size = 32
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFMWindowType@@YAXPAD@Z PROC			; initFMWindowType, COMDAT

; 13390: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00018	57		 push	 edi

; 13391: 	makeStringFromEscaped(data);

  00019	56		 push	 esi
  0001a	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 13392: 
; 13393: 	selStartLine = 0;
; 13394: 	FMdengonidex = 0;
; 13395: 
; 13396: 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  0001f	6a 40		 push	 64			; 00000040H
  00021	6a 19		 push	 25			; 00000019H
  00023	68 00 01 00 00	 push	 256			; 00000100H
  00028	56		 push	 esi
  00029	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0002e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, 0 ; selStartLine
  00038	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, 0 ; FMdengonidex
  00042	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\time.h

; 522  :             return _time64(_Time);

  00047	68 00 00 00 00	 push	 OFFSET ?FMHoldTime@@3_JA ; FMHoldTime
  0004c	e8 00 00 00 00	 call	 __time64
  00051	83 c4 1c	 add	 esp, 28			; 0000001cH
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 13409: 	char momentum[12] = { 0 };

  00054	c7 45 d8 00 00
	00 00		 mov	 DWORD PTR _momentum$[ebp+8], 0
  0005b	0f 57 c0	 xorps	 xmm0, xmm0

; 13410: #endif
; 13411: 	// å®¶æä¼ éçè¡æ°ä¸º 11 ï¼åä¸è¡æ é¢ï¼ååè¡ä¸ºèµæ(ä½ä¸ºEVENTä¹ç¨)
; 13412: 	// æåä¸è¡åä¸ºâæ¯å¦ç»§ç»­æ°å¢å®¶æäººåçéé¡¹â
; 13413: 	for (int i = 0; i < 11; i++) {

  0005e	33 ff		 xor	 edi, edi
  00060	66 0f d6 45 d0	 movq	 QWORD PTR _momentum$[ebp], xmm0
  00065	89 bd dc fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  0006b	0f 1f 44 00 00	 npad	 5
$LL4@initFMWind:

; 13414: 		if (strlen(msgWN[i]) > 0) {

  00070	8b c7		 mov	 eax, edi
  00072	c1 e0 08	 shl	 eax, 8
  00075	8d 98 00 00 00
	00		 lea	 ebx, DWORD PTR ?msgWN@@3PAY0BAA@DA[eax]
  0007b	8b cb		 mov	 ecx, ebx
  0007d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL45@initFMWind:
  00080	8a 01		 mov	 al, BYTE PTR [ecx]
  00082	41		 inc	 ecx
  00083	84 c0		 test	 al, al
  00085	75 f9		 jne	 SHORT $LL45@initFMWind
  00087	2b ca		 sub	 ecx, edx
  00089	0f 84 3f 03 00
	00		 je	 $LN2@initFMWind

; 13415: 			if (i >= selStartLine) {

  0008f	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00095	0f 8c 33 03 00
	00		 jl	 $LN2@initFMWind

; 13416: 				if (i != 10) {

  0009b	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0009e	74 1a		 je	 SHORT $LN14@initFMWind

; 13417: 					getStringToken(msgWN[i], '|', 6, sizeof(statusbuf) - 1, tmp);

  000a0	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  000a3	50		 push	 eax
  000a4	6a 1f		 push	 31			; 0000001fH
  000a6	6a 06		 push	 6
  000a8	6a 7c		 push	 124			; 0000007cH
  000aa	53		 push	 ebx
  000ab	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000b0	83 c4 14	 add	 esp, 20			; 00000014H

; 13418: 					getStringToken(msgWN[i], '|', 7, sizeof(statusbuf) - 1, statusbuf);

  000b3	b8 07 00 00 00	 mov	 eax, 7

; 13419: 				}

  000b8	eb 05		 jmp	 SHORT $LN15@initFMWind
$LN14@initFMWind:

; 13420: 				else
; 13421: 					getStringToken(msgWN[i], '|', 3, sizeof(statusbuf) - 1, statusbuf);

  000ba	b8 03 00 00 00	 mov	 eax, 3
$LN15@initFMWind:

; 13422: 				// å­ç INDEX -> 1~10  
; 13423: 				FMmsgWN[i - (selStartLine - 1)] = atoi(statusbuf);

  000bf	8d 4d dc	 lea	 ecx, DWORD PTR _statusbuf$[ebp]
  000c2	51		 push	 ecx
  000c3	6a 1f		 push	 31			; 0000001fH
  000c5	50		 push	 eax
  000c6	6a 7c		 push	 124			; 0000007cH
  000c8	53		 push	 ebx
  000c9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000ce	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  000d1	50		 push	 eax
  000d2	e8 00 00 00 00	 call	 _atoi
  000d7	8b cf		 mov	 ecx, edi
  000d9	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  000df	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?FMmsgWN@@3PAHA[ecx*4+4], eax

; 13424: 				FMelderFlag[i - (selStartLine - 1)] = atoi(tmp);

  000e6	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  000e9	50		 push	 eax
  000ea	e8 00 00 00 00	 call	 _atoi
  000ef	8b cf		 mov	 ecx, edi
  000f1	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?selStartLine@@3HA ; selStartLine
  000f7	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?FMelderFlag@@3PAHA[ecx*4+4], eax

; 13425: 				getStringToken(msgWN[i], '|', 1, sizeof(tmp) - 1, tmp);

  000fe	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  00101	50		 push	 eax
  00102	6a 1f		 push	 31			; 0000001fH
  00104	6a 01		 push	 1
  00106	6a 7c		 push	 124			; 0000007cH
  00108	53		 push	 ebx
  00109	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13426: 				FMpidWN[i - (selStartLine - 1)] = atoi(tmp);

  0010e	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  00111	8b f7		 mov	 esi, edi
  00113	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 _atoi
  0011f	89 04 b5 04 00
	00 00		 mov	 DWORD PTR ?FMpidWN@@3PAHA[esi*4+4], eax

; 13427: 				getStringToken(msgWN[i], '|', 2, sizeof(FMnameWN[i - (selStartLine - 1)]) - 1,

  00126	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  00129	8d 04 85 14 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4+20]
  00130	50		 push	 eax
  00131	6a 13		 push	 19			; 00000013H
  00133	6a 02		 push	 2
  00135	6a 7c		 push	 124			; 0000007cH
  00137	53		 push	 ebx
  00138	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0013d	83 c4 48	 add	 esp, 72			; 00000048H

; 13428: 					FMnameWN[i - (selStartLine - 1)]);
; 13429: 				//å¤çå­ä¸²
; 13430: 				if (i < 10) {

  00140	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _namebuf$[ebp]
  00146	50		 push	 eax
  00147	6a 1f		 push	 31			; 0000001fH
  00149	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  0014c	0f 83 eb 01 00
	00		 jae	 $LN16@initFMWind

; 13431: 					getStringToken(msgWN[i], '|', 2, sizeof(namebuf) - 1, namebuf);

  00152	6a 02		 push	 2
  00154	6a 7c		 push	 124			; 0000007cH
  00156	53		 push	 ebx
  00157	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13432: 					getStringToken(msgWN[i], '|', 3, sizeof(lvbuf) - 1, lvbuf);

  0015c	8d 45 c0	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  0015f	50		 push	 eax
  00160	6a 07		 push	 7
  00162	6a 03		 push	 3
  00164	6a 7c		 push	 124			; 0000007cH
  00166	53		 push	 ebx
  00167	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13433: 					getStringToken(msgWN[i], '|', 4, sizeof(onlinebuf) - 1, onlinebuf);

  0016c	8d 45 a0	 lea	 eax, DWORD PTR _onlinebuf$[ebp]
  0016f	50		 push	 eax
  00170	6a 1f		 push	 31			; 0000001fH
  00172	6a 04		 push	 4
  00174	6a 7c		 push	 124			; 0000007cH
  00176	53		 push	 ebx
  00177	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13434: 					onlineflag = atoi(onlinebuf);

  0017c	8d 45 a0	 lea	 eax, DWORD PTR _onlinebuf$[ebp]
  0017f	50		 push	 eax
  00180	e8 00 00 00 00	 call	 _atoi
  00185	83 c4 40	 add	 esp, 64			; 00000040H

; 13435: 					if (onlineflag > 0) {

  00188	85 c0		 test	 eax, eax
  0018a	7e 12		 jle	 SHORT $LN18@initFMWind

; 13436: 						strcpy(onlinebuf, "ì ì");

  0018c	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04GMJLIJKP@?A?$KC?$LM?S@
  00191	89 45 a0	 mov	 DWORD PTR _onlinebuf$[ebp], eax
  00194	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_04GMJLIJKP@?A?$KC?$LM?S@+4
  00199	88 45 a4	 mov	 BYTE PTR _onlinebuf$[ebp+4], al

; 13437: 					}

  0019c	eb 1a		 jmp	 SHORT $LN19@initFMWind
$LN18@initFMWind:

; 13438: 					else {
; 13439: 						strcpy(onlinebuf, "ë¯¸ì ì");

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@
  001a3	89 45 a0	 mov	 DWORD PTR _onlinebuf$[ebp], eax
  001a6	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@+4
  001ac	66 89 45 a4	 mov	 WORD PTR _onlinebuf$[ebp+4], ax
  001b0	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06OEBCHFHA@?$LJ?L?A?$KC?$LM?S@+6
  001b5	88 45 a6	 mov	 BYTE PTR _onlinebuf$[ebp+6], al
$LN19@initFMWind:

; 13440: 					}
; 13441: 
; 13442: 					getStringToken(msgWN[i], '|', 5, sizeof(dpbuf) - 1, dpbuf);

  001b8	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _dpbuf$[ebp]
  001be	50		 push	 eax
  001bf	6a 3f		 push	 63			; 0000003fH
  001c1	6a 05		 push	 5
  001c3	6a 7c		 push	 124			; 0000007cH
  001c5	53		 push	 ebx
  001c6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13443: 					getStringToken(msgWN[i], '|', 7, sizeof(statusbuf) - 1, statusbuf);

  001cb	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  001ce	50		 push	 eax
  001cf	6a 1f		 push	 31			; 0000001fH
  001d1	6a 07		 push	 7
  001d3	6a 7c		 push	 124			; 0000007cH
  001d5	53		 push	 ebx
  001d6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13444: 					int_status = atoi(statusbuf);

  001db	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  001de	50		 push	 eax
  001df	e8 00 00 00 00	 call	 _atoi

; 13445: 					switch (int_status) {

  001e4	48		 dec	 eax
  001e5	83 c4 2c	 add	 esp, 44			; 0000002cH
  001e8	83 f8 03	 cmp	 eax, 3
  001eb	77 43		 ja	 SHORT $LN24@initFMWind
  001ed	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN46@initFMWind[eax*4]
$LN20@initFMWind:

; 13446: 						// å·² å  å¥	
; 13447: 					case FMMEMBER_MEMBER:		   	     // ä¸è¬æå
; 13448: 						strcpy(statusbuf, "ë¶ ì¡± ì");

  001f4	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08KOCLKJHI@?$LK?N?5?A?$LH?5?$LP?x@
  001fc	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08KOCLKJHI@?$LK?N?5?A?$LH?5?$LP?x@+8

; 13449: 						break;

  00201	eb 3a		 jmp	 SHORT $LN48@initFMWind
$LN21@initFMWind:

; 13450: 					case FMMEMBER_LEADER:				 // å®¶ææé¿
; 13451: 						strcpy(statusbuf, "ì¡±    ì¥");

  00203	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08HBDNAOJN@?A?$LH?5?5?5?5?$MA?e@
  0020b	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08HBDNAOJN@?A?$LH?5?5?5?5?$MA?e@+8

; 13452: 						break;

  00210	eb 2b		 jmp	 SHORT $LN48@initFMWind
$LN22@initFMWind:

; 13453: 					case FMMEMBER_ELDER:				 // é¿è
; 13454: 						strcpy(statusbuf, "ì¥    ë¡");

  00212	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@
  0021a	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@+8

; 13455: 						break;

  0021f	eb 1c		 jmp	 SHORT $LN48@initFMWind
$LN23@initFMWind:

; 13456: 						/*							case FMMEMBER_ELDER:				 // é¿è
; 13457: 														strcpy(statusbuf, "é¿    è");
; 13458: 														break;
; 13459: 													case FMMEMBER_INVITE:				 // ç¥­å¸
; 13460: 														strcpy(statusbuf, "ç¥­    å¸");
; 13461: 														break;
; 13462: 													case FMMEMBER_BAILEE:				 // è´¢å¡é¿
; 13463: 														strcpy(statusbuf, "è´¢ å¡ é¿");
; 13464: 														break;*/
; 13465: 					case FMMEMBER_APPLY:				 // ç³è¯·å å¥								
; 13466: 						strcpy(statusbuf, "ê°ìì ì²­");

  00221	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08EPNLIAJH@?$LA?$KB?$MA?T?$LN?E?C?$LL@
  00229	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08EPNLIAJH@?$LA?$KB?$MA?T?$LN?E?C?$LL@+8

; 13467: 						break;

  0022e	eb 0d		 jmp	 SHORT $LN48@initFMWind
$LN24@initFMWind:

; 13468: 						/*							case FMMEMBER_VICELEADER:            // å¯æé¿
; 13469: 														strcpy(statusbuf, "å¯ æ é¿");
; 13470: 														break;*/
; 13471: 					default:							 // é    åº	
; 13472: 						strcpy(statusbuf, "í    í´");

  00230	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@
  00238	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@+8
$LN48@initFMWind:

; 13473: 						break;
; 13474: 					}
; 13475: #ifdef _FM_MODIFY
; 13476: 					// å¤çæçåç§°
; 13477: 					getStringToken(msgWN[i], '|', 8, sizeof(szGSname) - 1, szGSname);

  0023d	88 45 e4	 mov	 BYTE PTR _statusbuf$[ebp+8], al
  00240	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _szGSname$[ebp]
  00246	50		 push	 eax
  00247	6a 3f		 push	 63			; 0000003fH
  00249	6a 08		 push	 8
  0024b	6a 7c		 push	 124			; 0000007cH
  0024d	53		 push	 ebx
  0024e	66 0f d6 45 dc	 movq	 QWORD PTR _statusbuf$[ebp], xmm0
  00253	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13478: 					iGSId = atoi(szGSname);

  00258	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _szGSname$[ebp]
  0025e	50		 push	 eax
  0025f	e8 00 00 00 00	 call	 _atoi
  00264	83 c4 18	 add	 esp, 24			; 00000018H
  00267	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _iGSId$1$[ebp], eax

; 13479: 					if (iGSId > 0) {

  0026d	85 c0		 test	 eax, eax
  0026f	0f 8e b2 00 00
	00		 jle	 $LN25@initFMWind

; 13480: 						for (int j = 0; j < MAX_GMSV; j++) {

  00275	33 ff		 xor	 edi, edi
  00277	be 01 00 00 00	 mov	 esi, OFFSET ?gmsv@@3PAUgameserver@@A+1
  0027c	0f 1f 40 00	 npad	 4
$LL9@initFMWind:

; 13481: 							if (gmsv[j].used == '1') {

  00280	80 7e ff 31	 cmp	 BYTE PTR [esi-1], 49	; 00000031H
  00284	75 24		 jne	 SHORT $LN7@initFMWind

; 13482: 								getStringToken(gmsv[j].ipaddr, '.', 4, sizeof(szPlanetId) - 1, szPlanetId);

  00286	8d 45 c8	 lea	 eax, DWORD PTR _szPlanetId$[ebp]
  00289	50		 push	 eax
  0028a	6a 07		 push	 7
  0028c	6a 04		 push	 4
  0028e	6a 2e		 push	 46			; 0000002eH
  00290	56		 push	 esi
  00291	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13483: 								if (iGSId == atoi(szPlanetId)) {

  00296	8d 45 c8	 lea	 eax, DWORD PTR _szPlanetId$[ebp]
  00299	50		 push	 eax
  0029a	e8 00 00 00 00	 call	 _atoi
  0029f	83 c4 18	 add	 esp, 24			; 00000018H
  002a2	39 85 d8 fe ff
	ff		 cmp	 DWORD PTR _iGSId$1$[ebp], eax
  002a8	74 5d		 je	 SHORT $LN37@initFMWind
$LN7@initFMWind:

; 13480: 						for (int j = 0; j < MAX_GMSV; j++) {

  002aa	81 c6 00 01 00
	00		 add	 esi, 256		; 00000100H
  002b0	47		 inc	 edi
  002b1	81 fe 01 96 00
	00		 cmp	 esi, OFFSET ?gmsv@@3PAUgameserver@@A+38401
  002b7	7c c7		 jl	 SHORT $LL9@initFMWind
$LN47@initFMWind:

; 13491: 
; 13492: #ifndef _NEW_MANOR_LAW
; 13493: 					sprintf(msgWN[i], "%-9s%-18s%6s%13s%10s%6s", onlinebuf, namebuf, lvbuf, dpbuf, statusbuf, szGSname);
; 13494: #else
; 13495: 					getStringToken(msgWN[i], '|', 9, sizeof(momentum) - 1, momentum);

  002b9	8b bd dc fe ff
	ff		 mov	 edi, DWORD PTR _i$1$[ebp]
$LN26@initFMWind:
  002bf	8d 45 d0	 lea	 eax, DWORD PTR _momentum$[ebp]
  002c2	50		 push	 eax
  002c3	6a 0b		 push	 11			; 0000000bH
  002c5	6a 09		 push	 9
  002c7	6a 7c		 push	 124			; 0000007cH
  002c9	53		 push	 ebx
  002ca	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13496: 					sprintf(msgWN[i], "%-9s%-18s%3s%12s%12s%10s%7s", onlinebuf, namebuf, lvbuf, dpbuf, momentum, statusbuf, szGSname);

  002cf	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _szGSname$[ebp]
  002d5	50		 push	 eax
  002d6	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  002d9	50		 push	 eax
  002da	8d 45 d0	 lea	 eax, DWORD PTR _momentum$[ebp]
  002dd	50		 push	 eax
  002de	8d 85 e0 fe ff
	ff		 lea	 eax, DWORD PTR _dpbuf$[ebp]
  002e4	50		 push	 eax
  002e5	8d 45 c0	 lea	 eax, DWORD PTR _lvbuf$[ebp]
  002e8	50		 push	 eax
  002e9	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _namebuf$[ebp]
  002ef	50		 push	 eax
  002f0	8d 45 a0	 lea	 eax, DWORD PTR _onlinebuf$[ebp]
  002f3	50		 push	 eax
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@HGDMDEHB@?$CF?99s?$CF?918s?$CF3s?$CF12s?$CF12s?$CF10s?$CF7s@
  002f9	53		 push	 ebx
  002fa	e8 00 00 00 00	 call	 _sprintf
  002ff	83 c4 38	 add	 esp, 56			; 00000038H

; 13497: #endif
; 13498: 
; 13499: #else
; 13500: 					sprintf(msgWN[i], "%-12s%-18s%3s%13s%10s", onlinebuf, namebuf, lvbuf, dpbuf, statusbuf);
; 13501: #endif
; 13502: 				}

  00302	e9 c7 00 00 00	 jmp	 $LN2@initFMWind
$LN37@initFMWind:

; 13484: 									sprintf(szGSname, "%s", gmsv[j].name);

  00307	c1 e7 08	 shl	 edi, 8
  0030a	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _szGSname$[ebp]
  00310	81 c7 c0 00 00
	00		 add	 edi, OFFSET ?gmsv@@3PAUgameserver@@A+192
  00316	57		 push	 edi
  00317	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0031c	50		 push	 eax
  0031d	e8 00 00 00 00	 call	 _sprintf
  00322	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13485: 									break;
; 13486: 								}
; 13487: 							}
; 13488: 						}
; 13489: 					}

  00325	eb 92		 jmp	 SHORT $LN47@initFMWind
$LN25@initFMWind:

; 13490: 					else sprintf(szGSname, "ìë¤");

  00327	8d 85 20 ff ff
	ff		 lea	 eax, DWORD PTR _szGSname$[ebp]
  0032d	68 00 00 00 00	 push	 OFFSET ??_C@_04EHFFKIEF@?$LO?x?$LE?Y@
  00332	50		 push	 eax
  00333	e8 00 00 00 00	 call	 _sprintf
  00338	83 c4 08	 add	 esp, 8
  0033b	eb 82		 jmp	 SHORT $LN26@initFMWind
$LN16@initFMWind:

; 13503: 				else {
; 13504: 					getStringToken(msgWN[i], '|', 1, sizeof(namebuf) - 1, namebuf);

  0033d	6a 01		 push	 1
  0033f	6a 7c		 push	 124			; 0000007cH
  00341	53		 push	 ebx
  00342	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13505: 					getStringToken(msgWN[i], '|', 2, sizeof(tmp) - 1, tmp);

  00347	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  0034a	50		 push	 eax
  0034b	6a 1f		 push	 31			; 0000001fH
  0034d	6a 02		 push	 2
  0034f	6a 7c		 push	 124			; 0000007cH
  00351	53		 push	 ebx
  00352	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13506: 					FMdengonidex = atoi(tmp);

  00357	8d 45 80	 lea	 eax, DWORD PTR _tmp$[ebp]
  0035a	50		 push	 eax
  0035b	e8 00 00 00 00	 call	 _atoi
  00360	a3 00 00 00 00	 mov	 DWORD PTR ?FMdengonidex@@3HA, eax ; FMdengonidex

; 13507: 					getStringToken(msgWN[i], '|', 3, sizeof(statusbuf) - 1, statusbuf);

  00365	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  00368	50		 push	 eax
  00369	6a 1f		 push	 31			; 0000001fH
  0036b	6a 03		 push	 3
  0036d	6a 7c		 push	 124			; 0000007cH
  0036f	53		 push	 ebx
  00370	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00375	83 c4 40	 add	 esp, 64			; 00000040H

; 13508: 					int_status = atoi(statusbuf);

  00378	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  0037b	50		 push	 eax
  0037c	e8 00 00 00 00	 call	 _atoi
  00381	83 c4 04	 add	 esp, 4

; 13509: 					switch (int_status) {

  00384	83 e8 00	 sub	 eax, 0
  00387	74 15		 je	 SHORT $LN30@initFMWind
  00389	83 e8 01	 sub	 eax, 1
  0038c	75 27		 jne	 SHORT $LN31@initFMWind

; 13510: 					case 1:  // ç»§ç»­å¬å
; 13511: 						strcpy(statusbuf, "ê°ì ì¹ì¸");

  0038e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09LDBPGJOA@?$LA?$KB?$MA?T?5?$LN?B?$MA?N@
  00396	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_09LDBPGJOA@?$LA?$KB?$MA?T?5?$LN?B?$MA?N@+8

; 13512: 						break;

  0039c	eb 0e		 jmp	 SHORT $LN49@initFMWind
$LN30@initFMWind:

; 13513: 					case 0:  // ä¸­æ­¢å¬å								
; 13514: 						strcpy(statusbuf, "ê°ì ê±°ë¶");

  0039e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_09IPDOHIGO@?$LA?$KB?$MA?T?5?$LA?E?$LK?N@
  003a6	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_09IPDOHIGO@?$LA?$KB?$MA?T?5?$LA?E?$LK?N@+8
$LN49@initFMWind:

; 13515: 						break;
; 13516: 					default:
; 13517: 						break;
; 13518: 					}
; 13519: 					sprintf(msgWN[i], " %-20s                         %s", namebuf, statusbuf);

  003ac	66 89 45 e4	 mov	 WORD PTR _statusbuf$[ebp+8], ax
  003b0	66 0f d6 45 dc	 movq	 QWORD PTR _statusbuf$[ebp], xmm0
$LN31@initFMWind:
  003b5	8d 45 dc	 lea	 eax, DWORD PTR _statusbuf$[ebp]
  003b8	50		 push	 eax
  003b9	8d 85 60 ff ff
	ff		 lea	 eax, DWORD PTR _namebuf$[ebp]
  003bf	50		 push	 eax
  003c0	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@OOGHFIO@?5?$CF?920s?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
  003c5	53		 push	 ebx
  003c6	e8 00 00 00 00	 call	 _sprintf
  003cb	83 c4 10	 add	 esp, 16			; 00000010H
$LN2@initFMWind:

; 13410: #endif
; 13411: 	// å®¶æä¼ éçè¡æ°ä¸º 11 ï¼åä¸è¡æ é¢ï¼ååè¡ä¸ºèµæ(ä½ä¸ºEVENTä¹ç¨)
; 13412: 	// æåä¸è¡åä¸ºâæ¯å¦ç»§ç»­æ°å¢å®¶æäººåçéé¡¹â
; 13413: 	for (int i = 0; i < 11; i++) {

  003ce	47		 inc	 edi
  003cf	89 bd dc fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], edi
  003d5	83 ff 0b	 cmp	 edi, 11			; 0000000bH
  003d8	0f 8c 92 fc ff
	ff		 jl	 $LL4@initFMWind

; 13520: 				}
; 13521: 			}
; 13522: 		}
; 13523: 	}
; 13524: }

  003de	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003e1	5f		 pop	 edi
  003e2	5e		 pop	 esi
  003e3	33 cd		 xor	 ecx, ebp
  003e5	5b		 pop	 ebx
  003e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003eb	8b e5		 mov	 esp, ebp
  003ed	5d		 pop	 ebp
  003ee	c3		 ret	 0
  003ef	90		 npad	 1
$LN46@initFMWind:
  003f0	00 00 00 00	 DD	 $LN20@initFMWind
  003f4	00 00 00 00	 DD	 $LN23@initFMWind
  003f8	00 00 00 00	 DD	 $LN21@initFMWind
  003fc	00 00 00 00	 DD	 $LN22@initFMWind
?initFMWindowType@@YAXPAD@Z ENDP			; initFMWindowType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyLeaderChangeA@@YAXPAD@Z
_TEXT	SEGMENT
_buf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFamilyLeaderChangeA@@YAXPAD@Z PROC			; initFamilyLeaderChangeA, COMDAT

; 17606: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 17607: 	char buf[64];
; 17608: 
; 17609: 	//windowTypeWN = -1;
; 17610: 	DeathAction(ptActMenuWin);

  00011	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00017	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  0001a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17611: 	ptActMenuWin = NULL;
; 17612: 
; 17613: 	getStringToken(data, '|', 1, sizeof(buf) - 1, buf);

  0001f	8d 45 bc	 lea	 eax, DWORD PTR _buf$[ebp]
  00022	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0002c	50		 push	 eax
  0002d	6a 3f		 push	 63			; 0000003fH
  0002f	6a 01		 push	 1
  00031	6a 7c		 push	 124			; 0000007cH
  00033	56		 push	 esi
  00034	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17614: 	strcpy(oldLeaderName, makeStringFromEscaped(buf));

  00039	8d 45 bc	 lea	 eax, DWORD PTR _buf$[ebp]
  0003c	50		 push	 eax
  0003d	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00042	ba 00 00 00 00	 mov	 edx, OFFSET ?oldLeaderName@@3PADA ; oldLeaderName
  00047	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004a	2b d0		 sub	 edx, eax
  0004c	0f 1f 40 00	 npad	 4
$LL3@initFamily:
  00050	8a 08		 mov	 cl, BYTE PTR [eax]
  00052	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00055	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00059	84 c9		 test	 cl, cl
  0005b	75 f3		 jne	 SHORT $LL3@initFamily

; 17615: 	getStringToken(data, '|', 2, sizeof(buf) - 1, buf);

  0005d	8d 45 bc	 lea	 eax, DWORD PTR _buf$[ebp]
  00060	50		 push	 eax
  00061	6a 3f		 push	 63			; 0000003fH
  00063	6a 02		 push	 2
  00065	6a 7c		 push	 124			; 0000007cH
  00067	56		 push	 esi
  00068	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17616: 	oldLeaderIndex = atoi(buf);

  0006d	8d 45 bc	 lea	 eax, DWORD PTR _buf$[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 _atoi

; 17617: }

  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	83 c4 18	 add	 esp, 24			; 00000018H
  0007c	33 cd		 xor	 ecx, ebp
  0007e	a3 00 00 00 00	 mov	 DWORD PTR ?oldLeaderIndex@@3HA, eax ; oldLeaderIndex
  00083	5e		 pop	 esi
  00084	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00089	8b e5		 mov	 esp, ebp
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?initFamilyLeaderChangeA@@YAXPAD@Z ENDP			; initFamilyLeaderChangeA
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyLeaderChangeAWN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -324						; size = 256
_buf2$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?familyLeaderChangeAWN@@YAXXZ PROC			; familyLeaderChangeAWN, COMDAT

; 17620: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 44 01 00
	00		 sub	 esp, 324		; 00000144H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 17621: 	static int winX, winY;
; 17622: 	static int winW, winH;
; 17623: 	static int fontId[2];
; 17624: 	int selId;
; 17625: 	char buf[256], buf2[64];
; 17626: 	int i;
; 17627: 
; 17628: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 85 8d 00 00
	00		 jne	 $LN26@familyLead

; 17629: 	{
; 17630: 		winW = 6;
; 17631: 		winH = 3;
; 17632: 		winX = (640 - winW * 64) / 2;
; 17633: 		winY = (456 - winH * 48) / 2;
; 17634: 
; 17635: 
; 17636: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 03		 push	 3
  00026	6a 06		 push	 6
  00028	68 9c 00 00 00	 push	 156			; 0000009cH
  0002d	68 80 00 00 00	 push	 128			; 00000080H
  00032	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winW@?1??familyLeaderChangeAWN@@YAXXZ@4HA, 6
  0003c	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?winH@?1??familyLeaderChangeAWN@@YAXXZ@4HA, 3
  00046	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA, 128 ; 00000080H
  00050	c7 05 00 00 00
	00 9c 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA, 156 ; 0000009cH
  0005a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 17637: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17638: 		winX = ptActMenuWin->x;
; 17639: 		winY = ptActMenuWin->y;
; 17640: #endif
; 17641: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17642: 			fontId[i] = -2;
; 17643: 
; 17644: 		play_se(202, 320, 240);

  0005f	68 f0 00 00 00	 push	 240			; 000000f0H
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00069	68 40 01 00 00	 push	 320			; 00000140H
  0006e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00071	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00074	68 ca 00 00 00	 push	 202			; 000000caH
  00079	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA, ecx
  0007f	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA, eax
  00084	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA, -2 ; fffffffeH
  0008e	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA+4, -2 ; fffffffeH
  00098	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0009d	83 c4 24	 add	 esp, 36			; 00000024H

; 17645: 	}
; 17646: 
; 17647: 	if (ptActMenuWin != NULL)

  000a0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000a7	0f 84 d7 01 00
	00		 je	 $LN18@familyLead
$LN26@familyLead:
  000ad	56		 push	 esi

; 17648: 	{
; 17649: 		selId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  000ae	6a 02		 push	 2
  000b0	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA
  000b5	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000ba	83 c4 08	 add	 esp, 8
  000bd	8b f0		 mov	 esi, eax

; 17650: 
; 17651: 		if (CheckMenuFlag()
; 17652: 			|| (joy_trg[0] & JOY_ESC)
; 17653: 			|| actBtn == 1
; 17654: 			|| menuBtn == 1
; 17655: 			|| disconnectServerFlag == TRUE
; 17656: 			|| wnCloseFlag == 1)

  000bf	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000c4	85 c0		 test	 eax, eax
  000c6	75 33		 jne	 SHORT $LN10@familyLead
  000c8	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000d2	75 27		 jne	 SHORT $LN10@familyLead
  000d4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000dc	74 1d		 je	 SHORT $LN10@familyLead
  000de	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000e6	74 13		 je	 SHORT $LN10@familyLead
  000e8	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000ef	74 0a		 je	 SHORT $LN10@familyLead
  000f1	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f9	75 05		 jne	 SHORT $LN9@familyLead
$LN10@familyLead:

; 17657: 		{
; 17658: 			//id = 100;
; 17659: 			closeFamilyLeaderChangeWN();

  000fb	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
$LN9@familyLead:

; 17660: 		}
; 17661: 
; 17662: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00100	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00107	0f 84 ab 00 00
	00		 je	 $LN5@familyLead

; 17663: 
; 17664: 			switch (selId) {

  0010d	83 ee 00	 sub	 esi, 0
  00110	74 69		 je	 SHORT $LN12@familyLead
  00112	83 ee 01	 sub	 esi, 1
  00115	0f 85 9d 00 00
	00		 jne	 $LN5@familyLead

; 17674: 				return;
; 17675: 			case 1:
; 17676: 				sprintf(buf, "L|CHANGE|A|1|%s|%d",

  0011b	ff 35 00 00 00
	00		 push	 DWORD PTR ?oldLeaderIndex@@3HA ; oldLeaderIndex
  00121	8d 45 bc	 lea	 eax, DWORD PTR _buf2$[ebp]
  00124	6a 40		 push	 64			; 00000040H
  00126	50		 push	 eax
  00127	68 00 00 00 00	 push	 OFFSET ?oldLeaderName@@3PADA ; oldLeaderName
  0012c	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00131	83 c4 0c	 add	 esp, 12			; 0000000cH
  00134	50		 push	 eax
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JJJPGLGO@L?$HMCHANGE?$HMA?$HM1?$HM?$CFs?$HM?$CFd@
$LN29@familyLead:

; 17671: 				else
; 17672: 					old_lssproto_FM_send(sockfd, buf);
; 17673: 				closeFamilyLeaderChangeWN();

  0013a	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _sprintf
  00146	83 c4 10	 add	 esp, 16			; 00000010H
  00149	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0014f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00156	50		 push	 eax
  00157	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0015d	74 3d		 je	 SHORT $LN16@familyLead
  0015f	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00164	83 c4 08	 add	 esp, 8
  00167	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
  0016c	5e		 pop	 esi

; 17698: 				"  ì  ë½  ", 2);
; 17699: 
; 17700: 		}
; 17701: 
; 17702: 	}
; 17703: 
; 17704: }

  0016d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00170	33 cd		 xor	 ecx, ebp
  00172	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00177	8b e5		 mov	 esp, ebp
  00179	5d		 pop	 ebp
  0017a	c3		 ret	 0
$LN12@familyLead:

; 17665: 			case 0:
; 17666: 				sprintf(buf, "L|CHANGE|A|0|%s|%d",

  0017b	ff 35 00 00 00
	00		 push	 DWORD PTR ?oldLeaderIndex@@3HA ; oldLeaderIndex
  00181	8d 45 bc	 lea	 eax, DWORD PTR _buf2$[ebp]
  00184	6a 40		 push	 64			; 00000040H
  00186	50		 push	 eax
  00187	68 00 00 00 00	 push	 OFFSET ?oldLeaderName@@3PADA ; oldLeaderName
  0018c	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00191	83 c4 0c	 add	 esp, 12			; 0000000cH
  00194	50		 push	 eax
  00195	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FFDFGLPA@L?$HMCHANGE?$HMA?$HM0?$HM?$CFs?$HM?$CFd@

; 17667: 					makeEscapeString(oldLeaderName, buf2, sizeof(buf2)),
; 17668: 					oldLeaderIndex);
; 17669: 				if (bNewServer)
; 17670: 					lssproto_FM_send(sockfd, buf);

  0019a	eb 9e		 jmp	 SHORT $LN29@familyLead
$LN16@familyLead:

; 17671: 				else
; 17672: 					old_lssproto_FM_send(sockfd, buf);
; 17673: 				closeFamilyLeaderChangeWN();

  0019c	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  001a1	83 c4 08	 add	 esp, 8
  001a4	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
  001a9	5e		 pop	 esi

; 17698: 				"  ì  ë½  ", 2);
; 17699: 
; 17700: 		}
; 17701: 
; 17702: 	}
; 17703: 
; 17704: }

  001aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ad	33 cd		 xor	 ecx, ebp
  001af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
$LN5@familyLead:

; 17677: 					makeEscapeString(oldLeaderName, buf2, sizeof(buf2)),
; 17678: 					oldLeaderIndex);
; 17679: 				if (bNewServer)
; 17680: 					lssproto_FM_send(sockfd, buf);
; 17681: 				else
; 17682: 					old_lssproto_FM_send(sockfd, buf);
; 17683: 				closeFamilyLeaderChangeWN();
; 17684: 				return;
; 17685: 			}
; 17686: 
; 17687: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  001b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001bd	85 c0		 test	 eax, eax
  001bf	0f 84 be 00 00
	00		 je	 $LN27@familyLead
  001c5	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001c9	0f 8c b4 00 00
	00		 jl	 $LN27@familyLead

; 17688: 		{
; 17689: 			sprintf(buf, "%s ìê² ì¡±ì¥ì ììí©ëë¤ï¼", oldLeaderName);

  001cf	68 00 00 00 00	 push	 OFFSET ?oldLeaderName@@3PADA ; oldLeaderName
  001d4	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001da	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@JJMKEJNK@?$CFs?5?$LP?$KB?$LA?T?5?A?$LH?$MA?e?$MA?$LL?5?$MA?$KH?$MA?S?G?U?$LE?O?$LE?Y?$KD?$KM@
  001df	50		 push	 eax
  001e0	e8 00 00 00 00	 call	 _sprintf

; 17690: 			StockFontBuffer(winX + 50, winY + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  001e5	6a 00		 push	 0
  001e7	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001ed	50		 push	 eax
  001ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  001f3	6a 00		 push	 0
  001f5	83 c0 1e	 add	 eax, 30			; 0000001eH
  001f8	6a 01		 push	 1
  001fa	50		 push	 eax
  001fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  00200	83 c0 32	 add	 eax, 50			; 00000032H
  00203	50		 push	 eax
  00204	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17691: 				buf, 0);
; 17692: 			StockFontBuffer(winX + 50, winY + 60, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00209	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  0020e	6a 00		 push	 0
  00210	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HPIFLCKK@?$LM?v?$LG?t?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
  00215	6a 00		 push	 0
  00217	83 c0 3c	 add	 eax, 60			; 0000003cH
  0021a	6a 01		 push	 1
  0021c	50		 push	 eax
  0021d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  00222	83 c0 32	 add	 eax, 50			; 00000032H
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17693: 				"ìë½íìê² ìµëê¹ï¼", 0);
; 17694: 
; 17695: 			fontId[0] = StockFontBuffer(winX + 200, winY + 105, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  00230	6a 02		 push	 2
  00232	68 00 00 00 00	 push	 OFFSET ??_C@_09KOHGDBKE@?5?5?$LA?E?5?$MA?$PN?5?5@
  00237	6a 04		 push	 4
  00239	83 c0 69	 add	 eax, 105		; 00000069H
  0023c	6a 01		 push	 1
  0023e	50		 push	 eax
  0023f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  00244	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00249	50		 push	 eax
  0024a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0024f	83 c4 54	 add	 esp, 84			; 00000054H
  00252	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA, eax

; 17696: 				"  ê±° ì   ", 2);
; 17697: 			fontId[1] = StockFontBuffer(winX + 280, winY + 105, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  00257	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  0025c	83 c0 69	 add	 eax, 105		; 00000069H
  0025f	6a 02		 push	 2
  00261	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DJLGMOPM@?5?5?$LM?v?5?5?$LG?t?5?5@
  00266	6a 04		 push	 4
  00268	6a 01		 push	 1
  0026a	50		 push	 eax
  0026b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeAWN@@YAXXZ@4HA
  00270	05 18 01 00 00	 add	 eax, 280		; 00000118H
  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0027b	83 c4 18	 add	 esp, 24			; 00000018H
  0027e	a3 04 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeAWN@@YAXXZ@4PAHA+4, eax
$LN27@familyLead:
  00283	5e		 pop	 esi
$LN18@familyLead:

; 17698: 				"  ì  ë½  ", 2);
; 17699: 
; 17700: 		}
; 17701: 
; 17702: 	}
; 17703: 
; 17704: }

  00284	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00287	33 cd		 xor	 ecx, ebp
  00289	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0028e	8b e5		 mov	 esp, ebp
  00290	5d		 pop	 ebp
  00291	c3		 ret	 0
?familyLeaderChangeAWN@@YAXXZ ENDP			; familyLeaderChangeAWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyLeaderChangeQWN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?familyLeaderChangeQWN@@YAXXZ PROC			; familyLeaderChangeQWN, COMDAT

; 17527: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 17528: 	static int winX, winY;
; 17529: 	static int winW, winH;
; 17530: 	static int fontId[2];
; 17531: 	int selId;
; 17532: 	char buf[256];
; 17533: 	int i;
; 17534: 
; 17535: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 85 8d 00 00
	00		 jne	 $LN24@familyLead

; 17536: 	{
; 17537: 		winW = 6;
; 17538: 		winH = 2;
; 17539: 		winX = (640 - winW * 64) / 2;
; 17540: 		winY = (456 - winH * 48) / 2;
; 17541: 
; 17542: 
; 17543: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 02		 push	 2
  00026	6a 06		 push	 6
  00028	68 b4 00 00 00	 push	 180			; 000000b4H
  0002d	68 80 00 00 00	 push	 128			; 00000080H
  00032	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winW@?1??familyLeaderChangeQWN@@YAXXZ@4HA, 6
  0003c	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?winH@?1??familyLeaderChangeQWN@@YAXXZ@4HA, 2
  00046	c7 05 00 00 00
	00 80 00 00 00	 mov	 DWORD PTR ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA, 128 ; 00000080H
  00050	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA, 180 ; 000000b4H
  0005a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 17544: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17545: 		winX = ptActMenuWin->x;
; 17546: 		winY = ptActMenuWin->y;
; 17547: #endif
; 17548: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17549: 			fontId[i] = -2;
; 17550: 
; 17551: 		play_se(202, 320, 240);

  0005f	68 f0 00 00 00	 push	 240			; 000000f0H
  00064	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00069	68 40 01 00 00	 push	 320			; 00000140H
  0006e	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00071	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00074	68 ca 00 00 00	 push	 202			; 000000caH
  00079	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA, ecx
  0007f	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA, eax
  00084	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA, -2 ; fffffffeH
  0008e	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA+4, -2 ; fffffffeH
  00098	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0009d	83 c4 24	 add	 esp, 36			; 00000024H

; 17552: 	}
; 17553: 
; 17554: 	if (ptActMenuWin != NULL)

  000a0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000a7	0f 84 95 01 00
	00		 je	 $LN16@familyLead
$LN24@familyLead:
  000ad	56		 push	 esi

; 17555: 	{
; 17556: 		selId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  000ae	6a 02		 push	 2
  000b0	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA
  000b5	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000ba	83 c4 08	 add	 esp, 8
  000bd	8b f0		 mov	 esi, eax

; 17557: 
; 17558: 		if (CheckMenuFlag()
; 17559: 			|| (joy_trg[0] & JOY_ESC)
; 17560: 			|| actBtn == 1
; 17561: 			|| menuBtn == 1
; 17562: 			|| disconnectServerFlag == TRUE
; 17563: 			|| wnCloseFlag == 1)

  000bf	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000c4	85 c0		 test	 eax, eax
  000c6	75 33		 jne	 SHORT $LN10@familyLead
  000c8	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000d2	75 27		 jne	 SHORT $LN10@familyLead
  000d4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000dc	74 1d		 je	 SHORT $LN10@familyLead
  000de	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000e6	74 13		 je	 SHORT $LN10@familyLead
  000e8	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000ef	74 0a		 je	 SHORT $LN10@familyLead
  000f1	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f9	75 05		 jne	 SHORT $LN9@familyLead
$LN10@familyLead:

; 17564: 		{
; 17565: 			//id = 100;
; 17566: 			closeFamilyLeaderChangeWN();

  000fb	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
$LN9@familyLead:

; 17567: 		}
; 17568: 
; 17569: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00100	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00107	0f 84 83 00 00
	00		 je	 $LN5@familyLead

; 17570: 
; 17571: 			switch (selId) {

  0010d	83 ee 00	 sub	 esi, 0
  00110	74 6a		 je	 SHORT $LN12@familyLead
  00112	83 ee 01	 sub	 esi, 1
  00115	75 79		 jne	 SHORT $LN5@familyLead

; 17574: 				return;
; 17575: 			case 1:
; 17576: 				sprintf(buf, "L|CHANGE|Q|%d|%s", memberIndex[changeWho], memberName[changeWho]);

  00117	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?changeWho@@3HA ; changeWho
  0011d	8d 04 c9	 lea	 eax, DWORD PTR [ecx+ecx*8]
  00120	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?memberName@@3PAY0CE@DA[eax*4]
  00127	50		 push	 eax
  00128	ff 34 8d 00 00
	00 00		 push	 DWORD PTR ?memberIndex@@3PAHA[ecx*4]
  0012f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00135	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JFLIPKGJ@L?$HMCHANGE?$HMQ?$HM?$CFd?$HM?$CFs@
  0013a	50		 push	 eax
  0013b	e8 00 00 00 00	 call	 _sprintf
  00140	83 c4 10	 add	 esp, 16			; 00000010H

; 17577: 				if (bNewServer)

  00143	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00149	50		 push	 eax
  0014a	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00150	39 35 00 00 00
	00		 cmp	 DWORD PTR ?bNewServer@@3HA, esi ; bNewServer
  00156	74 1c		 je	 SHORT $LN14@familyLead

; 17578: 					lssproto_FM_send(sockfd, buf);

  00158	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  0015d	83 c4 08	 add	 esp, 8
  00160	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
  00165	5e		 pop	 esi

; 17594: 				"  ?  ?  ", 2);
; 17595: 
; 17596: 		}
; 17597: 
; 17598: 	}
; 17599: 
; 17600: }

  00166	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00169	33 cd		 xor	 ecx, ebp
  0016b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00170	8b e5		 mov	 esp, ebp
  00172	5d		 pop	 ebp
  00173	c3		 ret	 0
$LN14@familyLead:

; 17579: 				else
; 17580: 					old_lssproto_FM_send(sockfd, buf);

  00174	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  00179	83 c4 08	 add	 esp, 8
$LN12@familyLead:

; 17572: 			case 0:
; 17573: 				closeFamilyLeaderChangeWN();

  0017c	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
  00181	5e		 pop	 esi

; 17594: 				"  ?  ?  ", 2);
; 17595: 
; 17596: 		}
; 17597: 
; 17598: 	}
; 17599: 
; 17600: }

  00182	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00185	33 cd		 xor	 ecx, ebp
  00187	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
$LN5@familyLead:

; 17581: 				closeFamilyLeaderChangeWN();
; 17582: 				return;
; 17583: 			}
; 17584: 
; 17585: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00190	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00195	85 c0		 test	 eax, eax
  00197	0f 84 a4 00 00
	00		 je	 $LN25@familyLead
  0019d	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001a1	0f 8c 9a 00 00
	00		 jl	 $LN25@familyLead

; 17586: 		{
; 17587: 			sprintf(buf, "ì¡±ì¥ì%sìê² ììíìê² ìµëê¹ï¼", memberName[changeWho]);

  001a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?changeWho@@3HA ; changeWho
  001ac	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  001af	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?memberName@@3PAY0CE@DA[eax*4]
  001b6	50		 push	 eax
  001b7	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001bd	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@FPBPENDN@?A?$LH?$MA?e?$MA?$LL?$CFs?$LP?$KB?$LA?T?5?$MA?$KH?$MA?S?G?O?$LN?C?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
  001c2	50		 push	 eax
  001c3	e8 00 00 00 00	 call	 _sprintf

; 17588: 			StockFontBuffer(winX + 50, winY + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  001c8	6a 00		 push	 0
  001ca	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001d0	50		 push	 eax
  001d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  001d6	6a 00		 push	 0
  001d8	83 c0 1e	 add	 eax, 30			; 0000001eH
  001db	6a 01		 push	 1
  001dd	50		 push	 eax
  001de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  001e3	83 c0 32	 add	 eax, 50			; 00000032H
  001e6	50		 push	 eax
  001e7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17589: 				buf, 0);
; 17590: 
; 17591: 			fontId[0] = StockFontBuffer(winX + 200, winY + 60, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  001f1	6a 02		 push	 2
  001f3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EPCBPGPN@?5?5?$LG?$LA?5?$LD?$KK?5?$LE?Y?5?5@
  001f8	6a 04		 push	 4
  001fa	83 c0 3c	 add	 eax, 60			; 0000003cH
  001fd	6a 01		 push	 1
  001ff	50		 push	 eax
  00200	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  00205	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  0020a	50		 push	 eax
  0020b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17592: 				"  ë  ë ë¤  ", 2);
; 17593: 			fontId[1] = StockFontBuffer(winX + 280, winY + 60, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  00210	6a 02		 push	 2
  00212	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA, eax
  00217	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  0021c	68 00 00 00 00	 push	 OFFSET ??_C@_08PPLGHOJI@?5?5?$DP?5?5?$DP?5?5@
  00221	6a 04		 push	 4
  00223	83 c0 3c	 add	 eax, 60			; 0000003cH
  00226	6a 01		 push	 1
  00228	50		 push	 eax
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeQWN@@YAXXZ@4HA
  0022e	05 18 01 00 00	 add	 eax, 280		; 00000118H
  00233	50		 push	 eax
  00234	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00239	83 c4 54	 add	 esp, 84			; 00000054H
  0023c	a3 04 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeQWN@@YAXXZ@4PAHA+4, eax
$LN25@familyLead:
  00241	5e		 pop	 esi
$LN16@familyLead:

; 17594: 				"  ?  ?  ", 2);
; 17595: 
; 17596: 		}
; 17597: 
; 17598: 	}
; 17599: 
; 17600: }

  00242	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00245	33 cd		 xor	 ecx, ebp
  00247	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024c	8b e5		 mov	 esp, ebp
  0024e	5d		 pop	 ebp
  0024f	c3		 ret	 0
?familyLeaderChangeQWN@@YAXXZ ENDP			; familyLeaderChangeQWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyLeaderChangeWN@@YAXXZ
_TEXT	SEGMENT
?familyLeaderChangeWN@@YAXXZ PROC			; familyLeaderChangeWN, COMDAT

; 17409: 
; 17410: 	static int winX, winY;
; 17411: 	static int winW, winH;
; 17412: 	static int fontId[30];
; 17413: 	static int fontId2[3];
; 17414: 	int selId, selId2;
; 17415: 	//char buf[256];
; 17416: 	int i;
; 17417: 
; 17418: 
; 17419: 	if (ptActMenuWin == NULL)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00007	0f 85 d1 00 00
	00		 jne	 $LN60@familyLead

; 17420: 	{
; 17421: 		winW = 7;
; 17422: 		winH = 8;
; 17423: 		winX = (640 - winW * 64) / 2;
; 17424: 		winY = (456 - winH * 48) / 2;
; 17425: 
; 17426: 
; 17427: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0000d	6a 01		 push	 1
  0000f	6a 00		 push	 0
  00011	6a 08		 push	 8
  00013	6a 07		 push	 7
  00015	6a 24		 push	 36			; 00000024H
  00017	6a 60		 push	 96			; 00000060H
  00019	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??familyLeaderChangeWN@@YAXXZ@4HA, 7
  00023	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?winH@?1??familyLeaderChangeWN@@YAXXZ@4HA, 8
  0002d	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA, 96 ; 00000060H
  00037	c7 05 00 00 00
	00 24 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA, 36 ; 00000024H
  00041	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00046	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 17428: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17429: 		winX = ptActMenuWin->x;
; 17430: 		winY = ptActMenuWin->y;
; 17431: #endif
; 17432: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17433: 			fontId[i] = -2;
; 17434: 		for (i = 0; i < sizeof(fontId2) / sizeof(int); i++)
; 17435: 			fontId2[i] = -2;
; 17436: 
; 17437: 		play_se(202, 320, 240);

  0004d	68 f0 00 00 00	 push	 240			; 000000f0H
  00052	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00057	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0005a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0005d	68 40 01 00 00	 push	 320			; 00000140H
  00062	68 ca 00 00 00	 push	 202			; 000000caH
  00067	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA, ecx
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA, eax
  00072	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA, xmm0
  00079	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA, -2 ; fffffffeH
  00083	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+16, xmm0
  0008a	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+4, -2 ; fffffffeH
  00094	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+32, xmm0
  0009b	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+8, -2 ; fffffffeH
  000a5	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+48, xmm0
  000ac	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+64, xmm0
  000b3	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+80, xmm0
  000ba	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+96, xmm0
  000c1	66 0f d6 05 70
	00 00 00	 movq	 QWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+112, xmm0
  000c9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000ce	83 c4 24	 add	 esp, 36			; 00000024H

; 17438: 	}
; 17439: 
; 17440: 
; 17441: 	if (ptActMenuWin != NULL)

  000d1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000d8	0f 84 9a 00 00
	00		 je	 $LN10@familyLead
$LN60@familyLead:
  000de	56		 push	 esi
  000df	57		 push	 edi

; 17442: 	{
; 17443: 		selId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  000e0	6a 1e		 push	 30			; 0000001eH
  000e2	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA
  000e7	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId

; 17444: 		selId2 = selFontId(fontId2, sizeof(fontId2) / sizeof(int));

  000ec	6a 03		 push	 3
  000ee	68 00 00 00 00	 push	 OFFSET ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA
  000f3	8b f8		 mov	 edi, eax
  000f5	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000fa	83 c4 10	 add	 esp, 16			; 00000010H
  000fd	8b f0		 mov	 esi, eax

; 17445: 		//selBtnId = focusGraId( btnId, sizeof( btnId )/sizeof( int ) );
; 17446: 
; 17447: 		if (CheckMenuFlag()
; 17448: 			|| (joy_trg[0] & JOY_ESC)
; 17449: 			|| actBtn == 1
; 17450: 			|| menuBtn == 1
; 17451: 			|| disconnectServerFlag == TRUE
; 17452: 			|| wnCloseFlag == 1)

  000ff	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00104	85 c0		 test	 eax, eax
  00106	75 33		 jne	 SHORT $LN24@familyLead
  00108	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00112	75 27		 jne	 SHORT $LN24@familyLead
  00114	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0011c	74 1d		 je	 SHORT $LN24@familyLead
  0011e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00126	74 13		 je	 SHORT $LN24@familyLead
  00128	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0012f	74 0a		 je	 SHORT $LN24@familyLead
  00131	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00139	75 05		 jne	 SHORT $LN23@familyLead
$LN24@familyLead:

; 17453: 		{
; 17454: 			//id = 100;
; 17455: 			closeFamilyLeaderChangeWN();

  0013b	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
$LN23@familyLead:

; 17456: 		}
; 17457: 
; 17458: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00140	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00147	74 30		 je	 SHORT $LN26@familyLead

; 17459: 			if (selId >= 0 && selId < 30) {

  00149	83 ff 1d	 cmp	 edi, 29			; 0000001dH
  0014c	77 2b		 ja	 SHORT $LN26@familyLead

; 17460: 				closeFamilyLeaderChangeWN();

  0014e	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN

; 17461: 				changeWho = (pagenum - 1) * 30 + selId;

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pagenum@@3HA
  00158	c1 e0 04	 shl	 eax, 4
  0015b	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?pagenum@@3HA
  00161	83 c0 f1	 add	 eax, -15		; fffffff1H

; 17462: 				windowTypeWN = WINDOW_MESSAGETYPE_LEADERSELECTQ;

  00164	c7 05 00 00 00
	00 21 00 00 00	 mov	 DWORD PTR ?windowTypeWN@@3HA, 33 ; windowTypeWN, 00000021H
  0016e	8d 04 47	 lea	 eax, DWORD PTR [edi+eax*2]
  00171	a3 00 00 00 00	 mov	 DWORD PTR ?changeWho@@3HA, eax ; changeWho
$LN61@familyLead:
  00176	5f		 pop	 edi
  00177	5e		 pop	 esi
$LN10@familyLead:

; 17511: 					"??", 2);
; 17512: 				break;
; 17513: 			}
; 17514: 
; 17515: 
; 17516: 
; 17517: 		}
; 17518: 
; 17519: 
; 17520: 	}
; 17521: 
; 17522: 
; 17523: }

  00178	c3		 ret	 0
$LN26@familyLead:

; 17463: 				return;
; 17464: 			}
; 17465: 
; 17466: 		switch (selId2) {

  00179	83 ee 00	 sub	 esi, 0
  0017c	0f 84 a9 02 00
	00		 je	 $LN27@familyLead
  00182	83 ee 01	 sub	 esi, 1
  00185	0f 84 97 02 00
	00		 je	 $LN28@familyLead
  0018b	83 ee 01	 sub	 esi, 1
  0018e	0f 84 85 02 00
	00		 je	 $LN29@familyLead

; 17475: 			return;
; 17476: 		}
; 17477: 
; 17478: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00194	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00199	85 c0		 test	 eax, eax
  0019b	74 d9		 je	 SHORT $LN61@familyLead
  0019d	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001a1	7c d3		 jl	 SHORT $LN61@familyLead

; 17479: 		{
; 17480: 			StockFontBuffer(winX + 50, winY + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  001a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  001a8	6a 00		 push	 0
  001aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DODKFOKF@?$LA?$KB?A?$LH?$LB?$LI?$LM?$LK?$LP?x?$MA?$LL?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$LK@
  001af	6a 00		 push	 0
  001b1	83 c0 1e	 add	 eax, 30			; 0000001eH
  001b4	6a 01		 push	 1
  001b6	50		 push	 eax
  001b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  001bc	83 c0 32	 add	 eax, 50			; 00000032H
  001bf	50		 push	 eax
  001c0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17481: 				"ê°ì¡±êµ¬ì±ììì ííì¸ìï¼", 0);
; 17482: 
; 17483: 			fontId2[0] = StockFontBuffer(winX + 300, winY + 350, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  001c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  001ca	6a 02		 push	 2
  001cc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KPJPAJE@?5?5?$LG?$LA?$LD?$KK?$LE?Y?5?5@
  001d1	6a 04		 push	 4
  001d3	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  001d8	6a 01		 push	 1
  001da	50		 push	 eax
  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  001e0	05 2c 01 00 00	 add	 eax, 300		; 0000012cH
  001e5	50		 push	 eax
  001e6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001eb	a3 00 00 00 00	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA, eax
  001f0	83 c4 30	 add	 esp, 48			; 00000030H

; 17484: 				"  ë ëë¤  ", 2);
; 17485: 
; 17486: 			switch (pagenum)

  001f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pagenum@@3HA
  001f8	83 e8 01	 sub	 eax, 1
  001fb	0f 84 74 01 00
	00		 je	 $LN31@familyLead
  00201	83 e8 01	 sub	 eax, 1
  00204	0f 84 b7 00 00
	00		 je	 $LN33@familyLead
  0020a	83 e8 01	 sub	 eax, 1
  0020d	0f 85 63 ff ff
	ff		 jne	 $LN61@familyLead

; 17506: 			case 3:
; 17507: 				for (i = 60; i < memberNum; i++)

  00213	be 3c 00 00 00	 mov	 esi, 60			; 0000003cH
  00218	39 35 00 00 00
	00		 cmp	 DWORD PTR ?memberNum@@3HA, esi ; memberNum
  0021e	7e 72		 jle	 SHORT $LN19@familyLead
  00220	bf 70 08 00 00	 mov	 edi, OFFSET ?memberName@@3PAY0CE@DA+2160
$LL20@familyLead:

; 17508: 					fontId[i] = StockFontBuffer(winX + 30 + ((i - 60) / 10) * 50, winY + 60 + (i % 10) * 20,

  00225	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0022a	8b ce		 mov	 ecx, esi
  0022c	f7 ee		 imul	 esi
  0022e	6a 02		 push	 2
  00230	c1 fa 02	 sar	 edx, 2
  00233	8b c2		 mov	 eax, edx
  00235	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00238	03 c2		 add	 eax, edx
  0023a	57		 push	 edi
  0023b	6a 00		 push	 0
  0023d	6a 01		 push	 1
  0023f	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00242	03 c0		 add	 eax, eax
  00244	2b c8		 sub	 ecx, eax
  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  0024b	83 c1 03	 add	 ecx, 3
  0024e	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  00251	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00254	50		 push	 eax
  00255	8d 4e c4	 lea	 ecx, DWORD PTR [esi-60]
  00258	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0025d	f7 e9		 imul	 ecx
  0025f	c1 fa 02	 sar	 edx, 2
  00262	8b c2		 mov	 eax, edx
  00264	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00267	03 c2		 add	 eax, edx
  00269	6b c8 32	 imul	 ecx, eax, 50
  0026c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  00271	83 c0 1e	 add	 eax, 30			; 0000001eH
  00274	03 c1		 add	 eax, ecx
  00276	50		 push	 eax
  00277	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0027c	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA[esi*4], eax
  00283	83 c4 18	 add	 esp, 24			; 00000018H
  00286	46		 inc	 esi
  00287	83 c7 24	 add	 edi, 36			; 00000024H
  0028a	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?memberNum@@3HA ; memberNum
  00290	7c 93		 jl	 SHORT $LL20@familyLead
$LN19@familyLead:

; 17509: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, memberName[i], 2);
; 17510: 				fontId2[1] = StockFontBuffer(winX + 30, winY + 350, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  00292	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  00297	6a 02		 push	 2
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0029e	6a 04		 push	 4
  002a0	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  002a5	6a 01		 push	 1
  002a7	50		 push	 eax
  002a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  002ad	83 c0 1e	 add	 eax, 30			; 0000001eH
  002b0	50		 push	 eax
  002b1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002b6	83 c4 18	 add	 esp, 24			; 00000018H
  002b9	a3 04 00 00 00	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+4, eax
  002be	5f		 pop	 edi
  002bf	5e		 pop	 esi

; 17511: 					"??", 2);
; 17512: 				break;
; 17513: 			}
; 17514: 
; 17515: 
; 17516: 
; 17517: 		}
; 17518: 
; 17519: 
; 17520: 	}
; 17521: 
; 17522: 
; 17523: }

  002c0	c3		 ret	 0
$LN33@familyLead:

; 17494: 						"??", 2);
; 17495: 				break;
; 17496: 			case 2:
; 17497: 				for (i = 30; i < memberNum; i++)

  002c1	be 1e 00 00 00	 mov	 esi, 30			; 0000001eH
  002c6	39 35 00 00 00
	00		 cmp	 DWORD PTR ?memberNum@@3HA, esi ; memberNum
  002cc	7e 72		 jle	 SHORT $LN16@familyLead
  002ce	bf 38 04 00 00	 mov	 edi, OFFSET ?memberName@@3PAY0CE@DA+1080
$LL17@familyLead:

; 17498: 					fontId[i] = StockFontBuffer(winX + 30 + ((i - 30) / 10) * 50, winY + 60 + (i % 10) * 20,

  002d3	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  002d8	8b ce		 mov	 ecx, esi
  002da	f7 ee		 imul	 esi
  002dc	6a 02		 push	 2
  002de	c1 fa 02	 sar	 edx, 2
  002e1	8b c2		 mov	 eax, edx
  002e3	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002e6	03 c2		 add	 eax, edx
  002e8	57		 push	 edi
  002e9	6a 00		 push	 0
  002eb	6a 01		 push	 1
  002ed	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  002f0	03 c0		 add	 eax, eax
  002f2	2b c8		 sub	 ecx, eax
  002f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  002f9	83 c1 03	 add	 ecx, 3
  002fc	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  002ff	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00302	50		 push	 eax
  00303	8d 4e e2	 lea	 ecx, DWORD PTR [esi-30]
  00306	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0030b	f7 e9		 imul	 ecx
  0030d	c1 fa 02	 sar	 edx, 2
  00310	8b c2		 mov	 eax, edx
  00312	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00315	03 c2		 add	 eax, edx
  00317	6b c8 32	 imul	 ecx, eax, 50
  0031a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  0031f	83 c0 1e	 add	 eax, 30			; 0000001eH
  00322	03 c1		 add	 eax, ecx
  00324	50		 push	 eax
  00325	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0032a	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA[esi*4], eax
  00331	83 c4 18	 add	 esp, 24			; 00000018H
  00334	46		 inc	 esi
  00335	83 c7 24	 add	 edi, 36			; 00000024H
  00338	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?memberNum@@3HA ; memberNum
  0033e	7c 93		 jl	 SHORT $LL17@familyLead
$LN16@familyLead:

; 17499: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, memberName[i], 2);
; 17500: 				fontId2[1] = StockFontBuffer(winX + 30, winY + 350, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  00340	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  00345	6a 02		 push	 2
  00347	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  0034c	6a 04		 push	 4
  0034e	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  00353	6a 01		 push	 1
  00355	50		 push	 eax
  00356	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  0035b	83 c0 1e	 add	 eax, 30			; 0000001eH
  0035e	50		 push	 eax
  0035f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00364	83 c4 18	 add	 esp, 24			; 00000018H
  00367	a3 04 00 00 00	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+4, eax

; 17501: 					"??", 2);
; 17502: 				if (memberNum > 60)

  0036c	83 3d 00 00 00
	00 3c		 cmp	 DWORD PTR ?memberNum@@3HA, 60 ; memberNum, 0000003cH

; 17503: 					fontId2[2] = StockFontBuffer(winX + 100, winY + 350, FONT_PRIO_FRONT, FONT_PAL_YELLOW,
; 17504: 						"??", 2);
; 17505: 				break;

  00373	eb 6f		 jmp	 SHORT $LN64@familyLead
$LN31@familyLead:

; 17487: 			{
; 17488: 			case 1:
; 17489: 				for (i = 0; i < memberNum; i++)

  00375	a1 00 00 00 00	 mov	 eax, DWORD PTR ?memberNum@@3HA ; memberNum
  0037a	33 ff		 xor	 edi, edi
  0037c	85 c0		 test	 eax, eax
  0037e	7e 61		 jle	 SHORT $LN13@familyLead
  00380	53		 push	 ebx
  00381	bb 00 00 00 00	 mov	 ebx, OFFSET ?memberName@@3PAY0CE@DA ; memberName
$LL14@familyLead:

; 17490: 					fontId[i] = StockFontBuffer(winX + 30 + (i / 10) * 50, winY + 60 + (i % 10) * 20,

  00386	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0038b	8b cf		 mov	 ecx, edi
  0038d	f7 ef		 imul	 edi
  0038f	6a 02		 push	 2
  00391	c1 fa 02	 sar	 edx, 2
  00394	8b f2		 mov	 esi, edx
  00396	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00399	03 f2		 add	 esi, edx
  0039b	53		 push	 ebx
  0039c	6a 00		 push	 0
  0039e	6a 01		 push	 1
  003a0	8d 04 b6	 lea	 eax, DWORD PTR [esi+esi*4]
  003a3	03 c0		 add	 eax, eax
  003a5	2b c8		 sub	 ecx, eax
  003a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  003ac	83 c1 03	 add	 ecx, 3
  003af	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  003b2	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  003b5	6b ce 32	 imul	 ecx, esi, 50
  003b8	50		 push	 eax
  003b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  003be	83 c0 1e	 add	 eax, 30			; 0000001eH
  003c1	03 c1		 add	 eax, ecx
  003c3	50		 push	 eax
  003c4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003c9	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??familyLeaderChangeWN@@YAXXZ@4PAHA[edi*4], eax
  003d0	83 c4 18	 add	 esp, 24			; 00000018H
  003d3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?memberNum@@3HA ; memberNum
  003d8	47		 inc	 edi
  003d9	83 c3 24	 add	 ebx, 36			; 00000024H
  003dc	3b f8		 cmp	 edi, eax
  003de	7c a6		 jl	 SHORT $LL14@familyLead
  003e0	5b		 pop	 ebx
$LN13@familyLead:

; 17491: 						FONT_PRIO_FRONT, FONT_PAL_WHITE, memberName[i], 2);
; 17492: 				if (memberNum > 30)

  003e1	83 f8 1e	 cmp	 eax, 30			; 0000001eH
$LN64@familyLead:
  003e4	0f 8e 8c fd ff
	ff		 jle	 $LN61@familyLead

; 17493: 					fontId2[2] = StockFontBuffer(winX + 100, winY + 350, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  003ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyLeaderChangeWN@@YAXXZ@4HA
  003ef	6a 02		 push	 2
  003f1	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  003f6	6a 04		 push	 4
  003f8	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  003fd	6a 01		 push	 1
  003ff	50		 push	 eax
  00400	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyLeaderChangeWN@@YAXXZ@4HA
  00405	83 c0 64	 add	 eax, 100		; 00000064H
  00408	50		 push	 eax
  00409	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0040e	83 c4 18	 add	 esp, 24			; 00000018H
  00411	a3 08 00 00 00	 mov	 DWORD PTR ?fontId2@?1??familyLeaderChangeWN@@YAXXZ@4PAHA+8, eax
  00416	5f		 pop	 edi
  00417	5e		 pop	 esi

; 17511: 					"??", 2);
; 17512: 				break;
; 17513: 			}
; 17514: 
; 17515: 
; 17516: 
; 17517: 		}
; 17518: 
; 17519: 
; 17520: 	}
; 17521: 
; 17522: 
; 17523: }

  00418	c3		 ret	 0
$LN29@familyLead:

; 17472: 			return;
; 17473: 		case 2:
; 17474: 			pagenum++;

  00419	ff 05 00 00 00
	00		 inc	 DWORD PTR ?pagenum@@3HA
  0041f	5f		 pop	 edi
  00420	5e		 pop	 esi

; 17511: 					"??", 2);
; 17512: 				break;
; 17513: 			}
; 17514: 
; 17515: 
; 17516: 
; 17517: 		}
; 17518: 
; 17519: 
; 17520: 	}
; 17521: 
; 17522: 
; 17523: }

  00421	c3		 ret	 0
$LN28@familyLead:

; 17469: 			return;
; 17470: 		case 1:
; 17471: 			pagenum--;

  00422	ff 0d 00 00 00
	00		 dec	 DWORD PTR ?pagenum@@3HA
  00428	5f		 pop	 edi
  00429	5e		 pop	 esi

; 17511: 					"??", 2);
; 17512: 				break;
; 17513: 			}
; 17514: 
; 17515: 
; 17516: 
; 17517: 		}
; 17518: 
; 17519: 
; 17520: 	}
; 17521: 
; 17522: 
; 17523: }

  0042a	c3		 ret	 0
$LN27@familyLead:
  0042b	5f		 pop	 edi
  0042c	5e		 pop	 esi

; 17467: 		case 0:
; 17468: 			closeFamilyLeaderChangeWN();

  0042d	e9 00 00 00 00	 jmp	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
?familyLeaderChangeWN@@YAXXZ ENDP			; familyLeaderChangeWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyLeaderChange@@YAXPAD@Z
_TEXT	SEGMENT
_data$GSCopy$1$ = -520					; size = 4
_buf$ = -516						; size = 256
_buf2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFamilyLeaderChange@@YAXPAD@Z PROC			; initFamilyLeaderChange, COMDAT

; 17377: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 02 00
	00		 sub	 esp, 520		; 00000208H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]

; 17378: 
; 17379: 	int i;
; 17380: 	char buf[256], buf2[256];
; 17381: 
; 17382: 	pagenum = 1;
; 17383: 	changeWho = -1;
; 17384: 	getStringToken(data, '|', 4, sizeof(buf) - 1, buf);

  00016	8d 8d fc fd ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0001c	56		 push	 esi
  0001d	51		 push	 ecx
  0001e	68 ff 00 00 00	 push	 255			; 000000ffH
  00023	6a 04		 push	 4
  00025	6a 7c		 push	 124			; 0000007cH
  00027	50		 push	 eax
  00028	89 85 f8 fd ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], eax
  0002e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pagenum@@3HA, 1
  00038	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?changeWho@@3HA, -1 ; changeWho
  00042	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17385: 	memberNum = atoi(buf);

  00047	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 _atoi
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?memberNum@@3HA, eax ; memberNum

; 17386: 
; 17387: 	for (i = 0; i < memberNum; i++)

  0005b	33 f6		 xor	 esi, esi
  0005d	85 c0		 test	 eax, eax
  0005f	0f 8e 89 00 00
	00		 jle	 $LN3@initFamily

; 17377: {

  00065	53		 push	 ebx
  00066	57		 push	 edi
  00067	bb 00 00 00 00	 mov	 ebx, OFFSET ?memberName@@3PAY0CE@DA ; memberName
  0006c	bf 06 00 00 00	 mov	 edi, 6
$LL4@initFamily:

; 17388: 	{
; 17389: 		getStringToken(data, '|', 5 + i * 2, sizeof(buf2) - 1, buf2);

  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00077	50		 push	 eax
  00078	68 ff 00 00 00	 push	 255			; 000000ffH
  0007d	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  00080	50		 push	 eax
  00081	6a 7c		 push	 124			; 0000007cH
  00083	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  00089	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17390: 		memberIndex[i] = atoi(buf2);

  0008e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 _atoi
  0009a	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?memberIndex@@3PAHA[esi*4], eax

; 17391: 		getStringToken(data, '|', 5 + i * 2 + 1, sizeof(buf2) - 1, buf2);

  000a1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000a7	50		 push	 eax
  000a8	68 ff 00 00 00	 push	 255			; 000000ffH
  000ad	57		 push	 edi
  000ae	6a 7c		 push	 124			; 0000007cH
  000b0	ff b5 f8 fd ff
	ff		 push	 DWORD PTR _data$GSCopy$1$[ebp]
  000b6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17392: 		strcpy(memberName[i], makeStringFromEscaped(buf2));

  000bb	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  000c1	50		 push	 eax
  000c2	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000c7	8b d3		 mov	 edx, ebx
  000c9	83 c4 30	 add	 esp, 48			; 00000030H
  000cc	2b d0		 sub	 edx, eax
  000ce	66 90		 npad	 2
$LL6@initFamily:
  000d0	8a 08		 mov	 cl, BYTE PTR [eax]
  000d2	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000d5	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  000d9	84 c9		 test	 cl, cl
  000db	75 f3		 jne	 SHORT $LL6@initFamily

; 17386: 
; 17387: 	for (i = 0; i < memberNum; i++)

  000dd	46		 inc	 esi
  000de	83 c7 02	 add	 edi, 2
  000e1	83 c3 24	 add	 ebx, 36			; 00000024H
  000e4	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?memberNum@@3HA ; memberNum
  000ea	7c 85		 jl	 SHORT $LL4@initFamily
  000ec	5f		 pop	 edi
  000ed	5b		 pop	 ebx
$LN3@initFamily:

; 17393: 
; 17394: 	}
; 17395: 
; 17396: }

  000ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f1	33 cd		 xor	 ecx, ebp
  000f3	5e		 pop	 esi
  000f4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f9	8b e5		 mov	 esp, ebp
  000fb	5d		 pop	 ebp
  000fc	c3		 ret	 0
?initFamilyLeaderChange@@YAXPAD@Z ENDP			; initFamilyLeaderChange
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyTaxWN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -516						; size = 256
_dataBuf$ = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
?familyTaxWN@@YAXXZ PROC				; familyTaxWN, COMDAT

; 16816: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 16817: 
; 16818: 	static int winX, winY;
; 16819: 	static int winW, winH;
; 16820: 	static int fontId[] = { -2, -2, -2, -2 };
; 16821: 	static int btnId[] = { -2, -2, -2, -2 };
; 16822: 	static int pushBtnFlag[4];
; 16823: 	static int taxGoldInc = 0, taxGoldDec = 0;
; 16824: 	static int taxGoldCnt = 0;
; 16825: 	int selBtnId;
; 16826: 	char dataBuf[256];
; 16827: 	char buf[256];
; 16828: 	int id;
; 16829: 	int i;
; 16830: 
; 16831: 
; 16832: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 85 87 00 00
	00		 jne	 $LN84@familyTaxW

; 16833: 	{
; 16834: 		winW = 5;
; 16835: 		winH = 4;
; 16836: 		winX = (640 - winW * 64) / 2;
; 16837: 		winY = (456 - winH * 48) / 2;
; 16838: 
; 16839: #ifdef NEWå®¶æé¶è¡å¾æ¡£
; 16840: 		ptActMenuWin = MakeWindowDisp(winX, winY, 0, 0, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 00		 push	 0
  00026	6a 00		 push	 0
  00028	68 84 00 00 00	 push	 132			; 00000084H
  0002d	68 a0 00 00 00	 push	 160			; 000000a0H
  00032	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??familyTaxWN@@YAXXZ@4HA, 5
  0003c	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?winH@?1??familyTaxWN@@YAXXZ@4HA, 4
  00046	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA, 160 ; 000000a0H
  00050	c7 05 00 00 00
	00 84 00 00 00	 mov	 DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA, 132 ; 00000084H
  0005a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 16841: #else
; 16842: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);
; 16843: #endif 
; 16844: 
; 16845: 
; 16846: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 16847: 		winX = ptActMenuWin->x;
; 16848: 		winY = ptActMenuWin->y;
; 16849: #endif
; 16850: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 16851: 		{
; 16852: 			fontId[i] = -2;

  0005f	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 16853: 		}
; 16854: 
; 16855: 		play_se(202, 320, 240);

  00066	68 f0 00 00 00	 push	 240			; 000000f0H
  0006b	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00070	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00073	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00076	68 40 01 00 00	 push	 320			; 00000140H
  0007b	68 ca 00 00 00	 push	 202			; 000000caH
  00080	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA, ecx
  00086	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA, eax
  0008b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??familyTaxWN@@YAXXZ@4PAHA, xmm0
  00092	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00097	83 c4 24	 add	 esp, 36			; 00000024H

; 16856: 	}
; 16857: 
; 16858: 
; 16859: 	if (ptActMenuWin != NULL)

  0009a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000a1	0f 84 42 06 00
	00		 je	 $LN51@familyTaxW
$LN84@familyTaxW:
  000a7	56		 push	 esi

; 16860: 	{
; 16861: 		// ?????î±î¶îî
; 16862: 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));
; 16863: 		selBtnId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  000a8	6a 04		 push	 4
  000aa	68 00 00 00 00	 push	 OFFSET ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA
  000af	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  000b4	83 c4 08	 add	 esp, 8
  000b7	8b f0		 mov	 esi, eax

; 16864: 
; 16865: 		// î??????î?????????????î¼??
; 16866: 		if (CheckMenuFlag()
; 16867: 			|| (joy_trg[0] & JOY_ESC)
; 16868: 			|| actBtn == 1
; 16869: 			|| menuBtn == 1
; 16870: 			|| disconnectServerFlag == TRUE
; 16871: 			|| wnCloseFlag == 1)

  000b9	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000be	85 c0		 test	 eax, eax
  000c0	75 33		 jne	 SHORT $LN15@familyTaxW
  000c2	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000cc	75 27		 jne	 SHORT $LN15@familyTaxW
  000ce	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000d6	74 1d		 je	 SHORT $LN15@familyTaxW
  000d8	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000e0	74 13		 je	 SHORT $LN15@familyTaxW
  000e2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000e9	74 0a		 je	 SHORT $LN15@familyTaxW
  000eb	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f3	75 05		 jne	 SHORT $LN14@familyTaxW
$LN15@familyTaxW:

; 16872: 		{
; 16873: 			id = 100;
; 16874: 			closeFamilyTaxWN();

  000f5	e8 00 00 00 00	 call	 ?closeFamilyTaxWN@@YAXXZ ; closeFamilyTaxWN
$LN14@familyTaxW:

; 16875: 		}
; 16876: 
; 16877: 
; 16878: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  000fa	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00100	f6 c2 01	 test	 dl, 1
  00103	74 14		 je	 SHORT $LN5@familyTaxW

; 16879: 
; 16880: 			switch (selBtnId) {

  00105	8b c6		 mov	 eax, esi
  00107	83 e8 00	 sub	 eax, 0
  0010a	0f 84 ab 00 00
	00		 je	 $LN17@familyTaxW
  00110	83 e8 01	 sub	 eax, 1
  00113	0f 84 fc 00 00
	00		 je	 $LN19@familyTaxW
$LN5@familyTaxW:
  00119	57		 push	 edi

; 16889: 				return;
; 16890: 				break;
; 16891: 			case 1:
; 16892: 				closeFamilyTaxWN();
; 16893: 				return;
; 16894: 				break;
; 16895: 			}
; 16896: 
; 16897: 
; 16898: 
; 16899: #if 1
; 16900: 		switch (selBtnId) {

  0011a	83 ee 02	 sub	 esi, 2
  0011d	0f 84 de 01 00
	00		 je	 $LN21@familyTaxW
  00123	83 ee 01	 sub	 esi, 1
  00126	0f 85 37 03 00
	00		 jne	 $LN90@familyTaxW

; 16965: 					}
; 16966: 				}
; 16967: 			}
; 16968: 			break;
; 16969: 
; 16970: 		case 3:
; 16971: 			if (mouse.onceState & MOUSE_LEFT_CRICK_UP && pushBtnFlag[3] == TRUE) {

  0012c	f6 c2 04	 test	 dl, 4
  0012f	74 12		 je	 SHORT $LN88@familyTaxW
  00131	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12
  00136	33 c9		 xor	 ecx, ecx
  00138	83 f8 01	 cmp	 eax, 1
  0013b	0f 44 c1	 cmove	 eax, ecx
  0013e	a3 0c 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, eax
$LN88@familyTaxW:

; 16972: 
; 16973: 				pushBtnFlag[3] = FALSE;
; 16974: 			}
; 16975: 
; 16976: 			if (haveGold > 0 && (familyTax + (pc.gold - haveGold)) < MAX_FMBANKGOLD) {

  00143	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?haveGold@@3HA ; haveGold
  00149	85 c9		 test	 ecx, ecx
  0014b	0f 8e 12 03 00
	00		 jle	 $LN90@familyTaxW
  00151	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
  00157	8b c6		 mov	 eax, esi
  00159	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?familyTax@@3HA ; familyTax
  0015f	2b c1		 sub	 eax, ecx
  00161	03 c7		 add	 eax, edi
  00163	3d 00 ca 9a 3b	 cmp	 eax, 1000000000		; 3b9aca00H
  00168	0f 8d f5 02 00
	00		 jge	 $LN90@familyTaxW

; 16977: 
; 16978: 				if (pushBtnFlag[3] == TRUE) {

  0016e	83 3d 0c 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, 1
  00175	0f 85 3b 01 00
	00		 jne	 $LN43@familyTaxW

; 16979: 					haveGold -= taxGoldDec;
; 16980: 					//bankGold -= bankGoldInc;
; 16981: 					taxGoldCnt++;

  0017b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA
  00180	53		 push	 ebx
  00181	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA
  00187	40		 inc	 eax
  00188	2b cb		 sub	 ecx, ebx
  0018a	a3 00 00 00 00	 mov	 DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA, eax
  0018f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?haveGold@@3HA, ecx ; haveGold
  00195	83 f8 1e	 cmp	 eax, 30			; 0000001eH

; 16982: 					if (taxGoldCnt >= 30) {

  00198	0f 8c 9d 00 00
	00		 jl	 $LN41@familyTaxW

; 16983: 						taxGoldCnt = 0;

  0019e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA, 0

; 16984: 						if (taxGoldDec == 0) {

  001a8	85 db		 test	 ebx, ebx
  001aa	75 7d		 jne	 SHORT $LN39@familyTaxW

; 16985: 							taxGoldDec = 1;

  001ac	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA, 1

; 16986: 						}

  001b6	e9 80 00 00 00	 jmp	 $LN41@familyTaxW
$LN17@familyTaxW:

; 16881: 			case 0:
; 16882: 				sprintf(buf, "B|T|%d", familyTaxChange - familyTax);

  001bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?familyTaxChange@@3HA ; familyTaxChange
  001c0	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?familyTax@@3HA ; familyTax
  001c6	50		 push	 eax
  001c7	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001cd	68 00 00 00 00	 push	 OFFSET ??_C@_06BOIKNFOM@B?$HMT?$HM?$CFd@
  001d2	50		 push	 eax
  001d3	e8 00 00 00 00	 call	 _sprintf
  001d8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 16883: 				//sprintf( buf, "B|T|%d", 79000000 );
; 16884: 				if (bNewServer)

  001db	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001e1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001e8	50		 push	 eax
  001e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001ef	74 1c		 je	 SHORT $LN18@familyTaxW

; 16885: 					lssproto_FM_send(sockfd, buf);

  001f1	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send

; 16888: 				closeFamilyTaxWN();

  001f6	83 c4 08	 add	 esp, 8
  001f9	e8 00 00 00 00	 call	 ?closeFamilyTaxWN@@YAXXZ ; closeFamilyTaxWN
  001fe	5e		 pop	 esi

; 17086: #else
; 17087: 				btnId[0] = StockDispBuffer(winX + 100, winY + 160, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);
; 17088: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 160, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);
; 17089: #endif
; 17090: 				//btnId[1] = StockDispBuffer( winX+160, winY+160, DISP_PRIO_IME3,
; 17091: 				//					CG_TRADE_OK_BTN, 2 );
; 17092: 				//StockFontBuffer( winX+60, winY+120,
; 17093: 				//		FONT_PRIO_FRONT, FONT_PAL_WHITE, "åªææé¿å¯ä»¥åæ¬¾ã", 0 );
; 17094: 			}
; 17095: 
; 17096: 
; 17097: 			}
; 17098: 		}
; 17099: 
; 17100: 
; 17101: 	}

  001ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00202	33 cd		 xor	 ecx, ebp
  00204	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00209	8b e5		 mov	 esp, ebp
  0020b	5d		 pop	 ebp
  0020c	c3		 ret	 0
$LN18@familyTaxW:

; 16886: 				else
; 16887: 					old_lssproto_FM_send(sockfd, buf);

  0020d	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send

; 16888: 				closeFamilyTaxWN();

  00212	83 c4 08	 add	 esp, 8
$LN19@familyTaxW:
  00215	e8 00 00 00 00	 call	 ?closeFamilyTaxWN@@YAXXZ ; closeFamilyTaxWN
  0021a	5e		 pop	 esi

; 17086: #else
; 17087: 				btnId[0] = StockDispBuffer(winX + 100, winY + 160, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);
; 17088: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 160, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);
; 17089: #endif
; 17090: 				//btnId[1] = StockDispBuffer( winX+160, winY+160, DISP_PRIO_IME3,
; 17091: 				//					CG_TRADE_OK_BTN, 2 );
; 17092: 				//StockFontBuffer( winX+60, winY+120,
; 17093: 				//		FONT_PRIO_FRONT, FONT_PAL_WHITE, "åªææé¿å¯ä»¥åæ¬¾ã", 0 );
; 17094: 			}
; 17095: 
; 17096: 
; 17097: 			}
; 17098: 		}
; 17099: 
; 17100: 
; 17101: 	}

  0021b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0021e	33 cd		 xor	 ecx, ebp
  00220	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00225	8b e5		 mov	 esp, ebp
  00227	5d		 pop	 ebp
  00228	c3		 ret	 0
$LN39@familyTaxW:

; 16987: 						else {
; 16988: 							taxGoldDec *= 5;

  00229	8d 04 9b	 lea	 eax, DWORD PTR [ebx+ebx*4]

; 16989: 							if (taxGoldDec > 10000) {

  0022c	bb 10 27 00 00	 mov	 ebx, 10000		; 00002710H
  00231	3b c3		 cmp	 eax, ebx
  00233	0f 4f c3	 cmovg	 eax, ebx
  00236	a3 00 00 00 00	 mov	 DWORD PTR ?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA, eax
$LN41@familyTaxW:

; 16990: 								taxGoldDec = 10000;
; 16991: 							}
; 16992: 						}
; 16993: 					}
; 16994: 					if (haveGold < 0) {

  0023b	5b		 pop	 ebx
  0023c	85 c9		 test	 ecx, ecx
  0023e	79 39		 jns	 SHORT $LN42@familyTaxW

; 16995: 						haveGold = 0;
; 16996: 						play_se(220, 320, 240);

  00240	68 f0 00 00 00	 push	 240			; 000000f0H
  00245	68 40 01 00 00	 push	 320			; 00000140H
  0024a	68 dc 00 00 00	 push	 220			; 000000dcH
  0024f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, 0 ; haveGold
  00259	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0025e	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00264	83 c4 0c	 add	 esp, 12			; 0000000cH
  00267	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?familyTax@@3HA ; familyTax
  0026d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?haveGold@@3HA ; haveGold
  00273	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
$LN42@familyTaxW:

; 16997: 					}
; 16998: 					if ((familyTax + (pc.gold - haveGold)) > MAX_FMBANKGOLD) {

  00279	8b c6		 mov	 eax, esi
  0027b	2b c1		 sub	 eax, ecx
  0027d	03 c7		 add	 eax, edi
  0027f	3d 00 ca 9a 3b	 cmp	 eax, 1000000000		; 3b9aca00H
  00284	7e 30		 jle	 SHORT $LN43@familyTaxW

; 16999: 						haveGold = familyTax + pc.gold - MAX_FMBANKGOLD;
; 17000: 
; 17001: 						play_se(220, 320, 240);

  00286	68 f0 00 00 00	 push	 240			; 000000f0H
  0028b	8d 87 00 36 65
	c4		 lea	 eax, DWORD PTR [edi-1000000000]
  00291	03 c6		 add	 eax, esi
  00293	68 40 01 00 00	 push	 320			; 00000140H
  00298	68 dc 00 00 00	 push	 220			; 000000dcH
  0029d	a3 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  002a2	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002a7	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  002ad	83 c4 0c	 add	 esp, 12			; 0000000cH
  002b0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?haveGold@@3HA ; haveGold
$LN43@familyTaxW:

; 17002: 					}
; 17003: 
; 17004: 				}
; 17005: 
; 17006: 				if (mouse.onceState & MOUSE_LEFT_CRICK) {

  002b6	f6 c2 01	 test	 dl, 1
  002b9	0f 84 a4 01 00
	00		 je	 $LN90@familyTaxW

; 17007: 					haveGold--;

  002bf	83 e9 01	 sub	 ecx, 1

; 17008: 					if (haveGold < 0) {

  002c2	68 f0 00 00 00	 push	 240			; 000000f0H
  002c7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?haveGold@@3HA, ecx ; haveGold
  002cd	68 40 01 00 00	 push	 320			; 00000140H
  002d2	79 14		 jns	 SHORT $LN45@familyTaxW

; 17009: 						haveGold = 0;

  002d4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, 0 ; haveGold

; 17010: 						play_se(220, 320, 240);

  002de	68 dc 00 00 00	 push	 220			; 000000dcH

; 17011: 					}

  002e3	e9 73 01 00 00	 jmp	 $LN96@familyTaxW
$LN45@familyTaxW:

; 17012: 					else {
; 17013: 						taxGoldDec = 0;

  002e8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?taxGoldDec@?1??familyTaxWN@@YAXXZ@4HA, 0

; 17014: 						taxGoldCnt = 0;
; 17015: 						pushBtnFlag[3] = TRUE;

  002f2	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, 1

; 17016: 						play_se(217, 320, 240);

  002fc	e9 4b 01 00 00	 jmp	 $LN97@familyTaxW
$LN21@familyTaxW:

; 16901: 
; 16902: 			// Add Gold
; 16903: 		case 2:
; 16904: 			if (mouse.onceState & MOUSE_LEFT_CRICK_UP && pushBtnFlag[2] == TRUE) {

  00301	f6 c2 04	 test	 dl, 4
  00304	74 12		 je	 SHORT $LN22@familyTaxW
  00306	a1 08 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8
  0030b	33 c9		 xor	 ecx, ecx
  0030d	83 f8 01	 cmp	 eax, 1
  00310	0f 44 c1	 cmove	 eax, ecx
  00313	a3 08 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, eax
$LN22@familyTaxW:

; 16905: 
; 16906: 				pushBtnFlag[2] = FALSE;
; 16907: 			}
; 16908: 
; 16909: 			if ((haveGold < CHAR_getMaxHaveGold()) && (familyTaxChange > 0)) {

  00318	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  0031d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?haveGold@@3HA ; haveGold
  00323	3b d0		 cmp	 edx, eax
  00325	0f 8d 38 01 00
	00		 jge	 $LN90@familyTaxW
  0032b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?familyTaxChange@@3HA, 0 ; familyTaxChange
  00332	0f 8e 2b 01 00
	00		 jle	 $LN90@familyTaxW

; 16910: 
; 16911: 				if (pushBtnFlag[2] == TRUE) {

  00338	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, 1
  0033f	0f 85 b1 00 00
	00		 jne	 $LN89@familyTaxW

; 16912: 
; 16913: 					haveGold += taxGoldInc;
; 16914: 					//bankGold -= bankGoldInc;
; 16915: 					taxGoldCnt++;

  00345	a1 00 00 00 00	 mov	 eax, DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA
  0034a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA
  00350	40		 inc	 eax
  00351	03 d1		 add	 edx, ecx
  00353	a3 00 00 00 00	 mov	 DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA, eax
  00358	89 15 00 00 00
	00		 mov	 DWORD PTR ?haveGold@@3HA, edx ; haveGold
  0035e	83 f8 1e	 cmp	 eax, 30			; 0000001eH

; 16916: 
; 16917: 					// ?î¤î???
; 16918: 					if (taxGoldCnt >= 30) {

  00361	7c 2c		 jl	 SHORT $LN28@familyTaxW

; 16919: 						// î»?????î¤????????
; 16920: 						taxGoldCnt = 0;

  00363	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA, 0

; 16921: 						// ????????
; 16922: 						if (taxGoldInc == 0) {

  0036d	85 c9		 test	 ecx, ecx
  0036f	75 0c		 jne	 SHORT $LN26@familyTaxW

; 16923: 							taxGoldInc = 1;

  00371	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA, 1

; 16924: 						}

  0037b	eb 12		 jmp	 SHORT $LN28@familyTaxW
$LN26@familyTaxW:

; 16925: 						else {
; 16926: 							// ??îº???
; 16927: 							taxGoldInc *= 5;

  0037d	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]

; 16928: 							// ????????
; 16929: 							if (taxGoldInc > 10000) {

  00380	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  00385	3b c1		 cmp	 eax, ecx
  00387	0f 4f c1	 cmovg	 eax, ecx
  0038a	a3 00 00 00 00	 mov	 DWORD PTR ?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA, eax
$LN28@familyTaxW:

; 16930: 								taxGoldInc = 10000;
; 16931: 							}
; 16932: 						}
; 16933: 					}
; 16934: 					// ????????
; 16935: 					if (haveGold >= CHAR_getMaxHaveGold()) {

  0038f	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  00394	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?haveGold@@3HA ; haveGold
  0039a	3b d0		 cmp	 edx, eax
  0039c	7c 27		 jl	 SHORT $LN29@familyTaxW

; 16936: 						haveGold = CHAR_getMaxHaveGold();

  0039e	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold

; 16937: 						play_se(220, 320, 240);

  003a3	68 f0 00 00 00	 push	 240			; 000000f0H
  003a8	68 40 01 00 00	 push	 320			; 00000140H
  003ad	68 dc 00 00 00	 push	 220			; 000000dcH
  003b2	a3 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  003b7	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003bc	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?haveGold@@3HA ; haveGold
  003c2	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN29@familyTaxW:

; 16938: 					}
; 16939: 					if (haveGold >= pc.gold + familyTax) {

  003c5	a1 60 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+96
  003ca	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?familyTax@@3HA ; familyTax
  003d0	3b d0		 cmp	 edx, eax
  003d2	7c 22		 jl	 SHORT $LN89@familyTaxW

; 16940: 						haveGold = pc.gold + familyTax;
; 16941: 						play_se(220, 320, 240);

  003d4	68 f0 00 00 00	 push	 240			; 000000f0H
  003d9	68 40 01 00 00	 push	 320			; 00000140H
  003de	68 dc 00 00 00	 push	 220			; 000000dcH
  003e3	a3 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  003e8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003ed	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?haveGold@@3HA ; haveGold
  003f3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN89@familyTaxW:

; 16942: 					}
; 16943: 
; 16944: 				}
; 16945: 
; 16946: 				// ????????
; 16947: 				if (mouse.onceState & MOUSE_LEFT_CRICK) {

  003f6	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  003fd	74 64		 je	 SHORT $LN90@familyTaxW

; 16948: 					// ???
; 16949: 					haveGold++;

  003ff	42		 inc	 edx
  00400	89 15 00 00 00
	00		 mov	 DWORD PTR ?haveGold@@3HA, edx ; haveGold

; 16950: 					// ????????
; 16951: 					if (haveGold >= CHAR_getMaxHaveGold()) {

  00406	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  0040b	39 05 00 00 00
	00		 cmp	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  00411	7c 1b		 jl	 SHORT $LN32@familyTaxW

; 16952: 						haveGold = CHAR_getMaxHaveGold();

  00413	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold

; 16953: 						// ???
; 16954: 						play_se(220, 320, 240);

  00418	68 f0 00 00 00	 push	 240			; 000000f0H
  0041d	68 40 01 00 00	 push	 320			; 00000140H
  00422	a3 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  00427	68 dc 00 00 00	 push	 220			; 000000dcH

; 16955: 					}

  0042c	eb 2d		 jmp	 SHORT $LN96@familyTaxW
$LN32@familyTaxW:

; 16956: 					else {
; 16957: 						// î»?????î¤
; 16958: 						taxGoldInc = 0;
; 16959: 						// î»?????î¤????????
; 16960: 						taxGoldCnt = 0;
; 16961: 						// ???????
; 16962: 						pushBtnFlag[2] = TRUE;
; 16963: 						// ?????
; 16964: 						play_se(217, 320, 240);

  0042e	68 f0 00 00 00	 push	 240			; 000000f0H
  00433	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?taxGoldInc@?1??familyTaxWN@@YAXXZ@4HA, 0
  0043d	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, 1
  00447	68 40 01 00 00	 push	 320			; 00000140H
$LN97@familyTaxW:

; 17017: 					}
; 17018: 				}
; 17019: 			}
; 17020: 			break;
; 17021: 
; 17022: 		}
; 17023: 
; 17024: 
; 17025: #endif
; 17026: 
; 17027: 		for (int i = 0; i < 4; i++)
; 17028: 		{
; 17029: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  0044c	68 d9 00 00 00	 push	 217			; 000000d9H
  00451	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?taxGoldCnt@?1??familyTaxWN@@YAXXZ@4HA, 0
$LN96@familyTaxW:
  0045b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00460	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN90@familyTaxW:
  00463	a1 28 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+40
  00468	5f		 pop	 edi
  00469	83 e0 01	 and	 eax, 1
  0046c	74 15		 je	 SHORT $LN61@familyTaxW
  0046e	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA, 1
  00475	75 0c		 jne	 SHORT $LN61@familyTaxW

; 17030: 				pushBtnFlag[i] = TRUE;

  00477	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA, 1
  00481	eb 0e		 jmp	 SHORT $LN87@familyTaxW
$LN61@familyTaxW:

; 17031: 			else	pushBtnFlag[i] = FALSE;

  00483	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA, 0
  0048d	85 c0		 test	 eax, eax
  0048f	74 15		 je	 SHORT $LN76@familyTaxW
$LN87@familyTaxW:

; 17017: 					}
; 17018: 				}
; 17019: 			}
; 17020: 			break;
; 17021: 
; 17022: 		}
; 17023: 
; 17024: 
; 17025: #endif
; 17026: 
; 17027: 		for (int i = 0; i < 4; i++)
; 17028: 		{
; 17029: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  00491	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+4, 1
  00498	75 0c		 jne	 SHORT $LN76@familyTaxW

; 17030: 				pushBtnFlag[i] = TRUE;

  0049a	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+4, 1
  004a4	eb 0e		 jmp	 SHORT $LN86@familyTaxW
$LN76@familyTaxW:

; 17031: 			else	pushBtnFlag[i] = FALSE;

  004a6	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+4, 0
  004b0	85 c0		 test	 eax, eax
  004b2	74 15		 je	 SHORT $LN79@familyTaxW
$LN86@familyTaxW:

; 17017: 					}
; 17018: 				}
; 17019: 			}
; 17020: 			break;
; 17021: 
; 17022: 		}
; 17023: 
; 17024: 
; 17025: #endif
; 17026: 
; 17027: 		for (int i = 0; i < 4; i++)
; 17028: 		{
; 17029: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  004b4	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, 1
  004bb	75 0c		 jne	 SHORT $LN79@familyTaxW

; 17030: 				pushBtnFlag[i] = TRUE;

  004bd	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, 1
  004c7	eb 0e		 jmp	 SHORT $LN85@familyTaxW
$LN79@familyTaxW:

; 17031: 			else	pushBtnFlag[i] = FALSE;

  004c9	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8, 0
  004d3	85 c0		 test	 eax, eax
  004d5	74 13		 je	 SHORT $LN82@familyTaxW
$LN85@familyTaxW:

; 17017: 					}
; 17018: 				}
; 17019: 			}
; 17020: 			break;
; 17021: 
; 17022: 		}
; 17023: 
; 17024: 
; 17025: #endif
; 17026: 
; 17027: 		for (int i = 0; i < 4; i++)
; 17028: 		{
; 17029: 			if (mouse.state & MOUSE_LEFT_CRICK && pushBtnFlag[i] == TRUE)

  004d7	83 3d 0c 00 00
	00 01		 cmp	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, 1

; 17030: 				pushBtnFlag[i] = TRUE;

  004de	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, 1
  004e8	74 0a		 je	 SHORT $LN83@familyTaxW
$LN82@familyTaxW:

; 17031: 			else	pushBtnFlag[i] = FALSE;

  004ea	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12, 0
$LN83@familyTaxW:

; 17032: 		}
; 17033: 
; 17034: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  004f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004f9	85 c0		 test	 eax, eax
  004fb	0f 84 e7 01 00
	00		 je	 $LN94@familyTaxW
  00501	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00505	0f 8c dd 01 00
	00		 jl	 $LN94@familyTaxW

; 17035: 		{
; 17036: #ifdef NEWå®¶æé¶è¡å¾æ¡£
; 17037: 			StockDispBuffer(320 + DISPLACEMENT_X / 2, 240 + DISPLACEMENT_Y / 2, DISP_PRIO_IME3 - 1, IMAGE_å®¶æé¶è¡, 1);

  0050b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00510	99		 cdq
  00511	2b c2		 sub	 eax, edx
  00513	d1 f8		 sar	 eax, 1
  00515	6a 01		 push	 1
  00517	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0051c	68 80 66 00 00	 push	 26240			; 00006680H
  00521	6a 68		 push	 104			; 00000068H
  00523	50		 push	 eax
  00524	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00529	99		 cdq
  0052a	2b c2		 sub	 eax, edx
  0052c	d1 f8		 sar	 eax, 1
  0052e	05 40 01 00 00	 add	 eax, 320		; 00000140H
  00533	50		 push	 eax
  00534	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 17038: #else
; 17039: 			sprintf(dataBuf, "%s  å®¶æçå¸æ·", pc.familyName);
; 17040: 			StockFontBuffer(winX + 80, winY + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);
; 17041: #endif
; 17042: 
; 17043: #ifdef _READ16BITBMP
; 17044: 			if (!g_bUseAlpha) StockDispHLine(winX + 64, winY + 50, 3);
; 17045: #endif
; 17046: 
; 17047: #ifndef NEWå®¶æé¶è¡å¾æ¡£
; 17048: 			StockFontBuffer(winX + 60, winY + 70, FONT_PRIO_FRONT, FONT_PAL_WHITE, "å­  æ¬¾ï¼", 0);
; 17049: #endif 
; 17050: 			familyTaxChange = familyTax + (pc.gold - haveGold);

  00539	a1 60 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+96
  0053e	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?haveGold@@3HA ; haveGold
  00544	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?familyTax@@3HA ; familyTax

; 17051: 			sprintf(dataBuf, "%d", familyTaxChange);

  0054a	50		 push	 eax
  0054b	a3 00 00 00 00	 mov	 DWORD PTR ?familyTaxChange@@3HA, eax ; familyTaxChange
  00550	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00556	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0055b	50		 push	 eax
  0055c	e8 00 00 00 00	 call	 _sprintf

; 17052: 			StockFontBuffer(winX + 200, winY + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);

  00561	6a 00		 push	 0
  00563	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00569	50		 push	 eax
  0056a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  0056f	6a 00		 push	 0
  00571	83 c0 78	 add	 eax, 120		; 00000078H
  00574	6a 01		 push	 1
  00576	50		 push	 eax
  00577	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  0057c	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17053: 
; 17054: #ifndef NEWå®¶æé¶è¡å¾æ¡£
; 17055: 			StockFontBuffer(winX + 60, winY + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ç°  éï¼", 0);
; 17056: #endif
; 17057: 			sprintf(dataBuf, "%d", haveGold);

  00587	ff 35 00 00 00
	00		 push	 DWORD PTR ?haveGold@@3HA ; haveGold
  0058d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  00593	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00598	50		 push	 eax
  00599	e8 00 00 00 00	 call	 _sprintf
  0059e	83 c4 44	 add	 esp, 68			; 00000044H

; 17058: 			StockFontBuffer(winX + 200, winY + 70, FONT_PRIO_FRONT, FONT_PAL_WHITE, dataBuf, 0);

  005a1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _dataBuf$[ebp]
  005a7	6a 00		 push	 0
  005a9	50		 push	 eax
  005aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  005af	6a 00		 push	 0
  005b1	83 c0 46	 add	 eax, 70			; 00000046H
  005b4	6a 01		 push	 1
  005b6	50		 push	 eax
  005b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  005bc	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  005c1	50		 push	 eax
  005c2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17059: 
; 17060: 
; 17061: 			btnId[2] = StockDispBuffer(winX + 170 + 60, winY + 105, DISP_PRIO_IME3, CG_UP_BTN + pushBtnFlag[2], 2);

  005c7	a1 08 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+8
  005cc	05 4c 66 00 00	 add	 eax, 26188		; 0000664cH
  005d1	6a 02		 push	 2
  005d3	50		 push	 eax
  005d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  005d9	83 c0 69	 add	 eax, 105		; 00000069H
  005dc	6a 69		 push	 105			; 00000069H
  005de	50		 push	 eax
  005df	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  005e4	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  005e9	50		 push	 eax
  005ea	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005ef	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA+8, eax
  005f4	83 c4 2c	 add	 esp, 44			; 0000002cH

; 17062: #ifdef _FMVER21
; 17063: 			/*if( pc.familyleader == FMMEMBER_LEADER ||
; 17064: 				pc.familyleader == FMMEMBER_VICELEADER ||
; 17065: 				pc.familyleader == FMMEMBER_BAILEE) {*/
; 17066: 			if (pc.familyleader == FMMEMBER_LEADER ||

  005f7	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
  005fc	83 f8 03	 cmp	 eax, 3
  005ff	74 67		 je	 SHORT $LN52@familyTaxW
  00601	83 f8 04	 cmp	 eax, 4
  00604	74 62		 je	 SHORT $LN52@familyTaxW

; 17075: #else
; 17076: 				btnId[0] = StockDispBuffer(winX + 100, winY + 160, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);
; 17077: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 160, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);
; 17078: #endif
; 17079: 
; 17080: 			}
; 17081: 			else
; 17082: 			{
; 17083: #ifdef NEWå®¶æé¶è¡å¾æ¡£
; 17084: 				btnId[0] = StockDispBuffer(winX + 100, winY + 165, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);

  00606	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  0060b	6a 02		 push	 2
  0060d	68 ed 65 00 00	 push	 26093			; 000065edH
  00612	05 a5 00 00 00	 add	 eax, 165		; 000000a5H
  00617	6a 69		 push	 105			; 00000069H
  00619	50		 push	 eax
  0061a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  0061f	83 c0 64	 add	 eax, 100		; 00000064H
  00622	50		 push	 eax
  00623	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00628	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA, eax

; 17085: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 165, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);

  0062d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  00632	6a 02		 push	 2
  00634	68 c2 65 00 00	 push	 26050			; 000065c2H
  00639	05 a5 00 00 00	 add	 eax, 165		; 000000a5H
  0063e	6a 69		 push	 105			; 00000069H
  00640	50		 push	 eax
  00641	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  00646	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  0064b	50		 push	 eax
  0064c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00651	83 c4 28	 add	 esp, 40			; 00000028H
  00654	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA+4, eax
  00659	5e		 pop	 esi

; 17086: #else
; 17087: 				btnId[0] = StockDispBuffer(winX + 100, winY + 160, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);
; 17088: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 160, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);
; 17089: #endif
; 17090: 				//btnId[1] = StockDispBuffer( winX+160, winY+160, DISP_PRIO_IME3,
; 17091: 				//					CG_TRADE_OK_BTN, 2 );
; 17092: 				//StockFontBuffer( winX+60, winY+120,
; 17093: 				//		FONT_PRIO_FRONT, FONT_PAL_WHITE, "åªææé¿å¯ä»¥åæ¬¾ã", 0 );
; 17094: 			}
; 17095: 
; 17096: 
; 17097: 			}
; 17098: 		}
; 17099: 
; 17100: 
; 17101: 	}

  0065a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0065d	33 cd		 xor	 ecx, ebp
  0065f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00664	8b e5		 mov	 esp, ebp
  00666	5d		 pop	 ebp
  00667	c3		 ret	 0
$LN52@familyTaxW:

; 17067: 				pc.familyleader == FMMEMBER_ELDER) {
; 17068: #else
; 17069: 			if (pc.familyleader == 1) {
; 17070: #endif
; 17071: 				btnId[3] = StockDispBuffer(winX + 170, winY + 105, DISP_PRIO_IME3, CG_DOWN_BTN + pushBtnFlag[3], 2);

  00668	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?pushBtnFlag@?1??familyTaxWN@@YAXXZ@4PAHA+12
  0066d	05 4e 66 00 00	 add	 eax, 26190		; 0000664eH
  00672	6a 02		 push	 2
  00674	50		 push	 eax
  00675	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  0067a	83 c0 69	 add	 eax, 105		; 00000069H
  0067d	6a 69		 push	 105			; 00000069H
  0067f	50		 push	 eax
  00680	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  00685	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  0068a	50		 push	 eax
  0068b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00690	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA+12, eax

; 17072: #ifdef NEWå®¶æé¶è¡å¾æ¡£
; 17073: 				btnId[0] = StockDispBuffer(winX + 100, winY + 165, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);

  00695	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  0069a	6a 02		 push	 2
  0069c	68 ed 65 00 00	 push	 26093			; 000065edH
  006a1	05 a5 00 00 00	 add	 eax, 165		; 000000a5H
  006a6	6a 69		 push	 105			; 00000069H
  006a8	50		 push	 eax
  006a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  006ae	83 c0 64	 add	 eax, 100		; 00000064H
  006b1	50		 push	 eax
  006b2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006b7	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA, eax

; 17074: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 165, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);

  006bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??familyTaxWN@@YAXXZ@4HA
  006c1	6a 02		 push	 2
  006c3	68 c2 65 00 00	 push	 26050			; 000065c2H
  006c8	05 a5 00 00 00	 add	 eax, 165		; 000000a5H
  006cd	6a 69		 push	 105			; 00000069H
  006cf	50		 push	 eax
  006d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??familyTaxWN@@YAXXZ@4HA
  006d5	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  006da	50		 push	 eax
  006db	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006e0	83 c4 3c	 add	 esp, 60			; 0000003cH
  006e3	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyTaxWN@@YAXXZ@4PAHA+4, eax
$LN94@familyTaxW:
  006e8	5e		 pop	 esi
$LN51@familyTaxW:

; 17086: #else
; 17087: 				btnId[0] = StockDispBuffer(winX + 100, winY + 160, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);
; 17088: 				btnId[1] = StockDispBuffer(winX + 100 + 120, winY + 160, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);
; 17089: #endif
; 17090: 				//btnId[1] = StockDispBuffer( winX+160, winY+160, DISP_PRIO_IME3,
; 17091: 				//					CG_TRADE_OK_BTN, 2 );
; 17092: 				//StockFontBuffer( winX+60, winY+120,
; 17093: 				//		FONT_PRIO_FRONT, FONT_PAL_WHITE, "åªææé¿å¯ä»¥åæ¬¾ã", 0 );
; 17094: 			}
; 17095: 
; 17096: 
; 17097: 			}
; 17098: 		}
; 17099: 
; 17100: 
; 17101: 	}

  006e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006ec	33 cd		 xor	 ecx, ebp
  006ee	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006f3	8b e5		 mov	 esp, ebp
  006f5	5d		 pop	 ebp
  006f6	c3		 ret	 0
?familyTaxWN@@YAXXZ ENDP				; familyTaxWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyTaxWN@@YAXPAD@Z
_TEXT	SEGMENT
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFamilyTaxWN@@YAXPAD@Z PROC				; initFamilyTaxWN, COMDAT

; 16790: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 08	 mov	 eax, DWORD PTR _data$[ebp]

; 16791: 	char buf[256];
; 16792: 	getStringToken(data, '|', 3, sizeof(buf) - 1, buf);

  00016	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  0001c	51		 push	 ecx
  0001d	68 ff 00 00 00	 push	 255			; 000000ffH
  00022	6a 03		 push	 3
  00024	6a 7c		 push	 124			; 0000007cH
  00026	50		 push	 eax
  00027	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 16793: 	familyTax = atoi(buf);

  0002c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 _atoi
  00038	83 c4 18	 add	 esp, 24			; 00000018H
  0003b	a3 00 00 00 00	 mov	 DWORD PTR ?familyTax@@3HA, eax ; familyTax

; 16794: 
; 16795: 	familyTaxChange = familyTax;
; 16796: 	haveGold = pc.gold;
; 16797: 
; 16798: 	if (windowTypeWN != WINDOW_MESSAGETYPE_FAMILYTAX)

  00040	83 3d 00 00 00
	00 1d		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 29 ; windowTypeWN, 0000001dH
  00047	a3 00 00 00 00	 mov	 DWORD PTR ?familyTaxChange@@3HA, eax ; familyTaxChange
  0004c	a1 60 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+96
  00051	a3 00 00 00 00	 mov	 DWORD PTR ?haveGold@@3HA, eax ; haveGold
  00056	74 22		 je	 SHORT $LN2@initFamily

; 16799: 	{
; 16800: 		windowTypeWN = WINDOW_MESSAGETYPE_FAMILYTAX;
; 16801: 		DeathAction(ptActMenuWin);

  00058	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0005e	c7 05 00 00 00
	00 1d 00 00 00	 mov	 DWORD PTR ?windowTypeWN@@3HA, 29 ; windowTypeWN, 0000001dH
  00068	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0006d	83 c4 04	 add	 esp, 4

; 16802: 		ptActMenuWin = NULL;

  00070	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN2@initFamily:

; 16803: 	}
; 16804: 
; 16805: }

  0007a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0007d	33 cd		 xor	 ecx, ebp
  0007f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00084	8b e5		 mov	 esp, ebp
  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?initFamilyTaxWN@@YAXPAD@Z ENDP				; initFamilyTaxWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?mineFamilyDetailWN@@YAXXZ
_TEXT	SEGMENT
_buf$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?mineFamilyDetailWN@@YAXXZ PROC				; mineFamilyDetailWN, COMDAT

; 17812: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 17813: 
; 17814: 	static int winX, winY;
; 17815: 	static int winW, winH;
; 17816: 	static int fontId[2];
; 17817: 	int selId;
; 17818: 	char buf[256];
; 17819: 	//char timebuf[14];
; 17820: 	int i;
; 17821: 
; 17822: 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 85 87 00 00
	00		 jne	 $LN21@mineFamily

; 17823: 	{
; 17824: 		winW = 7;
; 17825: 		winH = 6;
; 17826: 		winX = (640 - winW * 64) / 2;
; 17827: 		winY = (456 - winH * 48) / 2;
; 17828: 
; 17829: 
; 17830: 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00020	6a 01		 push	 1
  00022	6a 00		 push	 0
  00024	6a 06		 push	 6
  00026	6a 07		 push	 7
  00028	6a 54		 push	 84			; 00000054H
  0002a	6a 60		 push	 96			; 00000060H
  0002c	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??mineFamilyDetailWN@@YAXXZ@4HA, 7
  00036	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?winH@?1??mineFamilyDetailWN@@YAXXZ@4HA, 6
  00040	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA, 96 ; 00000060H
  0004a	c7 05 00 00 00
	00 54 00 00 00	 mov	 DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA, 84 ; 00000054H
  00054	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 17831: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 17832: 		winX = ptActMenuWin->x;
; 17833: 		winY = ptActMenuWin->y;
; 17834: #endif
; 17835: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 17836: 			fontId[i] = -2;
; 17837: 
; 17838: 		play_se(202, 320, 240);

  00059	68 f0 00 00 00	 push	 240			; 000000f0H
  0005e	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00063	68 40 01 00 00	 push	 320			; 00000140H
  00068	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006b	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0006e	68 ca 00 00 00	 push	 202			; 000000caH
  00073	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA, ecx
  00079	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA, eax
  0007e	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA, -2 ; fffffffeH
  00088	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA+4, -2 ; fffffffeH
  00092	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00097	83 c4 24	 add	 esp, 36			; 00000024H

; 17839: 	}
; 17840: 
; 17841: 	if (ptActMenuWin != NULL)

  0009a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  000a1	0f 84 ef 03 00
	00		 je	 $LN13@mineFamily
$LN21@mineFamily:
  000a7	56		 push	 esi

; 17842: 	{
; 17843: 		selId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  000a8	6a 02		 push	 2
  000aa	68 00 00 00 00	 push	 OFFSET ?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA
  000af	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000b4	83 c4 08	 add	 esp, 8
  000b7	8b f0		 mov	 esi, eax

; 17844: 
; 17845: 		if (CheckMenuFlag()
; 17846: 			|| (joy_trg[0] & JOY_ESC)
; 17847: 			|| actBtn == 1
; 17848: 			|| menuBtn == 1
; 17849: 			|| disconnectServerFlag == TRUE
; 17850: 			|| wnCloseFlag == 1)

  000b9	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  000be	85 c0		 test	 eax, eax
  000c0	75 33		 jne	 SHORT $LN10@mineFamily
  000c2	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  000cc	75 27		 jne	 SHORT $LN10@mineFamily
  000ce	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  000d6	74 1d		 je	 SHORT $LN10@mineFamily
  000d8	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  000e0	74 13		 je	 SHORT $LN10@mineFamily
  000e2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000e9	74 0a		 je	 SHORT $LN10@mineFamily
  000eb	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000f3	75 05		 jne	 SHORT $LN9@mineFamily
$LN10@mineFamily:

; 17851: 		{
; 17852: 			closeMineFamilyDetailWN();

  000f5	e8 00 00 00 00	 call	 ?closeMineFamilyDetailWN@@YAXXZ ; closeMineFamilyDetailWN
$LN9@mineFamily:

; 17853: 		}
; 17854: 
; 17855: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  000fa	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00101	74 18		 je	 SHORT $LN5@mineFamily

; 17856: 
; 17857: 			switch (selId) {

  00103	85 f6		 test	 esi, esi
  00105	75 14		 jne	 SHORT $LN5@mineFamily

; 17858: 			case 0:
; 17859: 				closeFamilyLeaderChangeWN();

  00107	e8 00 00 00 00	 call	 ?closeFamilyLeaderChangeWN@@YAXXZ ; closeFamilyLeaderChangeWN
  0010c	5e		 pop	 esi

; 17924: 				"  ì·¨  ì  ", 2);
; 17925: 		}
; 17926: 
; 17927: 	}
; 17928: 
; 17929: }

  0010d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00110	33 cd		 xor	 ecx, ebp
  00112	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00117	8b e5		 mov	 esp, ebp
  00119	5d		 pop	 ebp
  0011a	c3		 ret	 0
$LN5@mineFamily:

; 17860: 				return;
; 17861: 			}
; 17862: 
; 17863: 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  0011b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00120	85 c0		 test	 eax, eax
  00122	0f 84 6d 03 00
	00		 je	 $LN22@mineFamily
  00128	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0012c	0f 8c 63 03 00
	00		 jl	 $LN22@mineFamily

; 17864: 		{
; 17865: 
; 17866: 			StockFontBuffer(winX + 190, winY + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ê°ì¡±ì ë³´", 0);

  00132	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00137	6a 00		 push	 0
  00139	68 00 00 00 00	 push	 OFFSET ??_C@_08KIHJGLGD@?$LA?$KB?A?$LH?A?$KE?$LK?$LI@
  0013e	6a 00		 push	 0
  00140	83 c0 14	 add	 eax, 20			; 00000014H
  00143	6a 01		 push	 1
  00145	50		 push	 eax
  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0014b	05 be 00 00 00	 add	 eax, 190		; 000000beH
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17867: #ifdef _READ16BITBMP
; 17868: 			if (!g_bUseAlpha) StockDispHLine(winX + 160, winY + 40, 2);
; 17869: #endif
; 17870: 
; 17871: 			sprintf(buf, "ê°ì¡±ì´ë¦ï¼%s", mineFamily.name);

  00156	68 00 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A ; mineFamily
  0015b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00161	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EFFHHOOF@?$LA?$KB?A?$LH?$MA?L?$LI?$KH?$KD?$LK?$CFs@
  00166	50		 push	 eax
  00167	e8 00 00 00 00	 call	 _sprintf

; 17872: 			StockFontBuffer(winX + 30, winY + 60, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0016c	6a 00		 push	 0
  0016e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00174	50		 push	 eax
  00175	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0017a	6a 00		 push	 0
  0017c	83 c0 3c	 add	 eax, 60			; 0000003cH
  0017f	6a 01		 push	 1
  00181	50		 push	 eax
  00182	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00187	83 c0 1e	 add	 eax, 30			; 0000001eH
  0018a	50		 push	 eax
  0018b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17873: 			sprintf(buf, "ì¡±ì¥ì´ë¦ï¼%s", mineFamily.leadername);

  00190	68 44 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+68
  00195	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0019b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LNHPBKEN@?A?$LH?$MA?e?$MA?L?$LI?$KH?$KD?$LK?$CFs@
  001a0	50		 push	 eax
  001a1	e8 00 00 00 00	 call	 _sprintf
  001a6	83 c4 48	 add	 esp, 72			; 00000048H

; 17874: 			StockFontBuffer(winX + 240, winY + 60, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  001a9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001af	6a 00		 push	 0
  001b1	50		 push	 eax
  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  001b7	6a 00		 push	 0
  001b9	83 c0 3c	 add	 eax, 60			; 0000003cH
  001bc	6a 01		 push	 1
  001be	50		 push	 eax
  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  001c4	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  001c9	50		 push	 eax
  001ca	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17875: 
; 17876: 			sprintf(buf, "ê°ì¡±ì¸ìï¼%d", mineFamily.member);

  001cf	ff 35 40 00 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+64
  001d5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001db	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DKIOHJKC@?$LA?$KB?A?$LH?$MA?N?$LP?x?$KD?$LK?$CFd@
  001e0	50		 push	 eax
  001e1	e8 00 00 00 00	 call	 _sprintf

; 17877: 			StockFontBuffer(winX + 30, winY + 90, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  001e6	6a 00		 push	 0
  001e8	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001ee	50		 push	 eax
  001ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  001f4	6a 00		 push	 0
  001f6	83 c0 5a	 add	 eax, 90			; 0000005aH
  001f9	6a 01		 push	 1
  001fb	50		 push	 eax
  001fc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00201	83 c0 1e	 add	 eax, 30			; 0000001eH
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17878: 			sprintf(buf, "ìí¸ì ë ¹ï¼%s", familySpriteName[mineFamily.sprite]);

  0020a	a1 94 00 00 00	 mov	 eax, DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+148
  0020f	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00212	8d 04 45 00 00
	00 00		 lea	 eax, DWORD PTR ?familySpriteName@@3PAY09DA[eax*2]
  00219	50		 push	 eax
  0021a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BCMFNKAE@?$LM?v?H?$KD?A?$KE?$LH?I?$KD?$LK?$CFs@
  00225	50		 push	 eax
  00226	e8 00 00 00 00	 call	 _sprintf
  0022b	83 c4 48	 add	 esp, 72			; 00000048H

; 17879: 			StockFontBuffer(winX + 240, winY + 90, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0022e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00234	6a 00		 push	 0
  00236	50		 push	 eax
  00237	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0023c	6a 00		 push	 0
  0023e	83 c0 5a	 add	 eax, 90			; 0000005aH
  00241	6a 01		 push	 1
  00243	50		 push	 eax
  00244	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00249	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17880: #ifdef _NEW_MANOR_LAW
; 17881: 			sprintf(buf, "ëªì±ììï¼%d", mineFamily.rank);

  00254	ff 35 84 00 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+132
  0025a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00260	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CHGBLECB@?$LI?m?$LM?$LK?$LM?x?$MA?$KH?$KD?$LK?$CFd@
  00265	50		 push	 eax
  00266	e8 00 00 00 00	 call	 _sprintf

; 17882: #else
; 17883: 			sprintf(buf, "å®¶ææåï¼%d", mineFamily.rank);
; 17884: #endif
; 17885: 			StockFontBuffer(winX + 30, winY + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0026b	6a 00		 push	 0
  0026d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00273	50		 push	 eax
  00274	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00279	6a 00		 push	 0
  0027b	83 c0 78	 add	 eax, 120		; 00000078H
  0027e	6a 01		 push	 1
  00280	50		 push	 eax
  00281	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00286	83 c0 1e	 add	 eax, 30			; 0000001eH
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17886: 			sprintf(buf, "ê°ì¡±ëªì±ï¼%d", mineFamily.fmdp);

  0028f	ff 35 88 00 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+136
  00295	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0029b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HFHEMMCA@?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$KD?$LK?$CFd@
  002a0	50		 push	 eax
  002a1	e8 00 00 00 00	 call	 _sprintf
  002a6	83 c4 48	 add	 esp, 72			; 00000048H

; 17887: 			StockFontBuffer(winX + 240, winY + 120, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  002a9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002af	6a 00		 push	 0
  002b1	50		 push	 eax
  002b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  002b7	6a 00		 push	 0
  002b9	83 c0 78	 add	 eax, 120		; 00000078H
  002bc	6a 01		 push	 1
  002be	50		 push	 eax
  002bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  002c4	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  002c9	50		 push	 eax
  002ca	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17888: 
; 17889: 			sprintf(buf, "ê°ì¡±ì§ì±ï¼%s", familyJobName[mineFamily.job]);

  002cf	a1 90 00 00 00	 mov	 eax, DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+144
  002d4	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?familyJobName@@3PAPADA[eax*4]
  002db	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJCMAAFH@?$LA?$KB?A?$LH?A?w?C?$KF?$KD?$LK?$CFs@
  002e6	50		 push	 eax
  002e7	e8 00 00 00 00	 call	 _sprintf

; 17890: 			StockFontBuffer(winX + 30, winY + 150, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  002ec	6a 00		 push	 0
  002ee	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002f4	50		 push	 eax
  002f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  002fa	6a 00		 push	 0
  002fc	05 96 00 00 00	 add	 eax, 150		; 00000096H
  00301	6a 01		 push	 1
  00303	50		 push	 eax
  00304	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00309	83 c0 1e	 add	 eax, 30			; 0000001eH
  0030c	50		 push	 eax
  0030d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17891: 			sprintf(buf, "ê°ì¸ëªì±ï¼%d", mineFamily.personaldp);

  00312	ff 35 8c 00 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+140
  00318	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0031e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FOIFMONB@?$LA?$LD?$MA?N?$LI?m?$LM?$LK?$KD?$LK?$CFd@
  00323	50		 push	 eax
  00324	e8 00 00 00 00	 call	 _sprintf
  00329	83 c4 48	 add	 esp, 72			; 00000048H

; 17892: 			StockFontBuffer(winX + 240, winY + 150, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0032c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00332	6a 00		 push	 0
  00334	50		 push	 eax
  00335	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0033a	6a 00		 push	 0
  0033c	05 96 00 00 00	 add	 eax, 150		; 00000096H
  00341	6a 01		 push	 1
  00343	50		 push	 eax
  00344	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00349	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0034e	50		 push	 eax
  0034f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17893: 
; 17894: #ifdef _NEW_MANOR_LAW
; 17895: 			sprintf(buf, "ê°ì¡±ê¸°ì¸ï¼%d", mineFamily.fmMomentum);

  00354	ff 35 fc 01 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+508
  0035a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00360	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NGKOILMK@?$LA?$KB?A?$LH?$LB?b?$LM?$LM?$KD?$LK?$CFd@
  00365	50		 push	 eax
  00366	e8 00 00 00 00	 call	 _sprintf

; 17896: 			StockFontBuffer(winX + 240, winY + 180, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0036b	6a 00		 push	 0
  0036d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00373	50		 push	 eax
  00374	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00379	6a 00		 push	 0
  0037b	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00380	6a 01		 push	 1
  00382	50		 push	 eax
  00383	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00388	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0038d	50		 push	 eax
  0038e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17897: 			sprintf(buf, "ê°ì¸ê¸°ì¸ï¼%d", mineFamily.momentum);

  00393	ff 35 00 02 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+512
  00399	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0039f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PNFPIJDL@?$LA?$LD?$MA?N?$LB?b?$LM?$LM?$KD?$LK?$CFd@
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 _sprintf
  003aa	83 c4 48	 add	 esp, 72			; 00000048H

; 17898: 			StockFontBuffer(winX + 240, winY + 210, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  003ad	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  003b3	6a 00		 push	 0
  003b5	50		 push	 eax
  003b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  003bb	6a 00		 push	 0
  003bd	05 d2 00 00 00	 add	 eax, 210		; 000000d2H
  003c2	6a 01		 push	 1
  003c4	50		 push	 eax
  003c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  003ca	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17899: #endif
; 17900: 
; 17901: #ifdef _NB_FAMILYBADGE
; 17902: 			StockFontBuffer(winX + 30, winY + 210, FONT_PRIO_FRONT, FONT_PAL_WHITE, "å®¶æå¾½ç« ï¼", 0);

  003d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  003da	6a 00		 push	 0
  003dc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ODKJDFKI@?J?$KL?p?i?$PN?E?m?q?$KD?$LK@
  003e1	6a 00		 push	 0
  003e3	05 d2 00 00 00	 add	 eax, 210		; 000000d2H
  003e8	6a 01		 push	 1
  003ea	50		 push	 eax
  003eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  003f0	83 c0 1e	 add	 eax, 30			; 0000001eH
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17903: 			StockDispBuffer(winX + 120, winY + 215, DISP_PRIO_IME4, mineFamily.badgeNo, 0);

  003f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  003fe	6a 00		 push	 0
  00400	ff 35 04 02 00
	00		 push	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+516
  00406	05 d7 00 00 00	 add	 eax, 215		; 000000d7H
  0040b	6a 6a		 push	 106			; 0000006aH
  0040d	50		 push	 eax
  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00413	83 c0 78	 add	 eax, 120		; 00000078H
  00416	50		 push	 eax
  00417	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 17904: #endif
; 17905: 			StockFontBuffer(winX + 30, winY + 180, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ì ë ¹ë§ìï¼", 0);

  0041c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00421	83 c4 44	 add	 esp, 68			; 00000044H
  00424	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00429	6a 00		 push	 0
  0042b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MCFCFIOA@?A?$KB?$LH?I?$LI?$LG?$MA?$LL?$KD?$LK@
  00430	6a 00		 push	 0
  00432	6a 01		 push	 1
  00434	50		 push	 eax
  00435	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0043a	83 c0 1e	 add	 eax, 30			; 0000001eH
  0043d	50		 push	 eax
  0043e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17906: #ifdef _NEW_MANOR_LAW
; 17907: 			StockFontBuffer(winX + 45, winY + 230, FONT_PRIO_FRONT, FONT_PAL_WHITE, mineFamily.pkdata, 0);

  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00448	6a 00		 push	 0
  0044a	68 fc 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+252
  0044f	6a 00		 push	 0
  00451	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  00456	6a 01		 push	 1
  00458	50		 push	 eax
  00459	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0045e	83 c0 2d	 add	 eax, 45			; 0000002dH
  00461	50		 push	 eax
  00462	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 17908: #else
; 17909: 			StockFontBuffer(winX + 45, winY + 210, FONT_PRIO_FRONT, FONT_PAL_WHITE, mineFamily.pkdata, 0);
; 17910: #endif
; 17911: 
; 17912: 			/*
; 17913: 			if( atoi( mineFamily.pktime ) >= 10000 ) {
; 17914: 				sprintf( timebuf, "æå¤© %d:00", ( atoi( mineFamily.pktime )-10000)/100 );
; 17915: 			}
; 17916: 			else {
; 17917: 				sprintf( timebuf, "ä»å¤© %d:00", atoi( mineFamily.pktime )/100 );
; 17918: 			}
; 17919: 			sprintf( buf, "%s  %s  %s", timebuf, familyTownName[mineFamily.pkaddress], mineFamily.pkopp );
; 17920: 			StockFontBuffer( winX+50, winY+240, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0 );
; 17921: 			*/
; 17922: 
; 17923: 			fontId[0] = StockFontBuffer(winX + 180, winY + 250, FONT_PRIO_FRONT, FONT_PAL_YELLOW,

  00467	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??mineFamilyDetailWN@@YAXXZ@4HA
  0046c	6a 02		 push	 2
  0046e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DOPLAOEB@?5?5?C?k?5?5?$LM?R?5?5@
  00473	6a 04		 push	 4
  00475	05 fa 00 00 00	 add	 eax, 250		; 000000faH
  0047a	6a 01		 push	 1
  0047c	50		 push	 eax
  0047d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??mineFamilyDetailWN@@YAXXZ@4HA
  00482	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00487	50		 push	 eax
  00488	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0048d	83 c4 48	 add	 esp, 72			; 00000048H
  00490	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??mineFamilyDetailWN@@YAXXZ@4PAHA, eax
$LN22@mineFamily:
  00495	5e		 pop	 esi
$LN13@mineFamily:

; 17924: 				"  ì·¨  ì  ", 2);
; 17925: 		}
; 17926: 
; 17927: 	}
; 17928: 
; 17929: }

  00496	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00499	33 cd		 xor	 ecx, ebp
  0049b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004a0	8b e5		 mov	 esp, ebp
  004a2	5d		 pop	 ebp
  004a3	c3		 ret	 0
?mineFamilyDetailWN@@YAXXZ ENDP				; mineFamilyDetailWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initMineFamilyDetail@@YAXPAD@Z
_TEXT	SEGMENT
_ibuf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initMineFamilyDetail@@YAXPAD@Z PROC			; initMineFamilyDetail, COMDAT

; 17730: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	56		 push	 esi

; 17731: 
; 17732: 
; 17733: 	//printf("initMineFamilyDetail :%s\n",data);
; 17734: 	char ibuf[64];
; 17735: 
; 17736: 	DeathAction(ptActMenuWin);

  00011	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00017	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  0001a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17737: 	ptActMenuWin = NULL;
; 17738: 
; 17739: 	makeStringFromEscaped(data);

  0001f	56		 push	 esi
  00020	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0002a	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 17740: 
; 17741: 	getStringToken(data, '|', 1, sizeof(mineFamily.name) - 1, mineFamily.name);

  0002f	68 00 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A ; mineFamily
  00034	6a 3f		 push	 63			; 0000003fH
  00036	6a 01		 push	 1
  00038	6a 7c		 push	 124			; 0000007cH
  0003a	56		 push	 esi
  0003b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17742: 	makeStringFromEscaped(mineFamily.name);

  00040	68 00 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A ; mineFamily
  00045	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 17743: 	getStringToken(data, '|', 2, sizeof(ibuf) - 1, ibuf);

  0004a	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0004d	50		 push	 eax
  0004e	6a 3f		 push	 63			; 0000003fH
  00050	6a 02		 push	 2
  00052	6a 7c		 push	 124			; 0000007cH
  00054	56		 push	 esi
  00055	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17744: 	mineFamily.member = atoi(ibuf);

  0005a	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 _atoi

; 17745: 	getStringToken(data, '|', 3, sizeof(mineFamily.leadername) - 1, mineFamily.leadername);

  00063	68 44 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+68
  00068	6a 3f		 push	 63			; 0000003fH
  0006a	6a 03		 push	 3
  0006c	6a 7c		 push	 124			; 0000007cH
  0006e	56		 push	 esi
  0006f	a3 40 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+64, eax
  00074	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00079	83 c4 4c	 add	 esp, 76			; 0000004cH

; 17746: 	makeStringFromEscaped(mineFamily.leadername);

  0007c	68 44 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+68
  00081	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 17747: 	getStringToken(data, '|', 4, sizeof(ibuf) - 1, ibuf);

  00086	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00089	50		 push	 eax
  0008a	6a 3f		 push	 63			; 0000003fH
  0008c	6a 04		 push	 4
  0008e	6a 7c		 push	 124			; 0000007cH
  00090	56		 push	 esi
  00091	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17748: 	mineFamily.rank = atoi(ibuf);

  00096	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00099	50		 push	 eax
  0009a	e8 00 00 00 00	 call	 _atoi
  0009f	a3 84 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+132, eax

; 17749: 	getStringToken(data, '|', 5, sizeof(ibuf) - 1, ibuf);

  000a4	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000a7	50		 push	 eax
  000a8	6a 3f		 push	 63			; 0000003fH
  000aa	6a 05		 push	 5
  000ac	6a 7c		 push	 124			; 0000007cH
  000ae	56		 push	 esi
  000af	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17750: 	mineFamily.fmdp = atoi(ibuf);

  000b4	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 _atoi
  000bd	a3 88 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+136, eax

; 17751: 	getStringToken(data, '|', 6, sizeof(ibuf) - 1, ibuf);

  000c2	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000c5	50		 push	 eax
  000c6	6a 3f		 push	 63			; 0000003fH
  000c8	6a 06		 push	 6
  000ca	6a 7c		 push	 124			; 0000007cH
  000cc	56		 push	 esi
  000cd	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000d2	83 c4 48	 add	 esp, 72			; 00000048H

; 17752: 	mineFamily.personaldp = atoi(ibuf);

  000d5	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000d8	50		 push	 eax
  000d9	e8 00 00 00 00	 call	 _atoi
  000de	a3 8c 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+140, eax

; 17753: 	getStringToken(data, '|', 7, sizeof(ibuf) - 1, ibuf);

  000e3	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000e6	50		 push	 eax
  000e7	6a 3f		 push	 63			; 0000003fH
  000e9	6a 07		 push	 7
  000eb	6a 7c		 push	 124			; 0000007cH
  000ed	56		 push	 esi
  000ee	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17754: 	mineFamily.job = atoi(ibuf);

  000f3	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000f6	50		 push	 eax
  000f7	e8 00 00 00 00	 call	 _atoi

; 17755: 	if (mineFamily.job < 0)	mineFamily.job = 0;

  000fc	33 c9		 xor	 ecx, ecx
  000fe	85 c0		 test	 eax, eax
  00100	0f 48 c1	 cmovs	 eax, ecx
  00103	a3 90 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+144, eax

; 17756: 	getStringToken(data, '|', 8, sizeof(ibuf) - 1, ibuf);

  00108	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0010b	50		 push	 eax
  0010c	6a 3f		 push	 63			; 0000003fH
  0010e	6a 08		 push	 8
  00110	6a 7c		 push	 124			; 0000007cH
  00112	56		 push	 esi
  00113	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17757: 	mineFamily.sprite = atoi(ibuf);

  00118	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 _atoi

; 17758: 	/*
; 17759: 	getStringToken( data, '|', 9, sizeof( buf )-1, buf );
; 17760: 	makeStringFromEscaped( buf );
; 17761: 		getStringToken( buf, ' ', 1, sizeof( mineFamily.pktime )-1, mineFamily.pktime );
; 17762: 		makeStringFromEscaped( mineFamily.pktime );
; 17763: 		getStringToken( buf, ' ', 2, sizeof( ibuf )-1, ibuf );
; 17764: 		mineFamily.pkaddress = atoi( ibuf );
; 17765: 		getStringToken( buf, ' ', 3, sizeof( mineFamily.pkopp )-1, mineFamily.pkopp );
; 17766: 		makeStringFromEscaped( mineFamily.pkopp );
; 17767: 	*/
; 17768: 	getStringToken(data, '|', 9, sizeof(mineFamily.pkdata) - 1, mineFamily.pkdata);

  00121	68 fc 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+252
  00126	68 ff 00 00 00	 push	 255			; 000000ffH
  0012b	6a 09		 push	 9
  0012d	6a 7c		 push	 124			; 0000007cH
  0012f	56		 push	 esi
  00130	a3 94 00 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+148, eax
  00135	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0013a	83 c4 48	 add	 esp, 72			; 00000048H

; 17769: 	makeStringFromEscaped(mineFamily.pkdata);

  0013d	68 fc 00 00 00	 push	 OFFSET ?mineFamily@@3U<unnamed-type-mineFamily>@@A+252
  00142	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 17770: #ifdef _NEW_MANOR_LAW
; 17771: 	getStringToken(data, '|', 10, sizeof(ibuf) - 1, ibuf);

  00147	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0014a	50		 push	 eax
  0014b	6a 3f		 push	 63			; 0000003fH
  0014d	6a 0a		 push	 10			; 0000000aH
  0014f	6a 7c		 push	 124			; 0000007cH
  00151	56		 push	 esi
  00152	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17772: 	mineFamily.fmMomentum = atoi(ibuf);

  00157	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0015a	50		 push	 eax
  0015b	e8 00 00 00 00	 call	 _atoi
  00160	a3 fc 01 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+508, eax

; 17773: 	getStringToken(data, '|', 11, sizeof(ibuf) - 1, ibuf);

  00165	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00168	50		 push	 eax
  00169	6a 3f		 push	 63			; 0000003fH
  0016b	6a 0b		 push	 11			; 0000000bH
  0016d	6a 7c		 push	 124			; 0000007cH
  0016f	56		 push	 esi
  00170	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 17774: 	mineFamily.momentum = atoi(ibuf);

  00175	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00178	50		 push	 eax
  00179	e8 00 00 00 00	 call	 _atoi
  0017e	a3 00 02 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+512, eax

; 17775: #endif
; 17776: #ifdef _NB_FAMILYBADGE
; 17777: 	getStringToken(data, '|', 12, sizeof(ibuf) - 1, ibuf);

  00183	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00186	50		 push	 eax
  00187	6a 3f		 push	 63			; 0000003fH
  00189	6a 0c		 push	 12			; 0000000cH
  0018b	6a 7c		 push	 124			; 0000007cH
  0018d	56		 push	 esi
  0018e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00193	83 c4 48	 add	 esp, 72			; 00000048H

; 17778: 	mineFamily.badgeNo = atoi(ibuf);

  00196	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 _atoi

; 17779: #endif
; 17780: }

  0019f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a2	83 c4 04	 add	 esp, 4
  001a5	33 cd		 xor	 ecx, ebp
  001a7	a3 04 02 00 00	 mov	 DWORD PTR ?mineFamily@@3U<unnamed-type-mineFamily>@@A+516, eax
  001ac	5e		 pop	 esi
  001ad	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b2	8b e5		 mov	 esp, ebp
  001b4	5d		 pop	 ebp
  001b5	c3		 ret	 0
?initMineFamilyDetail@@YAXPAD@Z ENDP			; initMineFamilyDetail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyDetailWN@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -1556					; size = 8
_prevBtnGraNo$ = -1548					; size = 8
_buf2$ = -1540						; size = 512
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?familyDetailWN@@YAHXZ PROC				; familyDetailWN, COMDAT

; 13058: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 06 00
	00		 sub	 esp, 1556		; 00000614H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 13059: #ifdef _NB_FAMILYBADGE
; 13060: 	static int å¾½ç« çªå£;
; 13061: 	static int å¾½ç« ç´¢å¼;
; 13062: 	static int å¾½ç« æ»é¡µæ° = (å¾½ç« ä¸ªæ°) % 12 ? (å¾½ç« ä¸ªæ°) / 12 + 1 : (å¾½ç« ä¸ªæ°) / 12;
; 13063: 	static int å¾½ç« å½åé¡µ;
; 13064: #endif
; 13065: 	static int w, h, x, y, xx, yy, i;
; 13066: 	static int btnId[5];
; 13067: 	static int fontId[5];
; 13068: 	static int prevBtn = 0, nextBtn = 0;
; 13069: 	static int familyPetIndex = 0;
; 13070: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };

  00013	c7 85 f4 f9 ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  0001d	c7 85 f8 f9 ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H

; 13071: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };

  00027	c7 85 ec f9 ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00031	c7 85 f0 f9 ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H

; 13072: 
; 13073: 	//static int changeData[2] = {0,0};
; 13074: 	int selBtnId = -1;
; 13075: 	int selFontBtnId = -1;
; 13076: 	char buf[1024];
; 13077: 	char buf2[512];
; 13078: 
; 13079: 	if (CheckMenuFlag()
; 13080: 		|| joy_trg[0] & JOY_ESC
; 13081: 		|| actBtn == 1
; 13082: 		|| menuBtn == 1
; 13083: 		|| disconnectServerFlag == TRUE
; 13084: 		|| wnCloseFlag == 1

  0003b	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00040	85 c0		 test	 eax, eax
  00042	0f 85 d8 0a 00
	00		 jne	 $LN17@familyDeta
  00048	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00052	0f 85 c8 0a 00
	00		 jne	 $LN17@familyDeta
  00058	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00060	0f 84 ba 0a 00
	00		 je	 $LN17@familyDeta
  00066	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0006e	0f 84 ac 0a 00
	00		 je	 $LN17@familyDeta
  00074	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0007b	0f 84 9f 0a 00
	00		 je	 $LN17@familyDeta
  00081	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00089	0f 84 91 0a 00
	00		 je	 $LN17@familyDeta

; 13089: 		return 0;
; 13090: 	}
; 13091: 
; 13092: 	if (ptActMenuWin == NULL)

  0008f	56		 push	 esi
  00090	39 05 00 00 00
	00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00096	0f 85 ca 00 00
	00		 jne	 $LN18@familyDeta

; 13093: 	{
; 13094: 		//familyListProcNo = 11;
; 13095: 		for (int i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 13096: 			btnId[i] = -2;
; 13097: 		}
; 13098: 
; 13099: 		w = 571; h = 295;
; 13100: 		x = (lpDraw->xSize - w) / 2;

  0009c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  000a2	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  000a9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA, xmm0
  000b0	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA+16, -2 ; fffffffeH
  000ba	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  000c0	2d 3b 02 00 00	 sub	 eax, 571		; 0000023bH
  000c5	c7 05 00 00 00
	00 3b 02 00 00	 mov	 DWORD PTR ?w@?1??familyDetailWN@@YAHXZ@4HA, 571 ; 0000023bH
  000cf	99		 cdq
  000d0	2b c2		 sub	 eax, edx
  000d2	c7 05 00 00 00
	00 27 01 00 00	 mov	 DWORD PTR ?h@?1??familyDetailWN@@YAHXZ@4HA, 295 ; 00000127H
  000dc	8b f0		 mov	 esi, eax

; 13101: 		y = (lpDraw->ySize - h) / 2;
; 13102: 		//w = x + 200;
; 13103: 		//h = y + 30;
; 13104: #ifdef _NB_FAMILYBADGE
; 13105: 		å¾½ç« çªå£ = FALSE;

  000de	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA, 0
  000e8	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]

; 13106: 		å¾½ç« ç´¢å¼ = -1;
; 13107: 		å¾½ç« å½åé¡µ = 0;
; 13108: #endif
; 13109: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  000ee	6a ff		 push	 -1
  000f0	2d 27 01 00 00	 sub	 eax, 295		; 00000127H
  000f5	d1 fe		 sar	 esi, 1
  000f7	6a 00		 push	 0
  000f9	99		 cdq
  000fa	68 27 01 00 00	 push	 295			; 00000127H
  000ff	2b c2		 sub	 eax, edx
  00101	89 35 00 00 00
	00		 mov	 DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA, esi
  00107	d1 f8		 sar	 eax, 1
  00109	68 3b 02 00 00	 push	 571			; 0000023bH
  0010e	50		 push	 eax
  0010f	56		 push	 esi
  00110	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA, eax
  00115	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA, -1
  0011f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA, 0
  00129	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0012e	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin

; 13110: 
; 13111: #ifdef _NB_FAMILYBADGE
; 13112: 		familyRuleShow.x = x + 82;

  00133	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00138	83 c0 52	 add	 eax, 82			; 00000052H
  0013b	a3 0c 01 00 00	 mov	 DWORD PTR ?familyRuleShow@@3USTR_BUFFER@@A+268, eax

; 13113: 		familyRuleShow.y = y + 162;

  00140	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA

; 13114: #else
; 13115: 		familyRuleShow.x = x + 82;
; 13116: 		familyRuleShow.y = y + 132;
; 13117: #endif 
; 13118: 		play_se(202, 320, 240);	// ????????	

  00145	68 f0 00 00 00	 push	 240			; 000000f0H
  0014a	05 a2 00 00 00	 add	 eax, 162		; 000000a2H
  0014f	68 40 01 00 00	 push	 320			; 00000140H
  00154	68 ca 00 00 00	 push	 202			; 000000caH
  00159	a3 10 01 00 00	 mov	 DWORD PTR ?familyRuleShow@@3USTR_BUFFER@@A+272, eax
  0015e	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00163	83 c4 24	 add	 esp, 36			; 00000024H
$LN18@familyDeta:

; 13119: 
; 13120: 	}
; 13121: 
; 13122: 	if (ptActMenuWin->hp >= 1) {

  00166	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0016b	57		 push	 edi
  0016c	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00170	0f 8c 15 01 00
	00		 jl	 $LN19@familyDeta

; 13124: 		selFontBtnId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  00176	6a 05		 push	 5
  00178	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA
  0017d	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00182	83 c4 08	 add	 esp, 8
  00185	8b f0		 mov	 esi, eax

; 13125: 		if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00187	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0018e	74 4f		 je	 SHORT $LN126@familyDeta

; 13123: 		selBtnId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  00190	6a 05		 push	 5
  00192	68 00 00 00 00	 push	 OFFSET ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA
  00197	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  0019c	83 c4 08	 add	 esp, 8

; 13126: 			switch (selBtnId) {

  0019f	83 f8 04	 cmp	 eax, 4
  001a2	77 27		 ja	 SHORT $LN125@familyDeta
  001a4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN114@familyDeta[eax*4]
$LN21@familyDeta:

; 13127: 			case 0:
; 13128: 				if (pc.familyName[0] != NULL) {

  001ab	80 3d f6 50 00
	00 00		 cmp	 BYTE PTR ?pc@@3UPC@@A+20726, 0
  001b2	74 55		 je	 SHORT $LN22@familyDeta

; 13129: 					lssproto_TK_recv(sockfd, 0, "P|ì´ë¯¸ ë¤ë¥¸ë¶ì¡±ì ê°ìëì´ìì´ìï¼", 0);

  001b4	6a 00		 push	 0
  001b6	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@GBGODGL@P?$HM?$MA?L?$LJ?L?5?$LE?Y?$LI?$KF?$LK?N?A?$LH?$LP?$KB?5?$LA?$KB?$MA?T?$LF?G?$LO?n?$MA?V?$LO?n?$LP@
  001bb	6a 00		 push	 0
  001bd	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001c3	e8 00 00 00 00	 call	 ?lssproto_TK_recv@@YAXHHPADH@Z ; lssproto_TK_recv
  001c8	83 c4 10	 add	 esp, 16			; 00000010H
$LN125@familyDeta:

; 13230: 				return 0;
; 13231: 				break;
; 13232: 
; 13233: 			}
; 13234: 
; 13235: 			switch (selFontBtnId) {

  001cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?changeData@@3PAHA
  001d0	85 f6		 test	 esi, esi
  001d2	b9 01 00 00 00	 mov	 ecx, 1
  001d7	0f 44 c1	 cmove	 eax, ecx
  001da	a3 00 00 00 00	 mov	 DWORD PTR ?changeData@@3PAHA, eax
$LN126@familyDeta:

; 13236: 			case 0:
; 13237: 				changeData[0] = 1;
; 13238: 				break;
; 13239: 			}
; 13240: 		}
; 13241: 
; 13242: 		if (mouse.state & MOUSE_LEFT_CRICK && prevBtn == TRUE)

  001df	a1 28 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+40
  001e4	83 e0 01	 and	 eax, 1
  001e7	0f 84 1e 03 00
	00		 je	 $LN52@familyDeta
  001ed	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA, 1
  001f4	0f 85 11 03 00
	00		 jne	 $LN52@familyDeta

; 13243: 			prevBtn = TRUE;

  001fa	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA, 1
  00204	e9 10 03 00 00	 jmp	 $LN113@familyDeta
$LN22@familyDeta:

; 13130: 					break;
; 13131: 				}
; 13132: 				sprintf(buf, "J|%d|%d|%s|%d", familyDetail.tempindex, familyDetail.index, makeEscapeString(familyDetail.name, buf2, sizeof(buf2)), familyDetail.sprite);

  00209	ff 35 18 01 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+280
  0020f	8d 85 fc f9 ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00215	68 00 02 00 00	 push	 512			; 00000200H
  0021a	50		 push	 eax
  0021b	68 08 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+8
  00220	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00225	83 c4 0c	 add	 esp, 12			; 0000000cH
  00228	50		 push	 eax
  00229	ff 35 00 00 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A
  0022f	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00235	ff 35 04 00 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+4
  0023b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FBIMKKIN@J?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@
  00240	50		 push	 eax
  00241	e8 00 00 00 00	 call	 _sprintf
  00246	83 c4 18	 add	 esp, 24			; 00000018H

; 13133: 				if (bNewServer)

  00249	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0024f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00256	50		 push	 eax
  00257	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0025d	74 07		 je	 SHORT $LN23@familyDeta

; 13134: 					lssproto_FM_send(sockfd, buf);

  0025f	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00264	eb 05		 jmp	 SHORT $LN131@familyDeta
$LN23@familyDeta:

; 13135: 				else
; 13136: 					old_lssproto_FM_send(sockfd, buf);

  00266	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN131@familyDeta:

; 13137: 				familyListProcNo = 1;

  0026b	83 c4 08	 add	 esp, 8
  0026e	b8 01 00 00 00	 mov	 eax, 1
  00273	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax

; 13138: 				closeFamilyList();

  00279	e8 00 00 00 00	 call	 ?closeFamilyList@@YAXXZ	; closeFamilyList

; 13139: 				GetKeyInputFocus(&MyChatBuffer);

  0027e	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00283	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00288	83 c4 04	 add	 esp, 4
$LN19@familyDeta:

; 13378: 
; 13379: 		}
; 13380: 
; 13381: 	return 0;
; 13382: 
; 13383: 	}

  0028b	5f		 pop	 edi
  0028c	5e		 pop	 esi
  0028d	33 c0		 xor	 eax, eax
  0028f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00292	33 cd		 xor	 ecx, ebp
  00294	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00299	8b e5		 mov	 esp, ebp
  0029b	5d		 pop	 ebp
  0029c	c3		 ret	 0
$LN26@familyDeta:

; 13140: 				return 0;
; 13141: 				break;
; 13142: 			case 1:
; 13143: 				familyListProcNo = 1;
; 13144: 				DeathAction(ptActMenuWin);
; 13145: 				ptActMenuWin = NULL;
; 13146: 				DeathAction(pActPet11);
; 13147: 				pActPet11 = NULL;
; 13148: 				GetKeyInputFocus(&MyChatBuffer);
; 13149: 				return 0;
; 13150: 				break;
; 13151: 			case 2:
; 13152: 				prevBtn = TRUE;
; 13153: 				i = 0;

  0029d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA
  002a3	33 d2		 xor	 edx, edx
  002a5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA, 1
  002af	bf 04 00 00 00	 mov	 edi, 4
  002b4	89 15 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyDetailWN@@YAHXZ@4HA, edx
  002ba	66 0f 1f 44 00
	00		 npad	 6
$LL7@familyDeta:

; 13154: 				while (1) {
; 13155: 					familyPetIndex--;

  002c0	83 e9 01	 sub	 ecx, 1

; 13156: 					if (familyPetIndex < 0) familyPetIndex = 4;

  002c3	0f 48 cf	 cmovs	 ecx, edi

; 13157: 					if (pet[familyPetIndex].useFlag != NULL)

  002c6	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  002cc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, ecx
  002d2	66 83 b8 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 0
  002da	75 18		 jne	 SHORT $LN8@familyDeta

; 13158: 						break;
; 13159: 					if ((i++) > 5) {

  002dc	8b c2		 mov	 eax, edx
  002de	42		 inc	 edx
  002df	89 15 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyDetailWN@@YAHXZ@4HA, edx
  002e5	83 f8 05	 cmp	 eax, 5
  002e8	7e d6		 jle	 SHORT $LL7@familyDeta

; 13160: 						familyPetIndex = -1;

  002ea	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, -1
$LN8@familyDeta:

; 13161: 						break;
; 13162: 					}
; 13163: 				}
; 13164: 				if (pActPet11 != NULL) {

  002f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActPet11@@3PAUaction@@A
  002f9	85 c0		 test	 eax, eax
  002fb	0f 84 8f 00 00
	00		 je	 $LN123@familyDeta

; 13165: 					DeathAction(pActPet11);

  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13166: 					pActPet11 = NULL;

  00307	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0

; 13186: 				}
; 13187: 				changeData[1] = 1;

  00311	83 c4 04	 add	 esp, 4
  00314	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?changeData@@3PAHA+4, 1

; 13188: 				break;

  0031e	e9 a8 fe ff ff	 jmp	 $LN125@familyDeta
$LN31@familyDeta:

; 13167: 				}
; 13168: 				changeData[1] = 1;
; 13169: 				break;
; 13170: 			case 3:
; 13171: 				nextBtn = TRUE;
; 13172: 				i = 0;

  00323	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA
  00329	33 d2		 xor	 edx, edx
  0032b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyDetailWN@@YAHXZ@4HA, 1
  00335	89 15 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyDetailWN@@YAHXZ@4HA, edx
  0033b	0f 1f 44 00 00	 npad	 5
$LL9@familyDeta:

; 13173: 				while (1) {
; 13174: 					familyPetIndex++;

  00340	41		 inc	 ecx

; 13175: 					if (familyPetIndex >= 5) familyPetIndex = 0;

  00341	33 ff		 xor	 edi, edi
  00343	8b c1		 mov	 eax, ecx
  00345	83 f8 05	 cmp	 eax, 5
  00348	0f 4d cf	 cmovge	 ecx, edi

; 13176: 					if (pet[familyPetIndex].useFlag != NULL)

  0034b	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00351	89 0d 00 00 00
	00		 mov	 DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, ecx
  00357	66 39 b8 76 00
	00 00		 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], di
  0035e	75 18		 jne	 SHORT $LN10@familyDeta

; 13177: 						break;
; 13178: 					if ((i++) > 5) {

  00360	8b c2		 mov	 eax, edx
  00362	42		 inc	 edx
  00363	89 15 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyDetailWN@@YAHXZ@4HA, edx
  00369	83 f8 05	 cmp	 eax, 5
  0036c	7e d2		 jle	 SHORT $LL9@familyDeta

; 13179: 						familyPetIndex = -1;

  0036e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, -1
$LN10@familyDeta:

; 13180: 						break;
; 13181: 					}
; 13182: 				}
; 13183: 				if (pActPet11 != NULL) {

  00378	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActPet11@@3PAUaction@@A
  0037d	85 c0		 test	 eax, eax
  0037f	74 0f		 je	 SHORT $LN123@familyDeta

; 13184: 					DeathAction(pActPet11);

  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13185: 					pActPet11 = NULL;

  00387	89 3d 00 00 00
	00		 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, edi

; 13186: 				}
; 13187: 				changeData[1] = 1;

  0038d	83 c4 04	 add	 esp, 4
$LN123@familyDeta:
  00390	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?changeData@@3PAHA+4, 1

; 13188: 				break;

  0039a	e9 2c fe ff ff	 jmp	 $LN125@familyDeta
$LN36@familyDeta:

; 13189: 			case 4:
; 13190: 				if ((changeData[0] == 1) && (strcmp(familyRuleShow.buffer, familyDetail.rule) != 0)) {

  0039f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?changeData@@3PAHA, 1
  003a6	75 71		 jne	 SHORT $LN39@familyDeta
  003a8	b9 90 00 00 00	 mov	 ecx, OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+144
  003ad	b8 00 00 00 00	 mov	 eax, OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
$LL115@familyDeta:
  003b2	8a 10		 mov	 dl, BYTE PTR [eax]
  003b4	3a 11		 cmp	 dl, BYTE PTR [ecx]
  003b6	75 1a		 jne	 SHORT $LN116@familyDeta
  003b8	84 d2		 test	 dl, dl
  003ba	74 12		 je	 SHORT $LN117@familyDeta
  003bc	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003bf	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003c2	75 0e		 jne	 SHORT $LN116@familyDeta
  003c4	83 c0 02	 add	 eax, 2
  003c7	83 c1 02	 add	 ecx, 2
  003ca	84 d2		 test	 dl, dl
  003cc	75 e4		 jne	 SHORT $LL115@familyDeta
$LN117@familyDeta:
  003ce	33 c0		 xor	 eax, eax
  003d0	eb 05		 jmp	 SHORT $LN118@familyDeta
$LN116@familyDeta:
  003d2	1b c0		 sbb	 eax, eax
  003d4	83 c8 01	 or	 eax, 1
$LN118@familyDeta:
  003d7	85 c0		 test	 eax, eax
  003d9	74 3e		 je	 SHORT $LN39@familyDeta

; 13191: 					sprintf(buf, "X|R|%s", familyRuleShow.buffer);

  003db	68 00 00 00 00	 push	 OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  003e0	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  003e6	68 00 00 00 00	 push	 OFFSET ??_C@_06FHOHGHFK@X?$HMR?$HM?$CFs@
  003eb	50		 push	 eax
  003ec	e8 00 00 00 00	 call	 _sprintf
  003f1	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13192: 					if (bNewServer)

  003f4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  003fa	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00401	50		 push	 eax
  00402	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00408	74 07		 je	 SHORT $LN38@familyDeta

; 13193: 						lssproto_FM_send(sockfd, buf);

  0040a	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  0040f	eb 05		 jmp	 SHORT $LN133@familyDeta
$LN38@familyDeta:

; 13194: 					else
; 13195: 						old_lssproto_FM_send(sockfd, buf);

  00411	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN133@familyDeta:

; 13196: 				}
; 13197: 				if (changeData[1] == 1) {

  00416	83 c4 08	 add	 esp, 8
$LN39@familyDeta:
  00419	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?changeData@@3PAHA+4, 1
  00420	75 3f		 jne	 SHORT $LN42@familyDeta

; 13198: 					sprintf(buf, "X|P|%d", familyPetIndex);

  00422	ff 35 00 00 00
	00		 push	 DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA
  00428	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0042e	68 00 00 00 00	 push	 OFFSET ??_C@_06CIKELAKM@X?$HMP?$HM?$CFd@
  00433	50		 push	 eax
  00434	e8 00 00 00 00	 call	 _sprintf
  00439	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13199: 					if (bNewServer)

  0043c	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00442	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00449	50		 push	 eax
  0044a	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00450	74 07		 je	 SHORT $LN41@familyDeta

; 13200: 						lssproto_FM_send(sockfd, buf);

  00452	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00457	eb 05		 jmp	 SHORT $LN134@familyDeta
$LN41@familyDeta:

; 13201: 					else
; 13202: 						old_lssproto_FM_send(sockfd, buf);

  00459	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN134@familyDeta:

; 13203: 				}
; 13204: #ifdef _NB_FAMILYBADGE
; 13205: 				if (å¾½ç« ç´¢å¼ != -1) {

  0045e	83 c4 08	 add	 esp, 8
$LN42@familyDeta:
  00461	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA
  00466	83 f8 ff	 cmp	 eax, -1
  00469	74 3a		 je	 SHORT $LN43@familyDeta

; 13206: 					if (å¾½ç« ç´¢å¼ != familyDetail.badgeNo) {

  0046b	3b 05 1c 01 00
	00		 cmp	 eax, DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+284
$LN136@familyDeta:

; 13219: 						else
; 13220: 							old_lssproto_FM_send(sockfd, buf);
; 13221: 					}
; 13222: 				}
; 13223: #endif
; 13224: 				familyListProcNo = 1;

  00471	74 44		 je	 SHORT $LN50@familyDeta
  00473	50		 push	 eax
  00474	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0047a	68 00 00 00 00	 push	 OFFSET ??_C@_06DCIEHEEO@X?$HMB?$HM?$CFd@
  0047f	50		 push	 eax
  00480	e8 00 00 00 00	 call	 ??$sprintf_s@$0EAA@@@YAHAAY0EAA@DPBDZZ ; sprintf_s<1024>
  00485	83 c4 0c	 add	 esp, 12			; 0000000cH
  00488	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0048e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00495	50		 push	 eax
  00496	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0049c	74 11		 je	 SHORT $LN46@familyDeta
  0049e	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  004a3	eb 0f		 jmp	 SHORT $LN135@familyDeta
$LN43@familyDeta:

; 13207: 						sprintf_s(buf, "X|B|%d", å¾½ç« ç´¢å¼);
; 13208: 						if (bNewServer)
; 13209: 							lssproto_FM_send(sockfd, buf);
; 13210: 						else
; 13211: 							old_lssproto_FM_send(sockfd, buf);
; 13212: 					}
; 13213: 				}
; 13214: 				else {
; 13215: 					if (familyDetail.badgeNo != -1) {

  004a5	a1 1c 01 00 00	 mov	 eax, DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+284
  004aa	83 f8 ff	 cmp	 eax, -1

; 13216: 						sprintf_s(buf, "X|B|%d", familyDetail.badgeNo);
; 13217: 						if (bNewServer)
; 13218: 							lssproto_FM_send(sockfd, buf);

  004ad	eb c2		 jmp	 SHORT $LN136@familyDeta
$LN46@familyDeta:

; 13219: 						else
; 13220: 							old_lssproto_FM_send(sockfd, buf);
; 13221: 					}
; 13222: 				}
; 13223: #endif
; 13224: 				familyListProcNo = 1;

  004af	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN135@familyDeta:
  004b4	83 c4 08	 add	 esp, 8
$LN50@familyDeta:

; 13225: 				DeathAction(ptActMenuWin);

  004b7	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004bd	b8 01 00 00 00	 mov	 eax, 1
  004c2	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  004c8	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13226: 				ptActMenuWin = NULL;
; 13227: 				DeathAction(pActPet11);

  004cd	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet11@@3PAUaction@@A
  004d3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  004dd	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13228: 				pActPet11 = NULL;
; 13229: 				GetKeyInputFocus(&MyChatBuffer);

  004e2	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  004e7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0
  004f1	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  004f6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13378: 
; 13379: 		}
; 13380: 
; 13381: 	return 0;
; 13382: 
; 13383: 	}

  004f9	33 c0		 xor	 eax, eax
  004fb	5f		 pop	 edi
  004fc	5e		 pop	 esi
  004fd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00500	33 cd		 xor	 ecx, ebp
  00502	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00507	8b e5		 mov	 esp, ebp
  00509	5d		 pop	 ebp
  0050a	c3		 ret	 0
$LN52@familyDeta:

; 13244: 		else  prevBtn = FALSE;
; 13245: 
; 13246: 		if (mouse.state & MOUSE_LEFT_CRICK && nextBtn == TRUE)

  0050b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA, 0
  00515	85 c0		 test	 eax, eax
  00517	74 10		 je	 SHORT $LN54@familyDeta
$LN113@familyDeta:
  00519	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nextBtn@?1??familyDetailWN@@YAHXZ@4HA, 1
  00520	75 07		 jne	 SHORT $LN54@familyDeta

; 13247: 			nextBtn = TRUE;

  00522	b8 01 00 00 00	 mov	 eax, 1
  00527	eb 02		 jmp	 SHORT $LN55@familyDeta
$LN54@familyDeta:

; 13248: 		else	nextBtn = FALSE;

  00529	33 c0		 xor	 eax, eax
$LN55@familyDeta:

; 13249: 
; 13250: 		//StockFontBuffer( x+60, y+60, FONT_PRIO_FRONT, FONT_PAL_WHITE, "", 0 );
; 13251: 		//sprintf( buf, "", pagenum, (familytotal-1)/8 +1  );
; 13252: 		//StockFontBuffer( x+160, y+30, FONT_PRIO_FRONT, FONT_PAL_WHITE, "å®¶æèµæ", 0 );
; 13253: 		//StockDispHLine( x+140, y+ );
; 13254: 
; 13255: 		//sprintf( buf, "å®¶æåç§°ï¼%s", familyDetail.name );
; 13256: 		StockFontBuffer(x + 100, y + 40, FONT_PRIO_FRONT, FONT_PAL_WHITE, familyDetail.name, 0);

  0052b	6a 00		 push	 0
  0052d	a3 00 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyDetailWN@@YAHXZ@4HA, eax
  00532	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00537	68 08 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+8
  0053c	6a 00		 push	 0
  0053e	83 c0 28	 add	 eax, 40			; 00000028H
  00541	6a 01		 push	 1
  00543	50		 push	 eax
  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00549	83 c0 64	 add	 eax, 100		; 00000064H
  0054c	50		 push	 eax
  0054d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 13257: 		//sprintf( buf, "æé¿åç§°ï¼%s", familyDetail.leadername );
; 13258: 		StockFontBuffer(x + 100, y + 70, FONT_PRIO_FRONT, FONT_PAL_WHITE, familyDetail.leadername, 0);

  00552	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00557	6a 00		 push	 0
  00559	68 1c 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+28
  0055e	6a 00		 push	 0
  00560	83 c0 46	 add	 eax, 70			; 00000046H
  00563	6a 01		 push	 1
  00565	50		 push	 eax
  00566	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0056b	83 c0 64	 add	 eax, 100		; 00000064H
  0056e	50		 push	 eax
  0056f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 13259: 		sprintf(buf, "%d ëª", familyDetail.joinnum);

  00574	ff 35 88 00 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+136
  0057a	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00580	68 00 00 00 00	 push	 OFFSET ??_C@_05PFEBJGGD@?$CFd?5?$LI?m@
  00585	50		 push	 eax
  00586	e8 00 00 00 00	 call	 _sprintf

; 13260: 		StockFontBuffer(x + 100, y + 100, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  0058b	6a 00		 push	 0
  0058d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00593	50		 push	 eax
  00594	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00599	6a 00		 push	 0
  0059b	83 c0 64	 add	 eax, 100		; 00000064H
  0059e	6a 01		 push	 1
  005a0	50		 push	 eax
  005a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  005a6	83 c0 64	 add	 eax, 100		; 00000064H
  005a9	50		 push	 eax
  005aa	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 13261: 
; 13262: #ifdef _NB_FAMILYBADGE
; 13263: 		if (å¾½ç« ç´¢å¼ != -1) {

  005af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA
  005b4	83 c4 54	 add	 esp, 84			; 00000054H
  005b7	83 f8 ff	 cmp	 eax, -1
  005ba	75 0a		 jne	 SHORT $LN137@familyDeta

; 13264: 			StockDispBuffer(x + 130, y + 137, DISP_PRIO_IME4, å¾½ç« ç´¢å¼, 0);
; 13265: 		}
; 13266: 		else {
; 13267: 			if (familyDetail.badgeNo != -1) {

  005bc	a1 1c 01 00 00	 mov	 eax, DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+284
  005c1	83 f8 ff	 cmp	 eax, -1
  005c4	74 23		 je	 SHORT $LN58@familyDeta
$LN137@familyDeta:

; 13268: 				StockDispBuffer(x + 130, y + 137, DISP_PRIO_IME4, familyDetail.badgeNo, 0);
; 13269: 			}
; 13270: 		}
; 13271: 
; 13272: #endif
; 13273: 		// å®¶æä¸»æ¨
; 13274: 		sprintf(buf, "%38s", "");

  005c6	6a 00		 push	 0
  005c8	50		 push	 eax
  005c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  005ce	05 89 00 00 00	 add	 eax, 137		; 00000089H
  005d3	6a 6a		 push	 106			; 0000006aH
  005d5	50		 push	 eax
  005d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  005db	05 82 00 00 00	 add	 eax, 130		; 00000082H
  005e0	50		 push	 eax
  005e1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005e6	83 c4 14	 add	 esp, 20			; 00000014H
$LN58@familyDeta:
  005e9	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  005ee	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  005f4	68 00 00 00 00	 push	 OFFSET ??_C@_04PMAIGBME@?$CF38s@
  005f9	50		 push	 eax
  005fa	e8 00 00 00 00	 call	 _sprintf
  005ff	83 c4 0c	 add	 esp, 12			; 0000000cH

; 13275: #ifdef _FMVER21
; 13276: 		if ((pc.familyleader == FMMEMBER_LEADER) && (strcmp(pc.familyName, familyDetail.name) == 0)) {

  00602	83 3d 08 51 00
	00 03		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 3
  00609	0f 85 90 02 00
	00		 jne	 $LN59@familyDeta
  0060f	b9 08 00 00 00	 mov	 ecx, OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+8
  00614	b8 f6 50 00 00	 mov	 eax, OFFSET ?pc@@3UPC@@A+20726
  00619	0f 1f 80 00 00
	00 00		 npad	 7
$LL119@familyDeta:
  00620	8a 10		 mov	 dl, BYTE PTR [eax]
  00622	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00624	75 1a		 jne	 SHORT $LN120@familyDeta
  00626	84 d2		 test	 dl, dl
  00628	74 12		 je	 SHORT $LN121@familyDeta
  0062a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0062d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00630	75 0e		 jne	 SHORT $LN120@familyDeta
  00632	83 c0 02	 add	 eax, 2
  00635	83 c1 02	 add	 ecx, 2
  00638	84 d2		 test	 dl, dl
  0063a	75 e4		 jne	 SHORT $LL119@familyDeta
$LN121@familyDeta:
  0063c	33 c0		 xor	 eax, eax
  0063e	eb 05		 jmp	 SHORT $LN122@familyDeta
$LN120@familyDeta:
  00640	1b c0		 sbb	 eax, eax
  00642	83 c8 01	 or	 eax, 1
$LN122@familyDeta:
  00645	85 c0		 test	 eax, eax
  00647	0f 85 52 02 00
	00		 jne	 $LN59@familyDeta

; 13277: #else
; 13278: 		if ((pc.familyleader == 1) && (strcmp(pc.familyName, familyDetail.name) == 0)) {
; 13279: #endif
; 13280: 			fontId[0] = StockFontBuffer(x + 82, y + 130, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 2);

  0064d	6a 02		 push	 2
  0064f	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00655	50		 push	 eax
  00656	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  0065b	6a 00		 push	 0
  0065d	05 82 00 00 00	 add	 eax, 130		; 00000082H
  00662	6a 01		 push	 1
  00664	50		 push	 eax
  00665	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0066a	83 c0 52	 add	 eax, 82			; 00000052H
  0066d	50		 push	 eax
  0066e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00673	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA, eax

; 13281: 			btnId[2] = StockDispBuffer(x + 435, y + 270, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  00678	a1 00 00 00 00	 mov	 eax, DWORD PTR ?prevBtn@?1??familyDetailWN@@YAHXZ@4HA
  0067d	6a 02		 push	 2
  0067f	ff b4 85 f4 f9
	ff ff		 push	 DWORD PTR _prevBtnGraNo$[ebp+eax*4]
  00686	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  0068b	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  00690	6a 69		 push	 105			; 00000069H
  00692	50		 push	 eax
  00693	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00698	05 b3 01 00 00	 add	 eax, 435		; 000001b3H
  0069d	50		 push	 eax
  0069e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006a3	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA+8, eax

; 13282: 			btnId[3] = StockDispBuffer(x + 495, y + 270, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  006a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextBtn@?1??familyDetailWN@@YAHXZ@4HA
  006ad	6a 02		 push	 2
  006af	ff b4 85 ec f9
	ff ff		 push	 DWORD PTR _nextBtnGraNo$[ebp+eax*4]
  006b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  006bb	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  006c0	6a 69		 push	 105			; 00000069H
  006c2	50		 push	 eax
  006c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  006c8	05 ef 01 00 00	 add	 eax, 495		; 000001efH
  006cd	50		 push	 eax
  006ce	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  006d3	83 c4 40	 add	 esp, 64			; 00000040H
  006d6	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA+12, eax

; 13283: #ifdef _NB_FAMILYBADGE
; 13284: 			int æé®ID;
; 13285: 			fontId[5] = StockFontBuffer(x + 170, y + 135, FONT_PRIO_FRONT, 1, "è®¾ç½®å¾½ç« ", 2);

  006db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  006e0	05 87 00 00 00	 add	 eax, 135		; 00000087H
  006e5	6a 02		 push	 2
  006e7	68 00 00 00 00	 push	 OFFSET ??_C@_07JANJFJHP@?$DP?v?G?$PN?E?m?q@
  006ec	6a 01		 push	 1
  006ee	6a 01		 push	 1
  006f0	50		 push	 eax
  006f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  006f6	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  006fb	50		 push	 eax
  006fc	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00701	83 c4 18	 add	 esp, 24			; 00000018H
  00704	a3 14 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA+20, eax

; 13286: 			if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00709	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00710	74 1f		 je	 SHORT $LN127@familyDeta

; 13287: 				if (HitFontNo == fontId[5]) {

  00712	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00717	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA+20
  0071d	75 12		 jne	 SHORT $LN127@familyDeta

; 13288: 					å¾½ç« çªå£ = !å¾½ç« çªå£;

  0071f	33 c0		 xor	 eax, eax
  00721	39 05 00 00 00
	00		 cmp	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA, eax
  00727	0f 94 c0	 sete	 al
  0072a	a3 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA, eax
  0072f	eb 05		 jmp	 SHORT $LN62@familyDeta
$LN127@familyDeta:

; 13287: 				if (HitFontNo == fontId[5]) {

  00731	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA
$LN62@familyDeta:

; 13289: 				}
; 13290: 			}
; 13291: 			if (å¾½ç« çªå£) {

  00736	85 c0		 test	 eax, eax
  00738	0f 84 b4 01 00
	00		 je	 $LN60@familyDeta

; 13292: 				æé®ID = StockDispBuffer(x + 22, y + 330, DISP_PRIO_IME3, 52004, 2);

  0073e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00743	6a 02		 push	 2
  00745	68 24 cb 00 00	 push	 52004			; 0000cb24H
  0074a	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  0074f	6a 69		 push	 105			; 00000069H
  00751	50		 push	 eax
  00752	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00757	83 c0 16	 add	 eax, 22			; 00000016H
  0075a	50		 push	 eax
  0075b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00760	83 c4 14	 add	 esp, 20			; 00000014H

; 13293: 				if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00763	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0076a	74 17		 je	 SHORT $LN66@familyDeta

; 13294: 					if (HitDispNo == æé®ID) {

  0076c	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00772	75 0f		 jne	 SHORT $LN66@familyDeta

; 13295: 						if (å¾½ç« å½åé¡µ) å¾½ç« å½åé¡µ--;

  00774	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA
  00779	85 c0		 test	 eax, eax
  0077b	74 06		 je	 SHORT $LN66@familyDeta
  0077d	48		 dec	 eax
  0077e	a3 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA, eax
$LN66@familyDeta:

; 13296: 					}
; 13297: 				}
; 13298: 				æé®ID = StockDispBuffer(x + 544, y + 330, DISP_PRIO_IME3, 52005, 2);

  00783	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00788	6a 02		 push	 2
  0078a	68 25 cb 00 00	 push	 52005			; 0000cb25H
  0078f	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  00794	6a 69		 push	 105			; 00000069H
  00796	50		 push	 eax
  00797	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0079c	05 20 02 00 00	 add	 eax, 544		; 00000220H
  007a1	50		 push	 eax
  007a2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  007a7	83 c4 14	 add	 esp, 20			; 00000014H

; 13299: 				if (mouse.onceState & MOUSE_LEFT_CRICK) {

  007aa	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  007b1	74 21		 je	 SHORT $LN128@familyDeta

; 13300: 					if (HitDispNo == æé®ID) {

  007b3	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  007b9	75 19		 jne	 SHORT $LN128@familyDeta

; 13301: 						if (å¾½ç« å½åé¡µ < å¾½ç« æ»é¡µæ° - 1) å¾½ç« å½åé¡µ++;

  007bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñ???@?1??familyDetailWN@@YAHXZ@4HA
  007c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA
  007c6	48		 dec	 eax
  007c7	3b c8		 cmp	 ecx, eax
  007c9	7d 0f		 jge	 SHORT $LN69@familyDeta
  007cb	41		 inc	 ecx
  007cc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA, ecx
  007d2	eb 06		 jmp	 SHORT $LN69@familyDeta
$LN128@familyDeta:

; 13300: 					if (HitDispNo == æé®ID) {

  007d4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ýÅíñ?îñ?@?1??familyDetailWN@@YAHXZ@4HA
$LN69@familyDeta:

; 13302: 					}
; 13303: 				}
; 13304: 				int start = å¾½ç« å½åé¡µ * 12;

  007da	8d 34 49	 lea	 esi, DWORD PTR [ecx+ecx*2]
  007dd	c1 e6 02	 shl	 esi, 2
  007e0	81 c6 e6 8d 00
	00		 add	 esi, 36326		; 00008de6H
  007e6	33 ff		 xor	 edi, edi
  007e8	53		 push	 ebx
  007e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL15@familyDeta:

; 13308: 					æé®ID = StockDispBuffer(x + 64 + i * 40, y + 330, DISP_PRIO_IME3, 52006, 2);

  007f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  007f5	6a 02		 push	 2
  007f7	68 26 cb 00 00	 push	 52006			; 0000cb26H
  007fc	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  00801	6a 69		 push	 105			; 00000069H
  00803	50		 push	 eax
  00804	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00809	83 c0 40	 add	 eax, 64			; 00000040H
  0080c	03 c7		 add	 eax, edi
  0080e	50		 push	 eax
  0080f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 13309: 					StockDispBuffer(x + 64 + i * 40, y + 330, DISP_PRIO_IME4, å¾½ç« æ°æ®èµ·å§ID + start, 0);

  00814	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  0081a	8b d8		 mov	 ebx, eax
  0081c	6a 00		 push	 0
  0081e	56		 push	 esi
  0081f	81 c1 4a 01 00
	00		 add	 ecx, 330		; 0000014aH
  00825	6a 6a		 push	 106			; 0000006aH
  00827	51		 push	 ecx
  00828	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0082e	83 c1 40	 add	 ecx, 64			; 00000040H
  00831	03 cf		 add	 ecx, edi
  00833	51		 push	 ecx
  00834	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00839	83 c4 28	 add	 esp, 40			; 00000028H

; 13310: 					if (mouse.onceState & MOUSE_LEFT_CRICK) {

  0083c	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00843	74 18		 je	 SHORT $LN71@familyDeta

; 13311: 						if (HitDispNo == æé®ID) {

  00845	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, ebx ; HitDispNo
  0084b	75 10		 jne	 SHORT $LN71@familyDeta

; 13312: 							å¾½ç« ç´¢å¼ = å¾½ç« æ°æ®èµ·å§ID + start;

  0084d	89 35 00 00 00
	00		 mov	 DWORD PTR ?ýÅíñßãìÚ@?1??familyDetailWN@@YAHXZ@4HA, esi

; 13313: 							å¾½ç« çªå£ = FALSE;

  00853	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyDetailWN@@YAHXZ@4HA, 0
$LN71@familyDeta:

; 13314: 						}
; 13315: 					}
; 13316: 					start++;

  0085d	46		 inc	 esi

; 13317: 					if (å¾½ç« ä¸ªæ° < start) break;

  0085e	81 fe f0 8d 00
	00		 cmp	 esi, 36336		; 00008df0H
  00864	7f 0f		 jg	 SHORT $LN97@familyDeta

; 13305: 				int end = (å¾½ç« å½åé¡µ * 12 < å¾½ç« ä¸ªæ° ? å¾½ç« å½åé¡µ * 12 : å¾½ç« ä¸ªæ°);
; 13306: 				int i = 0;
; 13307: 				for (; i < 12; i++) {

  00866	83 c7 28	 add	 edi, 40			; 00000028H
  00869	81 ff e0 01 00
	00		 cmp	 edi, 480		; 000001e0H
  0086f	0f 8c 7b ff ff
	ff		 jl	 $LL15@familyDeta
$LN97@familyDeta:

; 13318: 				}
; 13319: 				StockDispBuffer(x + 282, y + 330, DISP_PRIO_IME3, 52007, 1);

  00875	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  0087a	6a 01		 push	 1
  0087c	68 27 cb 00 00	 push	 52007			; 0000cb27H
  00881	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  00886	6a 69		 push	 105			; 00000069H
  00888	50		 push	 eax
  00889	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0088e	05 1a 01 00 00	 add	 eax, 282		; 0000011aH
  00893	50		 push	 eax
  00894	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00899	83 c4 14	 add	 esp, 20			; 00000014H
  0089c	5b		 pop	 ebx

; 13320: 			}
; 13321: #endif
; 13322: 		}

  0089d	eb 53		 jmp	 SHORT $LN60@familyDeta
$LN59@familyDeta:

; 13323: 		else {
; 13324: #ifdef _NB_FAMILYBADGE
; 13325: 			StockDispBuffer(x + 130, y + 139, DISP_PRIO_IME4, familyDetail.badgeNo, 0);

  0089f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  008a4	6a 00		 push	 0
  008a6	ff 35 1c 01 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+284
  008ac	05 8b 00 00 00	 add	 eax, 139		; 0000008bH
  008b1	6a 6a		 push	 106			; 0000006aH
  008b3	50		 push	 eax
  008b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  008b9	05 82 00 00 00	 add	 eax, 130		; 00000082H
  008be	50		 push	 eax
  008bf	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 13326: #endif
; 13327: 			fontId[0] = StockFontBuffer(x + 20, y + 160, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  008c4	6a 00		 push	 0
  008c6	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  008cc	50		 push	 eax
  008cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  008d2	6a 00		 push	 0
  008d4	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  008d9	6a 01		 push	 1
  008db	50		 push	 eax
  008dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  008e1	83 c0 14	 add	 eax, 20			; 00000014H
  008e4	50		 push	 eax
  008e5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  008ea	83 c4 2c	 add	 esp, 44			; 0000002cH
  008ed	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyDetailWN@@YAHXZ@4PAHA, eax
$LN60@familyDeta:

; 13328: 		}
; 13329: 
; 13330: 		//strcpy( familyRuleShow.buffer, familyDetail.rule );
; 13331: 
; 13332: 		if (changeData[0] == 1) {

  008f2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?changeData@@3PAHA, 1
  008f9	75 19		 jne	 SHORT $LN73@familyDeta

; 13333: 			StockFontBuffer2(&familyRuleShow);

  008fb	68 00 00 00 00	 push	 OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  00900	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 13334: 			GetKeyInputFocus(&familyRuleShow);

  00905	68 00 00 00 00	 push	 OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  0090a	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0090f	83 c4 08	 add	 esp, 8

; 13335: 		}

  00912	eb 23		 jmp	 SHORT $LN75@familyDeta
$LN73@familyDeta:

; 13336: 		else {
; 13337: 			GetKeyInputFocus(&MyChatBuffer);

  00914	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00919	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0091e	83 c4 04	 add	 esp, 4

; 13338: 			if (familyRuleShow.buffer[0] != NULL)

  00921	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyRuleShow@@3USTR_BUFFER@@A, 0
  00928	74 0d		 je	 SHORT $LN75@familyDeta

; 13339: 			{
; 13340: 				StockFontBuffer2(&familyRuleShow);

  0092a	68 00 00 00 00	 push	 OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  0092f	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  00934	83 c4 04	 add	 esp, 4
$LN75@familyDeta:

; 13341: 			}
; 13342: 		}
; 13343: 
; 13344: 		//StockFontBuffer( x+20, y+160, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0 );
; 13345: 		//StockFontBuffer( x+20, y+190, FONT_PRIO_FRONT, FONT_PAL_WHITE, familyDetail.rule, 0 );
; 13346: 		//StockFontBuffer( x+20, y+220, FONT_PRIO_FRONT, FONT_PAL_WHITE, familyDetail.rule, 0 );
; 13347: 
; 13348: 
; 13349: 		//sprintf( buf, "å® æ¤ å½ï¼%s", familyDetail.petname );
; 13350: 		if (changeData[1] == 0)

  00937	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0093d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00943	81 c1 b4 01 00
	00		 add	 ecx, 436		; 000001b4H
  00949	83 c2 50	 add	 edx, 80			; 00000050H
  0094c	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?changeData@@3PAHA+4, 0
  00953	75 07		 jne	 SHORT $LN76@familyDeta

; 13351: 			StockFontBuffer(x + 436, y + 80, FONT_PRIO_FRONT, FONT_PAL_WHITE, familyDetail.petname, 0);

  00955	b8 34 00 00 00	 mov	 eax, OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+52
  0095a	eb 0f		 jmp	 SHORT $LN77@familyDeta
$LN76@familyDeta:

; 13352: 		else
; 13353: 			StockFontBuffer(x + 436, y + 80, FONT_PRIO_FRONT, FONT_PAL_WHITE, pet[familyPetIndex].name, 0);

  0095c	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, 2936
  00966	05 54 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+84
$LN77@familyDeta:

; 13354: 
; 13355: 		StockFontBuffer(x + 436, y + 36, FONT_PRIO_FRONT, FONT_PAL_WHITE, familySpriteName[familyDetail.sprite], 0);

  0096b	6a 00		 push	 0
  0096d	50		 push	 eax
  0096e	6a 00		 push	 0
  00970	6a 01		 push	 1
  00972	52		 push	 edx
  00973	51		 push	 ecx
  00974	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00979	a1 18 01 00 00	 mov	 eax, DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+280
  0097e	6a 00		 push	 0
  00980	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00983	8d 04 45 00 00
	00 00		 lea	 eax, DWORD PTR ?familySpriteName@@3PAY09DA[eax*2]
  0098a	50		 push	 eax
  0098b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00990	6a 00		 push	 0
  00992	83 c0 24	 add	 eax, 36			; 00000024H
  00995	6a 01		 push	 1
  00997	50		 push	 eax
  00998	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  0099d	05 b4 01 00 00	 add	 eax, 436		; 000001b4H
  009a2	50		 push	 eax
  009a3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  009a8	83 c4 30	 add	 esp, 48			; 00000030H

; 13356: 
; 13357: 		//fontId[0] = StockFontBuffer( x+200, y+250, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "å  å¥", 2 );
; 13358: 		//fontId[1] = StockFontBuffer( x+300, y+250, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ç¦» å¼", 2 );
; 13359: 		if (pc.familyName[0] == NULL && familyDetail.joinflag == 1) {

  009ab	80 3d f6 50 00
	00 00		 cmp	 BYTE PTR ?pc@@3UPC@@A+20726, 0
  009b2	75 32		 jne	 SHORT $LN78@familyDeta
  009b4	83 3d 8c 00 00
	00 01		 cmp	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+140, 1
  009bb	75 29		 jne	 SHORT $LN78@familyDeta

; 13360: 			btnId[0] = StockDispBuffer(x + 90, y + 274, DISP_PRIO_IME3, CG_JOIN_BTN, 2);

  009bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  009c2	6a 02		 push	 2
  009c4	68 83 66 00 00	 push	 26243			; 00006683H
  009c9	05 12 01 00 00	 add	 eax, 274		; 00000112H
  009ce	6a 69		 push	 105			; 00000069H
  009d0	50		 push	 eax
  009d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  009d6	83 c0 5a	 add	 eax, 90			; 0000005aH
  009d9	50		 push	 eax
  009da	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  009df	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA, eax

; 13361: 			btnId[1] = StockDispBuffer(x + 270, y + 274, DISP_PRIO_IME3, CG_EXIT_BTN2, 2);
; 13362: 		}

  009e4	eb 62		 jmp	 SHORT $LN138@familyDeta
$LN78@familyDeta:

; 13363: 		else if ((changeData[0] == 1) || (changeData[1] == 1)) {

  009e6	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?changeData@@3PAHA, 1
  009ed	74 32		 je	 SHORT $LN82@familyDeta
  009ef	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?changeData@@3PAHA+4, 1
  009f6	74 29		 je	 SHORT $LN82@familyDeta

; 13365: 			btnId[1] = StockDispBuffer(x + 270, y + 274, DISP_PRIO_IME3, CG_EXIT_BTN2, 2);
; 13366: 		}
; 13367: 		else
; 13368: 			btnId[1] = StockDispBuffer(x + 180, y + 274, DISP_PRIO_IME3, CG_EXIT_BTN2, 2);

  009f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  009fd	6a 02		 push	 2
  009ff	68 81 66 00 00	 push	 26241			; 00006681H
  00a04	05 12 01 00 00	 add	 eax, 274		; 00000112H
  00a09	6a 69		 push	 105			; 00000069H
  00a0b	50		 push	 eax
  00a0c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00a11	05 b4 00 00 00	 add	 eax, 180		; 000000b4H
  00a16	50		 push	 eax
  00a17	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a1c	83 c4 14	 add	 esp, 20			; 00000014H
  00a1f	eb 4e		 jmp	 SHORT $LN139@familyDeta
$LN82@familyDeta:

; 13364: 			btnId[4] = StockDispBuffer(x + 90, y + 274, DISP_PRIO_IME3, 26093, 2);

  00a21	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00a26	6a 02		 push	 2
  00a28	68 ed 65 00 00	 push	 26093			; 000065edH
  00a2d	05 12 01 00 00	 add	 eax, 274		; 00000112H
  00a32	6a 69		 push	 105			; 00000069H
  00a34	50		 push	 eax
  00a35	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00a3a	83 c0 5a	 add	 eax, 90			; 0000005aH
  00a3d	50		 push	 eax
  00a3e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a43	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA+16, eax
$LN138@familyDeta:

; 13369: 
; 13370: 		if (pActPet11 == NULL)

  00a48	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00a4d	6a 02		 push	 2
  00a4f	68 81 66 00 00	 push	 26241			; 00006681H
  00a54	05 12 01 00 00	 add	 eax, 274		; 00000112H
  00a59	6a 69		 push	 105			; 00000069H
  00a5b	50		 push	 eax
  00a5c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00a61	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  00a66	50		 push	 eax
  00a67	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a6c	83 c4 28	 add	 esp, 40			; 00000028H
$LN139@familyDeta:
  00a6f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActPet11@@3PAUaction@@A, 0
  00a76	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyDetailWN@@YAHXZ@4PAHA+4, eax
  00a7b	75 46		 jne	 SHORT $LN85@familyDeta

; 13371: 			if (changeData[1] == 0)

  00a7d	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?changeData@@3PAHA+4, 0
  00a84	6a 00		 push	 0
  00a86	75 08		 jne	 SHORT $LN84@familyDeta

; 13372: 				pActPet11 = MakeAnimDisp(x + 460, y + 240, familyDetail.petgra, 0);

  00a88	ff 35 14 01 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+276
  00a8e	eb 10		 jmp	 SHORT $LN140@familyDeta
$LN84@familyDeta:

; 13373: 			else
; 13374: 				pActPet11 = MakeAnimDisp(x + 460, y + 240, pet[familyPetIndex].graNo, 0);

  00a90	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?familyPetIndex@?1??familyDetailWN@@YAHXZ@4HA, 2936
  00a9a	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
$LN140@familyDeta:

; 13375: 
; 13376: 		StockDispBuffer(x + 306, y + 76, DISP_PRIO_IME3, familyDetail.leadergraph, 0);

  00aa0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00aa5	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  00aaa	50		 push	 eax
  00aab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00ab0	05 cc 01 00 00	 add	 eax, 460		; 000001ccH
  00ab5	50		 push	 eax
  00ab6	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00abb	a3 00 00 00 00	 mov	 DWORD PTR ?pActPet11@@3PAUaction@@A, eax
  00ac0	83 c4 10	 add	 esp, 16			; 00000010H
$LN85@familyDeta:
  00ac3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00ac8	6a 00		 push	 0
  00aca	ff 35 30 00 00
	00		 push	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+48
  00ad0	83 c0 4c	 add	 eax, 76			; 0000004cH
  00ad3	6a 69		 push	 105			; 00000069H
  00ad5	50		 push	 eax
  00ad6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00adb	05 32 01 00 00	 add	 eax, 306		; 00000132H
  00ae0	50		 push	 eax
  00ae1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 13377: 		StockDispBuffer(x + 280, y + 145, DISP_PRIO_IME3, CG_FAMILY_DETAIL_WIN, 1);

  00ae6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyDetailWN@@YAHXZ@4HA
  00aeb	6a 01		 push	 1
  00aed	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FAMILY_DETAIL_WIN@@3HA ; CG_FAMILY_DETAIL_WIN
  00af3	05 91 00 00 00	 add	 eax, 145		; 00000091H
  00af8	6a 69		 push	 105			; 00000069H
  00afa	50		 push	 eax
  00afb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyDetailWN@@YAHXZ@4HA
  00b00	05 18 01 00 00	 add	 eax, 280		; 00000118H
  00b05	50		 push	 eax
  00b06	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00b0b	83 c4 28	 add	 esp, 40			; 00000028H

; 13378: 
; 13379: 		}
; 13380: 
; 13381: 	return 0;
; 13382: 
; 13383: 	}

  00b0e	33 c0		 xor	 eax, eax
  00b10	5f		 pop	 edi
  00b11	5e		 pop	 esi
  00b12	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b15	33 cd		 xor	 ecx, ebp
  00b17	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b1c	8b e5		 mov	 esp, ebp
  00b1e	5d		 pop	 ebp
  00b1f	c3		 ret	 0
$LN17@familyDeta:

; 13085: 		)
; 13086: 	{
; 13087: 		GetKeyInputFocus(&MyChatBuffer);

  00b20	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00b25	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00b2a	83 c4 04	 add	 esp, 4

; 13088: 		closeFamilyList();

  00b2d	e8 00 00 00 00	 call	 ?closeFamilyList@@YAXXZ	; closeFamilyList

; 13378: 
; 13379: 		}
; 13380: 
; 13381: 	return 0;
; 13382: 
; 13383: 	}

  00b32	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b35	33 c0		 xor	 eax, eax
  00b37	33 cd		 xor	 ecx, ebp
  00b39	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b3e	8b e5		 mov	 esp, ebp
  00b40	5d		 pop	 ebp
  00b41	c3		 ret	 0
  00b42	66 90		 npad	 2
$LN114@familyDeta:
  00b44	00 00 00 00	 DD	 $LN21@familyDeta
  00b48	00 00 00 00	 DD	 $LN50@familyDeta
  00b4c	00 00 00 00	 DD	 $LN26@familyDeta
  00b50	00 00 00 00	 DD	 $LN31@familyDeta
  00b54	00 00 00 00	 DD	 $LN36@familyDeta
?familyDetailWN@@YAHXZ ENDP				; familyDetailWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyDetail@@YAXPAD@Z
_TEXT	SEGMENT
_ibuf$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFamilyDetail@@YAXPAD@Z PROC			; initFamilyDetail, COMDAT

; 12995: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 12996: 	//printf("initFamilyDetail :%s\n",data);
; 12997: 	char ibuf[64];
; 12998: 
; 12999: 	if (familyListProcNo == 1)

  00010	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?familyListProcNo@@3FA
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  0001a	66 83 f8 01	 cmp	 ax, 1
  0001e	75 0d		 jne	 SHORT $LN2@initFamily

; 13000: 		familyListProcNo = 10;

  00020	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00025	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  0002b	eb 2b		 jmp	 SHORT $LN4@initFamily
$LN2@initFamily:

; 13001: 	else if (familyListProcNo == 0) {

  0002d	66 85 c0	 test	 ax, ax
  00030	75 26		 jne	 SHORT $LN4@initFamily

; 13002: 		familyListProcNo = 20;
; 13003: 		lssproto_WN_recv(sockfd, WINDOW_MESSAGETYPE_MESSAGE, WINDOW_BUTTONTYPE_OK, -1, -1, AnnounceBuf);

  00032	68 00 00 00 00	 push	 OFFSET ?AnnounceBuf@@3PADA ; AnnounceBuf
  00037	6a ff		 push	 -1
  00039	6a ff		 push	 -1
  0003b	6a 01		 push	 1
  0003d	6a 00		 push	 0
  0003f	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00045	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  0004a	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  00050	e8 00 00 00 00	 call	 ?lssproto_WN_recv@@YAXHHHHHPAD@Z ; lssproto_WN_recv
  00055	83 c4 18	 add	 esp, 24			; 00000018H
$LN4@initFamily:

; 13004: 	}
; 13005: 
; 13006: 	DeathAction(ptActMenuWin);

  00058	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0005e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 13007: 	ptActMenuWin = NULL;
; 13008: 
; 13009: 	familyRuleShow.buffer[0] = NULL;
; 13010: 	familyRuleShow.cnt = 0;
; 13011: 	familyRuleShow.cursor = 0;
; 13012: 	familyRuleShow.len = 114;
; 13013: 	familyRuleShow.lineLen = 38;
; 13014: 	familyRuleShow.lineDist = 30;
; 13015: 	familyRuleShow.color = 0;
; 13016: 	//familyRuleShow.x = x+20;
; 13017: 	//familyRuleShow.y = y+160;
; 13018: 	familyRuleShow.fontPrio = FONT_PRIO_FRONT;
; 13019: 	getStringToken(data, '|', 3, sizeof(ibuf) - 1, ibuf);

  00063	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00066	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00070	50		 push	 eax
  00071	6a 3f		 push	 63			; 0000003fH
  00073	6a 03		 push	 3
  00075	6a 7c		 push	 124			; 0000007cH
  00077	56		 push	 esi
  00078	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?familyRuleShow@@3USTR_BUFFER@@A, 0
  0007f	c7 05 06 01 00
	00 1e 00 00 00	 mov	 DWORD PTR ?familyRuleShow@@3USTR_BUFFER@@A+262, 30 ; 0000001eH
  00089	66 c7 05 04 01
	00 00 72 26	 mov	 WORD PTR ?familyRuleShow@@3USTR_BUFFER@@A+260, 9842 ; 00002672H
  00092	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?familyRuleShow@@3USTR_BUFFER@@A+284, 1
  0009c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13020: 	familyDetail.tempindex = atoi(ibuf);

  000a1	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _atoi
  000aa	a3 04 00 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+4, eax

; 13021: 	getStringToken(data, '|', 4, sizeof(ibuf) - 1, ibuf);

  000af	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000b2	50		 push	 eax
  000b3	6a 3f		 push	 63			; 0000003fH
  000b5	6a 04		 push	 4
  000b7	6a 7c		 push	 124			; 0000007cH
  000b9	56		 push	 esi
  000ba	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13022: 	familyDetail.index = atoi(ibuf);

  000bf	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 _atoi

; 13023: 	getStringToken(data, '|', 5, sizeof(familyDetail.name) - 1, familyDetail.name);

  000c8	68 08 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+8
  000cd	6a 13		 push	 19			; 00000013H
  000cf	6a 05		 push	 5
  000d1	6a 7c		 push	 124			; 0000007cH
  000d3	56		 push	 esi
  000d4	a3 00 00 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A, eax
  000d9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000de	83 c4 48	 add	 esp, 72			; 00000048H

; 13024: 	makeStringFromEscaped(familyDetail.name);

  000e1	68 08 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+8
  000e6	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 13025: 	getStringToken(data, '|', 6, sizeof(familyDetail.leadername) - 1, familyDetail.leadername);

  000eb	68 1c 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+28
  000f0	6a 13		 push	 19			; 00000013H
  000f2	6a 06		 push	 6
  000f4	6a 7c		 push	 124			; 0000007cH
  000f6	56		 push	 esi
  000f7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13026: 	makeStringFromEscaped(familyDetail.leadername);

  000fc	68 1c 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+28
  00101	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 13027: 	getStringToken(data, '|', 7, sizeof(ibuf) - 1, ibuf);

  00106	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00109	50		 push	 eax
  0010a	6a 3f		 push	 63			; 0000003fH
  0010c	6a 07		 push	 7
  0010e	6a 7c		 push	 124			; 0000007cH
  00110	56		 push	 esi
  00111	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13028: 	familyDetail.leadergraph = atoi(ibuf);

  00116	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00119	50		 push	 eax
  0011a	e8 00 00 00 00	 call	 _atoi

; 13029: 	getStringToken(data, '|', 8, sizeof(familyDetail.petname) - 1, familyDetail.petname);

  0011f	68 34 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+52
  00124	6a 13		 push	 19			; 00000013H
  00126	6a 08		 push	 8
  00128	6a 7c		 push	 124			; 0000007cH
  0012a	56		 push	 esi
  0012b	a3 30 00 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+48, eax
  00130	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00135	83 c4 48	 add	 esp, 72			; 00000048H

; 13030: 	makeStringFromEscaped(familyDetail.petname);

  00138	68 34 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+52
  0013d	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 13031: 	getStringToken(data, '|', 9, sizeof(familyDetail.petattr) - 1, familyDetail.petattr);

  00142	68 48 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+72
  00147	6a 3f		 push	 63			; 0000003fH
  00149	6a 09		 push	 9
  0014b	6a 7c		 push	 124			; 0000007cH
  0014d	56		 push	 esi
  0014e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13032: 	makeStringFromEscaped(familyDetail.petattr);

  00153	68 48 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+72
  00158	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 13033: 	getStringToken(data, '|', 10, sizeof(ibuf) - 1, ibuf);

  0015d	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00160	50		 push	 eax
  00161	6a 3f		 push	 63			; 0000003fH
  00163	6a 0a		 push	 10			; 0000000aH
  00165	6a 7c		 push	 124			; 0000007cH
  00167	56		 push	 esi
  00168	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13034: 	familyDetail.joinnum = atoi(ibuf);

  0016d	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00170	50		 push	 eax
  00171	e8 00 00 00 00	 call	 _atoi
  00176	a3 88 00 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+136, eax

; 13035: 	getStringToken(data, '|', 11, sizeof(ibuf) - 1, ibuf);

  0017b	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0017e	50		 push	 eax
  0017f	6a 3f		 push	 63			; 0000003fH
  00181	6a 0b		 push	 11			; 0000000bH
  00183	6a 7c		 push	 124			; 0000007cH
  00185	56		 push	 esi
  00186	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0018b	83 c4 48	 add	 esp, 72			; 00000048H

; 13036: 	familyDetail.joinflag = atoi(ibuf);

  0018e	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 _atoi

; 13037: 
; 13038: 	getStringToken(data, '|', 12, sizeof(familyDetail.rule) - 1, familyDetail.rule);

  00197	68 90 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+144
  0019c	68 81 00 00 00	 push	 129			; 00000081H
  001a1	6a 0c		 push	 12			; 0000000cH
  001a3	6a 7c		 push	 124			; 0000007cH
  001a5	56		 push	 esi
  001a6	a3 8c 00 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+140, eax
  001ab	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13039: 	makeStringFromEscaped(familyDetail.rule);

  001b0	68 90 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+144
  001b5	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  001ba	83 c4 1c	 add	 esp, 28			; 0000001cH
  001bd	33 c9		 xor	 ecx, ecx
  001bf	90		 npad	 1
$LL6@initFamily:

; 13040: 	strcpy(familyRuleShow.buffer, familyDetail.rule);

  001c0	8a 81 90 00 00
	00		 mov	 al, BYTE PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A[ecx+144]
  001c6	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001c9	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?familyRuleShow@@3USTR_BUFFER@@A[ecx-1], al
  001cf	84 c0		 test	 al, al
  001d1	75 ed		 jne	 SHORT $LL6@initFamily

; 13041: 	familyRuleShow.cnt = strlen(familyRuleShow.buffer);

  001d3	b9 00 00 00 00	 mov	 ecx, OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  001d8	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  001db	0f 1f 44 00 00	 npad	 5
$LL10@initFamily:
  001e0	8a 01		 mov	 al, BYTE PTR [ecx]
  001e2	41		 inc	 ecx
  001e3	84 c0		 test	 al, al
  001e5	75 f9		 jne	 SHORT $LL10@initFamily
  001e7	2b ca		 sub	 ecx, edx
  001e9	88 0d 07 01 00
	00		 mov	 BYTE PTR ?familyRuleShow@@3USTR_BUFFER@@A+263, cl

; 13042: 	familyRuleShow.cursor = strlen(familyRuleShow.buffer);

  001ef	b9 00 00 00 00	 mov	 ecx, OFFSET ?familyRuleShow@@3USTR_BUFFER@@A ; familyRuleShow
  001f4	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL11@initFamily:
  001f7	8a 01		 mov	 al, BYTE PTR [ecx]
  001f9	41		 inc	 ecx
  001fa	84 c0		 test	 al, al
  001fc	75 f9		 jne	 SHORT $LL11@initFamily

; 13043: 	getStringToken(data, '|', 13, sizeof(ibuf) - 1, ibuf);

  001fe	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00201	2b ca		 sub	 ecx, edx
  00203	50		 push	 eax
  00204	6a 3f		 push	 63			; 0000003fH
  00206	6a 0d		 push	 13			; 0000000dH
  00208	6a 7c		 push	 124			; 0000007cH
  0020a	56		 push	 esi
  0020b	88 0d 09 01 00
	00		 mov	 BYTE PTR ?familyRuleShow@@3USTR_BUFFER@@A+265, cl
  00211	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13044: 	familyDetail.sprite = atoi(ibuf);

  00216	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00219	50		 push	 eax
  0021a	e8 00 00 00 00	 call	 _atoi
  0021f	a3 18 01 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+280, eax

; 13045: #ifdef _NB_FAMILYBADGE
; 13046: 	getStringToken(data, '|', 14, sizeof(ibuf) - 1, ibuf);

  00224	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00227	50		 push	 eax
  00228	6a 3f		 push	 63			; 0000003fH
  0022a	6a 0e		 push	 14			; 0000000eH
  0022c	6a 7c		 push	 124			; 0000007cH
  0022e	56		 push	 esi
  0022f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 13047: 	familyDetail.badgeNo = atoi(ibuf);

  00234	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00237	50		 push	 eax
  00238	e8 00 00 00 00	 call	 _atoi
  0023d	a3 1c 01 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+284, eax

; 13048: #endif
; 13049: 	getStringToken(familyDetail.petattr, ' ', 1, sizeof(ibuf) - 1, ibuf);

  00242	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00245	50		 push	 eax
  00246	6a 3f		 push	 63			; 0000003fH
  00248	6a 01		 push	 1
  0024a	6a 20		 push	 32			; 00000020H
  0024c	68 48 00 00 00	 push	 OFFSET ?familyDetail@@3U<unnamed-type-familyDetail>@@A+72
  00251	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00256	83 c4 44	 add	 esp, 68			; 00000044H

; 13050: 	familyDetail.petgra = atoi(ibuf);

  00259	8d 45 bc	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0025c	50		 push	 eax
  0025d	e8 00 00 00 00	 call	 _atoi

; 13051: 
; 13052: 	changeData[0] = 0;
; 13053: 	changeData[1] = 0;
; 13054: }

  00262	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00265	83 c4 04	 add	 esp, 4
  00268	33 cd		 xor	 ecx, ebp
  0026a	a3 14 01 00 00	 mov	 DWORD PTR ?familyDetail@@3U<unnamed-type-familyDetail>@@A+276, eax
  0026f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?changeData@@3PAHA, 0
  00279	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?changeData@@3PAHA+4, 0
  00283	5e		 pop	 esi
  00284	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00289	8b e5		 mov	 esp, ebp
  0028b	5d		 pop	 ebp
  0028c	c3		 ret	 0
?initFamilyDetail@@YAXPAD@Z ENDP			; initFamilyDetail
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyListWN@@YAXXZ
_TEXT	SEGMENT
_nextBtnGraNo10$ = -1572				; size = 8
_prevBtnGraNo10$ = -1564				; size = 8
_nextBtnGraNo$ = -1556					; size = 8
_prevBtnGraNo$ = -1548					; size = 8
_buf2$ = -1540						; size = 512
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?familyListWN@@YAXXZ PROC				; familyListWN, COMDAT

; 12763: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 06 00
	00		 sub	 esp, 1572		; 00000624H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 12764: 	//static ACTION *ptActMenuWin = NULL;
; 12765: 	static int x, y, w, h, i, j;
; 12766: 	static int btnId[5];
; 12767: 	static int fontId[12];
; 12768: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };

  00013	c7 85 f4 f9 ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  0001d	c7 85 f8 f9 ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H

; 12769: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };

  00027	c7 85 ec f9 ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00031	c7 85 f0 f9 ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H

; 12770: 	int prevBtnGraNo10[] = { CG_PREV_BTN2, CG_PREV_BTN2_DOWN };

  0003b	c7 85 e4 f9 ff
	ff 48 66 00 00	 mov	 DWORD PTR _prevBtnGraNo10$[ebp], 26184 ; 00006648H
  00045	c7 85 e8 f9 ff
	ff 49 66 00 00	 mov	 DWORD PTR _prevBtnGraNo10$[ebp+4], 26185 ; 00006649H

; 12771: 	int nextBtnGraNo10[] = { CG_NEXT_BTN2, CG_NEXT_BTN2_DOWN };

  0004f	c7 85 dc f9 ff
	ff 4a 66 00 00	 mov	 DWORD PTR _nextBtnGraNo10$[ebp], 26186 ; 0000664aH
  00059	c7 85 e0 f9 ff
	ff 4b 66 00 00	 mov	 DWORD PTR _nextBtnGraNo10$[ebp+4], 26187 ; 0000664bH

; 12772: 
; 12773: 	static int prevBtn = 0, nextBtn = 0, prevBtn10 = 0, nextBtn10 = 0;
; 12774: 	int selBtnId = -1;
; 12775: 	int selFontBtnId = -1;
; 12776: 	int ret = 0;
; 12777: 	char buf[1024];
; 12778: 	char buf2[512];
; 12779: 
; 12780: 
; 12781: 
; 12782: 	if (CheckMenuFlag()
; 12783: 		|| joy_trg[0] & JOY_ESC
; 12784: 		|| actBtn == 1
; 12785: 		|| menuBtn == 1
; 12786: 		|| disconnectServerFlag == TRUE
; 12787: 		|| wnCloseFlag == 1

  00063	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00068	85 c0		 test	 eax, eax
  0006a	0f 85 6d 06 00
	00		 jne	 $LN8@familyList
  00070	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0007a	0f 85 5d 06 00
	00		 jne	 $LN8@familyList
  00080	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00088	0f 84 4f 06 00
	00		 je	 $LN8@familyList
  0008e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00096	0f 84 41 06 00
	00		 je	 $LN8@familyList
  0009c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  000a3	0f 84 34 06 00
	00		 je	 $LN8@familyList
  000a9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  000b1	0f 84 26 06 00
	00		 je	 $LN8@familyList

; 12791: 		/*
; 12792: 		windowTypeWN = -1;
; 12793: 		DeathAction( ptActMenuWin );
; 12794: 		ptActMenuWin = NULL;
; 12795: 		*/
; 12796: 		return;
; 12797: 	}
; 12798: 
; 12799: 	if (familyListProcNo == 10 || familyListProcNo == 20) {

  000b7	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?familyListProcNo@@3FA
  000bd	66 83 f8 0a	 cmp	 ax, 10			; 0000000aH
  000c1	74 06		 je	 SHORT $LN10@familyList
  000c3	66 83 f8 14	 cmp	 ax, 20			; 00000014H
  000c7	75 0b		 jne	 SHORT $LN9@familyList
$LN10@familyList:

; 12800: 		familyDetailWN();

  000c9	e8 00 00 00 00	 call	 ?familyDetailWN@@YAHXZ	; familyDetailWN
  000ce	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?familyListProcNo@@3FA
$LN9@familyList:

; 12801: 	}
; 12802: 
; 12803: 	if (familyListProcNo == 1) {

  000d4	66 83 f8 01	 cmp	 ax, 1
  000d8	0f 85 31 02 00
	00		 jne	 $LN5@familyList

; 12804: 		if (ptActMenuWin == NULL)

  000de	56		 push	 esi
  000df	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000e5	85 f6		 test	 esi, esi
  000e7	0f 85 a6 00 00
	00		 jne	 $LN12@familyList

; 12805: 		{
; 12806: 			familyListProcNo = 1;

  000ed	b8 01 00 00 00	 mov	 eax, 1

; 12807: 
; 12808: 			w = 7; h = 8;

  000f2	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?w@?1??familyListWN@@YAXXZ@4HA, 7

; 12809: 			x = (640 - w * 64) / 2;
; 12810: 			y = (480 - h * 48) / 2;
; 12811: 
; 12812: 			ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  000fc	50		 push	 eax
  000fd	56		 push	 esi
  000fe	6a 08		 push	 8
  00100	6a 07		 push	 7
  00102	6a 30		 push	 48			; 00000030H
  00104	6a 60		 push	 96			; 00000060H
  00106	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  0010c	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?h@?1??familyListWN@@YAXXZ@4HA, 8
  00116	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA, 96 ; 00000060H
  00120	c7 05 00 00 00
	00 30 00 00 00	 mov	 DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA, 48 ; 00000030H
  0012a	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0012f	8b c8		 mov	 ecx, eax

; 12813: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 12814: 			ptActMenuWin->x += DISPLACEMENT_X / 2;

  00131	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00136	99		 cdq
  00137	2b c2		 sub	 eax, edx
  00139	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin
  0013f	d1 f8		 sar	 eax, 1
  00141	01 41 18	 add	 DWORD PTR [ecx+24], eax

; 12815: 			ptActMenuWin->y += DISPLACEMENT_Y / 2;

  00144	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00149	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0014f	99		 cdq
  00150	2b c2		 sub	 eax, edx
  00152	d1 f8		 sar	 eax, 1
  00154	01 41 1c	 add	 DWORD PTR [ecx+28], eax

; 12816: 			x = ptActMenuWin->x;

  00157	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin

; 12817: 			y = ptActMenuWin->y;
; 12818: #endif
; 12819: 			play_se(202, 320, 240);	// ????????	

  0015d	68 f0 00 00 00	 push	 240			; 000000f0H
  00162	68 40 01 00 00	 push	 320			; 00000140H
  00167	68 ca 00 00 00	 push	 202			; 000000caH
  0016c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0016f	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA, eax
  00174	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00177	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA, eax
  0017c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00181	83 c4 24	 add	 esp, 36			; 00000024H
  00184	5e		 pop	 esi

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  00185	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00188	33 cd		 xor	 ecx, ebp
  0018a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0018f	8b e5		 mov	 esp, ebp
  00191	5d		 pop	 ebp
  00192	c3		 ret	 0
$LN12@familyList:

; 12820: 
; 12821: 
; 12822: 		}
; 12823: 		//else if( ptActMenuWin != NULL )
; 12824: 		//if( familyListProcNo == 1 )
; 12825: 		else if (ptActMenuWin->hp >= 1)

  00193	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  00197	0f 8c 71 01 00
	00		 jl	 $LN71@familyList

; 12829: 			selFontBtnId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0019d	57		 push	 edi
  0019e	6a 0c		 push	 12			; 0000000cH
  001a0	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyListWN@@YAXXZ@4PAHA
  001a5	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001aa	83 c4 08	 add	 esp, 8
  001ad	8b f8		 mov	 edi, eax

; 12830: 
; 12831: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  001af	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001b6	0f 84 e5 01 00
	00		 je	 $LN47@familyList

; 12826: 		{
; 12827: 
; 12828: 			selBtnId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  001bc	6a 05		 push	 5
  001be	68 00 00 00 00	 push	 OFFSET ?btnId@?1??familyListWN@@YAXXZ@4PAHA
  001c3	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  001c8	83 c4 08	 add	 esp, 8

; 12832: 			{
; 12833: 				switch (selBtnId) {

  001cb	83 f8 04	 cmp	 eax, 4
  001ce	0f 87 61 01 00
	00		 ja	 $LN2@familyList
  001d4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN70@familyList[eax*4]
$LN16@familyList:

; 12834: 				case 0:
; 12835: 					windowTypeWN = -1;
; 12836: 					DeathAction(ptActMenuWin);

  001db	56		 push	 esi
  001dc	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  001e6	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001eb	83 c4 04	 add	 esp, 4

; 12837: 					ptActMenuWin = NULL;

  001ee	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001f8	5f		 pop	 edi
  001f9	5e		 pop	 esi

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  001fa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001fd	33 cd		 xor	 ecx, ebp
  001ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00204	8b e5		 mov	 esp, ebp
  00206	5d		 pop	 ebp
  00207	c3		 ret	 0
$LN17@familyList:

; 12838: 					return;
; 12839: 				case 1:
; 12840: 					prevBtn = TRUE;
; 12841: 					if (pagenum > 1) {

  00208	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pagenum@@3HA
  0020d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyListWN@@YAXXZ@4HA, 1
  00217	83 f8 01	 cmp	 eax, 1
  0021a	7e 57		 jle	 SHORT $LN32@familyList

; 12842: 						sprintf(buf, "S|F|%d|0", pagenum - 1);

  0021c	48		 dec	 eax

; 12843: 						if (bNewServer)
; 12844: 							lssproto_FM_send(sockfd, buf);

  0021d	e9 a2 00 00 00	 jmp	 $LN77@familyList
$LN24@familyList:

; 12845: 						else
; 12846: 							old_lssproto_FM_send(sockfd, buf);
; 12847: 					}
; 12848: 					else {
; 12849: 						sprintf(buf, "S|F|%d|0", (familytotal - 1) / 10 + 1);
; 12850: 						if (bNewServer)
; 12851: 							lssproto_FM_send(sockfd, buf);
; 12852: 						else
; 12853: 							old_lssproto_FM_send(sockfd, buf);
; 12854: 					}
; 12855: 					return;
; 12856: 					break;
; 12857: 				case 2:
; 12858: 					nextBtn = TRUE;
; 12859: 					if (pagenum < (familytotal - 1) / 10 + 1) {

  00222	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familytotal@@3HA
  00228	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0022d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyListWN@@YAXXZ@4HA, 1
  00237	8d 49 ff	 lea	 ecx, DWORD PTR [ecx-1]
  0023a	f7 e9		 imul	 ecx
  0023c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pagenum@@3HA
  00242	c1 fa 02	 sar	 edx, 2
  00245	8b c2		 mov	 eax, edx
  00247	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0024a	40		 inc	 eax
  0024b	03 c2		 add	 eax, edx
  0024d	3b c8		 cmp	 ecx, eax
  0024f	0f 8d 86 00 00
	00		 jge	 $LN39@familyList

; 12860: 						sprintf(buf, "S|F|%d|0", pagenum + 1);

  00255	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]

; 12861: 						if (bNewServer)
; 12862: 							lssproto_FM_send(sockfd, buf);

  00258	eb 6a		 jmp	 SHORT $LN77@familyList
$LN31@familyList:

; 12863: 						else
; 12864: 							old_lssproto_FM_send(sockfd, buf);
; 12865: 					}
; 12866: 					else {
; 12867: 						sprintf(buf, "S|F|1|0");
; 12868: 						if (bNewServer)
; 12869: 							lssproto_FM_send(sockfd, buf);
; 12870: 						else
; 12871: 							old_lssproto_FM_send(sockfd, buf);
; 12872: 					}
; 12873: 					return;
; 12874: 					break;
; 12875: 				case 3:
; 12876: 					prevBtn10 = TRUE;
; 12877: 					if (pagenum > 10) {

  0025a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pagenum@@3HA
  0025f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn10@?1??familyListWN@@YAXXZ@4HA, 1
  00269	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0026c	7e 05		 jle	 SHORT $LN32@familyList

; 12878: 						sprintf(buf, "S|F|%d|0", pagenum - 10);

  0026e	83 c0 f6	 add	 eax, -10		; fffffff6H

; 12879: 						if (bNewServer)
; 12880: 							lssproto_FM_send(sockfd, buf);

  00271	eb 51		 jmp	 SHORT $LN77@familyList
$LN32@familyList:

; 12904: 						if (bNewServer)

  00273	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familytotal@@3HA
  00279	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0027e	8d 49 ff	 lea	 ecx, DWORD PTR [ecx-1]
  00281	f7 e9		 imul	 ecx
  00283	c1 fa 02	 sar	 edx, 2
  00286	8b c2		 mov	 eax, edx
  00288	42		 inc	 edx
  00289	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0028c	03 c2		 add	 eax, edx
  0028e	eb 34		 jmp	 SHORT $LN77@familyList
$LN38@familyList:

; 12881: 						else
; 12882: 							old_lssproto_FM_send(sockfd, buf);
; 12883: 					}
; 12884: 					else {
; 12885: 						sprintf(buf, "S|F|%d|0", (familytotal - 1) / 10 + 1);
; 12886: 						if (bNewServer)
; 12887: 							lssproto_FM_send(sockfd, buf);
; 12888: 						else
; 12889: 							old_lssproto_FM_send(sockfd, buf);
; 12890: 					}
; 12891: 					return;
; 12892: 					break;
; 12893: 				case 4:
; 12894: 					nextBtn10 = TRUE;
; 12895: 					if (pagenum < (familytotal - 1) / 10 + 1 - 9) {

  00290	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familytotal@@3HA
  00296	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0029b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nextBtn10@?1??familyListWN@@YAXXZ@4HA, 1
  002a5	8d 49 ff	 lea	 ecx, DWORD PTR [ecx-1]
  002a8	f7 e9		 imul	 ecx
  002aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pagenum@@3HA
  002b0	c1 fa 02	 sar	 edx, 2
  002b3	8b c2		 mov	 eax, edx
  002b5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002b8	83 c0 f8	 add	 eax, -8			; fffffff8H
  002bb	03 c2		 add	 eax, edx
  002bd	3b c8		 cmp	 ecx, eax
  002bf	7d 1a		 jge	 SHORT $LN39@familyList

; 12896: 						sprintf(buf, "S|F|%d|0", pagenum + 10);

  002c1	8d 41 0a	 lea	 eax, DWORD PTR [ecx+10]
$LN77@familyList:

; 12904: 						if (bNewServer)

  002c4	50		 push	 eax
  002c5	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002cb	68 00 00 00 00	 push	 OFFSET ??_C@_08MNCFPICD@S?$HMF?$HM?$CFd?$HM0@
  002d0	50		 push	 eax
  002d1	e8 00 00 00 00	 call	 _sprintf
  002d6	83 c4 0c	 add	 esp, 12			; 0000000cH
  002d9	eb 14		 jmp	 SHORT $LN75@familyList
$LN39@familyList:

; 12897: 						if (bNewServer)
; 12898: 							lssproto_FM_send(sockfd, buf);
; 12899: 						else
; 12900: 							old_lssproto_FM_send(sockfd, buf);
; 12901: 					}
; 12902: 					else {
; 12903: 						sprintf(buf, "S|F|1|0");

  002db	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002e1	68 00 00 00 00	 push	 OFFSET ??_C@_07EFKFLCFA@S?$HMF?$HM1?$HM0@
  002e6	50		 push	 eax
  002e7	e8 00 00 00 00	 call	 _sprintf
  002ec	83 c4 08	 add	 esp, 8
$LN75@familyList:

; 12904: 						if (bNewServer)

  002ef	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002f6	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002fc	50		 push	 eax
  002fd	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00303	74 18		 je	 SHORT $LN43@familyList

; 12905: 							lssproto_FM_send(sockfd, buf);

  00305	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  0030a	83 c4 08	 add	 esp, 8
$LN72@familyList:
  0030d	5f		 pop	 edi
$LN71@familyList:
  0030e	5e		 pop	 esi
$LN5@familyList:

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  0030f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00312	33 cd		 xor	 ecx, ebp
  00314	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00319	8b e5		 mov	 esp, ebp
  0031b	5d		 pop	 ebp
  0031c	c3		 ret	 0
$LN43@familyList:

; 12906: 						else
; 12907: 							old_lssproto_FM_send(sockfd, buf);

  0031d	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  00322	83 c4 08	 add	 esp, 8
  00325	5f		 pop	 edi
  00326	5e		 pop	 esi

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  00327	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0032a	33 cd		 xor	 ecx, ebp
  0032c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00331	8b e5		 mov	 esp, ebp
  00333	5d		 pop	 ebp
  00334	c3		 ret	 0
$LN2@familyList:

; 12908: 					}
; 12909: 					return;
; 12910: 					break;
; 12911: 
; 12912: 				}
; 12913: 
; 12914: 				if (selFontBtnId != -1) {

  00335	83 ff ff	 cmp	 edi, -1
  00338	74 67		 je	 SHORT $LN47@familyList

; 12915: 					sprintf(buf, "S|D|%s|%d|%d",

  0033a	69 c7 18 04 00
	00		 imul	 eax, edi, 1048
  00340	8d 8d fc f9 ff
	ff		 lea	 ecx, DWORD PTR _buf2$[ebp]
  00346	ff b0 04 00 00
	00		 push	 DWORD PTR ?familyList@@3PAUTfamilyList@@A[eax+4]
  0034c	ff b0 00 00 00
	00		 push	 DWORD PTR ?familyList@@3PAUTfamilyList@@A[eax]
  00352	8d 80 08 00 00
	00		 lea	 eax, DWORD PTR ?familyList@@3PAUTfamilyList@@A[eax+8]
  00358	68 00 02 00 00	 push	 512			; 00000200H
  0035d	51		 push	 ecx
  0035e	50		 push	 eax
  0035f	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00364	83 c4 0c	 add	 esp, 12			; 0000000cH
  00367	50		 push	 eax
  00368	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0036e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LDDLKII@S?$HMD?$HM?$CFs?$HM?$CFd?$HM?$CFd@
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 _sprintf
  00379	83 c4 14	 add	 esp, 20			; 00000014H

; 12916: 						makeEscapeString(familyList[selFontBtnId].name, buf2, sizeof(buf2)),
; 12917: 						familyList[selFontBtnId].index, familyList[selFontBtnId].tempindex);
; 12918: 					if (bNewServer)

  0037c	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00382	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00389	50		 push	 eax
  0038a	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00390	74 07		 je	 SHORT $LN46@familyList

; 12919: 						lssproto_FM_send(sockfd, buf);

  00392	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
  00397	eb 05		 jmp	 SHORT $LN73@familyList
$LN46@familyList:

; 12920: 					else
; 12921: 						old_lssproto_FM_send(sockfd, buf);

  00399	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
$LN73@familyList:

; 12922: 				}
; 12923: 
; 12924: 			}
; 12925: 
; 12926: 
; 12927: 			if (mouse.state & MOUSE_LEFT_CRICK && prevBtn == TRUE)

  0039e	83 c4 08	 add	 esp, 8
$LN47@familyList:
  003a1	a1 28 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+40
  003a6	83 e0 01	 and	 eax, 1
  003a9	74 15		 je	 SHORT $LN48@familyList
  003ab	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?prevBtn@?1??familyListWN@@YAXXZ@4HA, 1
  003b2	75 0c		 jne	 SHORT $LN48@familyList

; 12928: 				prevBtn = TRUE;

  003b4	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyListWN@@YAXXZ@4HA, 1
  003be	eb 0e		 jmp	 SHORT $LN69@familyList
$LN48@familyList:

; 12929: 			else	prevBtn = FALSE;
; 12930: 			if (mouse.state & MOUSE_LEFT_CRICK && nextBtn == TRUE)

  003c0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyListWN@@YAXXZ@4HA, 0
  003ca	85 c0		 test	 eax, eax
  003cc	74 15		 je	 SHORT $LN50@familyList
$LN69@familyList:
  003ce	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nextBtn@?1??familyListWN@@YAXXZ@4HA, 1
  003d5	75 0c		 jne	 SHORT $LN50@familyList

; 12931: 				nextBtn = TRUE;

  003d7	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyListWN@@YAXXZ@4HA, 1
  003e1	eb 0e		 jmp	 SHORT $LN68@familyList
$LN50@familyList:

; 12932: 			else	nextBtn = FALSE;
; 12933: 			if (mouse.state & MOUSE_LEFT_CRICK && prevBtn10 == TRUE)

  003e3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyListWN@@YAXXZ@4HA, 0
  003ed	85 c0		 test	 eax, eax
  003ef	74 15		 je	 SHORT $LN52@familyList
$LN68@familyList:
  003f1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?prevBtn10@?1??familyListWN@@YAXXZ@4HA, 1
  003f8	75 0c		 jne	 SHORT $LN52@familyList

; 12934: 				prevBtn10 = TRUE;

  003fa	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn10@?1??familyListWN@@YAXXZ@4HA, 1
  00404	eb 0e		 jmp	 SHORT $LN67@familyList
$LN52@familyList:

; 12935: 			else	prevBtn10 = FALSE;
; 12936: 			if (mouse.state & MOUSE_LEFT_CRICK && nextBtn10 == TRUE)

  00406	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?prevBtn10@?1??familyListWN@@YAXXZ@4HA, 0
  00410	85 c0		 test	 eax, eax
  00412	74 10		 je	 SHORT $LN54@familyList
$LN67@familyList:
  00414	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nextBtn10@?1??familyListWN@@YAXXZ@4HA, 1
  0041b	75 07		 jne	 SHORT $LN54@familyList

; 12937: 				nextBtn10 = TRUE;

  0041d	b8 01 00 00 00	 mov	 eax, 1
  00422	eb 02		 jmp	 SHORT $LN55@familyList
$LN54@familyList:

; 12938: 			else	nextBtn10 = FALSE;

  00424	33 c0		 xor	 eax, eax
$LN55@familyList:

; 12939: 
; 12940: 
; 12941: 			StockFontBuffer(x + 190, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ê°ì¡±ëª©ë¡", 0);

  00426	6a 00		 push	 0
  00428	a3 00 00 00 00	 mov	 DWORD PTR ?nextBtn10@?1??familyListWN@@YAXXZ@4HA, eax
  0042d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  00432	68 00 00 00 00	 push	 OFFSET ??_C@_08MIMOGKCP@?$LA?$KB?A?$LH?$LI?q?$LH?O@
  00437	6a 00		 push	 0
  00439	83 c0 14	 add	 eax, 20			; 00000014H
  0043c	6a 01		 push	 1
  0043e	50		 push	 eax
  0043f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  00444	05 be 00 00 00	 add	 eax, 190		; 000000beH
  00449	50		 push	 eax
  0044a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12942: #ifdef _READ16BITBMP
; 12943: 			if (!g_bUseAlpha) StockDispHLine(x + 150, y + 40, 2);
; 12944: #endif
; 12945: 			btnId[0] = StockDispBuffer(x + 220, y + 350, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  0044f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  00454	6a 02		 push	 2
  00456	68 f0 65 00 00	 push	 26096			; 000065f0H
  0045b	05 5e 01 00 00	 add	 eax, 350		; 0000015eH
  00460	6a 69		 push	 105			; 00000069H
  00462	50		 push	 eax
  00463	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  00468	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  0046d	50		 push	 eax
  0046e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00473	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyListWN@@YAXXZ@4PAHA, eax

; 12946: 			btnId[1] = StockDispBuffer(x + 16 + 60, y + 8 + 60, DISP_PRIO_IME4, prevBtnGraNo[prevBtn], 2);

  00478	a1 00 00 00 00	 mov	 eax, DWORD PTR ?prevBtn@?1??familyListWN@@YAXXZ@4HA
  0047d	6a 02		 push	 2
  0047f	ff b4 85 f4 f9
	ff ff		 push	 DWORD PTR _prevBtnGraNo$[ebp+eax*4]
  00486	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  0048b	83 c0 44	 add	 eax, 68			; 00000044H
  0048e	6a 6a		 push	 106			; 0000006aH
  00490	50		 push	 eax
  00491	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  00496	83 c0 4c	 add	 eax, 76			; 0000004cH
  00499	50		 push	 eax
  0049a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0049f	83 c4 40	 add	 esp, 64			; 00000040H
  004a2	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyListWN@@YAXXZ@4PAHA+4, eax

; 12947: 			btnId[2] = StockDispBuffer(x + 16 + 210, y + 8 + 60, DISP_PRIO_IME4, nextBtnGraNo[nextBtn], 2);

  004a7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextBtn@?1??familyListWN@@YAXXZ@4HA
  004ac	6a 02		 push	 2
  004ae	ff b4 85 ec f9
	ff ff		 push	 DWORD PTR _nextBtnGraNo$[ebp+eax*4]
  004b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  004ba	83 c0 44	 add	 eax, 68			; 00000044H
  004bd	6a 6a		 push	 106			; 0000006aH
  004bf	50		 push	 eax
  004c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  004c5	05 e2 00 00 00	 add	 eax, 226		; 000000e2H
  004ca	50		 push	 eax
  004cb	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004d0	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyListWN@@YAXXZ@4PAHA+8, eax

; 12948: 			btnId[3] = StockDispBuffer(x + 16 + 20, y + 8 + 60, DISP_PRIO_IME4, prevBtnGraNo10[prevBtn10], 2);

  004d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?prevBtn10@?1??familyListWN@@YAXXZ@4HA
  004da	6a 02		 push	 2
  004dc	ff b4 85 e4 f9
	ff ff		 push	 DWORD PTR _prevBtnGraNo10$[ebp+eax*4]
  004e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  004e8	83 c0 44	 add	 eax, 68			; 00000044H
  004eb	6a 6a		 push	 106			; 0000006aH
  004ed	50		 push	 eax
  004ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  004f3	83 c0 24	 add	 eax, 36			; 00000024H
  004f6	50		 push	 eax
  004f7	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004fc	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyListWN@@YAXXZ@4PAHA+12, eax

; 12949: 			btnId[4] = StockDispBuffer(x + 16 + 250, y + 8 + 60, DISP_PRIO_IME4, nextBtnGraNo10[nextBtn10], 2);

  00501	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextBtn10@?1??familyListWN@@YAXXZ@4HA
  00506	6a 02		 push	 2
  00508	ff b4 85 dc f9
	ff ff		 push	 DWORD PTR _nextBtnGraNo10$[ebp+eax*4]
  0050f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  00514	83 c0 44	 add	 eax, 68			; 00000044H
  00517	6a 6a		 push	 106			; 0000006aH
  00519	50		 push	 eax
  0051a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  0051f	05 0a 01 00 00	 add	 eax, 266		; 0000010aH
  00524	50		 push	 eax
  00525	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 12950: 			sprintf(buf, "%3d / %3d é¡µ", pagenum, (familytotal - 1) / 10 + 1);

  0052a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familytotal@@3HA
  00530	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyListWN@@YAXXZ@4PAHA+16, eax
  00535	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0053a	8d 49 ff	 lea	 ecx, DWORD PTR [ecx-1]
  0053d	f7 e9		 imul	 ecx
  0053f	c1 fa 02	 sar	 edx, 2
  00542	8b c2		 mov	 eax, edx
  00544	42		 inc	 edx
  00545	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00548	03 c2		 add	 eax, edx
  0054a	50		 push	 eax
  0054b	ff 35 00 00 00
	00		 push	 DWORD PTR ?pagenum@@3HA
  00551	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00557	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GFBBINPB@?$CF3d?5?1?5?$CF3d?5?$DP@
  0055c	50		 push	 eax
  0055d	e8 00 00 00 00	 call	 _sprintf
  00562	83 c4 4c	 add	 esp, 76			; 0000004cH

; 12951: 			StockFontBuffer(x + 100, y + 60, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  00565	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0056b	6a 00		 push	 0
  0056d	50		 push	 eax
  0056e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  00573	6a 00		 push	 0
  00575	83 c0 3c	 add	 eax, 60			; 0000003cH
  00578	6a 01		 push	 1
  0057a	50		 push	 eax
  0057b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  00580	83 c0 64	 add	 eax, 100		; 00000064H
  00583	50		 push	 eax
  00584	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12952: 
; 12953: 
; 12954: 			sprintf(buf, "%-4s %-16s %-16s %6s %10s", "", "[ë¶ ì¡± ì´ ë¦]", "[ì¡±  ì¥]", "[ì¸ì]", "[ê°ì¡±ëªì±]");

  00589	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FHLFAEOJ@?$FL?$LA?$KB?A?$LH?$LI?m?$LM?$LK?$FN@
  0058e	68 00 00 00 00	 push	 OFFSET ??_C@_06PFFPIKHP@?$FL?$MA?N?$LP?x?$FN@
  00593	68 00 00 00 00	 push	 OFFSET ??_C@_08KKDDPHBL@?$FL?A?$LH?5?5?$MA?e?$FN@
  00598	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MGCOJGNL@?$FL?$LK?N?5?A?$LH?5?$MA?L?5?$LI?$KH?$FN@
  0059d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  005a2	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  005a8	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DBLHNEOK@?$CF?94s?5?$CF?916s?5?$CF?916s?5?$CF6s?5?$CF10s@
  005ad	50		 push	 eax
  005ae	e8 00 00 00 00	 call	 _sprintf

; 12955: 			StockFontBuffer(x + 25, y + 90, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  005b3	6a 00		 push	 0
  005b5	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  005bb	50		 push	 eax
  005bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  005c1	6a 00		 push	 0
  005c3	83 c0 5a	 add	 eax, 90			; 0000005aH
  005c6	6a 01		 push	 1
  005c8	50		 push	 eax
  005c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  005ce	83 c0 19	 add	 eax, 25			; 00000019H
  005d1	50		 push	 eax
  005d2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12956: 
; 12957: 
; 12958: 			for (i = 0; i < 10; i++) {

  005d7	33 c9		 xor	 ecx, ecx
  005d9	83 c4 4c	 add	 esp, 76			; 0000004cH
  005dc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyListWN@@YAXXZ@4HA, ecx
  005e2	33 ff		 xor	 edi, edi
  005e4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL6@familyList:

; 12959: 				if (familyList[i].name[0] == NULL)	break;

  005f0	69 c9 18 04 00
	00		 imul	 ecx, ecx, 1048
  005f6	80 b9 08 00 00
	00 00		 cmp	 BYTE PTR ?familyList@@3PAUTfamilyList@@A[ecx+8], 0
  005fd	8d b1 08 00 00
	00		 lea	 esi, DWORD PTR ?familyList@@3PAUTfamilyList@@A[ecx+8]
  00603	0f 84 04 fd ff
	ff		 je	 $LN72@familyList

; 12960: 				sprintf(buf, "%4d: %-16s %-16s %6d %10d", (pagenum - 1) * 10 + 1 + i, familyList[i].name, familyList[i].leadername,

  00609	b8 1f 85 eb 51	 mov	 eax, 1374389535		; 51eb851fH
  0060e	f7 a9 0c 04 00
	00		 imul	 DWORD PTR ?familyList@@3PAUTfamilyList@@A[ecx+1036]
  00614	c1 fa 05	 sar	 edx, 5
  00617	8b c2		 mov	 eax, edx
  00619	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0061c	03 c2		 add	 eax, edx
  0061e	50		 push	 eax
  0061f	ff b1 08 04 00
	00		 push	 DWORD PTR ?familyList@@3PAUTfamilyList@@A[ecx+1032]
  00625	8d 81 08 02 00
	00		 lea	 eax, DWORD PTR ?familyList@@3PAUTfamilyList@@A[ecx+520]
  0062b	50		 push	 eax
  0062c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pagenum@@3HA
  00631	56		 push	 esi
  00632	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00635	8d 04 45 f7 ff
	ff ff		 lea	 eax, DWORD PTR [eax*2-9]
  0063c	03 c7		 add	 eax, edi
  0063e	50		 push	 eax
  0063f	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00645	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@IAGNODKB@?$CF4d?3?5?$CF?916s?5?$CF?916s?5?$CF6d?5?$CF10d@
  0064a	50		 push	 eax
  0064b	e8 00 00 00 00	 call	 _sprintf

; 12961: 					familyList[i].popu, (familyList[i].DP / 100));
; 12962: 				if (familyList[i].acceptflag != 1)	j = FONT_PAL_AQUA;

  00650	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?i@?1??familyListWN@@YAXXZ@4HA
  00656	83 c4 1c	 add	 esp, 28			; 0000001cH
  00659	69 c1 18 04 00
	00		 imul	 eax, ecx, 1048
  0065f	83 b8 14 04 00
	00 01		 cmp	 DWORD PTR ?familyList@@3PAUTfamilyList@@A[eax+1044], 1
  00666	74 07		 je	 SHORT $LN57@familyList
  00668	b8 01 00 00 00	 mov	 eax, 1
  0066d	eb 0e		 jmp	 SHORT $LN74@familyList
$LN57@familyList:

; 12963: 				else if (familyList[i].setupflag != 1)	j = FONT_PAL_GREEN;

  0066f	8b 80 10 04 00
	00		 mov	 eax, DWORD PTR ?familyList@@3PAUTfamilyList@@A[eax+1040]
  00675	48		 dec	 eax
  00676	f7 d8		 neg	 eax
  00678	1b c0		 sbb	 eax, eax
  0067a	83 e0 05	 and	 eax, 5
$LN74@familyList:

; 12964: 				else	j = FONT_PAL_WHITE;
; 12965: 				fontId[i] = StockFontBuffer(x + 15, y + 110 + (i * 20), FONT_PRIO_FRONT, j, buf, 2);

  0067d	6a 02		 push	 2
  0067f	a3 00 00 00 00	 mov	 DWORD PTR ?j@?1??familyListWN@@YAXXZ@4HA, eax
  00684	8d 95 fc fb ff
	ff		 lea	 edx, DWORD PTR _buf$[ebp]
  0068a	52		 push	 edx
  0068b	50		 push	 eax
  0068c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyListWN@@YAXXZ@4HA
  00691	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  00694	6a 01		 push	 1
  00696	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00699	83 c0 6e	 add	 eax, 110		; 0000006eH
  0069c	50		 push	 eax
  0069d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyListWN@@YAXXZ@4HA
  006a2	83 c0 0f	 add	 eax, 15			; 0000000fH
  006a5	50		 push	 eax
  006a6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  006ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?i@?1??familyListWN@@YAXXZ@4HA
  006b1	83 c4 18	 add	 esp, 24			; 00000018H
  006b4	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??familyListWN@@YAXXZ@4PAHA[ecx*4], eax
  006bb	41		 inc	 ecx
  006bc	89 0d 00 00 00
	00		 mov	 DWORD PTR ?i@?1??familyListWN@@YAXXZ@4HA, ecx
  006c2	8b f9		 mov	 edi, ecx
  006c4	83 f9 0a	 cmp	 ecx, 10			; 0000000aH
  006c7	0f 8c 23 ff ff
	ff		 jl	 $LL6@familyList
  006cd	5f		 pop	 edi
  006ce	5e		 pop	 esi

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  006cf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006d2	33 cd		 xor	 ecx, ebp
  006d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006d9	8b e5		 mov	 esp, ebp
  006db	5d		 pop	 ebp
  006dc	c3		 ret	 0
$LN8@familyList:

; 12788: 		)
; 12789: 	{
; 12790: 		closeFamilyList();

  006dd	e8 00 00 00 00	 call	 ?closeFamilyList@@YAXXZ	; closeFamilyList

; 12966: 
; 12967: 			}
; 12968: 
; 12969: 		}
; 12970: 	}
; 12971: 
; 12972: }

  006e2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006e5	33 cd		 xor	 ecx, ebp
  006e7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006ec	8b e5		 mov	 esp, ebp
  006ee	5d		 pop	 ebp
  006ef	c3		 ret	 0
$LN70@familyList:
  006f0	00 00 00 00	 DD	 $LN16@familyList
  006f4	00 00 00 00	 DD	 $LN17@familyList
  006f8	00 00 00 00	 DD	 $LN24@familyList
  006fc	00 00 00 00	 DD	 $LN31@familyList
  00700	00 00 00 00	 DD	 $LN38@familyList
?familyListWN@@YAXXZ ENDP				; familyListWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyList@@YAXPAD@Z
_TEXT	SEGMENT
_i$1$ = -152						; size = 4
_familybuf$ = -148					; size = 128
_ibuf$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initFamilyList@@YAXPAD@Z PROC				; initFamilyList, COMDAT

; 12692: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 12693: 	int i = 0, j = 0;
; 12694: 	char familybuf[128];
; 12695: 	char ibuf[16];
; 12696: 
; 12697: 	familyListProcNo = 1;
; 12698: 
; 12699: 	if (windowTypeWN != WINDOW_MESSAGETYPE_FAMILYJOIN)

  00013	83 3d 00 00 00
	00 0f		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 15 ; windowTypeWN, 0000000fH
  0001a	b8 01 00 00 00	 mov	 eax, 1
  0001f	53		 push	 ebx
  00020	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]
  00023	66 a3 00 00 00
	00		 mov	 WORD PTR ?familyListProcNo@@3FA, ax
  00029	74 22		 je	 SHORT $LN8@initFamily

; 12700: 	{
; 12701: 		windowTypeWN = WINDOW_MESSAGETYPE_FAMILYJOIN;
; 12702: 		DeathAction(ptActMenuWin);

  0002b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00031	c7 05 00 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?windowTypeWN@@3HA, 15 ; windowTypeWN, 0000000fH
  0003b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00040	83 c4 04	 add	 esp, 4

; 12703: 		ptActMenuWin = NULL;

  00043	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN8@initFamily:

; 12704: 	}
; 12705: 
; 12706: 	for (i = 0; i < 10; i++)
; 12707: 	{
; 12708: 		familyList[i].index = -1;

  0004d	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A, -1

; 12709: 		familyList[i].name[0] = NULL;
; 12710: 		familyList[i].leadername[0] = NULL;
; 12711: 		familyList[i].popu = 0;
; 12712: 		familyList[i].DP = 0;
; 12713: 		familyList[i].tempindex = -1;
; 12714: 		familyList[i].setupflag = 0;
; 12715: 		familyList[i].acceptflag = 0;
; 12716: 	}
; 12717: 
; 12718: 	getStringToken(data, '|', 3, sizeof(ibuf) - 1, ibuf);

  00057	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0005a	c6 05 08 00 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+8, 0
  00061	c6 05 08 02 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+520, 0
  00068	c7 05 08 04 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1032, 0
  00072	c7 05 0c 04 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1036, 0
  0007c	c7 05 04 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4, -1
  00086	c7 05 10 04 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1040, 0
  00090	c7 05 14 04 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1044, 0
  0009a	c7 05 18 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1048, -1
  000a4	c6 05 20 04 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+1056, 0
  000ab	c6 05 20 06 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+1568, 0
  000b2	c7 05 20 08 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2080, 0
  000bc	c7 05 24 08 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2084, 0
  000c6	c7 05 1c 04 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+1052, -1
  000d0	c7 05 28 08 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2088, 0
  000da	c7 05 2c 08 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2092, 0
  000e4	c7 05 30 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2096, -1
  000ee	c6 05 38 08 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+2104, 0
  000f5	c6 05 38 0a 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+2616, 0
  000fc	c7 05 38 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3128, 0
  00106	c7 05 3c 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3132, 0
  00110	c7 05 34 08 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+2100, -1
  0011a	c7 05 40 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3136, 0
  00124	c7 05 44 0c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3140, 0
  0012e	c7 05 48 0c 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3144, -1
  00138	c6 05 50 0c 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+3152, 0
  0013f	c6 05 50 0e 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+3664, 0
  00146	c7 05 50 10 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4176, 0
  00150	c7 05 54 10 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4180, 0
  0015a	c7 05 4c 0c 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+3148, -1
  00164	c7 05 58 10 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4184, 0
  0016e	c7 05 5c 10 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4188, 0
  00178	c7 05 60 10 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4192, -1
  00182	c6 05 68 10 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+4200, 0
  00189	c6 05 68 12 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+4712, 0
  00190	c7 05 68 14 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5224, 0
  0019a	c7 05 6c 14 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5228, 0
  001a4	c7 05 64 10 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+4196, -1
  001ae	c7 05 70 14 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5232, 0
  001b8	c7 05 74 14 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5236, 0
  001c2	c7 05 78 14 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5240, -1
  001cc	c6 05 80 14 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+5248, 0
  001d3	c6 05 80 16 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+5760, 0
  001da	c7 05 80 18 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6272, 0
  001e4	c7 05 84 18 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6276, 0
  001ee	c7 05 7c 14 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+5244, -1
  001f8	c7 05 88 18 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6280, 0
  00202	c7 05 8c 18 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6284, 0
  0020c	c7 05 90 18 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6288, -1
  00216	c6 05 98 18 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+6296, 0
  0021d	c6 05 98 1a 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+6808, 0
  00224	c7 05 98 1c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7320, 0
  0022e	c7 05 9c 1c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7324, 0
  00238	c7 05 94 18 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+6292, -1
  00242	c7 05 a0 1c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7328, 0
  0024c	c7 05 a4 1c 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7332, 0
  00256	c7 05 a8 1c 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7336, -1
  00260	c6 05 b0 1c 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+7344, 0
  00267	c6 05 b0 1e 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+7856, 0
  0026e	c7 05 b0 20 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8368, 0
  00278	c7 05 b4 20 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8372, 0
  00282	c7 05 ac 1c 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+7340, -1
  0028c	c7 05 b8 20 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8376, 0
  00296	c7 05 bc 20 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8380, 0
  002a0	c7 05 c0 20 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8384, -1
  002aa	c6 05 c8 20 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+8392, 0
  002b1	c6 05 c8 22 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+8904, 0
  002b8	c7 05 c8 24 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9416, 0
  002c2	c7 05 cc 24 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9420, 0
  002cc	c7 05 c4 20 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+8388, -1
  002d6	c7 05 d0 24 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9424, 0
  002e0	c7 05 d4 24 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9428, 0
  002ea	c7 05 d8 24 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9432, -1
  002f4	c6 05 e0 24 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+9440, 0
  002fb	c6 05 e0 26 00
	00 00		 mov	 BYTE PTR ?familyList@@3PAUTfamilyList@@A+9952, 0
  00302	c7 05 e0 28 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+10464, 0
  0030c	c7 05 e4 28 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+10468, 0
  00316	c7 05 dc 24 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+9436, -1
  00320	c7 05 e8 28 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+10472, 0
  0032a	c7 05 ec 28 00
	00 00 00 00 00	 mov	 DWORD PTR ?familyList@@3PAUTfamilyList@@A+10476, 0
  00334	50		 push	 eax
  00335	6a 0f		 push	 15			; 0000000fH
  00337	6a 03		 push	 3
  00339	6a 7c		 push	 124			; 0000007cH
  0033b	53		 push	 ebx
  0033c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12719: 	familytotal = atoi(ibuf);

  00341	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00344	50		 push	 eax
  00345	e8 00 00 00 00	 call	 _atoi
  0034a	a3 00 00 00 00	 mov	 DWORD PTR ?familytotal@@3HA, eax

; 12720: 	getStringToken(data, '|', 4, sizeof(ibuf) - 1, ibuf);

  0034f	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00352	50		 push	 eax
  00353	6a 0f		 push	 15			; 0000000fH
  00355	6a 04		 push	 4
  00357	6a 7c		 push	 124			; 0000007cH
  00359	53		 push	 ebx
  0035a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12721: 	pagenum = atoi(ibuf);

  0035f	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00362	50		 push	 eax
  00363	e8 00 00 00 00	 call	 _atoi
  00368	a3 00 00 00 00	 mov	 DWORD PTR ?pagenum@@3HA, eax

; 12722: 	//makeStringFromEscaped( pagenum );
; 12723: 	getStringToken(data, '|', 5, sizeof(ibuf) - 1, ibuf);

  0036d	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00370	50		 push	 eax
  00371	6a 0f		 push	 15			; 0000000fH
  00373	6a 05		 push	 5
  00375	6a 7c		 push	 124			; 0000007cH
  00377	53		 push	 ebx
  00378	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0037d	83 c4 44	 add	 esp, 68			; 00000044H

; 12724: 	familynum = atoi(ibuf);

  00380	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00383	50		 push	 eax
  00384	e8 00 00 00 00	 call	 _atoi

; 12725: 	//makeStringFromEscaped( familynum );
; 12726: 
; 12727: 
; 12728: 	for (i = 0; i < familynum; i++)

  00389	33 c9		 xor	 ecx, ecx
  0038b	a3 00 00 00 00	 mov	 DWORD PTR ?familynum@@3HA, eax
  00390	83 c4 04	 add	 esp, 4
  00393	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00399	85 c0		 test	 eax, eax
  0039b	0f 8e 67 01 00
	00		 jle	 $LN6@initFamily

; 12704: 	}
; 12705: 
; 12706: 	for (i = 0; i < 10; i++)
; 12707: 	{
; 12708: 		familyList[i].index = -1;

  003a1	56		 push	 esi
  003a2	57		 push	 edi
  003a3	bf 08 00 00 00	 mov	 edi, OFFSET ?familyList@@3PAUTfamilyList@@A+8
  003a8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL7@initFamily:

; 12729: 	{
; 12730: 		getStringToken(data, '|', 6 + i, sizeof(familybuf) - 1, familybuf);

  003b0	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  003b6	50		 push	 eax
  003b7	6a 7f		 push	 127			; 0000007fH
  003b9	8d 41 06	 lea	 eax, DWORD PTR [ecx+6]
  003bc	50		 push	 eax
  003bd	6a 7c		 push	 124			; 0000007cH
  003bf	53		 push	 ebx
  003c0	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12731: 
; 12732: 
; 12733: 		getStringToken(familybuf, ' ', 1, sizeof(ibuf) - 1, ibuf);

  003c5	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  003c8	50		 push	 eax
  003c9	6a 0f		 push	 15			; 0000000fH
  003cb	6a 01		 push	 1
  003cd	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  003d3	6a 20		 push	 32			; 00000020H
  003d5	50		 push	 eax
  003d6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12734: 		familyList[i].index = atoi(ibuf);

  003db	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  003de	50		 push	 eax
  003df	e8 00 00 00 00	 call	 _atoi

; 12735: 
; 12736: 		getStringToken(familybuf, ' ', 2, sizeof(familyList[i].name) - 1, familyList[i].name);

  003e4	57		 push	 edi
  003e5	68 ff 01 00 00	 push	 511			; 000001ffH
  003ea	6a 02		 push	 2
  003ec	89 47 f8	 mov	 DWORD PTR [edi-8], eax
  003ef	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  003f5	6a 20		 push	 32			; 00000020H
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  003fd	83 c4 40	 add	 esp, 64			; 00000040H

; 12737: 		makeStringFromEscaped(familyList[i].name);

  00400	57		 push	 edi
  00401	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12738: 
; 12739: 		getStringToken(familybuf, ' ', 3, sizeof(familyList[i].leadername) - 1, familyList[i].leadername);

  00406	8d b7 00 02 00
	00		 lea	 esi, DWORD PTR [edi+512]
  0040c	56		 push	 esi
  0040d	68 ff 01 00 00	 push	 511			; 000001ffH
  00412	6a 03		 push	 3
  00414	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  0041a	6a 20		 push	 32			; 00000020H
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12740: 		makeStringFromEscaped(familyList[i].leadername);

  00422	56		 push	 esi
  00423	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12741: 
; 12742: 		getStringToken(familybuf, ' ', 5, sizeof(ibuf) - 1, ibuf);

  00428	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0042b	50		 push	 eax
  0042c	6a 0f		 push	 15			; 0000000fH
  0042e	6a 05		 push	 5
  00430	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  00436	6a 20		 push	 32			; 00000020H
  00438	50		 push	 eax
  00439	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12743: 		familyList[i].popu = atoi(ibuf);

  0043e	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00441	50		 push	 eax
  00442	e8 00 00 00 00	 call	 _atoi
  00447	89 87 00 04 00
	00		 mov	 DWORD PTR [edi+1024], eax

; 12744: 
; 12745: 		getStringToken(familybuf, ' ', 4, sizeof(ibuf) - 1, ibuf);

  0044d	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00450	50		 push	 eax
  00451	6a 0f		 push	 15			; 0000000fH
  00453	6a 04		 push	 4
  00455	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  0045b	6a 20		 push	 32			; 00000020H
  0045d	50		 push	 eax
  0045e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00463	83 c4 48	 add	 esp, 72			; 00000048H

; 12746: 		familyList[i].DP = atoi(ibuf);

  00466	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00469	50		 push	 eax
  0046a	e8 00 00 00 00	 call	 _atoi
  0046f	89 87 04 04 00
	00		 mov	 DWORD PTR [edi+1028], eax

; 12747: 
; 12748: 		getStringToken(familybuf, ' ', 6, sizeof(ibuf) - 1, ibuf);

  00475	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  00478	50		 push	 eax
  00479	6a 0f		 push	 15			; 0000000fH
  0047b	6a 06		 push	 6
  0047d	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  00483	6a 20		 push	 32			; 00000020H
  00485	50		 push	 eax
  00486	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12749: 		familyList[i].tempindex = atoi(ibuf);

  0048b	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0048e	50		 push	 eax
  0048f	e8 00 00 00 00	 call	 _atoi
  00494	89 47 fc	 mov	 DWORD PTR [edi-4], eax

; 12750: 
; 12751: 		getStringToken(familybuf, ' ', 7, sizeof(ibuf) - 1, ibuf);

  00497	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  0049a	50		 push	 eax
  0049b	6a 0f		 push	 15			; 0000000fH
  0049d	6a 07		 push	 7
  0049f	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  004a5	6a 20		 push	 32			; 00000020H
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 12752: 		familyList[i].setupflag = atoi(ibuf);

  004ad	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  004b0	50		 push	 eax
  004b1	e8 00 00 00 00	 call	 _atoi
  004b6	89 87 08 04 00
	00		 mov	 DWORD PTR [edi+1032], eax

; 12753: 
; 12754: 		getStringToken(familybuf, ' ', 8, sizeof(ibuf) - 1, ibuf);

  004bc	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  004bf	50		 push	 eax
  004c0	6a 0f		 push	 15			; 0000000fH
  004c2	6a 08		 push	 8
  004c4	8d 85 6c ff ff
	ff		 lea	 eax, DWORD PTR _familybuf$[ebp]
  004ca	6a 20		 push	 32			; 00000020H
  004cc	50		 push	 eax
  004cd	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  004d2	83 c4 48	 add	 esp, 72			; 00000048H

; 12755: 		familyList[i].acceptflag = atoi(ibuf);

  004d5	8d 45 ec	 lea	 eax, DWORD PTR _ibuf$[ebp]
  004d8	50		 push	 eax
  004d9	e8 00 00 00 00	 call	 _atoi
  004de	8b 8d 68 ff ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  004e4	83 c4 04	 add	 esp, 4
  004e7	41		 inc	 ecx
  004e8	89 87 0c 04 00
	00		 mov	 DWORD PTR [edi+1036], eax
  004ee	81 c7 18 04 00
	00		 add	 edi, 1048		; 00000418H
  004f4	89 8d 68 ff ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  004fa	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?familynum@@3HA
  00500	0f 8c aa fe ff
	ff		 jl	 $LL7@initFamily
  00506	5f		 pop	 edi
  00507	5e		 pop	 esi
$LN6@initFamily:

; 12756: 
; 12757: 	}
; 12758: 
; 12759: }

  00508	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0050b	33 cd		 xor	 ecx, ebp
  0050d	5b		 pop	 ebx
  0050e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00513	8b e5		 mov	 esp, ebp
  00515	5d		 pop	 ebp
  00516	c3		 ret	 0
?initFamilyList@@YAXPAD@Z ENDP				; initFamilyList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?familyAddWN@@YAXXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -3092					; size = 8
_prevBtnGraNo$ = -3084					; size = 8
_buf2$ = -3076						; size = 1024
_buf3$ = -2052						; size = 1024
_buf$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?familyAddWN@@YAXXZ PROC				; familyAddWN, COMDAT

; 12188: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 0c 00
	00		 sub	 esp, 3092		; 00000c14H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 12189: 	static int x = 0, y = 0, w = 0, h = 0;
; 12190: 	static int btnId[5];
; 12191: #ifdef _NB_FAMILYBADGE
; 12192: 	static int fontId[5];
; 12193: #else
; 12194: 	static int fontId[6];
; 12195: #endif
; 12196: 	static int prevBtn = 0, nextBtn = 0;
; 12197: 	static int Inputforce = 0;
; 12198: #ifdef _NB_FAMILYBADGE
; 12199: 	static int å¾½ç« çªå£;
; 12200: 	static int å¾½ç« ç´¢å¼;
; 12201: 	static int å¾½ç« æ»é¡µæ° = (å¾½ç« ä¸ªæ°) % 12 ? (å¾½ç« ä¸ªæ°) / 12 + 1 : (å¾½ç« ä¸ªæ°) / 12;
; 12202: 	static int å¾½ç« å½åé¡µ;
; 12203: #endif
; 12204: 	char buf[1024], buf2[1024], buf3[1024];
; 12205: 
; 12206: 	int selBtnId;
; 12207: 	int selFontBtnId;
; 12208: 	int i;
; 12209: 	int ret = 0;
; 12210: 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };

  00015	c7 85 f4 f3 ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  0001f	c7 85 f8 f3 ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H

; 12211: 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };

  00029	c7 85 ec f3 ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00033	c7 85 f0 f3 ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H

; 12212: 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 12213: 
; 12214: 
; 12215: 	if (CheckMenuFlag()
; 12216: 		|| joy_trg[0] & JOY_ESC
; 12217: 		|| actBtn == 1
; 12218: 		|| menuBtn == 1
; 12219: 		|| disconnectServerFlag == TRUE
; 12220: 		|| wnCloseFlag == 1)

  0003d	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00042	85 c0		 test	 eax, eax
  00044	0f 85 f2 02 00
	00		 jne	 $LN17@familyAddW
  0004a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00054	0f 85 e2 02 00
	00		 jne	 $LN17@familyAddW
  0005a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00062	0f 84 d4 02 00
	00		 je	 $LN17@familyAddW
  00068	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00070	0f 84 c6 02 00
	00		 je	 $LN17@familyAddW
  00076	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0007d	0f 84 b9 02 00
	00		 je	 $LN17@familyAddW
  00083	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0008b	0f 84 ab 02 00
	00		 je	 $LN17@familyAddW

; 12223: 		return;
; 12224: 	}
; 12225: 
; 12226: 	if (ptActMenuWin == NULL) {

  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00096	85 c0		 test	 eax, eax
  00098	0f 85 33 01 00
	00		 jne	 $LN18@familyAddW

; 12227: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 12228: 			btnId[i] = -2;
; 12229: 		}
; 12230: #ifdef _NB_FAMILYBADGE
; 12231: 		å¾½ç« çªå£ = FALSE;
; 12232: 		å¾½ç« ç´¢å¼ = -1;
; 12233: 		å¾½ç« å½åé¡µ = 0;
; 12234: #endif
; 12235: 
; 12236: 		w = 571; h = 295;
; 12237: 		x = (lpDraw->xSize - w) / 2;

  0009e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  000a4	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  000ab	a3 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA, eax
  000b0	a3 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?îñ?@?1??familyAddWN@@YAXXZ@4HA, eax
  000b5	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA, xmm0
  000bc	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000c6	8b 81 84 00 00
	00		 mov	 eax, DWORD PTR [ecx+132]
  000cc	2d 3b 02 00 00	 sub	 eax, 571		; 0000023bH
  000d1	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA, -1
  000db	99		 cdq
  000dc	2b c2		 sub	 eax, edx
  000de	c7 05 00 00 00
	00 3b 02 00 00	 mov	 DWORD PTR ?w@?1??familyAddWN@@YAXXZ@4HA, 571 ; 0000023bH
  000e8	8b f0		 mov	 esi, eax
  000ea	c7 05 00 00 00
	00 27 01 00 00	 mov	 DWORD PTR ?h@?1??familyAddWN@@YAXXZ@4HA, 295 ; 00000127H

; 12238: 		y = (lpDraw->ySize - h) / 2;

  000f4	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR [ecx+136]
  000fa	2d 27 01 00 00	 sub	 eax, 295		; 00000127H
  000ff	d1 fe		 sar	 esi, 1
  00101	99		 cdq
  00102	2b c2		 sub	 eax, edx
  00104	89 35 00 00 00
	00		 mov	 DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA, esi
  0010a	8b c8		 mov	 ecx, eax

; 12239: 
; 12240: 		Inputforce = 0;

  0010c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Inputforce@?1??familyAddWN@@YAXXZ@4HA, 0
  00116	d1 f9		 sar	 ecx, 1

; 12241: 		familyRuleInput.buffer[0] = NULL;
; 12242: 		familyRuleInput.cnt = 0;
; 12243: 		familyRuleInput.cursor = 0;
; 12244: 		familyRuleInput.len = 114;
; 12245: 		familyRuleInput.lineLen = 38;
; 12246: 		familyRuleInput.lineDist = 30;
; 12247: 		familyRuleInput.color = 0;

  00118	8d 46 52	 lea	 eax, DWORD PTR [esi+82]

; 12248: #ifdef _NB_FAMILYBADGE
; 12249: 		familyRuleInput.x = x + 82;
; 12250: 		familyRuleInput.y = y + 160;
; 12251: #else
; 12252: 		familyRuleInput.x = x + 20;
; 12253: 		familyRuleInput.y = y + 130;
; 12254: #endif
; 12255: 		familyRuleInput.fontPrio = FONT_PRIO_FRONT;
; 12256: 
; 12257: 		familyNameInput.buffer[0] = NULL;
; 12258: 		familyNameInput.cnt = 0;
; 12259: 		familyNameInput.cursor = 0;
; 12260: 		familyNameInput.len = 16;
; 12261: 		familyNameInput.color = 0;
; 12262: 		familyNameInput.x = x + 1000;
; 12263: 		familyNameInput.y = y + 40;
; 12264: 		familyNameInput.fontPrio = FONT_PRIO_FRONT;
; 12265: 
; 12266: 
; 12267: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  0011b	6a ff		 push	 -1
  0011d	a3 0c 01 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+268, eax
  00122	6a 00		 push	 0
  00124	8d 81 a0 00 00
	00		 lea	 eax, DWORD PTR [ecx+160]
  0012a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA, ecx
  00130	68 27 01 00 00	 push	 295			; 00000127H
  00135	a3 10 01 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+272, eax
  0013a	8d 86 e8 03 00
	00		 lea	 eax, DWORD PTR [esi+1000]
  00140	68 3b 02 00 00	 push	 571			; 0000023bH
  00145	a3 0c 01 00 00	 mov	 DWORD PTR ?familyNameInput@@3USTR_BUFFER@@A+268, eax
  0014a	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  0014d	51		 push	 ecx
  0014e	56		 push	 esi
  0014f	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?familyRuleInput@@3USTR_BUFFER@@A, 0
  00156	c7 05 06 01 00
	00 1e 00 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+262, 30 ; 0000001eH
  00160	66 c7 05 04 01
	00 00 72 26	 mov	 WORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+260, 9842 ; 00002672H
  00169	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+284, 1
  00173	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?familyNameInput@@3USTR_BUFFER@@A, 0
  0017a	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?familyNameInput@@3USTR_BUFFER@@A+263, 0
  00183	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?familyNameInput@@3USTR_BUFFER@@A+265, 0
  0018a	c6 05 04 01 00
	00 10		 mov	 BYTE PTR ?familyNameInput@@3USTR_BUFFER@@A+260, 16 ; 00000010H
  00191	a3 10 01 00 00	 mov	 DWORD PTR ?familyNameInput@@3USTR_BUFFER@@A+272, eax
  00196	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?familyNameInput@@3USTR_BUFFER@@A+284, 1
  001a0	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 12268: 
; 12269: 		play_se(202, 320, 240);

  001a5	68 f0 00 00 00	 push	 240			; 000000f0H
  001aa	68 40 01 00 00	 push	 320			; 00000140H
  001af	68 ca 00 00 00	 push	 202			; 000000caH
  001b4	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  001b9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001be	83 c4 24	 add	 esp, 36			; 00000024H
  001c1	5f		 pop	 edi

; 12486: 
; 12487: 	}
; 12488: 
; 12489: }

  001c2	5e		 pop	 esi
  001c3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001c6	33 cd		 xor	 ecx, ebp
  001c8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001cd	8b e5		 mov	 esp, ebp
  001cf	5d		 pop	 ebp
  001d0	c3		 ret	 0
$LN18@familyAddW:

; 12270: 
; 12271: 	}
; 12272: 	else if (ptActMenuWin->hp >= 1) {

  001d1	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001d5	0f 8c 66 01 00
	00		 jl	 $LN20@familyAddW

; 12274: 		selFontBtnId = selFontId(fontId, sizeof(fontId) / sizeof(int));

  001db	6a 05		 push	 5
  001dd	68 00 00 00 00	 push	 OFFSET ?fontId@?1??familyAddWN@@YAXXZ@4PAHA
  001e2	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001e7	83 c4 08	 add	 esp, 8
  001ea	8b f0		 mov	 esi, eax

; 12275: 		if (mouse.onceState & MOUSE_LEFT_CRICK) {

  001ec	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001f3	0f 84 58 02 00
	00		 je	 $LN102@familyAddW

; 12273: 		selBtnId = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  001f9	6a 05		 push	 5
  001fb	68 00 00 00 00	 push	 OFFSET ?btnId@?1??familyAddWN@@YAXXZ@4PAHA
  00200	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  00205	83 c4 08	 add	 esp, 8

; 12276: 			switch (selBtnId) {

  00208	83 f8 03	 cmp	 eax, 3
  0020b	0f 87 09 02 00
	00		 ja	 $LN99@familyAddW
  00211	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN98@familyAddW[eax*4]
$LN22@familyAddW:

; 12277: 			case 0:
; 12278: #ifdef _NB_FAMILYBADGE
; 12279: 				if (å¾½ç« ç´¢å¼ == -1) {

  00218	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA, -1
  0021f	75 16		 jne	 SHORT $LN23@familyAddW

; 12280: 					StockChatBufferLine("ê°ë¬¸ì ì ííì¸ìï¼", FONT_PAL_WHITE);

  00221	6a 00		 push	 0
  00223	6a 00		 push	 0
  00225	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NKOCMFMN@?$LA?$KB?$LJ?$KO?$MA?$LL?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
  0022a	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  0022f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 12281: 					break;

  00232	e9 e3 01 00 00	 jmp	 $LN99@familyAddW
$LN23@familyAddW:

; 12282: 				}
; 12283: #endif
; 12284: 				if (!familyNameInput.buffer[0]) {

  00237	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyNameInput@@3USTR_BUFFER@@A, 0
  0023e	75 16		 jne	 SHORT $LN24@familyAddW

; 12285: 					StockChatBufferLine("ë¶ì¡±ì´ë¦ì ìë ¥íì¸ìï¼", FONT_PAL_WHITE);

  00240	6a 00		 push	 0
  00242	6a 00		 push	 0
  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IDKIBNJL@?$LK?N?A?$LH?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
  00249	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  0024e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 12286: 					break;

  00251	e9 c4 01 00 00	 jmp	 $LN99@familyAddW
$LN24@familyAddW:

; 12287: 				}
; 12288: 				if (!familyRuleInput.buffer[0]) {

  00256	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyRuleInput@@3USTR_BUFFER@@A, 0
  0025d	75 16		 jne	 SHORT $LN25@familyAddW

; 12289: 					StockChatBufferLine("ê°ì¡± ì ëª©ì ìë ¥íì¸ìï¼", FONT_PAL_WHITE);

  0025f	6a 00		 push	 0
  00261	6a 00		 push	 0
  00263	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@BIHHOJEL@?$LA?$KB?A?$LH?5?A?$KG?$LI?q?$MA?$LL?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
  00268	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  0026d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 12290: 					break;

  00270	e9 a5 01 00 00	 jmp	 $LN99@familyAddW
$LN25@familyAddW:

; 12291: 				}
; 12292: 				if (familyElf == 2) {

  00275	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?familyElf@@3HA, 2 ; familyElf
  0027c	75 16		 jne	 SHORT $LN26@familyAddW

; 12293: 					StockChatBufferLine("ìí¸ íí¸ë¥¼ ì ííì¸ìï¼", FONT_PAL_WHITE);

  0027e	6a 00		 push	 0
  00280	6a 00		 push	 0
  00282	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@IAPAGIOC@?$LM?v?H?$KD?5?F?d?F?$KO?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
  00287	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  0028c	83 c4 0c	 add	 esp, 12			; 0000000cH

; 12294: 					break;

  0028f	e9 86 01 00 00	 jmp	 $LN99@familyAddW
$LN26@familyAddW:

; 12295: 				}
; 12296: 				if (pet[familyPetIndex].useFlag == NULL) {

  00294	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?familyPetIndex@@3HA, 2936
  0029e	66 83 b8 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 0
  002a6	75 16		 jne	 SHORT $LN27@familyAddW

; 12297: 					StockChatBufferLine("ê°ì¡± ë³´í¸ìë¥¼ ì ííì¸ìï¼", FONT_PAL_WHITE);

  002a8	6a 00		 push	 0
  002aa	6a 00		 push	 0
  002ac	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@ODAGPAJL@?$LA?$KB?A?$LH?5?$LK?$LI?H?$KD?$MA?Z?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KD?$KB@
  002b1	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
  002b6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 12298: 					break;

  002b9	e9 5c 01 00 00	 jmp	 $LN99@familyAddW
$LN27@familyAddW:

; 12299: 				}
; 12300: 
; 12301: 				makeEscapeString(familyNameInput.buffer, buf2, sizeof(buf2));

  002be	68 00 04 00 00	 push	 1024			; 00000400H
  002c3	8d 85 fc f3 ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  002c9	50		 push	 eax
  002ca	68 00 00 00 00	 push	 OFFSET ?familyNameInput@@3USTR_BUFFER@@A ; familyNameInput
  002cf	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 12302: 				makeEscapeString(familyRuleInput.buffer, buf3, sizeof(buf3));

  002d4	68 00 04 00 00	 push	 1024			; 00000400H
  002d9	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _buf3$[ebp]
  002df	50		 push	 eax
  002e0	68 00 00 00 00	 push	 OFFSET ?familyRuleInput@@3USTR_BUFFER@@A ; familyRuleInput
  002e5	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 12303: #ifdef _NB_FAMILYBADGE
; 12304: 				sprintf(buf, "A|%s|%d|%d|%s|%d", buf2, familyPetIndex, familyElf, buf3, å¾½ç« ç´¢å¼);

  002ea	ff 35 00 00 00
	00		 push	 DWORD PTR ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA
  002f0	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _buf3$[ebp]
  002f6	50		 push	 eax
  002f7	ff 35 00 00 00
	00		 push	 DWORD PTR ?familyElf@@3HA ; familyElf
  002fd	8d 85 fc f3 ff
	ff		 lea	 eax, DWORD PTR _buf2$[ebp]
  00303	ff 35 00 00 00
	00		 push	 DWORD PTR ?familyPetIndex@@3HA
  00309	50		 push	 eax
  0030a	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00310	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FFLONHHA@A?$HM?$CFs?$HM?$CFd?$HM?$CFd?$HM?$CFs?$HM?$CFd@
  00315	50		 push	 eax
  00316	e8 00 00 00 00	 call	 _sprintf
  0031b	83 c4 34	 add	 esp, 52			; 00000034H

; 12305: #else
; 12306: 				sprintf(buf, "A|%s|%d|%d|%s", buf2, familyPetIndex, familyElf, buf3);
; 12307: #endif
; 12308: 				if (bNewServer)

  0031e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00324	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0032b	50		 push	 eax
  0032c	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00332	74 1d		 je	 SHORT $LN28@familyAddW

; 12309: 					lssproto_FM_send(sockfd, buf);

  00334	e8 00 00 00 00	 call	 ?lssproto_FM_send@@YAXHPAD@Z ; lssproto_FM_send
$LN108@familyAddW:

; 12221: 	{
; 12222: 		closeFamilyAddWN();

  00339	83 c4 08	 add	 esp, 8
$LN17@familyAddW:
  0033c	e8 00 00 00 00	 call	 ?closeFamilyAddWN@@YAXXZ ; closeFamilyAddWN
$LN20@familyAddW:
  00341	5f		 pop	 edi

; 12486: 
; 12487: 	}
; 12488: 
; 12489: }

  00342	5e		 pop	 esi
  00343	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00346	33 cd		 xor	 ecx, ebp
  00348	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034d	8b e5		 mov	 esp, ebp
  0034f	5d		 pop	 ebp
  00350	c3		 ret	 0
$LN28@familyAddW:

; 12310: 				else
; 12311: 					old_lssproto_FM_send(sockfd, buf);

  00351	e8 00 00 00 00	 call	 ?old_lssproto_FM_send@@YAXHPAD@Z ; old_lssproto_FM_send
  00356	eb e1		 jmp	 SHORT $LN108@familyAddW
$LN31@familyAddW:

; 12312: 				closeFamilyAddWN();
; 12313: 				return;
; 12314: 				break;
; 12315: 			case 1:
; 12316: 				closeFamilyAddWN();
; 12317: 				return;
; 12318: 				break;
; 12319: 			case 2:
; 12320: 				prevBtn = TRUE;
; 12321: 				i = 0;

  00358	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familyPetIndex@@3HA
  0035e	33 d2		 xor	 edx, edx
  00360	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyAddWN@@YAXXZ@4HA, 1
  0036a	bf 04 00 00 00	 mov	 edi, 4
  0036f	90		 npad	 1
$LL7@familyAddW:

; 12322: 				while (1) {
; 12323: 					familyPetIndex--;

  00370	83 e9 01	 sub	 ecx, 1

; 12324: 					if (familyPetIndex < 0) familyPetIndex = 4;

  00373	0f 48 cf	 cmovs	 ecx, edi

; 12325: 					if (pet[familyPetIndex].useFlag != NULL)

  00376	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  0037c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?familyPetIndex@@3HA, ecx
  00382	66 83 b8 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 0
  0038a	75 12		 jne	 SHORT $LN8@familyAddW

; 12326: 						break;
; 12327: 					if ((i++) > 5) {

  0038c	8b c2		 mov	 eax, edx
  0038e	42		 inc	 edx
  0038f	83 f8 05	 cmp	 eax, 5
  00392	7e dc		 jle	 SHORT $LL7@familyAddW

; 12328: 						familyPetIndex = -1;

  00394	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyPetIndex@@3HA, -1
$LN8@familyAddW:

; 12329: 						break;
; 12330: 					}
; 12331: 				}
; 12332: 				if (pActPet10 != NULL) {

  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActPet10@@3PAUaction@@A
  003a3	85 c0		 test	 eax, eax
  003a5	74 73		 je	 SHORT $LN99@familyAddW

; 12333: 					DeathAction(pActPet10);

  003a7	50		 push	 eax
  003a8	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12334: 					pActPet10 = NULL;

  003ad	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet10@@3PAUaction@@A, 0

; 12335: 				}
; 12336: 				break;

  003b7	eb 5e		 jmp	 SHORT $LN105@familyAddW
$LN36@familyAddW:

; 12337: 			case 3:
; 12338: 				nextBtn = TRUE;
; 12339: 				i = 0;

  003b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?familyPetIndex@@3HA
  003bf	33 d2		 xor	 edx, edx
  003c1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyAddWN@@YAXXZ@4HA, 1
  003cb	0f 1f 44 00 00	 npad	 5
$LL9@familyAddW:

; 12340: 				while (1) {
; 12341: 					familyPetIndex++;

  003d0	41		 inc	 ecx

; 12342: 					if (familyPetIndex >= 5) familyPetIndex = 0;

  003d1	33 ff		 xor	 edi, edi
  003d3	8b c1		 mov	 eax, ecx
  003d5	83 f8 05	 cmp	 eax, 5
  003d8	0f 4d cf	 cmovge	 ecx, edi

; 12343: 					if (pet[familyPetIndex].useFlag != NULL)

  003db	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  003e1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?familyPetIndex@@3HA, ecx
  003e7	66 39 b8 76 00
	00 00		 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], di
  003ee	75 12		 jne	 SHORT $LN10@familyAddW

; 12344: 						break;
; 12345: 					if ((i++) > 5) {

  003f0	8b c2		 mov	 eax, edx
  003f2	42		 inc	 edx
  003f3	83 f8 05	 cmp	 eax, 5
  003f6	7e d8		 jle	 SHORT $LL9@familyAddW

; 12346: 						familyPetIndex = -1;

  003f8	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?familyPetIndex@@3HA, -1
$LN10@familyAddW:

; 12347: 						break;
; 12348: 					}
; 12349: 				}
; 12350: 				if (pActPet10 != NULL) {

  00402	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActPet10@@3PAUaction@@A
  00407	85 c0		 test	 eax, eax
  00409	74 0f		 je	 SHORT $LN99@familyAddW

; 12351: 					DeathAction(pActPet10);

  0040b	50		 push	 eax
  0040c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 12352: 					pActPet10 = NULL;

  00411	89 3d 00 00 00
	00		 mov	 DWORD PTR ?pActPet10@@3PAUaction@@A, edi
$LN105@familyAddW:

; 12353: 				}
; 12354: 
; 12355: 				break;
; 12356: 
; 12357: 			}
; 12358: 			switch (selFontBtnId)

  00417	83 c4 04	 add	 esp, 4
$LN99@familyAddW:
  0041a	83 ee 00	 sub	 esi, 0
  0041d	74 28		 je	 SHORT $LN41@familyAddW
  0041f	83 ee 01	 sub	 esi, 1
  00422	74 11		 je	 SHORT $LN42@familyAddW
  00424	83 ee 01	 sub	 esi, 1
  00427	75 28		 jne	 SHORT $LN102@familyAddW

; 12367: 			case 2:
; 12368: 				Inputforce = 2;

  00429	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?Inputforce@?1??familyAddWN@@YAXXZ@4HA, 2
  00433	eb 1c		 jmp	 SHORT $LN102@familyAddW
$LN42@familyAddW:

; 12362: 				break;
; 12363: 			case 1:
; 12364: 				if (familyElf == 0)	familyElf = 1;

  00435	33 c0		 xor	 eax, eax
  00437	39 05 00 00 00
	00		 cmp	 DWORD PTR ?familyElf@@3HA, eax ; familyElf
  0043d	0f 94 c0	 sete	 al

; 12365: 				else	familyElf = 0;
; 12366: 				break;

  00440	a3 00 00 00 00	 mov	 DWORD PTR ?familyElf@@3HA, eax ; familyElf
  00445	eb 0a		 jmp	 SHORT $LN102@familyAddW
$LN41@familyAddW:

; 12359: 			{
; 12360: 			case 0:
; 12361: 				Inputforce = 1;

  00447	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?Inputforce@?1??familyAddWN@@YAXXZ@4HA, 1
$LN102@familyAddW:

; 12369: 				break;
; 12370: 
; 12371: 			}
; 12372: 
; 12373: 		}
; 12374: 
; 12375: 		if (mouse.state & MOUSE_LEFT_CRICK && prevBtn == TRUE)

  00451	a1 28 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+40
  00456	83 e0 01	 and	 eax, 1
  00459	74 15		 je	 SHORT $LN46@familyAddW
  0045b	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?prevBtn@?1??familyAddWN@@YAXXZ@4HA, 1
  00462	75 0c		 jne	 SHORT $LN46@familyAddW

; 12376: 			prevBtn = TRUE;

  00464	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyAddWN@@YAXXZ@4HA, 1
  0046e	eb 0e		 jmp	 SHORT $LN97@familyAddW
$LN46@familyAddW:

; 12377: 		else	prevBtn = FALSE;
; 12378: 
; 12379: 		if (mouse.state & MOUSE_LEFT_CRICK && nextBtn == TRUE)

  00470	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?prevBtn@?1??familyAddWN@@YAXXZ@4HA, 0
  0047a	85 c0		 test	 eax, eax
  0047c	74 10		 je	 SHORT $LN48@familyAddW
$LN97@familyAddW:
  0047e	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nextBtn@?1??familyAddWN@@YAXXZ@4HA, 1
  00485	75 07		 jne	 SHORT $LN48@familyAddW

; 12380: 			nextBtn = TRUE;

  00487	b8 01 00 00 00	 mov	 eax, 1
  0048c	eb 02		 jmp	 SHORT $LN49@familyAddW
$LN48@familyAddW:

; 12381: 		else	nextBtn = FALSE;

  0048e	33 c0		 xor	 eax, eax
$LN49@familyAddW:

; 12382: 
; 12383: 		btnId[0] = StockDispBuffer(x + 90, y + 274, DISP_PRIO_IME3, CG_OK_BTN, 2);//OKæé®

  00490	a3 00 00 00 00	 mov	 DWORD PTR ?nextBtn@?1??familyAddWN@@YAXXZ@4HA, eax
  00495	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0049a	6a 02		 push	 2
  0049c	68 ed 65 00 00	 push	 26093			; 000065edH
  004a1	05 12 01 00 00	 add	 eax, 274		; 00000112H
  004a6	6a 69		 push	 105			; 00000069H
  004a8	50		 push	 eax
  004a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  004ae	83 c0 5a	 add	 eax, 90			; 0000005aH
  004b1	50		 push	 eax
  004b2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004b7	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA, eax

; 12384: 		btnId[1] = StockDispBuffer(x + 270, y + 274, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  004bc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  004c1	6a 02		 push	 2
  004c3	68 f0 65 00 00	 push	 26096			; 000065f0H
  004c8	05 12 01 00 00	 add	 eax, 274		; 00000112H
  004cd	6a 69		 push	 105			; 00000069H
  004cf	50		 push	 eax
  004d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  004d5	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  004da	50		 push	 eax
  004db	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004e0	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA+4, eax

; 12385: 		btnId[2] = StockDispBuffer(x + 435, y + 270, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  004e5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?prevBtn@?1??familyAddWN@@YAXXZ@4HA
  004ea	6a 02		 push	 2
  004ec	ff b4 85 f4 f3
	ff ff		 push	 DWORD PTR _prevBtnGraNo$[ebp+eax*4]
  004f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  004f8	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  004fd	6a 69		 push	 105			; 00000069H
  004ff	50		 push	 eax
  00500	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00505	05 b3 01 00 00	 add	 eax, 435		; 000001b3H
  0050a	50		 push	 eax
  0050b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00510	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA+8, eax

; 12386: 		btnId[3] = StockDispBuffer(x + 495, y + 270, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  00515	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextBtn@?1??familyAddWN@@YAXXZ@4HA
  0051a	6a 02		 push	 2
  0051c	ff b4 85 ec f3
	ff ff		 push	 DWORD PTR _nextBtnGraNo$[ebp+eax*4]
  00523	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  00528	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  0052d	6a 69		 push	 105			; 00000069H
  0052f	50		 push	 eax
  00530	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00535	05 ef 01 00 00	 add	 eax, 495		; 000001efH
  0053a	50		 push	 eax
  0053b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00540	83 c4 50	 add	 esp, 80			; 00000050H
  00543	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??familyAddWN@@YAXXZ@4PAHA+12, eax

; 12387: #ifdef _NB_FAMILYBADGE
; 12388: 		fontId[5] = StockFontBuffer(x + 250, y + 135, FONT_PRIO_FRONT, 1, "ë°°ì§ì¤ì ", 2);

  00548	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0054d	05 87 00 00 00	 add	 eax, 135		; 00000087H
  00552	6a 02		 push	 2
  00554	68 00 00 00 00	 push	 OFFSET ??_C@_08IEFDEMID@?$LJ?h?A?v?$LM?$LD?A?$KE@
  00559	6a 01		 push	 1
  0055b	6a 01		 push	 1
  0055d	50		 push	 eax
  0055e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00563	05 fa 00 00 00	 add	 eax, 250		; 000000faH
  00568	50		 push	 eax
  00569	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0056e	a3 14 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyAddWN@@YAXXZ@4PAHA+20, eax
  00573	83 c4 18	 add	 esp, 24			; 00000018H

; 12389: 		if (å¾½ç« ç´¢å¼ != -1) StockDispBuffer(x + 130, y + 137, DISP_PRIO_IME4, å¾½ç« ç´¢å¼, 0);

  00576	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA
  0057b	83 f8 ff	 cmp	 eax, -1
  0057e	74 23		 je	 SHORT $LN50@familyAddW
  00580	6a 00		 push	 0
  00582	50		 push	 eax
  00583	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  00588	05 89 00 00 00	 add	 eax, 137		; 00000089H
  0058d	6a 6a		 push	 106			; 0000006aH
  0058f	50		 push	 eax
  00590	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00595	05 82 00 00 00	 add	 eax, 130		; 00000082H
  0059a	50		 push	 eax
  0059b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005a0	83 c4 14	 add	 esp, 20			; 00000014H
$LN50@familyAddW:

; 12390: 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  005a3	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  005aa	74 1f		 je	 SHORT $LN103@familyAddW

; 12391: 			if (HitFontNo == fontId[5]) å¾½ç« çªå£ = !å¾½ç« çªå£;

  005ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  005b1	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?fontId@?1??familyAddWN@@YAXXZ@4PAHA+20
  005b7	75 12		 jne	 SHORT $LN103@familyAddW
  005b9	33 c0		 xor	 eax, eax
  005bb	39 05 00 00 00
	00		 cmp	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA, eax
  005c1	0f 94 c0	 sete	 al
  005c4	a3 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA, eax
  005c9	eb 05		 jmp	 SHORT $LN52@familyAddW
$LN103@familyAddW:
  005cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA
$LN52@familyAddW:

; 12392: 		if (å¾½ç« çªå£) {

  005d0	85 c0		 test	 eax, eax
  005d2	74 6b		 je	 SHORT $LN104@familyAddW

; 12393: 			int æé®ID;// = StockDispBuffer(x + 22, y + 330, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);
; 12394: 			//æé®ID = StockDispBuffer(x + 22, y + 330, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);
; 12395: 			//if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 12396: 			//	if (HitDispNo == æé®ID) {
; 12397: 			//		if (å¾½ç« å½åé¡µ) å¾½ç« å½åé¡µ--;
; 12398: 			//	}
; 12399: 			//}
; 12400: 			//æé®ID = StockDispBuffer(x + 544, y + 330, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);
; 12401: 
; 12402: 			//if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 12403: 			//	if (HitDispNo == æé®ID) {
; 12404: 			//		if (å¾½ç« å½åé¡µ < å¾½ç« æ»é¡µæ° - 1) å¾½ç« å½åé¡µ++;
; 12405: 			//	}
; 12406: 			//}
; 12407: 			int start = å¾½ç« å½åé¡µ * 12;

  005d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ýÅíñ?îñ?@?1??familyAddWN@@YAXXZ@4HA
  005d9	8d 34 40	 lea	 esi, DWORD PTR [eax+eax*2]
  005dc	c1 e6 02	 shl	 esi, 2
  005df	81 c6 e6 8d 00
	00		 add	 esi, 36326		; 00008de6H
  005e5	33 ff		 xor	 edi, edi
$LL15@familyAddW:

; 12411: 				//æé®ID = StockDispBuffer(x + 64 + i * 40, y + 330, DISP_PRIO_IME3, CG_OK_BTN, 2);
; 12412: 				æé®ID = StockDispBuffer(x + 64 + i * 40, y + 330, DISP_PRIO_IME4, å¾½ç« æ°æ®èµ·å§ID + start, 2);

  005e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  005ec	6a 02		 push	 2
  005ee	56		 push	 esi
  005ef	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  005f4	6a 6a		 push	 106			; 0000006aH
  005f6	50		 push	 eax
  005f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  005fc	83 c0 40	 add	 eax, 64			; 00000040H
  005ff	03 c7		 add	 eax, edi
  00601	50		 push	 eax
  00602	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00607	83 c4 14	 add	 esp, 20			; 00000014H

; 12413: 				if (mouse.onceState & MOUSE_LEFT_CRICK) {

  0060a	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00611	74 18		 je	 SHORT $LN55@familyAddW

; 12414: 					if (HitDispNo == æé®ID) {

  00613	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitDispNo@@3HA, eax ; HitDispNo
  00619	75 10		 jne	 SHORT $LN55@familyAddW

; 12415: 						å¾½ç« ç´¢å¼ = å¾½ç« æ°æ®èµ·å§ID + start;

  0061b	89 35 00 00 00
	00		 mov	 DWORD PTR ?ýÅíñßãìÚ@?1??familyAddWN@@YAXXZ@4HA, esi

; 12416: 						å¾½ç« çªå£ = FALSE;

  00621	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ýÅíñ?Ï¢@?1??familyAddWN@@YAXXZ@4HA, 0
$LN55@familyAddW:

; 12417: 					}
; 12418: 				}
; 12419: 				start++;

  0062b	46		 inc	 esi

; 12420: 				if (å¾½ç« ä¸ªæ° < start) break;

  0062c	81 fe f0 8d 00
	00		 cmp	 esi, 36336		; 00008df0H
  00632	7f 0b		 jg	 SHORT $LN104@familyAddW

; 12408: 			int end = (å¾½ç« å½åé¡µ * 12 < å¾½ç« ä¸ªæ° ? å¾½ç« å½åé¡µ * 12 : å¾½ç« ä¸ªæ°);
; 12409: 			int i = 0;
; 12410: 			for (; i < 12; i++) {

  00634	83 c7 28	 add	 edi, 40			; 00000028H
  00637	81 ff e0 01 00
	00		 cmp	 edi, 480		; 000001e0H
  0063d	7c a8		 jl	 SHORT $LL15@familyAddW
$LN104@familyAddW:

; 12421: 			}
; 12422: 			//StockDispBuffer(x + 282, y + 330, DISP_PRIO_IME3, 52007, 1);
; 12423: 		}
; 12424: #endif
; 12425: 		// å®¶æåç§°ï¼
; 12426: 		fontId[0] = StockFontBuffer(x + 100, y + 40, FONT_PRIO_FRONT, FONT_PAL_WHITE, "                  ", 2);

  0063f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  00644	6a 02		 push	 2
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DPCKNFFI@?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5?5@
  0064b	6a 00		 push	 0
  0064d	83 c0 28	 add	 eax, 40			; 00000028H
  00650	6a 01		 push	 1
  00652	50		 push	 eax
  00653	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00658	83 c0 64	 add	 eax, 100		; 00000064H
  0065b	50		 push	 eax
  0065c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12427: 		// æé¿åç§°ï¼
; 12428: 		StockFontBuffer(x + 100, y + 70, FONT_PRIO_FRONT, FONT_PAL_WHITE, pc.name, 0);

  00661	6a 00		 push	 0
  00663	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyAddWN@@YAXXZ@4PAHA, eax
  00668	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0066d	68 70 00 00 00	 push	 OFFSET ?pc@@3UPC@@A+112
  00672	6a 00		 push	 0
  00674	83 c0 46	 add	 eax, 70			; 00000046H
  00677	6a 01		 push	 1
  00679	50		 push	 eax
  0067a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  0067f	83 c0 64	 add	 eax, 100		; 00000064H
  00682	50		 push	 eax
  00683	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12429: 		// äººæ°
; 12430: 		StockFontBuffer(x + 100, y + 100, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ìë¤", 0);

  00688	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0068d	6a 00		 push	 0
  0068f	68 00 00 00 00	 push	 OFFSET ??_C@_04EHFFKIEF@?$LO?x?$LE?Y@
  00694	6a 00		 push	 0
  00696	83 c0 64	 add	 eax, 100		; 00000064H
  00699	6a 01		 push	 1
  0069b	50		 push	 eax
  0069c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  006a1	83 c0 64	 add	 eax, 100		; 00000064H
  006a4	50		 push	 eax
  006a5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12431: 		// pet
; 12432: 		if (pet[familyPetIndex].useFlag != NULL)

  006aa	69 0d 00 00 00
	00 78 0b 00 00	 imul	 ecx, DWORD PTR ?familyPetIndex@@3HA, 2936
  006b4	83 c4 48	 add	 esp, 72			; 00000048H
  006b7	66 83 b9 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[ecx+118], 0
  006bf	74 2d		 je	 SHORT $LN57@familyAddW

; 12433: 			if (pet[familyPetIndex].freeName[0] == NULL)
; 12434: 				sprintf(buf, " %s", pet[familyPetIndex].name);
; 12435: 			else
; 12436: 				sprintf(buf, " %s", pet[familyPetIndex].freeName);

  006c1	80 b9 65 00 00
	00 00		 cmp	 BYTE PTR ?pet@@3PAUPET@@A[ecx+101], 0
  006c8	ba 54 00 00 00	 mov	 edx, OFFSET ?pet@@3PAUPET@@A+84
  006cd	b8 65 00 00 00	 mov	 eax, OFFSET ?pet@@3PAUPET@@A+101
  006d2	0f 44 c2	 cmove	 eax, edx
  006d5	03 c1		 add	 eax, ecx
  006d7	50		 push	 eax
  006d8	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  006de	68 00 00 00 00	 push	 OFFSET ??_C@_03EEBNCBOD@?5?$CFs@
  006e3	50		 push	 eax
  006e4	e8 00 00 00 00	 call	 _sprintf
  006e9	83 c4 0c	 add	 esp, 12			; 0000000cH
  006ec	eb 14		 jmp	 SHORT $LN58@familyAddW
$LN57@familyAddW:

; 12437: 		else
; 12438: 			sprintf(buf, "");

  006ee	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  006f4	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  006f9	50		 push	 eax
  006fa	e8 00 00 00 00	 call	 _sprintf
  006ff	83 c4 08	 add	 esp, 8
$LN58@familyAddW:

; 12439: 		StockFontBuffer(x + 436, y + 80, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 0);

  00702	6a 00		 push	 0
  00704	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0070a	50		 push	 eax
  0070b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  00710	6a 00		 push	 0
  00712	83 c0 50	 add	 eax, 80			; 00000050H
  00715	6a 01		 push	 1
  00717	50		 push	 eax
  00718	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  0071d	05 b4 01 00 00	 add	 eax, 436		; 000001b4H
  00722	50		 push	 eax
  00723	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12440: 
; 12441: 		// sprite
; 12442: 		sprintf(buf, "  %s  ", familySpriteName[familyElf]);

  00728	a1 00 00 00 00	 mov	 eax, DWORD PTR ?familyElf@@3HA ; familyElf
  0072d	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00730	8d 04 45 00 00
	00 00		 lea	 eax, DWORD PTR ?familySpriteName@@3PAY09DA[eax*2]
  00737	50		 push	 eax
  00738	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0073e	68 00 00 00 00	 push	 OFFSET ??_C@_06HHOANBGP@?5?5?$CFs?5?5@
  00743	50		 push	 eax
  00744	e8 00 00 00 00	 call	 _sprintf

; 12443: 		fontId[1] = StockFontBuffer(x + 436, y + 36, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 2);

  00749	6a 02		 push	 2
  0074b	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00751	50		 push	 eax
  00752	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  00757	6a 00		 push	 0
  00759	83 c0 24	 add	 eax, 36			; 00000024H
  0075c	6a 01		 push	 1
  0075e	50		 push	 eax
  0075f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  00764	05 b4 01 00 00	 add	 eax, 436		; 000001b4H
  00769	50		 push	 eax
  0076a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12444: 
; 12445: 		// rule
; 12446: 		sprintf(buf, "%38s", "");

  0076f	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00774	a3 04 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyAddWN@@YAXXZ@4PAHA+4, eax
  00779	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0077f	68 00 00 00 00	 push	 OFFSET ??_C@_04PMAIGBME@?$CF38s@
  00784	50		 push	 eax
  00785	e8 00 00 00 00	 call	 _sprintf
  0078a	83 c4 48	 add	 esp, 72			; 00000048H

; 12447: 		fontId[2] = StockFontBuffer(x + 82, y + 160, FONT_PRIO_FRONT, FONT_PAL_WHITE, buf, 2);

  0078d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00793	6a 02		 push	 2
  00795	50		 push	 eax
  00796	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0079b	6a 00		 push	 0
  0079d	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  007a2	6a 01		 push	 1
  007a4	50		 push	 eax
  007a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  007aa	83 c0 52	 add	 eax, 82			; 00000052H
  007ad	50		 push	 eax
  007ae	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 12448: 
; 12449: 		familyNameInput.x = x + 100;

  007b3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  007b9	83 c4 18	 add	 esp, 24			; 00000018H

; 12450: 		familyNameInput.y = y + 40;

  007bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  007c2	a3 08 00 00 00	 mov	 DWORD PTR ?fontId@?1??familyAddWN@@YAXXZ@4PAHA+8, eax
  007c7	8d 42 64	 lea	 eax, DWORD PTR [edx+100]
  007ca	a3 0c 01 00 00	 mov	 DWORD PTR ?familyNameInput@@3USTR_BUFFER@@A+268, eax
  007cf	8d 41 28	 lea	 eax, DWORD PTR [ecx+40]
  007d2	a3 10 01 00 00	 mov	 DWORD PTR ?familyNameInput@@3USTR_BUFFER@@A+272, eax

; 12451: #ifdef _NB_FAMILYBADGE
; 12452: 		familyRuleInput.x = x + 82;

  007d7	8d 42 52	 lea	 eax, DWORD PTR [edx+82]
  007da	a3 0c 01 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+268, eax

; 12453: 		familyRuleInput.y = y + 162;

  007df	8d 81 a2 00 00
	00		 lea	 eax, DWORD PTR [ecx+162]
  007e5	a3 10 01 00 00	 mov	 DWORD PTR ?familyRuleInput@@3USTR_BUFFER@@A+272, eax

; 12454: #else
; 12455: 		familyRuleInput.x = x + 20;
; 12456: 		familyRuleInput.y = y + 130;
; 12457: #endif
; 12458: 
; 12459: 
; 12460: 		if (Inputforce == 1) {

  007ea	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Inputforce@?1??familyAddWN@@YAXXZ@4HA
  007ef	83 f8 01	 cmp	 eax, 1
  007f2	75 27		 jne	 SHORT $LN61@familyAddW

; 12461: 			StockFontBuffer2(&familyNameInput);

  007f4	68 00 00 00 00	 push	 OFFSET ?familyNameInput@@3USTR_BUFFER@@A ; familyNameInput
  007f9	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 12462: 			GetKeyInputFocus(&familyNameInput);

  007fe	68 00 00 00 00	 push	 OFFSET ?familyNameInput@@3USTR_BUFFER@@A ; familyNameInput
  00803	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00808	83 c4 08	 add	 esp, 8

; 12463: 			if (familyRuleInput.buffer[0] != NULL)

  0080b	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyRuleInput@@3USTR_BUFFER@@A, 0
  00812	74 5e		 je	 SHORT $LN68@familyAddW

; 12464: 				StockFontBuffer2(&familyRuleInput);

  00814	68 00 00 00 00	 push	 OFFSET ?familyRuleInput@@3USTR_BUFFER@@A ; familyRuleInput

; 12465: 		}

  00819	eb 4f		 jmp	 SHORT $LN106@familyAddW
$LN61@familyAddW:

; 12466: 		else if (Inputforce == 2) {

  0081b	83 f8 02	 cmp	 eax, 2
  0081e	75 19		 jne	 SHORT $LN64@familyAddW

; 12467: 			StockFontBuffer2(&familyRuleInput);

  00820	68 00 00 00 00	 push	 OFFSET ?familyRuleInput@@3USTR_BUFFER@@A ; familyRuleInput
  00825	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 12468: 			GetKeyInputFocus(&familyRuleInput);

  0082a	68 00 00 00 00	 push	 OFFSET ?familyRuleInput@@3USTR_BUFFER@@A ; familyRuleInput
  0082f	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00834	83 c4 08	 add	 esp, 8

; 12469: 			if (familyNameInput.buffer[0] != NULL)
; 12470: 				StockFontBuffer2(&familyNameInput);
; 12471: 		}

  00837	eb 23		 jmp	 SHORT $LN67@familyAddW
$LN64@familyAddW:

; 12472: 		else {
; 12473: 			GetKeyInputFocus(&MyChatBuffer);

  00839	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  0083e	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00843	83 c4 04	 add	 esp, 4

; 12474: 			if (familyRuleInput.buffer[0] != NULL)

  00846	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyRuleInput@@3USTR_BUFFER@@A, 0
  0084d	74 0d		 je	 SHORT $LN67@familyAddW

; 12475: 				StockFontBuffer2(&familyRuleInput);

  0084f	68 00 00 00 00	 push	 OFFSET ?familyRuleInput@@3USTR_BUFFER@@A ; familyRuleInput
  00854	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  00859	83 c4 04	 add	 esp, 4
$LN67@familyAddW:

; 12476: 			if (familyNameInput.buffer[0] != NULL)
; 12477: 				StockFontBuffer2(&familyNameInput);
; 12478: 		}
; 12479: 
; 12480: 
; 12481: 		if (pActPet10 == NULL && (pet[familyPetIndex].useFlag != NULL))

  0085c	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?familyNameInput@@3USTR_BUFFER@@A, 0
  00863	74 0d		 je	 SHORT $LN68@familyAddW
  00865	68 00 00 00 00	 push	 OFFSET ?familyNameInput@@3USTR_BUFFER@@A ; familyNameInput
$LN106@familyAddW:
  0086a	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  0086f	83 c4 04	 add	 esp, 4
$LN68@familyAddW:
  00872	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActPet10@@3PAUaction@@A, 0
  00879	75 3f		 jne	 SHORT $LN69@familyAddW
  0087b	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?familyPetIndex@@3HA, 2936
  00885	66 83 b8 76 00
	00 00 00	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 0
  0088d	74 2b		 je	 SHORT $LN69@familyAddW

; 12482: 			//			pActPet10 = MakeAnimDisp( x+460, y+240, pet[ familyPetIndex ].graNo, 3 );
; 12483: 			pActPet10 = MakeAnimDisp(x + 460, y + 240, pet[familyPetIndex].graNo, 0);

  0088f	6a 00		 push	 0
  00891	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  00897	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  0089c	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  008a1	50		 push	 eax
  008a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  008a7	05 cc 01 00 00	 add	 eax, 460		; 000001ccH
  008ac	50		 push	 eax
  008ad	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  008b2	83 c4 10	 add	 esp, 16			; 00000010H
  008b5	a3 00 00 00 00	 mov	 DWORD PTR ?pActPet10@@3PAUaction@@A, eax
$LN69@familyAddW:

; 12484: 		StockDispBuffer(x + 312, y + 79, DISP_PRIO_IME3, pc.faceGraNo, 0);

  008ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  008bf	6a 00		 push	 0
  008c1	ff 35 04 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+4
  008c7	83 c0 4f	 add	 eax, 79			; 0000004fH
  008ca	6a 69		 push	 105			; 00000069H
  008cc	50		 push	 eax
  008cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  008d2	05 38 01 00 00	 add	 eax, 312		; 00000138H
  008d7	50		 push	 eax
  008d8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 12485: 		StockDispBuffer(x + 286, y + 148, DISP_PRIO_IME3, CG_FAMILY_DETAIL_WIN, 1);

  008dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??familyAddWN@@YAXXZ@4HA
  008e2	6a 01		 push	 1
  008e4	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_FAMILY_DETAIL_WIN@@3HA ; CG_FAMILY_DETAIL_WIN
  008ea	05 94 00 00 00	 add	 eax, 148		; 00000094H
  008ef	6a 69		 push	 105			; 00000069H
  008f1	50		 push	 eax
  008f2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??familyAddWN@@YAXXZ@4HA
  008f7	05 1e 01 00 00	 add	 eax, 286		; 0000011eH
  008fc	50		 push	 eax
  008fd	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 12486: 
; 12487: 	}
; 12488: 
; 12489: }

  00902	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00905	83 c4 28	 add	 esp, 40			; 00000028H
  00908	33 cd		 xor	 ecx, ebp
  0090a	5f		 pop	 edi
  0090b	5e		 pop	 esi
  0090c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00911	8b e5		 mov	 esp, ebp
  00913	5d		 pop	 ebp
  00914	c3		 ret	 0
  00915	0f 1f 00	 npad	 3
$LN98@familyAddW:
  00918	00 00 00 00	 DD	 $LN22@familyAddW
  0091c	00 00 00 00	 DD	 $LN17@familyAddW
  00920	00 00 00 00	 DD	 $LN31@familyAddW
  00924	00 00 00 00	 DD	 $LN36@familyAddW
?familyAddWN@@YAXXZ ENDP				; familyAddWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initFamilyAddWN@@YAXPAD@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initFamilyAddWN@@YAXPAD@Z PROC				; initFamilyAddWN, COMDAT

; 12161: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 12162: 	makeStringFromEscaped(data);

  00003	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00006	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 12163: 	DeathAction(pActPet10);

  0000b	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActPet10@@3PAUaction@@A
  00011	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00016	83 c4 08	 add	 esp, 8

; 12164: 	pActPet10 = NULL;

  00019	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActPet10@@3PAUaction@@A, 0

; 12165: 	familyElf = 2;

  00023	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?familyElf@@3HA, 2 ; familyElf

; 12166: }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?initFamilyAddWN@@YAXPAD@Z ENDP				; initFamilyAddWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?PetSkillShowType1@@YAXXZ
_TEXT	SEGMENT
tv437 = -648						; size = 4
_data$1 = -644						; size = 256
_msg$2 = -388						; size = 256
_skillName$ = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
?PetSkillShowType1@@YAXXZ PROC				; PetSkillShowType1, COMDAT

; 10382: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 88 02 00
	00		 sub	 esp, 648		; 00000288H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 10383: 	static int x, y, w, h;
; 10384: 	static int btnId[1];
; 10385: 	int id = -1;
; 10386: 	int i;
; 10387: 	int ret = 0;
; 10388: 	int x1, y1, x2, y2;
; 10389: 	char skillName[128];
; 10390: 
; 10391: 	if (PetskillShpwWindowProcNo == 0) {

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?PetskillShpwWindowProcNo@@3FA, 0 ; PetskillShpwWindowProcNo
  0001b	75 69		 jne	 SHORT $LN50@PetSkillSh

; 10392: 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 10393: 			btnId[i] = -2;
; 10394: 		}
; 10395: 		w = 5;
; 10396: 		h = 6;
; 10397: 		x = (640 - w * 64) / 2;
; 10398: 		y = (456 - h * 48) / 2;
; 10399: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001d	6a 01		 push	 1
  0001f	6a 00		 push	 0
  00021	6a 06		 push	 6
  00023	6a 05		 push	 5
  00025	6a 54		 push	 84			; 00000054H
  00027	68 a0 00 00 00	 push	 160			; 000000a0H
  0002c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??PetSkillShowType1@@YAXXZ@4PAHA, -2 ; fffffffeH
  00036	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?w@?1??PetSkillShowType1@@YAXXZ@4HA, 5
  00040	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?h@?1??PetSkillShowType1@@YAXXZ@4HA, 6
  0004a	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA, 160 ; 000000a0H
  00054	c7 05 00 00 00
	00 54 00 00 00	 mov	 DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA, 84 ; 00000054H
  0005e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00063	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00068	83 c4 18	 add	 esp, 24			; 00000018H

; 10400: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 10401: 		x = ptActMenuWin->x;

  0006b	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0006e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA, ecx

; 10402: 		y = ptActMenuWin->y;

  00074	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 10403: #endif
; 10404: 		PetskillShpwWindowProcNo++;

  00077	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?PetskillShpwWindowProcNo@@3FA ; PetskillShpwWindowProcNo
  0007e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA, ecx
  00084	eb 05		 jmp	 SHORT $LN11@PetSkillSh
$LN50@PetSkillSh:

; 10383: 	static int x, y, w, h;
; 10384: 	static int btnId[1];
; 10385: 	int id = -1;
; 10386: 	int i;
; 10387: 	int ret = 0;
; 10388: 	int x1, y1, x2, y2;
; 10389: 	char skillName[128];
; 10390: 
; 10391: 	if (PetskillShpwWindowProcNo == 0) {

  00086	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN11@PetSkillSh:

; 10405: 	}
; 10406: 	if (ptActMenuWin != NULL) {

  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 0b 03 00
	00		 je	 $LN28@PetSkillSh

; 10407: 		id = -1;

  00093	53		 push	 ebx
  00094	56		 push	 esi
  00095	83 ce ff	 or	 esi, -1

; 10408: 		if (ptActMenuWin->hp >= 1) {

  00098	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0009c	57		 push	 edi
  0009d	0f 8c 7e 00 00
	00		 jl	 $LN15@PetSkillSh

; 10409: 			if ((id = selGraId(btnId, sizeof(btnId) / sizeof(int))) < 0) {

  000a3	6a 01		 push	 1
  000a5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??PetSkillShowType1@@YAXXZ@4PAHA
  000aa	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  000af	8b f0		 mov	 esi, eax
  000b1	83 c4 08	 add	 esp, 8
  000b4	85 f6		 test	 esi, esi
  000b6	79 64		 jns	 SHORT $LN14@PetSkillSh

; 10410: 				for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo].maxSkill; i++) {

  000b8	33 ff		 xor	 edi, edi
  000ba	33 db		 xor	 ebx, ebx
  000bc	0f 1f 40 00	 npad	 4
$LL7@PetSkillSh:
  000c0	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  000c7	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  000cd	3b b8 44 00 00
	00		 cmp	 edi, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  000d3	7d 4c		 jge	 SHORT $LN15@PetSkillSh

; 10411: 					x1 = x + 41;
; 10412: 					y1 = y + 33 + (i + 1) * 26;

  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA
  000db	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA
  000e1	83 c1 3b	 add	 ecx, 59			; 0000003bH
  000e4	03 cb		 add	 ecx, ebx
  000e6	83 c2 29	 add	 edx, 41			; 00000029H

; 10413: 					x2 = x1 + 238;
; 10414: 					y2 = y1 + 22;
; 10415: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  000e9	6a 6b		 push	 107			; 0000006bH
  000eb	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  000ee	50		 push	 eax
  000ef	8d 82 ee 00 00
	00		 lea	 eax, DWORD PTR [edx+238]
  000f5	50		 push	 eax
  000f6	51		 push	 ecx
  000f7	52		 push	 edx
  000f8	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000fd	83 c4 14	 add	 esp, 20			; 00000014H
  00100	85 c0		 test	 eax, eax
  00102	74 0a		 je	 SHORT $LN5@PetSkillSh

; 10416: 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00104	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0010b	0f 45 f7	 cmovne	 esi, edi
$LN5@PetSkillSh:

; 10410: 				for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo].maxSkill; i++) {

  0010e	83 c3 1a	 add	 ebx, 26			; 0000001aH
  00111	47		 inc	 edi
  00112	81 fb b6 00 00
	00		 cmp	 ebx, 182		; 000000b6H
  00118	7c a6		 jl	 SHORT $LL7@PetSkillSh

; 10417: 							id = i;
; 10418: 						}
; 10419: 					}
; 10420: 				}
; 10421: 			}

  0011a	eb 05		 jmp	 SHORT $LN15@PetSkillSh
$LN14@PetSkillSh:

; 10422: 			else {
; 10423: 				id = 100;

  0011c	be 64 00 00 00	 mov	 esi, 100		; 00000064H
$LN15@PetSkillSh:

; 10424: 			}
; 10425: 
; 10426: 		}
; 10427: 		if (CheckMenuFlag()
; 10428: 			|| joy_trg[0] & JOY_ESC
; 10429: 			|| actBtn == 1
; 10430: 			|| menuBtn == 1
; 10431: 			|| disconnectServerFlag == TRUE
; 10432: 			|| wnCloseFlag == 1) {

  00121	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00126	85 c0		 test	 eax, eax
  00128	0f 85 43 02 00
	00		 jne	 $LN19@PetSkillSh
  0012e	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00138	0f 85 33 02 00
	00		 jne	 $LN19@PetSkillSh
  0013e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00146	0f 84 25 02 00
	00		 je	 $LN19@PetSkillSh
  0014c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00154	0f 84 17 02 00
	00		 je	 $LN19@PetSkillSh
  0015a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00161	0f 84 0a 02 00
	00		 je	 $LN19@PetSkillSh
  00167	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0016f	0f 84 fc 01 00
	00		 je	 $LN19@PetSkillSh

; 10435: 		}
; 10436: 
; 10437: 		if (id >= 0) {

  00175	85 f6		 test	 esi, esi
  00177	0f 88 b3 00 00
	00		 js	 $LN20@PetSkillSh

; 10438: 			if (id == 100) {

  0017d	83 fe 64	 cmp	 esi, 100		; 00000064H
  00180	0f 84 f3 01 00
	00		 je	 $LN45@PetSkillSh

; 10440: 			}
; 10441: 			else {
; 10442: 				selShopSkillSlotNo = id;
; 10443: 				ret = 2;

  00186	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0018c	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopSkillSlotNo@@3FA, si ; selShopSkillSlotNo
  00193	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 10451: 			}
; 10452: 			else if (ret == 2) {
; 10453: 				char data[256];
; 10454: 				char msg[256];
; 10455: 				//				sprintf( data, "%d|%d|%d|%d",
; 10456: 				sprintf(data, "%d",

  00198	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillSlotNo@@3FA ; selShopSkillSlotNo
  0019f	50		 push	 eax
  001a0	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  001a6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001b0	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  001b5	50		 push	 eax
  001b6	e8 00 00 00 00	 call	 _sprintf

; 10457: 					//					selShopSkillNo+1
; 10458: 					//					selShopSkillPetNo,
; 10459: 					selShopSkillSlotNo
; 10460: 					//					sealSkill[selShopSkillNo].price );
; 10461: 				);
; 10462: 				makeEscapeString(data, msg, sizeof(msg) - 1);

  001bb	68 ff 00 00 00	 push	 255			; 000000ffH
  001c0	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  001c6	50		 push	 eax
  001c7	8d 85 7c fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  001cd	50		 push	 eax
  001ce	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  001d3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 10463: 				if (bNewServer)

  001d6	8d 85 7c fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  001dc	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001e3	50		 push	 eax
  001e4	6a 00		 push	 0
  001e6	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  001ec	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  001f2	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  001f8	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  001fe	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00204	74 07		 je	 SHORT $LN26@PetSkillSh

; 10464: 					lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00206	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0020b	eb 05		 jmp	 SHORT $LN61@PetSkillSh
$LN26@PetSkillSh:

; 10465: 				else
; 10466: 					old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  0020d	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN61@PetSkillSh:

; 10467: 				pc.gold -= sealSkill[selShopSkillNo].price;

  00212	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  00219	83 c4 1c	 add	 esp, 28			; 0000001cH
  0021c	6b c0 70	 imul	 eax, eax, 112
  0021f	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[eax]
  00225	29 05 60 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+96, eax

; 10468: 				windowTypeWN = -1;
; 10469: 			}
; 10470: 			return;

  0022b	e9 61 01 00 00	 jmp	 $LN62@PetSkillSh
$LN20@PetSkillSh:

; 10471: 		}
; 10472: 
; 10473: 		if (ptActMenuWin->hp >= 1) {

  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00235	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00239	0f 8c 5c 01 00
	00		 jl	 $LN58@PetSkillSh

; 10474: 			StockFontBuffer(x + 75, y + 33,

  0023f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA
  00244	6a 00		 push	 0
  00246	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@HIPKKMKB@?$LB?W?$MA?$KH?D?$KB?$LP?$KB?5?G?R?$LB?n?$LP?d?$KD?$LP@
  0024b	6a 00		 push	 0
  0024d	83 c0 21	 add	 eax, 33			; 00000021H
  00250	6a 01		 push	 1
  00252	50		 push	 eax
  00253	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA
  00258	83 c0 4b	 add	 eax, 75			; 0000004bH
  0025b	50		 push	 eax
  0025c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00261	83 c4 18	 add	 esp, 24			; 00000018H

; 10475: 				FONT_PRIO_FRONT, FONT_PAL_WHITE, "ê·¸ìì¹ì í ê¹ìï¼", 0);
; 10476: 			for (i = 0; i < MAX_SKILL && i < pet[selShopSkillPetNo].maxSkill; i++) {

  00264	33 f6		 xor	 esi, esi
  00266	33 db		 xor	 ebx, ebx
  00268	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL10@PetSkillSh:
  00270	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  00277	69 c0 78 0b 00
	00		 imul	 eax, eax, 2936
  0027d	3b b0 44 00 00
	00		 cmp	 esi, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  00283	0f 8d ab 00 00
	00		 jge	 $LN9@PetSkillSh

; 10477: 				sprintf(skillName, "ê¸° %d: ", i + 1);

  00289	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0028c	50		 push	 eax
  0028d	89 85 78 fd ff
	ff		 mov	 DWORD PTR tv437[ebp], eax
  00293	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _skillName$[ebp]
  00299	68 00 00 00 00	 push	 OFFSET ??_C@_07BCAPMAGD@?$LB?b?5?$CFd?3?5@
  0029e	50		 push	 eax
  0029f	e8 00 00 00 00	 call	 _sprintf

; 10478: 				if (petSkill[selShopSkillPetNo][i].useFlag != 0) {

  002a4	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  002ab	83 c4 0c	 add	 esp, 12			; 0000000cH
  002ae	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  002b5	2b c8		 sub	 ecx, eax
  002b7	03 ce		 add	 ecx, esi
  002b9	6b c1 6a	 imul	 eax, ecx, 106
  002bc	66 83 b8 00 00
	00 00 00	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax], 0
  002c4	74 30		 je	 SHORT $LN40@PetSkillSh

; 10479: 					strcat(skillName, petSkill[selShopSkillPetNo][i].name);

  002c6	8d 80 08 00 00
	00		 lea	 eax, DWORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+8]
  002cc	8b f0		 mov	 esi, eax
  002ce	66 90		 npad	 2
$LL48@PetSkillSh:
  002d0	8a 08		 mov	 cl, BYTE PTR [eax]
  002d2	40		 inc	 eax
  002d3	84 c9		 test	 cl, cl
  002d5	75 f9		 jne	 SHORT $LL48@PetSkillSh
  002d7	8d bd 7c ff ff
	ff		 lea	 edi, DWORD PTR _skillName$[ebp]
  002dd	2b c6		 sub	 eax, esi
  002df	4f		 dec	 edi
$LL49@PetSkillSh:
  002e0	8a 4f 01	 mov	 cl, BYTE PTR [edi+1]
  002e3	47		 inc	 edi
  002e4	84 c9		 test	 cl, cl
  002e6	75 f8		 jne	 SHORT $LL49@PetSkillSh
  002e8	8b c8		 mov	 ecx, eax
  002ea	c1 e9 02	 shr	 ecx, 2
  002ed	f3 a5		 rep movsd
  002ef	8b c8		 mov	 ecx, eax
  002f1	83 e1 03	 and	 ecx, 3
  002f4	f3 a4		 rep movsb
$LN40@PetSkillSh:

; 10480: 				}
; 10481: 				StockFontBuffer(x + 46, y + 36 + (i + 1) * 26,

  002f6	6a 00		 push	 0
  002f8	8d 85 7c ff ff
	ff		 lea	 eax, DWORD PTR _skillName$[ebp]
  002fe	50		 push	 eax
  002ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA
  00304	83 c0 3e	 add	 eax, 62			; 0000003eH
  00307	6a 00		 push	 0
  00309	03 c3		 add	 eax, ebx
  0030b	6a 01		 push	 1
  0030d	50		 push	 eax
  0030e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA
  00313	83 c0 2e	 add	 eax, 46			; 0000002eH
  00316	50		 push	 eax
  00317	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0031c	8b b5 78 fd ff
	ff		 mov	 esi, DWORD PTR tv437[ebp]
  00322	83 c3 1a	 add	 ebx, 26			; 0000001aH
  00325	83 c4 18	 add	 esp, 24			; 00000018H
  00328	81 fb b6 00 00
	00		 cmp	 ebx, 182		; 000000b6H
  0032e	0f 8c 3c ff ff
	ff		 jl	 $LL10@PetSkillSh
$LN9@PetSkillSh:

; 10482: 					FONT_PRIO_FRONT, FONT_PAL_WHITE, skillName, 0);
; 10483: 			}
; 10484: 			btnId[0] = StockDispBuffer(x + 160, y + 256, DISP_PRIO_IME3, CG_CANCEL_BTN, 2);

  00334	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??PetSkillShowType1@@YAXXZ@4HA
  00339	6a 02		 push	 2
  0033b	68 c2 65 00 00	 push	 26050			; 000065c2H
  00340	05 00 01 00 00	 add	 eax, 256		; 00000100H
  00345	6a 69		 push	 105			; 00000069H
  00347	50		 push	 eax
  00348	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??PetSkillShowType1@@YAXXZ@4HA
  0034d	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00358	83 c4 14	 add	 esp, 20			; 00000014H
  0035b	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??PetSkillShowType1@@YAXXZ@4PAHA, eax
  00360	5f		 pop	 edi
  00361	5e		 pop	 esi
  00362	5b		 pop	 ebx

; 10485: 		}
; 10486: 	}
; 10487: 	return;
; 10488: }

  00363	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00366	33 cd		 xor	 ecx, ebp
  00368	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0036d	8b e5		 mov	 esp, ebp
  0036f	5d		 pop	 ebp
  00370	c3		 ret	 0
$LN19@PetSkillSh:

; 10433: 			id = 100;
; 10434: 			wnCloseFlag = 0;

  00371	33 c0		 xor	 eax, eax
  00373	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN45@PetSkillSh:

; 10439: 				ret = 100;

  00379	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0037f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00384	83 c4 04	 add	 esp, 4
  00387	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN62@PetSkillSh:

; 10444: 			}
; 10445: 
; 10446: 			DeathAction(ptActMenuWin);
; 10447: 			ptActMenuWin = NULL;
; 10448: 			if (ret == 100)
; 10449: 			{
; 10450: 				windowTypeWN = -1;

  00391	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN58@PetSkillSh:
  0039b	5f		 pop	 edi
  0039c	5e		 pop	 esi
  0039d	5b		 pop	 ebx
$LN28@PetSkillSh:

; 10485: 		}
; 10486: 	}
; 10487: 	return;
; 10488: }

  0039e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003a1	33 cd		 xor	 ecx, ebp
  003a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003a8	8b e5		 mov	 esp, ebp
  003aa	5d		 pop	 ebp
  003ab	c3		 ret	 0
?PetSkillShowType1@@YAXXZ ENDP				; PetSkillShowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initPetSkillWindowType1@@YAXPAD@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initPetSkillWindowType1@@YAXPAD@Z PROC			; initPetSkillWindowType1, COMDAT

; 5706 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 5707 : 	selShopSkillPetNo = atoi(data);

  00003	ff 75 08	 push	 DWORD PTR _data$[ebp]
  00006	e8 00 00 00 00	 call	 _atoi
  0000b	83 c4 04	 add	 esp, 4
  0000e	66 a3 00 00 00
	00		 mov	 WORD PTR ?selShopSkillPetNo@@3FA, ax ; selShopSkillPetNo

; 5708 : 	PetskillShpwWindowProcNo = 0;

  00014	33 c0		 xor	 eax, eax
  00016	66 a3 00 00 00
	00		 mov	 WORD PTR ?PetskillShpwWindowProcNo@@3FA, ax ; PetskillShpwWindowProcNo

; 5709 : }

  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?initPetSkillWindowType1@@YAXPAD@Z ENDP			; initPetSkillWindowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?profession_windows_2@@YAHXZ
_TEXT	SEGMENT
tv296 = -40						; size = 4
_name$1 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?profession_windows_2@@YAHXZ PROC			; profession_windows_2, COMDAT

; 9790 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 9791 : 	static int x, y, w, h;
; 9792 : 	static int btnId[2];
; 9793 : 	static char msg1[128];
; 9794 : 	int id;
; 9795 : 	int i;
; 9796 : 	int ret = 0;
; 9797 : 
; 9798 : 	if (skillShopWindow4ProcNo == 0)

  00010	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow4ProcNo@@3FA, 0 ; skillShopWindow4ProcNo
  00018	0f 85 e0 00 00
	00		 jne	 $LN5@profession

; 9799 : 	{
; 9800 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 9801 : 		{
; 9802 : 			btnId[i] = -2;
; 9803 : 		}
; 9804 : 
; 9805 : 		// ??????î
; 9806 : 		w = 8;
; 9807 : 		h = 2;
; 9808 : 		x = (640 - w * 64) / 2;
; 9809 : 		y = (456 - h * 48) / 2;
; 9810 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0001e	6a 01		 push	 1
  00020	6a 00		 push	 0
  00022	6a 02		 push	 2
  00024	6a 08		 push	 8
  00026	68 b4 00 00 00	 push	 180			; 000000b4H
  0002b	6a 40		 push	 64			; 00000040H
  0002d	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA, -2 ; fffffffeH
  00037	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  00041	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?w@?1??profession_windows_2@@YAHXZ@4HA, 8
  0004b	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??profession_windows_2@@YAHXZ@4HA, 2
  00055	c7 05 00 00 00
	00 40 00 00 00	 mov	 DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA, 64 ; 00000040H
  0005f	c7 05 00 00 00
	00 b4 00 00 00	 mov	 DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA, 180 ; 000000b4H
  00069	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00073	83 c4 18	 add	 esp, 24			; 00000018H

; 9811 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 9812 : 		x = ptActMenuWin->x;

  00076	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 9813 : 		y = ptActMenuWin->y;

  00079	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0007c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA, ecx

; 9814 : #endif
; 9815 : 
; 9816 : 		char name[32];
; 9817 : 		if (strlen(pc.freeName) > 0)

  00082	b9 81 00 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+129
  00087	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA, eax
  0008c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0008f	90		 npad	 1
$LL39@profession:
  00090	8a 01		 mov	 al, BYTE PTR [ecx]
  00092	41		 inc	 ecx
  00093	84 c0		 test	 al, al
  00095	75 f9		 jne	 SHORT $LL39@profession
  00097	2b ca		 sub	 ecx, edx
  00099	74 18		 je	 SHORT $LN6@profession

; 9818 : 		{
; 9819 : 			strcpy(name, pc.freeName);

  0009b	33 c9		 xor	 ecx, ecx
  0009d	0f 1f 00	 npad	 3
$LL22@profession:
  000a0	8a 81 81 00 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[ecx+129]
  000a6	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000a9	88 44 0d db	 mov	 BYTE PTR _name$1[ebp+ecx-1], al
  000ad	84 c0		 test	 al, al
  000af	75 ef		 jne	 SHORT $LL22@profession

; 9820 : 		}

  000b1	eb 1e		 jmp	 SHORT $LN7@profession
$LN6@profession:

; 9821 : 		else
; 9822 : 		{
; 9823 : 			strcpy(name, pc.name);

  000b3	33 c0		 xor	 eax, eax
  000b5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL23@profession:
  000c0	8a 88 70 00 00
	00		 mov	 cl, BYTE PTR ?pc@@3UPC@@A[eax+112]
  000c6	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000c9	88 4c 05 db	 mov	 BYTE PTR _name$1[ebp+eax-1], cl
  000cd	84 c9		 test	 cl, cl
  000cf	75 ef		 jne	 SHORT $LL23@profession
$LN7@profession:

; 9824 : 		}
; 9825 : 
; 9826 : 		sprintf(msg1, "è®©[%s]å°[%s]", name,

  000d1	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  000d8	6b c0 70	 imul	 eax, eax, 112
  000db	05 0c 00 00 00	 add	 eax, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A+12
  000e0	50		 push	 eax
  000e1	8d 45 dc	 lea	 eax, DWORD PTR _name$1[ebp]
  000e4	50		 push	 eax
  000e5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LCAELECA@?$DP?$FL?$CFs?$FN?$DP?$FL?$CFs?$FN@
  000ea	68 00 00 00 00	 push	 OFFSET ?msg1@?1??profession_windows_2@@YAHXZ@4PADA
  000ef	e8 00 00 00 00	 call	 _sprintf
  000f4	83 c4 10	 add	 esp, 16			; 00000010H

; 9827 : 			sealSkill[selShopSkillNo].name);
; 9828 : 
; 9829 : 		skillShopWindow4ProcNo++;

  000f7	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow4ProcNo@@3FA ; skillShopWindow4ProcNo
$LN5@profession:

; 9830 : 	}
; 9831 : 
; 9832 : 
; 9833 : 	if (ptActMenuWin != NULL)

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00103	56		 push	 esi
  00104	85 c0		 test	 eax, eax
  00106	0f 84 af 01 00
	00		 je	 $LN20@profession

; 9834 : 	{
; 9835 : 		id = -1;

  0010c	83 ce ff	 or	 esi, -1

; 9836 : 		if (ptActMenuWin->hp >= 1)

  0010f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00113	7c 11		 jl	 SHORT $LN9@profession

; 9837 : 		{
; 9838 : 			// ????î±î¶îî
; 9839 : 			id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00115	6a 02		 push	 2
  00117	68 00 00 00 00	 push	 OFFSET ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA
  0011c	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00121	83 c4 08	 add	 esp, 8
  00124	8b f0		 mov	 esi, eax
$LN9@profession:

; 9840 : 		}
; 9841 : 
; 9842 : 		// î??????î?????????????î¼??
; 9843 : 		if (CheckMenuFlag()
; 9844 : 			|| joy_trg[0] & JOY_ESC
; 9845 : 			|| actBtn == 1
; 9846 : 			|| menuBtn == 1
; 9847 : 			|| disconnectServerFlag == TRUE
; 9848 : 			|| wnCloseFlag == 1)

  00126	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0012b	85 c0		 test	 eax, eax
  0012d	0f 85 99 01 00
	00		 jne	 $LN11@profession
  00133	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0013d	0f 85 89 01 00
	00		 jne	 $LN11@profession
  00143	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0014b	0f 84 7b 01 00
	00		 je	 $LN11@profession
  00151	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00159	0f 84 6d 01 00
	00		 je	 $LN11@profession
  0015f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00166	0f 84 60 01 00
	00		 je	 $LN11@profession
  0016c	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00174	0f 84 52 01 00
	00		 je	 $LN11@profession

; 9852 : 		}
; 9853 : 
; 9854 : 
; 9855 : 		if (id >= 0)

  0017a	85 f6		 test	 esi, esi
  0017c	78 6d		 js	 SHORT $LN12@profession

; 9856 : 		{
; 9857 : 			if (id == 0)

  0017e	75 08		 jne	 SHORT $LN13@profession

; 9858 : 			{
; 9859 : 				ret = 1;

  00180	8d 70 01	 lea	 esi, DWORD PTR [eax+1]

; 9860 : 			}

  00183	e9 51 01 00 00	 jmp	 $LN40@profession
$LN13@profession:

; 9861 : 			else
; 9862 : 				if (id == 1)

  00188	83 fe 01	 cmp	 esi, 1
  0018b	75 2e		 jne	 SHORT $LN15@profession

; 9863 : 				{
; 9864 : 					ret = 2;

  0018d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00193	be 02 00 00 00	 mov	 esi, 2
  00198	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9878 : 			}
; 9879 : 			return ret;

  0019d	83 c4 04	 add	 esp, 4
  001a0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  001aa	8b c6		 mov	 eax, esi
  001ac	5e		 pop	 esi

; 9897 : }

  001ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b0	33 cd		 xor	 ecx, ebp
  001b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b7	8b e5		 mov	 esp, ebp
  001b9	5d		 pop	 ebp
  001ba	c3		 ret	 0
$LN15@profession:

; 9865 : 				}
; 9866 : 				else
; 9867 : 					if (id == 100)

  001bb	83 fe 64	 cmp	 esi, 100		; 00000064H
  001be	0f 84 10 01 00
	00		 je	 $LN37@profession

; 9870 : 					}
; 9871 : 
; 9872 : 			DeathAction(ptActMenuWin);

  001c4	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001ca	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001cf	83 c4 04	 add	 esp, 4

; 9873 : 			ptActMenuWin = NULL;
; 9874 : 			if (ret == 100
; 9875 : 				|| ret == 1)

  001d2	33 f6		 xor	 esi, esi

; 9878 : 			}
; 9879 : 			return ret;

  001d4	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, esi ; ptActMenuWin
  001da	8b c6		 mov	 eax, esi
  001dc	5e		 pop	 esi

; 9897 : }

  001dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e0	33 cd		 xor	 ecx, ebp
  001e2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001e7	8b e5		 mov	 esp, ebp
  001e9	5d		 pop	 ebp
  001ea	c3		 ret	 0
$LN12@profession:

; 9880 : 		}
; 9881 : 
; 9882 : 
; 9883 : 		if (ptActMenuWin->hp >= 1)

  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001f0	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001f4	0f 8c c1 00 00
	00		 jl	 $LN20@profession

; 9884 : 		{
; 9885 : 			// ?î?????
; 9886 : 			StockFontBuffer(x + 20, y + 20 + 0 * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA
  001ff	6a 00		 push	 0
  00201	68 00 00 00 00	 push	 OFFSET ?msg1@?1??profession_windows_2@@YAHXZ@4PADA
  00206	6a 00		 push	 0
  00208	83 c0 14	 add	 eax, 20			; 00000014H
  0020b	6a 01		 push	 1
  0020d	50		 push	 eax
  0020e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA
  00213	83 c0 14	 add	 eax, 20			; 00000014H
  00216	50		 push	 eax
  00217	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9887 : 				msg1, 0);
; 9888 : 			StockFontBuffer(x + 20, y + 20 + 1 * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  0021c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA
  00221	6a 00		 push	 0
  00223	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JCNGIDNP@?$LN?C?$MA?$NL?G?O?$LA?Z?$LN?$MA?$LE?O?$LB?n?$KD?$LP@
  00228	6a 00		 push	 0
  0022a	83 c0 28	 add	 eax, 40			; 00000028H
  0022d	6a 01		 push	 1
  0022f	50		 push	 eax
  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA
  00235	83 c0 14	 add	 eax, 20			; 00000014H
  00238	50		 push	 eax
  00239	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9889 : 				"ììíê² ìµëê¹ï¼", 0);
; 9890 : 
; 9891 : 			btnId[0] = StockDispBuffer(x + w * 64 / 3, y + 72, DISP_PRIO_IME3, CG_YES_BTN, 2);

  0023e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA
  00243	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??profession_windows_2@@YAHXZ@4HA
  00249	83 c0 48	 add	 eax, 72			; 00000048H
  0024c	6a 02		 push	 2
  0024e	68 ee 65 00 00	 push	 26094			; 000065eeH
  00253	6a 69		 push	 105			; 00000069H
  00255	50		 push	 eax
  00256	c1 e1 06	 shl	 ecx, 6
  00259	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  0025e	f7 e9		 imul	 ecx
  00260	8b c2		 mov	 eax, edx
  00262	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00265	03 c2		 add	 eax, edx
  00267	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA
  0026d	50		 push	 eax
  0026e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 9892 : 			btnId[1] = StockDispBuffer(x + w * 64 / 3 * 2, y + 72, DISP_PRIO_IME3, CG_NO_BTN, 2);

  00273	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??profession_windows_2@@YAHXZ@4HA
  00279	83 c4 44	 add	 esp, 68			; 00000044H
  0027c	83 c1 48	 add	 ecx, 72			; 00000048H
  0027f	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA, eax
  00284	b8 56 55 55 55	 mov	 eax, 1431655766		; 55555556H
  00289	6a 02		 push	 2
  0028b	68 ef 65 00 00	 push	 26095			; 000065efH
  00290	6a 69		 push	 105			; 00000069H
  00292	51		 push	 ecx
  00293	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??profession_windows_2@@YAHXZ@4HA
  00299	c1 e1 06	 shl	 ecx, 6
  0029c	f7 e9		 imul	 ecx
  0029e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_2@@YAHXZ@4HA
  002a3	8b ca		 mov	 ecx, edx
  002a5	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  002a8	03 ca		 add	 ecx, edx
  002aa	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002b3	83 c4 14	 add	 esp, 20			; 00000014H
  002b6	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??profession_windows_2@@YAHXZ@4PAHA+4, eax
$LN20@profession:

; 9893 : 		}
; 9894 : 	}
; 9895 : 
; 9896 : 	return ret;

  002bb	33 c0		 xor	 eax, eax
  002bd	5e		 pop	 esi

; 9897 : }

  002be	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c1	33 cd		 xor	 ecx, ebp
  002c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c8	8b e5		 mov	 esp, ebp
  002ca	5d		 pop	 ebp
  002cb	c3		 ret	 0
$LN11@profession:

; 9849 : 		{
; 9850 : 			id = 100;
; 9851 : 			wnCloseFlag = 0;

  002cc	33 c0		 xor	 eax, eax
  002ce	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN37@profession:

; 9868 : 					{
; 9869 : 						ret = 100;

  002d4	be 64 00 00 00	 mov	 esi, 100		; 00000064H
$LN40@profession:

; 9876 : 			{
; 9877 : 				windowTypeWN = -1;

  002d9	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  002df	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 9897 : }

  002e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e7	83 c4 04	 add	 esp, 4
  002ea	8b c6		 mov	 eax, esi
  002ec	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002f6	33 cd		 xor	 ecx, ebp
  002f8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00302	5e		 pop	 esi
  00303	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00308	8b e5		 mov	 esp, ebp
  0030a	5d		 pop	 ebp
  0030b	c3		 ret	 0
?profession_windows_2@@YAHXZ ENDP			; profession_windows_2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?profession_windows_1@@YAHXZ
_TEXT	SEGMENT
_nextBtnGraNo$ = -292					; size = 8
_prevBtnGraNo$ = -284					; size = 8
tv1116 = -276						; size = 4
_id$1$ = -276						; size = 4
_focusId$1$ = -272					; size = 4
$T1 = -268						; size = 4
_selId$1$ = -268					; size = 4
$T2 = -264						; size = 4
_pushId$1$ = -264					; size = 4
_tmsg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?profession_windows_1@@YAHXZ PROC			; profession_windows_1, COMDAT

; 9560 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 9561 : 	static int x, y, w, h;
; 9562 : 	static int btnId[3];
; 9563 : 	int id;
; 9564 : 	int pushId;
; 9565 : 	int focusId;
; 9566 : 	int selId;
; 9567 : 	int i, j;
; 9568 : 	int ret = 0;
; 9569 : 	char tmsg[256];
; 9570 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 9571 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 9572 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 9573 : 	int color;
; 9574 : 	int prevBtn, nextBtn;
; 9575 : 	int x1, y1, x2, y2;
; 9576 : 
; 9577 : 	if (skillShopWindow1ProcNo == 0)

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?skillShopWindow1ProcNo@@3FA, 0 ; skillShopWindow1ProcNo
  0001b	c7 85 e4 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp], 26180 ; 00006644H
  00025	c7 85 e8 fe ff
	ff 45 66 00 00	 mov	 DWORD PTR _prevBtnGraNo$[ebp+4], 26181 ; 00006645H
  0002f	c7 85 dc fe ff
	ff 46 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp], 26182 ; 00006646H
  00039	c7 85 e0 fe ff
	ff 47 66 00 00	 mov	 DWORD PTR _nextBtnGraNo$[ebp+4], 26183 ; 00006647H
  00043	0f 85 80 00 00
	00		 jne	 $LN85@profession

; 9578 : 	{
; 9579 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 9580 : 		{
; 9581 : 			btnId[i] = -2;
; 9582 : 		}
; 9583 : 
; 9584 : 		w = 432;
; 9585 : 		h = 428;
; 9586 : 		x = (640 - w) / 2;
; 9587 : 		y = (456 - h) / 2;
; 9588 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, -1);

  00049	6a ff		 push	 -1
  0004b	6a 00		 push	 0
  0004d	68 ac 01 00 00	 push	 428			; 000001acH
  00052	68 b0 01 00 00	 push	 432			; 000001b0H
  00057	6a 0e		 push	 14			; 0000000eH
  00059	6a 68		 push	 104			; 00000068H
  0005b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA, -2 ; fffffffeH
  00065	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0006f	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA+8, -2 ; fffffffeH
  00079	c7 05 00 00 00
	00 b0 01 00 00	 mov	 DWORD PTR ?w@?1??profession_windows_1@@YAHXZ@4HA, 432 ; 000001b0H
  00083	c7 05 00 00 00
	00 ac 01 00 00	 mov	 DWORD PTR ?h@?1??profession_windows_1@@YAHXZ@4HA, 428 ; 000001acH
  0008d	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA, 104 ; 00000068H
  00097	c7 05 00 00 00
	00 0e 00 00 00	 mov	 DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA, 14 ; 0000000eH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	83 c4 18	 add	 esp, 24			; 00000018H

; 9589 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 9590 : 		x = ptActMenuWin->x;

  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA, ecx

; 9591 : 		y = ptActMenuWin->y;

  000b7	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]

; 9592 : #endif
; 9593 : 		skillShopWindow1ProcNo++;

  000ba	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?skillShopWindow1ProcNo@@3FA ; skillShopWindow1ProcNo
  000c1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA, ecx
  000c7	eb 05		 jmp	 SHORT $LN17@profession
$LN85@profession:

; 9561 : 	static int x, y, w, h;
; 9562 : 	static int btnId[3];
; 9563 : 	int id;
; 9564 : 	int pushId;
; 9565 : 	int focusId;
; 9566 : 	int selId;
; 9567 : 	int i, j;
; 9568 : 	int ret = 0;
; 9569 : 	char tmsg[256];
; 9570 : 	int prevBtnGraNo[] = { CG_PREV_BTN, CG_PREV_BTN_DOWN };
; 9571 : 	int nextBtnGraNo[] = { CG_NEXT_BTN, CG_NEXT_BTN_DOWN };
; 9572 : 	int itemColor[] = { FONT_PAL_WHITE, FONT_PAL_GRAY, FONT_PAL_RED };
; 9573 : 	int color;
; 9574 : 	int prevBtn, nextBtn;
; 9575 : 	int x1, y1, x2, y2;
; 9576 : 
; 9577 : 	if (skillShopWindow1ProcNo == 0)

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN17@profession:
  000ce	53		 push	 ebx
  000cf	56		 push	 esi
  000d0	57		 push	 edi

; 9594 : 	}
; 9595 : 
; 9596 : 
; 9597 : 	if (ptActMenuWin != NULL)

  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 34 05 00
	00		 je	 $LN47@profession

; 9598 : 	{
; 9599 : 		id = -1;

  000d9	83 cb ff	 or	 ebx, -1

; 9600 : 		pushId = -1;

  000dc	0b cb		 or	 ecx, ebx

; 9601 : 		focusId = -1;

  000de	89 9d f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], ebx

; 9602 : 		selId = -1;

  000e4	0b f3		 or	 esi, ebx
  000e6	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx

; 9603 : 
; 9604 : 		if (ptActMenuWin->hp >= 1)

  000ec	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000f0	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi
  000f6	0f 8c ca 00 00
	00		 jl	 $LN6@profession

; 9605 : 		{
; 9606 : 			id = selRepGraId(btnId, sizeof(btnId) / sizeof(int));

  000fc	6a 03		 push	 3
  000fe	68 00 00 00 00	 push	 OFFSET ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA
  00103	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId

; 9607 : 			pushId = pushGraId(btnId, sizeof(btnId) / sizeof(int));

  00108	6a 03		 push	 3
  0010a	68 00 00 00 00	 push	 OFFSET ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA
  0010f	89 85 ec fe ff
	ff		 mov	 DWORD PTR _id$1$[ebp], eax
  00115	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId

; 9608 : 
; 9609 : 			j = shopWondow2Page * MAX_SKILL_SHOP_SKILL;

  0011a	0f bf 35 00 00
	00 00		 movsx	 esi, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00121	83 c4 10	 add	 esp, 16			; 00000010H
  00124	c1 e6 03	 shl	 esi, 3
  00127	33 db		 xor	 ebx, ebx
  00129	6b fe 70	 imul	 edi, esi, 112
  0012c	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], eax
  00132	81 c7 00 00 00
	00		 add	 edi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
$LL7@profession:

; 9611 : 			{
; 9612 : 				if (sealSkill[j + i].name[0] != '\0')

  00138	80 7f 0c 00	 cmp	 BYTE PTR [edi+12], 0
  0013c	74 67		 je	 SHORT $LN5@profession

; 9613 : 				{
; 9614 : 					x1 = x + 32;
; 9615 : 					y1 = y + i * 21 + 116;

  0013e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00144	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  0014a	83 c1 74	 add	 ecx, 116		; 00000074H
  0014d	03 cb		 add	 ecx, ebx
  0014f	83 c2 20	 add	 edx, 32			; 00000020H

; 9616 : 					x2 = x1 + 372;
; 9617 : 					y2 = y1 + 20;
; 9618 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00152	6a 6b		 push	 107			; 0000006bH
  00154	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00157	50		 push	 eax
  00158	8d 82 74 01 00
	00		 lea	 eax, DWORD PTR [edx+372]
  0015e	50		 push	 eax
  0015f	51		 push	 ecx
  00160	52		 push	 edx
  00161	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00166	83 c4 14	 add	 esp, 20			; 00000014H
  00169	85 c0		 test	 eax, eax
  0016b	74 38		 je	 SHORT $LN5@profession

; 9619 : 					{
; 9620 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  0016d	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00174	74 29		 je	 SHORT $LN24@profession

; 9621 : 						{
; 9622 : 							if (sealSkill[j + i].price <= pc.gold)

  00176	8b 07		 mov	 eax, DWORD PTR [edi]
  00178	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  0017e	7f 08		 jg	 SHORT $LN23@profession

; 9623 : 							{
; 9624 : 								selId = j + i;

  00180	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _selId$1$[ebp], esi

; 9625 : 							}

  00186	eb 17		 jmp	 SHORT $LN24@profession
$LN23@profession:

; 9626 : 							else
; 9627 : 							{
; 9628 : 								play_se(220, 320, 240);

  00188	68 f0 00 00 00	 push	 240			; 000000f0H
  0018d	68 40 01 00 00	 push	 320			; 00000140H
  00192	68 dc 00 00 00	 push	 220			; 000000dcH
  00197	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0019c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN24@profession:

; 9629 : 							}
; 9630 : 						}
; 9631 : 						focusId = j + i;

  0019f	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR _focusId$1$[ebp], esi
$LN5@profession:

; 9610 : 			for (i = 0; i < MAX_SKILL_SHOP_SKILL; i++)

  001a5	83 c3 15	 add	 ebx, 21			; 00000015H
  001a8	83 c7 70	 add	 edi, 112		; 00000070H
  001ab	46		 inc	 esi
  001ac	81 fb a8 00 00
	00		 cmp	 ebx, 168		; 000000a8H
  001b2	7c 84		 jl	 SHORT $LL7@profession
  001b4	8b 9d ec fe ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
  001ba	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _selId$1$[ebp]
  001c0	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
$LN6@profession:

; 9632 : 					}
; 9633 : 				}
; 9634 : 			}
; 9635 : 		}
; 9636 : 
; 9637 : 		if (joy_con[0] & JOY_A)

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  001cb	a9 00 04 00 00	 test	 eax, 1024		; 00000400H
  001d0	74 18		 je	 SHORT $LN26@profession

; 9638 : 		{
; 9639 : 			pushId = 0;

  001d2	33 c9		 xor	 ecx, ecx

; 9640 : 			if (joy_auto[0] & JOY_A)

  001d4	f7 05 00 00 00
	00 00 04 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 1024 ; 00000400H
  001de	89 8d f8 fe ff
	ff		 mov	 DWORD PTR _pushId$1$[ebp], ecx
  001e4	74 08		 je	 SHORT $LN77@profession

; 9641 : 			{
; 9642 : 				id = 0;

  001e6	33 db		 xor	 ebx, ebx

; 9643 : 			}
; 9644 : 		}
; 9645 : 		if (pushId == 0)

  001e8	eb 08		 jmp	 SHORT $LN78@profession
$LN26@profession:
  001ea	85 c9		 test	 ecx, ecx
  001ec	75 50		 jne	 SHORT $LN27@profession
$LN77@profession:

; 9646 : 		{
; 9647 : 			prevBtn = 1;
; 9648 : 			if (id == 0)

  001ee	85 db		 test	 ebx, ebx
  001f0	75 31		 jne	 SHORT $LN87@profession
$LN78@profession:

; 9649 : 			{
; 9650 : 				if (shopWondow2Page > 0)

  001f2	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  001f9	66 85 d2	 test	 dx, dx
  001fc	7e 2c		 jle	 SHORT $LN30@profession

; 9651 : 				{
; 9652 : 					shopWondow2Page--;
; 9653 : 					play_se(217, 320, 240);

  001fe	68 f0 00 00 00	 push	 240			; 000000f0H
  00203	66 4a		 dec	 dx
  00205	68 40 01 00 00	 push	 320			; 00000140H
  0020a	68 d9 00 00 00	 push	 217			; 000000d9H
  0020f	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  00216	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0021b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?joy_con@@3PAKA
  00220	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN87@profession:

; 9654 : 				}
; 9655 : 			}
; 9656 : 		}

  00223	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN30@profession:
  0022a	8b 8d f8 fe ff
	ff		 mov	 ecx, DWORD PTR _pushId$1$[ebp]
  00230	8d bd e8 fe ff
	ff		 lea	 edi, DWORD PTR _prevBtnGraNo$[ebp+4]
  00236	89 bd f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], edi
  0023c	eb 13		 jmp	 SHORT $LN28@profession
$LN27@profession:

; 9657 : 		else
; 9658 : 		{
; 9659 : 			prevBtn = 0;

  0023e	8d 95 e4 fe ff
	ff		 lea	 edx, DWORD PTR _prevBtnGraNo$[ebp]
  00244	89 95 f4 fe ff
	ff		 mov	 DWORD PTR $T1[ebp], edx
  0024a	66 8b 15 00 00
	00 00		 mov	 dx, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
$LN28@profession:

; 9660 : 		}
; 9661 : 
; 9662 : 		if (joy_con[0] & JOY_B)

  00251	a9 00 01 00 00	 test	 eax, 256		; 00000100H
  00256	74 13		 je	 SHORT $LN32@profession

; 9663 : 		{
; 9664 : 			pushId = 1;
; 9665 : 			if (joy_auto[0] & JOY_B)

  00258	f7 05 00 00 00
	00 00 01 00 00	 test	 DWORD PTR ?joy_auto@@3PAKA, 256 ; 00000100H
  00262	74 0c		 je	 SHORT $LN79@profession

; 9666 : 			{
; 9667 : 				id = 1;

  00264	bb 01 00 00 00	 mov	 ebx, 1

; 9668 : 			}
; 9669 : 		}
; 9670 : 		if (pushId == 1)

  00269	eb 0a		 jmp	 SHORT $LN80@profession
$LN32@profession:
  0026b	83 f9 01	 cmp	 ecx, 1
  0026e	75 42		 jne	 SHORT $LN33@profession
$LN79@profession:

; 9671 : 		{
; 9672 : 			nextBtn = 1;
; 9673 : 			if (id == 1)

  00270	83 fb 01	 cmp	 ebx, 1
  00273	75 2f		 jne	 SHORT $LN36@profession
$LN80@profession:

; 9674 : 			{
; 9675 : 				if (shopWondow2Page + 1 < shopWondow2MaxPage)

  00275	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  0027c	0f bf ca	 movsx	 ecx, dx
  0027f	41		 inc	 ecx
  00280	3b c8		 cmp	 ecx, eax
  00282	7d 20		 jge	 SHORT $LN36@profession

; 9676 : 				{
; 9677 : 					shopWondow2Page++;
; 9678 : 					play_se(217, 320, 240);

  00284	68 f0 00 00 00	 push	 240			; 000000f0H
  00289	66 42		 inc	 dx
  0028b	68 40 01 00 00	 push	 320			; 00000140H
  00290	68 d9 00 00 00	 push	 217			; 000000d9H
  00295	66 89 15 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, dx ; shopWondow2Page
  0029c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002a1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN36@profession:

; 9679 : 				}
; 9680 : 			}
; 9681 : 		}

  002a4	8d bd e0 fe ff
	ff		 lea	 edi, DWORD PTR _nextBtnGraNo$[ebp+4]
  002aa	89 bd f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], edi
  002b0	eb 0c		 jmp	 SHORT $LN34@profession
$LN33@profession:

; 9682 : 		else
; 9683 : 		{
; 9684 : 			nextBtn = 0;

  002b2	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _nextBtnGraNo$[ebp]
  002b8	89 85 f8 fe ff
	ff		 mov	 DWORD PTR $T2[ebp], eax
$LN34@profession:

; 9685 : 		}
; 9686 : 
; 9687 : 		if (CheckMenuFlag()
; 9688 : 			|| joy_trg[0] & JOY_ESC
; 9689 : 			|| actBtn == 1
; 9690 : 			|| menuBtn == 1
; 9691 : 			|| disconnectServerFlag == TRUE
; 9692 : 			|| wnCloseFlag == 1)

  002be	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002c3	85 c0		 test	 eax, eax
  002c5	0f 85 bc 03 00
	00		 jne	 $LN38@profession
  002cb	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002d5	0f 85 ac 03 00
	00		 jne	 $LN38@profession
  002db	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  002e3	0f 84 9e 03 00
	00		 je	 $LN38@profession
  002e9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  002f1	0f 84 90 03 00
	00		 je	 $LN38@profession
  002f7	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  002fe	0f 84 83 03 00
	00		 je	 $LN38@profession
  00304	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0030c	0f 84 75 03 00
	00		 je	 $LN38@profession

; 9696 : 		}
; 9697 : 
; 9698 : 		if (id >= 2
; 9699 : 			|| selId >= 0)

  00312	83 fb 02	 cmp	 ebx, 2
  00315	0f 8d 05 03 00
	00		 jge	 $LN40@profession
  0031b	85 f6		 test	 esi, esi
  0031d	0f 89 2d 03 00
	00		 jns	 $LN43@profession

; 9725 : 		}
; 9726 : 
; 9727 : 		if (ptActMenuWin->hp >= 1)

  00323	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00328	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0032c	0f 8c db 02 00
	00		 jl	 $LN47@profession

; 9728 : 		{
; 9729 : 			int xx;
; 9730 : 
; 9731 : 			xx = (w - strlen(ProfessionShopTitle) / 2 * 17) / 2;

  00332	b9 00 00 00 00	 mov	 ecx, OFFSET ?ProfessionShopTitle@@3PADA ; ProfessionShopTitle
  00337	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0033a	66 0f 1f 44 00
	00		 npad	 6
$LL83@profession:
  00340	8a 01		 mov	 al, BYTE PTR [ecx]
  00342	41		 inc	 ecx
  00343	84 c0		 test	 al, al
  00345	75 f9		 jne	 SHORT $LL83@profession

; 9732 : 			StockFontBuffer(x + xx, y + 18, FONT_PRIO_FRONT, FONT_PAL_WHITE, ProfessionShopTitle, 0);

  00347	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  0034c	2b ca		 sub	 ecx, edx
  0034e	6a 00		 push	 0
  00350	68 00 00 00 00	 push	 OFFSET ?ProfessionShopTitle@@3PADA ; ProfessionShopTitle
  00355	d1 e9		 shr	 ecx, 1
  00357	83 c0 12	 add	 eax, 18			; 00000012H
  0035a	6a 00		 push	 0
  0035c	6a 01		 push	 1
  0035e	50		 push	 eax
  0035f	8b c1		 mov	 eax, ecx
  00361	c1 e0 04	 shl	 eax, 4
  00364	03 c1		 add	 eax, ecx
  00366	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??profession_windows_1@@YAHXZ@4HA
  0036c	2b c8		 sub	 ecx, eax
  0036e	d1 e9		 shr	 ecx, 1
  00370	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00376	51		 push	 ecx
  00377	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0037c	83 c4 18	 add	 esp, 24			; 00000018H
  0037f	bf 00 00 00 00	 mov	 edi, OFFSET ?ProfessionShopMsg@@3PAY0CN@DA ; ProfessionShopMsg
  00384	33 f6		 xor	 esi, esi
  00386	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  00389	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@profession:

; 9733 : 
; 9734 : 			for (i = 0; i < sizeof(ProfessionShopMsg) / sizeof(ProfessionShopMsg[0]); i++)
; 9735 : 			{
; 9736 : 				if (ProfessionShopMsg[0] != '\0')
; 9737 : 				{
; 9738 : 					StockFontBuffer(x + 18, y + 48 + i * 18, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00390	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00395	6a 00		 push	 0
  00397	57		 push	 edi
  00398	83 c0 30	 add	 eax, 48			; 00000030H
  0039b	6a 00		 push	 0
  0039d	03 c6		 add	 eax, esi
  0039f	6a 01		 push	 1
  003a1	50		 push	 eax
  003a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  003a7	83 c0 12	 add	 eax, 18			; 00000012H
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003b0	83 c4 18	 add	 esp, 24			; 00000018H
  003b3	83 c7 2d	 add	 edi, 45			; 0000002dH
  003b6	83 c6 12	 add	 esi, 18			; 00000012H
  003b9	83 eb 01	 sub	 ebx, 1
  003bc	75 d2		 jne	 SHORT $LL10@profession

; 9739 : 						ProfessionShopMsg[i], 0);
; 9740 : 				}
; 9741 : 			}
; 9742 : 			sprintf(tmsg, "ì¤í¤ %8dï¼³", pc.gold);

  003be	ff 35 60 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+96
  003c4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003ca	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OCLOEHGJ@?$LN?$LK?E?f?5?$CF8d?$KD?S@
  003cf	50		 push	 eax
  003d0	e8 00 00 00 00	 call	 _sprintf

; 9743 : 			StockFontBuffer(x + 244, y + 84, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  003d5	53		 push	 ebx
  003d6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  003dc	50		 push	 eax
  003dd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  003e2	53		 push	 ebx
  003e3	83 c0 54	 add	 eax, 84			; 00000054H
  003e6	6a 01		 push	 1
  003e8	50		 push	 eax
  003e9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  003ee	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9744 : 
; 9745 : 			// é¡µî?î?
; 9746 : 			btnId[0] = StockDispBuffer(x + 32, y + 100, DISP_PRIO_IME3, prevBtnGraNo[prevBtn], 2);

  003f9	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  003ff	6a 02		 push	 2
  00401	ff 30		 push	 DWORD PTR [eax]
  00403	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00408	83 c0 64	 add	 eax, 100		; 00000064H
  0040b	6a 69		 push	 105			; 00000069H
  0040d	50		 push	 eax
  0040e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00413	83 c0 20	 add	 eax, 32			; 00000020H
  00416	50		 push	 eax
  00417	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0041c	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA, eax

; 9747 : 			btnId[1] = StockDispBuffer(x + 200, y + 100, DISP_PRIO_IME3, nextBtnGraNo[nextBtn], 2);

  00421	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR $T2[ebp]
  00427	6a 02		 push	 2
  00429	ff 30		 push	 DWORD PTR [eax]
  0042b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00430	83 c0 64	 add	 eax, 100		; 00000064H
  00433	6a 69		 push	 105			; 00000069H
  00435	50		 push	 eax
  00436	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  0043b	05 c8 00 00 00	 add	 eax, 200		; 000000c8H
  00440	50		 push	 eax
  00441	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00446	83 c4 4c	 add	 esp, 76			; 0000004cH
  00449	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA+4, eax

; 9748 : 			sprintf(tmsg, "%2d/%2d é¡µ", shopWondow2Page + 1, shopWondow2MaxPage);

  0044e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00455	50		 push	 eax
  00456	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  0045d	40		 inc	 eax
  0045e	50		 push	 eax
  0045f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00465	68 00 00 00 00	 push	 OFFSET ??_C@_09IAMFCDJG@?$CF2d?1?$CF2d?5?$DP@
  0046a	50		 push	 eax
  0046b	e8 00 00 00 00	 call	 _sprintf

; 9749 : 			StockFontBuffer(x + 66, y + 92, FONT_PRIO_FRONT, FONT_PAL_WHITE, tmsg, 0);

  00470	53		 push	 ebx
  00471	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  00477	50		 push	 eax
  00478	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  0047d	53		 push	 ebx
  0047e	83 c0 5c	 add	 eax, 92			; 0000005cH
  00481	6a 01		 push	 1
  00483	50		 push	 eax
  00484	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00489	83 c0 42	 add	 eax, 66			; 00000042H
  0048c	50		 push	 eax
  0048d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9750 : 
; 9751 : 			j = shopWondow2Page * MAX_SKILL_SHOP_SKILL;

  00492	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2Page@@3FA ; shopWondow2Page
  00499	83 c4 28	 add	 esp, 40			; 00000028H
  0049c	69 d8 80 03 00
	00		 imul	 ebx, eax, 896
  004a2	33 ff		 xor	 edi, edi
  004a4	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
  004aa	66 0f 1f 44 00
	00		 npad	 6
$LL13@profession:

; 9753 : 				if (strlen(sealSkill[j + i].name) == 0)

  004b0	8d 53 0c	 lea	 edx, DWORD PTR [ebx+12]
  004b3	8b c2		 mov	 eax, edx
  004b5	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL84@profession:
  004b8	8a 08		 mov	 cl, BYTE PTR [eax]
  004ba	40		 inc	 eax
  004bb	84 c9		 test	 cl, cl
  004bd	75 f9		 jne	 SHORT $LL84@profession
  004bf	2b c6		 sub	 eax, esi
  004c1	74 6e		 je	 SHORT $LN11@profession

; 9754 : 					continue;
; 9755 : 
; 9756 : 				color = itemColor[0];
; 9757 : 
; 9758 : 				if (sealSkill[j + i].price > pc.gold) {

  004c3	8b 03		 mov	 eax, DWORD PTR [ebx]
  004c5	33 f6		 xor	 esi, esi
  004c7	3b 05 60 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+96
  004cd	b8 07 00 00 00	 mov	 eax, 7

; 9759 : 					color = itemColor[1];
; 9760 : 				}
; 9761 : 				StockFontBuffer(x + 34, y + 118 + i * 21, FONT_PRIO_FRONT, color, sealSkill[j + i].name, 0);

  004d2	6a 00		 push	 0
  004d4	0f 4f f0	 cmovg	 esi, eax
  004d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  004dc	52		 push	 edx
  004dd	83 c0 76	 add	 eax, 118		; 00000076H
  004e0	56		 push	 esi
  004e1	03 c7		 add	 eax, edi
  004e3	6a 01		 push	 1
  004e5	50		 push	 eax
  004e6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  004eb	83 c0 22	 add	 eax, 34			; 00000022H
  004ee	50		 push	 eax
  004ef	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 9762 : 				sprintf(tmsg, "%8dï¼³", sealSkill[j + i].price);

  004f4	ff 33		 push	 DWORD PTR [ebx]
  004f6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  004fc	68 00 00 00 00	 push	 OFFSET ??_C@_05ENGCCMCP@?$CF8d?$KD?S@
  00501	50		 push	 eax
  00502	e8 00 00 00 00	 call	 _sprintf

; 9763 : 				StockFontBuffer(x + 312, y + 118 + i * 21, FONT_PRIO_FRONT, color, tmsg, 0);

  00507	6a 00		 push	 0
  00509	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _tmsg$[ebp]
  0050f	50		 push	 eax
  00510	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00515	83 c0 76	 add	 eax, 118		; 00000076H
  00518	56		 push	 esi
  00519	03 c7		 add	 eax, edi
  0051b	6a 01		 push	 1
  0051d	50		 push	 eax
  0051e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00523	05 38 01 00 00	 add	 eax, 312		; 00000138H
  00528	50		 push	 eax
  00529	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0052e	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN11@profession:

; 9752 : 			for (i = 0; i < MAX_SKILL_SHOP_SKILL; i++) {

  00531	83 c7 15	 add	 edi, 21			; 00000015H
  00534	83 c3 70	 add	 ebx, 112		; 00000070H
  00537	81 ff a8 00 00
	00		 cmp	 edi, 168		; 000000a8H
  0053d	0f 8c 6d ff ff
	ff		 jl	 $LL13@profession

; 9764 : 			}
; 9765 : 
; 9766 : 			if (focusId >= 0)

  00543	8b 85 f0 fe ff
	ff		 mov	 eax, DWORD PTR _focusId$1$[ebp]
  00549	85 c0		 test	 eax, eax
  0054b	78 63		 js	 SHORT $LN15@profession

; 9767 : 			{
; 9768 : 				// ç§ICON
; 9769 : 				StockDispBuffer(x + 58, y + 340, DISP_PRIO_IME3, sealSkill[focusId].icon, 0);

  0054d	6b f0 70	 imul	 esi, eax, 112
  00550	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00555	6a 00		 push	 0
  00557	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0055c	ff b6 04 00 00
	00		 push	 DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[esi+4]
  00562	6a 69		 push	 105			; 00000069H
  00564	50		 push	 eax
  00565	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  0056a	83 c0 3a	 add	 eax, 58			; 0000003aH
  0056d	50		 push	 eax
  0056e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00573	83 c4 14	 add	 esp, 20			; 00000014H
  00576	8d b6 25 00 00
	00		 lea	 esi, DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[esi+37]
  0057c	33 ff		 xor	 edi, edi
  0057e	66 90		 npad	 2
$LL16@profession:

; 9770 : 
; 9771 : 				for (i = 0; i < sizeof(sealSkill[0].info) / sizeof(sealSkill[0].info[0]); i++)
; 9772 : 				{
; 9773 : 					StockFontBuffer(x + 120, y + 308 + i * 20, FONT_PRIO_FRONT, FONT_PAL_WHITE,

  00580	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  00585	6a 00		 push	 0
  00587	56		 push	 esi
  00588	05 34 01 00 00	 add	 eax, 308		; 00000134H
  0058d	6a 00		 push	 0
  0058f	03 c7		 add	 eax, edi
  00591	6a 01		 push	 1
  00593	50		 push	 eax
  00594	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00599	83 c0 78	 add	 eax, 120		; 00000078H
  0059c	50		 push	 eax
  0059d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005a2	83 c7 14	 add	 edi, 20			; 00000014H
  005a5	83 c4 18	 add	 esp, 24			; 00000018H
  005a8	83 c6 19	 add	 esi, 25			; 00000019H
  005ab	83 ff 3c	 cmp	 edi, 60			; 0000003cH
  005ae	72 d0		 jb	 SHORT $LL16@profession
$LN15@profession:

; 9774 : 						sealSkill[focusId].info[i], 0);
; 9775 : 
; 9776 : 				}
; 9777 : 			}
; 9778 : 
; 9779 : 			btnId[2] = StockDispBuffer(x + 216, y + 402, DISP_PRIO_IME3, CG_EXIT_BTN, 2);

  005b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  005b5	6a 02		 push	 2
  005b7	68 f0 65 00 00	 push	 26096			; 000065f0H
  005bc	05 92 01 00 00	 add	 eax, 402		; 00000192H
  005c1	6a 69		 push	 105			; 00000069H
  005c3	50		 push	 eax
  005c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  005c9	05 d8 00 00 00	 add	 eax, 216		; 000000d8H
  005ce	50		 push	 eax
  005cf	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005d4	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??profession_windows_1@@YAHXZ@4PAHA+8, eax

; 9780 : 
; 9781 : 			StockDispBuffer(x + w / 2, y + h / 2, DISP_PRIO_MENU, CG_SKILLSHOP_WIN, 1);

  005d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??profession_windows_1@@YAHXZ@4HA
  005de	99		 cdq
  005df	2b c2		 sub	 eax, edx
  005e1	6a 01		 push	 1
  005e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_SKILLSHOP_WIN@@3HA ; CG_SKILLSHOP_WIN
  005e9	d1 f8		 sar	 eax, 1
  005eb	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??profession_windows_1@@YAHXZ@4HA
  005f1	6a 68		 push	 104			; 00000068H
  005f3	50		 push	 eax
  005f4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??profession_windows_1@@YAHXZ@4HA
  005f9	99		 cdq
  005fa	2b c2		 sub	 eax, edx
  005fc	d1 f8		 sar	 eax, 1
  005fe	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??profession_windows_1@@YAHXZ@4HA
  00604	50		 push	 eax
  00605	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0060a	83 c4 28	 add	 esp, 40			; 00000028H
$LN47@profession:

; 9782 : 		}
; 9783 : 	}
; 9784 : 
; 9785 : 	return ret;
; 9786 : }

  0060d	5f		 pop	 edi
  0060e	5e		 pop	 esi
  0060f	33 c0		 xor	 eax, eax
  00611	5b		 pop	 ebx
  00612	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00615	33 cd		 xor	 ecx, ebp
  00617	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0061c	8b e5		 mov	 esp, ebp
  0061e	5d		 pop	 ebp
  0061f	c3		 ret	 0
$LN40@profession:

; 9700 : 		{
; 9701 : 			if (id == 2)

  00620	75 29		 jne	 SHORT $LN41@profession

; 9702 : 			{
; 9703 : 				ret = 1;
; 9704 : 				play_se(203, 320, 240);

  00622	68 f0 00 00 00	 push	 240			; 000000f0H
  00627	68 40 01 00 00	 push	 320			; 00000140H
  0062c	68 cb 00 00 00	 push	 203			; 000000cbH
  00631	be 01 00 00 00	 mov	 esi, 1
  00636	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0063b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00641	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00646	83 c4 10	 add	 esp, 16			; 00000010H

; 9705 : 			}

  00649	eb 57		 jmp	 SHORT $LN46@profession
$LN41@profession:

; 9706 : 			else
; 9707 : 				if (id == 100)

  0064b	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0064e	74 3f		 je	 SHORT $LN81@profession
$LN43@profession:

; 9710 : 				}
; 9711 : 				else
; 9712 : 				{
; 9713 : 					selShopSkillNo = selId;
; 9714 : 					ret = 2;

  00650	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00656	66 89 35 00 00
	00 00		 mov	 WORD PTR ?selShopSkillNo@@3FA, si ; selShopSkillNo
  0065d	be 02 00 00 00	 mov	 esi, 2
  00662	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00667	83 c4 04	 add	 esp, 4

; 9715 : 				}
; 9716 : 
; 9717 : 			DeathAction(ptActMenuWin);
; 9718 : 			ptActMenuWin = NULL;
; 9719 : 			if (ret == 100
; 9720 : 				|| ret == 1)
; 9721 : 			{
; 9722 : 				windowTypeWN = -1;
; 9723 : 			}
; 9724 : 			return ret;

  0066a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00674	8b c6		 mov	 eax, esi
  00676	5f		 pop	 edi

; 9782 : 		}
; 9783 : 	}
; 9784 : 
; 9785 : 	return ret;
; 9786 : }

  00677	5e		 pop	 esi
  00678	5b		 pop	 ebx
  00679	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0067c	33 cd		 xor	 ecx, ebp
  0067e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00683	8b e5		 mov	 esp, ebp
  00685	5d		 pop	 ebp
  00686	c3		 ret	 0
$LN38@profession:

; 9693 : 		{
; 9694 : 			id = 100;
; 9695 : 			wnCloseFlag = 0;

  00687	33 c0		 xor	 eax, eax
  00689	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN81@profession:

; 9708 : 				{
; 9709 : 					ret = 100;

  0068f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00695	be 64 00 00 00	 mov	 esi, 100		; 00000064H
  0069a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0069f	83 c4 04	 add	 esp, 4
$LN46@profession:

; 9782 : 		}
; 9783 : 	}
; 9784 : 
; 9785 : 	return ret;
; 9786 : }

  006a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006a5	8b c6		 mov	 eax, esi
  006a7	5f		 pop	 edi
  006a8	5e		 pop	 esi
  006a9	33 cd		 xor	 ecx, ebp
  006ab	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  006b5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  006bf	5b		 pop	 ebx
  006c0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006c5	8b e5		 mov	 esp, ebp
  006c7	5d		 pop	 ebp
  006c8	c3		 ret	 0
?profession_windows_1@@YAHXZ ENDP			; profession_windows_1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?profession_windows@@YAXXZ
_TEXT	SEGMENT
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?profession_windows@@YAXXZ PROC				; profession_windows, COMDAT

; 9509 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 9510 : 	int ret;
; 9511 : 
; 9512 : 	if (skillShopWindowProcNo == 0)

  00013	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00019	66 85 c0	 test	 ax, ax
  0001c	75 2d		 jne	 SHORT $LN2@profession

; 9513 : 	{
; 9514 : 		initSkillShopWindow1();

  0001e	e8 00 00 00 00	 call	 ?initSkillShopWindow1@@YAXXZ ; initSkillShopWindow1

; 9515 : 		skillShopWindowProcNo++;
; 9516 : 		play_se(202, 320, 240);

  00023	68 f0 00 00 00	 push	 240			; 000000f0H
  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	68 40 01 00 00	 push	 320			; 00000140H
  00032	68 ca 00 00 00	 push	 202			; 000000caH
  00037	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  0003d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00042	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@profession:

; 9517 : 	}
; 9518 : 	if (skillShopWindowProcNo == 1)

  0004b	66 83 f8 01	 cmp	 ax, 1
  0004f	75 10		 jne	 SHORT $LN4@profession

; 9519 : 	{
; 9520 : 		ret = profession_windows_1();

  00051	e8 00 00 00 00	 call	 ?profession_windows_1@@YAHXZ ; profession_windows_1

; 9521 : 		if (ret == 2)

  00056	83 f8 02	 cmp	 eax, 2
  00059	74 0c		 je	 SHORT $LN13@profession
  0005b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
$LN4@profession:

; 9522 : 		{
; 9523 : 			skillShopWindowProcNo = 10;
; 9524 : 		}
; 9525 : 	}
; 9526 : 	if (skillShopWindowProcNo == 10) {

  00061	66 83 f8 0a	 cmp	 ax, 10			; 0000000aH
  00065	75 2d		 jne	 SHORT $LN5@profession
$LN13@profession:

; 9527 : 		initSkillShopWindow4();

  00067	e8 00 00 00 00	 call	 ?initSkillShopWindow4@@YAXXZ ; initSkillShopWindow4

; 9528 : 		skillShopWindowProcNo++;
; 9529 : 		play_se(202, 320, 240);

  0006c	68 f0 00 00 00	 push	 240			; 000000f0H
  00071	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00076	68 40 01 00 00	 push	 320			; 00000140H
  0007b	68 ca 00 00 00	 push	 202			; 000000caH
  00080	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  00086	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0008b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@profession:

; 9530 : 	}
; 9531 : 	if (skillShopWindowProcNo == 11) {

  00094	66 83 f8 0b	 cmp	 ax, 11			; 0000000bH
  00098	0f 85 cb 00 00
	00		 jne	 $LN11@profession

; 9532 : 		ret = profession_windows_2();

  0009e	e8 00 00 00 00	 call	 ?profession_windows_2@@YAHXZ ; profession_windows_2

; 9533 : 		if (ret == 1) {

  000a3	83 f8 01	 cmp	 eax, 1
  000a6	0f 85 b0 00 00
	00		 jne	 $LN7@profession

; 9534 : 
; 9535 : 			char data[256];
; 9536 : 			char msg[256];
; 9537 : 			sprintf(data, "%d|%d",

  000ac	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  000b3	6b c1 70	 imul	 eax, ecx, 112
  000b6	ff b0 00 00 00
	00		 push	 DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[eax]
  000bc	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000bf	50		 push	 eax
  000c0	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
  000cb	50		 push	 eax
  000cc	e8 00 00 00 00	 call	 _sprintf

; 9538 : 				selShopSkillNo + 1,
; 9539 : 				sealSkill[selShopSkillNo].price);
; 9540 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  000d1	68 ff 00 00 00	 push	 255			; 000000ffH
  000d6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  000dc	50		 push	 eax
  000dd	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  000e3	50		 push	 eax
  000e4	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  000e9	83 c4 1c	 add	 esp, 28			; 0000001cH

; 9541 : 			if (bNewServer)

  000ec	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  000f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000f9	50		 push	 eax
  000fa	6a 00		 push	 0
  000fc	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00102	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00108	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0010e	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00114	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0011a	74 20		 je	 SHORT $LN9@profession

; 9542 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  0011c	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 9545 : 
; 9546 : 			// Robin fix 20040707 ä¿®æ¹Clientèªå¨æ£é±bug
; 9547 : 			//pc.gold -= sealSkill[selShopSkillNo].price;
; 9548 : 
; 9549 : 			windowTypeWN = -1;

  00121	83 c4 1c	 add	 esp, 28			; 0000001cH
  00124	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 9553 : 		}
; 9554 : 	}
; 9555 : 
; 9556 : }

  0012e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00131	33 cd		 xor	 ecx, ebp
  00133	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00138	8b e5		 mov	 esp, ebp
  0013a	5d		 pop	 ebp
  0013b	c3		 ret	 0
$LN9@profession:

; 9543 : 			else
; 9544 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  0013c	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 9545 : 
; 9546 : 			// Robin fix 20040707 ä¿®æ¹Clientèªå¨æ£é±bug
; 9547 : 			//pc.gold -= sealSkill[selShopSkillNo].price;
; 9548 : 
; 9549 : 			windowTypeWN = -1;

  00141	83 c4 1c	 add	 esp, 28			; 0000001cH
  00144	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 9553 : 		}
; 9554 : 	}
; 9555 : 
; 9556 : }

  0014e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00151	33 cd		 xor	 ecx, ebp
  00153	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00158	8b e5		 mov	 esp, ebp
  0015a	5d		 pop	 ebp
  0015b	c3		 ret	 0
$LN7@profession:

; 9550 : 		}
; 9551 : 		else if (ret == 2) {

  0015c	83 f8 02	 cmp	 eax, 2
  0015f	75 08		 jne	 SHORT $LN11@profession

; 9552 : 			skillShopWindowProcNo = 0;

  00161	33 c0		 xor	 eax, eax
  00163	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
$LN11@profession:

; 9553 : 		}
; 9554 : 	}
; 9555 : 
; 9556 : }

  00169	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016c	33 cd		 xor	 ecx, ebp
  0016e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00173	8b e5		 mov	 esp, ebp
  00175	5d		 pop	 ebp
  00176	c3		 ret	 0
?profession_windows@@YAXXZ ENDP				; profession_windows
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowProfession@@YAXPAD@Z
_TEXT	SEGMENT
tv447 = -596						; size = 4
_i$1$ = -592						; size = 4
_data$GSCopy$1$ = -588					; size = 4
_j$1$ = -584						; size = 4
_info$ = -580						; size = 256
_msg2$ = -324						; size = 128
_title1$ = -196						; size = 128
_skillName$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowProfession@@YAXPAD@Z PROC		; initServerWindowProfession, COMDAT

; 9434 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 02 00
	00		 sub	 esp, 596		; 00000254H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 9435 : 	char title1[128];
; 9436 : 	char msg2[128];
; 9437 : 	char skillName[64];
; 9438 : 	char info[256];
; 9439 : 	int i, j;
; 9440 : 	int flag;
; 9441 : 
; 9442 : 	skillShopWindowProcNo = 0;

  00017	33 c0		 xor	 eax, eax

; 9443 : 	shopWondow2Page = 0;
; 9444 : 
; 9445 : 	if (getIntegerToken(data, '|', 1) == 0)

  00019	6a 01		 push	 1
  0001b	6a 7c		 push	 124			; 0000007cH
  0001d	56		 push	 esi
  0001e	89 b5 b4 fd ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], esi
  00024	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  0002a	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  00030	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	85 c0		 test	 eax, eax
  0003a	0f 84 ca 01 00
	00		 je	 $LN10@initServer

; 9446 : 		return;
; 9447 : 
; 9448 : 	getStringToken(data, '|', 2, sizeof(title1) - 1, title1);

  00040	53		 push	 ebx
  00041	57		 push	 edi
  00042	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00048	50		 push	 eax
  00049	6a 7f		 push	 127			; 0000007fH
  0004b	6a 02		 push	 2
  0004d	6a 7c		 push	 124			; 0000007cH
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 9449 : 	makeStringFromEscaped(title1);

  00055	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 9450 : 	getStringToken(data, '|', 3, sizeof(msg2) - 1, msg2);

  00061	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00067	50		 push	 eax
  00068	6a 7f		 push	 127			; 0000007fH
  0006a	6a 03		 push	 3
  0006c	6a 7c		 push	 124			; 0000007cH
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 9451 : 	makeStringFromEscaped(msg2);

  00074	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 9452 : 
; 9453 : 	strncpy(ProfessionShopTitle, title1, sizeof(ProfessionShopTitle) - 1);

  00080	6a 1a		 push	 26			; 0000001aH
  00082	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET ?ProfessionShopTitle@@3PADA ; ProfessionShopTitle
  0008e	e8 00 00 00 00	 call	 _strncpy

; 9454 : 	ProfessionShopTitle[sizeof(ProfessionShopTitle) - 1] = '\0';
; 9455 : 
; 9456 : 	getStrSplit((char*)ProfessionShopMsg, msg2,

  00093	6a 2c		 push	 44			; 0000002cH
  00095	6a 02		 push	 2
  00097	6a 2d		 push	 45			; 0000002dH
  00099	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0009f	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?ProfessionShopTitle@@3PADA+26, 0
  000a6	50		 push	 eax
  000a7	68 00 00 00 00	 push	 OFFSET ?ProfessionShopMsg@@3PAY0CN@DA ; ProfessionShopMsg
  000ac	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 9457 : 		sizeof(ProfessionShopMsg[0]),
; 9458 : 		sizeof(ProfessionShopMsg) / sizeof(ProfessionShopMsg[0]),
; 9459 : 		sizeof(ProfessionShopMsg[0]) - 1);
; 9460 : 
; 9461 : 	// Robin fix 20040707 ååè¿å¤§
; 9462 : 	//shopWondow2MaxPage = MAX_SKILL_SHOP_SKILL* 9;
; 9463 : 	shopWondow2MaxPage = MAX_SKILL_SHOP_SKILL * MAX_SKILL_SHOP_PAGE;

  000b1	b8 50 00 00 00	 mov	 eax, 80			; 00000050H

; 9464 : 
; 9465 : 	for (i = 0, j = 0; i < shopWondow2MaxPage; i++)

  000b6	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  000c0	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  000c6	8d 4d bc	 lea	 ecx, DWORD PTR _skillName$[ebp]
  000c9	33 c0		 xor	 eax, eax
  000cb	83 c4 50	 add	 esp, 80			; 00000050H
  000ce	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  000d4	bf 00 00 00 00	 mov	 edi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
  000d9	8d 58 05	 lea	 ebx, DWORD PTR [eax+5]
  000dc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000e1	2b c1		 sub	 eax, ecx
  000e3	89 85 ac fd ff
	ff		 mov	 DWORD PTR tv447[ebp], eax
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@initServer:

; 9466 : 	{
; 9467 : 		// æè½åç§°
; 9468 : 		flag = getStringToken(data, '|', 4 + i * 4, sizeof(skillName) - 1, skillName);

  000f0	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  000f3	50		 push	 eax
  000f4	6a 3f		 push	 63			; 0000003fH
  000f6	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000f9	50		 push	 eax
  000fa	6a 7c		 push	 124			; 0000007cH
  000fc	56		 push	 esi
  000fd	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00102	8b f0		 mov	 esi, eax

; 9469 : 		makeStringFromEscaped(skillName);

  00104	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  0010d	83 c4 18	 add	 esp, 24			; 00000018H

; 9470 : 		if (flag)

  00110	85 f6		 test	 esi, esi
  00112	74 0f		 je	 SHORT $LN6@initServer

; 9471 : 		{
; 9472 : 			sealSkill[i].name[0] = '\0';
; 9473 : 			continue;

  00114	8b b5 b4 fd ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  0011a	c6 47 0c 00	 mov	 BYTE PTR [edi+12], 0
  0011e	e9 a0 00 00 00	 jmp	 $LN2@initServer
$LN6@initServer:

; 9474 : 		}
; 9475 : 
; 9476 : 		j++;

  00123	ff 85 b8 fd ff
	ff		 inc	 DWORD PTR _j$1$[ebp]

; 9477 : 
; 9478 : 		if (strlen(skillName) <= SKILL_NAME_LEN)

  00129	8d 4d bc	 lea	 ecx, DWORD PTR _skillName$[ebp]
  0012c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0012f	90		 npad	 1
$LL22@initServer:
  00130	8a 01		 mov	 al, BYTE PTR [ecx]
  00132	41		 inc	 ecx
  00133	84 c0		 test	 al, al
  00135	75 f9		 jne	 SHORT $LL22@initServer
  00137	2b ca		 sub	 ecx, edx
  00139	83 f9 18	 cmp	 ecx, 24			; 00000018H
  0013c	77 21		 ja	 SHORT $LN7@initServer

; 9479 : 			strcpy(sealSkill[i].name, skillName);

  0013e	8b 95 ac fd ff
	ff		 mov	 edx, DWORD PTR tv447[ebp]
  00144	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  00147	03 d7		 add	 edx, edi
  00149	0f 1f 80 00 00
	00 00		 npad	 7
$LL14@initServer:
  00150	8a 08		 mov	 cl, BYTE PTR [eax]
  00152	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00155	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00159	84 c9		 test	 cl, cl
  0015b	75 f3		 jne	 SHORT $LL14@initServer
  0015d	eb 07		 jmp	 SHORT $LN8@initServer
$LN7@initServer:

; 9480 : 		else
; 9481 : 			strcpy(sealSkill[i].name, "???");

  0015f	c7 47 0c 3f 3f
	3f 00		 mov	 DWORD PTR [edi+12], 4144959 ; 003f3f3fH
$LN8@initServer:

; 9482 : 
; 9483 : 		// éé¢
; 9484 : 		sealSkill[i].price = getIntegerToken(data, '|', 5 + i * 4);

  00166	8b b5 b4 fd ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  0016c	53		 push	 ebx
  0016d	6a 7c		 push	 124			; 0000007cH
  0016f	56		 push	 esi
  00170	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00175	89 07		 mov	 DWORD PTR [edi], eax

; 9485 : 
; 9486 : 		// è¯´æ
; 9487 : 		getStringToken(data, '|', 6 + i * 4, sizeof(info) - 1, info);

  00177	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  0017d	50		 push	 eax
  0017e	68 ff 00 00 00	 push	 255			; 000000ffH
  00183	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00186	50		 push	 eax
  00187	6a 7c		 push	 124			; 0000007cH
  00189	56		 push	 esi
  0018a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 9488 : 		makeStringFromEscaped(info);

  0018f	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00195	50		 push	 eax
  00196	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 9489 : 		getStrSplit((char*)(&sealSkill[i].info), info,

  0019b	6a 18		 push	 24			; 00000018H
  0019d	6a 03		 push	 3
  0019f	6a 19		 push	 25			; 00000019H
  001a1	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  001a7	50		 push	 eax
  001a8	8d 47 25	 lea	 eax, DWORD PTR [edi+37]
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 9490 : 			sizeof(sealSkill[0].info[0]),
; 9491 : 			sizeof(sealSkill[0].info) / sizeof(sealSkill[0].info[0]),
; 9492 : 			sizeof(sealSkill[0].info[0]) - 1);
; 9493 : 
; 9494 : 		// å¾ç¤º
; 9495 : 		sealSkill[i].icon = getIntegerToken(data, '|', 7 + i * 4);

  001b1	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  001b4	50		 push	 eax
  001b5	6a 7c		 push	 124			; 0000007cH
  001b7	56		 push	 esi
  001b8	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  001bd	83 c4 44	 add	 esp, 68			; 00000044H
  001c0	89 47 04	 mov	 DWORD PTR [edi+4], eax
$LN2@initServer:

; 9464 : 
; 9465 : 	for (i = 0, j = 0; i < shopWondow2MaxPage; i++)

  001c3	8b 8d b0 fd ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  001c9	83 c3 04	 add	 ebx, 4
  001cc	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  001d3	41		 inc	 ecx
  001d4	83 c7 70	 add	 edi, 112		; 00000070H
  001d7	89 8d b0 fd ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  001dd	3b c8		 cmp	 ecx, eax
  001df	0f 8c 0b ff ff
	ff		 jl	 $LL4@initServer

; 9496 : 
; 9497 : 	}
; 9498 : 	if (j > 0)

  001e5	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  001eb	5f		 pop	 edi
  001ec	5b		 pop	 ebx
  001ed	85 c0		 test	 eax, eax
  001ef	7e 0e		 jle	 SHORT $LN9@initServer

; 9499 : 	{
; 9500 : 		shopWondow2MaxPage = (j + 7) / MAX_SKILL_SHOP_SKILL;

  001f1	83 c0 07	 add	 eax, 7
  001f4	99		 cdq
  001f5	83 e2 07	 and	 edx, 7
  001f8	03 c2		 add	 eax, edx
  001fa	c1 f8 03	 sar	 eax, 3

; 9501 : 	}

  001fd	eb 05		 jmp	 SHORT $LN23@initServer
$LN9@initServer:

; 9502 : 	else
; 9503 : 	{
; 9504 : 		shopWondow2MaxPage = 1;

  001ff	b8 01 00 00 00	 mov	 eax, 1
$LN23@initServer:

; 9505 : 	}
; 9506 : }

  00204	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
$LN10@initServer:
  0020a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020d	33 cd		 xor	 ecx, ebp
  0020f	5e		 pop	 esi
  00210	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c3		 ret	 0
?initServerWindowProfession@@YAXPAD@Z ENDP		; initServerWindowProfession
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType12@@YAXXZ
_TEXT	SEGMENT
tv824 = -552						; size = 4
tv793 = -552						; size = 4
tv835 = -548						; size = 4
tv827 = -544						; size = 4
tv821 = -544						; size = 4
_id$1$ = -544						; size = 4
__btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType12@@YAXXZ PROC				; serverWindowType12, COMDAT

; 7643 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 02 00
	00		 sub	 esp, 552		; 00000228H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7644 : 	static int winX, winY;
; 7645 : 	static int winW, winH;
; 7646 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 7647 : 	static int btnLoc[6][2];
; 7648 : 	static int btnCnt;
; 7649 : 	static int msgLine;
; 7650 : 	char* btnTitle[] =
; 7651 : 	{
; 7652 : 		" ï¼¯ï¼« ",
; 7653 : 		"CANCEL",
; 7654 : 		"í  ì¸",
; 7655 : 		"ì·¨  ì",
; 7656 : 		"ì´ì  íì´ì§",
; 7657 : 		"ë¤ì íì´ì§"
; 7658 : 	};
; 7659 : 
; 7660 : 	int _btnTitle[] =
; 7661 : 	{
; 7662 : 		CG_OK_BTN,

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000065c2000065ed000065c2000065ed
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 7663 : 		CG_CANCEL_BTN,
; 7664 : 		CG_OK_BTN,
; 7665 : 		CG_CANCEL_BTN,
; 7666 : 		CG_PREV_BTN,
; 7667 : 		CG_NEXT_BTN
; 7668 : 	};
; 7669 : 	int id, id2;
; 7670 : 	int i, j;
; 7671 : 	int mask;
; 7672 : 	int btn;
; 7673 : 	int x1, y1, x2, y2;
; 7674 : 
; 7675 : 	if (ptActMenuWin == NULL)

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00022	c7 85 f4 fd ff
	ff 44 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+16], 26180 ; 00006644H
  0002c	c7 85 f8 fd ff
	ff 46 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+20], 26182 ; 00006646H
  00036	0f 11 85 e4 fd
	ff ff		 movups	 XMMWORD PTR __btnTitle$[ebp], xmm0
  0003d	85 ff		 test	 edi, edi
  0003f	0f 85 07 01 00
	00		 jne	 $LN81@serverWind

; 7676 : 	{
; 7677 : 		winW = 5;
; 7678 : 		winH = 4;
; 7679 : 		winX = (640 - winW * 64) / 2;
; 7680 : 		winY = (456 - winH * 48) / 2;
; 7681 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, -1);

  00045	6a ff		 push	 -1
  00047	57		 push	 edi
  00048	6a 04		 push	 4
  0004a	6a 05		 push	 5
  0004c	68 84 00 00 00	 push	 132			; 00000084H
  00051	68 a0 00 00 00	 push	 160			; 000000a0H
  00056	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType12@@YAXXZ@4HA, 5
  00060	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType12@@YAXXZ@4HA, 4
  0006a	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType12@@YAXXZ@4HA, 160 ; 000000a0H
  00074	c7 05 00 00 00
	00 84 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType12@@YAXXZ@4HA, 132 ; 00000084H
  0007e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 7682 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 7683 : 		winX = ptActMenuWin->x;
; 7684 : 		winY = ptActMenuWin->y;
; 7685 : #endif
; 7686 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 7687 : 		{
; 7688 : 			btnId[i] = -2;

  00083	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 7689 : 		}
; 7690 : 
; 7691 : 		mask = 1;
; 7692 : 		btnCnt = 0;

  0008a	33 f6		 xor	 esi, esi

; 7693 : 		for (i = 0; i < 6; i++, mask <<= 1)

  0008c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  0009a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009d	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000a0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType12@@YAXXZ@4HA, ecx
  000a6	33 c9		 xor	 ecx, ecx
  000a8	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType12@@YAXXZ@4HA, eax
  000ad	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000b0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA, xmm0
  000b7	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000c1	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000cb	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType12@@YAXXZ@4HA, esi
$LL7@serverWind:

; 7694 : 		{
; 7695 : 			if (buttonTypeWN & mask)

  000d1	85 d0		 test	 edx, eax
  000d3	74 06		 je	 SHORT $LN5@serverWind

; 7696 : 			{
; 7697 : 				btnCnt++;

  000d5	46		 inc	 esi
  000d6	83 fe 04	 cmp	 esi, 4

; 7698 : 				if (btnCnt == 4)

  000d9	74 08		 je	 SHORT $LN55@serverWind
$LN5@serverWind:

; 7693 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000db	41		 inc	 ecx
  000dc	03 c0		 add	 eax, eax
  000de	83 f9 06	 cmp	 ecx, 6
  000e1	7c ee		 jl	 SHORT $LL7@serverWind
$LN55@serverWind:

; 7696 : 			{
; 7697 : 				btnCnt++;

  000e3	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType12@@YAXXZ@4HA, esi

; 7699 : 					break;
; 7700 : 			}
; 7701 : 		}
; 7702 : 		// ????????î¸î?î³????
; 7703 : 		if (btnCnt > 0)

  000e9	85 f6		 test	 esi, esi
  000eb	7e 30		 jle	 SHORT $LN9@serverWind

; 7704 : 		{
; 7705 : 			int w;
; 7706 : 			w = winW * 64 / (btnCnt + 1);

  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType12@@YAXXZ@4HA
  000f2	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000f5	c1 e0 06	 shl	 eax, 6
  000f8	99		 cdq
  000f9	f7 f9		 idiv	 ecx
  000fb	33 c9		 xor	 ecx, ecx

; 7707 : 			for (i = 0; i < btnCnt; i++)

  000fd	85 f6		 test	 esi, esi
  000ff	7e 1c		 jle	 SHORT $LN9@serverWind

; 7704 : 		{
; 7705 : 			int w;
; 7706 : 			w = winW * 64 / (btnCnt + 1);

  00101	8d 50 3c	 lea	 edx, DWORD PTR [eax+60]
$LL10@serverWind:

; 7708 : 			{
; 7709 : 				btnLoc[i][0] = w * (i + 1) + 60;

  00104	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA[ecx*8], edx
  0010b	03 d0		 add	 edx, eax

; 7710 : 				btnLoc[i][1] = 12;

  0010d	c7 04 cd 04 00
	00 00 0c 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA[ecx*8+4], 12 ; 0000000cH
  00118	41		 inc	 ecx
  00119	3b ce		 cmp	 ecx, esi
  0011b	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 7711 : 			}
; 7712 : 		}
; 7713 : 
; 7714 : 		msgLine = 10; //msgLine = 8;
; 7715 : 
; 7716 : 		play_se(202, 320, 240);	// ????????

  0011d	68 f0 00 00 00	 push	 240			; 000000f0H
  00122	68 40 01 00 00	 push	 320			; 00000140H
  00127	68 ca 00 00 00	 push	 202			; 000000caH
  0012c	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??serverWindowType12@@YAXXZ@4HA, 10 ; 0000000aH
  00136	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 7717 : 	}
; 7718 : 
; 7719 : 
; 7720 : 	if (ptActMenuWin != NULL)

  0013b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00141	83 c4 0c	 add	 esp, 12			; 0000000cH
  00144	85 ff		 test	 edi, edi
  00146	0f 84 19 03 00
	00		 je	 $LN44@serverWind
$LN81@serverWind:
  0014c	53		 push	 ebx

; 7721 : 	{
; 7722 : 		// ????î±î¶îî
; 7723 : 		id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0014d	6a 06		 push	 6
  0014f	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA
  00154	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00159	83 c4 08	 add	 esp, 8
  0015c	8b d8		 mov	 ebx, eax

; 7724 : 
; 7725 : 		id2 = -1;

  0015e	83 ce ff	 or	 esi, -1
  00161	89 9d e0 fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 7726 : 		if (ptActMenuWin->hp >= 1)	// ?????î???î±î¶?î???

  00167	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  0016b	0f 8c b0 00 00
	00		 jl	 $LN12@serverWind

; 7727 : 		{
; 7728 : 			for (i = selStartLine; i < msgLine; i++)

  00171	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00177	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType12@@YAXXZ@4HA
  0017d	0f 8d 9e 00 00
	00		 jge	 $LN12@serverWind
  00183	6b d7 15	 imul	 edx, edi, 21
  00186	8b df		 mov	 ebx, edi
  00188	c1 e3 08	 shl	 ebx, 8
  0018b	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00191	89 95 dc fd ff
	ff		 mov	 DWORD PTR tv835[ebp], edx
  00197	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL13@serverWind:

; 7729 : 			{
; 7730 : 				// î°??î¡???????î???
; 7731 : 				if (strlen(msgWN[i]) > 0)

  001a0	8b cb		 mov	 ecx, ebx
  001a2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001a5	89 85 d8 fd ff
	ff		 mov	 DWORD PTR tv824[ebp], eax
  001ab	0f 1f 44 00 00	 npad	 5
$LL83@serverWind:
  001b0	8a 01		 mov	 al, BYTE PTR [ecx]
  001b2	41		 inc	 ecx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL83@serverWind
  001b7	2b 8d d8 fd ff
	ff		 sub	 ecx, DWORD PTR tv824[ebp]
  001bd	74 40		 je	 SHORT $LN11@serverWind

; 7732 : 				{
; 7733 : 					x1 = winX + 41;
; 7734 : 					y1 = winY + 18 + i * 21;

  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType12@@YAXXZ@4HA

; 7735 : 					x2 = x1 + 366;
; 7736 : 					y2 = y1 + 20;
; 7737 : #ifdef å¯¹è¯æ¡2æå­æé¿
; 7738 : 					//hitboxæ¡ä¹æé¿ç¹
; 7739 : 					x1 = winX + 40;

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??serverWindowType12@@YAXXZ@4HA
  001ca	83 c0 12	 add	 eax, 18			; 00000012H
  001cd	03 d0		 add	 edx, eax
  001cf	83 c1 28	 add	 ecx, 40			; 00000028H

; 7740 : 					x2 = x1 + 366;
; 7741 : #endif 
; 7742 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001d2	6a 6b		 push	 107			; 0000006bH
  001d4	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  001d7	50		 push	 eax
  001d8	8d 81 6e 01 00
	00		 lea	 eax, DWORD PTR [ecx+366]
  001de	50		 push	 eax
  001df	52		 push	 edx
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001e6	83 c4 14	 add	 esp, 20			; 00000014H
  001e9	85 c0		 test	 eax, eax
  001eb	74 12		 je	 SHORT $LN11@serverWind

; 7743 : 					{
; 7744 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  001ed	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001f4	74 09		 je	 SHORT $LN11@serverWind

; 7745 : 						{
; 7746 : 							id2 = i - selStartLine + 1;

  001f6	8b f7		 mov	 esi, edi
  001f8	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001fe	46		 inc	 esi
$LN11@serverWind:

; 7727 : 		{
; 7728 : 			for (i = selStartLine; i < msgLine; i++)

  001ff	83 85 dc fd ff
	ff 15		 add	 DWORD PTR tv835[ebp], 21 ; 00000015H
  00206	47		 inc	 edi
  00207	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR tv835[ebp]
  0020d	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  00213	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType12@@YAXXZ@4HA
  00219	7c 85		 jl	 SHORT $LL13@serverWind
  0021b	8b 9d e0 fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 7747 : 						}
; 7748 : 					}
; 7749 : 				}
; 7750 : 			}
; 7751 : 		}
; 7752 : 
; 7753 : 		// î??????î?????????????î¼??
; 7754 : 		if (CheckMenuFlag()
; 7755 : 			|| joy_trg[0] & JOY_ESC
; 7756 : 			|| actBtn == 1
; 7757 : 			|| menuBtn == 1
; 7758 : 			|| disconnectServerFlag == TRUE
; 7759 : 			|| wnCloseFlag == 1)

  00221	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00226	85 c0		 test	 eax, eax
  00228	75 3e		 jne	 SHORT $LN30@serverWind
  0022a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00234	75 32		 jne	 SHORT $LN30@serverWind
  00236	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0023e	74 28		 je	 SHORT $LN30@serverWind
  00240	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00248	74 1e		 je	 SHORT $LN30@serverWind
  0024a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00251	74 15		 je	 SHORT $LN30@serverWind
  00253	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0025b	74 0b		 je	 SHORT $LN30@serverWind

; 7764 : 		}
; 7765 : 
; 7766 : 		if (0 <= id && id < 6
; 7767 : 			|| 0 <= id2 && id2 < 10
; 7768 : 			|| id == 100)

  0025d	85 db		 test	 ebx, ebx
  0025f	78 1e		 js	 SHORT $LN33@serverWind
  00261	83 fb 06	 cmp	 ebx, 6
  00264	7c 22		 jl	 SHORT $LN32@serverWind
  00266	eb 17		 jmp	 SHORT $LN33@serverWind
$LN30@serverWind:

; 7760 : 		{
; 7761 : 			id = 100;
; 7762 : 			windowTypeWN = -1;
; 7763 : 			wnCloseFlag = 0;

  00268	33 c0		 xor	 eax, eax
  0026a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00274	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  00279	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN33@serverWind:

; 7764 : 		}
; 7765 : 
; 7766 : 		if (0 <= id && id < 6
; 7767 : 			|| 0 <= id2 && id2 < 10
; 7768 : 			|| id == 100)

  0027f	85 f6		 test	 esi, esi
  00281	78 1e		 js	 SHORT $LN34@serverWind
  00283	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00286	7d 19		 jge	 SHORT $LN34@serverWind
$LN32@serverWind:

; 7769 : 		{
; 7770 : 			char data[256];
; 7771 : 			char msg[256];
; 7772 : 			if (id == 100)

  00288	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0028b	74 1d		 je	 SHORT $LN80@serverWind

; 7775 : 			}
; 7776 : 			else
; 7777 : 				if (0 <= id && id < 6)

  0028d	83 fb 05	 cmp	 ebx, 5
  00290	77 0b		 ja	 SHORT $LN37@serverWind

; 7778 : 				{
; 7779 : 					btn = 1;
; 7780 : 					btn <<= id;

  00292	bf 01 00 00 00	 mov	 edi, 1
  00297	8b cb		 mov	 ecx, ebx
  00299	d3 e7		 shl	 edi, cl

; 7781 : 				}

  0029b	eb 12		 jmp	 SHORT $LN38@serverWind
$LN37@serverWind:

; 7782 : 				else
; 7783 : 				{
; 7784 : 					btn = 0;

  0029d	33 ff		 xor	 edi, edi
  0029f	eb 0e		 jmp	 SHORT $LN38@serverWind
$LN34@serverWind:

; 7764 : 		}
; 7765 : 
; 7766 : 		if (0 <= id && id < 6
; 7767 : 			|| 0 <= id2 && id2 < 10
; 7768 : 			|| id == 100)

  002a1	83 fb 64	 cmp	 ebx, 100		; 00000064H
  002a4	0f 85 83 00 00
	00		 jne	 $LN31@serverWind
$LN80@serverWind:

; 7773 : 			{
; 7774 : 				btn = WINDOW_BUTTONTYPE_CANCEL;

  002aa	bf 02 00 00 00	 mov	 edi, 2
$LN38@serverWind:

; 7785 : 				}
; 7786 : 			if (id2 < 0)
; 7787 : 				id2 = 0;
; 7788 : 			sprintf(data, "%d", id2);

  002af	33 c0		 xor	 eax, eax
  002b1	85 f6		 test	 esi, esi
  002b3	0f 49 c6	 cmovns	 eax, esi
  002b6	8b f0		 mov	 esi, eax
  002b8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002be	56		 push	 esi
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 _sprintf

; 7789 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002ca	68 ff 00 00 00	 push	 255			; 000000ffH
  002cf	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  002d5	50		 push	 eax
  002d6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002e2	83 c4 18	 add	 esp, 24			; 00000018H

; 7790 : 			if (bNewServer)

  002e5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  002eb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002f2	50		 push	 eax
  002f3	57		 push	 edi
  002f4	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002fa	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00300	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00306	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0030c	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00312	74 07		 je	 SHORT $LN40@serverWind

; 7791 : 
; 7792 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00314	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00319	eb 05		 jmp	 SHORT $LN87@serverWind
$LN40@serverWind:

; 7793 : 
; 7794 : 			else
; 7795 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0031b	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN87@serverWind:

; 7796 : 
; 7797 : 			windowTypeWN = -1;

  00320	83 c4 1c	 add	 esp, 28			; 0000001cH
  00323	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN31@serverWind:

; 7798 : 		}
; 7799 : 
; 7800 : 		if (id >= 0 || id2 >= 0)

  0032d	85 db		 test	 ebx, ebx
  0032f	0f 89 17 01 00
	00		 jns	 $LN43@serverWind
  00335	85 f6		 test	 esi, esi
  00337	0f 89 0f 01 00
	00		 jns	 $LN43@serverWind

; 7804 : 			return;
; 7805 : 		}
; 7806 : 
; 7807 : 
; 7808 : 		if (ptActMenuWin->hp >= 1)

  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00342	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00346	0f 8c 18 01 00
	00		 jl	 $LN86@serverWind

; 7809 : 		{
; 7810 : 			for (i = 0; i < msgLine; i++)

  0034c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType12@@YAXXZ@4HA
  00352	33 f6		 xor	 esi, esi
  00354	85 d2		 test	 edx, edx
  00356	7e 5f		 jle	 SHORT $LN15@serverWind
  00358	33 db		 xor	 ebx, ebx
  0035a	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0035f	90		 npad	 1
$LL16@serverWind:

; 7811 : 			{
; 7812 : 				if (strlen(msgWN[i]) > 0)

  00360	8b cf		 mov	 ecx, edi
  00362	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00365	89 85 e0 fd ff
	ff		 mov	 DWORD PTR tv827[ebp], eax
  0036b	0f 1f 44 00 00	 npad	 5
$LL84@serverWind:
  00370	8a 01		 mov	 al, BYTE PTR [ecx]
  00372	41		 inc	 ecx
  00373	84 c0		 test	 al, al
  00375	75 f9		 jne	 SHORT $LL84@serverWind
  00377	2b 8d e0 fd ff
	ff		 sub	 ecx, DWORD PTR tv827[ebp]
  0037d	74 2a		 je	 SHORT $LN14@serverWind

; 7813 : 				{
; 7814 : 
; 7815 : #ifdef _FONT_STYLE_
; 7816 : 					PutWinText(winX + 44, winY + 21 + i * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);

  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType12@@YAXXZ@4HA
  00384	56		 push	 esi
  00385	6a 00		 push	 0
  00387	57		 push	 edi
  00388	83 c0 15	 add	 eax, 21			; 00000015H
  0038b	6a 00		 push	 0
  0038d	03 c3		 add	 eax, ebx
  0038f	6a 01		 push	 1
  00391	50		 push	 eax
  00392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType12@@YAXXZ@4HA
  00397	83 c0 2c	 add	 eax, 44			; 0000002cH
  0039a	50		 push	 eax
  0039b	e8 00 00 00 00	 call	 ?PutWinText@@YAXHHDHPADHH@Z ; PutWinText
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType12@@YAXXZ@4HA
  003a6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN14@serverWind:

; 7809 : 		{
; 7810 : 			for (i = 0; i < msgLine; i++)

  003a9	46		 inc	 esi
  003aa	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  003b0	83 c3 15	 add	 ebx, 21			; 00000015H
  003b3	3b f2		 cmp	 esi, edx
  003b5	7c a9		 jl	 SHORT $LL16@serverWind
$LN15@serverWind:

; 7817 : #else
; 7818 : 					StockFontBuffer(winX + 44, winY + 21 + i * 21,
; 7819 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 7820 : #endif
; 7821 : 
; 7822 : 				}
; 7823 : 			}
; 7824 : 			j = 0;

  003b7	33 ff		 xor	 edi, edi

; 7825 : 
; 7826 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  003b9	bb 01 00 00 00	 mov	 ebx, 1
  003be	33 f6		 xor	 esi, esi
$LL19@serverWind:

; 7827 : 			{
; 7828 : 				btnId[i] = -2;

  003c0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 7829 : 				if (buttonTypeWN & mask)

  003ca	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  003d0	74 3e		 je	 SHORT $LN17@serverWind

; 7830 : 				{
; 7831 : 					if (j < btnCnt)

  003d2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType12@@YAXXZ@4HA
  003d8	7d 36		 jge	 SHORT $LN17@serverWind

; 7832 : 					{
; 7833 : 
; 7834 : 						btnId[i] = StockDispBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1], DISP_PRIO_IME3, _btnTitle[i], 2);

  003da	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA[edi*8+4]
  003e1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType12@@YAXXZ@4HA
  003e7	6a 02		 push	 2
  003e9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR __btnTitle$[ebp+esi]
  003f0	6a 69		 push	 105			; 00000069H
  003f2	50		 push	 eax
  003f3	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType12@@YAXXZ@4PAY01HA[edi*8]
  003fa	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType12@@YAXXZ@4HA
  00400	50		 push	 eax
  00401	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00406	83 c4 14	 add	 esp, 20			; 00000014H
  00409	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType12@@YAXXZ@4PAHA[esi], eax

; 7835 : 
; 7836 : 						//btnId[i] =
; 7837 : 						//	StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 7838 : 						//		FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 7839 : 						j++;

  0040f	47		 inc	 edi
$LN17@serverWind:

; 7825 : 
; 7826 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00410	83 c6 04	 add	 esi, 4
  00413	03 db		 add	 ebx, ebx
  00415	83 fe 18	 cmp	 esi, 24			; 00000018H
  00418	7c a6		 jl	 SHORT $LL19@serverWind

; 7840 : 					}
; 7841 : 				}
; 7842 : 			}
; 7843 : 
; 7844 : 			StockDispBufferç»å¯¹ä½ç½®( ptActMenuWin->x, ptActMenuWin->y - 23, DISP_PRIO_MENU, IMAGE_WARP_MAIN, 1);

  0041a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00420	6a 01		 push	 1
  00422	68 b1 04 01 00	 push	 66737			; 000104b1H
  00427	6a 68		 push	 104			; 00000068H
  00429	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0042c	83 e8 17	 sub	 eax, 23			; 00000017H
  0042f	50		 push	 eax
  00430	ff 71 18	 push	 DWORD PTR [ecx+24]
  00433	e8 00 00 00 00	 call	 ?StockDispBuffer??êÈöÇ@@YAHHHEHH@Z ; StockDispBuffer??êÈöÇ
  00438	83 c4 14	 add	 esp, 20			; 00000014H
  0043b	5b		 pop	 ebx
  0043c	5f		 pop	 edi

; 7845 : 		}
; 7846 : 	}
; 7847 : }

  0043d	5e		 pop	 esi
  0043e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00441	33 cd		 xor	 ecx, ebp
  00443	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00448	8b e5		 mov	 esp, ebp
  0044a	5d		 pop	 ebp
  0044b	c3		 ret	 0
$LN43@serverWind:

; 7801 : 		{
; 7802 : 			DeathAction(ptActMenuWin);

  0044c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00452	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00457	83 c4 04	 add	 esp, 4

; 7803 : 			ptActMenuWin = NULL;

  0045a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN86@serverWind:
  00464	5b		 pop	 ebx
$LN44@serverWind:

; 7845 : 		}
; 7846 : 	}
; 7847 : }

  00465	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00468	5f		 pop	 edi
  00469	33 cd		 xor	 ecx, ebp
  0046b	5e		 pop	 esi
  0046c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00471	8b e5		 mov	 esp, ebp
  00473	5d		 pop	 ebp
  00474	c3		 ret	 0
?serverWindowType12@@YAXXZ ENDP				; serverWindowType12
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType11@@YAXXZ
_TEXT	SEGMENT
tv798 = -600						; size = 4
tv771 = -600						; size = 4
_id$1$ = -596						; size = 4
tv802 = -596						; size = 4
tv799 = -596						; size = 4
_j$1$ = -592						; size = 4
tv811 = -592						; size = 4
__btnLoc$1 = -588					; size = 48
__btnTitle$ = -540					; size = 24
_data$2 = -516						; size = 256
_msg$3 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType11@@YAXXZ PROC				; serverWindowType11, COMDAT

; 7429 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 02 00
	00		 sub	 esp, 600		; 00000258H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7430 : 	static int winX, winY;
; 7431 : 	static int winW, winH;
; 7432 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 7433 : 	static int btnLoc[6][2];
; 7434 : 	static int btnCnt;
; 7435 : 	static int msgLine;
; 7436 : 	char* btnTitle[] =
; 7437 : 	{
; 7438 : 		" ï¼¯ï¼« ",
; 7439 : 		"CANCEL",
; 7440 : 		"í  ì¸",
; 7441 : 		"ì·¨  ì",
; 7442 : 		"ì´ì  íì´ì§",
; 7443 : 		"ë¤ì íì´ì§"
; 7444 : 	};
; 7445 : 
; 7446 : 	int _btnTitle[] =
; 7447 : 	{
; 7448 : 		CG_OK_BTN,

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000065c2000065ed000065c2000065ed
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 7449 : 		CG_CANCEL_BTN,
; 7450 : 		CG_OK_BTN,
; 7451 : 		CG_CANCEL_BTN,
; 7452 : 		CG_NEXT_BTN,
; 7453 : 		CG_PREV_BTN
; 7454 : 	};
; 7455 : 	int id, id2;
; 7456 : 	int i, j;
; 7457 : 	int mask;
; 7458 : 	int btn;
; 7459 : 	int x1, y1, x2, y2;
; 7460 : 
; 7461 : 	if (ptActMenuWin == NULL)

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00022	c7 85 f4 fd ff
	ff 46 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+16], 26182 ; 00006646H
  0002c	c7 85 f8 fd ff
	ff 44 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+20], 26180 ; 00006644H
  00036	0f 11 85 e4 fd
	ff ff		 movups	 XMMWORD PTR __btnTitle$[ebp], xmm0
  0003d	85 ff		 test	 edi, edi
  0003f	0f 85 06 01 00
	00		 jne	 $LN81@serverWind

; 7462 : 	{
; 7463 : 		winW = 3;
; 7464 : 		winH = 5;
; 7465 : 		winX = (640 - winW * 64) / 2;
; 7466 : 		winY = (456 - winH * 48) / 2;
; 7467 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00045	6a 01		 push	 1
  00047	57		 push	 edi
  00048	6a 05		 push	 5
  0004a	6a 03		 push	 3
  0004c	6a 6c		 push	 108			; 0000006cH
  0004e	68 e0 00 00 00	 push	 224			; 000000e0H
  00053	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType11@@YAXXZ@4HA, 3
  0005d	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType11@@YAXXZ@4HA, 5
  00067	c7 05 00 00 00
	00 e0 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType11@@YAXXZ@4HA, 224 ; 000000e0H
  00071	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType11@@YAXXZ@4HA, 108 ; 0000006cH
  0007b	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 7468 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 7469 : 		winX = ptActMenuWin->x;
; 7470 : 		winY = ptActMenuWin->y;
; 7471 : #endif
; 7472 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 7473 : 		{
; 7474 : 			btnId[i] = -2;

  00080	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 7475 : 		}
; 7476 : 
; 7477 : 		mask = 1;
; 7478 : 		btnCnt = 0;

  00087	33 f6		 xor	 esi, esi

; 7479 : 		for (i = 0; i < 6; i++, mask <<= 1)

  00089	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  0008f	83 c4 18	 add	 esp, 24			; 00000018H
  00092	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00097	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009a	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0009d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType11@@YAXXZ@4HA, ecx
  000a3	33 c9		 xor	 ecx, ecx
  000a5	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType11@@YAXXZ@4HA, eax
  000aa	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000ad	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA, xmm0
  000b4	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000be	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000c8	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType11@@YAXXZ@4HA, esi
  000ce	66 90		 npad	 2
$LL7@serverWind:

; 7480 : 		{
; 7481 : 			if (buttonTypeWN & mask)

  000d0	85 d0		 test	 edx, eax
  000d2	74 06		 je	 SHORT $LN5@serverWind

; 7482 : 			{
; 7483 : 				btnCnt++;

  000d4	46		 inc	 esi
  000d5	83 fe 04	 cmp	 esi, 4

; 7484 : 				if (btnCnt == 4)

  000d8	74 08		 je	 SHORT $LN55@serverWind
$LN5@serverWind:

; 7479 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000da	41		 inc	 ecx
  000db	03 c0		 add	 eax, eax
  000dd	83 f9 06	 cmp	 ecx, 6
  000e0	7c ee		 jl	 SHORT $LL7@serverWind
$LN55@serverWind:

; 7482 : 			{
; 7483 : 				btnCnt++;

  000e2	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType11@@YAXXZ@4HA, esi

; 7485 : 					break;
; 7486 : 			}
; 7487 : 		}
; 7488 : 		// ????????î¸î?î³????
; 7489 : 		if (btnCnt > 0)

  000e8	85 f6		 test	 esi, esi
  000ea	7e 30		 jle	 SHORT $LN9@serverWind

; 7490 : 		{
; 7491 : 			int w;
; 7492 : 			w = winW * 64 / (btnCnt + 1);

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType11@@YAXXZ@4HA
  000f1	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000f4	c1 e0 06	 shl	 eax, 6
  000f7	99		 cdq
  000f8	f7 f9		 idiv	 ecx
  000fa	33 c9		 xor	 ecx, ecx

; 7493 : 			for (i = 0; i < btnCnt; i++)

  000fc	85 f6		 test	 esi, esi
  000fe	7e 1c		 jle	 SHORT $LN9@serverWind

; 7490 : 		{
; 7491 : 			int w;
; 7492 : 			w = winW * 64 / (btnCnt + 1);

  00100	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 7494 : 			{
; 7495 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00103	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType11@@YAXXZ@4PAY01HA[ecx*8], edx
  0010a	03 d0		 add	 edx, eax

; 7496 : 				btnLoc[i][1] = 196;

  0010c	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType11@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00117	41		 inc	 ecx
  00118	3b ce		 cmp	 ecx, esi
  0011a	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 7497 : 			}
; 7498 : 		}
; 7499 : 
; 7500 : 		msgLine = 10; //msgLine = 8;
; 7501 : 
; 7502 : 		play_se(202, 320, 240);	// ????????

  0011c	68 f0 00 00 00	 push	 240			; 000000f0H
  00121	68 40 01 00 00	 push	 320			; 00000140H
  00126	68 ca 00 00 00	 push	 202			; 000000caH
  0012b	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??serverWindowType11@@YAXXZ@4HA, 10 ; 0000000aH
  00135	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 7503 : 	}
; 7504 : 
; 7505 : 
; 7506 : 	if (ptActMenuWin != NULL)

  0013a	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00140	83 c4 0c	 add	 esp, 12			; 0000000cH
  00143	85 ff		 test	 edi, edi
  00145	0f 84 3f 03 00
	00		 je	 $LN18@serverWind
$LN81@serverWind:
  0014b	53		 push	 ebx

; 7507 : 	{
; 7508 : 		// ????î±î¶îî
; 7509 : 		id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0014c	6a 06		 push	 6
  0014e	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA
  00153	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00158	83 c4 08	 add	 esp, 8
  0015b	8b d8		 mov	 ebx, eax

; 7510 : 
; 7511 : 		id2 = -1;

  0015d	83 ce ff	 or	 esi, -1
  00160	89 9d ac fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 7512 : 		if (ptActMenuWin->hp >= 1)	// ?????î???î±î¶?î???

  00166	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  0016a	0f 8c ae 00 00
	00		 jl	 $LN12@serverWind

; 7513 : 		{
; 7514 : 			for (i = selStartLine; i < msgLine; i++)

  00170	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00176	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType11@@YAXXZ@4HA
  0017c	0f 8d 9c 00 00
	00		 jge	 $LN12@serverWind
  00182	6b d7 15	 imul	 edx, edi, 21
  00185	8b df		 mov	 ebx, edi
  00187	c1 e3 08	 shl	 ebx, 8
  0018a	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00190	89 95 b0 fd ff
	ff		 mov	 DWORD PTR tv811[ebp], edx
  00196	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL13@serverWind:

; 7515 : 			{
; 7516 : 				// î°??î¡???????î???
; 7517 : 				if (strlen(msgWN[i]) > 0)

  001a0	8b cb		 mov	 ecx, ebx
  001a2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001a5	89 85 a8 fd ff
	ff		 mov	 DWORD PTR tv798[ebp], eax
  001ab	0f 1f 44 00 00	 npad	 5
$LL83@serverWind:
  001b0	8a 01		 mov	 al, BYTE PTR [ecx]
  001b2	41		 inc	 ecx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL83@serverWind
  001b7	2b 8d a8 fd ff
	ff		 sub	 ecx, DWORD PTR tv798[ebp]
  001bd	74 3d		 je	 SHORT $LN11@serverWind

; 7518 : 				{
; 7519 : 					x1 = winX + 41 + 160;
; 7520 : 					y1 = winY + 18 + i * 21;

  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType11@@YAXXZ@4HA

; 7521 : 					x2 = x1 + 150;
; 7522 : 					y2 = y1 + 20;
; 7523 : #ifdef å¯¹è¯æ¡2æå­æé¿
; 7524 : 					//hitboxæ¡ä¹æé¿ç¹
; 7525 : 					x1 = winX + 48;

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??serverWindowType11@@YAXXZ@4HA
  001ca	83 c0 12	 add	 eax, 18			; 00000012H
  001cd	03 d0		 add	 edx, eax
  001cf	83 c1 30	 add	 ecx, 48			; 00000030H

; 7526 : 					x2 = x1 + 100;
; 7527 : #endif 
; 7528 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001d2	6a 6b		 push	 107			; 0000006bH
  001d4	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  001d7	50		 push	 eax
  001d8	8d 41 64	 lea	 eax, DWORD PTR [ecx+100]
  001db	50		 push	 eax
  001dc	52		 push	 edx
  001dd	51		 push	 ecx
  001de	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001e3	83 c4 14	 add	 esp, 20			; 00000014H
  001e6	85 c0		 test	 eax, eax
  001e8	74 12		 je	 SHORT $LN11@serverWind

; 7529 : 					{
; 7530 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  001ea	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001f1	74 09		 je	 SHORT $LN11@serverWind

; 7531 : 						{
; 7532 : 							id2 = i - selStartLine + 1;

  001f3	8b f7		 mov	 esi, edi
  001f5	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001fb	46		 inc	 esi
$LN11@serverWind:

; 7513 : 		{
; 7514 : 			for (i = selStartLine; i < msgLine; i++)

  001fc	83 85 b0 fd ff
	ff 15		 add	 DWORD PTR tv811[ebp], 21 ; 00000015H
  00203	47		 inc	 edi
  00204	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR tv811[ebp]
  0020a	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  00210	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType11@@YAXXZ@4HA
  00216	7c 88		 jl	 SHORT $LL13@serverWind
  00218	8b 9d ac fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 7533 : 						}
; 7534 : 					}
; 7535 : 				}
; 7536 : 			}
; 7537 : 		}
; 7538 : 
; 7539 : 		// î??????î?????????????î¼??
; 7540 : 		if (CheckMenuFlag()
; 7541 : 			|| joy_trg[0] & JOY_ESC
; 7542 : 			|| actBtn == 1
; 7543 : 			|| menuBtn == 1
; 7544 : 			|| disconnectServerFlag == TRUE
; 7545 : 			|| wnCloseFlag == 1)

  0021e	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00223	85 c0		 test	 eax, eax
  00225	75 3e		 jne	 SHORT $LN30@serverWind
  00227	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00231	75 32		 jne	 SHORT $LN30@serverWind
  00233	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0023b	74 28		 je	 SHORT $LN30@serverWind
  0023d	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00245	74 1e		 je	 SHORT $LN30@serverWind
  00247	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0024e	74 15		 je	 SHORT $LN30@serverWind
  00250	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00258	74 0b		 je	 SHORT $LN30@serverWind

; 7550 : 		}
; 7551 : 
; 7552 : 		if (0 <= id && id < 6
; 7553 : 			|| 0 <= id2 && id2 < 10
; 7554 : 			|| id == 100)

  0025a	85 db		 test	 ebx, ebx
  0025c	78 1e		 js	 SHORT $LN33@serverWind
  0025e	83 fb 06	 cmp	 ebx, 6
  00261	7c 22		 jl	 SHORT $LN32@serverWind
  00263	eb 17		 jmp	 SHORT $LN33@serverWind
$LN30@serverWind:

; 7546 : 		{
; 7547 : 			id = 100;
; 7548 : 			windowTypeWN = -1;
; 7549 : 			wnCloseFlag = 0;

  00265	33 c0		 xor	 eax, eax
  00267	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00271	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  00276	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN33@serverWind:

; 7550 : 		}
; 7551 : 
; 7552 : 		if (0 <= id && id < 6
; 7553 : 			|| 0 <= id2 && id2 < 10
; 7554 : 			|| id == 100)

  0027c	85 f6		 test	 esi, esi
  0027e	78 1e		 js	 SHORT $LN34@serverWind
  00280	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00283	7d 19		 jge	 SHORT $LN34@serverWind
$LN32@serverWind:

; 7555 : 		{
; 7556 : 			char data[256];
; 7557 : 			char msg[256];
; 7558 : 			if (id == 100)

  00285	83 fb 64	 cmp	 ebx, 100		; 00000064H
  00288	74 1d		 je	 SHORT $LN80@serverWind

; 7561 : 			}
; 7562 : 			else
; 7563 : 				if (0 <= id && id < 6)

  0028a	83 fb 05	 cmp	 ebx, 5
  0028d	77 0b		 ja	 SHORT $LN37@serverWind

; 7564 : 				{
; 7565 : 					btn = 1;
; 7566 : 					btn <<= id;

  0028f	bf 01 00 00 00	 mov	 edi, 1
  00294	8b cb		 mov	 ecx, ebx
  00296	d3 e7		 shl	 edi, cl

; 7567 : 				}

  00298	eb 12		 jmp	 SHORT $LN38@serverWind
$LN37@serverWind:

; 7568 : 				else
; 7569 : 				{
; 7570 : 					btn = 0;

  0029a	33 ff		 xor	 edi, edi
  0029c	eb 0e		 jmp	 SHORT $LN38@serverWind
$LN34@serverWind:

; 7550 : 		}
; 7551 : 
; 7552 : 		if (0 <= id && id < 6
; 7553 : 			|| 0 <= id2 && id2 < 10
; 7554 : 			|| id == 100)

  0029e	83 fb 64	 cmp	 ebx, 100		; 00000064H
  002a1	0f 85 83 00 00
	00		 jne	 $LN31@serverWind
$LN80@serverWind:

; 7559 : 			{
; 7560 : 				btn = WINDOW_BUTTONTYPE_CANCEL;

  002a7	bf 02 00 00 00	 mov	 edi, 2
$LN38@serverWind:

; 7571 : 				}
; 7572 : 			if (id2 < 0)
; 7573 : 				id2 = 0;
; 7574 : 			sprintf(data, "%d", id2);

  002ac	33 c0		 xor	 eax, eax
  002ae	85 f6		 test	 esi, esi
  002b0	0f 49 c6	 cmovns	 eax, esi
  002b3	8b f0		 mov	 esi, eax
  002b5	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002bb	56		 push	 esi
  002bc	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002c1	50		 push	 eax
  002c2	e8 00 00 00 00	 call	 _sprintf

; 7575 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002c7	68 ff 00 00 00	 push	 255			; 000000ffH
  002cc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002d2	50		 push	 eax
  002d3	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002df	83 c4 18	 add	 esp, 24			; 00000018H

; 7576 : 			if (bNewServer)

  002e2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002e8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002ef	50		 push	 eax
  002f0	57		 push	 edi
  002f1	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002f7	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  002fd	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00303	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00309	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0030f	74 07		 je	 SHORT $LN40@serverWind

; 7577 : 
; 7578 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00311	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00316	eb 05		 jmp	 SHORT $LN87@serverWind
$LN40@serverWind:

; 7579 : 
; 7580 : 			else
; 7581 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00318	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN87@serverWind:

; 7582 : 
; 7583 : 			windowTypeWN = -1;

  0031d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00320	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN31@serverWind:

; 7584 : 		}
; 7585 : 
; 7586 : 		if (id >= 0 || id2 >= 0)

  0032a	85 db		 test	 ebx, ebx
  0032c	0f 89 3f 01 00
	00		 jns	 $LN43@serverWind
  00332	85 f6		 test	 esi, esi
  00334	0f 89 37 01 00
	00		 jns	 $LN43@serverWind

; 7590 : 			return;
; 7591 : 		}
; 7592 : 
; 7593 : 
; 7594 : 		if (ptActMenuWin->hp >= 1)

  0033a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0033f	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00343	0f 8c 40 01 00
	00		 jl	 $LN86@serverWind

; 7595 : 		{
; 7596 : 			for (i = 0; i < msgLine; i++)

  00349	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType11@@YAXXZ@4HA
  0034f	33 f6		 xor	 esi, esi
  00351	85 d2		 test	 edx, edx
  00353	7e 62		 jle	 SHORT $LN15@serverWind
  00355	33 db		 xor	 ebx, ebx
  00357	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0035c	0f 1f 40 00	 npad	 4
$LL16@serverWind:

; 7597 : 			{
; 7598 : 				if (strlen(msgWN[i]) > 0)

  00360	8b cf		 mov	 ecx, edi
  00362	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00365	89 85 ac fd ff
	ff		 mov	 DWORD PTR tv802[ebp], eax
  0036b	0f 1f 44 00 00	 npad	 5
$LL84@serverWind:
  00370	8a 01		 mov	 al, BYTE PTR [ecx]
  00372	41		 inc	 ecx
  00373	84 c0		 test	 al, al
  00375	75 f9		 jne	 SHORT $LL84@serverWind
  00377	2b 8d ac fd ff
	ff		 sub	 ecx, DWORD PTR tv802[ebp]
  0037d	74 2a		 je	 SHORT $LN14@serverWind

; 7599 : 				{
; 7600 : 
; 7601 : #ifdef _FONT_STYLE_
; 7602 : 					PutWinText(winX + 44, winY + 21 + i * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);

  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType11@@YAXXZ@4HA
  00384	56		 push	 esi
  00385	6a 00		 push	 0
  00387	57		 push	 edi
  00388	83 c0 15	 add	 eax, 21			; 00000015H
  0038b	6a 00		 push	 0
  0038d	03 c3		 add	 eax, ebx
  0038f	6a 01		 push	 1
  00391	50		 push	 eax
  00392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType11@@YAXXZ@4HA
  00397	83 c0 2c	 add	 eax, 44			; 0000002cH
  0039a	50		 push	 eax
  0039b	e8 00 00 00 00	 call	 ?PutWinText@@YAXHHDHPADHH@Z ; PutWinText
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType11@@YAXXZ@4HA
  003a6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN14@serverWind:

; 7595 : 		{
; 7596 : 			for (i = 0; i < msgLine; i++)

  003a9	46		 inc	 esi
  003aa	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  003b0	83 c3 15	 add	 ebx, 21			; 00000015H
  003b3	3b f2		 cmp	 esi, edx
  003b5	7c a9		 jl	 SHORT $LL16@serverWind
$LN15@serverWind:

; 7603 : #else
; 7604 : 					StockFontBuffer(winX + 44, winY + 21 + i * 21,
; 7605 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 7606 : #endif
; 7607 : 
; 7608 : 				}
; 7609 : 			}
; 7610 : 			j = 0;
; 7611 : 
; 7612 : 			int _btnLoc[6][2] =
; 7613 : 			{
; 7614 : 				{ 100,200},

  003b7	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000c800000064000000c800000064
  003be	8d bd b4 fd ff
	ff		 lea	 edi, DWORD PTR __btnLoc$1[ebp]
  003c4	0f 11 85 b4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp], xmm0
  003cb	33 c0		 xor	 eax, eax

; 7615 : 				{ 100,200},
; 7616 : 				{ 100,200},
; 7617 : 				{ 100,200},
; 7618 : 				{ 100,200},
; 7619 : 				{ 100,200}
; 7620 : 			};
; 7621 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  003cd	bb 01 00 00 00	 mov	 ebx, 1
  003d2	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000c800000064000000c800000064
  003d9	33 f6		 xor	 esi, esi
  003db	0f 11 85 c4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+16], xmm0
  003e2	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  003e8	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000c800000064000000c800000064
  003ef	0f 11 85 d4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+32], xmm0
  003f6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL19@serverWind:

; 7622 : 			{
; 7623 : 				btnId[i] = -2;

  00400	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 7624 : 				if (buttonTypeWN & mask)

  0040a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00410	74 41		 je	 SHORT $LN17@serverWind

; 7625 : 				{
; 7626 : 					if (j < btnCnt)

  00412	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?btnCnt@?1??serverWindowType11@@YAXXZ@4HA
  00418	7d 39		 jge	 SHORT $LN17@serverWind

; 7627 : 					{
; 7628 : 
; 7629 : 						btnId[i] = StockDispBuffer(winX + _btnLoc[i][0], winY + _btnLoc[i][1], DISP_PRIO_IME3, _btnTitle[i], 2);

  0041a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0041d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType11@@YAXXZ@4HA
  00423	6a 02		 push	 2
  00425	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR __btnTitle$[ebp+esi]
  0042c	6a 69		 push	 105			; 00000069H
  0042e	50		 push	 eax
  0042f	8b 07		 mov	 eax, DWORD PTR [edi]
  00431	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType11@@YAXXZ@4HA
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0043d	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType11@@YAXXZ@4PAHA[esi], eax
  00443	83 c4 14	 add	 esp, 20			; 00000014H

; 7630 : 
; 7631 : 						//btnId[i] =
; 7632 : 						//	StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 7633 : 						//		FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 7634 : 						j++;

  00446	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  0044c	40		 inc	 eax
  0044d	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
$LN17@serverWind:

; 7615 : 				{ 100,200},
; 7616 : 				{ 100,200},
; 7617 : 				{ 100,200},
; 7618 : 				{ 100,200},
; 7619 : 				{ 100,200}
; 7620 : 			};
; 7621 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00453	83 c6 04	 add	 esi, 4
  00456	83 c7 08	 add	 edi, 8
  00459	03 db		 add	 ebx, ebx
  0045b	83 fe 18	 cmp	 esi, 24			; 00000018H
  0045e	7c a0		 jl	 SHORT $LL19@serverWind

; 7635 : 					}
; 7636 : 				}
; 7637 : 			}
; 7638 : 		}
; 7639 : 	}
; 7640 : }

  00460	5b		 pop	 ebx
  00461	5f		 pop	 edi
  00462	5e		 pop	 esi
  00463	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00466	33 cd		 xor	 ecx, ebp
  00468	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0046d	8b e5		 mov	 esp, ebp
  0046f	5d		 pop	 ebp
  00470	c3		 ret	 0
$LN43@serverWind:

; 7587 : 		{
; 7588 : 			DeathAction(ptActMenuWin);

  00471	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00477	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0047c	83 c4 04	 add	 esp, 4

; 7589 : 			ptActMenuWin = NULL;

  0047f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN86@serverWind:
  00489	5b		 pop	 ebx
$LN18@serverWind:

; 7635 : 					}
; 7636 : 				}
; 7637 : 			}
; 7638 : 		}
; 7639 : 	}
; 7640 : }

  0048a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0048d	5f		 pop	 edi
  0048e	33 cd		 xor	 ecx, ebp
  00490	5e		 pop	 esi
  00491	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00496	8b e5		 mov	 esp, ebp
  00498	5d		 pop	 ebp
  00499	c3		 ret	 0
?serverWindowType11@@YAXXZ ENDP				; serverWindowType11
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType10@@YAXXZ
_TEXT	SEGMENT
tv805 = -600						; size = 4
tv799 = -600						; size = 4
_id$1$ = -596						; size = 4
tv833 = -596						; size = 4
tv804 = -596						; size = 4
_j$1$ = -592						; size = 4
tv812 = -592						; size = 4
__btnLoc$1 = -588					; size = 48
__btnTitle$ = -540					; size = 24
_data$2 = -516						; size = 256
_msg$3 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType10@@YAXXZ PROC				; serverWindowType10, COMDAT

; 7213 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 58 02 00
	00		 sub	 esp, 600		; 00000258H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7214 : 	static int winX, winY;
; 7215 : 	static int winW, winH;
; 7216 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 7217 : 	static int btnLoc[6][2];
; 7218 : 	static int btnCnt;
; 7219 : 	static int msgLine;
; 7220 : 	char* btnTitle[] =
; 7221 : 	{
; 7222 : 		" ï¼¯ï¼« ",
; 7223 : 		"CANCEL",
; 7224 : 		"í  ì¸",
; 7225 : 		"ì·¨  ì",
; 7226 : 		"ì´ì  íì´ì§",
; 7227 : 		"ë¤ì íì´ì§"
; 7228 : 	};
; 7229 : 
; 7230 : 	int _btnTitle[] =
; 7231 : 	{
; 7232 : 		CG_OK_BTN,

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000065c2000065ed000065c2000065ed
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 7233 : 		CG_CANCEL_BTN,
; 7234 : 		CG_OK_BTN,
; 7235 : 		CG_CANCEL_BTN,
; 7236 : 		CG_NEXT_BTN,
; 7237 : 		CG_PREV_BTN
; 7238 : 	};
; 7239 : 	int id, id2;
; 7240 : 	int i, j;
; 7241 : 	int mask;
; 7242 : 	int btn;
; 7243 : 	int x1, y1, x2, y2;
; 7244 : 
; 7245 : 	if (ptActMenuWin == NULL)

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00022	c7 85 f4 fd ff
	ff 46 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+16], 26182 ; 00006646H
  0002c	c7 85 f8 fd ff
	ff 44 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+20], 26180 ; 00006644H
  00036	0f 11 85 e4 fd
	ff ff		 movups	 XMMWORD PTR __btnTitle$[ebp], xmm0
  0003d	85 ff		 test	 edi, edi
  0003f	0f 85 07 01 00
	00		 jne	 $LN81@serverWind

; 7246 : 	{
; 7247 : 		winW = 5;
; 7248 : 		winH = 4;
; 7249 : 		winX = (640 - winW * 64) / 2;
; 7250 : 		winY = (456 - winH * 48) / 2;
; 7251 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00045	6a 01		 push	 1
  00047	57		 push	 edi
  00048	6a 04		 push	 4
  0004a	6a 05		 push	 5
  0004c	68 84 00 00 00	 push	 132			; 00000084H
  00051	68 a0 00 00 00	 push	 160			; 000000a0H
  00056	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType10@@YAXXZ@4HA, 5
  00060	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType10@@YAXXZ@4HA, 4
  0006a	c7 05 00 00 00
	00 a0 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA, 160 ; 000000a0H
  00074	c7 05 00 00 00
	00 84 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA, 132 ; 00000084H
  0007e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 7252 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 7253 : 		winX = ptActMenuWin->x;
; 7254 : 		winY = ptActMenuWin->y;
; 7255 : #endif
; 7256 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 7257 : 		{
; 7258 : 			btnId[i] = -2;

  00083	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 7259 : 		}
; 7260 : 
; 7261 : 		mask = 1;
; 7262 : 		btnCnt = 0;

  0008a	33 f6		 xor	 esi, esi

; 7263 : 		for (i = 0; i < 6; i++, mask <<= 1)

  0008c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  00092	83 c4 18	 add	 esp, 24			; 00000018H
  00095	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  0009a	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0009d	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000a0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA, ecx
  000a6	33 c9		 xor	 ecx, ecx
  000a8	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA, eax
  000ad	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000b0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA, xmm0
  000b7	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000c1	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000cb	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType10@@YAXXZ@4HA, esi
$LL7@serverWind:

; 7264 : 		{
; 7265 : 			if (buttonTypeWN & mask)

  000d1	85 d0		 test	 edx, eax
  000d3	74 06		 je	 SHORT $LN5@serverWind

; 7266 : 			{
; 7267 : 				btnCnt++;

  000d5	46		 inc	 esi
  000d6	83 fe 04	 cmp	 esi, 4

; 7268 : 				if (btnCnt == 4)

  000d9	74 08		 je	 SHORT $LN55@serverWind
$LN5@serverWind:

; 7263 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000db	41		 inc	 ecx
  000dc	03 c0		 add	 eax, eax
  000de	83 f9 06	 cmp	 ecx, 6
  000e1	7c ee		 jl	 SHORT $LL7@serverWind
$LN55@serverWind:

; 7266 : 			{
; 7267 : 				btnCnt++;

  000e3	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType10@@YAXXZ@4HA, esi

; 7269 : 					break;
; 7270 : 			}
; 7271 : 		}
; 7272 : 		// ????????î¸î?î³????
; 7273 : 		if (btnCnt > 0)

  000e9	85 f6		 test	 esi, esi
  000eb	7e 30		 jle	 SHORT $LN9@serverWind

; 7274 : 		{
; 7275 : 			int w;
; 7276 : 			w = winW * 64 / (btnCnt + 1);

  000ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType10@@YAXXZ@4HA
  000f2	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000f5	c1 e0 06	 shl	 eax, 6
  000f8	99		 cdq
  000f9	f7 f9		 idiv	 ecx
  000fb	33 c9		 xor	 ecx, ecx

; 7277 : 			for (i = 0; i < btnCnt; i++)

  000fd	85 f6		 test	 esi, esi
  000ff	7e 1c		 jle	 SHORT $LN9@serverWind

; 7274 : 		{
; 7275 : 			int w;
; 7276 : 			w = winW * 64 / (btnCnt + 1);

  00101	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 7278 : 			{
; 7279 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00104	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType10@@YAXXZ@4PAY01HA[ecx*8], edx
  0010b	03 d0		 add	 edx, eax

; 7280 : 				btnLoc[i][1] = 196;

  0010d	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType10@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00118	41		 inc	 ecx
  00119	3b ce		 cmp	 ecx, esi
  0011b	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 7281 : 			}
; 7282 : 		}
; 7283 : 
; 7284 : 		msgLine = 10; //msgLine = 8;
; 7285 : 
; 7286 : 		play_se(202, 320, 240);	// ????????

  0011d	68 f0 00 00 00	 push	 240			; 000000f0H
  00122	68 40 01 00 00	 push	 320			; 00000140H
  00127	68 ca 00 00 00	 push	 202			; 000000caH
  0012c	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??serverWindowType10@@YAXXZ@4HA, 10 ; 0000000aH
  00136	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 7287 : 	}
; 7288 : 
; 7289 : 
; 7290 : 	if (ptActMenuWin != NULL)

  0013b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00141	83 c4 0c	 add	 esp, 12			; 0000000cH
  00144	85 ff		 test	 edi, edi
  00146	0f 84 61 03 00
	00		 je	 $LN44@serverWind
$LN81@serverWind:
  0014c	53		 push	 ebx

; 7291 : 	{
; 7292 : 		// ????î±î¶îî
; 7293 : 		id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0014d	6a 06		 push	 6
  0014f	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA
  00154	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00159	83 c4 08	 add	 esp, 8
  0015c	8b d8		 mov	 ebx, eax

; 7294 : 
; 7295 : 		id2 = -1;

  0015e	83 ce ff	 or	 esi, -1
  00161	89 9d ac fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 7296 : 		if (ptActMenuWin->hp >= 1)	// ?????î???î±î¶?î???

  00167	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  0016b	0f 8c b0 00 00
	00		 jl	 $LN12@serverWind

; 7297 : 		{
; 7298 : 			for (i = selStartLine; i < msgLine; i++)

  00171	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00177	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType10@@YAXXZ@4HA
  0017d	0f 8d 9e 00 00
	00		 jge	 $LN12@serverWind
  00183	6b d7 15	 imul	 edx, edi, 21
  00186	8b df		 mov	 ebx, edi
  00188	c1 e3 08	 shl	 ebx, 8
  0018b	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00191	89 95 b0 fd ff
	ff		 mov	 DWORD PTR tv812[ebp], edx
  00197	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL13@serverWind:

; 7299 : 			{
; 7300 : 				// î°??î¡???????î???
; 7301 : 				if (strlen(msgWN[i]) > 0)

  001a0	8b cb		 mov	 ecx, ebx
  001a2	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  001a5	89 85 a8 fd ff
	ff		 mov	 DWORD PTR tv799[ebp], eax
  001ab	0f 1f 44 00 00	 npad	 5
$LL83@serverWind:
  001b0	8a 01		 mov	 al, BYTE PTR [ecx]
  001b2	41		 inc	 ecx
  001b3	84 c0		 test	 al, al
  001b5	75 f9		 jne	 SHORT $LL83@serverWind
  001b7	2b 8d a8 fd ff
	ff		 sub	 ecx, DWORD PTR tv799[ebp]
  001bd	74 40		 je	 SHORT $LN11@serverWind

; 7302 : 				{
; 7303 : 					x1 = winX + 41 + 160;
; 7304 : 					y1 = winY + 18 + i * 21;

  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA

; 7305 : 					x2 = x1 + 150;
; 7306 : 					y2 = y1 + 20;
; 7307 : #ifdef å¯¹è¯æ¡2æå­æé¿
; 7308 : 					//hitboxæ¡ä¹æé¿ç¹
; 7309 : 					x1 = winX + 11 + 160;

  001c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA
  001ca	83 c0 12	 add	 eax, 18			; 00000012H
  001cd	03 d0		 add	 edx, eax
  001cf	81 c1 ab 00 00
	00		 add	 ecx, 171		; 000000abH

; 7310 : 					x2 = x1 + 100;
; 7311 : #endif 
; 7312 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001d5	6a 6b		 push	 107			; 0000006bH
  001d7	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  001da	50		 push	 eax
  001db	8d 41 64	 lea	 eax, DWORD PTR [ecx+100]
  001de	50		 push	 eax
  001df	52		 push	 edx
  001e0	51		 push	 ecx
  001e1	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001e6	83 c4 14	 add	 esp, 20			; 00000014H
  001e9	85 c0		 test	 eax, eax
  001eb	74 12		 je	 SHORT $LN11@serverWind

; 7313 : 					{
; 7314 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  001ed	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001f4	74 09		 je	 SHORT $LN11@serverWind

; 7315 : 						{
; 7316 : 							id2 = i - selStartLine + 1;

  001f6	8b f7		 mov	 esi, edi
  001f8	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001fe	46		 inc	 esi
$LN11@serverWind:

; 7297 : 		{
; 7298 : 			for (i = selStartLine; i < msgLine; i++)

  001ff	83 85 b0 fd ff
	ff 15		 add	 DWORD PTR tv812[ebp], 21 ; 00000015H
  00206	47		 inc	 edi
  00207	8b 95 b0 fd ff
	ff		 mov	 edx, DWORD PTR tv812[ebp]
  0020d	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  00213	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType10@@YAXXZ@4HA
  00219	7c 85		 jl	 SHORT $LL13@serverWind
  0021b	8b 9d ac fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 7317 : 						}
; 7318 : 					}
; 7319 : 				}
; 7320 : 			}
; 7321 : 		}
; 7322 : 
; 7323 : 		// î??????î?????????????î¼??
; 7324 : 		if (CheckMenuFlag()
; 7325 : 			|| joy_trg[0] & JOY_ESC
; 7326 : 			|| actBtn == 1
; 7327 : 			|| menuBtn == 1
; 7328 : 			|| disconnectServerFlag == TRUE
; 7329 : 			|| wnCloseFlag == 1)

  00221	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00226	85 c0		 test	 eax, eax
  00228	75 3e		 jne	 SHORT $LN30@serverWind
  0022a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00234	75 32		 jne	 SHORT $LN30@serverWind
  00236	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0023e	74 28		 je	 SHORT $LN30@serverWind
  00240	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00248	74 1e		 je	 SHORT $LN30@serverWind
  0024a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00251	74 15		 je	 SHORT $LN30@serverWind
  00253	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0025b	74 0b		 je	 SHORT $LN30@serverWind

; 7334 : 		}
; 7335 : 
; 7336 : 		if (0 <= id && id < 6
; 7337 : 			|| 0 <= id2 && id2 < 10
; 7338 : 			|| id == 100)

  0025d	85 db		 test	 ebx, ebx
  0025f	78 1e		 js	 SHORT $LN33@serverWind
  00261	83 fb 06	 cmp	 ebx, 6
  00264	7c 22		 jl	 SHORT $LN32@serverWind
  00266	eb 17		 jmp	 SHORT $LN33@serverWind
$LN30@serverWind:

; 7330 : 		{
; 7331 : 			id = 100;
; 7332 : 			windowTypeWN = -1;
; 7333 : 			wnCloseFlag = 0;

  00268	33 c0		 xor	 eax, eax
  0026a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00274	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  00279	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN33@serverWind:

; 7334 : 		}
; 7335 : 
; 7336 : 		if (0 <= id && id < 6
; 7337 : 			|| 0 <= id2 && id2 < 10
; 7338 : 			|| id == 100)

  0027f	85 f6		 test	 esi, esi
  00281	78 1e		 js	 SHORT $LN34@serverWind
  00283	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00286	7d 19		 jge	 SHORT $LN34@serverWind
$LN32@serverWind:

; 7339 : 		{
; 7340 : 			char data[256];
; 7341 : 			char msg[256];
; 7342 : 			if (id == 100)

  00288	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0028b	74 1d		 je	 SHORT $LN80@serverWind

; 7345 : 			}
; 7346 : 			else
; 7347 : 				if (0 <= id && id < 6)

  0028d	83 fb 05	 cmp	 ebx, 5
  00290	77 0b		 ja	 SHORT $LN37@serverWind

; 7348 : 				{
; 7349 : 					btn = 1;
; 7350 : 					btn <<= id;

  00292	bf 01 00 00 00	 mov	 edi, 1
  00297	8b cb		 mov	 ecx, ebx
  00299	d3 e7		 shl	 edi, cl

; 7351 : 				}

  0029b	eb 12		 jmp	 SHORT $LN38@serverWind
$LN37@serverWind:

; 7352 : 				else
; 7353 : 				{
; 7354 : 					btn = 0;

  0029d	33 ff		 xor	 edi, edi
  0029f	eb 0e		 jmp	 SHORT $LN38@serverWind
$LN34@serverWind:

; 7334 : 		}
; 7335 : 
; 7336 : 		if (0 <= id && id < 6
; 7337 : 			|| 0 <= id2 && id2 < 10
; 7338 : 			|| id == 100)

  002a1	83 fb 64	 cmp	 ebx, 100		; 00000064H
  002a4	0f 85 83 00 00
	00		 jne	 $LN31@serverWind
$LN80@serverWind:

; 7343 : 			{
; 7344 : 				btn = WINDOW_BUTTONTYPE_CANCEL;

  002aa	bf 02 00 00 00	 mov	 edi, 2
$LN38@serverWind:

; 7355 : 				}
; 7356 : 			if (id2 < 0)
; 7357 : 				id2 = 0;
; 7358 : 			sprintf(data, "%d", id2);

  002af	33 c0		 xor	 eax, eax
  002b1	85 f6		 test	 esi, esi
  002b3	0f 49 c6	 cmovns	 eax, esi
  002b6	8b f0		 mov	 esi, eax
  002b8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002be	56		 push	 esi
  002bf	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002c4	50		 push	 eax
  002c5	e8 00 00 00 00	 call	 _sprintf

; 7359 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002ca	68 ff 00 00 00	 push	 255			; 000000ffH
  002cf	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002d5	50		 push	 eax
  002d6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  002dc	50		 push	 eax
  002dd	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002e2	83 c4 18	 add	 esp, 24			; 00000018H

; 7360 : 			if (bNewServer)

  002e5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002eb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002f2	50		 push	 eax
  002f3	57		 push	 edi
  002f4	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002fa	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00300	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00306	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0030c	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00312	74 07		 je	 SHORT $LN40@serverWind

; 7361 : 
; 7362 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00314	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00319	eb 05		 jmp	 SHORT $LN87@serverWind
$LN40@serverWind:

; 7363 : 
; 7364 : 			else
; 7365 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0031b	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN87@serverWind:

; 7366 : 
; 7367 : 			windowTypeWN = -1;

  00320	83 c4 1c	 add	 esp, 28			; 0000001cH
  00323	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN31@serverWind:

; 7368 : 		}
; 7369 : 
; 7370 : 		if (id >= 0 || id2 >= 0)

  0032d	85 db		 test	 ebx, ebx
  0032f	0f 89 5f 01 00
	00		 jns	 $LN43@serverWind
  00335	85 f6		 test	 esi, esi
  00337	0f 89 57 01 00
	00		 jns	 $LN43@serverWind

; 7374 : 			return;
; 7375 : 		}
; 7376 : 
; 7377 : 
; 7378 : 		if (ptActMenuWin->hp >= 1)

  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00342	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00346	0f 8c 60 01 00
	00		 jl	 $LN86@serverWind

; 7379 : 		{
; 7380 : 			for (i = 0; i < msgLine; i++)

  0034c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType10@@YAXXZ@4HA
  00352	33 f6		 xor	 esi, esi
  00354	85 d2		 test	 edx, edx
  00356	7e 5f		 jle	 SHORT $LN15@serverWind
  00358	33 db		 xor	 ebx, ebx
  0035a	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0035f	90		 npad	 1
$LL16@serverWind:

; 7381 : 			{
; 7382 : 				if (strlen(msgWN[i]) > 0)

  00360	8b cf		 mov	 ecx, edi
  00362	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00365	89 85 ac fd ff
	ff		 mov	 DWORD PTR tv804[ebp], eax
  0036b	0f 1f 44 00 00	 npad	 5
$LL84@serverWind:
  00370	8a 01		 mov	 al, BYTE PTR [ecx]
  00372	41		 inc	 ecx
  00373	84 c0		 test	 al, al
  00375	75 f9		 jne	 SHORT $LL84@serverWind
  00377	2b 8d ac fd ff
	ff		 sub	 ecx, DWORD PTR tv804[ebp]
  0037d	74 2a		 je	 SHORT $LN14@serverWind

; 7383 : 				{
; 7384 : 
; 7385 : #ifdef _FONT_STYLE_
; 7386 : 					PutWinText(winX + 44, winY + 21 + i * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);

  0037f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA
  00384	56		 push	 esi
  00385	6a 00		 push	 0
  00387	57		 push	 edi
  00388	83 c0 15	 add	 eax, 21			; 00000015H
  0038b	6a 00		 push	 0
  0038d	03 c3		 add	 eax, ebx
  0038f	6a 01		 push	 1
  00391	50		 push	 eax
  00392	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA
  00397	83 c0 2c	 add	 eax, 44			; 0000002cH
  0039a	50		 push	 eax
  0039b	e8 00 00 00 00	 call	 ?PutWinText@@YAXHHDHPADHH@Z ; PutWinText
  003a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType10@@YAXXZ@4HA
  003a6	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN14@serverWind:

; 7379 : 		{
; 7380 : 			for (i = 0; i < msgLine; i++)

  003a9	46		 inc	 esi
  003aa	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  003b0	83 c3 15	 add	 ebx, 21			; 00000015H
  003b3	3b f2		 cmp	 esi, edx
  003b5	7c a9		 jl	 SHORT $LL16@serverWind
$LN15@serverWind:

; 7387 : #else
; 7388 : 					StockFontBuffer(winX + 44, winY + 21 + i * 21,
; 7389 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 7390 : #endif
; 7391 : 
; 7392 : 				}
; 7393 : 			}
; 7394 : 			j = 0;
; 7395 : 
; 7396 : 			int _btnLoc[6][2] =
; 7397 : 			{
; 7398 : 				{ 100,160},

  003b7	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000a0000000f0000000a000000064
  003be	8d bd b4 fd ff
	ff		 lea	 edi, DWORD PTR __btnLoc$1[ebp]
  003c4	0f 11 85 b4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp], xmm0
  003cb	33 c0		 xor	 eax, eax

; 7399 : 				{ 240,160},
; 7400 : 				{ 100,160},
; 7401 : 				{ 240,160},
; 7402 : 				{ 100,160},
; 7403 : 				{ 240,160}
; 7404 : 			};
; 7405 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  003cd	bb 01 00 00 00	 mov	 ebx, 1
  003d2	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000a0000000f0000000a000000064
  003d9	33 f6		 xor	 esi, esi
  003db	0f 11 85 c4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+16], xmm0
  003e2	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  003e8	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000a0000000f0000000a000000064
  003ef	0f 11 85 d4 fd
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+32], xmm0
  003f6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL19@serverWind:

; 7406 : 			{
; 7407 : 				btnId[i] = -2;

  00400	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 7408 : 				if (buttonTypeWN & mask)

  0040a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00410	74 41		 je	 SHORT $LN17@serverWind

; 7409 : 				{
; 7410 : 					if (j < btnCnt)

  00412	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?btnCnt@?1??serverWindowType10@@YAXXZ@4HA
  00418	7d 39		 jge	 SHORT $LN17@serverWind

; 7411 : 					{
; 7412 : 
; 7413 : 						btnId[i] = StockDispBuffer(winX + _btnLoc[i][0], winY + _btnLoc[i][1], DISP_PRIO_IME3, _btnTitle[i], 2);

  0041a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0041d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA
  00423	6a 02		 push	 2
  00425	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR __btnTitle$[ebp+esi]
  0042c	6a 69		 push	 105			; 00000069H
  0042e	50		 push	 eax
  0042f	8b 07		 mov	 eax, DWORD PTR [edi]
  00431	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0043d	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType10@@YAXXZ@4PAHA[esi], eax
  00443	83 c4 14	 add	 esp, 20			; 00000014H

; 7414 : 
; 7415 : 						//btnId[i] =
; 7416 : 						//	StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 7417 : 						//		FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 7418 : 						j++;

  00446	8b 85 b0 fd ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  0044c	40		 inc	 eax
  0044d	89 85 b0 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
$LN17@serverWind:

; 7399 : 				{ 240,160},
; 7400 : 				{ 100,160},
; 7401 : 				{ 240,160},
; 7402 : 				{ 100,160},
; 7403 : 				{ 240,160}
; 7404 : 			};
; 7405 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00453	83 c6 04	 add	 esi, 4
  00456	83 c7 08	 add	 edi, 8
  00459	03 db		 add	 ebx, ebx
  0045b	83 fe 18	 cmp	 esi, 24			; 00000018H
  0045e	7c a0		 jl	 SHORT $LL19@serverWind

; 7419 : 					}
; 7420 : 				}
; 7421 : 			}
; 7422 : 
; 7423 : 			StockDispBuffer(winX + 100, winY + 123, DISP_PRIO_MENU, IMAGE_VIP_SHOP_POPO, 0);

  00460	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType10@@YAXXZ@4HA
  00465	6a 00		 push	 0
  00467	68 b0 04 01 00	 push	 66736			; 000104b0H
  0046c	83 c0 7b	 add	 eax, 123		; 0000007bH
  0046f	6a 68		 push	 104			; 00000068H
  00471	50		 push	 eax
  00472	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType10@@YAXXZ@4HA
  00477	83 c0 64	 add	 eax, 100		; 00000064H
  0047a	50		 push	 eax
  0047b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00480	83 c4 14	 add	 esp, 20			; 00000014H
  00483	5b		 pop	 ebx
  00484	5f		 pop	 edi

; 7424 : 		}
; 7425 : 	}
; 7426 : }

  00485	5e		 pop	 esi
  00486	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00489	33 cd		 xor	 ecx, ebp
  0048b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00490	8b e5		 mov	 esp, ebp
  00492	5d		 pop	 ebp
  00493	c3		 ret	 0
$LN43@serverWind:

; 7371 : 		{
; 7372 : 			DeathAction(ptActMenuWin);

  00494	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0049a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0049f	83 c4 04	 add	 esp, 4

; 7373 : 			ptActMenuWin = NULL;

  004a2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN86@serverWind:
  004ac	5b		 pop	 ebx
$LN44@serverWind:

; 7424 : 		}
; 7425 : 	}
; 7426 : }

  004ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004b0	5f		 pop	 edi
  004b1	33 cd		 xor	 ecx, ebp
  004b3	5e		 pop	 esi
  004b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004b9	8b e5		 mov	 esp, ebp
  004bb	5d		 pop	 ebp
  004bc	c3		 ret	 0
?serverWindowType10@@YAXXZ ENDP				; serverWindowType10
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType9@@YAXXZ
_TEXT	SEGMENT
tv1612 = -556						; size = 4
tv1872 = -552						; size = 4
_id$1$ = -548						; size = 4
tv1871 = -548						; size = 4
_id2$1$ = -544						; size = 4
tv1877 = -544						; size = 4
_btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_mybuff$2 = -260					; size = 256
_msg$3 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType9@@YAXXZ PROC				; serverWindowType9, COMDAT

; 7011 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 2c 02 00
	00		 sub	 esp, 556		; 0000022cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 7012 : 	static int winX, winY;
; 7013 : 	static int winW, winH;
; 7014 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 7015 : 	static int btnLoc[6][2];
; 7016 : 	static int btnCnt;
; 7017 : 	char* btnTitle[] = { " ï¼¯ï¼« ", "CANCEL", "í  ì¸", "ì·¨  ì", "ì´ì  íì´ì§", "ë¤ì íì´ì§" };
; 7018 : 
; 7019 : 	static int selectID[3] = { -1,-1,-1 };
; 7020 : 	static int selects = 0;
; 7021 : 
; 7022 : 	int id, id2;
; 7023 : 	int i, j;
; 7024 : 	int mask, btn, len;
; 7025 : 	int x1, y1, x2, y2;
; 7026 : 
; 7027 : 	if (ptActMenuWin == NULL) {

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00024	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002e	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  00038	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  00042	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@
  0004c	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@
  00056	85 f6		 test	 esi, esi
  00058	0f 85 8b 01 00
	00		 jne	 $LN118@serverWind

; 7028 : 		winW = 7;
; 7029 : 		winH = 5;
; 7030 : 		winX = (640 - winW * 64) / 2;
; 7031 : 		winY = (456 - winH * 48) / 2;
; 7032 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	56		 push	 esi
  00061	6a 05		 push	 5
  00063	6a 07		 push	 7
  00065	6a 6c		 push	 108			; 0000006cH
  00067	6a 60		 push	 96			; 00000060H
  00069	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType9@@YAXXZ@4HA, 7
  00073	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType9@@YAXXZ@4HA, 5
  0007d	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA, 96 ; 00000060H
  00087	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA, 108 ; 0000006cH
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 7033 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 7034 : 		winX = ptActMenuWin->x;
; 7035 : 		winY = ptActMenuWin->y;
; 7036 : #endif
; 7037 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 7038 : 			btnId[i] = -2;

  00096	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0009d	83 c4 18	 add	 esp, 24			; 00000018H

; 7039 : 		}
; 7040 : 		mask = 1;
; 7041 : 		btnCnt = 0;
; 7042 : 		for (i = 0; i < 6; i++, mask <<= 1) {

  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ae	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA, ecx
  000b7	33 c9		 xor	 ecx, ecx
  000b9	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA, eax
  000be	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  000c1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA, xmm0
  000c8	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000d2	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000dc	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType9@@YAXXZ@4HA, esi
$LL7@serverWind:

; 7043 : 			if (buttonTypeWN & mask) {

  000e2	85 d0		 test	 edx, eax
  000e4	74 06		 je	 SHORT $LN5@serverWind

; 7044 : 				btnCnt++;

  000e6	46		 inc	 esi
  000e7	83 fe 04	 cmp	 esi, 4

; 7045 : 				if (btnCnt == 4)

  000ea	74 08		 je	 SHORT $LN77@serverWind
$LN5@serverWind:

; 7039 : 		}
; 7040 : 		mask = 1;
; 7041 : 		btnCnt = 0;
; 7042 : 		for (i = 0; i < 6; i++, mask <<= 1) {

  000ec	41		 inc	 ecx
  000ed	03 c0		 add	 eax, eax
  000ef	83 f9 06	 cmp	 ecx, 6
  000f2	7c ee		 jl	 SHORT $LL7@serverWind
$LN77@serverWind:

; 7044 : 				btnCnt++;

  000f4	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType9@@YAXXZ@4HA, esi

; 7046 : 					break;
; 7047 : 			}
; 7048 : 		}
; 7049 : 		if (btnCnt > 0) {

  000fa	85 f6		 test	 esi, esi
  000fc	7e 30		 jle	 SHORT $LN9@serverWind

; 7050 : 			int w;
; 7051 : 			w = winW * 64 / (btnCnt + 1);

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType9@@YAXXZ@4HA
  00103	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00106	c1 e0 06	 shl	 eax, 6
  00109	99		 cdq
  0010a	f7 f9		 idiv	 ecx
  0010c	33 c9		 xor	 ecx, ecx

; 7052 : 			for (i = 0; i < btnCnt; i++) {

  0010e	85 f6		 test	 esi, esi
  00110	7e 1c		 jle	 SHORT $LN9@serverWind

; 7050 : 			int w;
; 7051 : 			w = winW * 64 / (btnCnt + 1);

  00112	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 7053 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00115	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA[ecx*8], edx
  0011c	03 d0		 add	 edx, eax

; 7054 : 				btnLoc[i][1] = 196;

  0011e	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00129	41		 inc	 ecx
  0012a	3b ce		 cmp	 ecx, esi
  0012c	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 7055 : 			}
; 7056 : 		}
; 7057 : 		if (selects == 0) {

  0012e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?selects@?1??serverWindowType9@@YAXXZ@4HA, 0
  00135	75 41		 jne	 SHORT $LN30@serverWind

; 7058 : 			strcpy(msgWN[0], "ï¼ï¼ï¼       ë©ì¸ í«ì ì ííì­ìì¤     ï¼ï¼ï¼");

  00137	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@
  0013e	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+40
  00143	a3 28 00 00 00	 mov	 DWORD PTR ?msgWN@@3PAY0BAA@DA+40, eax
  00148	66 a1 2c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+44
  0014e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA, xmm0
  00155	66 a3 2c 00 00
	00		 mov	 WORD PTR ?msgWN@@3PAY0BAA@DA+44, ax
  0015b	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+16
  00162	a0 2e 00 00 00	 mov	 al, BYTE PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+46
  00167	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+16, xmm0
  0016e	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CP@PALAGGON@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LI?$NO?$MA?N?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+32

; 7059 : 		}

  00176	eb 3f		 jmp	 SHORT $LN125@serverWind
$LN30@serverWind:

; 7060 : 		else {
; 7061 : 			strcpy(msgWN[0], "ï¼ï¼ï¼       ìë í«ì ì ííì­ìì¤     ï¼ï¼ï¼");

  00178	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@
  0017f	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+40
  00184	a3 28 00 00 00	 mov	 DWORD PTR ?msgWN@@3PAY0BAA@DA+40, eax
  00189	66 a1 2c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+44
  0018f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA, xmm0
  00196	66 a3 2c 00 00
	00		 mov	 WORD PTR ?msgWN@@3PAY0BAA@DA+44, ax
  0019c	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+16
  001a3	a0 2e 00 00 00	 mov	 al, BYTE PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+46
  001a8	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+16, xmm0
  001af	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CP@GFPMIDDF@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?$LL?s?$LE?k?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J@+32
$LN125@serverWind:

; 7062 : 		}
; 7063 : 		play_se(202, 320, 240);	// ????????

  001b7	68 f0 00 00 00	 push	 240			; 000000f0H
  001bc	68 40 01 00 00	 push	 320			; 00000140H
  001c1	68 ca 00 00 00	 push	 202			; 000000caH
  001c6	a2 2e 00 00 00	 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA+46, al
  001cb	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msgWN@@3PAY0BAA@DA+32, xmm0
  001d3	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 7064 : 	}
; 7065 : 	if (ptActMenuWin != NULL) {

  001d8	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  001de	83 c4 0c	 add	 esp, 12			; 0000000cH
  001e1	85 f6		 test	 esi, esi
  001e3	0f 84 00 05 00
	00		 je	 $LN24@serverWind
$LN118@serverWind:
  001e9	53		 push	 ebx
  001ea	57		 push	 edi

; 7066 : 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  001eb	6a 06		 push	 6
  001ed	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA
  001f2	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId

; 7067 : 		id2 = -1;

  001f7	83 cf ff	 or	 edi, -1
  001fa	83 c4 08	 add	 esp, 8

; 7068 : 		if (ptActMenuWin->hp >= 1) {

  001fd	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  00201	8b d8		 mov	 ebx, eax
  00203	89 9d dc fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx
  00209	89 bd e0 fd ff
	ff		 mov	 DWORD PTR _id2$1$[ebp], edi
  0020f	0f 8c 97 00 00
	00		 jl	 $LN12@serverWind

; 7069 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  00215	8d 77 02	 lea	 esi, DWORD PTR [edi+2]
  00218	8d 5f 16	 lea	 ebx, DWORD PTR [edi+22]
  0021b	bf 76 00 00 00	 mov	 edi, OFFSET ?pet@@3PAUPET@@A+118
$LL13@serverWind:

; 7070 : 				if (pet[i - 1].useFlag != 0) {

  00220	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  00224	74 6b		 je	 SHORT $LN11@serverWind

; 7071 : 					x1 = winX + 41;
; 7072 : 					y1 = winY + 18 + (j + 1) * 21;

  00226	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  0022c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  00232	83 c1 27	 add	 ecx, 39			; 00000027H
  00235	03 cb		 add	 ecx, ebx
  00237	83 c2 29	 add	 edx, 41			; 00000029H

; 7073 : 					x2 = x1 + 376;
; 7074 : 					y2 = y1 + 20;
; 7075 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  0023a	6a 6b		 push	 107			; 0000006bH
  0023c	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  0023f	50		 push	 eax
  00240	8d 82 78 01 00
	00		 lea	 eax, DWORD PTR [edx+376]
  00246	50		 push	 eax
  00247	51		 push	 ecx
  00248	52		 push	 edx
  00249	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0024e	83 c4 14	 add	 esp, 20			; 00000014H
  00251	85 c0		 test	 eax, eax
  00253	74 39		 je	 SHORT $LN39@serverWind

; 7076 : 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00255	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0025c	74 30		 je	 SHORT $LN39@serverWind

; 7077 : 							id2 = i;
; 7078 : 							if (selects < 3) {

  0025e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?selects@?1??serverWindowType9@@YAXXZ@4HA
  00264	89 b5 e0 fd ff
	ff		 mov	 DWORD PTR _id2$1$[ebp], esi
  0026a	83 f9 03	 cmp	 ecx, 3
  0026d	7d 1f		 jge	 SHORT $LN39@serverWind

; 7079 : 								int k;
; 7080 : 								for (k = 0; k < 3; k++) {

  0026f	33 c0		 xor	 eax, eax
$LL16@serverWind:

; 7081 : 									if (selectID[k] == i)

  00271	39 34 85 00 00
	00 00		 cmp	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA[eax*4], esi
  00278	74 14		 je	 SHORT $LN39@serverWind

; 7079 : 								int k;
; 7080 : 								for (k = 0; k < 3; k++) {

  0027a	40		 inc	 eax
  0027b	83 f8 03	 cmp	 eax, 3
  0027e	7c f1		 jl	 SHORT $LL16@serverWind

; 7082 : 										break;
; 7083 : 								}
; 7084 : 								if (k >= 3) {
; 7085 : 									selectID[selects++] = i;

  00280	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA[ecx*4], esi
  00287	41		 inc	 ecx
  00288	89 0d 00 00 00
	00		 mov	 DWORD PTR ?selects@?1??serverWindowType9@@YAXXZ@4HA, ecx
$LN39@serverWind:

; 7086 : 								}
; 7087 : 							}
; 7088 : 						}
; 7089 : 					}
; 7090 : 					j++;

  0028e	83 c3 15	 add	 ebx, 21			; 00000015H
$LN11@serverWind:

; 7069 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  00291	81 c7 78 0b 00
	00		 add	 edi, 2936		; 00000b78H
  00297	46		 inc	 esi
  00298	81 ff 56 2e 00
	00		 cmp	 edi, OFFSET ?pet@@3PAUPET@@A+11862
  0029e	7e 80		 jle	 SHORT $LL13@serverWind
  002a0	8b bd e0 fd ff
	ff		 mov	 edi, DWORD PTR _id2$1$[ebp]
  002a6	8b 9d dc fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 7091 : 				}
; 7092 : 			}
; 7093 : 		}
; 7094 : 		if (CheckMenuFlag()
; 7095 : 			|| joy_trg[0] & JOY_ESC
; 7096 : 			|| actBtn == 1
; 7097 : 			|| menuBtn == 1
; 7098 : 			|| disconnectServerFlag == TRUE
; 7099 : 			|| wnCloseFlag == 1) {

  002ac	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002b1	85 c0		 test	 eax, eax
  002b3	0f 85 04 04 00
	00		 jne	 $LN41@serverWind
  002b9	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002c3	0f 85 f4 03 00
	00		 jne	 $LN41@serverWind
  002c9	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  002d1	0f 84 e6 03 00
	00		 je	 $LN41@serverWind
  002d7	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  002df	0f 84 d8 03 00
	00		 je	 $LN41@serverWind
  002e5	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  002ec	0f 84 cb 03 00
	00		 je	 $LN41@serverWind
  002f2	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  002fa	0f 84 bd 03 00
	00		 je	 $LN41@serverWind

; 7103 : 		}
; 7104 : 
; 7105 : 		if (0 <= id && id < 6) {

  00300	85 db		 test	 ebx, ebx
  00302	0f 88 bb 00 00
	00		 js	 $LN116@serverWind
  00308	83 fb 06	 cmp	 ebx, 6
  0030b	0f 8d be 03 00
	00		 jge	 $LN49@serverWind

; 7106 : 			//|| 0 <= id2 && id2 < 8 ){
; 7107 : 			char data[256];
; 7108 : 			char msg[256];
; 7109 : 			if (0 <= id && id < 6) {
; 7110 : 				btn = 1;
; 7111 : 				btn <<= id;
; 7112 : 			}
; 7113 : 			else {
; 7114 : 				btn = 0;
; 7115 : 			}
; 7116 : 			if (id2 < 0)
; 7117 : 				id2 = 0;
; 7118 : 			//sprintf( data, "%d", id2 );//selectID
; 7119 : 			sprintf(data, "%d|%d|%d", selectID[0], selectID[1], selectID[2]);

  00311	ff 35 08 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+8
  00317	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0031d	8b cb		 mov	 ecx, ebx
  0031f	ff 35 04 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+4
  00325	be 01 00 00 00	 mov	 esi, 1
  0032a	ff 35 00 00 00
	00		 push	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA
  00330	d3 e6		 shl	 esi, cl
  00332	68 00 00 00 00	 push	 OFFSET ??_C@_08ILNEEICH@?$CFd?$HM?$CFd?$HM?$CFd@
  00337	50		 push	 eax
  00338	e8 00 00 00 00	 call	 _sprintf

; 7120 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0033d	68 ff 00 00 00	 push	 255			; 000000ffH
  00342	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  00348	50		 push	 eax
  00349	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0034f	50		 push	 eax
  00350	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00355	83 c4 20	 add	 esp, 32			; 00000020H

; 7121 : 			if (bNewServer)

  00358	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  0035e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00365	50		 push	 eax
  00366	56		 push	 esi
  00367	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0036d	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00373	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00379	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0037f	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00385	74 07		 je	 SHORT $LN46@serverWind

; 7122 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00387	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0038c	eb 05		 jmp	 SHORT $LN126@serverWind
$LN46@serverWind:

; 7123 : 			else
; 7124 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0038e	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN126@serverWind:

; 7125 : 
; 7126 : 			for (i = 0; i < 3; i++) {
; 7127 : 				selectID[i] = -1;

  00393	83 c4 1c	 add	 esp, 28			; 0000001cH
  00396	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA, -1
  003a0	c7 05 04 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+4, -1
  003aa	c7 05 08 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+8, -1

; 7128 : 			}
; 7129 : 			selects = 0;

  003b4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selects@?1??serverWindowType9@@YAXXZ@4HA, 0
  003be	e9 02 03 00 00	 jmp	 $LN127@serverWind
$LN116@serverWind:

; 7130 : 			windowTypeWN = -1;
; 7131 : 		}
; 7132 : 
; 7133 : 		if (id >= 0 || id2 >= 0) {

  003c3	85 ff		 test	 edi, edi
  003c5	0f 89 04 03 00
	00		 jns	 $LN49@serverWind

; 7136 : 			return;
; 7137 : 		}
; 7138 : 
; 7139 : 
; 7140 : 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1) {

  003cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003d0	85 c0		 test	 eax, eax
  003d2	0f 84 0f 03 00
	00		 je	 $LN123@serverWind
  003d8	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003dc	0f 8c 05 03 00
	00		 jl	 $LN123@serverWind

; 7141 : 			StockFontBuffer(winX + 54, winY + 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[0], 0);

  003e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  003e7	6a 00		 push	 0
  003e9	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  003ee	6a 00		 push	 0
  003f0	83 c0 15	 add	 eax, 21			; 00000015H
  003f3	6a 01		 push	 1
  003f5	50		 push	 eax
  003f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  003fb	83 c0 36	 add	 eax, 54			; 00000036H
  003fe	50		 push	 eax
  003ff	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 7142 : #ifdef _NB_WINDOWS_PetList
; 7143 : 			char mybuff[256];
; 7144 : 			sprintf_s(mybuff, "%-16s %-3s  %-5s %-5s  %-5s  %s", "íí¸", "Lv", "HP", "ê³µ", "ë°©", "ì");

  00404	68 00 00 00 00	 push	 OFFSET ??_C@_02BAJPEKCM@?$LM?x@
  00409	68 00 00 00 00	 push	 OFFSET ??_C@_02MCBFLHBI@?$LJ?f@
  0040e	68 00 00 00 00	 push	 OFFSET ??_C@_02BJIFLDEI@?$LA?x@
  00413	68 00 00 00 00	 push	 OFFSET ??_C@_02MEIMKHMB@HP@
  00418	68 00 00 00 00	 push	 OFFSET ??_C@_02FLIMDJ@Lv@
  0041d	68 00 00 00 00	 push	 OFFSET ??_C@_04KDDDLIGD@?F?d?F?$KO@
  00422	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  00428	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@ONLNCGPF@?$CF?916s?5?$CF?93s?5?5?$CF?95s?5?$CF?95s?5?5?$CF?95s?5?5?$CFs@
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 7145 : 			StockFontBuffer(winX + 42, winY + 41, FONT_PRIO_FRONT, 5, mybuff, 0);

  00433	6a 00		 push	 0
  00435	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  0043b	50		 push	 eax
  0043c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  00441	6a 05		 push	 5
  00443	83 c0 29	 add	 eax, 41			; 00000029H
  00446	6a 01		 push	 1
  00448	50		 push	 eax
  00449	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  0044e	83 c0 2a	 add	 eax, 42			; 0000002aH
  00451	50		 push	 eax
  00452	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00457	bf ac 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA+172
  0045c	c7 85 e0 fd ff
	ff 3f 00 00 00	 mov	 DWORD PTR tv1877[ebp], 63 ; 0000003fH
  00466	be 65 00 00 00	 mov	 esi, OFFSET ?pet@@3PAUPET@@A+101
  0046b	b8 78 0b 00 00	 mov	 eax, 2936		; 00000b78H
  00470	83 c4 50	 add	 esp, 80			; 00000050H
  00473	81 ef 00 00 00
	00		 sub	 edi, OFFSET ?pet@@3PAUPET@@A
  00479	2b c6		 sub	 eax, esi
  0047b	bb 01 00 00 00	 mov	 ebx, 1
  00480	89 85 d8 fd ff
	ff		 mov	 DWORD PTR tv1872[ebp], eax
  00486	b8 05 00 00 00	 mov	 eax, 5
  0048b	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv1871[ebp], eax
$LL22@serverWind:

; 7148 : 				len = strlen(pet[i - 1].name);
; 7149 : 				if (pet[i - 1].useFlag != 0) {

  00491	66 83 7e 11 00	 cmp	 WORD PTR [esi+17], 0
  00496	0f 84 82 01 00
	00		 je	 $LN20@serverWind

; 7150 : 					len = strlen(pet[i - 1].freeName);

  0049c	8b ce		 mov	 ecx, esi
  0049e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL120@serverWind:
  004a1	8a 01		 mov	 al, BYTE PTR [ecx]
  004a3	41		 inc	 ecx
  004a4	84 c0		 test	 al, al
  004a6	75 f9		 jne	 SHORT $LL120@serverWind
  004a8	2b ca		 sub	 ecx, edx

; 7151 : 					if (len > 0) {

  004aa	85 c9		 test	 ecx, ecx
  004ac	7e 11		 jle	 SHORT $LN52@serverWind

; 7152 : 						strcpy(msgWN[1], pet[i - 1].freeName);

  004ae	8b ce		 mov	 ecx, esi
$LL63@serverWind:
  004b0	8a 01		 mov	 al, BYTE PTR [ecx]
  004b2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  004b5	88 44 0f ee	 mov	 BYTE PTR [edi+ecx-18], al
  004b9	84 c0		 test	 al, al
  004bb	75 f3		 jne	 SHORT $LL63@serverWind

; 7153 : 					}

  004bd	eb 10		 jmp	 SHORT $LN53@serverWind
$LN52@serverWind:

; 7154 : 					else {
; 7155 : 						len = strlen(pet[i - 1].name);
; 7156 : 						strcpy(msgWN[1], pet[i - 1].name);

  004bf	8d 4e ef	 lea	 ecx, DWORD PTR [esi-17]
$LL64@serverWind:
  004c2	8a 01		 mov	 al, BYTE PTR [ecx]
  004c4	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  004c7	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  004cb	84 c0		 test	 al, al
  004cd	75 f3		 jne	 SHORT $LL64@serverWind
$LN53@serverWind:

; 7157 : 					}
; 7158 : 
; 7159 : #ifdef _NB_WINDOWS_PetList
; 7160 : 					int ééæé® = StockFontBuffer(winX + 380, winY + 21, FONT_PRIO_FRONT, 1, "éé", 2);

  004cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  004d4	6a 02		 push	 2
  004d6	68 00 00 00 00	 push	 OFFSET ??_C@_03BIEHFCNJ@?q?l?$DP@
  004db	6a 01		 push	 1
  004dd	83 c0 15	 add	 eax, 21			; 00000015H
  004e0	6a 01		 push	 1
  004e2	50		 push	 eax
  004e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  004e8	05 7c 01 00 00	 add	 eax, 380		; 0000017cH
  004ed	50		 push	 eax
  004ee	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004f3	83 c4 18	 add	 esp, 24			; 00000018H

; 7161 : 					if (mouse.onceState & MOUSE_LEFT_CRICK) {

  004f6	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  004fd	74 2c		 je	 SHORT $LN122@serverWind

; 7162 : 						if (HitFontNo == ééæé®) {

  004ff	39 05 00 00 00
	00		 cmp	 DWORD PTR ?HitFontNo@@3HA, eax ; HitFontNo
  00505	75 24		 jne	 SHORT $LN122@serverWind

; 7163 : 							selectID[0] = -1;

  00507	83 c8 ff	 or	 eax, -1

; 7164 : 							selectID[1] = -1;
; 7165 : 							selectID[2] = -1;
; 7166 : 							selects = 0;

  0050a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selects@?1??serverWindowType9@@YAXXZ@4HA, 0
  00514	0b c8		 or	 ecx, eax
  00516	a3 00 00 00 00	 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA, eax
  0051b	0b d0		 or	 edx, eax
  0051d	89 0d 04 00 00
	00		 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+4, ecx
  00523	89 15 08 00 00
	00		 mov	 DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+8, edx
  00529	eb 11		 jmp	 SHORT $LN55@serverWind
$LN122@serverWind:

; 7162 : 						if (HitFontNo == ééæé®) {

  0052b	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+8
  00531	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA+4
  00537	a1 00 00 00 00	 mov	 eax, DWORD PTR ?selectID@?1??serverWindowType9@@YAXXZ@4PAHA
$LN55@serverWind:

; 7167 : 						}
; 7168 : 					}
; 7169 : 					if (selectID[0] == i) {

  0053c	3b c3		 cmp	 eax, ebx
  0053e	75 1a		 jne	 SHORT $LN56@serverWind

; 7170 : 						sprintf(msgWN[1], "ë©ì¸");

  00540	68 00 00 00 00	 push	 OFFSET ??_C@_04BLDHOJBN@?$LI?$NO?$MA?N@
  00545	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0054a	e8 00 00 00 00	 call	 _sprintf

; 7171 : 						StockFontBuffer(winX + 380, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_RED, msgWN[1], 0);

  0054f	6a 00		 push	 0
  00551	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  00556	6a 06		 push	 6

; 7172 : 					}

  00558	eb 20		 jmp	 SHORT $LN128@serverWind
$LN56@serverWind:

; 7173 : 					else if (selectID[1] == i || selectID[2] == i) {

  0055a	3b cb		 cmp	 ecx, ebx
  0055c	74 04		 je	 SHORT $LN59@serverWind
  0055e	3b d3		 cmp	 edx, ebx
  00560	75 39		 jne	 SHORT $LN58@serverWind
$LN59@serverWind:

; 7174 : 						sprintf(msgWN[1], "ìë");

  00562	68 00 00 00 00	 push	 OFFSET ??_C@_04LFMEPEEF@?$LL?s?$LE?k@
  00567	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0056c	e8 00 00 00 00	 call	 _sprintf

; 7175 : 						StockFontBuffer(winX + 380, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, msgWN[1], 0);

  00571	6a 00		 push	 0
  00573	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  00578	6a 05		 push	 5
$LN128@serverWind:

; 7176 : 					}
; 7177 : 					sprintf(mybuff, "%-16s %-3d  %-5d %-5d  %-5d  %d", strlen(pet[i - 1].freeName) ? pet[i - 1].freeName : pet[i - 1].name, pet[i - 1].level, pet[i - 1].maxHp, pet[i - 1].atk, pet[i - 1].def, pet[i - 1].quick);

  0057a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  0057f	03 85 e0 fd ff
	ff		 add	 eax, DWORD PTR tv1877[ebp]
  00585	6a 01		 push	 1
  00587	50		 push	 eax
  00588	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  0058d	05 7c 01 00 00	 add	 eax, 380		; 0000017cH
  00592	50		 push	 eax
  00593	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00598	83 c4 20	 add	 esp, 32			; 00000020H
$LN58@serverWind:
  0059b	8b ce		 mov	 ecx, esi
  0059d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL121@serverWind:
  005a0	8a 01		 mov	 al, BYTE PTR [ecx]
  005a2	41		 inc	 ecx
  005a3	84 c0		 test	 al, al
  005a5	75 f9		 jne	 SHORT $LL121@serverWind
  005a7	ff 76 c7	 push	 DWORD PTR [esi-57]
  005aa	2b ca		 sub	 ecx, edx
  005ac	b8 24 0b 00 00	 mov	 eax, 2852		; 00000b24H
  005b1	ff 76 c3	 push	 DWORD PTR [esi-61]
  005b4	b9 13 0b 00 00	 mov	 ecx, 2835		; 00000b13H
  005b9	ff 76 bf	 push	 DWORD PTR [esi-65]
  005bc	0f 44 c8	 cmove	 ecx, eax
  005bf	8b 85 d8 fd ff
	ff		 mov	 eax, DWORD PTR tv1872[ebp]
  005c5	ff 76 a7	 push	 DWORD PTR [esi-89]
  005c8	2b c1		 sub	 eax, ecx
  005ca	ff 76 bb	 push	 DWORD PTR [esi-69]
  005cd	8d 80 00 00 00
	00		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[eax]
  005d3	03 c6		 add	 eax, esi
  005d5	50		 push	 eax
  005d6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  005dc	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@MOGFGPOH@?$CF?916s?5?$CF?93d?5?5?$CF?95d?5?$CF?95d?5?5?$CF?95d?5?5?$CFd@
  005e1	50		 push	 eax
  005e2	e8 00 00 00 00	 call	 _sprintf

; 7178 : 					StockFontBuffer(winX + 42, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, mybuff, 0);

  005e7	6a 00		 push	 0
  005e9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  005ef	50		 push	 eax
  005f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  005f5	03 85 e0 fd ff
	ff		 add	 eax, DWORD PTR tv1877[ebp]
  005fb	6a 00		 push	 0
  005fd	6a 01		 push	 1
  005ff	50		 push	 eax
  00600	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  00605	83 c0 2a	 add	 eax, 42			; 0000002aH
  00608	50		 push	 eax
  00609	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0060e	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR tv1871[ebp]
  00614	83 c4 38	 add	 esp, 56			; 00000038H

; 7179 : #else
; 7180 : 					StockFontBuffer(winX + 62, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 7181 : 					if (selectID[0] == i) {
; 7182 : 						sprintf(msgWN[1], "ë©ì¸");
; 7183 : 						StockFontBuffer(winX + 220, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_RED, msgWN[1], 0);
; 7184 : 					}
; 7185 : 					else if (selectID[1] == i || selectID[2] == i) {
; 7186 : 						sprintf(msgWN[1], "ìë");
; 7187 : 						StockFontBuffer(winX + 220, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_GREEN, msgWN[1], 0);
; 7188 : 					}
; 7189 : 					sprintf(msgWN[1], "LV.%d", pet[i - 1].level);
; 7190 : 					StockFontBuffer(winX + 260, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 7191 : 					sprintf(msgWN[1], "MaxHP %d", pet[i - 1].maxHp);
; 7192 : 					StockFontBuffer(winX + 314, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 7193 : #endif
; 7194 : 					j++;

  00617	83 85 e0 fd ff
	ff 15		 add	 DWORD PTR tv1877[ebp], 21 ; 00000015H
$LN20@serverWind:

; 7146 : #endif
; 7147 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  0061e	43		 inc	 ebx
  0061f	81 ef 78 0b 00
	00		 sub	 edi, 2936		; 00000b78H
  00625	81 c6 78 0b 00
	00		 add	 esi, 2936		; 00000b78H
  0062b	83 e8 01	 sub	 eax, 1
  0062e	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv1871[ebp], eax
  00634	0f 85 57 fe ff
	ff		 jne	 $LL22@serverWind

; 7195 : 				}
; 7196 : 			}
; 7197 : 			j = 0;

  0063a	33 ff		 xor	 edi, edi

; 7198 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  0063c	bb 01 00 00 00	 mov	 ebx, 1
  00641	33 f6		 xor	 esi, esi
  00643	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL25@serverWind:

; 7199 : 				btnId[i] = -2;

  00650	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 7200 : 				if (buttonTypeWN & mask) {

  0065a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00660	74 40		 je	 SHORT $LN23@serverWind

; 7201 : 					if (j < btnCnt) {

  00662	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType9@@YAXXZ@4HA
  00668	7d 38		 jge	 SHORT $LN23@serverWind

; 7202 : 						btnId[i] = StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1], FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);

  0066a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA[edi*8+4]
  00671	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType9@@YAXXZ@4HA
  00677	6a 02		 push	 2
  00679	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00680	6a 04		 push	 4
  00682	6a 01		 push	 1
  00684	50		 push	 eax
  00685	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType9@@YAXXZ@4PAY01HA[edi*8]
  0068c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType9@@YAXXZ@4HA
  00692	50		 push	 eax
  00693	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00698	83 c4 18	 add	 esp, 24			; 00000018H
  0069b	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType9@@YAXXZ@4PAHA[esi], eax

; 7203 : 						j++;

  006a1	47		 inc	 edi
$LN23@serverWind:

; 7198 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  006a2	83 c6 04	 add	 esi, 4
  006a5	03 db		 add	 ebx, ebx
  006a7	83 fe 18	 cmp	 esi, 24			; 00000018H
  006aa	7c a4		 jl	 SHORT $LL25@serverWind
  006ac	5f		 pop	 edi
  006ad	5b		 pop	 ebx
  006ae	5e		 pop	 esi

; 7204 : 					}
; 7205 : 				}
; 7206 : 			}
; 7207 : 		}
; 7208 : 	}
; 7209 : }

  006af	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006b2	33 cd		 xor	 ecx, ebp
  006b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006b9	8b e5		 mov	 esp, ebp
  006bb	5d		 pop	 ebp
  006bc	c3		 ret	 0
$LN41@serverWind:

; 7100 : 			id = 100;
; 7101 : 			windowTypeWN = -1;
; 7102 : 			wnCloseFlag = 0;

  006bd	33 c0		 xor	 eax, eax
  006bf	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN127@serverWind:

; 7134 : 			DeathAction(ptActMenuWin);

  006c5	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN49@serverWind:
  006cf	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  006d5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  006da	83 c4 04	 add	 esp, 4

; 7135 : 			ptActMenuWin = NULL;

  006dd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN123@serverWind:
  006e7	5f		 pop	 edi
  006e8	5b		 pop	 ebx
$LN24@serverWind:

; 7204 : 					}
; 7205 : 				}
; 7206 : 			}
; 7207 : 		}
; 7208 : 	}
; 7209 : }

  006e9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006ec	33 cd		 xor	 ecx, ebp
  006ee	5e		 pop	 esi
  006ef	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006f4	8b e5		 mov	 esp, ebp
  006f6	5d		 pop	 ebp
  006f7	c3		 ret	 0
?serverWindowType9@@YAXXZ ENDP				; serverWindowType9
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType7@@YAXXZ
_TEXT	SEGMENT
tv2189 = -532						; size = 4
tv2185 = -532						; size = 4
tv2175 = -528						; size = 4
tv2168 = -528						; size = 4
tv2177 = -524						; size = 4
tv2167 = -524						; size = 4
tv2178 = -520						; size = 4
tv2165 = -520						; size = 4
_data$1 = -516						; size = 256
_data$2 = -516						; size = 256
_data$3 = -516						; size = 256
_data$4 = -516						; size = 256
_msg$5 = -260						; size = 256
_msg$6 = -260						; size = 256
_msg$7 = -260						; size = 256
_msg$8 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType7@@YAXXZ PROC				; serverWindowType7, COMDAT

; 11132: void serverWindowType7(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 11133: 	int ret;
; 11134: 
; 11135: 	if (shopWindowProcNo == 0) {

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 0 ; shopWindowProcNo
  0001b	75 27		 jne	 SHORT $LN26@serverWind

; 11136: 		initPoolShopWindow1();

  0001d	e8 00 00 00 00	 call	 ?initPoolShopWindow1@@YAXXZ ; initPoolShopWindow1

; 11137: 		shopWindowProcNo++;
; 11138: 		play_se(202, 320, 240);

  00022	68 f0 00 00 00	 push	 240			; 000000f0H
  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	68 40 01 00 00	 push	 320			; 00000140H
  00031	68 ca 00 00 00	 push	 202			; 000000caH
  00036	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  0003c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN26@serverWind:

; 11139: 	}
; 11140: 	if (shopWindowProcNo == 1) {

  00044	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 1 ; shopWindowProcNo
  0004c	75 05		 jne	 SHORT $LN27@serverWind

; 11141: 		ret = poolShopWindow1();

  0004e	e8 00 00 00 00	 call	 ?poolShopWindow1@@YAHXZ	; poolShopWindow1
$LN27@serverWind:

; 11142: 	}
; 11143: 
; 11144: 	if (shopWindowProcNo == 10) {

  00053	66 83 3d 00 00
	00 00 0a	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 10 ; shopWindowProcNo, 0000000aH
  0005b	75 27		 jne	 SHORT $LN28@serverWind

; 11145: 		initPoolShopWindow2();

  0005d	e8 00 00 00 00	 call	 ?initPoolShopWindow2@@YAXXZ ; initPoolShopWindow2

; 11146: 		shopWindowProcNo++;
; 11147: 		play_se(202, 320, 240);

  00062	68 f0 00 00 00	 push	 240			; 000000f0H
  00067	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  0006c	68 40 01 00 00	 push	 320			; 00000140H
  00071	68 ca 00 00 00	 push	 202			; 000000caH
  00076	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  0007c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN28@serverWind:

; 11148: 	}
; 11149: 	if (shopWindowProcNo == 11) {

  00084	66 83 3d 00 00
	00 00 0b	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 11 ; shopWindowProcNo, 0000000bH
  0008c	0f 85 97 00 00
	00		 jne	 $LN34@serverWind

; 11150: 		ret = poolShopWindow2();

  00092	e8 00 00 00 00	 call	 ?poolShopWindow2@@YAHXZ	; poolShopWindow2

; 11151: 		if (ret == 1) {

  00097	83 f8 01	 cmp	 eax, 1
  0009a	0f 85 84 00 00
	00		 jne	 $LN30@serverWind

; 11152: 			char data[256];
; 11153: 			char msg[256];
; 11154: 			sprintf(data, "0");

  000a0	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$4[ebp]
  000a6	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 _sprintf

; 11155: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  000b1	68 ff 00 00 00	 push	 255			; 000000ffH
  000b6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$8[ebp]
  000bc	50		 push	 eax
  000bd	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$4[ebp]
  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  000c9	83 c4 14	 add	 esp, 20			; 00000014H

; 11156: 			if (bNewServer)

  000cc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$8[ebp]
  000d2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000d9	50		 push	 eax
  000da	6a 00		 push	 0
  000dc	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  000e2	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  000e8	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  000ee	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  000f4	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000fa	74 14		 je	 SHORT $LN32@serverWind

; 11157: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  000fc	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 11160: 			windowTypeWN = -1;

  00101	83 c4 1c	 add	 esp, 28			; 0000001cH
  00104	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 11161: 		}

  0010e	eb 19		 jmp	 SHORT $LN34@serverWind
$LN32@serverWind:

; 11158: 			else
; 11159: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00110	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 11160: 			windowTypeWN = -1;

  00115	83 c4 1c	 add	 esp, 28			; 0000001cH
  00118	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 11161: 		}

  00122	eb 05		 jmp	 SHORT $LN34@serverWind
$LN30@serverWind:

; 11162: 		else if (ret == 2) {

  00124	83 f8 02	 cmp	 eax, 2
  00127	74 0a		 je	 SHORT $LN130@serverWind
$LN34@serverWind:

; 11163: 			shopWindowProcNo = 20;
; 11164: 		}
; 11165: 	}
; 11166: 
; 11167: 	if (shopWindowProcNo == 20) {

  00129	66 83 3d 00 00
	00 00 14	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 20 ; shopWindowProcNo, 00000014H
  00131	75 27		 jne	 SHORT $LN35@serverWind
$LN130@serverWind:

; 11168: 		initPoolShopWindow3();

  00133	e8 00 00 00 00	 call	 ?initPoolShopWindow3@@YAXXZ ; initPoolShopWindow3

; 11169: 		shopWindowProcNo++;
; 11170: 		play_se(202, 320, 240);	// ????????

  00138	68 f0 00 00 00	 push	 240			; 000000f0H
  0013d	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  00142	68 40 01 00 00	 push	 320			; 00000140H
  00147	68 ca 00 00 00	 push	 202			; 000000caH
  0014c	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  00152	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00157	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN35@serverWind:

; 11171: 	}
; 11172: 	if (shopWindowProcNo == 21) {

  0015a	66 83 3d 00 00
	00 00 15	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 21 ; shopWindowProcNo, 00000015H
  00162	53		 push	 ebx
  00163	56		 push	 esi
  00164	57		 push	 edi
  00165	0f 85 80 02 00
	00		 jne	 $LN133@serverWind

; 11173: 		ret = poolShopWindow3();

  0016b	e8 00 00 00 00	 call	 ?poolShopWindow3@@YAHXZ	; poolShopWindow3

; 11174: 		if (ret == 1) {

  00170	83 f8 01	 cmp	 eax, 1
  00173	0f 85 6d 02 00
	00		 jne	 $LN37@serverWind

; 11175: 			char data[256];
; 11176: 			char msg[256];
; 11177: 			sprintf(data, "%d", poolItem[selShopItemNo].tbl);

  00179	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00180	69 c0 88 00 00
	00		 imul	 eax, eax, 136
  00186	0f bf 80 0e 00
	00 00		 movsx	 eax, WORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+14]
  0018d	50		 push	 eax
  0018e	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00199	50		 push	 eax
  0019a	e8 00 00 00 00	 call	 _sprintf

; 11178: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0019f	68 ff 00 00 00	 push	 255			; 000000ffH
  001a4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$7[ebp]
  001aa	50		 push	 eax
  001ab	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  001b7	83 c4 18	 add	 esp, 24			; 00000018H

; 11179: 			if (bNewServer)

  001ba	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$7[ebp]
  001c0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001c7	50		 push	 eax
  001c8	6a 00		 push	 0
  001ca	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  001d0	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  001d6	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  001dc	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  001e2	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001e8	74 07		 je	 SHORT $LN39@serverWind

; 11180: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  001ea	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  001ef	eb 05		 jmp	 SHORT $LN136@serverWind
$LN39@serverWind:

; 11181: 			else
; 11182: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  001f1	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN136@serverWind:

; 11183: 
; 11184: 			pc.gold -= poolItem[selShopItemNo].price;

  001f6	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo

; 11185: 			restPoolSlot--;
; 11186: 			if (restPoolSlot < 0)

  001fd	ba 00 00 00 00	 mov	 edx, 0
  00202	69 c8 88 00 00
	00		 imul	 ecx, eax, 136
  00208	83 c4 1c	 add	 esp, 28			; 0000001cH

; 11187: 				restPoolSlot = 0;
; 11188: 
; 11189: 			poolItem[selShopItemNo].name[0] = '\0';

  0020b	bb 10 00 00 00	 mov	 ebx, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+16
  00210	be 67 00 00 00	 mov	 esi, 103		; 00000067H
  00215	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv2177[ebp], ebx
  0021b	89 b5 f0 fd ff
	ff		 mov	 DWORD PTR tv2175[ebp], esi
  00221	8b 81 04 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+4]
  00227	29 05 60 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+96, eax
  0022d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?restPoolSlot@@3HA ; restPoolSlot
  00232	88 91 10 00 00
	00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+16], dl
  00238	83 e8 01	 sub	 eax, 1

; 11190: 			poolItem[selShopItemNo].info[0][0] = '\0';

  0023b	88 91 2d 00 00
	00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+45], dl

; 11191: 			poolItem[selShopItemNo].info[1][0] = '\0';

  00241	88 91 4a 00 00
	00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+74], dl
  00247	0f 48 c2	 cmovs	 eax, edx

; 11192: 			poolItem[selShopItemNo].info[2][0] = '\0';

  0024a	88 91 67 00 00
	00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+103], dl

; 11193: #ifdef _ITEM_PILENUMS
; 11194: 			poolItem[selShopItemNo].num = 0;

  00250	89 91 84 00 00
	00		 mov	 DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[ecx+132], edx
  00256	ba 01 00 00 00	 mov	 edx, 1
  0025b	a3 00 00 00 00	 mov	 DWORD PTR ?restPoolSlot@@3HA, eax ; restPoolSlot
  00260	89 95 f8 fd ff
	ff		 mov	 DWORD PTR tv2178[ebp], edx
$LL4@serverWind:

; 11198: 				if (poolItem[i].name[0] == '\0') {

  00266	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  00269	0f 85 d3 00 00
	00		 jne	 $LN2@serverWind

; 11199: 					for (j = i + 1; j < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; j++) {

  0026f	8b ca		 mov	 ecx, edx
  00271	83 fa 68	 cmp	 edx, 104		; 00000068H
  00274	0f 8d c8 00 00
	00		 jge	 $LN2@serverWind
  0027a	8d 83 88 00 00
	00		 lea	 eax, DWORD PTR [ebx+136]
$LL7@serverWind:

; 11200: 						if (poolItem[j].name[0] != '\0') {

  00280	80 38 00	 cmp	 BYTE PTR [eax], 0
  00283	75 12		 jne	 SHORT $LN88@serverWind

; 11199: 					for (j = i + 1; j < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; j++) {

  00285	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0028a	41		 inc	 ecx
  0028b	3d 50 37 00 00	 cmp	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+14160
  00290	7c ee		 jl	 SHORT $LL7@serverWind

; 11315: 				if (poolItem[i].name[0] == '\0')

  00292	e9 ab 00 00 00	 jmp	 $LN2@serverWind
$LN88@serverWind:

; 11201: 							strcpy(poolItem[i].name, poolItem[j].name);

  00297	69 f1 88 00 00
	00		 imul	 esi, ecx, 136
  0029d	8b d3		 mov	 edx, ebx
  0029f	8d 86 10 00 00
	00		 lea	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+16]
  002a5	89 85 ec fd ff
	ff		 mov	 DWORD PTR tv2189[ebp], eax
  002ab	8b c8		 mov	 ecx, eax
  002ad	2b d0		 sub	 edx, eax
  002af	90		 npad	 1
$LL72@serverWind:
  002b0	8a 01		 mov	 al, BYTE PTR [ecx]
  002b2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002b5	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  002b9	84 c0		 test	 al, al
  002bb	75 f3		 jne	 SHORT $LL72@serverWind

; 11202: 							poolItem[i].poolFlag = poolItem[j].poolFlag;

  002bd	0f b7 86 0c 00
	00 00		 movzx	 eax, WORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+12]
  002c4	8d 7b 1d	 lea	 edi, DWORD PTR [ebx+29]
  002c7	66 89 43 fc	 mov	 WORD PTR [ebx-4], ax

; 11203: 							poolItem[i].level = poolItem[j].level;

  002cb	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi]
  002d1	89 43 f0	 mov	 DWORD PTR [ebx-16], eax

; 11204: 							poolItem[i].price = poolItem[j].price;

  002d4	8b 86 04 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+4]
  002da	89 43 f4	 mov	 DWORD PTR [ebx-12], eax

; 11205: 							poolItem[i].graNo = poolItem[j].graNo;

  002dd	8b 86 08 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+8]
  002e3	89 43 f8	 mov	 DWORD PTR [ebx-8], eax

; 11206: 							poolItem[i].tbl = poolItem[j].tbl;

  002e6	0f b7 86 0e 00
	00 00		 movzx	 eax, WORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+14]
  002ed	66 89 43 fe	 mov	 WORD PTR [ebx-2], ax

; 11207: #ifdef _ITEM_PILENUMS
; 11208: 							poolItem[i].num = poolItem[j].num;

  002f1	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+132]
  002f7	8d b6 2d 00 00
	00		 lea	 esi, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+45]
  002fd	89 43 74	 mov	 DWORD PTR [ebx+116], eax
  00300	bb 03 00 00 00	 mov	 ebx, 3
$LL10@serverWind:

; 11212: 								strcpy(poolItem[i].info[k], poolItem[j].info[k]);

  00305	8b d7		 mov	 edx, edi
  00307	8b ce		 mov	 ecx, esi
  00309	2b d6		 sub	 edx, esi
  0030b	0f 1f 44 00 00	 npad	 5
$LL73@serverWind:
  00310	8a 01		 mov	 al, BYTE PTR [ecx]
  00312	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00315	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00319	84 c0		 test	 al, al
  0031b	75 f3		 jne	 SHORT $LL73@serverWind

; 11209: #endif
; 11210: 
; 11211: 							for (k = 0; k < 3; k++) {

  0031d	83 c7 1d	 add	 edi, 29			; 0000001dH
  00320	83 c6 1d	 add	 esi, 29			; 0000001dH
  00323	83 eb 01	 sub	 ebx, 1
  00326	75 dd		 jne	 SHORT $LL10@serverWind

; 11213: 							}
; 11214: 							poolItem[j].name[0] = '\0';

  00328	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR tv2189[ebp]
  0032e	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR tv2178[ebp]
  00334	8b b5 f0 fd ff
	ff		 mov	 esi, DWORD PTR tv2175[ebp]
  0033a	88 18		 mov	 BYTE PTR [eax], bl
  0033c	8b 9d f4 fd ff
	ff		 mov	 ebx, DWORD PTR tv2177[ebp]
$LN2@serverWind:

; 11195: #endif
; 11196: 			int i, j, k;
; 11197: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE - 1; i++) {

  00342	42		 inc	 edx
  00343	81 c3 88 00 00
	00		 add	 ebx, 136		; 00000088H
  00349	83 ee 01	 sub	 esi, 1
  0034c	89 95 f8 fd ff
	ff		 mov	 DWORD PTR tv2178[ebp], edx
  00352	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv2177[ebp], ebx
  00358	89 b5 f0 fd ff
	ff		 mov	 DWORD PTR tv2175[ebp], esi
  0035e	0f 85 02 ff ff
	ff		 jne	 $LL4@serverWind

; 11215: 							break;
; 11216: 						}
; 11217: 					}
; 11218: 				}
; 11219: 			}
; 11220: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; i++) {

  00364	33 c9		 xor	 ecx, ecx
  00366	b8 98 00 00 00	 mov	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+152
  0036b	0f 1f 44 00 00	 npad	 5
$LL13@serverWind:

; 11221: 				if (poolItem[i].name[0] == '\0')

  00370	80 b8 78 ff ff
	ff 00		 cmp	 BYTE PTR [eax-136], 0
  00377	74 33		 je	 SHORT $LN89@serverWind
  00379	80 38 00	 cmp	 BYTE PTR [eax], 0
  0037c	74 2d		 je	 SHORT $LN112@serverWind
  0037e	80 b8 88 00 00
	00 00		 cmp	 BYTE PTR [eax+136], 0
  00385	74 1f		 je	 SHORT $LN113@serverWind
  00387	80 b8 10 01 00
	00 00		 cmp	 BYTE PTR [eax+272], 0
  0038e	74 11		 je	 SHORT $LN114@serverWind

; 11215: 							break;
; 11216: 						}
; 11217: 					}
; 11218: 				}
; 11219: 			}
; 11220: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; i++) {

  00390	05 20 02 00 00	 add	 eax, 544		; 00000220H
  00395	83 c1 04	 add	 ecx, 4
  00398	3d d8 37 00 00	 cmp	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+14296
  0039d	7c d1		 jl	 SHORT $LL13@serverWind
  0039f	eb 0b		 jmp	 SHORT $LN89@serverWind
$LN114@serverWind:

; 11221: 				if (poolItem[i].name[0] == '\0')

  003a1	83 c1 03	 add	 ecx, 3
  003a4	eb 06		 jmp	 SHORT $LN89@serverWind
$LN113@serverWind:
  003a6	83 c1 02	 add	 ecx, 2
  003a9	eb 01		 jmp	 SHORT $LN89@serverWind
$LN112@serverWind:
  003ab	41		 inc	 ecx
$LN89@serverWind:

; 11222: 					break;
; 11223: 			}
; 11224: 			if (i > 0) {

  003ac	85 c9		 test	 ecx, ecx
  003ae	7e 11		 jle	 SHORT $LN45@serverWind

; 11225: 				shopWondow2MaxPage = (i + 7) / MAX_POOL_SHOP_ITEM;

  003b0	8d 41 07	 lea	 eax, DWORD PTR [ecx+7]
  003b3	99		 cdq
  003b4	83 e2 07	 and	 edx, 7
  003b7	03 c2		 add	 eax, edx
  003b9	c1 f8 03	 sar	 eax, 3
  003bc	0f b7 c0	 movzx	 eax, ax

; 11226: 			}

  003bf	eb 05		 jmp	 SHORT $LN46@serverWind
$LN45@serverWind:

; 11227: 			else {
; 11228: 				shopWondow2MaxPage = 1;

  003c1	b8 01 00 00 00	 mov	 eax, 1
$LN46@serverWind:

; 11229: 			}
; 11230: 			if (shopWondow2Page >= shopWondow2MaxPage)

  003c6	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  003cc	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  003d3	7c 07		 jl	 SHORT $LN47@serverWind

; 11231: 				shopWondow2Page = shopWondow2MaxPage - 1;

  003d5	48		 dec	 eax
  003d6	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
$LN47@serverWind:

; 11332: 		}
; 11333: 	}
; 11334: }

  003dc	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  003e1	e9 82 03 00 00	 jmp	 $LN137@serverWind
$LN37@serverWind:

; 11232: 
; 11233: 			shopWindowProcNo = 10;
; 11234: 
; 11235: 		}
; 11236: 		else if (ret == 2) {

  003e6	83 f8 02	 cmp	 eax, 2
  003e9	74 f1		 je	 SHORT $LN47@serverWind
$LN133@serverWind:

; 11237: 			shopWindowProcNo = 10;
; 11238: 		}
; 11239: 	}
; 11240: 
; 11241: 	if (shopWindowProcNo == 100) {

  003eb	66 83 3d 00 00
	00 00 64	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 100 ; shopWindowProcNo, 00000064H
  003f3	75 27		 jne	 SHORT $LN49@serverWind

; 11242: 		initPoolShopWindow4();

  003f5	e8 00 00 00 00	 call	 ?initPoolShopWindow4@@YAXXZ ; initPoolShopWindow4

; 11243: 		shopWindowProcNo++;
; 11244: 		play_se(202, 320, 240);	// ????????

  003fa	68 f0 00 00 00	 push	 240			; 000000f0H
  003ff	b8 65 00 00 00	 mov	 eax, 101		; 00000065H
  00404	68 40 01 00 00	 push	 320			; 00000140H
  00409	68 ca 00 00 00	 push	 202			; 000000caH
  0040e	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  00414	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00419	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN49@serverWind:

; 11245: 	}
; 11246: 	if (shopWindowProcNo == 101) {

  0041c	66 83 3d 00 00
	00 00 65	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 101 ; shopWindowProcNo, 00000065H
  00424	0f 85 83 00 00
	00		 jne	 $LN134@serverWind

; 11247: 		ret = poolShopWindow4();

  0042a	e8 00 00 00 00	 call	 ?poolShopWindow4@@YAHXZ	; poolShopWindow4

; 11248: 		if (ret == 1) {

  0042f	83 f8 01	 cmp	 eax, 1
  00432	0f 85 2e 01 00
	00		 jne	 $LN51@serverWind

; 11249: 			char data[256];
; 11250: 			char msg[256];
; 11251: 			sprintf(data, "0");

  00438	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  0043e	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00443	50		 push	 eax
  00444	e8 00 00 00 00	 call	 _sprintf

; 11252: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00449	68 ff 00 00 00	 push	 255			; 000000ffH
  0044e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$6[ebp]
  00454	50		 push	 eax
  00455	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  0045b	50		 push	 eax
  0045c	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00461	83 c4 14	 add	 esp, 20			; 00000014H

; 11253: 			if (bNewServer)

  00464	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$6[ebp]
  0046a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00471	50		 push	 eax
  00472	6a 00		 push	 0
  00474	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0047a	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00480	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00486	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0048c	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00492	74 07		 je	 SHORT $LN53@serverWind

; 11254: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00494	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00499	eb 05		 jmp	 SHORT $LN138@serverWind
$LN53@serverWind:

; 11255: 			else
; 11256: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  0049b	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN138@serverWind:

; 11257: 			windowTypeWN = -1;

  004a0	83 c4 1c	 add	 esp, 28			; 0000001cH
  004a3	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN134@serverWind:

; 11264: 		}
; 11265: 	}
; 11266: 
; 11267: 	if (shopWindowProcNo == 110) {

  004ad	66 83 3d 00 00
	00 00 6e	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 110 ; shopWindowProcNo, 0000006eH
  004b5	75 27		 jne	 SHORT $LN58@serverWind
$LN131@serverWind:

; 11268: 		initPoolShopWindow3();

  004b7	e8 00 00 00 00	 call	 ?initPoolShopWindow3@@YAXXZ ; initPoolShopWindow3

; 11269: 		shopWindowProcNo++;
; 11270: 		play_se(202, 320, 240);

  004bc	68 f0 00 00 00	 push	 240			; 000000f0H
  004c1	b8 6f 00 00 00	 mov	 eax, 111		; 0000006fH
  004c6	68 40 01 00 00	 push	 320			; 00000140H
  004cb	68 ca 00 00 00	 push	 202			; 000000caH
  004d0	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  004d6	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004db	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN58@serverWind:

; 11271: 	}
; 11272: 	if (shopWindowProcNo == 111) {

  004de	66 83 3d 00 00
	00 00 6f	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 111 ; shopWindowProcNo, 0000006fH
  004e6	0f 85 82 02 00
	00		 jne	 $LN70@serverWind

; 11273: 		ret = poolShopWindow3();

  004ec	e8 00 00 00 00	 call	 ?poolShopWindow3@@YAHXZ	; poolShopWindow3

; 11274: 		if (ret == 1) {

  004f1	83 f8 01	 cmp	 eax, 1
  004f4	0f 85 64 02 00
	00		 jne	 $LN60@serverWind

; 11275: 			char data[256];
; 11276: 			char msg[256];
; 11277: 			sprintf(data, "%d", selShopItemNo + 1);

  004fa	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00501	40		 inc	 eax
  00502	50		 push	 eax
  00503	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00509	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0050e	50		 push	 eax
  0050f	e8 00 00 00 00	 call	 _sprintf

; 11278: 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00514	68 ff 00 00 00	 push	 255			; 000000ffH
  00519	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$5[ebp]
  0051f	50		 push	 eax
  00520	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00526	50		 push	 eax
  00527	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0052c	83 c4 18	 add	 esp, 24			; 00000018H

; 11279: 			if (bNewServer)

  0052f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$5[ebp]
  00535	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0053c	50		 push	 eax
  0053d	6a 00		 push	 0
  0053f	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00545	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0054b	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00551	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00557	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0055d	74 23		 je	 SHORT $LN62@serverWind

; 11280: 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  0055f	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00564	eb 21		 jmp	 SHORT $LN139@serverWind
$LN51@serverWind:

; 11258: 		}
; 11259: 		else if (ret == 2) {

  00566	83 f8 02	 cmp	 eax, 2
  00569	0f 84 48 ff ff
	ff		 je	 $LN131@serverWind

; 11260: 			shopWindowProcNo = 110;
; 11261: 		}
; 11262: 		else if (ret == 3) {

  0056f	83 f8 03	 cmp	 eax, 3
  00572	0f 85 35 ff ff
	ff		 jne	 $LN134@serverWind

; 11263: 			shopWindowProcNo = 120;

  00578	b8 78 00 00 00	 mov	 eax, 120		; 00000078H

; 11264: 		}
; 11265: 	}
; 11266: 
; 11267: 	if (shopWindowProcNo == 110) {

  0057d	e9 e6 01 00 00	 jmp	 $LN137@serverWind
$LN62@serverWind:

; 11281: 			else
; 11282: 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00582	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN139@serverWind:

; 11283: 
; 11284: 			poolItem[selShopItemNo].name[0] = '\0';

  00587	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  0058e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00591	69 c0 88 00 00
	00		 imul	 eax, eax, 136
  00597	ba 01 00 00 00	 mov	 edx, 1
  0059c	bb 10 00 00 00	 mov	 ebx, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+16
  005a1	89 95 f0 fd ff
	ff		 mov	 DWORD PTR tv2168[ebp], edx
  005a7	be 67 00 00 00	 mov	 esi, 103		; 00000067H
  005ac	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv2167[ebp], ebx
  005b2	89 b5 f8 fd ff
	ff		 mov	 DWORD PTR tv2165[ebp], esi
  005b8	c6 80 10 00 00
	00 00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+16], 0

; 11285: 			poolItem[selShopItemNo].info[0][0] = '\0';

  005bf	c6 80 2d 00 00
	00 00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+45], 0

; 11286: 			poolItem[selShopItemNo].info[1][0] = '\0';

  005c6	c6 80 4a 00 00
	00 00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+74], 0

; 11287: 			poolItem[selShopItemNo].info[2][0] = '\0';

  005cd	c6 80 67 00 00
	00 00		 mov	 BYTE PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+103], 0

; 11288: #ifdef _ITEM_PILENUMS
; 11289: 			poolItem[selShopItemNo].num = 0;

  005d4	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[eax+132], 0
  005de	66 90		 npad	 2
$LL16@serverWind:

; 11293: 				if (poolItem[i].name[0] == '\0') {

  005e0	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  005e3	0f 85 d9 00 00
	00		 jne	 $LN14@serverWind

; 11294: 					for (j = i + 1; j < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; j++) {

  005e9	8b ca		 mov	 ecx, edx
  005eb	83 fa 68	 cmp	 edx, 104		; 00000068H
  005ee	0f 8d ce 00 00
	00		 jge	 $LN14@serverWind
  005f4	8d 83 88 00 00
	00		 lea	 eax, DWORD PTR [ebx+136]
  005fa	66 0f 1f 44 00
	00		 npad	 6
$LL19@serverWind:

; 11295: 						if (poolItem[j].name[0] != '\0') {

  00600	80 38 00	 cmp	 BYTE PTR [eax], 0
  00603	75 12		 jne	 SHORT $LN90@serverWind

; 11294: 					for (j = i + 1; j < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; j++) {

  00605	05 88 00 00 00	 add	 eax, 136		; 00000088H
  0060a	41		 inc	 ecx
  0060b	3d 50 37 00 00	 cmp	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+14160
  00610	7c ee		 jl	 SHORT $LL19@serverWind

; 11315: 				if (poolItem[i].name[0] == '\0')

  00612	e9 ab 00 00 00	 jmp	 $LN14@serverWind
$LN90@serverWind:

; 11296: 							strcpy(poolItem[i].name, poolItem[j].name);

  00617	69 f1 88 00 00
	00		 imul	 esi, ecx, 136
  0061d	8b d3		 mov	 edx, ebx
  0061f	8d 86 10 00 00
	00		 lea	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+16]
  00625	89 85 ec fd ff
	ff		 mov	 DWORD PTR tv2185[ebp], eax
  0062b	8b c8		 mov	 ecx, eax
  0062d	2b d0		 sub	 edx, eax
  0062f	90		 npad	 1
$LL74@serverWind:
  00630	8a 01		 mov	 al, BYTE PTR [ecx]
  00632	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00635	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00639	84 c0		 test	 al, al
  0063b	75 f3		 jne	 SHORT $LL74@serverWind

; 11297: 							poolItem[i].poolFlag = poolItem[j].poolFlag;

  0063d	0f b7 86 0c 00
	00 00		 movzx	 eax, WORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+12]
  00644	8d 7b 1d	 lea	 edi, DWORD PTR [ebx+29]
  00647	66 89 43 fc	 mov	 WORD PTR [ebx-4], ax

; 11298: 							poolItem[i].level = poolItem[j].level;

  0064b	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi]
  00651	89 43 f0	 mov	 DWORD PTR [ebx-16], eax

; 11299: 							poolItem[i].price = poolItem[j].price;

  00654	8b 86 04 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+4]
  0065a	89 43 f4	 mov	 DWORD PTR [ebx-12], eax

; 11300: 							poolItem[i].graNo = poolItem[j].graNo;

  0065d	8b 86 08 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+8]
  00663	89 43 f8	 mov	 DWORD PTR [ebx-8], eax

; 11301: 							poolItem[i].tbl = poolItem[j].tbl;

  00666	0f b7 86 0e 00
	00 00		 movzx	 eax, WORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+14]
  0066d	66 89 43 fe	 mov	 WORD PTR [ebx-2], ax

; 11302: #ifdef _ITEM_PILENUMS
; 11303: 							poolItem[i].num = poolItem[j].num;

  00671	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+132]
  00677	8d b6 2d 00 00
	00		 lea	 esi, DWORD PTR ?poolItem@@3PAUPOOL_SHOP@@A[esi+45]
  0067d	89 43 74	 mov	 DWORD PTR [ebx+116], eax
  00680	bb 03 00 00 00	 mov	 ebx, 3
$LL22@serverWind:

; 11306: 								strcpy(poolItem[i].info[k], poolItem[j].info[k]);

  00685	8b d7		 mov	 edx, edi
  00687	8b c6		 mov	 eax, esi
  00689	2b d6		 sub	 edx, esi
  0068b	0f 1f 44 00 00	 npad	 5
$LL75@serverWind:
  00690	8a 08		 mov	 cl, BYTE PTR [eax]
  00692	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00695	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00699	84 c9		 test	 cl, cl
  0069b	75 f3		 jne	 SHORT $LL75@serverWind

; 11304: #endif
; 11305: 							for (k = 0; k < 3; k++) {

  0069d	83 c7 1d	 add	 edi, 29			; 0000001dH
  006a0	83 c6 1d	 add	 esi, 29			; 0000001dH
  006a3	83 eb 01	 sub	 ebx, 1
  006a6	75 dd		 jne	 SHORT $LL22@serverWind

; 11307: 							}
; 11308: 							poolItem[j].name[0] = '\0';

  006a8	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR tv2185[ebp]
  006ae	8b 95 f0 fd ff
	ff		 mov	 edx, DWORD PTR tv2168[ebp]
  006b4	8b b5 f8 fd ff
	ff		 mov	 esi, DWORD PTR tv2165[ebp]
  006ba	88 18		 mov	 BYTE PTR [eax], bl
  006bc	8b 9d f4 fd ff
	ff		 mov	 ebx, DWORD PTR tv2167[ebp]
$LN14@serverWind:

; 11290: #endif
; 11291: 			int i, j, k;
; 11292: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE - 1; i++) {

  006c2	42		 inc	 edx
  006c3	81 c3 88 00 00
	00		 add	 ebx, 136		; 00000088H
  006c9	83 ee 01	 sub	 esi, 1
  006cc	89 95 f0 fd ff
	ff		 mov	 DWORD PTR tv2168[ebp], edx
  006d2	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv2167[ebp], ebx
  006d8	89 b5 f8 fd ff
	ff		 mov	 DWORD PTR tv2165[ebp], esi
  006de	0f 85 fc fe ff
	ff		 jne	 $LL16@serverWind

; 11309: 							break;
; 11310: 						}
; 11311: 					}
; 11312: 				}
; 11313: 			}
; 11314: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; i++) {

  006e4	33 c9		 xor	 ecx, ecx
  006e6	b8 98 00 00 00	 mov	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+152
  006eb	0f 1f 44 00 00	 npad	 5
$LL25@serverWind:

; 11315: 				if (poolItem[i].name[0] == '\0')

  006f0	80 b8 78 ff ff
	ff 00		 cmp	 BYTE PTR [eax-136], 0
  006f7	74 33		 je	 SHORT $LN91@serverWind
  006f9	80 38 00	 cmp	 BYTE PTR [eax], 0
  006fc	74 2d		 je	 SHORT $LN115@serverWind
  006fe	80 b8 88 00 00
	00 00		 cmp	 BYTE PTR [eax+136], 0
  00705	74 1f		 je	 SHORT $LN116@serverWind
  00707	80 b8 10 01 00
	00 00		 cmp	 BYTE PTR [eax+272], 0
  0070e	74 11		 je	 SHORT $LN117@serverWind

; 11309: 							break;
; 11310: 						}
; 11311: 					}
; 11312: 				}
; 11313: 			}
; 11314: 			for (i = 0; i < MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE; i++) {

  00710	05 20 02 00 00	 add	 eax, 544		; 00000220H
  00715	83 c1 04	 add	 ecx, 4
  00718	3d d8 37 00 00	 cmp	 eax, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+14296
  0071d	7c d1		 jl	 SHORT $LL25@serverWind
  0071f	eb 0b		 jmp	 SHORT $LN91@serverWind
$LN117@serverWind:

; 11315: 				if (poolItem[i].name[0] == '\0')

  00721	83 c1 03	 add	 ecx, 3
  00724	eb 06		 jmp	 SHORT $LN91@serverWind
$LN116@serverWind:
  00726	83 c1 02	 add	 ecx, 2
  00729	eb 01		 jmp	 SHORT $LN91@serverWind
$LN115@serverWind:
  0072b	41		 inc	 ecx
$LN91@serverWind:

; 11316: 					break;
; 11317: 			}
; 11318: 			if (i > 0) {

  0072c	85 c9		 test	 ecx, ecx
  0072e	7e 11		 jle	 SHORT $LN67@serverWind

; 11319: 				shopWondow2MaxPage = (i + 7) / MAX_POOL_SHOP_ITEM;

  00730	8d 41 07	 lea	 eax, DWORD PTR [ecx+7]
  00733	99		 cdq
  00734	83 e2 07	 and	 edx, 7
  00737	03 c2		 add	 eax, edx
  00739	c1 f8 03	 sar	 eax, 3
  0073c	0f b7 c0	 movzx	 eax, ax

; 11320: 			}

  0073f	eb 05		 jmp	 SHORT $LN68@serverWind
$LN67@serverWind:

; 11321: 			else {
; 11322: 				shopWondow2MaxPage = 1;

  00741	b8 01 00 00 00	 mov	 eax, 1
$LN68@serverWind:

; 11323: 			}
; 11324: 			if (shopWondow2Page >= shopWondow2MaxPage)

  00746	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  0074c	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  00753	7c 0e		 jl	 SHORT $LN132@serverWind

; 11325: 				shopWondow2Page = shopWondow2MaxPage - 1;

  00755	48		 dec	 eax
  00756	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  0075c	eb 05		 jmp	 SHORT $LN132@serverWind
$LN60@serverWind:

; 11326: 
; 11327: 			shopWindowProcNo = 100;
; 11328: 
; 11329: 		}
; 11330: 		else if (ret == 2) {

  0075e	83 f8 02	 cmp	 eax, 2
  00761	75 0b		 jne	 SHORT $LN70@serverWind
$LN132@serverWind:

; 11331: 			shopWindowProcNo = 100;

  00763	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
$LN137@serverWind:

; 11332: 		}
; 11333: 	}
; 11334: }

  00768	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
$LN70@serverWind:
  0076e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00771	5f		 pop	 edi
  00772	5e		 pop	 esi
  00773	33 cd		 xor	 ecx, ebp
  00775	5b		 pop	 ebx
  00776	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0077b	8b e5		 mov	 esp, ebp
  0077d	5d		 pop	 ebp
  0077e	c3		 ret	 0
?serverWindowType7@@YAXXZ ENDP				; serverWindowType7
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType6@@YAXXZ
_TEXT	SEGMENT
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType6@@YAXXZ PROC				; serverWindowType6, COMDAT

; 9352 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 9353 : 	int ret;
; 9354 : 
; 9355 : 	// îº????
; 9356 : 	if (skillShopWindowProcNo == 0)

  00013	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00019	66 85 c0	 test	 ax, ax
  0001c	75 2d		 jne	 SHORT $LN2@serverWind

; 9357 : 	{
; 9358 : 		initSkillShopWindow1();

  0001e	e8 00 00 00 00	 call	 ?initSkillShopWindow1@@YAXXZ ; initSkillShopWindow1

; 9359 : 		skillShopWindowProcNo++;
; 9360 : 		play_se(202, 320, 240);	// ????????

  00023	68 f0 00 00 00	 push	 240			; 000000f0H
  00028	b8 01 00 00 00	 mov	 eax, 1
  0002d	68 40 01 00 00	 push	 320			; 00000140H
  00032	68 ca 00 00 00	 push	 202			; 000000caH
  00037	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  0003d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00042	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00048	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@serverWind:

; 9361 : 	}
; 9362 : 	if (skillShopWindowProcNo == 1)

  0004b	66 83 f8 01	 cmp	 ax, 1
  0004f	75 10		 jne	 SHORT $LN4@serverWind

; 9363 : 	{
; 9364 : 		ret = skillShopWindow1();

  00051	e8 00 00 00 00	 call	 ?skillShopWindow1@@YAHXZ ; skillShopWindow1

; 9365 : 		if (ret == 2)

  00056	83 f8 02	 cmp	 eax, 2
  00059	74 0c		 je	 SHORT $LN23@serverWind
  0005b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
$LN4@serverWind:

; 9366 : 		{
; 9367 : 			skillShopWindowProcNo = 10;
; 9368 : 		}
; 9369 : 	}
; 9370 : 	if (skillShopWindowProcNo == 10) {

  00061	66 83 f8 0a	 cmp	 ax, 10			; 0000000aH
  00065	75 2d		 jne	 SHORT $LN5@serverWind
$LN23@serverWind:

; 9371 : 		initSkillShopWindow2();

  00067	e8 00 00 00 00	 call	 ?initSkillShopWindow2@@YAXXZ ; initSkillShopWindow2

; 9372 : 		skillShopWindowProcNo++;
; 9373 : 		play_se(202, 320, 240);

  0006c	68 f0 00 00 00	 push	 240			; 000000f0H
  00071	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00076	68 40 01 00 00	 push	 320			; 00000140H
  0007b	68 ca 00 00 00	 push	 202			; 000000caH
  00080	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  00086	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0008b	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  00091	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@serverWind:

; 9374 : 	}
; 9375 : 	if (skillShopWindowProcNo == 11) {

  00094	66 83 f8 0b	 cmp	 ax, 11			; 0000000bH
  00098	75 2b		 jne	 SHORT $LN9@serverWind

; 9376 : 		ret = skillShopWindow2();

  0009a	e8 00 00 00 00	 call	 ?skillShopWindow2@@YAHXZ ; skillShopWindow2

; 9377 : 		if (ret == 1) {

  0009f	83 f8 01	 cmp	 eax, 1
  000a2	75 16		 jne	 SHORT $LN7@serverWind

; 9378 : 			skillShopWindowProcNo = 0;

  000a4	33 c0		 xor	 eax, eax

; 9426 : 		}
; 9427 : 	}
; 9428 : }

  000a6	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  000ac	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000af	33 cd		 xor	 ecx, ebp
  000b1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000b6	8b e5		 mov	 esp, ebp
  000b8	5d		 pop	 ebp
  000b9	c3		 ret	 0
$LN7@serverWind:

; 9379 : 		}
; 9380 : 		else if (ret == 2) {

  000ba	83 f8 02	 cmp	 eax, 2
  000bd	74 0c		 je	 SHORT $LN24@serverWind
  000bf	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
$LN9@serverWind:

; 9381 : 			skillShopWindowProcNo = 20;
; 9382 : 		}
; 9383 : 	}
; 9384 : 	if (skillShopWindowProcNo == 20) {

  000c5	66 83 f8 14	 cmp	 ax, 20			; 00000014H
  000c9	75 2d		 jne	 SHORT $LN10@serverWind
$LN24@serverWind:

; 9385 : 		initSkillShopWindow3();

  000cb	e8 00 00 00 00	 call	 ?initSkillShopWindow3@@YAXXZ ; initSkillShopWindow3

; 9386 : 		skillShopWindowProcNo++;
; 9387 : 		play_se(202, 320, 240);

  000d0	68 f0 00 00 00	 push	 240			; 000000f0H
  000d5	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  000da	68 40 01 00 00	 push	 320			; 00000140H
  000df	68 ca 00 00 00	 push	 202			; 000000caH
  000e4	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  000ea	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000ef	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  000f5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@serverWind:

; 9388 : 	}
; 9389 : 	if (skillShopWindowProcNo == 21) {

  000f8	66 83 f8 15	 cmp	 ax, 21			; 00000015H
  000fc	75 2e		 jne	 SHORT $LN14@serverWind

; 9390 : 		ret = skillShopWindow3();

  000fe	e8 00 00 00 00	 call	 ?skillShopWindow3@@YAHXZ ; skillShopWindow3

; 9391 : 		if (ret == 1) {

  00103	83 f8 01	 cmp	 eax, 1
  00106	75 19		 jne	 SHORT $LN12@serverWind

; 9392 : 			skillShopWindowProcNo = 10;

  00108	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH

; 9426 : 		}
; 9427 : 	}
; 9428 : }

  0010d	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  00113	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00116	33 cd		 xor	 ecx, ebp
  00118	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011d	8b e5		 mov	 esp, ebp
  0011f	5d		 pop	 ebp
  00120	c3		 ret	 0
$LN12@serverWind:

; 9393 : 		}
; 9394 : 		else if (ret == 2) {

  00121	83 f8 02	 cmp	 eax, 2
  00124	74 0c		 je	 SHORT $LN25@serverWind
  00126	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
$LN14@serverWind:

; 9395 : 			skillShopWindowProcNo = 30;
; 9396 : 		}
; 9397 : 	}
; 9398 : 	if (skillShopWindowProcNo == 30) {

  0012c	66 83 f8 1e	 cmp	 ax, 30			; 0000001eH
  00130	75 2d		 jne	 SHORT $LN15@serverWind
$LN25@serverWind:

; 9399 : 		initSkillShopWindow4();

  00132	e8 00 00 00 00	 call	 ?initSkillShopWindow4@@YAXXZ ; initSkillShopWindow4

; 9400 : 		skillShopWindowProcNo++;
; 9401 : 		play_se(202, 320, 240);

  00137	68 f0 00 00 00	 push	 240			; 000000f0H
  0013c	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00141	68 40 01 00 00	 push	 320			; 00000140H
  00146	68 ca 00 00 00	 push	 202			; 000000caH
  0014b	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  00151	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00156	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?skillShopWindowProcNo@@3FA ; skillShopWindowProcNo
  0015c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@serverWind:

; 9402 : 	}
; 9403 : 	if (skillShopWindowProcNo == 31) {

  0015f	66 83 f8 1f	 cmp	 ax, 31			; 0000001fH
  00163	0f 85 db 00 00
	00		 jne	 $LN21@serverWind

; 9404 : 		ret = skillShopWindow4();

  00169	e8 00 00 00 00	 call	 ?skillShopWindow4@@YAHXZ ; skillShopWindow4

; 9405 : 		if (ret == 1) {

  0016e	83 f8 01	 cmp	 eax, 1
  00171	0f 85 bd 00 00
	00		 jne	 $LN17@serverWind

; 9406 : #if 1
; 9407 : 			char data[256];
; 9408 : 			char msg[256];
; 9409 : 			sprintf(data, "%d|%d|%d|%d",

  00177	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  0017e	6b c1 70	 imul	 eax, ecx, 112
  00181	ff b0 00 00 00
	00		 push	 DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[eax]
  00187	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillSlotNo@@3FA ; selShopSkillSlotNo
  0018e	50		 push	 eax
  0018f	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillPetNo@@3FA ; selShopSkillPetNo
  00196	50		 push	 eax
  00197	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0019a	50		 push	 eax
  0019b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  001a1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JKOCLGKC@?$CFd?$HM?$CFd?$HM?$CFd?$HM?$CFd@
  001a6	50		 push	 eax
  001a7	e8 00 00 00 00	 call	 _sprintf

; 9410 : 				selShopSkillNo + 1,
; 9411 : 				selShopSkillPetNo,
; 9412 : 				selShopSkillSlotNo,
; 9413 : 				sealSkill[selShopSkillNo].price);
; 9414 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  001ac	68 ff 00 00 00	 push	 255			; 000000ffH
  001b1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  001b7	50		 push	 eax
  001b8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  001be	50		 push	 eax
  001bf	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  001c4	83 c4 24	 add	 esp, 36			; 00000024H

; 9415 : 			if (bNewServer)

  001c7	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  001cd	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001d4	50		 push	 eax
  001d5	6a 00		 push	 0
  001d7	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  001dd	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  001e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  001e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  001ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001f5	74 07		 je	 SHORT $LN19@serverWind

; 9416 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  001f7	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  001fc	eb 05		 jmp	 SHORT $LN27@serverWind
$LN19@serverWind:

; 9417 : 			else
; 9418 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  001fe	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN27@serverWind:

; 9419 : #endif
; 9420 : 			pc.gold -= sealSkill[selShopSkillNo].price;

  00203	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopSkillNo@@3FA ; selShopSkillNo
  0020a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0020d	6b c0 70	 imul	 eax, eax, 112

; 9421 : 
; 9422 : 			windowTypeWN = -1;

  00210	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0021a	8b 80 00 00 00
	00		 mov	 eax, DWORD PTR ?sealSkill@@3PAUSKILL_SHOP@@A[eax]
  00220	29 05 60 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+96, eax

; 9426 : 		}
; 9427 : 	}
; 9428 : }

  00226	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00229	33 cd		 xor	 ecx, ebp
  0022b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00230	8b e5		 mov	 esp, ebp
  00232	5d		 pop	 ebp
  00233	c3		 ret	 0
$LN17@serverWind:

; 9423 : 		}
; 9424 : 		else if (ret == 2) {

  00234	83 f8 02	 cmp	 eax, 2
  00237	75 0b		 jne	 SHORT $LN21@serverWind

; 9425 : 			skillShopWindowProcNo = 20;

  00239	b8 14 00 00 00	 mov	 eax, 20			; 00000014H

; 9426 : 		}
; 9427 : 	}
; 9428 : }

  0023e	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
$LN21@serverWind:
  00244	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00247	33 cd		 xor	 ecx, ebp
  00249	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024e	8b e5		 mov	 esp, ebp
  00250	5d		 pop	 ebp
  00251	c3		 ret	 0
?serverWindowType6@@YAXXZ ENDP				; serverWindowType6
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType5@@YAXXZ
_TEXT	SEGMENT
tv1791 = -532						; size = 4
tv1776 = -528						; size = 4
tv1778 = -524						; size = 4
tv1780 = -520						; size = 4
_data$1 = -516						; size = 256
_data$2 = -516						; size = 256
_data$3 = -516						; size = 256
_data$4 = -516						; size = 256
_msg$5 = -260						; size = 256
_msg$6 = -260						; size = 256
_msg$7 = -260						; size = 256
_msg$8 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType5@@YAXXZ PROC				; serverWindowType5, COMDAT

; 7873 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 02 00
	00		 sub	 esp, 532		; 00000214H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 7874 : 	int ret;
; 7875 : 
; 7876 : 	if (shopWindowProcNo == 0) {

  00013	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 0 ; shopWindowProcNo
  0001b	75 27		 jne	 SHORT $LN17@serverWind

; 7877 : 		initShopWindow1();

  0001d	e8 00 00 00 00	 call	 ?initShopWindow1@@YAXXZ	; initShopWindow1

; 7878 : 		shopWindowProcNo++;
; 7879 : 		play_se(202, 320, 240);

  00022	68 f0 00 00 00	 push	 240			; 000000f0H
  00027	b8 01 00 00 00	 mov	 eax, 1
  0002c	68 40 01 00 00	 push	 320			; 00000140H
  00031	68 ca 00 00 00	 push	 202			; 000000caH
  00036	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  0003c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN17@serverWind:

; 7880 : 	}
; 7881 : 	if (shopWindowProcNo == 1) {

  00044	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 1 ; shopWindowProcNo
  0004c	75 05		 jne	 SHORT $LN18@serverWind

; 7882 : 		ret = shopWindow1();

  0004e	e8 00 00 00 00	 call	 ?shopWindow1@@YAHXZ	; shopWindow1
$LN18@serverWind:

; 7883 : 	}
; 7884 : 
; 7885 : 	if (shopWindowProcNo == 15) {

  00053	66 83 3d 00 00
	00 00 0f	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 15 ; shopWindowProcNo, 0000000fH
  0005b	56		 push	 esi
  0005c	57		 push	 edi
  0005d	bf 0b 00 00 00	 mov	 edi, 11			; 0000000bH
  00062	75 23		 jne	 SHORT $LN19@serverWind

; 7886 : 		initShopWindow2();

  00064	e8 00 00 00 00	 call	 ?initShopWindow2@@YAXXZ	; initShopWindow2

; 7887 : 		shopWindowProcNo = 11;
; 7888 : 		play_se(202, 320, 240);

  00069	68 f0 00 00 00	 push	 240			; 000000f0H
  0006e	68 40 01 00 00	 push	 320			; 00000140H
  00073	68 ca 00 00 00	 push	 202			; 000000caH
  00078	66 89 3d 00 00
	00 00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, di ; shopWindowProcNo
  0007f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00084	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN19@serverWind:

; 7889 : 	}
; 7890 : 	if (shopWindowProcNo == 10) {

  00087	66 83 3d 00 00
	00 00 0a	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 10 ; shopWindowProcNo, 0000000aH
  0008f	0f 85 85 00 00
	00		 jne	 $LN20@serverWind

; 7891 : 		int i, j;
; 7892 : 		for (i = MAX_ITEMSTART, j = 0; i < MAX_ITEM; i++) {

  00095	33 f6		 xor	 esi, esi
  00097	ba 78 10 00 00	 mov	 edx, OFFSET ?pc@@3UPC@@A+4216
  0009c	0f 1f 40 00	 npad	 4
$LL95@serverWind:

; 7893 : 			if (pc.item[i].useFlag == 0)

  000a0	66 83 ba 84 fe
	ff ff 00	 cmp	 WORD PTR [edx-380], 0
  000a8	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  000ab	0f 45 c6	 cmovne	 eax, esi
  000ae	66 83 3a 00	 cmp	 WORD PTR [edx], 0
  000b2	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  000b5	0f 45 c8	 cmovne	 ecx, eax
  000b8	66 83 ba 7c 01
	00 00 00	 cmp	 WORD PTR [edx+380], 0
  000c0	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000c3	0f 45 c1	 cmovne	 eax, ecx
  000c6	66 83 ba f8 02
	00 00 00	 cmp	 WORD PTR [edx+760], 0
  000ce	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  000d1	0f 45 c8	 cmovne	 ecx, eax
  000d4	66 83 ba 74 04
	00 00 00	 cmp	 WORD PTR [edx+1140], 0
  000dc	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  000df	0f 45 f1	 cmovne	 esi, ecx
  000e2	81 c2 6c 07 00
	00		 add	 edx, 1900		; 0000076cH
  000e8	81 fa 44 53 00
	00		 cmp	 edx, OFFSET ?pc@@3UPC@@A+21316
  000ee	7c b0		 jl	 SHORT $LL95@serverWind

; 7894 : 				j++;
; 7895 : 		}
; 7896 : 		nowUserItemCnt = j;

  000f0	66 89 35 00 00
	00 00		 mov	 WORD PTR ?nowUserItemCnt@@3FA, si ; nowUserItemCnt

; 7897 : 
; 7898 : 		initShopWindow2();

  000f7	e8 00 00 00 00	 call	 ?initShopWindow2@@YAXXZ	; initShopWindow2

; 7899 : 		shopWindowProcNo++;
; 7900 : 		play_se(202, 320, 240);

  000fc	68 f0 00 00 00	 push	 240			; 000000f0H
  00101	68 40 01 00 00	 push	 320			; 00000140H
  00106	68 ca 00 00 00	 push	 202			; 000000caH
  0010b	66 89 3d 00 00
	00 00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, di ; shopWindowProcNo
  00112	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00117	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN20@serverWind:

; 7901 : 	}
; 7902 : 	if (shopWindowProcNo == 11) {

  0011a	66 39 3d 00 00
	00 00		 cmp	 WORD PTR ?shopWindowProcNo@@3FA, di ; shopWindowProcNo
  00121	0f 85 a5 00 00
	00		 jne	 $LN30@serverWind

; 7903 : 		ret = shopWindow2();

  00127	e8 00 00 00 00	 call	 ?shopWindow2@@YAHXZ	; shopWindow2

; 7904 : 		if (ret == 1) {

  0012c	83 f8 01	 cmp	 eax, 1
  0012f	0f 85 84 00 00
	00		 jne	 $LN23@serverWind

; 7905 : 			char data[256];
; 7906 : 			char msg[256];
; 7907 : 			sprintf(data, "0");

  00135	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$4[ebp]
  0013b	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _sprintf

; 7908 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00146	68 ff 00 00 00	 push	 255			; 000000ffH
  0014b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$8[ebp]
  00151	50		 push	 eax
  00152	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$4[ebp]
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0015e	83 c4 14	 add	 esp, 20			; 00000014H

; 7909 : 			if (bNewServer)

  00161	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$8[ebp]
  00167	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0016e	50		 push	 eax
  0016f	6a 00		 push	 0
  00171	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00177	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0017d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00183	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00189	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0018f	74 14		 je	 SHORT $LN25@serverWind

; 7910 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00191	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 7913 : 			windowTypeWN = -1;

  00196	83 c4 1c	 add	 esp, 28			; 0000001cH
  00199	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 7914 : 		}

  001a3	eb 27		 jmp	 SHORT $LN30@serverWind
$LN25@serverWind:

; 7911 : 			else
; 7912 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  001a5	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 7913 : 			windowTypeWN = -1;

  001aa	83 c4 1c	 add	 esp, 28			; 0000001cH
  001ad	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 7914 : 		}

  001b7	eb 13		 jmp	 SHORT $LN30@serverWind
$LN23@serverWind:

; 7915 : 		else if (ret == 2) {

  001b9	83 f8 02	 cmp	 eax, 2
  001bc	74 66		 je	 SHORT $LN120@serverWind

; 7916 : 			shopWindowProcNo = 30;
; 7917 : 		}
; 7918 : 		else if (ret == 3) {

  001be	83 f8 03	 cmp	 eax, 3
  001c1	74 13		 je	 SHORT $LN121@serverWind

; 7919 : 			shopWindowProcNo = 20;
; 7920 : 		}
; 7921 : 		if (ret == 4) {

  001c3	83 f8 04	 cmp	 eax, 4
  001c6	0f 84 c5 01 00
	00		 je	 $LN122@serverWind
$LN30@serverWind:

; 7922 : 			shopWindowProcNo = 50;
; 7923 : 		}
; 7924 : 	}
; 7925 : 	if (shopWindowProcNo == 20) {

  001cc	66 83 3d 00 00
	00 00 14	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 20 ; shopWindowProcNo, 00000014H
  001d4	75 27		 jne	 SHORT $LN31@serverWind
$LN121@serverWind:

; 7926 : 		initShopWindow4();

  001d6	e8 00 00 00 00	 call	 ?initShopWindow4@@YAXXZ	; initShopWindow4

; 7927 : 		shopWindowProcNo++;
; 7928 : 		play_se(202, 320, 240);

  001db	68 f0 00 00 00	 push	 240			; 000000f0H
  001e0	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  001e5	68 40 01 00 00	 push	 320			; 00000140H
  001ea	68 ca 00 00 00	 push	 202			; 000000caH
  001ef	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  001f5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001fa	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN31@serverWind:

; 7929 : 	}
; 7930 : 	if (shopWindowProcNo == 21) {

  001fd	66 83 3d 00 00
	00 00 15	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 21 ; shopWindowProcNo, 00000015H
  00205	75 13		 jne	 SHORT $LN35@serverWind

; 7931 : 		ret = shopWindow4();

  00207	e8 00 00 00 00	 call	 ?shopWindow4@@YAHXZ	; shopWindow4

; 7932 : 		if (ret == 1) {

  0020c	83 f8 01	 cmp	 eax, 1
  0020f	74 13		 je	 SHORT $LN120@serverWind

; 7933 : 			shopWindowProcNo = 30;
; 7934 : 		}
; 7935 : 		else if (ret == 2) {

  00211	83 f8 02	 cmp	 eax, 2
  00214	0f 84 54 01 00
	00		 je	 $LN47@serverWind
$LN35@serverWind:

; 7936 : 			shopWindowProcNo = 15;
; 7937 : 		}
; 7938 : 	}
; 7939 : 	if (shopWindowProcNo == 30) {

  0021a	66 83 3d 00 00
	00 00 1e	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 30 ; shopWindowProcNo, 0000001eH
  00222	75 27		 jne	 SHORT $LN36@serverWind
$LN120@serverWind:

; 7940 : 		initShopWindow3();

  00224	e8 00 00 00 00	 call	 ?initShopWindow3@@YAXXZ	; initShopWindow3

; 7941 : 		shopWindowProcNo++;
; 7942 : 		play_se(202, 320, 240);

  00229	68 f0 00 00 00	 push	 240			; 000000f0H
  0022e	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00233	68 40 01 00 00	 push	 320			; 00000140H
  00238	68 ca 00 00 00	 push	 202			; 000000caH
  0023d	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  00243	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00248	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN36@serverWind:

; 7943 : 	}
; 7944 : 	if (shopWindowProcNo == 31) {

  0024b	66 83 3d 00 00
	00 00 1f	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 31 ; shopWindowProcNo, 0000001fH
  00253	75 13		 jne	 SHORT $LN40@serverWind

; 7945 : 		ret = shopWindow3();

  00255	e8 00 00 00 00	 call	 ?shopWindow3@@YAHXZ	; shopWindow3

; 7946 : 		if (ret == 1) {

  0025a	83 f8 01	 cmp	 eax, 1
  0025d	74 13		 je	 SHORT $LN123@serverWind

; 7947 : 			shopWindowProcNo = 40;
; 7948 : 		}
; 7949 : 		else if (ret == 2) {

  0025f	83 f8 02	 cmp	 eax, 2
  00262	0f 84 06 01 00
	00		 je	 $LN47@serverWind
$LN40@serverWind:

; 7950 : 			shopWindowProcNo = 15;
; 7951 : 		}
; 7952 : 	}
; 7953 : 	if (shopWindowProcNo == 40) {

  00268	66 83 3d 00 00
	00 00 28	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 40 ; shopWindowProcNo, 00000028H
  00270	75 27		 jne	 SHORT $LN41@serverWind
$LN123@serverWind:

; 7954 : 		initShopWindow5();

  00272	e8 00 00 00 00	 call	 ?initShopWindow5@@YAXXZ	; initShopWindow5

; 7955 : 		shopWindowProcNo++;
; 7956 : 		play_se(202, 320, 240);

  00277	68 f0 00 00 00	 push	 240			; 000000f0H
  0027c	b8 29 00 00 00	 mov	 eax, 41			; 00000029H
  00281	68 40 01 00 00	 push	 320			; 00000140H
  00286	68 ca 00 00 00	 push	 202			; 000000caH
  0028b	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  00291	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00296	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN41@serverWind:

; 7957 : 	}
; 7958 : 	if (shopWindowProcNo == 41) {

  00299	66 83 3d 00 00
	00 00 29	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 41 ; shopWindowProcNo, 00000029H
  002a1	0f 85 e0 00 00
	00		 jne	 $LN128@serverWind

; 7959 : 		ret = shopWindow5();

  002a7	e8 00 00 00 00	 call	 ?shopWindow5@@YAHXZ	; shopWindow5

; 7960 : 		if (ret == 1) {

  002ac	83 f8 01	 cmp	 eax, 1
  002af	0f 85 c3 00 00
	00		 jne	 $LN43@serverWind

; 7961 : 			char data[256];
; 7962 : 			char msg[256];
; 7963 : 			sprintf(data, "%d|%d", selShopItemNo + 1, sealItemCnt);

  002b5	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  002bc	50		 push	 eax
  002bd	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  002c4	40		 inc	 eax
  002c5	50		 push	 eax
  002c6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  002cc	68 00 00 00 00	 push	 OFFSET ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
  002d1	50		 push	 eax
  002d2	e8 00 00 00 00	 call	 _sprintf

; 7964 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002d7	68 ff 00 00 00	 push	 255			; 000000ffH
  002dc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$7[ebp]
  002e2	50		 push	 eax
  002e3	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$3[ebp]
  002e9	50		 push	 eax
  002ea	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002ef	83 c4 1c	 add	 esp, 28			; 0000001cH

; 7965 : 			if (bNewServer)

  002f2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$7[ebp]
  002f8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002ff	50		 push	 eax
  00300	6a 00		 push	 0
  00302	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00308	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0030e	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00314	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0031a	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00320	74 07		 je	 SHORT $LN45@serverWind

; 7966 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00322	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00327	eb 05		 jmp	 SHORT $LN131@serverWind
$LN45@serverWind:

; 7967 : 			else
; 7968 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00329	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN131@serverWind:

; 7969 : 			nowUserItemCnt--;
; 7970 : 			pc.gold -= sealItem[selShopItemNo].price * sealItemCnt;

  0032e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00335	83 c4 1c	 add	 esp, 28			; 0000001cH
  00338	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  0033f	66 ff 0d 00 00
	00 00		 dec	 WORD PTR ?nowUserItemCnt@@3FA ; nowUserItemCnt
  00346	69 c8 8c 00 00
	00		 imul	 ecx, eax, 140
  0034c	8b 81 04 00 00
	00		 mov	 eax, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[ecx+4]
  00352	0f af c2	 imul	 eax, edx
  00355	29 05 60 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+96, eax

; 7971 : #ifdef _NEW_MANOR_LAW
; 7972 : 			if (sealItem[selShopItemNo].costfame > 0)

  0035b	8b 81 88 00 00
	00		 mov	 eax, DWORD PTR ?sealItem@@3PAUITEM_SHOP@@A[ecx+136]
  00361	85 c0		 test	 eax, eax
  00363	7e 09		 jle	 SHORT $LN47@serverWind

; 7973 : 				pc.fame -= sealItem[selShopItemNo].costfame * sealItemCnt;

  00365	0f af d0	 imul	 edx, eax
  00368	29 15 64 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+100, edx
$LN47@serverWind:

; 8111 : 	}
; 8112 : }
; 8113 : }

  0036e	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00373	e9 43 04 00 00	 jmp	 $LN132@serverWind
$LN43@serverWind:

; 7974 : #endif
; 7975 : 			shopWindowProcNo = 15;
; 7976 : 		}
; 7977 : 		else if (ret == 2) {

  00378	83 f8 02	 cmp	 eax, 2
  0037b	75 0a		 jne	 SHORT $LN128@serverWind

; 7978 : 			shopWindowProcNo = 30;

  0037d	b8 1e 00 00 00	 mov	 eax, 30			; 0000001eH

; 7979 : 		}
; 7980 : 	}
; 7981 : 	if (shopWindowProcNo == 50) {

  00382	e9 34 04 00 00	 jmp	 $LN132@serverWind
$LN128@serverWind:
  00387	66 83 3d 00 00
	00 00 32	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 50 ; shopWindowProcNo, 00000032H
  0038f	75 27		 jne	 SHORT $LN49@serverWind
$LN122@serverWind:

; 7982 : 		initShopWindow6();

  00391	e8 00 00 00 00	 call	 ?initShopWindow6@@YAXXZ	; initShopWindow6

; 7983 : 		shopWindowProcNo++;
; 7984 : 		play_se(202, 320, 240);

  00396	68 f0 00 00 00	 push	 240			; 000000f0H
  0039b	b8 33 00 00 00	 mov	 eax, 51			; 00000033H
  003a0	68 40 01 00 00	 push	 320			; 00000140H
  003a5	68 ca 00 00 00	 push	 202			; 000000caH
  003aa	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  003b0	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003b5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN49@serverWind:

; 7985 : 	}
; 7986 : 	if (shopWindowProcNo == 51) {

  003b8	66 83 3d 00 00
	00 00 33	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 51 ; shopWindowProcNo, 00000033H
  003c0	75 0a		 jne	 SHORT $LN129@serverWind

; 7987 : 		ret = shopWindow6();

  003c2	e8 00 00 00 00	 call	 ?shopWindow6@@YAHXZ	; shopWindow6

; 7988 : 		if (ret == 1) {

  003c7	83 f8 01	 cmp	 eax, 1
  003ca	74 a2		 je	 SHORT $LN47@serverWind
$LN129@serverWind:

; 7989 : 			shopWindowProcNo = 15;
; 7990 : 		}
; 7991 : 	}
; 7992 : 
; 7993 : 	if (shopWindowProcNo == 100) {

  003cc	66 83 3d 00 00
	00 00 64	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 100 ; shopWindowProcNo, 00000064H
  003d4	75 27		 jne	 SHORT $LN52@serverWind

; 7994 : 		initShopWindow7();

  003d6	e8 00 00 00 00	 call	 ?initShopWindow7@@YAXXZ	; initShopWindow7

; 7995 : 		shopWindowProcNo++;
; 7996 : 		play_se(202, 320, 240);

  003db	68 f0 00 00 00	 push	 240			; 000000f0H
  003e0	b8 65 00 00 00	 mov	 eax, 101		; 00000065H
  003e5	68 40 01 00 00	 push	 320			; 00000140H
  003ea	68 ca 00 00 00	 push	 202			; 000000caH
  003ef	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  003f5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003fa	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN52@serverWind:

; 7997 : 	}
; 7998 : 	if (shopWindowProcNo == 101) {

  003fd	66 83 3d 00 00
	00 00 65	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 101 ; shopWindowProcNo, 00000065H
  00405	0f 85 a0 00 00
	00		 jne	 $LN60@serverWind

; 7999 : 		ret = shopWindow7();

  0040b	e8 00 00 00 00	 call	 ?shopWindow7@@YAHXZ	; shopWindow7

; 8000 : 		if (ret == 1) {

  00410	83 f8 01	 cmp	 eax, 1
  00413	0f 85 84 00 00
	00		 jne	 $LN54@serverWind

; 8001 : 			char data[256];
; 8002 : 			char msg[256];
; 8003 : 			sprintf(data, "0");

  00419	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  0041f	68 00 00 00 00	 push	 OFFSET ??_C@_01GBGANLPD@0@
  00424	50		 push	 eax
  00425	e8 00 00 00 00	 call	 _sprintf

; 8004 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  0042a	68 ff 00 00 00	 push	 255			; 000000ffH
  0042f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$6[ebp]
  00435	50		 push	 eax
  00436	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$2[ebp]
  0043c	50		 push	 eax
  0043d	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00442	83 c4 14	 add	 esp, 20			; 00000014H

; 8005 : 			if (bNewServer)

  00445	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$6[ebp]
  0044b	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00452	50		 push	 eax
  00453	6a 00		 push	 0
  00455	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  0045b	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00461	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00467	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  0046d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00473	74 14		 je	 SHORT $LN56@serverWind

; 8006 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00475	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 8009 : 			windowTypeWN = -1;

  0047a	83 c4 1c	 add	 esp, 28			; 0000001cH
  0047d	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 8010 : 		}

  00487	eb 22		 jmp	 SHORT $LN60@serverWind
$LN56@serverWind:

; 8007 : 			else
; 8008 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00489	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 8009 : 			windowTypeWN = -1;

  0048e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00491	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 8010 : 		}

  0049b	eb 0e		 jmp	 SHORT $LN60@serverWind
$LN54@serverWind:

; 8011 : 		else if (ret == 2) {

  0049d	83 f8 02	 cmp	 eax, 2
  004a0	74 13		 je	 SHORT $LN124@serverWind

; 8012 : 			shopWindowProcNo = 110;
; 8013 : 		}
; 8014 : 		else if (ret == 3) {

  004a2	83 f8 03	 cmp	 eax, 3
  004a5	0f 84 d0 02 00
	00		 je	 $LN125@serverWind
$LN60@serverWind:

; 8015 : 			shopWindowProcNo = 120;
; 8016 : 		}
; 8017 : 	}
; 8018 : 
; 8019 : 	if (shopWindowProcNo == 110) {

  004ab	66 83 3d 00 00
	00 00 6e	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 110 ; shopWindowProcNo, 0000006eH
  004b3	75 27		 jne	 SHORT $LN61@serverWind
$LN124@serverWind:

; 8020 : #ifdef _ITEM_PILENUMS
; 8021 : 		initShopWindow10();

  004b5	e8 00 00 00 00	 call	 ?initShopWindow10@@YAXXZ ; initShopWindow10

; 8022 : #else
; 8023 : 		initShopWindow5();
; 8024 : #endif
; 8025 : 		shopWindowProcNo++;
; 8026 : 		play_se(202, 320, 240);

  004ba	68 f0 00 00 00	 push	 240			; 000000f0H
  004bf	b8 6f 00 00 00	 mov	 eax, 111		; 0000006fH
  004c4	68 40 01 00 00	 push	 320			; 00000140H
  004c9	68 ca 00 00 00	 push	 202			; 000000caH
  004ce	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  004d4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004d9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN61@serverWind:

; 8027 : 	}
; 8028 : 	if (shopWindowProcNo == 111) {

  004dc	66 83 3d 00 00
	00 00 6f	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 111 ; shopWindowProcNo, 0000006fH
  004e4	0f 85 87 02 00
	00		 jne	 $LN74@serverWind

; 8029 : #ifdef _ITEM_PILENUMS
; 8030 : 		ret = shopWindow10();

  004ea	e8 00 00 00 00	 call	 ?shopWindow10@@YAHXZ	; shopWindow10

; 8031 : #else
; 8032 : 		ret = shopWindow5();
; 8033 : #endif
; 8034 : 		if (ret == 1) {

  004ef	83 f8 01	 cmp	 eax, 1
  004f2	0f 85 74 02 00
	00		 jne	 $LN63@serverWind

; 8035 : 			char data[256];
; 8036 : 			char msg[256];
; 8037 : 
; 8038 : #ifdef _ITEM_PILENUMS
; 8039 : 			sprintf(data, "%d|%d", userItem[selShopItemNo].tbl, sealItemCnt);

  004f8	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  004ff	50		 push	 eax
  00500	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00507	69 c0 8c 00 00
	00		 imul	 eax, eax, 140
  0050d	0f bf 80 0e 00
	00 00		 movsx	 eax, WORD PTR ?userItem@@3PAUITEM_SHOP@@A[eax+14]
  00514	50		 push	 eax
  00515	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0051b	68 00 00 00 00	 push	 OFFSET ??_C@_05GLBACONI@?$CFd?$HM?$CFd@
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 _sprintf

; 8040 : #else
; 8041 : 			sprintf(data, "%d|%d", userItem[selShopItemNo].tbl, userItem[selShopItemNo].price);
; 8042 : #endif
; 8043 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00526	68 ff 00 00 00	 push	 255			; 000000ffH
  0052b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$5[ebp]
  00531	50		 push	 eax
  00532	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00538	50		 push	 eax
  00539	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0053e	83 c4 1c	 add	 esp, 28			; 0000001cH

; 8044 : 			if (bNewServer)

  00541	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$5[ebp]
  00547	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0054e	50		 push	 eax
  0054f	6a 00		 push	 0
  00551	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00557	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0055d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00563	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00569	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0056f	74 07		 je	 SHORT $LN65@serverWind

; 8045 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00571	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00576	eb 05		 jmp	 SHORT $LN134@serverWind
$LN65@serverWind:

; 8046 : 			else
; 8047 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  00578	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN134@serverWind:

; 8048 : 
; 8049 : 			pc.gold += userItem[selShopItemNo].price;

  0057d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selShopItemNo@@3FA ; selShopItemNo
  00584	83 c4 1c	 add	 esp, 28			; 0000001cH
  00587	69 c8 8c 00 00
	00		 imul	 ecx, eax, 140
  0058d	8b 81 04 00 00
	00		 mov	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+4]
  00593	01 05 60 00 00
	00		 add	 DWORD PTR ?pc@@3UPC@@A+96, eax

; 8050 : 			int i, j, k;
; 8051 : #ifdef _ITEM_PILENUMS
; 8052 : 			shopWindowProcNo = 100;

  00599	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  0059e	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 8053 : 			userItem[selShopItemNo].num -= sealItemCnt;

  005a4	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?sealItemCnt@@3FA ; sealItemCnt
  005ab	29 81 84 00 00
	00		 sub	 DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+132], eax

; 8054 : 			if (userItem[selShopItemNo].num <= 0) {

  005b1	83 b9 84 00 00
	00 00		 cmp	 DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+132], 0
  005b8	0f 8f 27 01 00
	00		 jg	 $LN6@serverWind

; 8055 : #else
; 8056 : 			shopWindowProcNo = 100;
; 8057 : #endif
; 8058 : 			userItem[selShopItemNo].name[0] = '\0';

  005be	53		 push	 ebx
  005bf	ba 01 00 00 00	 mov	 edx, 1
  005c4	c6 81 10 00 00
	00 00		 mov	 BYTE PTR ?userItem@@3PAUITEM_SHOP@@A[ecx+16], 0
  005cb	bb 10 00 00 00	 mov	 ebx, OFFSET ?userItem@@3PAUITEM_SHOP@@A+16
  005d0	89 95 f8 fd ff
	ff		 mov	 DWORD PTR tv1780[ebp], edx
  005d6	be 1f 00 00 00	 mov	 esi, 31			; 0000001fH
  005db	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv1778[ebp], ebx
  005e1	89 b5 f0 fd ff
	ff		 mov	 DWORD PTR tv1776[ebp], esi
$LL7@serverWind:

; 8060 : 				if (userItem[i].name[0] == '\0') {

  005e7	80 3b 00	 cmp	 BYTE PTR [ebx], 0
  005ea	0f 85 d2 00 00
	00		 jne	 $LN5@serverWind

; 8061 : 					for (j = i + 1; j < MAX_SHOP_ITEM * MAX_SHOP_PAGE; j++) {

  005f0	8b ca		 mov	 ecx, edx
  005f2	83 fa 20	 cmp	 edx, 32			; 00000020H
  005f5	0f 8d c7 00 00
	00		 jge	 $LN5@serverWind
  005fb	8d 83 8c 00 00
	00		 lea	 eax, DWORD PTR [ebx+140]
$LL10@serverWind:

; 8062 : 						if (userItem[j].name[0] != '\0') {

  00601	80 38 00	 cmp	 BYTE PTR [eax], 0
  00604	75 12		 jne	 SHORT $LN88@serverWind

; 8061 : 					for (j = i + 1; j < MAX_SHOP_ITEM * MAX_SHOP_PAGE; j++) {

  00606	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  0060b	41		 inc	 ecx
  0060c	3d 90 11 00 00	 cmp	 eax, OFFSET ?userItem@@3PAUITEM_SHOP@@A+4496
  00611	7c ee		 jl	 SHORT $LL10@serverWind

; 8085 : 			if (userItem[i].name[0] == '\0') break;

  00613	e9 aa 00 00 00	 jmp	 $LN5@serverWind
$LN88@serverWind:

; 8063 : 							strcpy(userItem[i].name, userItem[j].name);

  00618	69 f1 8c 00 00
	00		 imul	 esi, ecx, 140
  0061e	8b d3		 mov	 edx, ebx
  00620	8d 86 10 00 00
	00		 lea	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+16]
  00626	89 85 ec fd ff
	ff		 mov	 DWORD PTR tv1791[ebp], eax
  0062c	8b c8		 mov	 ecx, eax
  0062e	2b d0		 sub	 edx, eax
$LL79@serverWind:
  00630	8a 01		 mov	 al, BYTE PTR [ecx]
  00632	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00635	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00639	84 c0		 test	 al, al
  0063b	75 f3		 jne	 SHORT $LL79@serverWind

; 8064 : 							userItem[i].sealFlag = userItem[j].sealFlag;

  0063d	0f b7 86 0c 00
	00 00		 movzx	 eax, WORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+12]
  00644	8d 7b 1d	 lea	 edi, DWORD PTR [ebx+29]
  00647	66 89 43 fc	 mov	 WORD PTR [ebx-4], ax

; 8065 : 							userItem[i].level = userItem[j].level;

  0064b	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi]
  00651	89 43 f0	 mov	 DWORD PTR [ebx-16], eax

; 8066 : 							userItem[i].price = userItem[j].price;

  00654	8b 86 04 00 00
	00		 mov	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+4]
  0065a	89 43 f4	 mov	 DWORD PTR [ebx-12], eax

; 8067 : 							userItem[i].graNo = userItem[j].graNo;

  0065d	8b 86 08 00 00
	00		 mov	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+8]
  00663	89 43 f8	 mov	 DWORD PTR [ebx-8], eax

; 8068 : 							userItem[i].tbl = userItem[j].tbl;

  00666	0f b7 86 0e 00
	00 00		 movzx	 eax, WORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+14]
  0066d	66 89 43 fe	 mov	 WORD PTR [ebx-2], ax

; 8069 : #ifdef _ITEM_PILENUMS
; 8070 : 							userItem[i].num = userItem[j].num;

  00671	8b 86 84 00 00
	00		 mov	 eax, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+132]
  00677	8d b6 2d 00 00
	00		 lea	 esi, DWORD PTR ?userItem@@3PAUITEM_SHOP@@A[esi+45]
  0067d	89 43 74	 mov	 DWORD PTR [ebx+116], eax
  00680	bb 03 00 00 00	 mov	 ebx, 3
$LL13@serverWind:

; 8073 : 								strcpy(userItem[i].info[k], userItem[j].info[k]);

  00685	8b d7		 mov	 edx, edi
  00687	8b c6		 mov	 eax, esi
  00689	2b d6		 sub	 edx, esi
  0068b	0f 1f 44 00 00	 npad	 5
$LL80@serverWind:
  00690	8a 08		 mov	 cl, BYTE PTR [eax]
  00692	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00695	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00699	84 c9		 test	 cl, cl
  0069b	75 f3		 jne	 SHORT $LL80@serverWind

; 8071 : #endif
; 8072 : 							for (k = 0; k < 3; k++) {

  0069d	83 c7 1d	 add	 edi, 29			; 0000001dH
  006a0	83 c6 1d	 add	 esi, 29			; 0000001dH
  006a3	83 eb 01	 sub	 ebx, 1
  006a6	75 dd		 jne	 SHORT $LL13@serverWind

; 8074 : 							}
; 8075 : 							userItem[j].name[0] = '\0';

  006a8	8b 85 ec fd ff
	ff		 mov	 eax, DWORD PTR tv1791[ebp]
  006ae	8b 95 f8 fd ff
	ff		 mov	 edx, DWORD PTR tv1780[ebp]
  006b4	8b b5 f0 fd ff
	ff		 mov	 esi, DWORD PTR tv1776[ebp]
  006ba	88 18		 mov	 BYTE PTR [eax], bl
  006bc	8b 9d f4 fd ff
	ff		 mov	 ebx, DWORD PTR tv1778[ebp]
$LN5@serverWind:

; 8059 : 			for (i = 0; i < MAX_SHOP_ITEM * MAX_SHOP_PAGE - 1; i++) {

  006c2	42		 inc	 edx
  006c3	81 c3 8c 00 00
	00		 add	 ebx, 140		; 0000008cH
  006c9	83 ee 01	 sub	 esi, 1
  006cc	89 95 f8 fd ff
	ff		 mov	 DWORD PTR tv1780[ebp], edx
  006d2	89 9d f4 fd ff
	ff		 mov	 DWORD PTR tv1778[ebp], ebx
  006d8	89 b5 f0 fd ff
	ff		 mov	 DWORD PTR tv1776[ebp], esi
  006de	0f 85 03 ff ff
	ff		 jne	 $LL7@serverWind
  006e4	5b		 pop	 ebx
$LN6@serverWind:

; 8076 : 							break;
; 8077 : 						}
; 8078 : 					}
; 8079 : 				}
; 8080 : 			}
; 8081 : #ifdef _ITEM_PILENUMS
; 8082 : 			}
; 8083 : #endif
; 8084 : 		for (i = 0; i < MAX_SHOP_ITEM * MAX_SHOP_PAGE; i++) {

  006e5	33 c9		 xor	 ecx, ecx
  006e7	b8 9c 00 00 00	 mov	 eax, OFFSET ?userItem@@3PAUITEM_SHOP@@A+156
  006ec	0f 1f 40 00	 npad	 4
$LL16@serverWind:

; 8085 : 			if (userItem[i].name[0] == '\0') break;

  006f0	80 b8 74 ff ff
	ff 00		 cmp	 BYTE PTR [eax-140], 0
  006f7	74 33		 je	 SHORT $LN89@serverWind
  006f9	80 38 00	 cmp	 BYTE PTR [eax], 0
  006fc	74 2d		 je	 SHORT $LN110@serverWind
  006fe	80 b8 8c 00 00
	00 00		 cmp	 BYTE PTR [eax+140], 0
  00705	74 1f		 je	 SHORT $LN111@serverWind
  00707	80 b8 18 01 00
	00 00		 cmp	 BYTE PTR [eax+280], 0
  0070e	74 11		 je	 SHORT $LN112@serverWind

; 8076 : 							break;
; 8077 : 						}
; 8078 : 					}
; 8079 : 				}
; 8080 : 			}
; 8081 : #ifdef _ITEM_PILENUMS
; 8082 : 			}
; 8083 : #endif
; 8084 : 		for (i = 0; i < MAX_SHOP_ITEM * MAX_SHOP_PAGE; i++) {

  00710	05 30 02 00 00	 add	 eax, 560		; 00000230H
  00715	83 c1 04	 add	 ecx, 4
  00718	3d 1c 12 00 00	 cmp	 eax, OFFSET ?userItem@@3PAUITEM_SHOP@@A+4636
  0071d	7c d1		 jl	 SHORT $LL16@serverWind
  0071f	eb 0b		 jmp	 SHORT $LN89@serverWind
$LN112@serverWind:

; 8085 : 			if (userItem[i].name[0] == '\0') break;

  00721	83 c1 03	 add	 ecx, 3
  00724	eb 06		 jmp	 SHORT $LN89@serverWind
$LN111@serverWind:
  00726	83 c1 02	 add	 ecx, 2
  00729	eb 01		 jmp	 SHORT $LN89@serverWind
$LN110@serverWind:
  0072b	41		 inc	 ecx
$LN89@serverWind:

; 8086 : 		}
; 8087 : 		if (i > 0) {

  0072c	85 c9		 test	 ecx, ecx
  0072e	7e 11		 jle	 SHORT $LN71@serverWind

; 8088 : 			shopWondow2MaxPage = (i + 7) / MAX_SHOP_ITEM;

  00730	8d 41 07	 lea	 eax, DWORD PTR [ecx+7]
  00733	99		 cdq
  00734	83 e2 07	 and	 edx, 7
  00737	03 c2		 add	 eax, edx
  00739	c1 f8 03	 sar	 eax, 3
  0073c	0f b7 c0	 movzx	 eax, ax

; 8089 : 		}

  0073f	eb 05		 jmp	 SHORT $LN72@serverWind
$LN71@serverWind:

; 8090 : 		else {
; 8091 : 			shopWondow2MaxPage = 1;

  00741	b8 01 00 00 00	 mov	 eax, 1
$LN72@serverWind:

; 8092 : 		}
; 8093 : 		if (shopWondow2Page >= shopWondow2MaxPage)

  00746	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  0074c	66 39 05 00 00
	00 00		 cmp	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  00753	7c 6c		 jl	 SHORT $LN77@serverWind

; 8094 : 			shopWondow2Page = shopWondow2MaxPage - 1;

  00755	48		 dec	 eax
  00756	5f		 pop	 edi
  00757	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page

; 8111 : 	}
; 8112 : }
; 8113 : }

  0075d	5e		 pop	 esi
  0075e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00761	33 cd		 xor	 ecx, ebp
  00763	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00768	8b e5		 mov	 esp, ebp
  0076a	5d		 pop	 ebp
  0076b	c3		 ret	 0
$LN63@serverWind:

; 8095 : 
; 8096 : 		}
; 8097 : 	else if (ret == 2) {

  0076c	83 f8 02	 cmp	 eax, 2
  0076f	74 45		 je	 SHORT $LN126@serverWind
$LN74@serverWind:

; 8098 : 		shopWindowProcNo = 100;
; 8099 : 	}
; 8100 : 	}
; 8101 : 
; 8102 : if (shopWindowProcNo == 120) {

  00771	66 83 3d 00 00
	00 00 78	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 120 ; shopWindowProcNo, 00000078H
  00779	75 27		 jne	 SHORT $LN75@serverWind
$LN125@serverWind:

; 8103 : 	initShopWindow8();

  0077b	e8 00 00 00 00	 call	 ?initShopWindow8@@YAXXZ	; initShopWindow8

; 8104 : 	shopWindowProcNo++;
; 8105 : 	play_se(202, 320, 240);

  00780	68 f0 00 00 00	 push	 240			; 000000f0H
  00785	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  0078a	68 40 01 00 00	 push	 320			; 00000140H
  0078f	68 ca 00 00 00	 push	 202			; 000000caH
  00794	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  0079a	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0079f	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN75@serverWind:

; 8106 : }
; 8107 : if (shopWindowProcNo == 121) {

  007a2	66 83 3d 00 00
	00 00 79	 cmp	 WORD PTR ?shopWindowProcNo@@3FA, 121 ; shopWindowProcNo, 00000079H
  007aa	75 15		 jne	 SHORT $LN77@serverWind

; 8108 : 	ret = shopWindow8();

  007ac	e8 00 00 00 00	 call	 ?shopWindow8@@YAHXZ	; shopWindow8

; 8109 : 	if (ret == 1) {

  007b1	83 f8 01	 cmp	 eax, 1
  007b4	75 0b		 jne	 SHORT $LN77@serverWind
$LN126@serverWind:

; 8110 : 		shopWindowProcNo = 100;

  007b6	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
$LN132@serverWind:

; 8111 : 	}
; 8112 : }
; 8113 : }

  007bb	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
$LN77@serverWind:
  007c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  007c4	5f		 pop	 edi
  007c5	33 cd		 xor	 ecx, ebp
  007c7	5e		 pop	 esi
  007c8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  007cd	8b e5		 mov	 esp, ebp
  007cf	5d		 pop	 ebp
  007d0	c3		 ret	 0
?serverWindowType5@@YAXXZ ENDP				; serverWindowType5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType4@@YAXXZ
_TEXT	SEGMENT
_id$1$ = -548						; size = 4
tv1890 = -548						; size = 4
tv1901 = -544						; size = 4
tv1897 = -544						; size = 4
_btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType4@@YAXXZ PROC				; serverWindowType4, COMDAT

; 6783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 6784 : 	static int winX, winY;
; 6785 : 	static int winW, winH;
; 6786 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 6787 : 	static int btnLoc[6][2];
; 6788 : 	static int btnCnt;
; 6789 : 	char* btnTitle[] =
; 6790 : 	{
; 6791 : 		" ï¼¯ï¼« ",
; 6792 : 		"CANCEL",
; 6793 : 		"í  ì¸",
; 6794 : 		"ì·¨  ì",
; 6795 : 		"ì´ì  íì´ì§",
; 6796 : 		"ë¤ì íì´ì§"
; 6797 : 	};
; 6798 : 	int id, id2;
; 6799 : 	int i, j;
; 6800 : 	int mask;
; 6801 : 	int btn;
; 6802 : 	int x1, y1, x2, y2;
; 6803 : 	int len;
; 6804 : 
; 6805 : 	if (ptActMenuWin == NULL)

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00024	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002e	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  00038	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  00042	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@
  0004c	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@
  00056	85 f6		 test	 esi, esi
  00058	0f 85 2b 01 00
	00		 jne	 $LN129@serverWind

; 6806 : 	{
; 6807 : 		winW = 7;
; 6808 : 		winH = 5;
; 6809 : 		winX = (640 - winW * 64) / 2;
; 6810 : 		winY = (456 - winH * 48) / 2;
; 6811 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	56		 push	 esi
  00061	6a 05		 push	 5
  00063	6a 07		 push	 7
  00065	6a 6c		 push	 108			; 0000006cH
  00067	6a 60		 push	 96			; 00000060H
  00069	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType4@@YAXXZ@4HA, 7
  00073	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType4@@YAXXZ@4HA, 5
  0007d	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA, 96 ; 00000060H
  00087	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA, 108 ; 0000006cH
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 6812 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 6813 : 		winX = ptActMenuWin->x;
; 6814 : 		winY = ptActMenuWin->y;
; 6815 : #endif
; 6816 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 6817 : 		{
; 6818 : 			btnId[i] = -2;

  00096	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0009d	83 c4 18	 add	 esp, 24			; 00000018H

; 6819 : 		}
; 6820 : 
; 6821 : 		mask = 1;
; 6822 : 		btnCnt = 0;
; 6823 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ae	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA, ecx
  000b7	33 c9		 xor	 ecx, ecx
  000b9	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA, eax
  000be	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  000c1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA, xmm0
  000c8	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000d2	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000dc	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType4@@YAXXZ@4HA, esi
$LL7@serverWind:

; 6824 : 		{
; 6825 : 			if (buttonTypeWN & mask)

  000e2	85 d0		 test	 edx, eax
  000e4	74 06		 je	 SHORT $LN5@serverWind

; 6826 : 			{
; 6827 : 				btnCnt++;

  000e6	46		 inc	 esi
  000e7	83 fe 04	 cmp	 esi, 4

; 6828 : 				if (btnCnt == 4)

  000ea	74 08		 je	 SHORT $LN86@serverWind
$LN5@serverWind:

; 6819 : 		}
; 6820 : 
; 6821 : 		mask = 1;
; 6822 : 		btnCnt = 0;
; 6823 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000ec	41		 inc	 ecx
  000ed	03 c0		 add	 eax, eax
  000ef	83 f9 06	 cmp	 ecx, 6
  000f2	7c ee		 jl	 SHORT $LL7@serverWind
$LN86@serverWind:

; 6826 : 			{
; 6827 : 				btnCnt++;

  000f4	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType4@@YAXXZ@4HA, esi

; 6829 : 					break;
; 6830 : 			}
; 6831 : 		}
; 6832 : 		// ????????î¸î?î³????
; 6833 : 		if (btnCnt > 0)

  000fa	85 f6		 test	 esi, esi
  000fc	7e 30		 jle	 SHORT $LN9@serverWind

; 6834 : 		{
; 6835 : 			int w;
; 6836 : 			w = winW * 64 / (btnCnt + 1);

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType4@@YAXXZ@4HA
  00103	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00106	c1 e0 06	 shl	 eax, 6
  00109	99		 cdq
  0010a	f7 f9		 idiv	 ecx
  0010c	33 c9		 xor	 ecx, ecx

; 6837 : 			for (i = 0; i < btnCnt; i++)

  0010e	85 f6		 test	 esi, esi
  00110	7e 1c		 jle	 SHORT $LN9@serverWind

; 6834 : 		{
; 6835 : 			int w;
; 6836 : 			w = winW * 64 / (btnCnt + 1);

  00112	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 6838 : 			{
; 6839 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00115	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA[ecx*8], edx
  0011c	03 d0		 add	 edx, eax

; 6840 : 				btnLoc[i][1] = 196;

  0011e	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00129	41		 inc	 ecx
  0012a	3b ce		 cmp	 ecx, esi
  0012c	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 6841 : 			}
; 6842 : 		}
; 6843 : 
; 6844 : 		strcpy(msgWN[0], "ï¼ï¼ï¼    í« ëë íí°ìì ì ííì­ìì¤    ï¼ï¼ï¼");

  0012e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@
  00135	66 a1 30 00 00
	00		 mov	 ax, WORD PTR ??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@+48

; 6845 : 
; 6846 : 		play_se(202, 320, 240);	// ????????

  0013b	68 f0 00 00 00	 push	 240			; 000000f0H
  00140	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA, xmm0
  00147	68 40 01 00 00	 push	 320			; 00000140H
  0014c	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@+16
  00153	68 ca 00 00 00	 push	 202			; 000000caH
  00158	66 a3 30 00 00
	00		 mov	 WORD PTR ?msgWN@@3PAY0BAA@DA+48, ax
  0015e	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+16, xmm0
  00165	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OEBMFFGI@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?F?j?5?$LG?G?$LE?B?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C@+32
  0016c	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+32, xmm0
  00173	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 6847 : 	}
; 6848 : 
; 6849 : 
; 6850 : 	if (ptActMenuWin != NULL) {

  00178	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00181	85 f6		 test	 esi, esi
  00183	0f 84 de 04 00
	00		 je	 $LN24@serverWind
$LN129@serverWind:
  00189	53		 push	 ebx
  0018a	57		 push	 edi

; 6851 : 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  0018b	6a 06		 push	 6
  0018d	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA
  00192	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00197	83 c4 08	 add	 esp, 8
  0019a	8b d8		 mov	 ebx, eax

; 6852 : 
; 6853 : 		id2 = -1;

  0019c	83 cf ff	 or	 edi, -1
  0019f	89 9d dc fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 6854 : 		if (ptActMenuWin->hp >= 1) {

  001a5	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  001a9	7c 77		 jl	 SHORT $LN12@serverWind

; 6855 : 			for (i = 1; i <= MAX_PET; i++) {

  001ab	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  001b0	8d 5f 02	 lea	 ebx, DWORD PTR [edi+2]
  001b3	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv1901[ebp], ecx
  001b9	be 76 00 00 00	 mov	 esi, OFFSET ?pet@@3PAUPET@@A+118
  001be	66 90		 npad	 2
$LL13@serverWind:

; 6856 : 				if (pet[i - 1].useFlag != 0) {

  001c0	66 83 3e 00	 cmp	 WORD PTR [esi], 0
  001c4	74 3e		 je	 SHORT $LN11@serverWind

; 6857 : 					x1 = winX + 41;
; 6858 : 					y1 = winY + 18 + (i + 1) * 21;

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  001cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  001d1	83 c0 27	 add	 eax, 39			; 00000027H
  001d4	03 c8		 add	 ecx, eax
  001d6	83 c2 29	 add	 edx, 41			; 00000029H

; 6859 : 					x2 = x1 + 149;
; 6860 : 					y2 = y1 + 20;
; 6861 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  001d9	6a 6b		 push	 107			; 0000006bH
  001db	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  001de	50		 push	 eax
  001df	8d 82 95 00 00
	00		 lea	 eax, DWORD PTR [edx+149]
  001e5	50		 push	 eax
  001e6	51		 push	 ecx
  001e7	52		 push	 edx
  001e8	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001ed	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv1901[ebp]
  001f3	83 c4 14	 add	 esp, 20			; 00000014H
  001f6	85 c0		 test	 eax, eax
  001f8	74 0a		 je	 SHORT $LN11@serverWind

; 6862 : 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  001fa	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00201	0f 45 fb	 cmovne	 edi, ebx
$LN11@serverWind:

; 6855 : 			for (i = 1; i <= MAX_PET; i++) {

  00204	81 c6 78 0b 00
	00		 add	 esi, 2936		; 00000b78H
  0020a	83 c1 15	 add	 ecx, 21			; 00000015H
  0020d	43		 inc	 ebx
  0020e	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv1901[ebp], ecx
  00214	81 fe 56 2e 00
	00		 cmp	 esi, OFFSET ?pet@@3PAUPET@@A+11862
  0021a	7e a4		 jle	 SHORT $LL13@serverWind
  0021c	8b 9d dc fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 6863 : 							id2 = i;
; 6864 : 						}
; 6865 : 					}
; 6866 : 				}
; 6867 : 			}
; 6868 : 		}
; 6869 : 
; 6870 : 		for (i = 1; i <= MAX_PARTY; i++) {

  00222	be 01 00 00 00	 mov	 esi, 1
  00227	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL16@serverWind:

; 6871 : 			if (partyModeFlag == 0 && i == 1) {

  00230	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  00238	75 1c		 jne	 SHORT $LN35@serverWind
  0023a	83 fe 01	 cmp	 esi, 1
  0023d	75 17		 jne	 SHORT $LN35@serverWind

; 6872 : 				strcpy(msgWN[1], pc.name);

  0023f	33 c9		 xor	 ecx, ecx
$LL66@serverWind:
  00241	8a 81 70 00 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[ecx+112]
  00247	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0024a	88 81 ff 00 00
	00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA[ecx+255], al
  00250	84 c0		 test	 al, al
  00252	75 ed		 jne	 SHORT $LL66@serverWind

; 6873 : 			}

  00254	eb 33		 jmp	 SHORT $LN38@serverWind
$LN35@serverWind:

; 6874 : 			else
; 6875 : 				if (party[i - 1].useFlag != 0) {

  00256	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00259	c1 e0 04	 shl	 eax, 4
  0025c	66 83 b8 d0 ff
	ff ff 00	 cmp	 WORD PTR ?party@@3PAUPARTY@@A[eax-48], 0
  00264	74 1c		 je	 SHORT $LN37@serverWind

; 6876 : 					strcpy(msgWN[1], party[i - 1].name);

  00266	8d 88 e8 ff ff
	ff		 lea	 ecx, DWORD PTR ?party@@3PAUPARTY@@A[eax-24]
  0026c	ba 00 01 00 00	 mov	 edx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  00271	2b d1		 sub	 edx, ecx
$LL67@serverWind:
  00273	8a 01		 mov	 al, BYTE PTR [ecx]
  00275	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00278	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  0027c	84 c0		 test	 al, al
  0027e	75 f3		 jne	 SHORT $LL67@serverWind

; 6877 : 				}

  00280	eb 07		 jmp	 SHORT $LN38@serverWind
$LN37@serverWind:

; 6878 : 				else {
; 6879 : 					msgWN[1][0] = '\0';

  00282	c6 05 00 01 00
	00 00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA+256, 0
$LN38@serverWind:

; 6880 : 				}
; 6881 : 			len = strlen(msgWN[1]);

  00289	b9 00 01 00 00	 mov	 ecx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  0028e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL131@serverWind:
  00291	8a 01		 mov	 al, BYTE PTR [ecx]
  00293	41		 inc	 ecx
  00294	84 c0		 test	 al, al
  00296	75 f9		 jne	 SHORT $LL131@serverWind
  00298	2b ca		 sub	 ecx, edx

; 6882 : 			if (len > 0) {

  0029a	85 c9		 test	 ecx, ecx
  0029c	7e 40		 jle	 SHORT $LN14@serverWind

; 6883 : 				x1 = winX + 257;
; 6884 : 				y1 = winY + 18 + (i + 1) * 21;

  0029e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  002a3	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  002a9	83 c0 27	 add	 eax, 39			; 00000027H
  002ac	6b ce 15	 imul	 ecx, esi, 21
  002af	81 c2 01 01 00
	00		 add	 edx, 257		; 00000101H

; 6885 : 				x2 = x1 + 149;
; 6886 : 				y2 = y1 + 20;
; 6887 : 				if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  002b5	6a 6b		 push	 107			; 0000006bH
  002b7	03 c8		 add	 ecx, eax
  002b9	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  002bc	50		 push	 eax
  002bd	8d 82 95 00 00
	00		 lea	 eax, DWORD PTR [edx+149]
  002c3	50		 push	 eax
  002c4	51		 push	 ecx
  002c5	52		 push	 edx
  002c6	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  002cb	83 c4 14	 add	 esp, 20			; 00000014H
  002ce	85 c0		 test	 eax, eax
  002d0	74 0c		 je	 SHORT $LN14@serverWind

; 6888 : 					if (mouse.onceState & MOUSE_LEFT_CRICK) {

  002d2	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  002d9	74 03		 je	 SHORT $LN14@serverWind

; 6889 : 						id2 = i + 5;

  002db	8d 7e 05	 lea	 edi, DWORD PTR [esi+5]
$LN14@serverWind:

; 6863 : 							id2 = i;
; 6864 : 						}
; 6865 : 					}
; 6866 : 				}
; 6867 : 			}
; 6868 : 		}
; 6869 : 
; 6870 : 		for (i = 1; i <= MAX_PARTY; i++) {

  002de	46		 inc	 esi
  002df	83 fe 05	 cmp	 esi, 5
  002e2	0f 8e 48 ff ff
	ff		 jle	 $LL16@serverWind

; 6890 : 					}
; 6891 : 				}
; 6892 : 			}
; 6893 : 		}
; 6894 : 
; 6895 : 		if (CheckMenuFlag()
; 6896 : 			|| joy_trg[0] & JOY_ESC
; 6897 : 			|| actBtn == 1
; 6898 : 			|| menuBtn == 1
; 6899 : 			|| disconnectServerFlag == TRUE
; 6900 : 			|| wnCloseFlag == 1)

  002e8	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  002ed	85 c0		 test	 eax, eax
  002ef	75 3e		 jne	 SHORT $LN43@serverWind
  002f1	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  002fb	75 32		 jne	 SHORT $LN43@serverWind
  002fd	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00305	74 28		 je	 SHORT $LN43@serverWind
  00307	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0030f	74 1e		 je	 SHORT $LN43@serverWind
  00311	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00318	74 15		 je	 SHORT $LN43@serverWind
  0031a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00322	74 0b		 je	 SHORT $LN43@serverWind

; 6905 : 		}
; 6906 : 
; 6907 : 		if (0 <= id && id < 6
; 6908 : 			|| 0 <= id2 && id2 < 10)

  00324	85 db		 test	 ebx, ebx
  00326	78 1e		 js	 SHORT $LN46@serverWind
  00328	83 fb 06	 cmp	 ebx, 6
  0032b	7c 22		 jl	 SHORT $LN45@serverWind
  0032d	eb 17		 jmp	 SHORT $LN46@serverWind
$LN43@serverWind:

; 6901 : 		{
; 6902 : 			id = 100;
; 6903 : 			windowTypeWN = -1;
; 6904 : 			wnCloseFlag = 0;

  0032f	33 c0		 xor	 eax, eax
  00331	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0033b	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  00340	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN46@serverWind:

; 6905 : 		}
; 6906 : 
; 6907 : 		if (0 <= id && id < 6
; 6908 : 			|| 0 <= id2 && id2 < 10)

  00346	83 ff 09	 cmp	 edi, 9
  00349	0f 87 8d 00 00
	00		 ja	 $LN44@serverWind
$LN45@serverWind:

; 6909 : 		{
; 6910 : 			char data[256];
; 6911 : 			char msg[256];
; 6912 : 			if (0 <= id && id < 6)
; 6913 : 			{
; 6914 : 				btn = 1;
; 6915 : 				btn <<= id;
; 6916 : 			}
; 6917 : 			else
; 6918 : 			{
; 6919 : 				btn = 0;
; 6920 : 			}
; 6921 : 			if (id2 < 0)
; 6922 : 				id2 = 0;
; 6923 : 			sprintf(data, "%d", id2);

  0034f	33 c0		 xor	 eax, eax
  00351	8b cb		 mov	 ecx, ebx
  00353	be 01 00 00 00	 mov	 esi, 1
  00358	d3 e6		 shl	 esi, cl
  0035a	83 fb 05	 cmp	 ebx, 5
  0035d	0f 47 f0	 cmova	 esi, eax
  00360	85 ff		 test	 edi, edi
  00362	0f 49 c7	 cmovns	 eax, edi
  00365	8b f8		 mov	 edi, eax
  00367	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0036d	57		 push	 edi
  0036e	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 _sprintf

; 6924 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  00379	68 ff 00 00 00	 push	 255			; 000000ffH
  0037e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00384	50		 push	 eax
  00385	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  0038b	50		 push	 eax
  0038c	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00391	83 c4 18	 add	 esp, 24			; 00000018H

; 6925 : 			if (bNewServer)

  00394	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  0039a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  003a1	50		 push	 eax
  003a2	56		 push	 esi
  003a3	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  003a9	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  003af	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  003b5	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  003bb	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  003c1	74 07		 je	 SHORT $LN50@serverWind

; 6926 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  003c3	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  003c8	eb 05		 jmp	 SHORT $LN139@serverWind
$LN50@serverWind:

; 6927 : 			else
; 6928 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  003ca	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN139@serverWind:

; 6929 : 
; 6930 : 			windowTypeWN = -1;

  003cf	83 c4 1c	 add	 esp, 28			; 0000001cH
  003d2	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN44@serverWind:

; 6931 : 		}
; 6932 : 
; 6933 : 		if (id >= 0 || id2 >= 0)

  003dc	85 db		 test	 ebx, ebx
  003de	0f 89 69 02 00
	00		 jns	 $LN53@serverWind
  003e4	85 ff		 test	 edi, edi
  003e6	0f 89 61 02 00
	00		 jns	 $LN53@serverWind

; 6937 : 			return;
; 6938 : 		}
; 6939 : 
; 6940 : 
; 6941 : 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  003ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  003f1	85 c0		 test	 eax, eax
  003f3	0f 84 6c 02 00
	00		 je	 $LN137@serverWind
  003f9	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  003fd	0f 8c 62 02 00
	00		 jl	 $LN137@serverWind

; 6942 : 		{
; 6943 : 			StockFontBuffer(winX + 62, winY + 21,

  00403	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  00408	6a 00		 push	 0
  0040a	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0040f	6a 00		 push	 0
  00411	83 c0 15	 add	 eax, 21			; 00000015H
  00414	6a 01		 push	 1
  00416	50		 push	 eax
  00417	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  0041c	83 c0 3e	 add	 eax, 62			; 0000003eH
  0041f	50		 push	 eax
  00420	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00425	bb 3f 00 00 00	 mov	 ebx, 63			; 0000003fH
  0042a	be ac 00 00 00	 mov	 esi, OFFSET ?msgWN@@3PAY0BAA@DA+172
  0042f	b8 05 00 00 00	 mov	 eax, 5
  00434	89 9d e0 fd ff
	ff		 mov	 DWORD PTR tv1897[ebp], ebx
  0043a	83 c4 18	 add	 esp, 24			; 00000018H
  0043d	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv1890[ebp], eax
  00443	bf 65 00 00 00	 mov	 edi, OFFSET ?pet@@3PAUPET@@A+101
  00448	81 ee 00 00 00
	00		 sub	 esi, OFFSET ?pet@@3PAUPET@@A
  0044e	66 90		 npad	 2
$LL19@serverWind:

; 6948 : 			{
; 6949 : 				len = strlen(pet[i - 1].name);
; 6950 : 				if (pet[i - 1].useFlag != 0)

  00450	66 83 7f 11 00	 cmp	 WORD PTR [edi+17], 0
  00455	0f 84 89 00 00
	00		 je	 $LN17@serverWind

; 6951 : 				{
; 6952 : 					len = strlen(pet[i - 1].freeName);

  0045b	8b cf		 mov	 ecx, edi
  0045d	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL132@serverWind:
  00460	8a 01		 mov	 al, BYTE PTR [ecx]
  00462	41		 inc	 ecx
  00463	84 c0		 test	 al, al
  00465	75 f9		 jne	 SHORT $LL132@serverWind
  00467	2b ca		 sub	 ecx, edx

; 6953 : 					if (len > 0)

  00469	85 c9		 test	 ecx, ecx
  0046b	7e 12		 jle	 SHORT $LN56@serverWind

; 6954 : 					{
; 6955 : 						strcpy(msgWN[1], pet[i - 1].freeName);

  0046d	8b d7		 mov	 edx, edi
  0046f	90		 npad	 1
$LL68@serverWind:
  00470	8a 02		 mov	 al, BYTE PTR [edx]
  00472	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00475	88 44 16 ee	 mov	 BYTE PTR [esi+edx-18], al
  00479	84 c0		 test	 al, al
  0047b	75 f3		 jne	 SHORT $LL68@serverWind

; 6956 : 					}

  0047d	eb 24		 jmp	 SHORT $LN57@serverWind
$LN56@serverWind:

; 6957 : 					else
; 6958 : 					{
; 6959 : 						len = strlen(pet[i - 1].name);

  0047f	8d 57 ef	 lea	 edx, DWORD PTR [edi-17]
  00482	8b ca		 mov	 ecx, edx
  00484	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
$LL133@serverWind:
  00487	8a 01		 mov	 al, BYTE PTR [ecx]
  00489	41		 inc	 ecx
  0048a	84 c0		 test	 al, al
  0048c	75 f9		 jne	 SHORT $LL133@serverWind
  0048e	2b cb		 sub	 ecx, ebx
$LL69@serverWind:

; 6960 : 						strcpy(msgWN[1], pet[i - 1].name);

  00490	8a 02		 mov	 al, BYTE PTR [edx]
  00492	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00495	88 44 16 ff	 mov	 BYTE PTR [esi+edx-1], al
  00499	84 c0		 test	 al, al
  0049b	75 f3		 jne	 SHORT $LL69@serverWind
  0049d	8b 9d e0 fd ff
	ff		 mov	 ebx, DWORD PTR tv1897[ebp]
$LN57@serverWind:

; 6961 : 					}
; 6962 : 					StockFontBuffer(winX + 44 + (144 - len * 9) / 2, winY + 21 + (i + 1) * 21,

  004a3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  004a8	6a 00		 push	 0
  004aa	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  004af	6a 00		 push	 0
  004b1	03 c3		 add	 eax, ebx
  004b3	6a 01		 push	 1
  004b5	50		 push	 eax
  004b6	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  004bb	2b c1		 sub	 eax, ecx
  004bd	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  004c0	8b c8		 mov	 ecx, eax
  004c2	85 c9		 test	 ecx, ecx
  004c4	79 03		 jns	 SHORT $LN141@serverWind
  004c6	83 c1 01	 add	 ecx, 1
$LN141@serverWind:
  004c9	d1 f9		 sar	 ecx, 1
  004cb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  004d0	83 c0 2c	 add	 eax, 44			; 0000002cH
  004d3	03 c1		 add	 eax, ecx
  004d5	50		 push	 eax
  004d6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004db	8b 85 dc fd ff
	ff		 mov	 eax, DWORD PTR tv1890[ebp]
  004e1	83 c4 18	 add	 esp, 24			; 00000018H
$LN17@serverWind:

; 6944 : 				FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[0], 0);
; 6945 : 
; 6946 : 			// ???î¸î
; 6947 : 			for (i = 1; i <= MAX_PET; i++)

  004e4	83 c3 15	 add	 ebx, 21			; 00000015H
  004e7	81 ee 78 0b 00
	00		 sub	 esi, 2936		; 00000b78H
  004ed	81 c7 78 0b 00
	00		 add	 edi, 2936		; 00000b78H
  004f3	89 9d e0 fd ff
	ff		 mov	 DWORD PTR tv1897[ebp], ebx
  004f9	83 e8 01	 sub	 eax, 1
  004fc	89 85 dc fd ff
	ff		 mov	 DWORD PTR tv1890[ebp], eax
  00502	0f 85 48 ff ff
	ff		 jne	 $LL19@serverWind

; 6963 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6964 : 				}
; 6965 : 			}
; 6966 : 
; 6967 : 			// ????î¸î
; 6968 : 			for (i = 1; i <= MAX_PARTY; i++)

  00508	be 01 00 00 00	 mov	 esi, 1
  0050d	0f 1f 00	 npad	 3
$LL22@serverWind:

; 6969 : 			{
; 6970 : 				if (partyModeFlag == 0 && i == 1)

  00510	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  00518	75 1c		 jne	 SHORT $LN58@serverWind
  0051a	83 fe 01	 cmp	 esi, 1
  0051d	75 17		 jne	 SHORT $LN58@serverWind

; 6971 : 				{
; 6972 : 					strcpy(msgWN[1], pc.name);

  0051f	33 c9		 xor	 ecx, ecx
$LL70@serverWind:
  00521	8a 81 70 00 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[ecx+112]
  00527	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0052a	88 81 ff 00 00
	00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA[ecx+255], al
  00530	84 c0		 test	 al, al
  00532	75 ed		 jne	 SHORT $LL70@serverWind

; 6973 : 				}

  00534	eb 33		 jmp	 SHORT $LN61@serverWind
$LN58@serverWind:

; 6974 : 				else
; 6975 : 					if (party[i - 1].useFlag != 0)

  00536	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00539	c1 e0 04	 shl	 eax, 4
  0053c	66 83 b8 d0 ff
	ff ff 00	 cmp	 WORD PTR ?party@@3PAUPARTY@@A[eax-48], 0
  00544	74 1c		 je	 SHORT $LN60@serverWind

; 6976 : 					{
; 6977 : 						strcpy(msgWN[1], party[i - 1].name);

  00546	8d 88 e8 ff ff
	ff		 lea	 ecx, DWORD PTR ?party@@3PAUPARTY@@A[eax-24]
  0054c	ba 00 01 00 00	 mov	 edx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  00551	2b d1		 sub	 edx, ecx
$LL71@serverWind:
  00553	8a 01		 mov	 al, BYTE PTR [ecx]
  00555	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00558	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  0055c	84 c0		 test	 al, al
  0055e	75 f3		 jne	 SHORT $LL71@serverWind

; 6978 : 					}

  00560	eb 07		 jmp	 SHORT $LN61@serverWind
$LN60@serverWind:

; 6979 : 					else
; 6980 : 					{
; 6981 : 						msgWN[1][0] = '\0';

  00562	c6 05 00 01 00
	00 00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA+256, 0
$LN61@serverWind:

; 6982 : 					}
; 6983 : 				len = strlen(msgWN[1]);

  00569	b9 00 01 00 00	 mov	 ecx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  0056e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL134@serverWind:
  00571	8a 01		 mov	 al, BYTE PTR [ecx]
  00573	41		 inc	 ecx
  00574	84 c0		 test	 al, al
  00576	75 f9		 jne	 SHORT $LL134@serverWind
  00578	2b ca		 sub	 ecx, edx

; 6984 : 				if (len > 0)

  0057a	85 c9		 test	 ecx, ecx
  0057c	7e 42		 jle	 SHORT $LN20@serverWind

; 6985 : 				{
; 6986 : 					StockFontBuffer(winX + 260 + (144 - len * 9) / 2, winY + 21 + (i + 1) * 21,

  0057e	6a 00		 push	 0
  00580	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  00583	6b c0 15	 imul	 eax, eax, 21
  00586	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0058b	6a 00		 push	 0
  0058d	6a 01		 push	 1
  0058f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  00595	50		 push	 eax
  00596	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0059b	2b c1		 sub	 eax, ecx
  0059d	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  005a0	8b c8		 mov	 ecx, eax
  005a2	85 c9		 test	 ecx, ecx
  005a4	79 03		 jns	 SHORT $LN142@serverWind
  005a6	83 c1 01	 add	 ecx, 1
$LN142@serverWind:
  005a9	d1 f9		 sar	 ecx, 1
  005ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  005b0	05 04 01 00 00	 add	 eax, 260		; 00000104H
  005b5	03 c1		 add	 eax, ecx
  005b7	50		 push	 eax
  005b8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005bd	83 c4 18	 add	 esp, 24			; 00000018H
$LN20@serverWind:

; 6963 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6964 : 				}
; 6965 : 			}
; 6966 : 
; 6967 : 			// ????î¸î
; 6968 : 			for (i = 1; i <= MAX_PARTY; i++)

  005c0	46		 inc	 esi
  005c1	83 fe 05	 cmp	 esi, 5
  005c4	0f 8e 46 ff ff
	ff		 jle	 $LL22@serverWind

; 6987 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6988 : 				}
; 6989 : 			}
; 6990 : 			j = 0;

  005ca	33 ff		 xor	 edi, edi

; 6991 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  005cc	bb 01 00 00 00	 mov	 ebx, 1
  005d1	33 f6		 xor	 esi, esi
  005d3	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL25@serverWind:

; 6992 : 			{
; 6993 : 				btnId[i] = -2;

  005e0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 6994 : 				if (buttonTypeWN & mask)

  005ea	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  005f0	74 40		 je	 SHORT $LN23@serverWind

; 6995 : 				{
; 6996 : 					if (j < btnCnt)

  005f2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType4@@YAXXZ@4HA
  005f8	7d 38		 jge	 SHORT $LN23@serverWind

; 6997 : 					{
; 6998 : 						btnId[i] =

  005fa	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA[edi*8+4]
  00601	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType4@@YAXXZ@4HA
  00607	6a 02		 push	 2
  00609	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00610	6a 04		 push	 4
  00612	6a 01		 push	 1
  00614	50		 push	 eax
  00615	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType4@@YAXXZ@4PAY01HA[edi*8]
  0061c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType4@@YAXXZ@4HA
  00622	50		 push	 eax
  00623	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00628	83 c4 18	 add	 esp, 24			; 00000018H
  0062b	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType4@@YAXXZ@4PAHA[esi], eax

; 6999 : 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 7000 : 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 7001 : 						j++;

  00631	47		 inc	 edi
$LN23@serverWind:

; 6991 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00632	83 c6 04	 add	 esi, 4
  00635	03 db		 add	 ebx, ebx
  00637	83 fe 18	 cmp	 esi, 24			; 00000018H
  0063a	7c a4		 jl	 SHORT $LL25@serverWind
  0063c	5f		 pop	 edi
  0063d	5b		 pop	 ebx
  0063e	5e		 pop	 esi

; 7002 : 					}
; 7003 : 				}
; 7004 : 			}
; 7005 : 		}
; 7006 : 	}
; 7007 : }

  0063f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00642	33 cd		 xor	 ecx, ebp
  00644	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00649	8b e5		 mov	 esp, ebp
  0064b	5d		 pop	 ebp
  0064c	c3		 ret	 0
$LN53@serverWind:

; 6934 : 		{
; 6935 : 			DeathAction(ptActMenuWin);

  0064d	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00653	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00658	83 c4 04	 add	 esp, 4

; 6936 : 			ptActMenuWin = NULL;

  0065b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN137@serverWind:
  00665	5f		 pop	 edi
  00666	5b		 pop	 ebx
$LN24@serverWind:

; 7002 : 					}
; 7003 : 				}
; 7004 : 			}
; 7005 : 		}
; 7006 : 	}
; 7007 : }

  00667	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0066a	33 cd		 xor	 ecx, ebp
  0066c	5e		 pop	 esi
  0066d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00672	8b e5		 mov	 esp, ebp
  00674	5d		 pop	 ebp
  00675	c3		 ret	 0
?serverWindowType4@@YAXXZ ENDP				; serverWindowType4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType3@@YAXXZ
_TEXT	SEGMENT
_btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType3@@YAXXZ PROC				; serverWindowType3, COMDAT

; 6578 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 6579 : 	static int winX, winY;
; 6580 : 	static int winW, winH;
; 6581 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 6582 : 	static int btnLoc[6][2];
; 6583 : 	static int btnCnt;
; 6584 : 	char* btnTitle[] =
; 6585 : 	{
; 6586 : 		" ï¼¯ï¼« ",
; 6587 : 		"CANCEL",
; 6588 : 		"í  ì¸",
; 6589 : 		"ì·¨  ì",
; 6590 : 		"ì´ì  íì´ì§",
; 6591 : 		"ë¤ì íì´ì§"
; 6592 : 	};
; 6593 : 	int id, id2;
; 6594 : 	int i, j;
; 6595 : 	int mask;
; 6596 : 	int btn;
; 6597 : 	int x1, y1, x2, y2;
; 6598 : 	int len;
; 6599 : 
; 6600 : 	if (ptActMenuWin == NULL)

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001a	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00024	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002e	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  00038	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  00042	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@
  0004c	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@
  00056	85 f6		 test	 esi, esi
  00058	0f 85 2b 01 00
	00		 jne	 $LN101@serverWind

; 6601 : 	{
; 6602 : 		winW = 7;
; 6603 : 		winH = 5;
; 6604 : 		winX = (640 - winW * 64) / 2;
; 6605 : 		winY = (456 - winH * 48) / 2;
; 6606 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005e	6a 01		 push	 1
  00060	56		 push	 esi
  00061	6a 05		 push	 5
  00063	6a 07		 push	 7
  00065	6a 6c		 push	 108			; 0000006cH
  00067	6a 60		 push	 96			; 00000060H
  00069	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType3@@YAXXZ@4HA, 7
  00073	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType3@@YAXXZ@4HA, 5
  0007d	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA, 96 ; 00000060H
  00087	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA, 108 ; 0000006cH
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 6607 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 6608 : 		winX = ptActMenuWin->x;
; 6609 : 		winY = ptActMenuWin->y;
; 6610 : #endif
; 6611 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 6612 : 		{
; 6613 : 			btnId[i] = -2;

  00096	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0009d	83 c4 18	 add	 esp, 24			; 00000018H

; 6614 : 		}
; 6615 : 
; 6616 : 		mask = 1;
; 6617 : 		btnCnt = 0;
; 6618 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ab	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000ae	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA, ecx
  000b7	33 c9		 xor	 ecx, ecx
  000b9	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA, eax
  000be	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  000c1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA, xmm0
  000c8	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000d2	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000dc	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType3@@YAXXZ@4HA, esi
$LL7@serverWind:

; 6619 : 		{
; 6620 : 			if (buttonTypeWN & mask)

  000e2	85 d0		 test	 edx, eax
  000e4	74 06		 je	 SHORT $LN5@serverWind

; 6621 : 			{
; 6622 : 				btnCnt++;

  000e6	46		 inc	 esi
  000e7	83 fe 04	 cmp	 esi, 4

; 6623 : 				if (btnCnt == 4)

  000ea	74 08		 je	 SHORT $LN68@serverWind
$LN5@serverWind:

; 6614 : 		}
; 6615 : 
; 6616 : 		mask = 1;
; 6617 : 		btnCnt = 0;
; 6618 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000ec	41		 inc	 ecx
  000ed	03 c0		 add	 eax, eax
  000ef	83 f9 06	 cmp	 ecx, 6
  000f2	7c ee		 jl	 SHORT $LL7@serverWind
$LN68@serverWind:

; 6621 : 			{
; 6622 : 				btnCnt++;

  000f4	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType3@@YAXXZ@4HA, esi

; 6624 : 					break;
; 6625 : 			}
; 6626 : 		}
; 6627 : 		// ????????î¸î?î³????
; 6628 : 		if (btnCnt > 0)

  000fa	85 f6		 test	 esi, esi
  000fc	7e 30		 jle	 SHORT $LN9@serverWind

; 6629 : 		{
; 6630 : 			int w;
; 6631 : 			w = winW * 64 / (btnCnt + 1);

  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType3@@YAXXZ@4HA
  00103	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00106	c1 e0 06	 shl	 eax, 6
  00109	99		 cdq
  0010a	f7 f9		 idiv	 ecx
  0010c	33 c9		 xor	 ecx, ecx

; 6632 : 			for (i = 0; i < btnCnt; i++)

  0010e	85 f6		 test	 esi, esi
  00110	7e 1c		 jle	 SHORT $LN9@serverWind

; 6629 : 		{
; 6630 : 			int w;
; 6631 : 			w = winW * 64 / (btnCnt + 1);

  00112	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
$LL10@serverWind:

; 6633 : 			{
; 6634 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00115	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA[ecx*8], edx
  0011c	03 d0		 add	 edx, eax

; 6635 : 				btnLoc[i][1] = 196;

  0011e	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00129	41		 inc	 ecx
  0012a	3b ce		 cmp	 ecx, esi
  0012c	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 6636 : 			}
; 6637 : 		}
; 6638 : 
; 6639 : 		strcpy(msgWN[0], "ï¼ï¼ï¼         íí°ìì ì ííì­ìì¤       ï¼ï¼ï¼");

  0012e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@
  00135	66 a1 30 00 00
	00		 mov	 ax, WORD PTR ??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@+48

; 6640 : 
; 6641 : 		play_se(202, 320, 240);	// ????????

  0013b	68 f0 00 00 00	 push	 240			; 000000f0H
  00140	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA, xmm0
  00147	68 40 01 00 00	 push	 320			; 00000140H
  0014c	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@+16
  00153	68 ca 00 00 00	 push	 202			; 000000caH
  00158	66 a3 30 00 00
	00		 mov	 WORD PTR ?msgWN@@3PAY0BAA@DA+48, ax
  0015e	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+16, xmm0
  00165	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DC@OGKMBKIN@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?D?F?$LM?$LP?x?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN@+32
  0016c	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+32, xmm0
  00173	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 6642 : 	}
; 6643 : 
; 6644 : 
; 6645 : 	if (ptActMenuWin != NULL)

  00178	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00181	85 f6		 test	 esi, esi
  00183	0f 84 7e 03 00
	00		 je	 $LN18@serverWind
$LN101@serverWind:
  00189	53		 push	 ebx
  0018a	57		 push	 edi

; 6646 : 	{
; 6647 : 		// ????î±î¶îî
; 6648 : 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  0018b	6a 06		 push	 6
  0018d	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA
  00192	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00197	83 c4 08	 add	 esp, 8

; 6649 : 
; 6650 : 		id2 = -1;

  0019a	83 cf ff	 or	 edi, -1

; 6651 : 		if (ptActMenuWin->hp >= 1)	// ?????î???î±î¶?î???

  0019d	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  001a1	8b d8		 mov	 ebx, eax
  001a3	0f 8c bc 00 00
	00		 jl	 $LN12@serverWind

; 6652 : 		{
; 6653 : 			for (i = 1; i <= MAX_PARTY; i++)

  001a9	8d 77 02	 lea	 esi, DWORD PTR [edi+2]
  001ac	0f 1f 40 00	 npad	 4
$LL13@serverWind:

; 6654 : 			{
; 6655 : 				// î°??î¡???????î???
; 6656 : 				if (partyModeFlag == 0 && i == 1)

  001b0	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  001b8	75 1c		 jne	 SHORT $LN26@serverWind
  001ba	83 fe 01	 cmp	 esi, 1
  001bd	75 17		 jne	 SHORT $LN26@serverWind

; 6657 : 				{
; 6658 : 					strcpy(msgWN[1], pc.name);

  001bf	33 c9		 xor	 ecx, ecx
$LL54@serverWind:
  001c1	8a 81 70 00 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[ecx+112]
  001c7	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001ca	88 81 ff 00 00
	00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA[ecx+255], al
  001d0	84 c0		 test	 al, al
  001d2	75 ed		 jne	 SHORT $LL54@serverWind

; 6659 : 				}

  001d4	eb 33		 jmp	 SHORT $LN29@serverWind
$LN26@serverWind:

; 6660 : 				else
; 6661 : 					if (party[i - 1].useFlag != 0)

  001d6	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  001d9	c1 e0 04	 shl	 eax, 4
  001dc	66 83 b8 d0 ff
	ff ff 00	 cmp	 WORD PTR ?party@@3PAUPARTY@@A[eax-48], 0
  001e4	74 1c		 je	 SHORT $LN28@serverWind

; 6662 : 					{
; 6663 : 						strcpy(msgWN[1], party[i - 1].name);

  001e6	8d 88 e8 ff ff
	ff		 lea	 ecx, DWORD PTR ?party@@3PAUPARTY@@A[eax-24]
  001ec	ba 00 01 00 00	 mov	 edx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  001f1	2b d1		 sub	 edx, ecx
$LL55@serverWind:
  001f3	8a 01		 mov	 al, BYTE PTR [ecx]
  001f5	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001f8	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  001fc	84 c0		 test	 al, al
  001fe	75 f3		 jne	 SHORT $LL55@serverWind

; 6664 : 					}

  00200	eb 07		 jmp	 SHORT $LN29@serverWind
$LN28@serverWind:

; 6665 : 					else
; 6666 : 					{
; 6667 : 						msgWN[1][0] = '\0';

  00202	c6 05 00 01 00
	00 00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA+256, 0
$LN29@serverWind:

; 6668 : 					}
; 6669 : 				len = strlen(msgWN[1]);

  00209	b9 00 01 00 00	 mov	 ecx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  0020e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL103@serverWind:
  00211	8a 01		 mov	 al, BYTE PTR [ecx]
  00213	41		 inc	 ecx
  00214	84 c0		 test	 al, al
  00216	75 f9		 jne	 SHORT $LL103@serverWind
  00218	2b ca		 sub	 ecx, edx

; 6670 : 				if (len > 0)

  0021a	85 c9		 test	 ecx, ecx
  0021c	7e 3d		 jle	 SHORT $LN11@serverWind

; 6671 : 				{
; 6672 : 					x1 = winX + 41;
; 6673 : 					y1 = winY + 18 + (i + 1) * 21;

  0021e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA
  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA
  00229	83 c0 27	 add	 eax, 39			; 00000027H
  0022c	6b ce 15	 imul	 ecx, esi, 21
  0022f	83 c2 29	 add	 edx, 41			; 00000029H

; 6674 : 					x2 = x1 + 366;
; 6675 : 					y2 = y1 + 20;
; 6676 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  00232	6a 6b		 push	 107			; 0000006bH
  00234	03 c8		 add	 ecx, eax
  00236	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  00239	50		 push	 eax
  0023a	8d 82 6e 01 00
	00		 lea	 eax, DWORD PTR [edx+366]
  00240	50		 push	 eax
  00241	51		 push	 ecx
  00242	52		 push	 edx
  00243	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00248	83 c4 14	 add	 esp, 20			; 00000014H
  0024b	85 c0		 test	 eax, eax
  0024d	74 0c		 je	 SHORT $LN11@serverWind

; 6677 : 					{
; 6678 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  0024f	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00256	74 03		 je	 SHORT $LN11@serverWind

; 6679 : 						{
; 6680 : 							id2 = i + 5;

  00258	8d 7e 05	 lea	 edi, DWORD PTR [esi+5]
$LN11@serverWind:

; 6652 : 		{
; 6653 : 			for (i = 1; i <= MAX_PARTY; i++)

  0025b	46		 inc	 esi
  0025c	83 fe 05	 cmp	 esi, 5
  0025f	0f 8e 4b ff ff
	ff		 jle	 $LL13@serverWind
$LN12@serverWind:

; 6681 : 						}
; 6682 : 					}
; 6683 : 				}
; 6684 : 			}
; 6685 : 		}
; 6686 : 
; 6687 : 		// î??????î?????????????î¼??
; 6688 : 		if (CheckMenuFlag()
; 6689 : 			|| joy_trg[0] & JOY_ESC
; 6690 : 			|| actBtn == 1
; 6691 : 			|| menuBtn == 1
; 6692 : 			|| disconnectServerFlag == TRUE
; 6693 : 			|| wnCloseFlag == 1)

  00265	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0026a	85 c0		 test	 eax, eax
  0026c	75 3e		 jne	 SHORT $LN34@serverWind
  0026e	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00278	75 32		 jne	 SHORT $LN34@serverWind
  0027a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00282	74 28		 je	 SHORT $LN34@serverWind
  00284	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0028c	74 1e		 je	 SHORT $LN34@serverWind
  0028e	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00295	74 15		 je	 SHORT $LN34@serverWind
  00297	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0029f	74 0b		 je	 SHORT $LN34@serverWind

; 6698 : 		}
; 6699 : 
; 6700 : 		if (0 <= id && id < 6
; 6701 : 			|| 0 <= id2 && id2 < 8)

  002a1	85 db		 test	 ebx, ebx
  002a3	78 1e		 js	 SHORT $LN37@serverWind
  002a5	83 fb 06	 cmp	 ebx, 6
  002a8	7c 22		 jl	 SHORT $LN36@serverWind
  002aa	eb 17		 jmp	 SHORT $LN37@serverWind
$LN34@serverWind:

; 6694 : 		{
; 6695 : 			id = 100;
; 6696 : 			windowTypeWN = -1;
; 6697 : 			wnCloseFlag = 0;

  002ac	33 c0		 xor	 eax, eax
  002ae	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  002b8	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  002bd	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN37@serverWind:

; 6698 : 		}
; 6699 : 
; 6700 : 		if (0 <= id && id < 6
; 6701 : 			|| 0 <= id2 && id2 < 8)

  002c3	83 ff 07	 cmp	 edi, 7
  002c6	0f 87 8d 00 00
	00		 ja	 $LN35@serverWind
$LN36@serverWind:

; 6702 : 		{
; 6703 : 			char data[256];
; 6704 : 			char msg[256];
; 6705 : 			if (0 <= id && id < 6)
; 6706 : 			{
; 6707 : 				btn = 1;
; 6708 : 				btn <<= id;
; 6709 : 			}
; 6710 : 			else
; 6711 : 			{
; 6712 : 				btn = 0;
; 6713 : 			}
; 6714 : 			if (id2 < 0)
; 6715 : 				id2 = 0;
; 6716 : 			sprintf(data, "%d", id2);

  002cc	33 c0		 xor	 eax, eax
  002ce	8b cb		 mov	 ecx, ebx
  002d0	be 01 00 00 00	 mov	 esi, 1
  002d5	d3 e6		 shl	 esi, cl
  002d7	83 fb 05	 cmp	 ebx, 5
  002da	0f 47 f0	 cmova	 esi, eax
  002dd	85 ff		 test	 edi, edi
  002df	0f 49 c7	 cmovns	 eax, edi
  002e2	8b f8		 mov	 edi, eax
  002e4	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002ea	57		 push	 edi
  002eb	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002f0	50		 push	 eax
  002f1	e8 00 00 00 00	 call	 _sprintf

; 6717 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002f6	68 ff 00 00 00	 push	 255			; 000000ffH
  002fb	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00301	50		 push	 eax
  00302	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  00308	50		 push	 eax
  00309	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0030e	83 c4 18	 add	 esp, 24			; 00000018H

; 6718 : 			if (bNewServer)

  00311	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00317	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0031e	50		 push	 eax
  0031f	56		 push	 esi
  00320	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00326	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0032c	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00332	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00338	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0033e	74 07		 je	 SHORT $LN41@serverWind

; 6719 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00340	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00345	eb 05		 jmp	 SHORT $LN108@serverWind
$LN41@serverWind:

; 6720 : 			else
; 6721 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00347	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN108@serverWind:

; 6722 : 
; 6723 : 			windowTypeWN = -1;

  0034c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0034f	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN35@serverWind:

; 6724 : 		}
; 6725 : 
; 6726 : 		if (id >= 0 || id2 >= 0)

  00359	85 db		 test	 ebx, ebx
  0035b	0f 89 8c 01 00
	00		 jns	 $LN44@serverWind
  00361	85 ff		 test	 edi, edi
  00363	0f 89 84 01 00
	00		 jns	 $LN44@serverWind

; 6730 : 			return;
; 6731 : 		}
; 6732 : 
; 6733 : 
; 6734 : 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00369	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0036e	85 c0		 test	 eax, eax
  00370	0f 84 8f 01 00
	00		 je	 $LN106@serverWind
  00376	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0037a	0f 8c 85 01 00
	00		 jl	 $LN106@serverWind

; 6735 : 		{
; 6736 : 			StockFontBuffer(winX + 62, winY + 21,

  00380	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA
  00385	6a 00		 push	 0
  00387	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0038c	6a 00		 push	 0
  0038e	83 c0 15	 add	 eax, 21			; 00000015H
  00391	6a 01		 push	 1
  00393	50		 push	 eax
  00394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA
  00399	83 c0 3e	 add	 eax, 62			; 0000003eH
  0039c	50		 push	 eax
  0039d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003a2	83 c4 18	 add	 esp, 24			; 00000018H
  003a5	be 01 00 00 00	 mov	 esi, 1
  003aa	66 0f 1f 44 00
	00		 npad	 6
$LL16@serverWind:

; 6739 : 			{
; 6740 : 				if (partyModeFlag == 0 && i == 1)

  003b0	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?partyModeFlag@@3FA, 0 ; partyModeFlag
  003b8	75 1c		 jne	 SHORT $LN46@serverWind
  003ba	83 fe 01	 cmp	 esi, 1
  003bd	75 17		 jne	 SHORT $LN46@serverWind

; 6741 : 				{
; 6742 : 					strcpy(msgWN[1], pc.name);

  003bf	33 c9		 xor	 ecx, ecx
$LL56@serverWind:
  003c1	8a 81 70 00 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[ecx+112]
  003c7	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  003ca	88 81 ff 00 00
	00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA[ecx+255], al
  003d0	84 c0		 test	 al, al
  003d2	75 ed		 jne	 SHORT $LL56@serverWind

; 6743 : 				}

  003d4	eb 33		 jmp	 SHORT $LN49@serverWind
$LN46@serverWind:

; 6744 : 				else
; 6745 : 					if (party[i - 1].useFlag != 0)

  003d6	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  003d9	c1 e0 04	 shl	 eax, 4
  003dc	66 83 b8 d0 ff
	ff ff 00	 cmp	 WORD PTR ?party@@3PAUPARTY@@A[eax-48], 0
  003e4	74 1c		 je	 SHORT $LN48@serverWind

; 6746 : 					{
; 6747 : 						strcpy(msgWN[1], party[i - 1].name);

  003e6	8d 88 e8 ff ff
	ff		 lea	 ecx, DWORD PTR ?party@@3PAUPARTY@@A[eax-24]
  003ec	ba 00 01 00 00	 mov	 edx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  003f1	2b d1		 sub	 edx, ecx
$LL57@serverWind:
  003f3	8a 01		 mov	 al, BYTE PTR [ecx]
  003f5	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  003f8	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  003fc	84 c0		 test	 al, al
  003fe	75 f3		 jne	 SHORT $LL57@serverWind

; 6748 : 					}

  00400	eb 07		 jmp	 SHORT $LN49@serverWind
$LN48@serverWind:

; 6749 : 					else
; 6750 : 					{
; 6751 : 						msgWN[1][0] = '\0';

  00402	c6 05 00 01 00
	00 00		 mov	 BYTE PTR ?msgWN@@3PAY0BAA@DA+256, 0
$LN49@serverWind:

; 6752 : 					}
; 6753 : 				len = strlen(msgWN[1]);

  00409	b9 00 01 00 00	 mov	 ecx, OFFSET ?msgWN@@3PAY0BAA@DA+256
  0040e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL104@serverWind:
  00411	8a 01		 mov	 al, BYTE PTR [ecx]
  00413	41		 inc	 ecx
  00414	84 c0		 test	 al, al
  00416	75 f9		 jne	 SHORT $LL104@serverWind
  00418	2b ca		 sub	 ecx, edx

; 6754 : 				if (len > 0)

  0041a	85 c9		 test	 ecx, ecx
  0041c	7e 42		 jle	 SHORT $LN14@serverWind

; 6755 : 				{
; 6756 : 					StockFontBuffer(winX + 152 + (144 - len * 9) / 2, winY + 21 + (i + 1) * 21,

  0041e	6a 00		 push	 0
  00420	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  00423	6b c0 15	 imul	 eax, eax, 21
  00426	68 00 01 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA+256
  0042b	6a 00		 push	 0
  0042d	6a 01		 push	 1
  0042f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA
  00435	50		 push	 eax
  00436	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  0043b	2b c1		 sub	 eax, ecx
  0043d	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  00440	8b c8		 mov	 ecx, eax
  00442	85 c9		 test	 ecx, ecx
  00444	79 03		 jns	 SHORT $LN110@serverWind
  00446	83 c1 01	 add	 ecx, 1
$LN110@serverWind:
  00449	d1 f9		 sar	 ecx, 1
  0044b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA
  00450	05 98 00 00 00	 add	 eax, 152		; 00000098H
  00455	03 c1		 add	 eax, ecx
  00457	50		 push	 eax
  00458	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0045d	83 c4 18	 add	 esp, 24			; 00000018H
$LN14@serverWind:

; 6737 : 				FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[0], 0);
; 6738 : 			for (i = 1; i <= MAX_PARTY; i++)

  00460	46		 inc	 esi
  00461	83 fe 05	 cmp	 esi, 5
  00464	0f 8e 46 ff ff
	ff		 jle	 $LL16@serverWind

; 6757 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6758 : 				}
; 6759 : 			}
; 6760 : 			j = 0;

  0046a	33 ff		 xor	 edi, edi

; 6761 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  0046c	bb 01 00 00 00	 mov	 ebx, 1
  00471	33 f6		 xor	 esi, esi
  00473	0f 1f 40 00 66
	0f 1f 84 00 00
	00 00 00	 npad	 13
$LL19@serverWind:

; 6762 : 			{
; 6763 : 				btnId[i] = -2;

  00480	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 6764 : 				if (buttonTypeWN & mask)

  0048a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00490	74 40		 je	 SHORT $LN17@serverWind

; 6765 : 				{
; 6766 : 					if (j < btnCnt)

  00492	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType3@@YAXXZ@4HA
  00498	7d 38		 jge	 SHORT $LN17@serverWind

; 6767 : 					{
; 6768 : 						btnId[i] =

  0049a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA[edi*8+4]
  004a1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType3@@YAXXZ@4HA
  004a7	6a 02		 push	 2
  004a9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  004b0	6a 04		 push	 4
  004b2	6a 01		 push	 1
  004b4	50		 push	 eax
  004b5	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType3@@YAXXZ@4PAY01HA[edi*8]
  004bc	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType3@@YAXXZ@4HA
  004c2	50		 push	 eax
  004c3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004c8	83 c4 18	 add	 esp, 24			; 00000018H
  004cb	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType3@@YAXXZ@4PAHA[esi], eax

; 6769 : 							StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 6770 : 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 6771 : 						j++;

  004d1	47		 inc	 edi
$LN17@serverWind:

; 6761 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  004d2	83 c6 04	 add	 esi, 4
  004d5	03 db		 add	 ebx, ebx
  004d7	83 fe 18	 cmp	 esi, 24			; 00000018H
  004da	7c a4		 jl	 SHORT $LL19@serverWind
  004dc	5f		 pop	 edi
  004dd	5b		 pop	 ebx
  004de	5e		 pop	 esi

; 6772 : 					}
; 6773 : 				}
; 6774 : 			}
; 6775 : 		}
; 6776 : 	}
; 6777 : }

  004df	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004e2	33 cd		 xor	 ecx, ebp
  004e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004e9	8b e5		 mov	 esp, ebp
  004eb	5d		 pop	 ebp
  004ec	c3		 ret	 0
$LN44@serverWind:

; 6727 : 		{
; 6728 : 			DeathAction(ptActMenuWin);

  004ed	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004f3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004f8	83 c4 04	 add	 esp, 4

; 6729 : 			ptActMenuWin = NULL;

  004fb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN106@serverWind:
  00505	5f		 pop	 edi
  00506	5b		 pop	 ebx
$LN18@serverWind:

; 6772 : 					}
; 6773 : 				}
; 6774 : 			}
; 6775 : 		}
; 6776 : 	}
; 6777 : }

  00507	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0050a	33 cd		 xor	 ecx, ebp
  0050c	5e		 pop	 esi
  0050d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00512	8b e5		 mov	 esp, ebp
  00514	5d		 pop	 ebp
  00515	c3		 ret	 0
?serverWindowType3@@YAXXZ ENDP				; serverWindowType3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType2@@YAXXZ
_TEXT	SEGMENT
_id$1$ = -548						; size = 4
tv1197 = -548						; size = 4
tv1345 = -544						; size = 4
_btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_mybuff$2 = -260					; size = 256
_msg$3 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType2@@YAXXZ PROC				; serverWindowType2, COMDAT

; 6409 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi

; 6410 : 	static int winX, winY;
; 6411 : 	static int winW, winH;
; 6412 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 6413 : 	static int btnLoc[6][2];
; 6414 : 	static int btnCnt;
; 6415 : 	char* btnTitle[] =
; 6416 : 	{
; 6417 : 		" ï¼¯ï¼« ",
; 6418 : 		"CANCEL",
; 6419 : 		"í  ì¸",
; 6420 : 		"ì·¨  ì",
; 6421 : 		"ì´ì  íì´ì§",
; 6422 : 		"ë¤ì íì´ì§"
; 6423 : 	};
; 6424 : 	int id, id2;
; 6425 : 	int i, j;
; 6426 : 	int mask;
; 6427 : 	int btn;
; 6428 : 	int x1, y1, x2, y2;
; 6429 : 	int len;
; 6430 : 
; 6431 : 	if (ptActMenuWin == NULL)

  00015	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0001b	c7 85 e4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_06OEDOOLP@?5?$KD?O?$KD?K?5@
  00025	c7 85 e8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_06JHILMIHF@CANCEL@
  0002f	c7 85 ec fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_06BLFCGNEJ@?H?$KO?5?5?$MA?N@
  00039	c7 85 f0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_06PNFMGOAF@?C?k?5?5?$LM?R@
  00043	c7 85 f4 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+16], OFFSET ??_C@_0M@KLCLPDEC@?$MA?L?$MA?$PM?5?F?d?$MA?L?A?v@
  0004d	c7 85 f8 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _btnTitle$[ebp+20], OFFSET ??_C@_0M@JKCPDGAE@?$LE?Y?$MA?$LN?5?F?d?$MA?L?A?v@
  00057	85 ff		 test	 edi, edi
  00059	0f 85 29 01 00
	00		 jne	 $LN79@serverWind

; 6432 : 	{
; 6433 : 		winW = 7;
; 6434 : 		winH = 5;
; 6435 : 		winX = (640 - winW * 64) / 2;
; 6436 : 		winY = (456 - winH * 48) / 2;
; 6437 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  0005f	6a 01		 push	 1
  00061	57		 push	 edi
  00062	6a 05		 push	 5
  00064	6a 07		 push	 7
  00066	6a 6c		 push	 108			; 0000006cH
  00068	6a 60		 push	 96			; 00000060H
  0006a	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType2@@YAXXZ@4HA, 7
  00074	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType2@@YAXXZ@4HA, 5
  0007e	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA, 96 ; 00000060H
  00088	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA, 108 ; 0000006cH
  00092	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 6438 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 6439 : 		winX = ptActMenuWin->x;
; 6440 : 		winY = ptActMenuWin->y;
; 6441 : #endif
; 6442 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 6443 : 			btnId[i] = -2;

  00097	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 6444 : 		}
; 6445 : 
; 6446 : 		mask = 1;
; 6447 : 		btnCnt = 0;

  0009e	33 f6		 xor	 esi, esi

; 6448 : 		for (i = 0; i < 6; i++, mask <<= 1) {

  000a0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000a6	83 c4 18	 add	 esp, 24			; 00000018H
  000a9	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  000ae	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b1	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000b4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA, ecx
  000ba	33 c9		 xor	 ecx, ecx
  000bc	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA, eax
  000c1	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000c4	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA, xmm0
  000cb	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000d5	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000df	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType2@@YAXXZ@4HA, esi
$LL7@serverWind:

; 6449 : 			if (buttonTypeWN & mask) {

  000e5	85 d0		 test	 edx, eax
  000e7	74 06		 je	 SHORT $LN5@serverWind

; 6450 : 				btnCnt++;

  000e9	46		 inc	 esi
  000ea	83 fe 04	 cmp	 esi, 4

; 6451 : 				if (btnCnt == 4)

  000ed	74 08		 je	 SHORT $LN54@serverWind
$LN5@serverWind:

; 6448 : 		for (i = 0; i < 6; i++, mask <<= 1) {

  000ef	41		 inc	 ecx
  000f0	03 c0		 add	 eax, eax
  000f2	83 f9 06	 cmp	 ecx, 6
  000f5	7c ee		 jl	 SHORT $LL7@serverWind
$LN54@serverWind:

; 6450 : 				btnCnt++;

  000f7	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType2@@YAXXZ@4HA, esi

; 6452 : 					break;
; 6453 : 			}
; 6454 : 		}
; 6455 : 		if (btnCnt > 0) {

  000fd	85 f6		 test	 esi, esi
  000ff	7e 38		 jle	 SHORT $LN9@serverWind

; 6456 : 			int w;
; 6457 : 			w = winW * 64 / (btnCnt + 1);

  00101	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType2@@YAXXZ@4HA
  00106	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00109	c1 e0 06	 shl	 eax, 6
  0010c	99		 cdq
  0010d	f7 f9		 idiv	 ecx
  0010f	33 c9		 xor	 ecx, ecx

; 6458 : 			for (i = 0; i < btnCnt; i++)

  00111	85 f6		 test	 esi, esi
  00113	7e 24		 jle	 SHORT $LN9@serverWind

; 6456 : 			int w;
; 6457 : 			w = winW * 64 / (btnCnt + 1);

  00115	8d 50 e5	 lea	 edx, DWORD PTR [eax-27]
  00118	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL10@serverWind:

; 6459 : 			{
; 6460 : 				btnLoc[i][0] = w * (i + 1) - 27;

  00120	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA[ecx*8], edx
  00127	03 d0		 add	 edx, eax

; 6461 : 				btnLoc[i][1] = 196;

  00129	c7 04 cd 04 00
	00 00 c4 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA[ecx*8+4], 196 ; 000000c4H
  00134	41		 inc	 ecx
  00135	3b ce		 cmp	 ecx, esi
  00137	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 6462 : 			}
; 6463 : 		}
; 6464 : 		strcpy(msgWN[0], "ï¼ï¼ï¼         í«ì ì ííì­ìì¤         ï¼ï¼ï¼");

  00139	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@

; 6465 : 		play_se(202, 320, 240);	// ????????

  00140	68 f0 00 00 00	 push	 240			; 000000f0H
  00145	68 40 01 00 00	 push	 320			; 00000140H
  0014a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA, xmm0
  00151	68 ca 00 00 00	 push	 202			; 000000caH
  00156	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@+16
  0015d	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+16, xmm0
  00164	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DA@BAFAIKKM@?$KD?$LN?$KD?$LN?$KD?$LN?5?5?5?5?5?5?5?5?5?F?j?$MA?$LL?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP@+32
  0016b	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msgWN@@3PAY0BAA@DA+32, xmm0
  00172	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 6466 : 	}
; 6467 : 
; 6468 : 
; 6469 : 	if (ptActMenuWin != NULL) {

  00177	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0017d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00180	85 ff		 test	 edi, edi
  00182	0f 84 5e 03 00
	00		 je	 $LN18@serverWind
$LN79@serverWind:
  00188	53		 push	 ebx

; 6470 : 		id = selFontId(btnId, sizeof(btnId) / sizeof(int));

  00189	6a 06		 push	 6
  0018b	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA
  00190	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00195	83 c4 08	 add	 esp, 8
  00198	8b d8		 mov	 ebx, eax

; 6471 : 		id2 = -1;

  0019a	83 ce ff	 or	 esi, -1
  0019d	89 9d dc fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 6472 : 		if (ptActMenuWin->hp >= 1) {

  001a3	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  001a7	7c 79		 jl	 SHORT $LN12@serverWind

; 6473 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  001a9	b9 15 00 00 00	 mov	 ecx, 21			; 00000015H
  001ae	8d 5e 02	 lea	 ebx, DWORD PTR [esi+2]
  001b1	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv1345[ebp], ecx
  001b7	bf 76 00 00 00	 mov	 edi, OFFSET ?pet@@3PAUPET@@A+118
  001bc	0f 1f 40 00	 npad	 4
$LL13@serverWind:

; 6474 : 				if (pet[i - 1].useFlag != 0) {

  001c0	66 83 3f 00	 cmp	 WORD PTR [edi], 0
  001c4	74 47		 je	 SHORT $LN11@serverWind

; 6475 : 					x1 = winX + 41;
; 6476 : 					y1 = winY + 18 + (j + 1) * 21;

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA
  001cb	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA
  001d1	83 c0 27	 add	 eax, 39			; 00000027H
  001d4	03 c8		 add	 ecx, eax
  001d6	83 c2 29	 add	 edx, 41			; 00000029H

; 6477 : 					x2 = x1 + 366;
; 6478 : 					y2 = y1 + 20;
; 6479 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  001d9	6a 6b		 push	 107			; 0000006bH
  001db	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  001de	50		 push	 eax
  001df	8d 82 6e 01 00
	00		 lea	 eax, DWORD PTR [edx+366]
  001e5	50		 push	 eax
  001e6	51		 push	 ecx
  001e7	52		 push	 edx
  001e8	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001ed	83 c4 14	 add	 esp, 20			; 00000014H
  001f0	85 c0		 test	 eax, eax
  001f2	74 0a		 je	 SHORT $LN28@serverWind

; 6480 : 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  001f4	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001fb	0f 45 f3	 cmovne	 esi, ebx
$LN28@serverWind:

; 6481 : 							id2 = i;
; 6482 : 						}
; 6483 : 					}
; 6484 : 					j++;

  001fe	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR tv1345[ebp]
  00204	83 c1 15	 add	 ecx, 21			; 00000015H
  00207	89 8d e0 fd ff
	ff		 mov	 DWORD PTR tv1345[ebp], ecx
$LN11@serverWind:

; 6473 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  0020d	81 c7 78 0b 00
	00		 add	 edi, 2936		; 00000b78H
  00213	43		 inc	 ebx
  00214	81 ff 56 2e 00
	00		 cmp	 edi, OFFSET ?pet@@3PAUPET@@A+11862
  0021a	7e a4		 jle	 SHORT $LL13@serverWind
  0021c	8b 9d dc fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 6485 : 				}
; 6486 : 			}
; 6487 : 		}
; 6488 : 		if (CheckMenuFlag()
; 6489 : 			|| joy_trg[0] & JOY_ESC
; 6490 : 			|| actBtn == 1
; 6491 : 			|| menuBtn == 1
; 6492 : 			|| disconnectServerFlag == TRUE
; 6493 : 			|| wnCloseFlag == 1) {

  00222	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00227	85 c0		 test	 eax, eax
  00229	75 3e		 jne	 SHORT $LN30@serverWind
  0022b	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00235	75 32		 jne	 SHORT $LN30@serverWind
  00237	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0023f	74 28		 je	 SHORT $LN30@serverWind
  00241	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00249	74 1e		 je	 SHORT $LN30@serverWind
  0024b	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00252	74 15		 je	 SHORT $LN30@serverWind
  00254	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0025c	74 0b		 je	 SHORT $LN30@serverWind

; 6497 : 		}
; 6498 : 
; 6499 : 		if (0 <= id && id < 6
; 6500 : 			|| 0 <= id2 && id2 < 8) {

  0025e	85 db		 test	 ebx, ebx
  00260	78 1e		 js	 SHORT $LN33@serverWind
  00262	83 fb 06	 cmp	 ebx, 6
  00265	7c 22		 jl	 SHORT $LN32@serverWind
  00267	eb 17		 jmp	 SHORT $LN33@serverWind
$LN30@serverWind:

; 6494 : 			id = 100;
; 6495 : 			windowTypeWN = -1;
; 6496 : 			wnCloseFlag = 0;

  00269	33 c0		 xor	 eax, eax
  0026b	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00275	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  0027a	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN33@serverWind:

; 6497 : 		}
; 6498 : 
; 6499 : 		if (0 <= id && id < 6
; 6500 : 			|| 0 <= id2 && id2 < 8) {

  00280	83 fe 07	 cmp	 esi, 7
  00283	0f 87 8d 00 00
	00		 ja	 $LN31@serverWind
$LN32@serverWind:

; 6501 : 			char data[256];
; 6502 : 			char msg[256];
; 6503 : 			if (0 <= id && id < 6) {
; 6504 : 				btn = 1;
; 6505 : 				btn <<= id;
; 6506 : 			}
; 6507 : 			else {
; 6508 : 				btn = 0;
; 6509 : 			}
; 6510 : 			if (id2 < 0)
; 6511 : 				id2 = 0;
; 6512 : 			sprintf(data, "%d", id2);

  00289	33 c0		 xor	 eax, eax
  0028b	8b cb		 mov	 ecx, ebx
  0028d	bf 01 00 00 00	 mov	 edi, 1
  00292	d3 e7		 shl	 edi, cl
  00294	83 fb 05	 cmp	 ebx, 5
  00297	0f 47 f8	 cmova	 edi, eax
  0029a	85 f6		 test	 esi, esi
  0029c	0f 49 c6	 cmovns	 eax, esi
  0029f	8b f0		 mov	 esi, eax
  002a1	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002a7	56		 push	 esi
  002a8	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 _sprintf

; 6513 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002b3	68 ff 00 00 00	 push	 255			; 000000ffH
  002b8	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002be	50		 push	 eax
  002bf	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002c5	50		 push	 eax
  002c6	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002cb	83 c4 18	 add	 esp, 24			; 00000018H

; 6514 : 			if (bNewServer)

  002ce	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$3[ebp]
  002d4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002db	50		 push	 eax
  002dc	57		 push	 edi
  002dd	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  002e9	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  002ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  002f5	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  002fb	74 07		 je	 SHORT $LN37@serverWind

; 6515 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  002fd	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00302	eb 05		 jmp	 SHORT $LN83@serverWind
$LN37@serverWind:

; 6516 : 			else
; 6517 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00304	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN83@serverWind:

; 6518 : 
; 6519 : 			windowTypeWN = -1;

  00309	83 c4 1c	 add	 esp, 28			; 0000001cH
  0030c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN31@serverWind:

; 6520 : 		}
; 6521 : 
; 6522 : 		if (id >= 0 || id2 >= 0) {

  00316	85 db		 test	 ebx, ebx
  00318	0f 89 af 01 00
	00		 jns	 $LN40@serverWind
  0031e	85 f6		 test	 esi, esi
  00320	0f 89 a7 01 00
	00		 jns	 $LN40@serverWind

; 6525 : 			return;
; 6526 : 		}
; 6527 : 
; 6528 : 
; 6529 : 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1) {

  00326	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0032b	85 c0		 test	 eax, eax
  0032d	0f 84 b2 01 00
	00		 je	 $LN82@serverWind
  00333	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00337	0f 8c a8 01 00
	00		 jl	 $LN82@serverWind

; 6530 : 			StockFontBuffer(winX + 54, winY + 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[0], 0);

  0033d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA
  00342	6a 00		 push	 0
  00344	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00349	6a 00		 push	 0
  0034b	83 c0 15	 add	 eax, 21			; 00000015H
  0034e	6a 01		 push	 1
  00350	50		 push	 eax
  00351	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA
  00356	83 c0 36	 add	 eax, 54			; 00000036H
  00359	50		 push	 eax
  0035a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 6531 : #ifdef _NB_WINDOWS_PetList
; 6532 : 			char mybuff[256];
; 6533 : 			sprintf_s(mybuff, "%-16s  %-3s   %-5s  %-5s   %-5s   %s", "íí¸", "Lv", "HP", "ê³µ", "ë°©", "ì");

  0035f	68 00 00 00 00	 push	 OFFSET ??_C@_02BAJPEKCM@?$LM?x@
  00364	68 00 00 00 00	 push	 OFFSET ??_C@_02MCBFLHBI@?$LJ?f@
  00369	68 00 00 00 00	 push	 OFFSET ??_C@_02BJIFLDEI@?$LA?x@
  0036e	68 00 00 00 00	 push	 OFFSET ??_C@_02MEIMKHMB@HP@
  00373	68 00 00 00 00	 push	 OFFSET ??_C@_02FLIMDJ@Lv@
  00378	68 00 00 00 00	 push	 OFFSET ??_C@_04KDDDLIGD@?F?d?F?$KO@
  0037d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  00383	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@FLMNJHFI@?$CF?916s?5?5?$CF?93s?5?5?5?$CF?95s?5?5?$CF?95s?5?5?5?$CF?95s@
  00388	50		 push	 eax
  00389	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 6534 : 			StockFontBuffer(winX + 42, winY + 41, FONT_PRIO_FRONT, 5, mybuff, 0);

  0038e	6a 00		 push	 0
  00390	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  00396	50		 push	 eax
  00397	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA
  0039c	6a 05		 push	 5
  0039e	83 c0 29	 add	 eax, 41			; 00000029H
  003a1	6a 01		 push	 1
  003a3	50		 push	 eax
  003a4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA
  003a9	83 c0 2a	 add	 eax, 42			; 0000002aH
  003ac	50		 push	 eax
  003ad	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003b2	be 65 00 00 00	 mov	 esi, OFFSET ?pet@@3PAUPET@@A+101
  003b7	bb 78 0b 00 00	 mov	 ebx, 2936		; 00000b78H
  003bc	83 c4 50	 add	 esp, 80			; 00000050H
  003bf	bf 3f 00 00 00	 mov	 edi, 63			; 0000003fH
  003c4	2b de		 sub	 ebx, esi
$LL16@serverWind:

; 6537 : 				len = strlen(pet[i - 1].name);
; 6538 : 				if (pet[i - 1].useFlag != 0) {

  003c6	66 83 7e 11 00	 cmp	 WORD PTR [esi+17], 0
  003cb	74 71		 je	 SHORT $LN14@serverWind

; 6539 : 					len = strlen(pet[i - 1].freeName);
; 6540 : #ifdef _NB_WINDOWS_PetList
; 6541 : 					sprintf(mybuff, "%-16s  %-3d   %-5d  %-5d   %-5d   %d", strlen(pet[i - 1].freeName) ? pet[i - 1].freeName : pet[i - 1].name, pet[i - 1].level, pet[i - 1].maxHp, pet[i - 1].atk, pet[i - 1].def, pet[i - 1].quick);

  003cd	8b c6		 mov	 eax, esi
  003cf	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL81@serverWind:
  003d2	8a 08		 mov	 cl, BYTE PTR [eax]
  003d4	40		 inc	 eax
  003d5	84 c9		 test	 cl, cl
  003d7	75 f9		 jne	 SHORT $LL81@serverWind
  003d9	ff 76 c7	 push	 DWORD PTR [esi-57]
  003dc	2b c2		 sub	 eax, edx
  003de	b9 13 0b 00 00	 mov	 ecx, 2835		; 00000b13H
  003e3	ff 76 c3	 push	 DWORD PTR [esi-61]
  003e6	b8 24 0b 00 00	 mov	 eax, 2852		; 00000b24H
  003eb	ff 76 bf	 push	 DWORD PTR [esi-65]
  003ee	0f 44 c8	 cmove	 ecx, eax
  003f1	8b c3		 mov	 eax, ebx
  003f3	ff 76 a7	 push	 DWORD PTR [esi-89]
  003f6	2b c1		 sub	 eax, ecx
  003f8	ff 76 bb	 push	 DWORD PTR [esi-69]
  003fb	8d 80 00 00 00
	00		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[eax]
  00401	03 c6		 add	 eax, esi
  00403	50		 push	 eax
  00404	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  0040a	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@HCGLMHEH@?$CF?916s?5?5?$CF?93d?5?5?5?$CF?95d?5?5?$CF?95d?5?5?5?$CF?95d@
  0040f	50		 push	 eax
  00410	e8 00 00 00 00	 call	 _sprintf

; 6542 : 					StockFontBuffer(winX + 42, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, mybuff, 0);

  00415	6a 00		 push	 0
  00417	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _mybuff$2[ebp]
  0041d	50		 push	 eax
  0041e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA
  00423	6a 00		 push	 0
  00425	03 c7		 add	 eax, edi
  00427	6a 01		 push	 1
  00429	50		 push	 eax
  0042a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA
  0042f	83 c0 2a	 add	 eax, 42			; 0000002aH
  00432	50		 push	 eax
  00433	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00438	83 c4 38	 add	 esp, 56			; 00000038H

; 6543 : #else
; 6544 : 					if (len > 0) {
; 6545 : 						strcpy(msgWN[1], pet[i - 1].freeName);
; 6546 : 					}
; 6547 : 					else {
; 6548 : 						len = strlen(pet[i - 1].name);
; 6549 : 						strcpy(msgWN[1], pet[i - 1].name);
; 6550 : 					}
; 6551 : 					StockFontBuffer(winX + 152 + (144 - len * 9) / 2, winY + 21 + (j + 1) * 21,
; 6552 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6553 : 
; 6554 : 					sprintf(msgWN[1], "LV.%d", pet[i - 1].level);
; 6555 : 					StockFontBuffer(winX + 260, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6556 : 
; 6557 : 					sprintf(msgWN[1], "MaxHP %d", pet[i - 1].maxHp);
; 6558 : 					StockFontBuffer(winX + 314, winY + 21 + (j + 1) * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[1], 0);
; 6559 : #endif
; 6560 : 					j++;

  0043b	83 c7 15	 add	 edi, 21			; 00000015H
$LN14@serverWind:

; 6535 : #endif
; 6536 : 			for (i = 1, j = 1; i <= MAX_PET; i++) {

  0043e	81 c6 78 0b 00
	00		 add	 esi, 2936		; 00000b78H
  00444	81 fe 45 2e 00
	00		 cmp	 esi, OFFSET ?pet@@3PAUPET@@A+11845
  0044a	0f 8e 76 ff ff
	ff		 jle	 $LL16@serverWind

; 6561 : 				}
; 6562 : 			}
; 6563 : 			j = 0;

  00450	33 ff		 xor	 edi, edi

; 6564 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  00452	bb 01 00 00 00	 mov	 ebx, 1
  00457	33 f6		 xor	 esi, esi
  00459	0f 1f 80 00 00
	00 00		 npad	 7
$LL19@serverWind:

; 6565 : 				btnId[i] = -2;

  00460	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 6566 : 				if (buttonTypeWN & mask) {

  0046a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00470	74 40		 je	 SHORT $LN17@serverWind

; 6567 : 					if (j < btnCnt) {

  00472	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType2@@YAXXZ@4HA
  00478	7d 38		 jge	 SHORT $LN17@serverWind

; 6568 : 						btnId[i] = StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1], FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);

  0047a	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA[edi*8+4]
  00481	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType2@@YAXXZ@4HA
  00487	6a 02		 push	 2
  00489	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR _btnTitle$[ebp+esi]
  00490	6a 04		 push	 4
  00492	6a 01		 push	 1
  00494	50		 push	 eax
  00495	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType2@@YAXXZ@4PAY01HA[edi*8]
  0049c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType2@@YAXXZ@4HA
  004a2	50		 push	 eax
  004a3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004a8	83 c4 18	 add	 esp, 24			; 00000018H
  004ab	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType2@@YAXXZ@4PAHA[esi], eax

; 6569 : 						j++;

  004b1	47		 inc	 edi
$LN17@serverWind:

; 6564 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1) {

  004b2	83 c6 04	 add	 esi, 4
  004b5	03 db		 add	 ebx, ebx
  004b7	83 fe 18	 cmp	 esi, 24			; 00000018H
  004ba	7c a4		 jl	 SHORT $LL19@serverWind

; 6570 : 					}
; 6571 : 				}
; 6572 : 			}
; 6573 : 		}
; 6574 : 	}
; 6575 : }

  004bc	5b		 pop	 ebx
  004bd	5f		 pop	 edi
  004be	5e		 pop	 esi
  004bf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004c2	33 cd		 xor	 ecx, ebp
  004c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004c9	8b e5		 mov	 esp, ebp
  004cb	5d		 pop	 ebp
  004cc	c3		 ret	 0
$LN40@serverWind:

; 6523 : 			DeathAction(ptActMenuWin);

  004cd	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004d3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004d8	83 c4 04	 add	 esp, 4

; 6524 : 			ptActMenuWin = NULL;

  004db	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN82@serverWind:
  004e5	5b		 pop	 ebx
$LN18@serverWind:

; 6570 : 					}
; 6571 : 				}
; 6572 : 			}
; 6573 : 		}
; 6574 : 	}
; 6575 : }

  004e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004e9	5f		 pop	 edi
  004ea	33 cd		 xor	 ecx, ebp
  004ec	5e		 pop	 esi
  004ed	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004f2	8b e5		 mov	 esp, ebp
  004f4	5d		 pop	 ebp
  004f5	c3		 ret	 0
?serverWindowType2@@YAXXZ ENDP				; serverWindowType2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType1@@YAXXZ
_TEXT	SEGMENT
tv806 = -552						; size = 4
tv751 = -552						; size = 4
tv817 = -548						; size = 4
tv810 = -544						; size = 4
tv779 = -544						; size = 4
_id$1$ = -544						; size = 4
__btnTitle$ = -540					; size = 24
_data$1 = -516						; size = 256
_msg$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?serverWindowType1@@YAXXZ PROC				; serverWindowType1, COMDAT

; 6206 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 02 00
	00		 sub	 esp, 552		; 00000228H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 6207 : 	static int winX, winY;
; 6208 : 	static int winW, winH;
; 6209 : 	static int btnId[] = { -2, -2, -2, -2, -2, -2 };
; 6210 : 	static int btnLoc[6][2];
; 6211 : 	static int btnCnt;
; 6212 : 	static int msgLine;
; 6213 : 	char* btnTitle[] =
; 6214 : 	{
; 6215 : 		" ï¼¯ï¼« ",
; 6216 : 		"CANCEL",
; 6217 : 		"í  ì¸",
; 6218 : 		"ì·¨  ì",
; 6219 : 		"ì´ì  íì´ì§",
; 6220 : 		"ë¤ì íì´ì§"
; 6221 : 	};
; 6222 : 	int id, id2;
; 6223 : 	int i, j;
; 6224 : 	int mask;
; 6225 : 	int btn;
; 6226 : 	int x1, y1, x2, y2;
; 6227 : 
; 6228 : 	int _btnTitle[] =
; 6229 : 	{
; 6230 : 		CG_OK_BTN,

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000065c2000065ed000065c2000065ed
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 6231 : 		CG_CANCEL_BTN,
; 6232 : 		CG_OK_BTN,
; 6233 : 		CG_CANCEL_BTN,
; 6234 : 		CG_PREV_BTN,
; 6235 : 		CG_NEXT_BTN
; 6236 : 	};
; 6237 : 	if (ptActMenuWin == NULL)

  0001c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00022	c7 85 f4 fd ff
	ff 44 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+16], 26180 ; 00006644H
  0002c	c7 85 f8 fd ff
	ff 46 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+20], 26182 ; 00006646H
  00036	0f 11 85 e4 fd
	ff ff		 movups	 XMMWORD PTR __btnTitle$[ebp], xmm0
  0003d	85 ff		 test	 edi, edi
  0003f	0f 85 05 01 00
	00		 jne	 $LN81@serverWind

; 6238 : 	{
; 6239 : 		winW = 7;
; 6240 : 		winH = 5;
; 6241 : 		winX = (640 - winW * 64) / 2;
; 6242 : 		winY = (456 - winH * 48) / 2;
; 6243 : 		ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);

  00045	6a 01		 push	 1
  00047	57		 push	 edi
  00048	6a 05		 push	 5
  0004a	6a 07		 push	 7
  0004c	6a 6c		 push	 108			; 0000006cH
  0004e	6a 60		 push	 96			; 00000060H
  00050	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?winW@?1??serverWindowType1@@YAXXZ@4HA, 7
  0005a	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?winH@?1??serverWindowType1@@YAXXZ@4HA, 5
  00064	c7 05 00 00 00
	00 60 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType1@@YAXXZ@4HA, 96 ; 00000060H
  0006e	c7 05 00 00 00
	00 6c 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType1@@YAXXZ@4HA, 108 ; 0000006cH
  00078	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 6244 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 6245 : 		winX = ptActMenuWin->x;
; 6246 : 		winY = ptActMenuWin->y;
; 6247 : #endif
; 6248 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++)
; 6249 : 		{
; 6250 : 			btnId[i] = -2;

  0007d	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 6251 : 		}
; 6252 : 
; 6253 : 		mask = 1;
; 6254 : 		btnCnt = 0;

  00084	33 f6		 xor	 esi, esi

; 6255 : 		for (i = 0; i < 6; i++, mask <<= 1)

  00086	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  0008c	83 c4 18	 add	 esp, 24			; 00000018H
  0008f	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, eax ; ptActMenuWin
  00094	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  00097	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0009a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winX@?1??serverWindowType1@@YAXXZ@4HA, ecx
  000a0	33 c9		 xor	 ecx, ecx
  000a2	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType1@@YAXXZ@4HA, eax
  000a7	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000aa	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA, xmm0
  000b1	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  000bb	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  000c5	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType1@@YAXXZ@4HA, esi
  000cb	0f 1f 44 00 00	 npad	 5
$LL7@serverWind:

; 6256 : 		{
; 6257 : 			if (buttonTypeWN & mask)

  000d0	85 d0		 test	 edx, eax
  000d2	74 06		 je	 SHORT $LN5@serverWind

; 6258 : 			{
; 6259 : 				btnCnt++;

  000d4	46		 inc	 esi
  000d5	83 fe 04	 cmp	 esi, 4

; 6260 : 				if (btnCnt == 4)

  000d8	74 08		 je	 SHORT $LN55@serverWind
$LN5@serverWind:

; 6255 : 		for (i = 0; i < 6; i++, mask <<= 1)

  000da	41		 inc	 ecx
  000db	03 c0		 add	 eax, eax
  000dd	83 f9 06	 cmp	 ecx, 6
  000e0	7c ee		 jl	 SHORT $LL7@serverWind
$LN55@serverWind:

; 6258 : 			{
; 6259 : 				btnCnt++;

  000e2	89 35 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType1@@YAXXZ@4HA, esi

; 6261 : 					break;
; 6262 : 			}
; 6263 : 		}
; 6264 : 		// ????????î¸î?î³????
; 6265 : 		if (btnCnt > 0)

  000e8	85 f6		 test	 esi, esi
  000ea	7e 2f		 jle	 SHORT $LN9@serverWind

; 6266 : 		{
; 6267 : 			int w;
; 6268 : 			w = winW * 64 / (btnCnt + 1);

  000ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType1@@YAXXZ@4HA
  000f1	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000f4	c1 e0 06	 shl	 eax, 6
  000f7	99		 cdq
  000f8	f7 f9		 idiv	 ecx
  000fa	33 c9		 xor	 ecx, ecx

; 6269 : 			for (i = 0; i < btnCnt; i++)

  000fc	85 f6		 test	 esi, esi
  000fe	7e 1b		 jle	 SHORT $LN9@serverWind

; 6266 : 		{
; 6267 : 			int w;
; 6268 : 			w = winW * 64 / (btnCnt + 1);

  00100	8b d0		 mov	 edx, eax
$LL10@serverWind:

; 6270 : 			{
; 6271 : 				btnLoc[i][0] = w * (i + 1);

  00102	89 14 cd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA[ecx*8], edx
  00109	03 d0		 add	 edx, eax

; 6272 : 				btnLoc[i][1] = 200;

  0010b	c7 04 cd 04 00
	00 00 c8 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA[ecx*8+4], 200 ; 000000c8H
  00116	41		 inc	 ecx
  00117	3b ce		 cmp	 ecx, esi
  00119	7c e7		 jl	 SHORT $LL10@serverWind
$LN9@serverWind:

; 6273 : 			}
; 6274 : 		}
; 6275 : 
; 6276 : 		msgLine = 10; //msgLine = 8;
; 6277 : 
; 6278 : 		play_se(202, 320, 240);	// ????????

  0011b	68 f0 00 00 00	 push	 240			; 000000f0H
  00120	68 40 01 00 00	 push	 320			; 00000140H
  00125	68 ca 00 00 00	 push	 202			; 000000caH
  0012a	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?msgLine@?1??serverWindowType1@@YAXXZ@4HA, 10 ; 0000000aH
  00134	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 6279 : 	}
; 6280 : 
; 6281 : 
; 6282 : 	if (ptActMenuWin != NULL)

  00139	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0013f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00142	85 ff		 test	 edi, edi
  00144	0f 84 ea 02 00
	00		 je	 $LN18@serverWind
$LN81@serverWind:
  0014a	53		 push	 ebx

; 6283 : 	{
; 6284 : 		// ????î±î¶îî
; 6285 : 		id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  0014b	6a 06		 push	 6
  0014d	68 00 00 00 00	 push	 OFFSET ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA
  00152	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00157	83 c4 08	 add	 esp, 8
  0015a	8b d8		 mov	 ebx, eax

; 6286 : 
; 6287 : 		id2 = -1;

  0015c	83 ce ff	 or	 esi, -1
  0015f	89 9d e0 fd ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 6288 : 		if (ptActMenuWin->hp >= 1)	// ?????î???î±î¶?î???

  00165	83 7f 78 01	 cmp	 DWORD PTR [edi+120], 1
  00169	0f 8c a2 00 00
	00		 jl	 $LN12@serverWind

; 6289 : 		{
; 6290 : 			for (i = selStartLine; i < msgLine; i++)

  0016f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  00175	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType1@@YAXXZ@4HA
  0017b	0f 8d 90 00 00
	00		 jge	 $LN12@serverWind
  00181	6b d7 15	 imul	 edx, edi, 21
  00184	8b df		 mov	 ebx, edi
  00186	c1 e3 08	 shl	 ebx, 8
  00189	81 c3 00 00 00
	00		 add	 ebx, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0018f	89 95 dc fd ff
	ff		 mov	 DWORD PTR tv817[ebp], edx
$LL13@serverWind:

; 6291 : 			{
; 6292 : 				// î°??î¡???????î???
; 6293 : 				if (strlen(msgWN[i]) > 0)

  00195	8b cb		 mov	 ecx, ebx
  00197	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0019a	89 85 d8 fd ff
	ff		 mov	 DWORD PTR tv806[ebp], eax
$LL83@serverWind:
  001a0	8a 01		 mov	 al, BYTE PTR [ecx]
  001a2	41		 inc	 ecx
  001a3	84 c0		 test	 al, al
  001a5	75 f9		 jne	 SHORT $LL83@serverWind
  001a7	2b 8d d8 fd ff
	ff		 sub	 ecx, DWORD PTR tv806[ebp]
  001ad	74 40		 je	 SHORT $LN11@serverWind

; 6294 : 				{
; 6295 : 					x1 = winX + 41;
; 6296 : 					y1 = winY + 18 + i * 21;

  001af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType1@@YAXXZ@4HA

; 6297 : 					x2 = x1 + 366;
; 6298 : 					y2 = y1 + 20;
; 6299 : #ifdef å¯¹è¯æ¡2æå­æé¿
; 6300 : 					//hitboxæ¡ä¹æé¿ç¹
; 6301 : 					x1 = winX + 11;

  001b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?winX@?1??serverWindowType1@@YAXXZ@4HA
  001ba	83 c0 12	 add	 eax, 18			; 00000012H
  001bd	03 d0		 add	 edx, eax
  001bf	83 c1 0b	 add	 ecx, 11			; 0000000bH

; 6302 : 					x2 = x1 + 366 + 60;
; 6303 : #endif 
; 6304 : 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2))

  001c2	6a 6b		 push	 107			; 0000006bH
  001c4	8d 42 14	 lea	 eax, DWORD PTR [edx+20]
  001c7	50		 push	 eax
  001c8	8d 81 aa 01 00
	00		 lea	 eax, DWORD PTR [ecx+426]
  001ce	50		 push	 eax
  001cf	52		 push	 edx
  001d0	51		 push	 ecx
  001d1	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001d6	83 c4 14	 add	 esp, 20			; 00000014H
  001d9	85 c0		 test	 eax, eax
  001db	74 12		 je	 SHORT $LN11@serverWind

; 6305 : 					{
; 6306 : 						if (mouse.onceState & MOUSE_LEFT_CRICK)

  001dd	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  001e4	74 09		 je	 SHORT $LN11@serverWind

; 6307 : 						{
; 6308 : 							id2 = i - selStartLine + 1;

  001e6	8b f7		 mov	 esi, edi
  001e8	2b 35 00 00 00
	00		 sub	 esi, DWORD PTR ?selStartLine@@3HA ; selStartLine
  001ee	46		 inc	 esi
$LN11@serverWind:

; 6289 : 		{
; 6290 : 			for (i = selStartLine; i < msgLine; i++)

  001ef	83 85 dc fd ff
	ff 15		 add	 DWORD PTR tv817[ebp], 21 ; 00000015H
  001f6	47		 inc	 edi
  001f7	8b 95 dc fd ff
	ff		 mov	 edx, DWORD PTR tv817[ebp]
  001fd	81 c3 00 01 00
	00		 add	 ebx, 256		; 00000100H
  00203	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?msgLine@?1??serverWindowType1@@YAXXZ@4HA
  00209	7c 8a		 jl	 SHORT $LL13@serverWind
  0020b	8b 9d e0 fd ff
	ff		 mov	 ebx, DWORD PTR _id$1$[ebp]
$LN12@serverWind:

; 6309 : 						}
; 6310 : 					}
; 6311 : 				}
; 6312 : 			}
; 6313 : 		}
; 6314 : 
; 6315 : 		// î??????î?????????????î¼??
; 6316 : 		if (CheckMenuFlag()
; 6317 : 			|| joy_trg[0] & JOY_ESC
; 6318 : 			|| actBtn == 1
; 6319 : 			|| menuBtn == 1
; 6320 : 			|| disconnectServerFlag == TRUE
; 6321 : 			|| wnCloseFlag == 1)

  00211	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00216	85 c0		 test	 eax, eax
  00218	75 3e		 jne	 SHORT $LN30@serverWind
  0021a	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00224	75 32		 jne	 SHORT $LN30@serverWind
  00226	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0022e	74 28		 je	 SHORT $LN30@serverWind
  00230	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00238	74 1e		 je	 SHORT $LN30@serverWind
  0023a	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00241	74 15		 je	 SHORT $LN30@serverWind
  00243	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0024b	74 0b		 je	 SHORT $LN30@serverWind

; 6326 : 		}
; 6327 : 
; 6328 : 		if (0 <= id && id < 6
; 6329 : 			|| 0 <= id2 && id2 < 10
; 6330 : 			|| id == 100)

  0024d	85 db		 test	 ebx, ebx
  0024f	78 1e		 js	 SHORT $LN33@serverWind
  00251	83 fb 06	 cmp	 ebx, 6
  00254	7c 22		 jl	 SHORT $LN32@serverWind
  00256	eb 17		 jmp	 SHORT $LN33@serverWind
$LN30@serverWind:

; 6322 : 		{
; 6323 : 			id = 100;
; 6324 : 			windowTypeWN = -1;
; 6325 : 			wnCloseFlag = 0;

  00258	33 c0		 xor	 eax, eax
  0025a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00264	bb 64 00 00 00	 mov	 ebx, 100		; 00000064H
  00269	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN33@serverWind:

; 6326 : 		}
; 6327 : 
; 6328 : 		if (0 <= id && id < 6
; 6329 : 			|| 0 <= id2 && id2 < 10
; 6330 : 			|| id == 100)

  0026f	85 f6		 test	 esi, esi
  00271	78 1e		 js	 SHORT $LN34@serverWind
  00273	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  00276	7d 19		 jge	 SHORT $LN34@serverWind
$LN32@serverWind:

; 6331 : 		{
; 6332 : 			char data[256];
; 6333 : 			char msg[256];
; 6334 : 			if (id == 100)

  00278	83 fb 64	 cmp	 ebx, 100		; 00000064H
  0027b	74 1d		 je	 SHORT $LN80@serverWind

; 6337 : 			}
; 6338 : 			else
; 6339 : 				if (0 <= id && id < 6)

  0027d	83 fb 05	 cmp	 ebx, 5
  00280	77 0b		 ja	 SHORT $LN37@serverWind

; 6340 : 				{
; 6341 : 					btn = 1;
; 6342 : 					btn <<= id;

  00282	bf 01 00 00 00	 mov	 edi, 1
  00287	8b cb		 mov	 ecx, ebx
  00289	d3 e7		 shl	 edi, cl

; 6343 : 				}

  0028b	eb 12		 jmp	 SHORT $LN38@serverWind
$LN37@serverWind:

; 6344 : 				else
; 6345 : 				{
; 6346 : 					btn = 0;

  0028d	33 ff		 xor	 edi, edi
  0028f	eb 0e		 jmp	 SHORT $LN38@serverWind
$LN34@serverWind:

; 6326 : 		}
; 6327 : 
; 6328 : 		if (0 <= id && id < 6
; 6329 : 			|| 0 <= id2 && id2 < 10
; 6330 : 			|| id == 100)

  00291	83 fb 64	 cmp	 ebx, 100		; 00000064H
  00294	0f 85 83 00 00
	00		 jne	 $LN31@serverWind
$LN80@serverWind:

; 6335 : 			{
; 6336 : 				btn = WINDOW_BUTTONTYPE_CANCEL;

  0029a	bf 02 00 00 00	 mov	 edi, 2
$LN38@serverWind:

; 6347 : 				}
; 6348 : 			if (id2 < 0)
; 6349 : 				id2 = 0;
; 6350 : 			sprintf(data, "%d", id2);

  0029f	33 c0		 xor	 eax, eax
  002a1	85 f6		 test	 esi, esi
  002a3	0f 49 c6	 cmovns	 eax, esi
  002a6	8b f0		 mov	 esi, eax
  002a8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002ae	56		 push	 esi
  002af	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  002b4	50		 push	 eax
  002b5	e8 00 00 00 00	 call	 _sprintf

; 6351 : 			makeEscapeString(data, msg, sizeof(msg) - 1);

  002ba	68 ff 00 00 00	 push	 255			; 000000ffH
  002bf	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  002c5	50		 push	 eax
  002c6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _data$1[ebp]
  002cc	50		 push	 eax
  002cd	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  002d2	83 c4 18	 add	 esp, 24			; 00000018H

; 6352 : 			if (bNewServer)

  002d5	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  002db	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  002e2	50		 push	 eax
  002e3	57		 push	 edi
  002e4	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  002ea	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  002f0	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  002f6	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  002fc	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00302	74 07		 je	 SHORT $LN40@serverWind

; 6353 : 
; 6354 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00304	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00309	eb 05		 jmp	 SHORT $LN87@serverWind
$LN40@serverWind:

; 6355 : 
; 6356 : 			else
; 6357 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0030b	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN87@serverWind:

; 6358 : 
; 6359 : 			windowTypeWN = -1;

  00310	83 c4 1c	 add	 esp, 28			; 0000001cH
  00313	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN31@serverWind:

; 6360 : 		}
; 6361 : 
; 6362 : 		if (id >= 0 || id2 >= 0)

  0031d	85 db		 test	 ebx, ebx
  0031f	0f 89 f6 00 00
	00		 jns	 $LN43@serverWind
  00325	85 f6		 test	 esi, esi
  00327	0f 89 ee 00 00
	00		 jns	 $LN43@serverWind

; 6366 : 			return;
; 6367 : 		}
; 6368 : 
; 6369 : 
; 6370 : 		if (ptActMenuWin->hp >= 1)

  0032d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00332	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  00336	0f 8c f7 00 00
	00		 jl	 $LN86@serverWind

; 6371 : 		{
; 6372 : 			for (i = 0; i < msgLine; i++)

  0033c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType1@@YAXXZ@4HA
  00342	33 f6		 xor	 esi, esi
  00344	85 d2		 test	 edx, edx
  00346	7e 5f		 jle	 SHORT $LN15@serverWind
  00348	33 db		 xor	 ebx, ebx
  0034a	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  0034f	90		 npad	 1
$LL16@serverWind:

; 6373 : 			{
; 6374 : 				if (strlen(msgWN[i]) > 0)

  00350	8b cf		 mov	 ecx, edi
  00352	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00355	89 85 e0 fd ff
	ff		 mov	 DWORD PTR tv810[ebp], eax
  0035b	0f 1f 44 00 00	 npad	 5
$LL84@serverWind:
  00360	8a 01		 mov	 al, BYTE PTR [ecx]
  00362	41		 inc	 ecx
  00363	84 c0		 test	 al, al
  00365	75 f9		 jne	 SHORT $LL84@serverWind
  00367	2b 8d e0 fd ff
	ff		 sub	 ecx, DWORD PTR tv810[ebp]
  0036d	74 2a		 je	 SHORT $LN14@serverWind

; 6375 : 				{
; 6376 : 
; 6377 : #ifdef _FONT_STYLE_
; 6378 : 					PutWinText(winX + 44, winY + 21 + i * 21, FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);

  0036f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winY@?1??serverWindowType1@@YAXXZ@4HA
  00374	56		 push	 esi
  00375	6a 00		 push	 0
  00377	57		 push	 edi
  00378	83 c0 15	 add	 eax, 21			; 00000015H
  0037b	6a 00		 push	 0
  0037d	03 c3		 add	 eax, ebx
  0037f	6a 01		 push	 1
  00381	50		 push	 eax
  00382	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winX@?1??serverWindowType1@@YAXXZ@4HA
  00387	83 c0 2c	 add	 eax, 44			; 0000002cH
  0038a	50		 push	 eax
  0038b	e8 00 00 00 00	 call	 ?PutWinText@@YAXHHDHPADHH@Z ; PutWinText
  00390	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgLine@?1??serverWindowType1@@YAXXZ@4HA
  00396	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN14@serverWind:

; 6371 : 		{
; 6372 : 			for (i = 0; i < msgLine; i++)

  00399	46		 inc	 esi
  0039a	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  003a0	83 c3 15	 add	 ebx, 21			; 00000015H
  003a3	3b f2		 cmp	 esi, edx
  003a5	7c a9		 jl	 SHORT $LL16@serverWind
$LN15@serverWind:

; 6379 : #else
; 6380 : 					StockFontBuffer(winX + 44, winY + 21 + i * 21,
; 6381 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 6382 : #endif
; 6383 : 
; 6384 : 				}
; 6385 : 			}
; 6386 : 			j = 0;

  003a7	33 ff		 xor	 edi, edi

; 6387 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  003a9	bb 01 00 00 00	 mov	 ebx, 1
  003ae	33 f6		 xor	 esi, esi
$LL19@serverWind:

; 6388 : 			{
; 6389 : 				btnId[i] = -2;

  003b0	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA[esi], -2 ; fffffffeH

; 6390 : 				if (buttonTypeWN & mask)

  003ba	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  003c0	74 3e		 je	 SHORT $LN17@serverWind

; 6391 : 				{
; 6392 : 					if (j < btnCnt)

  003c2	3b 3d 00 00 00
	00		 cmp	 edi, DWORD PTR ?btnCnt@?1??serverWindowType1@@YAXXZ@4HA
  003c8	7d 36		 jge	 SHORT $LN17@serverWind

; 6393 : 					{
; 6394 : 
; 6395 : 						btnId[i] = StockDispBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1], DISP_PRIO_IME3, _btnTitle[i], 2);

  003ca	8b 04 fd 04 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA[edi*8+4]
  003d1	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winY@?1??serverWindowType1@@YAXXZ@4HA
  003d7	6a 02		 push	 2
  003d9	ff b4 35 e4 fd
	ff ff		 push	 DWORD PTR __btnTitle$[ebp+esi]
  003e0	6a 69		 push	 105			; 00000069H
  003e2	50		 push	 eax
  003e3	8b 04 fd 00 00
	00 00		 mov	 eax, DWORD PTR ?btnLoc@?1??serverWindowType1@@YAXXZ@4PAY01HA[edi*8]
  003ea	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?winX@?1??serverWindowType1@@YAXXZ@4HA
  003f0	50		 push	 eax
  003f1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003f6	83 c4 14	 add	 esp, 20			; 00000014H
  003f9	89 86 00 00 00
	00		 mov	 DWORD PTR ?btnId@?1??serverWindowType1@@YAXXZ@4PAHA[esi], eax

; 6396 : 
; 6397 : 						//btnId[i] =
; 6398 : 						//	StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 6399 : 						//		FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);
; 6400 : 						j++;

  003ff	47		 inc	 edi
$LN17@serverWind:

; 6387 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00400	83 c6 04	 add	 esi, 4
  00403	03 db		 add	 ebx, ebx
  00405	83 fe 18	 cmp	 esi, 24			; 00000018H
  00408	7c a6		 jl	 SHORT $LL19@serverWind

; 6401 : 					}
; 6402 : 				}
; 6403 : 			}
; 6404 : 		}
; 6405 : 	}
; 6406 : }

  0040a	5b		 pop	 ebx
  0040b	5f		 pop	 edi
  0040c	5e		 pop	 esi
  0040d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00410	33 cd		 xor	 ecx, ebp
  00412	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00417	8b e5		 mov	 esp, ebp
  00419	5d		 pop	 ebp
  0041a	c3		 ret	 0
$LN43@serverWind:

; 6363 : 		{
; 6364 : 			DeathAction(ptActMenuWin);

  0041b	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00421	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00426	83 c4 04	 add	 esp, 4

; 6365 : 			ptActMenuWin = NULL;

  00429	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN86@serverWind:
  00433	5b		 pop	 ebx
$LN18@serverWind:

; 6401 : 					}
; 6402 : 				}
; 6403 : 			}
; 6404 : 		}
; 6405 : 	}
; 6406 : }

  00434	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00437	5f		 pop	 edi
  00438	33 cd		 xor	 ecx, ebp
  0043a	5e		 pop	 esi
  0043b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00440	8b e5		 mov	 esp, ebp
  00442	5d		 pop	 ebp
  00443	c3		 ret	 0
?serverWindowType1@@YAXXZ ENDP				; serverWindowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?serverWindowType0@@YAXH@Z
_TEXT	SEGMENT
?winY@?1??serverWindowType0@@YAXH@Z@4HA$1 = -356	; size = 4
tv886 = -352						; size = 4
_w$1$ = -348						; size = 4
?winX@?1??serverWindowType0@@YAXH@Z@4HA$1 = -344	; size = 4
tv1025 = -344						; size = 4
tv898 = -344						; size = 4
?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA$1 = -340 ; size = 4
_j$1$ = -336						; size = 4
tv830 = -336						; size = 4
__btnLoc$1 = -332					; size = 48
__btnTitle$ = -284					; size = 24
_msg$2 = -260						; size = 256
_buffer$3 = -260					; size = 256
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?serverWindowType0@@YAXH@Z PROC				; serverWindowType0, COMDAT

; 5962 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 64 01 00
	00		 sub	 esp, 356		; 00000164H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 5963 : 	static int winX, winY;
; 5964 : 	static int winW, winH;
; 5965 : 	static int fontId[] = { -2, -2, -2, -2, -2, -2 };
; 5966 : 	static int btnLoc[6][2];
; 5967 : 	static int btnCnt;
; 5968 : 	static int msgLine;
; 5969 : 	static STR_BUFFER input;
; 5970 : 
; 5971 : 	int id;
; 5972 : 	int i, j;
; 5973 : 	int mask;
; 5974 : 	int btn;
; 5975 : 
; 5976 : 	char* btnTitle[] =
; 5977 : 	{
; 5978 : 		" ï¼¯ï¼« ",
; 5979 : 		"CANCEL",
; 5980 : 		"í  ì¸",
; 5981 : 		"ì·¨  ì",
; 5982 : 		"ì´ì  íì´ì§",
; 5983 : 		"ë¤ì íì´ì§"
; 5984 : 	};
; 5985 : 	int _btnTitle[] =
; 5986 : 	{
; 5987 : 		CG_OK_BTN,
; 5988 : 		CG_CANCEL_BTN,
; 5989 : 		CG_OK_BTN,
; 5990 : 		CG_CANCEL_BTN,
; 5991 : 		CG_NEXT_BTN,
; 5992 : 		CG_PREV_BTN
; 5993 : 	};
; 5994 : 	static int totalMsgLine;
; 5995 : 	static int lineSkip;
; 5996 : 	static ACTION* thisAction = nullptr;
; 5997 : 
; 5998 : 
; 5999 : 	if (ptActMenuWin == NULL)

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  0001a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000065c2000065ed000065c2000065ed
  00021	53		 push	 ebx
  00022	56		 push	 esi
  00023	8b 75 08	 mov	 esi, DWORD PTR _mode$[ebp]
  00026	57		 push	 edi
  00027	0f 11 85 e4 fe
	ff ff		 movups	 XMMWORD PTR __btnTitle$[ebp], xmm0
  0002e	c7 85 f4 fe ff
	ff 46 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+16], 26182 ; 00006646H
  00038	c7 85 f8 fe ff
	ff 44 66 00 00	 mov	 DWORD PTR __btnTitle$[ebp+20], 26180 ; 00006644H
  00042	0f 85 57 03 00
	00		 jne	 $LN77@serverWind

; 6000 : 	{
; 6001 : 		winW = msgWN_W;
; 6002 : 		winH = msgWN_H;

  00048	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?msgWN_H@@3HA ; msgWN_H

; 6003 : #ifdef _NEW_MANOR_LAW
; 6004 : 		if (mode == 2) winH = 7;

  0004e	b8 07 00 00 00	 mov	 eax, 7
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  00059	83 fe 02	 cmp	 esi, 2
  0005c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?winW@?1??serverWindowType0@@YAXH@Z@4HA, ecx
  00062	0f 44 d0	 cmove	 edx, eax

; 6005 : #endif
; 6006 : 		winX = (640 - winW * 64) / 2;

  00065	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0006a	2b c1		 sub	 eax, ecx
  0006c	89 15 00 00 00
	00		 mov	 DWORD PTR ?winH@?1??serverWindowType0@@YAXH@Z@4HA, edx
  00072	c1 e0 05	 shl	 eax, 5
  00075	a3 00 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType0@@YAXH@Z@4HA, eax

; 6007 : 		winY = (456 - winH * 48) / 2;

  0007a	b8 c8 01 00 00	 mov	 eax, 456		; 000001c8H

; 6008 : 		//ptActMenuWin = MakeWindowDisp(winX, winY, winW, winH, NULL, 1);
; 6009 : 		ptActMenuWin = MakeWindowDisp(320, 480, 0, 0, NULL, -1);

  0007f	6a ff		 push	 -1
  00081	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00084	6a 00		 push	 0
  00086	c1 e1 04	 shl	 ecx, 4
  00089	2b c1		 sub	 eax, ecx
  0008b	6a 00		 push	 0
  0008d	99		 cdq
  0008e	6a 00		 push	 0
  00090	2b c2		 sub	 eax, edx
  00092	d1 f8		 sar	 eax, 1
  00094	68 e0 01 00 00	 push	 480			; 000001e0H
  00099	68 40 01 00 00	 push	 320			; 00000140H
  0009e	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType0@@YAXH@Z@4HA, eax
  000a3	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 6010 : 		ACTION* workAction = pc.ptAct->objIndex == idWN ? pc.ptAct : getCharObjAct(idWN);

  000a8	8b 35 ec 50 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20716
  000ae	8b c8		 mov	 ecx, eax
  000b0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?idWN@@3HA ; idWN
  000b5	83 c4 18	 add	 esp, 24			; 00000018H
  000b8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, ecx ; ptActMenuWin
  000be	39 86 38 02 00
	00		 cmp	 DWORD PTR [esi+568], eax
  000c4	74 11		 je	 SHORT $LN45@serverWind
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 ?getCharObjAct@@YAPAUaction@@H@Z ; getCharObjAct
  000cc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000d2	83 c4 04	 add	 esp, 4
  000d5	8b f0		 mov	 esi, eax
$LN45@serverWind:

; 6011 : 		if (workAction != nullptr)

  000d7	85 f6		 test	 esi, esi
  000d9	0f 84 94 00 00
	00		 je	 $LN19@serverWind

; 6012 : 		{
; 6013 : 			thisAction = GetAction( PRIO_CHR, 0);

  000df	6a 00		 push	 0
  000e1	6a 01		 push	 1
  000e3	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction

; 6014 : 			thisAction->x = ptActMenuWin->x - 222;

  000e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000ee	8b d0		 mov	 edx, eax

; 6015 : 			thisAction->y = ptActMenuWin->y + 20;
; 6016 : 			thisAction->anim_no = ANIM_STAND;
; 6017 : 			thisAction->anim_ang = 1;
; 6018 : 			thisAction->dispPrio = DISP_PRIO_IME3;
; 6019 : 			thisAction->anim_chr_no = workAction->anim_chr_no;
; 6020 : 			char buffer[256];
; 6021 : 			CenteringStr(workAction->name, buffer, 16);

  000f0	6a 10		 push	 16			; 00000010H
  000f2	89 15 00 00 00
	00		 mov	 DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A, edx
  000f8	8b 49 18	 mov	 ecx, DWORD PTR [ecx+24]
  000fb	81 e9 de 00 00
	00		 sub	 ecx, 222		; 000000deH
  00101	89 4a 18	 mov	 DWORD PTR [edx+24], ecx
  00104	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0010a	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0010d	83 c1 14	 add	 ecx, 20			; 00000014H
  00110	c7 82 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [edx+332], 3
  0011a	89 4a 1c	 mov	 DWORD PTR [edx+28], ecx
  0011d	c7 82 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [edx+340], 1
  00127	c6 42 15 69	 mov	 BYTE PTR [edx+21], 105	; 00000069H
  0012b	8b 86 44 01 00
	00		 mov	 eax, DWORD PTR [esi+324]
  00131	89 82 44 01 00
	00		 mov	 DWORD PTR [edx+324], eax
  00137	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _buffer$3[ebp]
  0013d	50		 push	 eax
  0013e	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr

; 6022 : 			strcpy(thisAction->name, buffer);

  00147	a1 00 00 00 00	 mov	 eax, DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A
  0014c	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _buffer$3[ebp]
  00152	8b d1		 mov	 edx, ecx
  00154	83 c4 14	 add	 esp, 20			; 00000014H
  00157	2b c2		 sub	 eax, edx
  00159	8d 50 38	 lea	 edx, DWORD PTR [eax+56]
  0015c	0f 1f 40 00	 npad	 4
$LL46@serverWind:
  00160	8a 01		 mov	 al, BYTE PTR [ecx]
  00162	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00165	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00169	84 c0		 test	 al, al
  0016b	75 f3		 jne	 SHORT $LL46@serverWind
  0016d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN19@serverWind:

; 6023 : 		}
; 6024 : 
; 6025 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 6026 : 		if (ptActMenuWin->x <= 32)

  00173	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00176	83 fe 20	 cmp	 esi, 32			; 00000020H
  00179	7f 28		 jg	 SHORT $LN20@serverWind

; 6027 : 		{
; 6028 : 			ptActMenuWin->x += DISPLACEMENT_X / 2;

  0017b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00180	99		 cdq
  00181	2b c2		 sub	 eax, edx
  00183	d1 f8		 sar	 eax, 1
  00185	03 c6		 add	 eax, esi
  00187	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 6029 : 			ptActMenuWin->y += DISPLACEMENT_Y / 2;

  0018a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0018f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00195	99		 cdq
  00196	2b c2		 sub	 eax, edx
  00198	d1 f8		 sar	 eax, 1
  0019a	01 41 1c	 add	 DWORD PTR [ecx+28], eax
  0019d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
$LN20@serverWind:

; 6030 : 		}
; 6031 : 
; 6032 : 
; 6033 : 		winX = ptActMenuWin->x;

  001a3	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]

; 6034 : 		winY = ptActMenuWin->y;
; 6035 : #endif
; 6036 : 
; 6037 : 		lineSkip = 20;
; 6038 : 		totalMsgLine = (winH * 48 - 56) / lineSkip;
; 6039 : 
; 6040 : 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 6041 : 		{
; 6042 : 			fontId[i] = -2;
; 6043 : 		}
; 6044 : 
; 6045 : 		mask = 1;
; 6046 : 		btnCnt = 0;

  001a6	33 ff		 xor	 edi, edi
  001a8	89 85 a8 fe ff
	ff		 mov	 DWORD PTR ?winX@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp], eax
  001ae	a3 00 00 00 00	 mov	 DWORD PTR ?winX@?1??serverWindowType0@@YAXH@Z@4HA, eax
  001b3	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  001b6	89 85 9c fe ff
	ff		 mov	 DWORD PTR ?winY@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp], eax
  001bc	a3 00 00 00 00	 mov	 DWORD PTR ?winY@?1??serverWindowType0@@YAXH@Z@4HA, eax
  001c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winH@?1??serverWindowType0@@YAXH@Z@4HA
  001c6	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  001cd	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?lineSkip@?1??serverWindowType0@@YAXH@Z@4HA, 20 ; 00000014H
  001d7	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA, xmm0
  001de	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001e1	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA+16, -2 ; fffffffeH
  001eb	c1 e0 04	 shl	 eax, 4
  001ee	89 85 b0 fe ff
	ff		 mov	 DWORD PTR tv830[ebp], eax
  001f4	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA+20, -2 ; fffffffeH
  001fe	89 3d 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType0@@YAXH@Z@4HA, edi
  00204	8d 70 c8	 lea	 esi, DWORD PTR [eax-56]
  00207	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0020c	f7 ee		 imul	 esi
  0020e	89 b5 a0 fe ff
	ff		 mov	 DWORD PTR tv886[ebp], esi
  00214	b8 01 00 00 00	 mov	 eax, 1
  00219	c1 fa 03	 sar	 edx, 3
  0021c	8b da		 mov	 ebx, edx
  0021e	c1 eb 1f	 shr	 ebx, 31			; 0000001fH
  00221	03 da		 add	 ebx, edx

; 6047 : 		for (i = 0; i < 6; i++, mask <<= 1)

  00223	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  00229	89 9d ac fe ff
	ff		 mov	 DWORD PTR ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp], ebx
  0022f	33 c9		 xor	 ecx, ecx
  00231	89 1d 00 00 00
	00		 mov	 DWORD PTR ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA, ebx
$LL7@serverWind:

; 6048 : 		{
; 6049 : 			if (buttonTypeWN & mask)

  00237	85 d0		 test	 edx, eax
  00239	74 06		 je	 SHORT $LN5@serverWind

; 6050 : 			{
; 6051 : 				btnCnt++;

  0023b	47		 inc	 edi
  0023c	83 ff 04	 cmp	 edi, 4

; 6052 : 				if (btnCnt == 4)

  0023f	74 08		 je	 SHORT $LN53@serverWind
$LN5@serverWind:

; 6047 : 		for (i = 0; i < 6; i++, mask <<= 1)

  00241	41		 inc	 ecx
  00242	03 c0		 add	 eax, eax
  00244	83 f9 06	 cmp	 ecx, 6
  00247	7c ee		 jl	 SHORT $LL7@serverWind
$LN53@serverWind:

; 6050 : 			{
; 6051 : 				btnCnt++;

  00249	89 3d 00 00 00
	00		 mov	 DWORD PTR ?btnCnt@?1??serverWindowType0@@YAXH@Z@4HA, edi

; 6053 : 					break;
; 6054 : 			}
; 6055 : 		}
; 6056 : 		if (btnCnt > 0)

  0024f	85 ff		 test	 edi, edi
  00251	7e 78		 jle	 SHORT $LN9@serverWind

; 6057 : 		{
; 6058 : 			int w;
; 6059 : 			w = winW * 64 / (btnCnt + 1);

  00253	a1 00 00 00 00	 mov	 eax, DWORD PTR ?winW@?1??serverWindowType0@@YAXH@Z@4HA
  00258	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  0025b	c1 e0 06	 shl	 eax, 6
  0025e	33 db		 xor	 ebx, ebx
  00260	99		 cdq
  00261	f7 f9		 idiv	 ecx
  00263	89 85 a4 fe ff
	ff		 mov	 DWORD PTR _w$1$[ebp], eax

; 6060 : 			for (i = 0; i < btnCnt; i++)

  00269	85 ff		 test	 edi, edi
  0026b	7e 58		 jle	 SHORT $LN81@serverWind

; 6057 : 		{
; 6058 : 			int w;
; 6059 : 			w = winW * 64 / (btnCnt + 1);

  0026d	8b c6		 mov	 eax, esi
  0026f	99		 cdq
  00270	f7 bd ac fe ff
	ff		 idiv	 DWORD PTR ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp]
  00276	8b f0		 mov	 esi, eax
  00278	8b 85 ac fe ff
	ff		 mov	 eax, DWORD PTR ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp]
  0027e	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00281	0f af f1	 imul	 esi, ecx
  00284	8d 0c 80	 lea	 ecx, DWORD PTR [eax+eax*4]
  00287	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv830[ebp]
  0028d	c1 e1 02	 shl	 ecx, 2
  00290	2b c1		 sub	 eax, ecx
  00292	8b 8d a4 fe ff
	ff		 mov	 ecx, DWORD PTR _w$1$[ebp]
  00298	99		 cdq
  00299	2b c2		 sub	 eax, edx
  0029b	d1 f8		 sar	 eax, 1
  0029d	8d 50 08	 lea	 edx, DWORD PTR [eax+8]
  002a0	03 d6		 add	 edx, esi
  002a2	8d 41 e5	 lea	 eax, DWORD PTR [ecx-27]
  002a5	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL10@serverWind:

; 6061 : 			{
; 6062 : 				btnLoc[i][0] = w * (i + 1) - 27;

  002b0	89 04 dd 00 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType0@@YAXH@Z@4PAY01HA[ebx*8], eax
  002b7	03 c1		 add	 eax, ecx

; 6063 : 				btnLoc[i][1] = ((winH * 48 - 56) / totalMsgLine) * (totalMsgLine - 1)

  002b9	89 14 dd 04 00
	00 00		 mov	 DWORD PTR ?btnLoc@?1??serverWindowType0@@YAXH@Z@4PAY01HA[ebx*8+4], edx
  002c0	43		 inc	 ebx
  002c1	3b df		 cmp	 ebx, edi
  002c3	7c eb		 jl	 SHORT $LL10@serverWind
$LN81@serverWind:

; 6064 : 					+ (winH * 48 - totalMsgLine * lineSkip) / 2 + 8;
; 6065 : 			}
; 6066 : 		}
; 6067 : 
; 6068 : 		if (mode == 0 || mode == 2)

  002c5	8b 9d ac fe ff
	ff		 mov	 ebx, DWORD PTR ?totalMsgLine@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp]
$LN9@serverWind:
  002cb	8b 75 08	 mov	 esi, DWORD PTR _mode$[ebp]
  002ce	85 f6		 test	 esi, esi
  002d0	0f 84 96 00 00
	00		 je	 $LN26@serverWind
  002d6	83 fe 02	 cmp	 esi, 2
  002d9	0f 84 8d 00 00
	00		 je	 $LN26@serverWind

; 6072 : 		}
; 6073 : 		else
; 6074 : 			if (mode == 1)

  002df	83 fe 01	 cmp	 esi, 1
  002e2	0f 85 93 00 00
	00		 jne	 $LN27@serverWind

; 6075 : 			{
; 6076 : 				msgLine = totalMsgLine - 2;
; 6077 : 				input.buffer[0] = '\0';
; 6078 : 				input.cnt = 0;
; 6079 : 				input.cursor = 0;
; 6080 : 				initStrBuffer(&input,

  002e8	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR tv830[ebp]
  002ee	8d 0c 9b	 lea	 ecx, DWORD PTR [ebx+ebx*4]
  002f1	c1 e1 02	 shl	 ecx, 2
  002f4	8d 7b fe	 lea	 edi, DWORD PTR [ebx-2]
  002f7	2b c1		 sub	 eax, ecx
  002f9	89 3d 00 00 00
	00		 mov	 DWORD PTR ?msgLine@?1??serverWindowType0@@YAXH@Z@4HA, edi
  002ff	99		 cdq
  00300	2b c2		 sub	 eax, edx
  00302	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A, 0
  00309	8b c8		 mov	 ecx, eax
  0030b	c6 05 07 01 00
	00 00		 mov	 BYTE PTR ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A+263, 0
  00312	8b 85 a0 fe ff
	ff		 mov	 eax, DWORD PTR tv886[ebp]
  00318	99		 cdq
  00319	f7 fb		 idiv	 ebx
  0031b	56		 push	 esi
  0031c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?msgWNLen@@3HA ; msgWNLen
  00322	0f af c7	 imul	 eax, edi
  00325	d1 f9		 sar	 ecx, 1
  00327	03 8d 9c fe ff
	ff		 add	 ecx, DWORD PTR ?winY@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp]
  0032d	6a 00		 push	 0
  0032f	56		 push	 esi
  00330	03 c1		 add	 eax, ecx
  00332	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A+265, 0
  00339	50		 push	 eax
  0033a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?msgWN_W@@3HA ; msgWN_W
  0033f	8d 0c f6	 lea	 ecx, DWORD PTR [esi+esi*8]
  00342	c1 e0 06	 shl	 eax, 6
  00345	2b c1		 sub	 eax, ecx
  00347	99		 cdq
  00348	2b c2		 sub	 eax, edx
  0034a	d1 f8		 sar	 eax, 1
  0034c	03 85 a8 fe ff
	ff		 add	 eax, DWORD PTR ?winX@?1??serverWindowType0@@YAXH@Z@4HA$1[ebp]
  00352	50		 push	 eax
  00353	68 00 00 00 00	 push	 OFFSET ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A
  00358	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 6081 : 					winX + (msgWN_W * 64 - msgWNLen * 9) / 2,
; 6082 : 					winY + ((winH * 48 - 56) / totalMsgLine) * (totalMsgLine - 2) + (winH * 48 - totalMsgLine * lineSkip) / 2,
; 6083 : 					msgWNLen, FONT_PAL_WHITE, FONT_PRIO_FRONT);
; 6084 : 				GetKeyInputFocus(&input);

  0035d	68 00 00 00 00	 push	 OFFSET ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A
  00362	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00367	83 c4 1c	 add	 esp, 28			; 0000001cH
  0036a	eb 0f		 jmp	 SHORT $LN27@serverWind
$LN26@serverWind:

; 6069 : 		{
; 6070 : 			msgLine = totalMsgLine - 1;

  0036c	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]

; 6071 : 			input.buffer[0] = '\0';

  0036f	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A, 0
  00376	a3 00 00 00 00	 mov	 DWORD PTR ?msgLine@?1??serverWindowType0@@YAXH@Z@4HA, eax
$LN27@serverWind:

; 6085 : 			}
; 6086 : 
; 6087 : 		play_se(202, 320, 240);	// ????????

  0037b	68 f0 00 00 00	 push	 240			; 000000f0H
  00380	68 40 01 00 00	 push	 320			; 00000140H
  00385	68 ca 00 00 00	 push	 202			; 000000caH
  0038a	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0038f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6088 : 	}
; 6089 : 
; 6090 : 
; 6091 : 	if (ptActMenuWin != NULL)

  00392	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00399	0f 84 0b 03 00
	00		 je	 $LN37@serverWind
$LN77@serverWind:

; 6092 : 	{
; 6093 : 		// ?????î±î¶îî
; 6094 : 		//id = selFontId(fontId, sizeof(fontId) / sizeof(int));
; 6095 : 		id = selGraId(fontId, sizeof(fontId) / sizeof(int));

  0039f	6a 06		 push	 6
  003a1	68 00 00 00 00	 push	 OFFSET ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA
  003a6	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  003ab	83 c4 08	 add	 esp, 8
  003ae	8b f8		 mov	 edi, eax

; 6096 : 
; 6097 : 		// î??????î?????????????î¼??
; 6098 : 		if (CheckMenuFlag()
; 6099 : 			|| ((joy_trg[0] & JOY_ESC) && GetImeString() == NULL)
; 6100 : 			|| actBtn == 1
; 6101 : 			|| menuBtn == 1
; 6102 : 			|| disconnectServerFlag == TRUE
; 6103 : 			|| wnCloseFlag == 1)

  003b0	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  003b5	85 c0		 test	 eax, eax
  003b7	0f 85 9b 02 00
	00		 jne	 $LN30@serverWind
  003bd	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  003c7	74 0d		 je	 SHORT $LN31@serverWind
  003c9	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  003ce	85 c0		 test	 eax, eax
  003d0	0f 84 82 02 00
	00		 je	 $LN30@serverWind
$LN31@serverWind:
  003d6	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  003de	0f 84 74 02 00
	00		 je	 $LN30@serverWind
  003e4	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  003ec	0f 84 66 02 00
	00		 je	 $LN30@serverWind
  003f2	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  003f9	0f 84 59 02 00
	00		 je	 $LN30@serverWind
  003ff	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00407	0f 84 4b 02 00
	00		 je	 $LN30@serverWind

; 6108 : 		}
; 6109 : 
; 6110 : 		// ï¼¯ï¼«
; 6111 : 		if (0 <= id && id < 6)

  0040d	85 ff		 test	 edi, edi
  0040f	78 74		 js	 SHORT $LN35@serverWind
  00411	83 ff 06	 cmp	 edi, 6
  00414	0f 8d 50 02 00
	00		 jge	 $LN79@serverWind

; 6112 : 		{
; 6113 : 			char msg[256];
; 6114 : 			btn = 1;
; 6115 : 			btn <<= id;
; 6116 : 
; 6117 : 			makeEscapeString(input.buffer, msg, sizeof(msg) - 1);

  0041a	68 ff 00 00 00	 push	 255			; 000000ffH
  0041f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00425	8b cf		 mov	 ecx, edi
  00427	50		 push	 eax
  00428	be 01 00 00 00	 mov	 esi, 1
  0042d	68 00 00 00 00	 push	 OFFSET ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A
  00432	d3 e6		 shl	 esi, cl
  00434	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00439	83 c4 0c	 add	 esp, 12			; 0000000cH

; 6118 : 			if (bNewServer)

  0043c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$2[ebp]
  00442	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00449	50		 push	 eax
  0044a	56		 push	 esi
  0044b	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00451	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00457	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0045d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00463	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00469	74 0d		 je	 SHORT $LN33@serverWind

; 6119 : 				lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  0046b	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 6122 : 
; 6123 : 			windowTypeWN = -1;

  00470	83 c4 1c	 add	 esp, 28			; 0000001cH
  00473	e9 e8 01 00 00	 jmp	 $LN83@serverWind
$LN33@serverWind:

; 6120 : 			else
; 6121 : 				old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, btn, msg);

  00478	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 6122 : 
; 6123 : 			windowTypeWN = -1;

  0047d	83 c4 1c	 add	 esp, 28			; 0000001cH
  00480	e9 db 01 00 00	 jmp	 $LN83@serverWind
$LN35@serverWind:

; 6136 : 			}
; 6137 : 			return;
; 6138 : 		}
; 6139 : 
; 6140 : 
; 6141 : 		if (ptActMenuWin != NULL && ptActMenuWin->hp >= 1)

  00485	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0048b	85 d2		 test	 edx, edx
  0048d	0f 84 17 02 00
	00		 je	 $LN37@serverWind
  00493	83 7a 78 01	 cmp	 DWORD PTR [edx+120], 1
  00497	0f 8c 0d 02 00
	00		 jl	 $LN37@serverWind

; 6142 : 		{
; 6143 : 			for (i = 0; i < msgLine; i++)

  0049d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?msgLine@?1??serverWindowType0@@YAXH@Z@4HA
  004a3	33 f6		 xor	 esi, esi
  004a5	85 db		 test	 ebx, ebx
  004a7	7e 66		 jle	 SHORT $LN12@serverWind
  004a9	bf 00 00 00 00	 mov	 edi, OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  004ae	66 90		 npad	 2
$LL13@serverWind:

; 6144 : 			{
; 6145 : 				if (strlen(msgWN[i]) > 0)

  004b0	8b c7		 mov	 eax, edi
  004b2	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  004b5	89 8d a8 fe ff
	ff		 mov	 DWORD PTR tv898[ebp], ecx
  004bb	0f 1f 44 00 00	 npad	 5
$LL80@serverWind:
  004c0	8a 08		 mov	 cl, BYTE PTR [eax]
  004c2	40		 inc	 eax
  004c3	84 c9		 test	 cl, cl
  004c5	75 f9		 jne	 SHORT $LL80@serverWind
  004c7	2b 85 a8 fe ff
	ff		 sub	 eax, DWORD PTR tv898[ebp]
  004cd	74 35		 je	 SHORT $LN11@serverWind

; 6146 : 				{
; 6147 : #ifdef _FONT_STYLE_
; 6148 : 					/*PutWinText(winX + (msgWN_W * 64 - msgWNLen * 9) / 2,
; 6149 : 						winY + ((winH * 48 - 56) / totalMsgLine) * i + (winH * 48 - totalMsgLine * lineSkip) / 2,
; 6150 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);*/
; 6151 : 					PutWinText(ptActMenuWin->x - 125,

  004cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lineSkip@?1??serverWindowType0@@YAXH@Z@4HA
  004d5	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  004d8	56		 push	 esi
  004d9	6a 00		 push	 0
  004db	0f af ce	 imul	 ecx, esi
  004de	57		 push	 edi
  004df	6a 00		 push	 0
  004e1	6a 01		 push	 1
  004e3	83 c1 ba	 add	 ecx, -70		; ffffffbaH
  004e6	03 c1		 add	 eax, ecx
  004e8	50		 push	 eax
  004e9	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  004ec	83 e8 7d	 sub	 eax, 125		; 0000007dH
  004ef	50		 push	 eax
  004f0	e8 00 00 00 00	 call	 ?PutWinText@@YAXHHDHPADHH@Z ; PutWinText
  004f5	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  004fb	83 c4 1c	 add	 esp, 28			; 0000001cH
  004fe	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?msgLine@?1??serverWindowType0@@YAXH@Z@4HA
$LN11@serverWind:

; 6142 : 		{
; 6143 : 			for (i = 0; i < msgLine; i++)

  00504	46		 inc	 esi
  00505	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  0050b	3b f3		 cmp	 esi, ebx
  0050d	7c a1		 jl	 SHORT $LL13@serverWind
$LN12@serverWind:

; 6152 : 						ptActMenuWin->y -70 + i * lineSkip,
; 6153 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0, i);
; 6154 : #else
; 6155 : 					StockFontBuffer(winX + (msgWN_W * 64 - msgWNLen * 9) / 2,
; 6156 : 						winY + ((winH * 48 - 56) / totalMsgLine) * i + (winH * 48 - totalMsgLine * lineSkip) / 2,
; 6157 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msgWN[i], 0);
; 6158 : #endif
; 6159 : 				}
; 6160 : 			}
; 6161 : 			j = 0;
; 6162 : 			int _btnLoc[6][2] =
; 6163 : 			{
; 6164 : 				{ 200,68},

  0050f	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000440000006400000044000000c8
  00516	8d bd b4 fe ff
	ff		 lea	 edi, DWORD PTR __btnLoc$1[ebp]
  0051c	0f 11 85 b4 fe
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp], xmm0
  00523	33 c0		 xor	 eax, eax

; 6165 : 				{ 100,68},
; 6166 : 				{ 200,68},
; 6167 : 				{ 100,68},
; 6168 : 				{ 200,68},
; 6169 : 				{ 100,68}
; 6170 : 			};
; 6171 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  00525	bb 01 00 00 00	 mov	 ebx, 1
  0052a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000440000006400000044000000c8
  00531	33 f6		 xor	 esi, esi
  00533	0f 11 85 c4 fe
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+16], xmm0
  0053a	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  00540	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000000440000006400000044000000c8
  00547	0f 11 85 d4 fe
	ff ff		 movups	 XMMWORD PTR __btnLoc$1[ebp+32], xmm0
  0054e	66 90		 npad	 2
$LL16@serverWind:

; 6172 : 			{
; 6173 : 				fontId[i] = -2;

  00550	c7 86 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA[esi], -2 ; fffffffeH

; 6174 : 				if (buttonTypeWN & mask)

  0055a	85 1d 00 00 00
	00		 test	 DWORD PTR ?buttonTypeWN@@3HA, ebx ; buttonTypeWN
  00560	74 41		 je	 SHORT $LN14@serverWind

; 6175 : 				{
; 6176 : 					if (j < btnCnt)

  00562	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?btnCnt@?1??serverWindowType0@@YAXH@Z@4HA
  00568	7d 39		 jge	 SHORT $LN14@serverWind

; 6177 : 					{
; 6178 : 						fontId[i] = StockDispBuffer(ptActMenuWin->x + _btnLoc[i][0], ptActMenuWin->y + _btnLoc[i][1], DISP_PRIO_IME3, _btnTitle[i], 2);

  0056a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0056d	03 42 1c	 add	 eax, DWORD PTR [edx+28]
  00570	6a 02		 push	 2
  00572	ff b4 35 e4 fe
	ff ff		 push	 DWORD PTR __btnTitle$[ebp+esi]
  00579	6a 69		 push	 105			; 00000069H
  0057b	50		 push	 eax
  0057c	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0057f	03 07		 add	 eax, DWORD PTR [edi]
  00581	50		 push	 eax
  00582	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 6179 : 							
; 6180 : 						/*StockFontBuffer(winX + btnLoc[j][0], winY + btnLoc[j][1],
; 6181 : 								FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 2);*/
; 6182 : 						j++;

  00587	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0058d	83 c4 14	 add	 esp, 20			; 00000014H
  00590	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??serverWindowType0@@YAXH@Z@4PAHA[esi], eax
  00596	8b 85 b0 fe ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  0059c	40		 inc	 eax
  0059d	89 85 b0 fe ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
$LN14@serverWind:

; 6165 : 				{ 100,68},
; 6166 : 				{ 200,68},
; 6167 : 				{ 100,68},
; 6168 : 				{ 200,68},
; 6169 : 				{ 100,68}
; 6170 : 			};
; 6171 : 			for (i = 0, mask = 1; i < 6; i++, mask <<= 1)

  005a3	83 c6 04	 add	 esi, 4
  005a6	83 c7 08	 add	 edi, 8
  005a9	03 db		 add	 ebx, ebx
  005ab	83 fe 18	 cmp	 esi, 24			; 00000018H
  005ae	7c a0		 jl	 SHORT $LL16@serverWind

; 6183 : 					}
; 6184 : 				}
; 6185 : 			}
; 6186 : 			// î¼???î¸î
; 6187 : 			if (mode == 1)

  005b0	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  005b4	75 13		 jne	 SHORT $LN41@serverWind

; 6188 : 			{
; 6189 : 				StockFontBuffer2(&input);

  005b6	68 00 00 00 00	 push	 OFFSET ?input@?1??serverWindowType0@@YAXH@Z@4USTR_BUFFER@@A
  005bb	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  005c0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  005c6	83 c4 04	 add	 esp, 4
$LN41@serverWind:

; 6190 : 			}
; 6191 : 			if (thisAction != nullptr)

  005c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A
  005ce	85 c0		 test	 eax, eax
  005d0	74 3d		 je	 SHORT $LN42@serverWind

; 6192 : 			{
; 6193 : 				pattern(thisAction, ANM_NOMAL_SPD, ANM_LOOP);

  005d2	6a 00		 push	 0
  005d4	6a 00		 push	 0
  005d6	50		 push	 eax
  005d7	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 6194 : 				StockFontBuffer(ptActMenuWin->x - 275, ptActMenuWin->y + 57, FONT_PRIO_FRONT, FONT_PAL_YELLOW, thisAction->name, 0);

  005dc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A
  005e1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  005e7	83 c0 38	 add	 eax, 56			; 00000038H
  005ea	6a 00		 push	 0
  005ec	50		 push	 eax
  005ed	6a 04		 push	 4
  005ef	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  005f2	83 c0 39	 add	 eax, 57			; 00000039H
  005f5	6a 01		 push	 1
  005f7	50		 push	 eax
  005f8	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  005fb	2d 13 01 00 00	 sub	 eax, 275		; 00000113H
  00600	50		 push	 eax
  00601	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00606	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  0060c	83 c4 24	 add	 esp, 36			; 00000024H
$LN42@serverWind:

; 6195 : 			}
; 6196 : 			StockDispBuffer(ptActMenuWin->x-222, ptActMenuWin->y-1, DISP_PRIO_MENU, IMAGE_NPC_HOLDER, 1);

  0060f	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  00612	6a 01		 push	 1
  00614	68 ae 04 01 00	 push	 66734			; 000104aeH
  00619	48		 dec	 eax
  0061a	6a 68		 push	 104			; 00000068H
  0061c	50		 push	 eax
  0061d	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00620	2d de 00 00 00	 sub	 eax, 222		; 000000deH
  00625	50		 push	 eax
  00626	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 6197 : 			StockDispBuffer(ptActMenuWin->x, ptActMenuWin->y, DISP_PRIO_MENU, IMAGE_NPC_WINDOW, 1);

  0062b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00630	6a 01		 push	 1
  00632	68 ad 04 01 00	 push	 66733			; 000104adH
  00637	6a 68		 push	 104			; 00000068H
  00639	ff 70 1c	 push	 DWORD PTR [eax+28]
  0063c	ff 70 18	 push	 DWORD PTR [eax+24]
  0063f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00644	83 c4 28	 add	 esp, 40			; 00000028H
  00647	5f		 pop	 edi

; 6198 : 		}
; 6199 : 	}
; 6200 : }

  00648	5e		 pop	 esi
  00649	5b		 pop	 ebx
  0064a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0064d	33 cd		 xor	 ecx, ebp
  0064f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00654	8b e5		 mov	 esp, ebp
  00656	5d		 pop	 ebp
  00657	c3		 ret	 0
$LN30@serverWind:

; 6104 : 		{
; 6105 : 			id = 100;
; 6106 : 			windowTypeWN = -1;
; 6107 : 			wnCloseFlag = 0;

  00658	33 c0		 xor	 eax, eax
  0065a	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN83@serverWind:

; 6124 : 		}
; 6125 : 
; 6126 : 		if (id >= 0)
; 6127 : 		{
; 6128 : 			DeathAction(ptActMenuWin);

  00660	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
$LN79@serverWind:
  0066a	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  00670	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 6129 : 			ptActMenuWin = NULL;
; 6130 : 			DeathAction(thisAction);

  00675	ff 35 00 00 00
	00		 push	 DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A
  0067b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
  00685	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0068a	83 c4 08	 add	 esp, 8

; 6131 : 			thisAction = nullptr;

  0068d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?thisAction@?1??serverWindowType0@@YAXH@Z@4PAUaction@@A, 0

; 6132 : 
; 6133 : 			if (mode == 1)

  00697	83 7d 08 01	 cmp	 DWORD PTR _mode$[ebp], 1
  0069b	75 0d		 jne	 SHORT $LN37@serverWind

; 6134 : 			{
; 6135 : 				GetKeyInputFocus(&MyChatBuffer);

  0069d	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  006a2	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  006a7	83 c4 04	 add	 esp, 4
$LN37@serverWind:

; 6198 : 		}
; 6199 : 	}
; 6200 : }

  006aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006ad	5f		 pop	 edi
  006ae	5e		 pop	 esi
  006af	33 cd		 xor	 ecx, ebp
  006b1	5b		 pop	 ebx
  006b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006b7	8b e5		 mov	 esp, ebp
  006b9	5d		 pop	 ebp
  006ba	c3		 ret	 0
?serverWindowType0@@YAXH@Z ENDP				; serverWindowType0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType7@@YAXPAD@Z
_TEXT	SEGMENT
_msg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowType7@@YAXPAD@Z PROC			; initServerWindowType7, COMDAT

; 5945 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 5946 : 	char msg[256];
; 5947 : 
; 5948 : 	shopWindowProcNo = 0;

  00017	33 c0		 xor	 eax, eax
  00019	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 5949 : 
; 5950 : 	getStringToken(data, '|', 1, sizeof(msg) - 1, msg);

  0001f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00025	50		 push	 eax
  00026	68 ff 00 00 00	 push	 255			; 000000ffH
  0002b	6a 01		 push	 1
  0002d	6a 7c		 push	 124			; 0000007cH
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5951 : 	makeStringFromEscaped(msg);

  00035	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5952 : 	strncpy(shopWindow1Title, msg, sizeof(shopWindow1Title) - 1);

  00041	6a 1a		 push	 26			; 0000001aH
  00043	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0004f	e8 00 00 00 00	 call	 _strncpy

; 5953 : 	shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5954 : 
; 5955 : 	getStringToken(data, '|', 2, sizeof(msg) - 1, msg);

  00054	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0005a	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  00061	50		 push	 eax
  00062	68 ff 00 00 00	 push	 255			; 000000ffH
  00067	6a 02		 push	 2
  00069	6a 7c		 push	 124			; 0000007cH
  0006b	56		 push	 esi
  0006c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5956 : 	makeStringFromEscaped(msg);

  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5957 : 	strncpy(shopWindow1Msg, msg, sizeof(shopWindow1Msg) - 1);

  0007d	6a 1a		 push	 26			; 0000001aH
  0007f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00085	50		 push	 eax
  00086	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  0008b	e8 00 00 00 00	 call	 _strncpy

; 5958 : 	shopWindow1Msg[sizeof(shopWindow1Msg) - 1] = '\0';
; 5959 : }

  00090	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00093	83 c4 48	 add	 esp, 72			; 00000048H
  00096	33 cd		 xor	 ecx, ebp
  00098	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Msg@@3PADA+26, 0
  0009f	5e		 pop	 esi
  000a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a5	8b e5		 mov	 esp, ebp
  000a7	5d		 pop	 ebp
  000a8	c3		 ret	 0
?initServerWindowType7@@YAXPAD@Z ENDP			; initServerWindowType7
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType6@@YAXPAD@Z
_TEXT	SEGMENT
tv1067 = -980						; size = 4
tv1066 = -980						; size = 4
_i$2$ = -976						; size = 4
_i$1$ = -976						; size = 4
tv1063 = -972						; size = 4
_j$1$ = -972						; size = 4
tv1068 = -968						; size = 4
_j$2$ = -968						; size = 4
_info$ = -964						; size = 256
_msg2$ = -708						; size = 256
_msg3$ = -452						; size = 128
_msg1$ = -324						; size = 128
_title1$ = -196						; size = 128
_itemName$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowType6@@YAXPAD@Z PROC			; initServerWindowType6, COMDAT

; 5783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d4 03 00
	00		 sub	 esp, 980		; 000003d4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _data$[ebp]
  00017	56		 push	 esi
  00018	57		 push	 edi

; 5784 : 	char title1[128];
; 5785 : 	char msg1[128];
; 5786 : 	char msg2[256];
; 5787 : 	char msg3[128];
; 5788 : 	char itemName[64];
; 5789 : 	char info[256];
; 5790 : 	int i, j;
; 5791 : 	int flag;
; 5792 : 
; 5793 : #ifdef _ITEM_PILENUMS
; 5794 : 	int datalen = 7;
; 5795 : #else
; 5796 : 	int datalen = 6;
; 5797 : #endif
; 5798 : 
; 5799 : 	shopWindowMode = getIntegerToken(data, '|', 1);

  00019	6a 01		 push	 1
  0001b	6a 7c		 push	 124			; 0000007cH
  0001d	53		 push	 ebx
  0001e	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00023	0f b7 c0	 movzx	 eax, ax
  00026	33 c9		 xor	 ecx, ecx
  00028	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002b	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowMode@@3FA, ax ; shopWindowMode
  00031	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, cx ; shopWondow2Page
  00038	66 85 c0	 test	 ax, ax

; 5800 : 	if (shopWindowMode == 0) {

  0003b	0f 85 9d 02 00
	00		 jne	 $LN8@initServer

; 5801 : 		shopWindowProcNo = 10;
; 5802 : 		shopWondow2Page = 0;
; 5803 : 		restPoolSlot = getIntegerToken(data, '|', 2);

  00041	6a 02		 push	 2
  00043	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00048	6a 7c		 push	 124			; 0000007cH
  0004a	53		 push	 ebx
  0004b	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo
  00051	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?restPoolSlot@@3HA, eax ; restPoolSlot

; 5804 : 		getStringToken(data, '|', 3, sizeof(title1) - 1, title1);

  0005b	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00061	50		 push	 eax
  00062	6a 7f		 push	 127			; 0000007fH
  00064	6a 03		 push	 3
  00066	6a 7c		 push	 124			; 0000007cH
  00068	53		 push	 ebx
  00069	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5805 : 		makeStringFromEscaped(title1);

  0006e	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00074	50		 push	 eax
  00075	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5806 : 		getStringToken(data, '|', 4, sizeof(msg1) - 1, msg1);

  0007a	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  00080	50		 push	 eax
  00081	6a 7f		 push	 127			; 0000007fH
  00083	6a 04		 push	 4
  00085	6a 7c		 push	 124			; 0000007cH
  00087	53		 push	 ebx
  00088	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5807 : 		makeStringFromEscaped(msg1);

  0008d	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  00093	50		 push	 eax
  00094	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5808 : 		getStringToken(data, '|', 5, sizeof(msg2) - 1, msg2);

  00099	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0009f	50		 push	 eax
  000a0	68 ff 00 00 00	 push	 255			; 000000ffH
  000a5	6a 05		 push	 5
  000a7	6a 7c		 push	 124			; 0000007cH
  000a9	53		 push	 ebx
  000aa	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000af	83 c4 50	 add	 esp, 80			; 00000050H

; 5809 : 		makeStringFromEscaped(msg2);

  000b2	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  000b8	50		 push	 eax
  000b9	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5810 : 		getStringToken(data, '|', 6, sizeof(msg3) - 1, msg3);

  000be	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  000c4	50		 push	 eax
  000c5	6a 7f		 push	 127			; 0000007fH
  000c7	6a 06		 push	 6
  000c9	6a 7c		 push	 124			; 0000007cH
  000cb	53		 push	 ebx
  000cc	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5811 : 		makeStringFromEscaped(msg3);

  000d1	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5812 : 
; 5813 : 		strncpy(shopWindow1Title, title1, sizeof(shopWindow1Title) - 1);

  000dd	6a 1a		 push	 26			; 0000001aH
  000df	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  000e5	50		 push	 eax
  000e6	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  000eb	e8 00 00 00 00	 call	 _strncpy

; 5814 : 		shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5815 : 
; 5816 : 		getStrSplit((char*)shopWindow2Msg, msg1,

  000f0	6a 2c		 push	 44			; 0000002cH
  000f2	6a 02		 push	 2
  000f4	6a 2d		 push	 45			; 0000002dH
  000f6	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  000fc	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  00103	50		 push	 eax
  00104	68 00 00 00 00	 push	 OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  00109	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5817 : 			sizeof(shopWindow2Msg[0]),
; 5818 : 			sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]),
; 5819 : 			sizeof(shopWindow2Msg[0]) - 1);
; 5820 : 
; 5821 : 		getStrSplit((char*)shopWindow4Msg, msg2,

  0010e	6a 26		 push	 38			; 00000026H
  00110	6a 02		 push	 2
  00112	6a 27		 push	 39			; 00000027H
  00114	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0011a	50		 push	 eax
  0011b	68 00 00 00 00	 push	 OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
  00120	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  00125	83 c4 50	 add	 esp, 80			; 00000050H

; 5822 : 			sizeof(shopWindow4Msg[0]),
; 5823 : 			sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]),
; 5824 : 			sizeof(shopWindow4Msg[0]) - 1);
; 5825 : 
; 5826 : 		getStrSplit((char*)shopWindow5Msg, msg3,

  00128	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  0012e	6a 26		 push	 38			; 00000026H
  00130	6a 02		 push	 2
  00132	6a 27		 push	 39			; 00000027H
  00134	50		 push	 eax
  00135	68 00 00 00 00	 push	 OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  0013a	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5827 : 			sizeof(shopWindow5Msg[0]),
; 5828 : 			sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]),
; 5829 : 			sizeof(shopWindow5Msg[0]) - 1);
; 5830 : 
; 5831 : 
; 5832 : 		shopWondow2MaxPage = MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE;

  0013f	b8 68 00 00 00	 mov	 eax, 104		; 00000068H

; 5833 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00144	c7 85 30 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  0014e	83 c4 14	 add	 esp, 20			; 00000014H
  00151	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  00157	33 c0		 xor	 eax, eax
  00159	89 85 34 fc ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  0015f	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  00162	b8 04 00 00 00	 mov	 eax, 4
  00167	be 08 00 00 00	 mov	 esi, 8
  0016c	2b c1		 sub	 eax, ecx
  0016e	89 b5 38 fc ff
	ff		 mov	 DWORD PTR tv1068[ebp], esi
  00174	bf 0c 00 00 00	 mov	 edi, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+12
  00179	89 85 2c fc ff
	ff		 mov	 DWORD PTR tv1067[ebp], eax
  0017f	90		 npad	 1
$LL4@initServer:

; 5834 : 			flag = getStringToken(data, '|', 7 + i * datalen, sizeof(itemName) - 1, itemName);

  00180	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00183	50		 push	 eax
  00184	6a 3f		 push	 63			; 0000003fH
  00186	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00189	50		 push	 eax
  0018a	6a 7c		 push	 124			; 0000007cH
  0018c	53		 push	 ebx
  0018d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00192	8b f0		 mov	 esi, eax

; 5835 : 			makeStringFromEscaped(itemName);

  00194	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  0019d	83 c4 18	 add	 esp, 24			; 00000018H

; 5836 : 			if (flag) {

  001a0	85 f6		 test	 esi, esi
  001a2	74 0f		 je	 SHORT $LN10@initServer

; 5837 : 				poolItem[i].name[0] = '\0';
; 5838 : 				continue;

  001a4	8b b5 38 fc ff
	ff		 mov	 esi, DWORD PTR tv1068[ebp]
  001aa	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  001ae	e9 d2 00 00 00	 jmp	 $LN2@initServer
$LN10@initServer:

; 5839 : 			}
; 5840 : 
; 5841 : 			j++;

  001b3	ff 85 34 fc ff
	ff		 inc	 DWORD PTR _j$1$[ebp]

; 5842 : 			if (strlen(itemName) <= ITEM_NAME_LEN) {

  001b9	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  001bc	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  001bf	90		 npad	 1
$LL41@initServer:
  001c0	8a 01		 mov	 al, BYTE PTR [ecx]
  001c2	41		 inc	 ecx
  001c3	84 c0		 test	 al, al
  001c5	75 f9		 jne	 SHORT $LL41@initServer
  001c7	2b ca		 sub	 ecx, edx
  001c9	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  001cc	77 21		 ja	 SHORT $LN11@initServer

; 5843 : 				strcpy(poolItem[i].name, itemName);

  001ce	8b 95 2c fc ff
	ff		 mov	 edx, DWORD PTR tv1067[ebp]
  001d4	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  001d7	03 d7		 add	 edx, edi
  001d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL23@initServer:
  001e0	8a 01		 mov	 al, BYTE PTR [ecx]
  001e2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001e5	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  001e9	84 c0		 test	 al, al
  001eb	75 f3		 jne	 SHORT $LL23@initServer

; 5844 : 			}

  001ed	eb 07		 jmp	 SHORT $LN12@initServer
$LN11@initServer:

; 5845 : 			else {
; 5846 : 				strcpy(poolItem[i].name, "???");

  001ef	c7 47 04 3f 3f
	3f 00		 mov	 DWORD PTR [edi+4], 4144959 ; 003f3f3fH
$LN12@initServer:

; 5847 : 			}
; 5848 : 			poolItem[i].poolFlag = getIntegerToken(data, '|', 8 + i * datalen);

  001f6	8b b5 38 fc ff
	ff		 mov	 esi, DWORD PTR tv1068[ebp]
  001fc	56		 push	 esi
  001fd	6a 7c		 push	 124			; 0000007cH
  001ff	53		 push	 ebx
  00200	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00205	66 89 07	 mov	 WORD PTR [edi], ax

; 5849 : 			poolItem[i].price = getIntegerToken(data, '|', 9 + i * datalen);

  00208	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0020b	50		 push	 eax
  0020c	6a 7c		 push	 124			; 0000007cH
  0020e	53		 push	 ebx
  0020f	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00214	89 47 f8	 mov	 DWORD PTR [edi-8], eax

; 5850 : 			poolItem[i].graNo = getIntegerToken(data, '|', 10 + i * datalen);

  00217	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  0021a	50		 push	 eax
  0021b	6a 7c		 push	 124			; 0000007cH
  0021d	53		 push	 ebx
  0021e	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00223	89 47 fc	 mov	 DWORD PTR [edi-4], eax

; 5851 : 			getStringToken(data, '|', 11 + i * datalen, sizeof(info) - 1, info);

  00226	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  0022c	50		 push	 eax
  0022d	68 ff 00 00 00	 push	 255			; 000000ffH
  00232	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  00235	50		 push	 eax
  00236	6a 7c		 push	 124			; 0000007cH
  00238	53		 push	 ebx
  00239	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5852 : 
; 5853 : #ifdef _ITEM_PILENUMS
; 5854 : 			poolItem[i].num = getIntegerToken(data, '|', 12 + i * datalen);

  0023e	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00241	50		 push	 eax
  00242	6a 7c		 push	 124			; 0000007cH
  00244	53		 push	 ebx
  00245	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0024a	83 c4 44	 add	 esp, 68			; 00000044H
  0024d	89 47 78	 mov	 DWORD PTR [edi+120], eax

; 5855 : #endif
; 5856 : 			makeStringFromEscaped(info);

  00250	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00256	50		 push	 eax
  00257	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5857 : 			getStrSplit((char*)(&poolItem[i].info), info,

  0025c	6a 1c		 push	 28			; 0000001cH
  0025e	6a 03		 push	 3
  00260	6a 1d		 push	 29			; 0000001dH
  00262	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00268	50		 push	 eax
  00269	8d 47 21	 lea	 eax, DWORD PTR [edi+33]
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5858 : 				sizeof(poolItem[0].info[0]),
; 5859 : 				sizeof(poolItem[0].info) / sizeof(poolItem[0].info[0]),
; 5860 : 				sizeof(poolItem[0].info[0]) - 1);
; 5861 : #ifdef _ITEM_PILENUMS
; 5862 : 			poolItem[i].tbl = getIntegerToken(data, '|', 13 + i * datalen);

  00272	8d 46 05	 lea	 eax, DWORD PTR [esi+5]
  00275	50		 push	 eax
  00276	6a 7c		 push	 124			; 0000007cH
  00278	53		 push	 ebx
  00279	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0027e	83 c4 24	 add	 esp, 36			; 00000024H
  00281	66 89 47 02	 mov	 WORD PTR [edi+2], ax
$LN2@initServer:

; 5833 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00285	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  0028b	83 c6 07	 add	 esi, 7
  0028e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00295	41		 inc	 ecx
  00296	81 c7 88 00 00
	00		 add	 edi, 136		; 00000088H
  0029c	89 8d 30 fc ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  002a2	89 b5 38 fc ff
	ff		 mov	 DWORD PTR tv1068[ebp], esi
  002a8	3b c8		 cmp	 ecx, eax
  002aa	0f 8c d0 fe ff
	ff		 jl	 $LL4@initServer

; 5863 : #else
; 5864 : 			poolItem[i].tbl = getIntegerToken(data, '|', 12 + i * datalen);
; 5865 : #endif
; 5866 : 		}
; 5867 : 		if (j > 0) {

  002b0	8b 85 34 fc ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  002b6	85 c0		 test	 eax, eax
  002b8	7e 17		 jle	 SHORT $LN13@initServer

; 5868 : 			shopWondow2MaxPage = (j + 7) / MAX_POOL_SHOP_ITEM;

  002ba	83 c0 07	 add	 eax, 7
  002bd	99		 cdq
  002be	83 e2 07	 and	 edx, 7
  002c1	03 c2		 add	 eax, edx
  002c3	c1 f8 03	 sar	 eax, 3
  002c6	0f b7 c0	 movzx	 eax, ax

; 5872 : 		}
; 5873 : 	}

  002c9	0f b7 c0	 movzx	 eax, ax
  002cc	e9 8e 02 00 00	 jmp	 $LN43@initServer
$LN13@initServer:

; 5869 : 		}
; 5870 : 		else {
; 5871 : 			shopWondow2MaxPage = 1;

  002d1	b8 01 00 00 00	 mov	 eax, 1

; 5872 : 		}
; 5873 : 	}

  002d6	0f b7 c0	 movzx	 eax, ax
  002d9	e9 81 02 00 00	 jmp	 $LN43@initServer
$LN8@initServer:

; 5874 : 	else {
; 5875 : 		shopWindowProcNo = 100;

  002de	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  002e3	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 5876 : 		shopWondow2Page = 0;
; 5877 : 		getStringToken(data, '|', 2, sizeof(title1) - 1, title1);

  002e9	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  002ef	50		 push	 eax
  002f0	6a 7f		 push	 127			; 0000007fH
  002f2	6a 02		 push	 2
  002f4	6a 7c		 push	 124			; 0000007cH
  002f6	53		 push	 ebx
  002f7	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5878 : 		makeStringFromEscaped(title1);

  002fc	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00302	50		 push	 eax
  00303	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5879 : 		getStringToken(data, '|', 3, sizeof(msg1) - 1, msg1);

  00308	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  0030e	50		 push	 eax
  0030f	6a 7f		 push	 127			; 0000007fH
  00311	6a 03		 push	 3
  00313	6a 7c		 push	 124			; 0000007cH
  00315	53		 push	 ebx
  00316	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5880 : 		makeStringFromEscaped(msg1);

  0031b	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  00321	50		 push	 eax
  00322	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5881 : 		getStringToken(data, '|', 4, sizeof(msg2) - 1, msg2);

  00327	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0032d	50		 push	 eax
  0032e	68 ff 00 00 00	 push	 255			; 000000ffH
  00333	6a 04		 push	 4
  00335	6a 7c		 push	 124			; 0000007cH
  00337	53		 push	 ebx
  00338	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0033d	83 c4 44	 add	 esp, 68			; 00000044H

; 5882 : 		makeStringFromEscaped(msg2);

  00340	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00346	50		 push	 eax
  00347	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5883 : 		getStringToken(data, '|', 5, sizeof(msg3) - 1, msg3);

  0034c	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  00352	50		 push	 eax
  00353	6a 7f		 push	 127			; 0000007fH
  00355	6a 05		 push	 5
  00357	6a 7c		 push	 124			; 0000007cH
  00359	53		 push	 ebx
  0035a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5884 : 		makeStringFromEscaped(msg3);

  0035f	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  00365	50		 push	 eax
  00366	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5885 : 
; 5886 : 		strncpy(shopWindow1Title, title1, sizeof(shopWindow1Title) - 1);

  0036b	6a 1a		 push	 26			; 0000001aH
  0036d	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00373	50		 push	 eax
  00374	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00379	e8 00 00 00 00	 call	 _strncpy

; 5887 : 		shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5888 : 		getStrSplit((char*)shopWindow2Msg, msg1,

  0037e	6a 2c		 push	 44			; 0000002cH
  00380	6a 02		 push	 2
  00382	6a 2d		 push	 45			; 0000002dH
  00384	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  0038a	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  00391	50		 push	 eax
  00392	68 00 00 00 00	 push	 OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  00397	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5889 : 			sizeof(shopWindow2Msg[0]),
; 5890 : 			sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]),
; 5891 : 			sizeof(shopWindow2Msg[0]) - 1);
; 5892 : 
; 5893 : 		getStrSplit((char*)shopWindow4Msg, msg2,

  0039c	6a 26		 push	 38			; 00000026H
  0039e	6a 02		 push	 2
  003a0	6a 27		 push	 39			; 00000027H
  003a2	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  003a8	50		 push	 eax
  003a9	68 00 00 00 00	 push	 OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
  003ae	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  003b3	83 c4 50	 add	 esp, 80			; 00000050H

; 5894 : 			sizeof(shopWindow4Msg[0]),
; 5895 : 			sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]),
; 5896 : 			sizeof(shopWindow4Msg[0]) - 1);
; 5897 : 
; 5898 : 		getStrSplit((char*)shopWindow5Msg, msg3,

  003b6	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  003bc	6a 26		 push	 38			; 00000026H
  003be	6a 02		 push	 2
  003c0	6a 27		 push	 39			; 00000027H
  003c2	50		 push	 eax
  003c3	68 00 00 00 00	 push	 OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  003c8	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5899 : 			sizeof(shopWindow5Msg[0]),
; 5900 : 			sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]),
; 5901 : 			sizeof(shopWindow5Msg[0]) - 1);
; 5902 : 
; 5903 : 
; 5904 : 		shopWondow2MaxPage = MAX_POOL_SHOP_ITEM * MAX_POOL_SHOP_PAGE;

  003cd	b8 68 00 00 00	 mov	 eax, 104		; 00000068H

; 5905 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  003d2	c7 85 30 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2$[ebp], 0
  003dc	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  003e2	83 c4 14	 add	 esp, 20			; 00000014H
  003e5	33 c0		 xor	 eax, eax
  003e7	be 07 00 00 00	 mov	 esi, 7
  003ec	89 85 38 fc ff
	ff		 mov	 DWORD PTR _j$2$[ebp], eax
  003f2	bf 0c 00 00 00	 mov	 edi, OFFSET ?poolItem@@3PAUPOOL_SHOP@@A+12
  003f7	89 b5 34 fc ff
	ff		 mov	 DWORD PTR tv1063[ebp], esi
  003fd	b8 04 00 00 00	 mov	 eax, 4

; 5874 : 	else {
; 5875 : 		shopWindowProcNo = 100;

  00402	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  00405	2b c1		 sub	 eax, ecx
  00407	89 85 2c fc ff
	ff		 mov	 DWORD PTR tv1066[ebp], eax
  0040d	0f 1f 00	 npad	 3
$LL7@initServer:

; 5906 : 			// ????î¡
; 5907 : 			flag = getStringToken(data, '|', 6 + i * datalen, sizeof(itemName) - 1, itemName);

  00410	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00413	50		 push	 eax
  00414	6a 3f		 push	 63			; 0000003fH
  00416	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00419	50		 push	 eax
  0041a	6a 7c		 push	 124			; 0000007cH
  0041c	53		 push	 ebx
  0041d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00422	8b f0		 mov	 esi, eax

; 5908 : 			makeStringFromEscaped(itemName);

  00424	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00427	50		 push	 eax
  00428	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  0042d	83 c4 18	 add	 esp, 24			; 00000018H

; 5909 : 			if (flag) {

  00430	85 f6		 test	 esi, esi
  00432	74 0f		 je	 SHORT $LN15@initServer

; 5910 : 				poolItem[i].name[0] = '\0';
; 5911 : 				continue;

  00434	8b b5 34 fc ff
	ff		 mov	 esi, DWORD PTR tv1063[ebp]
  0043a	c6 47 04 00	 mov	 BYTE PTR [edi+4], 0
  0043e	e9 d1 00 00 00	 jmp	 $LN5@initServer
$LN15@initServer:

; 5912 : 			}
; 5913 : 
; 5914 : 			j++;

  00443	ff 85 38 fc ff
	ff		 inc	 DWORD PTR _j$2$[ebp]

; 5915 : 			if (strlen(itemName) <= ITEM_NAME_LEN) {

  00449	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  0044c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0044f	90		 npad	 1
$LL42@initServer:
  00450	8a 01		 mov	 al, BYTE PTR [ecx]
  00452	41		 inc	 ecx
  00453	84 c0		 test	 al, al
  00455	75 f9		 jne	 SHORT $LL42@initServer
  00457	2b ca		 sub	 ecx, edx
  00459	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0045c	77 21		 ja	 SHORT $LN16@initServer

; 5916 : 				strcpy(poolItem[i].name, itemName);

  0045e	8b 95 2c fc ff
	ff		 mov	 edx, DWORD PTR tv1066[ebp]
  00464	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00467	03 d7		 add	 edx, edi
  00469	0f 1f 80 00 00
	00 00		 npad	 7
$LL26@initServer:
  00470	8a 08		 mov	 cl, BYTE PTR [eax]
  00472	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00475	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00479	84 c9		 test	 cl, cl
  0047b	75 f3		 jne	 SHORT $LL26@initServer

; 5917 : 			}

  0047d	eb 07		 jmp	 SHORT $LN17@initServer
$LN16@initServer:

; 5918 : 			else {
; 5919 : 				strcpy(poolItem[i].name, "???");

  0047f	c7 47 04 3f 3f
	3f 00		 mov	 DWORD PTR [edi+4], 4144959 ; 003f3f3fH
$LN17@initServer:

; 5920 : 			}
; 5921 : 			poolItem[i].poolFlag = getIntegerToken(data, '|', 7 + i * datalen);

  00486	8b b5 34 fc ff
	ff		 mov	 esi, DWORD PTR tv1063[ebp]
  0048c	56		 push	 esi
  0048d	6a 7c		 push	 124			; 0000007cH
  0048f	53		 push	 ebx
  00490	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00495	66 89 07	 mov	 WORD PTR [edi], ax

; 5922 : 			poolItem[i].level = getIntegerToken(data, '|', 8 + i * datalen);

  00498	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0049b	50		 push	 eax
  0049c	6a 7c		 push	 124			; 0000007cH
  0049e	53		 push	 ebx
  0049f	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  004a4	89 47 f4	 mov	 DWORD PTR [edi-12], eax

; 5923 : 			poolItem[i].price = getIntegerToken(data, '|', 9 + i * datalen);

  004a7	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  004aa	50		 push	 eax
  004ab	6a 7c		 push	 124			; 0000007cH
  004ad	53		 push	 ebx
  004ae	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  004b3	89 47 f8	 mov	 DWORD PTR [edi-8], eax

; 5924 : 			poolItem[i].graNo = getIntegerToken(data, '|', 10 + i * datalen);

  004b6	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  004b9	50		 push	 eax
  004ba	6a 7c		 push	 124			; 0000007cH
  004bc	53		 push	 ebx
  004bd	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  004c2	89 47 fc	 mov	 DWORD PTR [edi-4], eax

; 5925 : 			getStringToken(data, '|', 11 + i * datalen, sizeof(info) - 1, info);

  004c5	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  004cb	50		 push	 eax
  004cc	68 ff 00 00 00	 push	 255			; 000000ffH
  004d1	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  004d4	50		 push	 eax
  004d5	6a 7c		 push	 124			; 0000007cH
  004d7	53		 push	 ebx
  004d8	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  004dd	83 c4 44	 add	 esp, 68			; 00000044H

; 5926 : #ifdef _ITEM_PILENUMS
; 5927 : 			poolItem[i].num = getIntegerToken(data, '|', 12 + i * datalen);

  004e0	8d 46 05	 lea	 eax, DWORD PTR [esi+5]
  004e3	50		 push	 eax
  004e4	6a 7c		 push	 124			; 0000007cH
  004e6	53		 push	 ebx
  004e7	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  004ec	89 47 78	 mov	 DWORD PTR [edi+120], eax

; 5928 : #endif
; 5929 : 			makeStringFromEscaped(info);

  004ef	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  004f5	50		 push	 eax
  004f6	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5930 : 			getStrSplit((char*)(&poolItem[i].info), info,

  004fb	6a 1c		 push	 28			; 0000001cH
  004fd	6a 03		 push	 3
  004ff	6a 1d		 push	 29			; 0000001dH
  00501	8d 85 3c fc ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00507	50		 push	 eax
  00508	8d 47 21	 lea	 eax, DWORD PTR [edi+33]
  0050b	50		 push	 eax
  0050c	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  00511	83 c4 24	 add	 esp, 36			; 00000024H
$LN5@initServer:

; 5905 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00514	8b 8d 30 fc ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]
  0051a	83 c6 07	 add	 esi, 7
  0051d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00524	41		 inc	 ecx
  00525	81 c7 88 00 00
	00		 add	 edi, 136		; 00000088H
  0052b	89 8d 30 fc ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  00531	89 b5 34 fc ff
	ff		 mov	 DWORD PTR tv1063[ebp], esi
  00537	3b c8		 cmp	 ecx, eax
  00539	0f 8c d1 fe ff
	ff		 jl	 $LL7@initServer

; 5931 : 				sizeof(poolItem[i].info[0]),
; 5932 : 				sizeof(poolItem[i].info) / sizeof(poolItem[i].info[0]),
; 5933 : 				sizeof(userItem[i].info[0]) - 1);
; 5934 : 		}
; 5935 : 		if (j > 0) {

  0053f	8b 85 38 fc ff
	ff		 mov	 eax, DWORD PTR _j$2$[ebp]
  00545	85 c0		 test	 eax, eax
  00547	7e 11		 jle	 SHORT $LN18@initServer

; 5936 : 			shopWondow2MaxPage = (j + 7) / MAX_POOL_SHOP_ITEM;

  00549	83 c0 07	 add	 eax, 7
  0054c	99		 cdq
  0054d	83 e2 07	 and	 edx, 7
  00550	03 c2		 add	 eax, edx
  00552	c1 f8 03	 sar	 eax, 3
  00555	0f b7 c0	 movzx	 eax, ax

; 5937 : 		}

  00558	eb 05		 jmp	 SHORT $LN43@initServer
$LN18@initServer:

; 5938 : 		else {
; 5939 : 			shopWondow2MaxPage = 1;

  0055a	b8 01 00 00 00	 mov	 eax, 1
$LN43@initServer:

; 5940 : 		}
; 5941 : 	}
; 5942 : }

  0055f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00562	5f		 pop	 edi
  00563	5e		 pop	 esi
  00564	33 cd		 xor	 ecx, ebp
  00566	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  0056c	5b		 pop	 ebx
  0056d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00572	8b e5		 mov	 esp, ebp
  00574	5d		 pop	 ebp
  00575	c3		 ret	 0
?initServerWindowType6@@YAXPAD@Z ENDP			; initServerWindowType6
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType5@@YAXPAD@Z
_TEXT	SEGMENT
tv447 = -596						; size = 4
_i$1$ = -592						; size = 4
_data$GSCopy$1$ = -588					; size = 4
_j$1$ = -584						; size = 4
_info$ = -580						; size = 256
_msg2$ = -324						; size = 128
_title1$ = -196						; size = 128
_skillName$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowType5@@YAXPAD@Z PROC			; initServerWindowType5, COMDAT

; 5713 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 02 00
	00		 sub	 esp, 596		; 00000254H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 5714 : 	char title1[128], msg2[128], skillName[64], info[256];
; 5715 : 	int i, j, flag;
; 5716 : 	int iReadOffset = 3;
; 5717 : 
; 5718 : #ifdef _NB_å® æååºéå£°æè¦æ±		//[í« ì¤í¬ ìì ì ëªì±(/ìì )ì´ íìí¨]
; 5719 : 	iReadOffset = 4;
; 5720 : #endif
; 5721 : 
; 5722 : 	skillShopWindowProcNo = 0;

  00017	33 c0		 xor	 eax, eax

; 5723 : 	shopWondow2Page = 0;
; 5724 : 	if (getIntegerToken(data, '|', 1) == 0)

  00019	6a 01		 push	 1
  0001b	6a 7c		 push	 124			; 0000007cH
  0001d	56		 push	 esi
  0001e	89 b5 b4 fd ff
	ff		 mov	 DWORD PTR _data$GSCopy$1$[ebp], esi
  00024	66 a3 00 00 00
	00		 mov	 WORD PTR ?skillShopWindowProcNo@@3FA, ax ; skillShopWindowProcNo
  0002a	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2Page@@3FA, ax ; shopWondow2Page
  00030	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH
  00038	85 c0		 test	 eax, eax
  0003a	0f 84 ca 01 00
	00		 je	 $LN10@initServer

; 5725 : 		return;
; 5726 : 
; 5727 : 	getStringToken(data, '|', 2, sizeof(title1) - 1, title1);

  00040	53		 push	 ebx
  00041	57		 push	 edi
  00042	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00048	50		 push	 eax
  00049	6a 7f		 push	 127			; 0000007fH
  0004b	6a 02		 push	 2
  0004d	6a 7c		 push	 124			; 0000007cH
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5728 : 	makeStringFromEscaped(title1);

  00055	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5729 : 	getStringToken(data, '|', 3, sizeof(msg2) - 1, msg2);

  00061	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00067	50		 push	 eax
  00068	6a 7f		 push	 127			; 0000007fH
  0006a	6a 03		 push	 3
  0006c	6a 7c		 push	 124			; 0000007cH
  0006e	56		 push	 esi
  0006f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5730 : 	makeStringFromEscaped(msg2);

  00074	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5731 : 
; 5732 : 
; 5733 : 
; 5734 : 	strncpy(shopWindow1Title, title1, sizeof(shopWindow1Title) - 1);

  00080	6a 1a		 push	 26			; 0000001aH
  00082	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00088	50		 push	 eax
  00089	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0008e	e8 00 00 00 00	 call	 _strncpy

; 5735 : 	shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5736 : 
; 5737 : 	getStrSplit((char*)shopWindow2Msg, msg2,

  00093	6a 2c		 push	 44			; 0000002cH
  00095	6a 02		 push	 2
  00097	6a 2d		 push	 45			; 0000002dH
  00099	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0009f	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  000a6	50		 push	 eax
  000a7	68 00 00 00 00	 push	 OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  000ac	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5738 : 		sizeof(shopWindow2Msg[0]), sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]),
; 5739 : 		sizeof(shopWindow2Msg[0]) - 1);
; 5740 : 
; 5741 : 	shopWondow2MaxPage = MAX_SKILL_SHOP_SKILL * MAX_SKILL_SHOP_PAGE;

  000b1	b8 50 00 00 00	 mov	 eax, 80			; 00000050H

; 5742 : 	for (i = 0, j = 0; i < shopWondow2MaxPage; i++)

  000b6	c7 85 b0 fd ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  000c0	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  000c6	8d 4d bc	 lea	 ecx, DWORD PTR _skillName$[ebp]
  000c9	33 c0		 xor	 eax, eax
  000cb	83 c4 50	 add	 esp, 80			; 00000050H
  000ce	89 85 b8 fd ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  000d4	bf 00 00 00 00	 mov	 edi, OFFSET ?sealSkill@@3PAUSKILL_SHOP@@A ; sealSkill
  000d9	8d 58 05	 lea	 ebx, DWORD PTR [eax+5]
  000dc	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  000e1	2b c1		 sub	 eax, ecx
  000e3	89 85 ac fd ff
	ff		 mov	 DWORD PTR tv447[ebp], eax
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@initServer:

; 5743 : 	{
; 5744 : 		flag = getStringToken(data, '|', 4 + i * iReadOffset, sizeof(skillName) - 1, skillName);

  000f0	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  000f3	50		 push	 eax
  000f4	6a 3f		 push	 63			; 0000003fH
  000f6	8d 43 ff	 lea	 eax, DWORD PTR [ebx-1]
  000f9	50		 push	 eax
  000fa	6a 7c		 push	 124			; 0000007cH
  000fc	56		 push	 esi
  000fd	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00102	8b f0		 mov	 esi, eax

; 5745 : 		makeStringFromEscaped(skillName);

  00104	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  00107	50		 push	 eax
  00108	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  0010d	83 c4 18	 add	 esp, 24			; 00000018H

; 5746 : 		if (flag)

  00110	85 f6		 test	 esi, esi
  00112	74 0f		 je	 SHORT $LN6@initServer

; 5747 : 		{
; 5748 : 			sealSkill[i].name[0] = '\0';
; 5749 : 			continue;

  00114	8b b5 b4 fd ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  0011a	c6 47 0c 00	 mov	 BYTE PTR [edi+12], 0
  0011e	e9 a0 00 00 00	 jmp	 $LN2@initServer
$LN6@initServer:

; 5750 : 		}
; 5751 : 
; 5752 : 		j++;

  00123	ff 85 b8 fd ff
	ff		 inc	 DWORD PTR _j$1$[ebp]

; 5753 : 		if (strlen(skillName) <= SKILL_NAME_LEN)

  00129	8d 4d bc	 lea	 ecx, DWORD PTR _skillName$[ebp]
  0012c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0012f	90		 npad	 1
$LL22@initServer:
  00130	8a 01		 mov	 al, BYTE PTR [ecx]
  00132	41		 inc	 ecx
  00133	84 c0		 test	 al, al
  00135	75 f9		 jne	 SHORT $LL22@initServer
  00137	2b ca		 sub	 ecx, edx
  00139	83 f9 18	 cmp	 ecx, 24			; 00000018H
  0013c	77 21		 ja	 SHORT $LN7@initServer

; 5754 : 			strcpy(sealSkill[i].name, skillName);

  0013e	8b 95 ac fd ff
	ff		 mov	 edx, DWORD PTR tv447[ebp]
  00144	8d 45 bc	 lea	 eax, DWORD PTR _skillName$[ebp]
  00147	03 d7		 add	 edx, edi
  00149	0f 1f 80 00 00
	00 00		 npad	 7
$LL14@initServer:
  00150	8a 08		 mov	 cl, BYTE PTR [eax]
  00152	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00155	88 4c 02 ff	 mov	 BYTE PTR [edx+eax-1], cl
  00159	84 c9		 test	 cl, cl
  0015b	75 f3		 jne	 SHORT $LL14@initServer
  0015d	eb 07		 jmp	 SHORT $LN8@initServer
$LN7@initServer:

; 5755 : 		else
; 5756 : 			strcpy(sealSkill[i].name, "???");

  0015f	c7 47 0c 3f 3f
	3f 00		 mov	 DWORD PTR [edi+12], 4144959 ; 003f3f3fH
$LN8@initServer:

; 5757 : 
; 5758 : 		sealSkill[i].price = getIntegerToken(data, '|', 5 + i * iReadOffset);

  00166	8b b5 b4 fd ff
	ff		 mov	 esi, DWORD PTR _data$GSCopy$1$[ebp]
  0016c	53		 push	 ebx
  0016d	6a 7c		 push	 124			; 0000007cH
  0016f	56		 push	 esi
  00170	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00175	89 07		 mov	 DWORD PTR [edi], eax

; 5759 : 
; 5760 : 		getStringToken(data, '|', 6 + i * iReadOffset, sizeof(info) - 1, info);

  00177	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  0017d	50		 push	 eax
  0017e	68 ff 00 00 00	 push	 255			; 000000ffH
  00183	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00186	50		 push	 eax
  00187	6a 7c		 push	 124			; 0000007cH
  00189	56		 push	 esi
  0018a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5761 : 		makeStringFromEscaped(info);

  0018f	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00195	50		 push	 eax
  00196	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5762 : 
; 5763 : 
; 5764 : 		//å¹¶æ²¡æéééè¦å¤å°å£°æçæ¾ç¤ºå¤ç	[ì¼ë§ë ë§ì ëªì±(/ìì )ì´ ì í©íì§ íì ëì§ ìì
; 5765 : 		//ä½æ¯å® ç©æè½åºè¯¥æ¯ä¸éè¦			[ê·¸ë¬ë í« ì¤í¬ì íìíì§ ìì]
; 5766 : 		getStrSplit((char*)(&sealSkill[i].info), info,

  0019b	6a 18		 push	 24			; 00000018H
  0019d	6a 03		 push	 3
  0019f	6a 19		 push	 25			; 00000019H
  001a1	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  001a7	50		 push	 eax
  001a8	8d 47 25	 lea	 eax, DWORD PTR [edi+37]
  001ab	50		 push	 eax
  001ac	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5767 : 			sizeof(sealSkill[0].info[0]),
; 5768 : 			sizeof(sealSkill[0].info) / sizeof(sealSkill[0].info[0]),
; 5769 : 			sizeof(sealSkill[0].info[0]) - 1);
; 5770 : #ifdef _NB_å® æååºéå£°æè¦æ±
; 5771 : 		sealSkill[i].iCoseFame = getIntegerToken(data, '|', 7 + i * iReadOffset);

  001b1	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  001b4	50		 push	 eax
  001b5	6a 7c		 push	 124			; 0000007cH
  001b7	56		 push	 esi
  001b8	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  001bd	83 c4 44	 add	 esp, 68			; 00000044H
  001c0	89 47 08	 mov	 DWORD PTR [edi+8], eax
$LN2@initServer:

; 5742 : 	for (i = 0, j = 0; i < shopWondow2MaxPage; i++)

  001c3	8b 8d b0 fd ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  001c9	83 c3 04	 add	 ebx, 4
  001cc	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  001d3	41		 inc	 ecx
  001d4	83 c7 70	 add	 edi, 112		; 00000070H
  001d7	89 8d b0 fd ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  001dd	3b c8		 cmp	 ecx, eax
  001df	0f 8c 0b ff ff
	ff		 jl	 $LL4@initServer

; 5772 : #endif
; 5773 : 	}
; 5774 : 	if (j > 0)

  001e5	8b 85 b8 fd ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  001eb	5f		 pop	 edi
  001ec	5b		 pop	 ebx
  001ed	85 c0		 test	 eax, eax
  001ef	7e 0e		 jle	 SHORT $LN9@initServer

; 5775 : 		shopWondow2MaxPage = (j + 7) / MAX_SKILL_SHOP_SKILL;

  001f1	83 c0 07	 add	 eax, 7
  001f4	99		 cdq
  001f5	83 e2 07	 and	 edx, 7
  001f8	03 c2		 add	 eax, edx
  001fa	c1 f8 03	 sar	 eax, 3
  001fd	eb 05		 jmp	 SHORT $LN23@initServer
$LN9@initServer:

; 5776 : 	else
; 5777 : 		shopWondow2MaxPage = 1;

  001ff	b8 01 00 00 00	 mov	 eax, 1
$LN23@initServer:

; 5778 : }

  00204	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
$LN10@initServer:
  0020a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020d	33 cd		 xor	 ecx, ebp
  0020f	5e		 pop	 esi
  00210	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00215	8b e5		 mov	 esp, ebp
  00217	5d		 pop	 ebp
  00218	c3		 ret	 0
?initServerWindowType5@@YAXPAD@Z ENDP			; initServerWindowType5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType4@@YAXPAD@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initServerWindowType4@@YAXPAD@Z PROC			; initServerWindowType4, COMDAT

; 5678 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5679 : 	msgWN_W = 9;
; 5680 : 	msgWN_H = 9;
; 5681 : 	msgWNLen = (msgWN_W * 64 - 48) / 9;
; 5682 : 
; 5683 : 	makeStringFromEscaped(data);

  00004	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00007	56		 push	 esi
  00008	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?msgWN_W@@3HA, 9 ; msgWN_W
  00012	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?msgWN_H@@3HA, 9 ; msgWN_H
  0001c	c7 05 00 00 00
	00 3a 00 00 00	 mov	 DWORD PTR ?msgWNLen@@3HA, 58 ; msgWNLen, 0000003aH
  00026	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5684 : #ifdef _FONT_STYLE_
; 5685 : 	int flg = FALSE;
; 5686 : 	char* temp = sunday(data, "[style ");

  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_07IBAIKNAL@?$FLstyle?5@
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?sunday@@YAPADPAD0@Z	; sunday
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5687 : 	if (temp) {

  00039	85 c0		 test	 eax, eax
  0003b	74 07		 je	 SHORT $LN2@initServer

; 5688 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  0003d	68 00 01 00 00	 push	 256			; 00000100H

; 5689 : 			sizeof(msgWN) / sizeof(msgWN[0]), 256);
; 5690 : 	}

  00042	eb 06		 jmp	 SHORT $LN7@initServer
$LN2@initServer:

; 5691 : 	else {
; 5692 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),

  00044	ff 35 00 00 00
	00		 push	 DWORD PTR ?msgWNLen@@3HA ; msgWNLen
$LN7@initServer:

; 5693 : 			sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen);
; 5694 : 	}
; 5695 : 	getStrSplitNew(msgWN);

  0004a	6a 19		 push	 25			; 00000019H
  0004c	68 00 01 00 00	 push	 256			; 00000100H
  00051	56		 push	 esi
  00052	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00057	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  0005c	83 c4 14	 add	 esp, 20			; 00000014H
  0005f	5e		 pop	 esi
  00060	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _data$[ebp], OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN

; 5696 : #else
; 5697 : 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),
; 5698 : 		sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen);
; 5699 : #endif
; 5700 : 
; 5701 : }

  00067	5d		 pop	 ebp

; 5693 : 			sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen);
; 5694 : 	}
; 5695 : 	getStrSplitNew(msgWN);

  00068	e9 00 00 00 00	 jmp	 ?getStrSplitNew@@YAXQAY0BAA@D@Z ; getStrSplitNew
?initServerWindowType4@@YAXPAD@Z ENDP			; initServerWindowType4
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType3@@YAXPAD@Z
_TEXT	SEGMENT
tv1128 = -1364						; size = 4
tv1127 = -1364						; size = 4
_i$2$ = -1360						; size = 4
_i$1$ = -1360						; size = 4
tv1124 = -1356						; size = 4
_j$1$ = -1356						; size = 4
tv1129 = -1352						; size = 4
_j$2$ = -1352						; size = 4
_info$ = -1348						; size = 256
_msg2$ = -1092						; size = 256
_msg6$ = -836						; size = 128
_msg5$ = -708						; size = 128
_msg4$ = -580						; size = 128
_msg3$ = -452						; size = 128
_msg1$ = -324						; size = 128
_title1$ = -196						; size = 128
_itemName$ = -68					; size = 64
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowType3@@YAXPAD@Z PROC			; initServerWindowType3, COMDAT

; 5480 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 54 05 00
	00		 sub	 esp, 1364		; 00000554H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _data$[ebp]

; 5481 : 	char title1[128];
; 5482 : 	char msg1[128];
; 5483 : 	char msg2[256];
; 5484 : 	char msg3[128];
; 5485 : 	char msg4[128];
; 5486 : 	char msg5[128];
; 5487 : 	char msg6[128];
; 5488 : 	char itemName[64];
; 5489 : 	char info[256];
; 5490 : 	int i, j;
; 5491 : 	int flag;
; 5492 : 	int datalen;
; 5493 : #ifdef _NEW_MANOR_LAW
; 5494 : 	int offset = 7;
; 5495 : #else
; 5496 : 	int offset = 6;
; 5497 : #endif
; 5498 : 
; 5499 : 	datalen = 6;
; 5500 : 
; 5501 : 	shopWindowMode = getIntegerToken(data, '|', 1);

  00019	6a 01		 push	 1
  0001b	6a 7c		 push	 124			; 0000007cH
  0001d	57		 push	 edi
  0001e	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH
  00026	0f b7 c0	 movzx	 eax, ax
  00029	33 c9		 xor	 ecx, ecx
  0002b	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowMode@@3FA, ax ; shopWindowMode
  00031	66 89 0d 00 00
	00 00		 mov	 WORD PTR ?shopWondow2Page@@3FA, cx ; shopWondow2Page

; 5502 : 	if (shopWindowMode == 0) {

  00038	6a 02		 push	 2
  0003a	6a 7c		 push	 124			; 0000007cH
  0003c	57		 push	 edi
  0003d	66 85 c0	 test	 ax, ax
  00040	0f 85 4b 03 00
	00		 jne	 $LN8@initServer

; 5503 : 		shopWindowProcNo = 10;

  00046	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0004b	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 5504 : 		shopWondow2Page = 0;
; 5505 : 
; 5506 : 		if (getIntegerToken(data, '|', 2) == 0)

  00051	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00056	83 c4 0c	 add	 esp, 12			; 0000000cH
  00059	85 c0		 test	 eax, eax
  0005b	0f 84 02 06 00
	00		 je	 $LN21@initServer

; 5507 : 			return;
; 5508 : 
; 5509 : 		menuIndexWN = getIntegerToken(data, '|', 3);

  00061	6a 03		 push	 3
  00063	6a 7c		 push	 124			; 0000007cH
  00065	57		 push	 edi
  00066	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0006b	a3 00 00 00 00	 mov	 DWORD PTR ?menuIndexWN@@3HA, eax ; menuIndexWN

; 5510 : 
; 5511 : 		getStringToken(data, '|', 4, sizeof(title1) - 1, title1);

  00070	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00076	50		 push	 eax
  00077	6a 7f		 push	 127			; 0000007fH
  00079	6a 04		 push	 4
  0007b	6a 7c		 push	 124			; 0000007cH
  0007d	57		 push	 edi
  0007e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5512 : 		makeStringFromEscaped(title1);

  00083	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5513 : 		getStringToken(data, '|', 5, sizeof(msg1) - 1, msg1);

  0008f	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  00095	50		 push	 eax
  00096	6a 7f		 push	 127			; 0000007fH
  00098	6a 05		 push	 5
  0009a	6a 7c		 push	 124			; 0000007cH
  0009c	57		 push	 edi
  0009d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5514 : 		makeStringFromEscaped(msg1);

  000a2	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5515 : 		getStringToken(data, '|', 6, sizeof(msg2) - 1, msg2);

  000ae	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  000b4	50		 push	 eax
  000b5	68 ff 00 00 00	 push	 255			; 000000ffH
  000ba	6a 06		 push	 6
  000bc	6a 7c		 push	 124			; 0000007cH
  000be	57		 push	 edi
  000bf	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000c4	83 c4 50	 add	 esp, 80			; 00000050H

; 5516 : 		makeStringFromEscaped(msg2);

  000c7	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5517 : 		getStringToken(data, '|', 7, sizeof(msg3) - 1, msg3);

  000d3	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  000d9	50		 push	 eax
  000da	6a 7f		 push	 127			; 0000007fH
  000dc	6a 07		 push	 7
  000de	6a 7c		 push	 124			; 0000007cH
  000e0	57		 push	 edi
  000e1	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5518 : 		makeStringFromEscaped(msg3);

  000e6	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5519 : 		getStringToken(data, '|', 8, sizeof(msg4) - 1, msg4);

  000f2	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  000f8	50		 push	 eax
  000f9	6a 7f		 push	 127			; 0000007fH
  000fb	6a 08		 push	 8
  000fd	6a 7c		 push	 124			; 0000007cH
  000ff	57		 push	 edi
  00100	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5520 : 		makeStringFromEscaped(msg4);

  00105	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5521 : 		getStringToken(data, '|', 9, sizeof(msg5) - 1, msg5);

  00111	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg5$[ebp]
  00117	50		 push	 eax
  00118	6a 7f		 push	 127			; 0000007fH
  0011a	6a 09		 push	 9
  0011c	6a 7c		 push	 124			; 0000007cH
  0011e	57		 push	 edi
  0011f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00124	83 c4 48	 add	 esp, 72			; 00000048H

; 5522 : 		makeStringFromEscaped(msg5);

  00127	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg5$[ebp]
  0012d	50		 push	 eax
  0012e	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5523 : 		getStringToken(data, '|', 10, sizeof(msg6) - 1, msg6);

  00133	8d 85 bc fc ff
	ff		 lea	 eax, DWORD PTR _msg6$[ebp]
  00139	50		 push	 eax
  0013a	6a 7f		 push	 127			; 0000007fH
  0013c	6a 0a		 push	 10			; 0000000aH
  0013e	6a 7c		 push	 124			; 0000007cH
  00140	57		 push	 edi
  00141	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5524 : 		makeStringFromEscaped(msg6);

  00146	8d 85 bc fc ff
	ff		 lea	 eax, DWORD PTR _msg6$[ebp]
  0014c	50		 push	 eax
  0014d	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5525 : 
; 5526 : 		strncpy(shopWindow1Title, title1, sizeof(shopWindow1Title) - 1);

  00152	6a 1a		 push	 26			; 0000001aH
  00154	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  0015a	50		 push	 eax
  0015b	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  00160	e8 00 00 00 00	 call	 _strncpy

; 5527 : 		shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5528 : 		strncpy(shopWindow1Msg, msg1, sizeof(shopWindow1Msg) - 1);

  00165	6a 1a		 push	 26			; 0000001aH
  00167	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  0016d	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  00174	50		 push	 eax
  00175	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  0017a	e8 00 00 00 00	 call	 _strncpy

; 5529 : 		shopWindow1Msg[sizeof(shopWindow1Msg) - 1] = '\0';
; 5530 : 
; 5531 : 		getStrSplit((char*)shopWindow2Msg, msg2,

  0017f	6a 2c		 push	 44			; 0000002cH
  00181	6a 02		 push	 2
  00183	6a 2d		 push	 45			; 0000002dH
  00185	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0018b	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Msg@@3PADA+26, 0
  00192	50		 push	 eax
  00193	68 00 00 00 00	 push	 OFFSET ?shopWindow2Msg@@3PAY0CN@DA ; shopWindow2Msg
  00198	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  0019d	83 c4 48	 add	 esp, 72			; 00000048H

; 5532 : 			sizeof(shopWindow2Msg[0]),
; 5533 : 			sizeof(shopWindow2Msg) / sizeof(shopWindow2Msg[0]),
; 5534 : 			sizeof(shopWindow2Msg[0]) - 1);
; 5535 : 
; 5536 : 		strncpy(shopWindow3Msg, msg3, sizeof(shopWindow3Msg) - 1);

  001a0	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  001a6	6a 28		 push	 40			; 00000028H
  001a8	50		 push	 eax
  001a9	68 00 00 00 00	 push	 OFFSET ?shopWindow3Msg@@3PADA ; shopWindow3Msg
  001ae	e8 00 00 00 00	 call	 _strncpy

; 5537 : 		shopWindow3Msg[sizeof(shopWindow3Msg) - 1] = '\0';
; 5538 : 
; 5539 : 		getStrSplit((char*)shopWindow4Msg, msg4,

  001b3	6a 26		 push	 38			; 00000026H
  001b5	6a 02		 push	 2
  001b7	6a 27		 push	 39			; 00000027H
  001b9	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  001bf	c6 05 28 00 00
	00 00		 mov	 BYTE PTR ?shopWindow3Msg@@3PADA+40, 0
  001c6	50		 push	 eax
  001c7	68 00 00 00 00	 push	 OFFSET ?shopWindow4Msg@@3PAY0CH@DA ; shopWindow4Msg
  001cc	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5540 : 			sizeof(shopWindow4Msg[0]),
; 5541 : 			sizeof(shopWindow4Msg) / sizeof(shopWindow4Msg[0]),
; 5542 : 			sizeof(shopWindow4Msg[0]) - 1);
; 5543 : 
; 5544 : 		getStrSplit((char*)shopWindow5Msg, msg5,

  001d1	6a 26		 push	 38			; 00000026H
  001d3	6a 02		 push	 2
  001d5	6a 27		 push	 39			; 00000027H
  001d7	8d 85 3c fd ff
	ff		 lea	 eax, DWORD PTR _msg5$[ebp]
  001dd	50		 push	 eax
  001de	68 00 00 00 00	 push	 OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  001e3	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5545 : 			sizeof(shopWindow5Msg[0]),
; 5546 : 			sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]),
; 5547 : 			sizeof(shopWindow5Msg[0]) - 1);
; 5548 : 
; 5549 : 		getStrSplit((char*)shopWindow6Msg, msg6,

  001e8	6a 26		 push	 38			; 00000026H
  001ea	6a 02		 push	 2
  001ec	6a 27		 push	 39			; 00000027H
  001ee	8d 85 bc fc ff
	ff		 lea	 eax, DWORD PTR _msg6$[ebp]
  001f4	50		 push	 eax
  001f5	68 00 00 00 00	 push	 OFFSET ?shopWindow6Msg@@3PAY0CH@DA ; shopWindow6Msg
  001fa	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5550 : 			sizeof(shopWindow6Msg[0]),
; 5551 : 			sizeof(shopWindow6Msg) / sizeof(shopWindow6Msg[0]),
; 5552 : 			sizeof(shopWindow6Msg[0]) - 1);
; 5553 : 
; 5554 : 
; 5555 : 		shopWondow2MaxPage = MAX_SHOP_ITEM * MAX_SHOP_PAGE;

  001ff	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 5556 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00204	c7 85 b0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$2$[ebp], 0
  0020e	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  00214	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  00217	33 c0		 xor	 eax, eax
  00219	83 c4 48	 add	 esp, 72			; 00000048H
  0021c	89 85 b4 fa ff
	ff		 mov	 DWORD PTR _j$1$[ebp], eax
  00222	be 0c 00 00 00	 mov	 esi, 12			; 0000000cH
  00227	b8 04 00 00 00	 mov	 eax, 4
  0022c	89 b5 b8 fa ff
	ff		 mov	 DWORD PTR tv1129[ebp], esi
  00232	2b c1		 sub	 eax, ecx
  00234	bb 0c 00 00 00	 mov	 ebx, OFFSET ?sealItem@@3PAUITEM_SHOP@@A+12
  00239	89 85 ac fa ff
	ff		 mov	 DWORD PTR tv1128[ebp], eax
  0023f	90		 npad	 1
$LL4@initServer:

; 5557 : 			flag = getStringToken(data, '|', 11 + i * offset, sizeof(itemName) - 1, itemName);

  00240	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00243	50		 push	 eax
  00244	6a 3f		 push	 63			; 0000003fH
  00246	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00249	50		 push	 eax
  0024a	6a 7c		 push	 124			; 0000007cH
  0024c	57		 push	 edi
  0024d	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00252	8b f0		 mov	 esi, eax

; 5558 : 			makeStringFromEscaped(itemName);

  00254	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  00257	50		 push	 eax
  00258	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  0025d	83 c4 18	 add	 esp, 24			; 00000018H

; 5559 : 			if (flag) {

  00260	85 f6		 test	 esi, esi
  00262	74 0f		 je	 SHORT $LN11@initServer

; 5560 : 				sealItem[i].name[0] = '\0';
; 5561 : 				continue;

  00264	8b b5 b8 fa ff
	ff		 mov	 esi, DWORD PTR tv1129[ebp]
  0026a	c6 43 04 00	 mov	 BYTE PTR [ebx+4], 0
  0026e	e9 d1 00 00 00	 jmp	 $LN2@initServer
$LN11@initServer:

; 5562 : 			}
; 5563 : 
; 5564 : 			j++;

  00273	ff 85 b4 fa ff
	ff		 inc	 DWORD PTR _j$1$[ebp]

; 5565 : 			if (strlen(itemName) <= ITEM_NAME_LEN) {

  00279	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  0027c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0027f	90		 npad	 1
$LL49@initServer:
  00280	8a 01		 mov	 al, BYTE PTR [ecx]
  00282	41		 inc	 ecx
  00283	84 c0		 test	 al, al
  00285	75 f9		 jne	 SHORT $LL49@initServer
  00287	2b ca		 sub	 ecx, edx
  00289	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0028c	77 21		 ja	 SHORT $LN12@initServer

; 5566 : 				strcpy(sealItem[i].name, itemName);

  0028e	8b 95 ac fa ff
	ff		 mov	 edx, DWORD PTR tv1128[ebp]
  00294	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  00297	03 d3		 add	 edx, ebx
  00299	0f 1f 80 00 00
	00 00		 npad	 7
$LL29@initServer:
  002a0	8a 01		 mov	 al, BYTE PTR [ecx]
  002a2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002a5	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  002a9	84 c0		 test	 al, al
  002ab	75 f3		 jne	 SHORT $LL29@initServer

; 5567 : 			}

  002ad	eb 07		 jmp	 SHORT $LN13@initServer
$LN12@initServer:

; 5568 : 			else {
; 5569 : 				strcpy(sealItem[i].name, "???");

  002af	c7 43 04 3f 3f
	3f 00		 mov	 DWORD PTR [ebx+4], 4144959 ; 003f3f3fH
$LN13@initServer:

; 5570 : 			}
; 5571 : 			sealItem[i].sealFlag = getIntegerToken(data, '|', 12 + i * offset);

  002b6	8b b5 b8 fa ff
	ff		 mov	 esi, DWORD PTR tv1129[ebp]
  002bc	56		 push	 esi
  002bd	6a 7c		 push	 124			; 0000007cH
  002bf	57		 push	 edi
  002c0	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  002c5	66 89 03	 mov	 WORD PTR [ebx], ax

; 5572 : 			sealItem[i].level = getIntegerToken(data, '|', 13 + i * offset);

  002c8	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  002cb	50		 push	 eax
  002cc	6a 7c		 push	 124			; 0000007cH
  002ce	57		 push	 edi
  002cf	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  002d4	89 43 f4	 mov	 DWORD PTR [ebx-12], eax

; 5573 : 			sealItem[i].price = getIntegerToken(data, '|', 14 + i * offset);

  002d7	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  002da	50		 push	 eax
  002db	6a 7c		 push	 124			; 0000007cH
  002dd	57		 push	 edi
  002de	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  002e3	89 43 f8	 mov	 DWORD PTR [ebx-8], eax

; 5574 : 			sealItem[i].graNo = getIntegerToken(data, '|', 15 + i * offset);

  002e6	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  002e9	50		 push	 eax
  002ea	6a 7c		 push	 124			; 0000007cH
  002ec	57		 push	 edi
  002ed	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  002f2	89 43 fc	 mov	 DWORD PTR [ebx-4], eax

; 5575 : 			getStringToken(data, '|', 16 + i * offset, sizeof(info) - 1, info);

  002f5	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  002fb	50		 push	 eax
  002fc	68 ff 00 00 00	 push	 255			; 000000ffH
  00301	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  00304	50		 push	 eax
  00305	6a 7c		 push	 124			; 0000007cH
  00307	57		 push	 edi
  00308	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0030d	83 c4 44	 add	 esp, 68			; 00000044H

; 5576 : 			makeStringFromEscaped(info);

  00310	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00316	50		 push	 eax
  00317	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5577 : 			getStrSplit((char*)(&sealItem[i].info), info,

  0031c	6a 1c		 push	 28			; 0000001cH
  0031e	6a 03		 push	 3
  00320	6a 1d		 push	 29			; 0000001dH
  00322	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  00328	50		 push	 eax
  00329	8d 43 21	 lea	 eax, DWORD PTR [ebx+33]
  0032c	50		 push	 eax
  0032d	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5578 : 				sizeof(sealItem[0].info[0]),
; 5579 : 				sizeof(sealItem[0].info) / sizeof(sealItem[0].info[0]),
; 5580 : 				sizeof(sealItem[0].info[0]) - 1);
; 5581 : #ifdef _NEW_MANOR_LAW
; 5582 : 			sealItem[i].costfame = getIntegerToken(data, '|', 17 + i * offset);

  00332	8d 46 05	 lea	 eax, DWORD PTR [esi+5]
  00335	50		 push	 eax
  00336	6a 7c		 push	 124			; 0000007cH
  00338	57		 push	 edi
  00339	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0033e	83 c4 24	 add	 esp, 36			; 00000024H
  00341	89 43 7c	 mov	 DWORD PTR [ebx+124], eax
$LN2@initServer:

; 5556 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00344	8b 8d b0 fa ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]
  0034a	83 c6 07	 add	 esi, 7
  0034d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00354	41		 inc	 ecx
  00355	81 c3 8c 00 00
	00		 add	 ebx, 140		; 0000008cH
  0035b	89 8d b0 fa ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  00361	89 b5 b8 fa ff
	ff		 mov	 DWORD PTR tv1129[ebp], esi
  00367	3b c8		 cmp	 ecx, eax
  00369	0f 8c d1 fe ff
	ff		 jl	 $LL4@initServer

; 5583 : #endif
; 5584 : 		}
; 5585 : 		if (j > 0) {

  0036f	8b 85 b4 fa ff
	ff		 mov	 eax, DWORD PTR _j$1$[ebp]
  00375	85 c0		 test	 eax, eax
  00377	0f 8e db 02 00
	00		 jle	 $LN20@initServer

; 5586 : 			shopWondow2MaxPage = (j + 7) / MAX_SHOP_ITEM;

  0037d	83 c0 07	 add	 eax, 7
  00380	99		 cdq
  00381	83 e2 07	 and	 edx, 7
  00384	03 c2		 add	 eax, edx
  00386	c1 f8 03	 sar	 eax, 3
  00389	0f b7 c0	 movzx	 eax, ax

; 5587 : 		}

  0038c	e9 cc 02 00 00	 jmp	 $LN15@initServer
$LN8@initServer:

; 5588 : 		else {
; 5589 : 			shopWondow2MaxPage = 1;
; 5590 : 		}
; 5591 : 	}
; 5592 : 	else {
; 5593 : #ifdef _ITEM_PILENUMS
; 5594 : 		datalen = 7;
; 5595 : #endif
; 5596 : 
; 5597 : 		shopWindowProcNo = 100;

  00391	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  00396	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 5598 : 		shopWondow2Page = 0;
; 5599 : 		if (getIntegerToken(data, '|', 2) == 0)

  0039c	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  003a1	83 c4 0c	 add	 esp, 12			; 0000000cH
  003a4	85 c0		 test	 eax, eax
  003a6	0f 84 b7 02 00
	00		 je	 $LN21@initServer

; 5600 : 			return;
; 5601 : 		menuIndexWN = getIntegerToken(data, '|', 3);

  003ac	6a 03		 push	 3
  003ae	6a 7c		 push	 124			; 0000007cH
  003b0	57		 push	 edi
  003b1	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  003b6	a3 00 00 00 00	 mov	 DWORD PTR ?menuIndexWN@@3HA, eax ; menuIndexWN

; 5602 : 		getStringToken(data, '|', 4, sizeof(title1) - 1, title1);

  003bb	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  003c1	50		 push	 eax
  003c2	6a 7f		 push	 127			; 0000007fH
  003c4	6a 04		 push	 4
  003c6	6a 7c		 push	 124			; 0000007cH
  003c8	57		 push	 edi
  003c9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5603 : 		makeStringFromEscaped(title1);

  003ce	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5604 : 		getStringToken(data, '|', 5, sizeof(msg1) - 1, msg1);

  003da	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  003e0	50		 push	 eax
  003e1	6a 7f		 push	 127			; 0000007fH
  003e3	6a 05		 push	 5
  003e5	6a 7c		 push	 124			; 0000007cH
  003e7	57		 push	 edi
  003e8	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5605 : 		makeStringFromEscaped(msg1);

  003ed	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  003f3	50		 push	 eax
  003f4	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5606 : 		getStringToken(data, '|', 6, sizeof(msg2) - 1, msg2);

  003f9	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  003ff	50		 push	 eax
  00400	68 ff 00 00 00	 push	 255			; 000000ffH
  00405	6a 06		 push	 6
  00407	6a 7c		 push	 124			; 0000007cH
  00409	57		 push	 edi
  0040a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0040f	83 c4 50	 add	 esp, 80			; 00000050H

; 5607 : 		makeStringFromEscaped(msg2);

  00412	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00418	50		 push	 eax
  00419	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5608 : 		getStringToken(data, '|', 7, sizeof(msg3) - 1, msg3);

  0041e	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  00424	50		 push	 eax
  00425	6a 7f		 push	 127			; 0000007fH
  00427	6a 07		 push	 7
  00429	6a 7c		 push	 124			; 0000007cH
  0042b	57		 push	 edi
  0042c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5609 : 		makeStringFromEscaped(msg3);

  00431	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  00437	50		 push	 eax
  00438	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5610 : 		getStringToken(data, '|', 8, sizeof(msg4) - 1, msg4);

  0043d	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  00443	50		 push	 eax
  00444	6a 7f		 push	 127			; 0000007fH
  00446	6a 08		 push	 8
  00448	6a 7c		 push	 124			; 0000007cH
  0044a	57		 push	 edi
  0044b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5611 : 		makeStringFromEscaped(msg4);

  00450	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5612 : 
; 5613 : 		strncpy(shopWindow1Title, title1, sizeof(shopWindow1Title) - 1);

  0045c	6a 1a		 push	 26			; 0000001aH
  0045e	8d 85 3c ff ff
	ff		 lea	 eax, DWORD PTR _title1$[ebp]
  00464	50		 push	 eax
  00465	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0046a	e8 00 00 00 00	 call	 _strncpy
  0046f	83 c4 40	 add	 esp, 64			; 00000040H

; 5614 : 		shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';

  00472	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0

; 5615 : 
; 5616 : 		strncpy(shopWindow1Msg, msg1, sizeof(shopWindow1Msg) - 1);

  00479	8d 85 bc fe ff
	ff		 lea	 eax, DWORD PTR _msg1$[ebp]
  0047f	6a 1a		 push	 26			; 0000001aH
  00481	50		 push	 eax
  00482	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  00487	e8 00 00 00 00	 call	 _strncpy

; 5617 : 		shopWindow1Msg[sizeof(shopWindow1Msg) - 1] = '\0';
; 5618 : 
; 5619 : 		getStrSplit((char*)shopWindow7Msg, msg2,

  0048c	6a 26		 push	 38			; 00000026H
  0048e	6a 02		 push	 2
  00490	6a 27		 push	 39			; 00000027H
  00492	8d 85 bc fb ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00498	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Msg@@3PADA+26, 0
  0049f	50		 push	 eax
  004a0	68 00 00 00 00	 push	 OFFSET ?shopWindow7Msg@@3PAY0CH@DA ; shopWindow7Msg
  004a5	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5620 : 			sizeof(shopWindow7Msg[0]),
; 5621 : 			sizeof(shopWindow7Msg) / sizeof(shopWindow7Msg[0]),
; 5622 : 			sizeof(shopWindow7Msg[0]) - 1);
; 5623 : 
; 5624 : 		getStrSplit((char*)shopWindow8Msg, msg3,

  004aa	6a 26		 push	 38			; 00000026H
  004ac	6a 02		 push	 2
  004ae	6a 27		 push	 39			; 00000027H
  004b0	8d 85 3c fe ff
	ff		 lea	 eax, DWORD PTR _msg3$[ebp]
  004b6	50		 push	 eax
  004b7	68 00 00 00 00	 push	 OFFSET ?shopWindow8Msg@@3PAY0CH@DA ; shopWindow8Msg
  004bc	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5625 : 			sizeof(shopWindow8Msg[0]),
; 5626 : 			sizeof(shopWindow8Msg) / sizeof(shopWindow8Msg[0]),
; 5627 : 			sizeof(shopWindow8Msg[0]) - 1);
; 5628 : 
; 5629 : 		getStrSplit((char*)shopWindow5Msg, msg4,

  004c1	6a 26		 push	 38			; 00000026H
  004c3	6a 02		 push	 2
  004c5	6a 27		 push	 39			; 00000027H
  004c7	8d 85 bc fd ff
	ff		 lea	 eax, DWORD PTR _msg4$[ebp]
  004cd	50		 push	 eax
  004ce	68 00 00 00 00	 push	 OFFSET ?shopWindow5Msg@@3PAY0CH@DA ; shopWindow5Msg
  004d3	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit

; 5630 : 			sizeof(shopWindow5Msg[0]),
; 5631 : 			sizeof(shopWindow5Msg) / sizeof(shopWindow5Msg[0]),
; 5632 : 			sizeof(shopWindow5Msg[0]) - 1);
; 5633 : 
; 5634 : 
; 5635 : 		shopWondow2MaxPage = MAX_SHOP_ITEM * MAX_SHOP_PAGE;

  004d8	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 5636 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  004dd	c7 85 b0 fa ff
	ff 00 00 00 00	 mov	 DWORD PTR _i$1$[ebp], 0
  004e7	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
  004ed	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  004f0	33 c0		 xor	 eax, eax
  004f2	83 c4 48	 add	 esp, 72			; 00000048H
  004f5	89 85 b8 fa ff
	ff		 mov	 DWORD PTR _j$2$[ebp], eax
  004fb	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  00500	b8 04 00 00 00	 mov	 eax, 4
  00505	89 b5 b4 fa ff
	ff		 mov	 DWORD PTR tv1124[ebp], esi
  0050b	2b c1		 sub	 eax, ecx
  0050d	bb 0c 00 00 00	 mov	 ebx, OFFSET ?userItem@@3PAUITEM_SHOP@@A+12
  00512	89 85 ac fa ff
	ff		 mov	 DWORD PTR tv1127[ebp], eax
$LL7@initServer:

; 5637 : 			flag = getStringToken(data, '|', 9 + i * datalen, sizeof(itemName) - 1, itemName);

  00518	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  0051b	50		 push	 eax
  0051c	6a 3f		 push	 63			; 0000003fH
  0051e	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00521	50		 push	 eax
  00522	6a 7c		 push	 124			; 0000007cH
  00524	57		 push	 edi
  00525	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0052a	8b f0		 mov	 esi, eax

; 5638 : 			makeStringFromEscaped(itemName);

  0052c	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  0052f	50		 push	 eax
  00530	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  00535	83 c4 18	 add	 esp, 24			; 00000018H

; 5639 : 			if (flag) {

  00538	85 f6		 test	 esi, esi
  0053a	74 0f		 je	 SHORT $LN17@initServer

; 5640 : 				userItem[i].name[0] = '\0';
; 5641 : 				continue;

  0053c	8b b5 b4 fa ff
	ff		 mov	 esi, DWORD PTR tv1124[ebp]
  00542	c6 43 04 00	 mov	 BYTE PTR [ebx+4], 0
  00546	e9 ca 00 00 00	 jmp	 $LN5@initServer
$LN17@initServer:

; 5642 : 			}
; 5643 : 
; 5644 : 			j++;

  0054b	ff 85 b8 fa ff
	ff		 inc	 DWORD PTR _j$2$[ebp]

; 5645 : 			if (strlen(itemName) <= ITEM_NAME_LEN) {

  00551	8d 4d bc	 lea	 ecx, DWORD PTR _itemName$[ebp]
  00554	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL50@initServer:
  00557	8a 01		 mov	 al, BYTE PTR [ecx]
  00559	41		 inc	 ecx
  0055a	84 c0		 test	 al, al
  0055c	75 f9		 jne	 SHORT $LL50@initServer
  0055e	2b ca		 sub	 ecx, edx
  00560	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  00563	77 1a		 ja	 SHORT $LN18@initServer

; 5646 : 				strcpy(userItem[i].name, itemName);

  00565	8b 95 ac fa ff
	ff		 mov	 edx, DWORD PTR tv1127[ebp]
  0056b	8d 45 bc	 lea	 eax, DWORD PTR _itemName$[ebp]
  0056e	03 d3		 add	 edx, ebx
$LL34@initServer:
  00570	8a 08		 mov	 cl, BYTE PTR [eax]
  00572	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00575	88 4c 10 ff	 mov	 BYTE PTR [eax+edx-1], cl
  00579	84 c9		 test	 cl, cl
  0057b	75 f3		 jne	 SHORT $LL34@initServer

; 5647 : 			}

  0057d	eb 07		 jmp	 SHORT $LN19@initServer
$LN18@initServer:

; 5648 : 			else {
; 5649 : 				strcpy(userItem[i].name, "???");

  0057f	c7 43 04 3f 3f
	3f 00		 mov	 DWORD PTR [ebx+4], 4144959 ; 003f3f3fH
$LN19@initServer:

; 5650 : 			}
; 5651 : 			userItem[i].sealFlag = getIntegerToken(data, '|', 10 + i * datalen);

  00586	8b b5 b4 fa ff
	ff		 mov	 esi, DWORD PTR tv1124[ebp]
  0058c	56		 push	 esi
  0058d	6a 7c		 push	 124			; 0000007cH
  0058f	57		 push	 edi
  00590	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00595	66 89 03	 mov	 WORD PTR [ebx], ax

; 5652 : 			userItem[i].price = getIntegerToken(data, '|', 11 + i * datalen);

  00598	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0059b	50		 push	 eax
  0059c	6a 7c		 push	 124			; 0000007cH
  0059e	57		 push	 edi
  0059f	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  005a4	89 43 f8	 mov	 DWORD PTR [ebx-8], eax

; 5653 : 			userItem[i].graNo = getIntegerToken(data, '|', 12 + i * datalen);

  005a7	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  005aa	50		 push	 eax
  005ab	6a 7c		 push	 124			; 0000007cH
  005ad	57		 push	 edi
  005ae	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  005b3	89 43 fc	 mov	 DWORD PTR [ebx-4], eax

; 5654 : 			getStringToken(data, '|', 13 + i * datalen, sizeof(info) - 1, info);

  005b6	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  005bc	50		 push	 eax
  005bd	68 ff 00 00 00	 push	 255			; 000000ffH
  005c2	8d 46 03	 lea	 eax, DWORD PTR [esi+3]
  005c5	50		 push	 eax
  005c6	6a 7c		 push	 124			; 0000007cH
  005c8	57		 push	 edi
  005c9	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5655 : 			makeStringFromEscaped(info);

  005ce	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  005d4	50		 push	 eax
  005d5	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5656 : 			getStrSplit((char*)(&userItem[i].info), info,

  005da	6a 1c		 push	 28			; 0000001cH
  005dc	6a 03		 push	 3
  005de	6a 1d		 push	 29			; 0000001dH
  005e0	8d 85 bc fa ff
	ff		 lea	 eax, DWORD PTR _info$[ebp]
  005e6	50		 push	 eax
  005e7	8d 43 21	 lea	 eax, DWORD PTR [ebx+33]
  005ea	50		 push	 eax
  005eb	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  005f0	83 c4 50	 add	 esp, 80			; 00000050H

; 5657 : 				sizeof(userItem[i].info[0]),
; 5658 : 				sizeof(userItem[i].info) / sizeof(userItem[i].info[0]),
; 5659 : 				sizeof(userItem[i].info[0]) - 1);
; 5660 : 			userItem[i].tbl = getIntegerToken(data, '|', 14 + i * datalen);

  005f3	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  005f6	50		 push	 eax
  005f7	6a 7c		 push	 124			; 0000007cH
  005f9	57		 push	 edi
  005fa	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  005ff	66 89 43 02	 mov	 WORD PTR [ebx+2], ax

; 5661 : #ifdef _ITEM_PILENUMS
; 5662 : 			userItem[i].num = getIntegerToken(data, '|', 15 + i * datalen);

  00603	8d 46 05	 lea	 eax, DWORD PTR [esi+5]
  00606	50		 push	 eax
  00607	6a 7c		 push	 124			; 0000007cH
  00609	57		 push	 edi
  0060a	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0060f	83 c4 18	 add	 esp, 24			; 00000018H
  00612	89 43 78	 mov	 DWORD PTR [ebx+120], eax
$LN5@initServer:

; 5636 : 		for (i = 0, j = 0; i < shopWondow2MaxPage; i++) {

  00615	8b 8d b0 fa ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
  0061b	83 c6 07	 add	 esi, 7
  0061e	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?shopWondow2MaxPage@@3FA ; shopWondow2MaxPage
  00625	41		 inc	 ecx
  00626	81 c3 8c 00 00
	00		 add	 ebx, 140		; 0000008cH
  0062c	89 8d b0 fa ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00632	89 b5 b4 fa ff
	ff		 mov	 DWORD PTR tv1124[ebp], esi
  00638	3b c8		 cmp	 ecx, eax
  0063a	0f 8c d8 fe ff
	ff		 jl	 $LL7@initServer

; 5663 : #endif
; 5664 : 		}
; 5665 : 		if (j > 0) {

  00640	8b 85 b8 fa ff
	ff		 mov	 eax, DWORD PTR _j$2$[ebp]
  00646	85 c0		 test	 eax, eax
  00648	7e 0e		 jle	 SHORT $LN20@initServer

; 5666 : 			shopWondow2MaxPage = (j + 7) / MAX_SHOP_ITEM;

  0064a	83 c0 07	 add	 eax, 7
  0064d	99		 cdq
  0064e	83 e2 07	 and	 edx, 7
  00651	03 c2		 add	 eax, edx
  00653	c1 f8 03	 sar	 eax, 3

; 5667 : 		}

  00656	eb 05		 jmp	 SHORT $LN15@initServer
$LN20@initServer:

; 5668 : 		else {
; 5669 : 			shopWondow2MaxPage = 1;
; 5670 : 		}
; 5671 : 	}
; 5672 : }

  00658	b8 01 00 00 00	 mov	 eax, 1
$LN15@initServer:
  0065d	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWondow2MaxPage@@3FA, ax ; shopWondow2MaxPage
$LN21@initServer:
  00663	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00666	5f		 pop	 edi
  00667	5e		 pop	 esi
  00668	33 cd		 xor	 ecx, ebp
  0066a	5b		 pop	 ebx
  0066b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00670	8b e5		 mov	 esp, ebp
  00672	5d		 pop	 ebp
  00673	c3		 ret	 0
?initServerWindowType3@@YAXPAD@Z ENDP			; initServerWindowType3
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType2@@YAXPAD@Z
_TEXT	SEGMENT
_msg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
?initServerWindowType2@@YAXPAD@Z PROC			; initServerWindowType2, COMDAT

; 5457 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]

; 5458 : 	char msg[256];
; 5459 : 
; 5460 : 	shopWindowProcNo = 0;

  00017	33 c0		 xor	 eax, eax
  00019	66 a3 00 00 00
	00		 mov	 WORD PTR ?shopWindowProcNo@@3FA, ax ; shopWindowProcNo

; 5461 : 
; 5462 : 	getStringToken(data, '|', 1, sizeof(msg) - 1, msg);

  0001f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00025	50		 push	 eax
  00026	68 ff 00 00 00	 push	 255			; 000000ffH
  0002b	6a 01		 push	 1
  0002d	6a 7c		 push	 124			; 0000007cH
  0002f	56		 push	 esi
  00030	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5463 : 	makeStringFromEscaped(msg);

  00035	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5464 : 	strncpy(shopWindow1Title, msg, sizeof(shopWindow1Title) - 1);

  00041	6a 1a		 push	 26			; 0000001aH
  00043	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00049	50		 push	 eax
  0004a	68 00 00 00 00	 push	 OFFSET ?shopWindow1Title@@3PADA ; shopWindow1Title
  0004f	e8 00 00 00 00	 call	 _strncpy

; 5465 : 	shopWindow1Title[sizeof(shopWindow1Title) - 1] = '\0';
; 5466 : 
; 5467 : 	getStringToken(data, '|', 2, sizeof(msg) - 1, msg);

  00054	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0005a	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Title@@3PADA+26, 0
  00061	50		 push	 eax
  00062	68 ff 00 00 00	 push	 255			; 000000ffH
  00067	6a 02		 push	 2
  00069	6a 7c		 push	 124			; 0000007cH
  0006b	56		 push	 esi
  0006c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5468 : 	makeStringFromEscaped(msg);

  00071	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00077	50		 push	 eax
  00078	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5469 : 	strncpy(shopWindow1Msg, msg, sizeof(shopWindow1Msg) - 1);

  0007d	6a 1a		 push	 26			; 0000001aH
  0007f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00085	50		 push	 eax
  00086	68 00 00 00 00	 push	 OFFSET ?shopWindow1Msg@@3PADA ; shopWindow1Msg
  0008b	e8 00 00 00 00	 call	 _strncpy
  00090	83 c4 48	 add	 esp, 72			; 00000048H

; 5470 : 	shopWindow1Msg[sizeof(shopWindow1Msg) - 1] = '\0';

  00093	c6 05 1a 00 00
	00 00		 mov	 BYTE PTR ?shopWindow1Msg@@3PADA+26, 0

; 5471 : #ifdef _NEW_MANOR_LAW
; 5472 : 	getStringToken(data, '|', 3, sizeof(msg) - 1, msg);

  0009a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  000a0	50		 push	 eax
  000a1	68 ff 00 00 00	 push	 255			; 000000ffH
  000a6	6a 03		 push	 3
  000a8	6a 7c		 push	 124			; 0000007cH
  000aa	56		 push	 esi
  000ab	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5473 : 	pc.fame = atoi(msg);

  000b0	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  000b6	50		 push	 eax
  000b7	e8 00 00 00 00	 call	 _atoi

; 5474 : #endif
; 5475 : 
; 5476 : 	menuIndexWN = indexWN;
; 5477 : }

  000bc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000bf	83 c4 18	 add	 esp, 24			; 00000018H
  000c2	a3 64 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+100, eax
  000c7	33 cd		 xor	 ecx, ebp
  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?indexWN@@3HA ; indexWN
  000ce	a3 00 00 00 00	 mov	 DWORD PTR ?menuIndexWN@@3HA, eax ; menuIndexWN
  000d3	5e		 pop	 esi
  000d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d9	8b e5		 mov	 esp, ebp
  000db	5d		 pop	 ebp
  000dc	c3		 ret	 0
?initServerWindowType2@@YAXPAD@Z ENDP			; initServerWindowType2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType1@@YAXPAD@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initServerWindowType1@@YAXPAD@Z PROC			; initServerWindowType1, COMDAT

; 5413 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5414 : 
; 5415 : 	makeStringFromEscaped(data);

  00004	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5416 : 	if ('0' <= *data && *data <= '7')

  0000d	8a 06		 mov	 al, BYTE PTR [esi]
  0000f	83 c4 04	 add	 esp, 4
  00012	2c 30		 sub	 al, 48			; 00000030H
  00014	3c 07		 cmp	 al, 7
  00016	77 12		 ja	 SHORT $LN2@initServer

; 5417 : 	{
; 5418 : 		selStartLine = getIntegerToken(data, '\n', 1);

  00018	6a 01		 push	 1
  0001a	6a 0a		 push	 10			; 0000000aH
  0001c	56		 push	 esi
  0001d	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00022	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5419 : 		data += 2;

  00025	83 c6 02	 add	 esi, 2

; 5420 : 	}

  00028	eb 05		 jmp	 SHORT $LN3@initServer
$LN2@initServer:

; 5421 : 	else
; 5422 : 	{
; 5423 : 		selStartLine = 1;

  0002a	b8 01 00 00 00	 mov	 eax, 1
$LN3@initServer:

; 5424 : 	}
; 5425 : #ifdef _FONT_STYLE_
; 5426 : 	int flg = FALSE;
; 5427 : 	char* temp = sunday(data, "[style ");

  0002f	68 00 00 00 00	 push	 OFFSET ??_C@_07IBAIKNAL@?$FLstyle?5@
  00034	56		 push	 esi
  00035	a3 00 00 00 00	 mov	 DWORD PTR ?selStartLine@@3HA, eax ; selStartLine
  0003a	e8 00 00 00 00	 call	 ?sunday@@YAPADPAD0@Z	; sunday

; 5428 : 	if (temp) {

  0003f	f7 d8		 neg	 eax
  00041	1b c0		 sbb	 eax, eax
  00043	25 c4 00 00 00	 and	 eax, 196		; 000000c4H
  00048	83 c0 3c	 add	 eax, 60			; 0000003cH

; 5429 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),
; 5430 : 			sizeof(msgWN) / sizeof(msgWN[0]), 256);
; 5431 : 	}
; 5432 : 	else {
; 5433 : #ifdef å¯¹è¯æ¡2æå­æé¿	// [ëíì°½ 2 íì¤í¸ ëë¦¬ê¸°]
; 5434 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), 60);
; 5435 : #else
; 5436 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), 40);
; 5437 : #endif 
; 5438 : 
; 5439 : 
; 5440 : 	}
; 5441 : 	getStrSplitNew(msgWN);

  0004b	50		 push	 eax
  0004c	6a 19		 push	 25			; 00000019H
  0004e	68 00 01 00 00	 push	 256			; 00000100H
  00053	56		 push	 esi
  00054	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00059	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  0005e	83 c4 1c	 add	 esp, 28			; 0000001cH
  00061	5e		 pop	 esi
  00062	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _data$[ebp], OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN

; 5442 : #else
; 5443 : 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),
; 5444 : 		sizeof(msgWN) / sizeof(msgWN[0]), 40);
; 5445 : #endif
; 5446 : 
; 5447 : }

  00069	5d		 pop	 ebp

; 5429 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]),
; 5430 : 			sizeof(msgWN) / sizeof(msgWN[0]), 256);
; 5431 : 	}
; 5432 : 	else {
; 5433 : #ifdef å¯¹è¯æ¡2æå­æé¿	// [ëíì°½ 2 íì¤í¸ ëë¦¬ê¸°]
; 5434 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), 60);
; 5435 : #else
; 5436 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), 40);
; 5437 : #endif 
; 5438 : 
; 5439 : 
; 5440 : 	}
; 5441 : 	getStrSplitNew(msgWN);

  0006a	e9 00 00 00 00	 jmp	 ?getStrSplitNew@@YAXQAY0BAA@D@Z ; getStrSplitNew
?initServerWindowType1@@YAXPAD@Z ENDP			; initServerWindowType1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initServerWindowType0@@YAXPAD@Z
_TEXT	SEGMENT
_data$ = 8						; size = 4
?initServerWindowType0@@YAXPAD@Z PROC			; initServerWindowType0, COMDAT

; 5391 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 5392 : 	msgWN_W = 7;
; 5393 : 	msgWN_H = 5;
; 5394 : 	msgWNLen = 40;
; 5395 : 
; 5396 : 	makeStringFromEscaped(data);

  00004	8b 75 08	 mov	 esi, DWORD PTR _data$[ebp]
  00007	56		 push	 esi
  00008	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?msgWN_W@@3HA, 7 ; msgWN_W
  00012	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?msgWN_H@@3HA, 5 ; msgWN_H
  0001c	c7 05 00 00 00
	00 28 00 00 00	 mov	 DWORD PTR ?msgWNLen@@3HA, 40 ; msgWNLen, 00000028H
  00026	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 5397 : #ifdef _FONT_STYLE_
; 5398 : 	int flg = FALSE;
; 5399 : 	char* temp = sunday(data, "[style ");

  0002b	68 00 00 00 00	 push	 OFFSET ??_C@_07IBAIKNAL@?$FLstyle?5@
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 ?sunday@@YAPADPAD0@Z	; sunday
  00036	83 c4 0c	 add	 esp, 12			; 0000000cH

; 5400 : 	if (temp) {

  00039	85 c0		 test	 eax, eax
  0003b	74 07		 je	 SHORT $LN2@initServer

; 5401 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), 256);

  0003d	68 00 01 00 00	 push	 256			; 00000100H

; 5402 : 	}

  00042	eb 06		 jmp	 SHORT $LN7@initServer
$LN2@initServer:

; 5403 : 	else {
; 5404 : 		getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen);

  00044	ff 35 00 00 00
	00		 push	 DWORD PTR ?msgWNLen@@3HA ; msgWNLen
$LN7@initServer:

; 5405 : 	}
; 5406 : 	getStrSplitNew(msgWN);

  0004a	6a 19		 push	 25			; 00000019H
  0004c	68 00 01 00 00	 push	 256			; 00000100H
  00051	56		 push	 esi
  00052	68 00 00 00 00	 push	 OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN
  00057	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  0005c	83 c4 14	 add	 esp, 20			; 00000014H
  0005f	5e		 pop	 esi
  00060	c7 45 08 00 00
	00 00		 mov	 DWORD PTR _data$[ebp], OFFSET ?msgWN@@3PAY0BAA@DA ; msgWN

; 5407 : #else
; 5408 : 	getStrSplit((char*)msgWN, data, sizeof(msgWN[0]), sizeof(msgWN) / sizeof(msgWN[0]), msgWNLen);
; 5409 : #endif
; 5410 : }

  00067	5d		 pop	 ebp

; 5405 : 	}
; 5406 : 	getStrSplitNew(msgWN);

  00068	e9 00 00 00 00	 jmp	 ?getStrSplitNew@@YAXQAY0BAA@D@Z ; getStrSplitNew
?initServerWindowType0@@YAXPAD@Z ENDP			; initServerWindowType0
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?charLogout@@YAHXZ
_TEXT	SEGMENT
?charLogout@@YAHXZ PROC					; charLogout, COMDAT

; 4208 : {

  00000	57		 push	 edi

; 4209 : 	extern unsigned int  systemWndNo;						// ?????î±?
; 4210 : 	static ACTION* ptActMenuWin = NULL;
; 4211 : 	static int x, y, w, h;
; 4212 : 	int ret = 0;

  00001	33 ff		 xor	 edi, edi

; 4213 : 	static char msg[] = "ì²´í¬ ììì¤";
; 4214 : 
; 4215 : 	if (systemWndNo != 1) {

  00003	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?systemWndNo@@3IA, 1 ; systemWndNo
  0000a	74 16		 je	 SHORT $LN2@charLogout

; 4216 : #ifdef _CHAR_NEWLOGOUT
; 4217 : 		lssproto_CharLogout_send(sockfd, 0);

  0000c	57		 push	 edi
  0000d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00013	e8 00 00 00 00	 call	 ?lssproto_CharLogout_send@@YAXHH@Z ; lssproto_CharLogout_send
  00018	83 c4 08	 add	 esp, 8

; 4218 : #endif
; 4219 : 		return 1;

  0001b	b8 01 00 00 00	 mov	 eax, 1
  00020	5f		 pop	 edi

; 4262 : }

  00021	c3		 ret	 0
$LN2@charLogout:

; 4220 : 	}
; 4221 : 	if (charLogoutProcNo == 0) {

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?charLogoutProcNo@@3HA
  00027	85 c0		 test	 eax, eax
  00029	0f 85 86 00 00
	00		 jne	 $LN15@charLogout

; 4222 : 		charLogoutProcNo = 1;
; 4223 : 		w = strlen(msg) * 9 / 64 + 2;

  0002f	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??charLogout@@YAHXZ@4PADA
  00034	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?charLogoutProcNo@@3HA, 1
  0003e	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL13@charLogout:
  00041	8a 01		 mov	 al, BYTE PTR [ecx]
  00043	41		 inc	 ecx
  00044	84 c0		 test	 al, al
  00046	75 f9		 jne	 SHORT $LL13@charLogout
  00048	2b ca		 sub	 ecx, edx

; 4224 : 		h = (16 + 47) / 48;
; 4225 : 		if (h < 2)
; 4226 : 			h = 2;

  0004a	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??charLogout@@YAHXZ@4HA, 2

; 4227 : 		x = (640 - w * 64) / 2;
; 4228 : 		y = (480 - h * 48) / 2;
; 4229 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00054	6a 01		 push	 1
  00056	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0005b	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??charLogout@@YAHXZ@4HA, 192 ; 000000c0H
  00065	6a 00		 push	 0
  00067	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0006a	c1 e9 06	 shr	 ecx, 6
  0006d	83 c1 02	 add	 ecx, 2
  00070	2b c1		 sub	 eax, ecx
  00072	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??charLogout@@YAHXZ@4HA, ecx
  00078	c1 e0 06	 shl	 eax, 6
  0007b	99		 cdq
  0007c	6a 02		 push	 2
  0007e	51		 push	 ecx
  0007f	2b c2		 sub	 eax, edx
  00081	d1 f8		 sar	 eax, 1
  00083	68 c0 00 00 00	 push	 192			; 000000c0H
  00088	50		 push	 eax
  00089	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??charLogout@@YAHXZ@4HA, eax
  0008e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00093	8b c8		 mov	 ecx, eax
  00095	83 c4 18	 add	 esp, 24			; 00000018H
  00098	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A, ecx

; 4230 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 4231 : 		x = ptActMenuWin->x;

  0009e	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000a1	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??charLogout@@YAHXZ@4HA, eax

; 4232 : 		y = ptActMenuWin->y;

  000a6	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000a9	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??charLogout@@YAHXZ@4HA, eax
  000ae	a1 00 00 00 00	 mov	 eax, DWORD PTR ?charLogoutProcNo@@3HA
  000b3	eb 06		 jmp	 SHORT $LN3@charLogout
$LN15@charLogout:

; 4220 : 	}
; 4221 : 	if (charLogoutProcNo == 0) {

  000b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A
$LN3@charLogout:

; 4233 : #endif
; 4234 : 	}
; 4235 : 	if (charLogoutProcNo == 1) {

  000bb	83 f8 01	 cmp	 eax, 1
  000be	75 76		 jne	 SHORT $LN5@charLogout

; 4236 : 		charLogoutStart();

  000c0	e8 00 00 00 00	 call	 ?charLogoutStart@@YAXXZ	; charLogoutStart

; 4237 : 		charLogoutProcNo++;

  000c5	ff 05 00 00 00
	00		 inc	 DWORD PTR ?charLogoutProcNo@@3HA
$LN16@charLogout:

; 4248 : 		}
; 4249 : 	}
; 4250 : 	if (ptActMenuWin != NULL) {

  000cb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A
$LN9@charLogout:
  000d1	85 c9		 test	 ecx, ecx
  000d3	74 5d		 je	 SHORT $LN11@charLogout

; 4251 : 		if (ptActMenuWin->hp >= 1) {

  000d5	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000d9	7c 57		 jl	 SHORT $LN11@charLogout

; 4252 : 			int len;
; 4253 : 			int xx, yy;
; 4254 : 			len = strlen(msg);

  000db	56		 push	 esi
  000dc	be 00 00 00 00	 mov	 esi, OFFSET ?msg@?1??charLogout@@YAHXZ@4PADA
  000e1	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL14@charLogout:
  000e4	8a 06		 mov	 al, BYTE PTR [esi]
  000e6	46		 inc	 esi
  000e7	84 c0		 test	 al, al
  000e9	75 f9		 jne	 SHORT $LL14@charLogout

; 4255 : 			xx = (w * 64 - len * 8) / 2;
; 4256 : 			yy = (h * 48 - 16) / 2;

  000eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??charLogout@@YAHXZ@4HA
  000f0	2b f1		 sub	 esi, ecx

; 4257 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  000f2	6a 00		 push	 0
  000f4	68 00 00 00 00	 push	 OFFSET ?msg@?1??charLogout@@YAHXZ@4PADA
  000f9	6a 00		 push	 0
  000fb	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000fe	c1 e0 04	 shl	 eax, 4
  00101	83 e8 10	 sub	 eax, 16			; 00000010H
  00104	99		 cdq
  00105	2b c2		 sub	 eax, edx
  00107	d1 f8		 sar	 eax, 1
  00109	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??charLogout@@YAHXZ@4HA
  0010f	6a 01		 push	 1
  00111	50		 push	 eax
  00112	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??charLogout@@YAHXZ@4HA
  00117	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??charLogout@@YAHXZ@4HA
  00123	2b ce		 sub	 ecx, esi
  00125	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00128	50		 push	 eax
  00129	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0012e	83 c4 18	 add	 esp, 24			; 00000018H
  00131	5e		 pop	 esi
$LN11@charLogout:

; 4258 : 		}
; 4259 : 	}
; 4260 : 
; 4261 : 	return ret;

  00132	8b c7		 mov	 eax, edi
  00134	5f		 pop	 edi

; 4262 : }

  00135	c3		 ret	 0
$LN5@charLogout:

; 4238 : 	}
; 4239 : 	else
; 4240 : 		if (charLogoutProcNo == 2) {

  00136	83 f8 02	 cmp	 eax, 2
  00139	75 96		 jne	 SHORT $LN9@charLogout

; 4241 : 			ret = charLogoutProc();

  0013b	e8 00 00 00 00	 call	 ?charLogoutProc@@YAHXZ	; charLogoutProc
  00140	8b f8		 mov	 edi, eax

; 4242 : 		}
; 4243 : 
; 4244 : 	if (ret != 0) {

  00142	85 ff		 test	 edi, edi
  00144	74 85		 je	 SHORT $LN16@charLogout

; 4245 : 		if (ptActMenuWin) {

  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A
  0014b	85 c0		 test	 eax, eax
  0014d	74 e3		 je	 SHORT $LN11@charLogout

; 4246 : 			DeathAction(ptActMenuWin);

  0014f	50		 push	 eax
  00150	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00155	83 c4 04	 add	 esp, 4

; 4247 : 			ptActMenuWin = NULL;

  00158	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??charLogout@@YAHXZ@4PAUaction@@A, 0

; 4258 : 		}
; 4259 : 	}
; 4260 : 
; 4261 : 	return ret;

  00162	8b c7		 mov	 eax, edi
  00164	5f		 pop	 edi

; 4262 : }

  00165	c3		 ret	 0
?charLogout@@YAHXZ ENDP					; charLogout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initCharLogout@@YAXXZ
_TEXT	SEGMENT
?initCharLogout@@YAXXZ PROC				; initCharLogout, COMDAT

; 4198 : 	charLogoutProcNo = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charLogoutProcNo@@3HA, 0

; 4199 : }

  0000a	c3		 ret	 0
?initCharLogout@@YAXXZ ENDP				; initCharLogout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?produce_logout@@YAHXZ
_TEXT	SEGMENT
?produce_logout@@YAHXZ PROC				; produce_logout, COMDAT

; 12089: 	switch (produce_vct_no) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?produce_vct_no@@3HA
  00005	83 e8 00	 sub	 eax, 0
  00008	74 30		 je	 SHORT $LN4@produce_lo
  0000a	83 e8 01	 sub	 eax, 1
  0000d	75 54		 jne	 SHORT $LN6@produce_lo

; 12102: 		break;
; 12103: 	case 1:
; 12104: 		// ?î?
; 12105: 		if (DrawProduce(PRODUCE_BRAN_SMALL) == TRUE) {

  0000f	6a 12		 push	 18			; 00000012H
  00011	e8 00 00 00 00	 call	 ?DrawProduce@@YAHH@Z	; DrawProduce
  00016	83 c4 04	 add	 esp, 4
  00019	83 f8 01	 cmp	 eax, 1
  0001c	75 45		 jne	 SHORT $LN6@produce_lo

; 12106: 			BackBufferDrawType = DRAW_BACK_NORMAL;
; 12107: 			// ????????????
; 12108: 			PaletteChange(DEF_PAL, 0);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BackBufferDrawType@@3HA, 0 ; BackBufferDrawType
  0002c	e8 00 00 00 00	 call	 ?PaletteChange@@YAXHH@Z	; PaletteChange
  00031	83 c4 08	 add	 esp, 8

; 12109: 			return 1;		//?îî·?

  00034	b8 01 00 00 00	 mov	 eax, 1

; 12116: }

  00039	c3		 ret	 0
$LN4@produce_lo:

; 12090: 	case 0:
; 12091: 		// ????????????î 
; 12092: 		CopyBackBuffer();

  0003a	e8 00 00 00 00	 call	 ?CopyBackBuffer@@YAXXZ	; CopyBackBuffer

; 12093: 		// ????????î¼?îµî¹î?
; 12094: 		BackBufferDrawType = DRAW_BACK_PRODUCE;

  0003f	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?BackBufferDrawType@@3HA, 2 ; BackBufferDrawType

; 12095: 		// ???????????î¿
; 12096: 		fade_out_bgm();

  00049	e8 00 00 00 00	 call	 ?fade_out_bgm@@YAXXZ	; fade_out_bgm

; 12097: 		// ????????
; 12098: 		NowTime = TimeGetTime();

  0004e	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 12099: 		produce_vct_no++;

  00053	ff 05 00 00 00
	00		 inc	 DWORD PTR ?produce_vct_no@@3HA
  00059	a3 00 00 00 00	 mov	 DWORD PTR ?NowTime@@3KA, eax ; NowTime

; 12100: 		// ???????
; 12101: 		InitMenu();

  0005e	e8 00 00 00 00	 call	 ?InitMenu@@YAXXZ	; InitMenu
$LN6@produce_lo:

; 12110: 		}
; 12111: 		//		MenuProc();	// ??????
; 12112: 		//		ImeProc();	// ???????
; 12113: 		break;
; 12114: 	}
; 12115: 	return 0;		//?î?

  00063	33 c0		 xor	 eax, eax

; 12116: }

  00065	c3		 ret	 0
?produce_logout@@YAHXZ ENDP				; produce_logout
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?charLogin@@YAHXZ
_TEXT	SEGMENT
?charLogin@@YAHXZ PROC					; charLogin, COMDAT

; 3965 : 	static ACTION* ptActMenuWin = NULL;
; 3966 : 	static int x, y, w, h;
; 3967 : 	int ret = 0;
; 3968 : 	static char msg[] = "ìëª/ì²´í¬ì¸/ì§ì ì¤";
; 3969 : 
; 3970 : 	// ???
; 3971 : 	if (charLoginProcNo == 0)

  00000	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?charLoginProcNo@@3FA
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	33 ff		 xor	 edi, edi
  0000a	8d 77 01	 lea	 esi, DWORD PTR [edi+1]
  0000d	66 85 c0	 test	 ax, ax
  00010	0f 85 84 00 00
	00		 jne	 $LN23@charLogin

; 3972 : 	{
; 3973 : 		charLoginProcNo = 1;
; 3974 : 
; 3975 : 		// ??????î
; 3976 : 		w = strlen(msg) * 9 / 64 + 2;

  00016	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??charLogin@@YAHXZ@4PADA
  0001b	66 89 35 00 00
	00 00		 mov	 WORD PTR ?charLoginProcNo@@3FA, si
  00022	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL18@charLogin:
  00025	8a 01		 mov	 al, BYTE PTR [ecx]
  00027	41		 inc	 ecx
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL18@charLogin
  0002c	2b ca		 sub	 ecx, edx

; 3977 : 		h = (16 + 47) / 48;
; 3978 : 		if (h < 2)
; 3979 : 			h = 2;

  0002e	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??charLogin@@YAHXZ@4HA, 2

; 3980 : 		x = (640 - w * 64) / 2;
; 3981 : 		y = (480 - h * 48) / 2;
; 3982 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00038	6a 01		 push	 1
  0003a	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0003f	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??charLogin@@YAHXZ@4HA, 192 ; 000000c0H
  00049	6a 00		 push	 0
  0004b	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0004e	c1 e9 06	 shr	 ecx, 6
  00051	83 c1 02	 add	 ecx, 2
  00054	2b c1		 sub	 eax, ecx
  00056	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??charLogin@@YAHXZ@4HA, ecx
  0005c	c1 e0 06	 shl	 eax, 6
  0005f	99		 cdq
  00060	6a 02		 push	 2
  00062	51		 push	 ecx
  00063	2b c2		 sub	 eax, edx
  00065	d1 f8		 sar	 eax, 1
  00067	68 c0 00 00 00	 push	 192			; 000000c0H
  0006c	50		 push	 eax
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??charLogin@@YAHXZ@4HA, eax
  00072	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00077	8b c8		 mov	 ecx, eax
  00079	83 c4 18	 add	 esp, 24			; 00000018H
  0007c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A, ecx

; 3983 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 3984 : 		x = ptActMenuWin->x;

  00082	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00085	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??charLogin@@YAHXZ@4HA, eax

; 3985 : 		y = ptActMenuWin->y;

  0008a	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0008d	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??charLogin@@YAHXZ@4HA, eax
  00092	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?charLoginProcNo@@3FA
  00098	eb 06		 jmp	 SHORT $LN2@charLogin
$LN23@charLogin:

; 3965 : 	static ACTION* ptActMenuWin = NULL;
; 3966 : 	static int x, y, w, h;
; 3967 : 	int ret = 0;
; 3968 : 	static char msg[] = "ìëª/ì²´í¬ì¸/ì§ì ì¤";
; 3969 : 
; 3970 : 	// ???
; 3971 : 	if (charLoginProcNo == 0)

  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A
$LN2@charLogin:

; 3986 : #endif
; 3987 : 	}
; 3988 : 
; 3989 : 	// ????????î¿
; 3990 : 	if (charLoginProcNo == 1)

  000a0	66 83 f8 01	 cmp	 ax, 1
  000a4	0f 85 0b 01 00
	00		 jne	 $LN4@charLogin

; 3991 : 	{
; 3992 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 3993 : 		extern int æ¯å¦éç»;
; 3994 : 		extern int æ¯å¦éç»ææäº;
; 3995 : 		extern int èªå¨ç»éæ¯å¦å¼å¯;
; 3996 : 		extern int æ¯å¦éç»AIæ¨¡å¼;
; 3997 : 		extern int æ¯å¦éç»äººç©æ¹å;
; 3998 : 		extern int æ¯å¦éç»ç»é;
; 3999 : 		extern int æ¯å¦éç»åè¯;
; 4000 : 		extern int æ¯å¦éå¼ç»ç»é_1;
; 4001 : 		æ¯å¦éç»ææäº = FALSE;
; 4002 : 		æ¯å¦éç» = FALSE;
; 4003 : 		æ¯å¦éç»ç»é = FALSE;
; 4004 : 		æ¯å¦éç»AIæ¨¡å¼ = FALSE;
; 4005 : 		æ¯å¦éç»åè¯ = FALSE;

  000aa	33 c0		 xor	 eax, eax
  000ac	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô?ÔàÖõ@@3HA, edi ; ãÀÜúñìÔô?ÔàÖõ

; 4006 : 		æ¯å¦éå¼ç»ç»é_1 = FALSE;

  000b2	33 c9		 xor	 ecx, ecx
  000b4	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô@@3HA, edi ; ãÀÜúñìÔô
  000ba	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô??@@3HA, edi ; ãÀÜúñìÔô??
  000c0	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔôAIÙ¼ãÒ@@3HA, edi ; ãÀÜúñìÔôAIÙ¼ãÒ
  000c6	a3 00 00 00 00	 mov	 DWORD PTR ?ãÀÜúñìÔôùâ?@@3HA, eax ; ãÀÜúñìÔôùâ?
  000cb	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñì?Ôô??_1@@3HA, ecx ; ãÀÜúñì?Ôô??_1

; 4007 : 		if (PcLanded.å¤§åº >= 0 && PcLanded.å°åº >= 0 && PcLanded.äººç© >= 0 && èªå¨ç»éæ¯å¦å¼å¯) {

  000d1	39 05 00 00 00
	00		 cmp	 DWORD PTR ?PcLanded@@3ULanded@@A, eax
  000d7	7c 67		 jl	 SHORT $LN10@charLogin
  000d9	39 05 08 00 00
	00		 cmp	 DWORD PTR ?PcLanded@@3ULanded@@A+8, eax
  000df	7c 5f		 jl	 SHORT $LN10@charLogin
  000e1	39 05 0c 00 00
	00		 cmp	 DWORD PTR ?PcLanded@@3ULanded@@A+12, eax
  000e7	7c 57		 jl	 SHORT $LN10@charLogin
  000e9	39 05 00 00 00
	00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, eax ; í»?Ôô?ãÀÜú??
  000ef	74 4f		 je	 SHORT $LN10@charLogin

; 4008 : 			æ¯å¦éç» = TRUE;
; 4009 : 			æ¯å¦éç»AIæ¨¡å¼ = TRUE;
; 4010 : 			æ¯å¦éç»äººç©æ¹å = TRUE;
; 4011 : 			if (PcLanded.æ¯å¦èªå¨éæ && PcLanded.éæ¨¡ != 1)

  000f1	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?PcLanded@@3ULanded@@A+4
  000f7	89 35 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô@@3HA, esi ; ãÀÜúñìÔô
  000fd	89 35 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔôAIÙ¼ãÒ@@3HA, esi ; ãÀÜúñìÔôAIÙ¼ãÒ
  00103	89 35 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔôìÑÚªÛ°ú¾@@3HA, esi ; ãÀÜúñìÔôìÑÚªÛ°ú¾
  00109	39 05 14 00 00
	00		 cmp	 DWORD PTR ?PcLanded@@3ULanded@@A+20, eax
  0010f	74 0b		 je	 SHORT $LN7@charLogin
  00111	83 fa 01	 cmp	 edx, 1
  00114	74 0b		 je	 SHORT $LN17@charLogin

; 4012 : 				æ¯å¦éç»ææäº = TRUE;

  00116	89 35 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô?ÔàÖõ@@3HA, esi ; ãÀÜúñìÔô?ÔàÖõ
$LN7@charLogin:

; 4013 : 			if (PcLanded.éæ¨¡ == 1)

  0011c	83 fa 01	 cmp	 edx, 1
  0011f	75 06		 jne	 SHORT $LN8@charLogin
$LN17@charLogin:

; 4014 : 				æ¯å¦éç»ç»é = TRUE;

  00121	89 35 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñìÔô??@@3HA, esi ; ãÀÜúñìÔô??
$LN8@charLogin:

; 4015 : 			if (PcLanded.æ¯å¦èªå¨åè¯)

  00127	39 05 10 00 00
	00		 cmp	 DWORD PTR ?PcLanded@@3ULanded@@A+16, eax
  0012d	0f 45 c6	 cmovne	 eax, esi

; 4016 : 				æ¯å¦éç»åè¯ = TRUE;
; 4017 : 			if (PcLanded.éæ¨¡ == 0)

  00130	85 d2		 test	 edx, edx
  00132	a3 00 00 00 00	 mov	 DWORD PTR ?ãÀÜúñìÔôùâ?@@3HA, eax ; ãÀÜúñìÔôùâ?
  00137	0f 44 ce	 cmove	 ecx, esi
  0013a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ãÀÜúñì?Ôô??_1@@3HA, ecx ; ãÀÜúñì?Ôô??_1
$LN10@charLogin:

; 4018 : 				æ¯å¦éå¼ç»ç»é_1 = TRUE;
; 4019 : 		}
; 4020 : #endif
; 4021 : 		charLoginStart();

  00140	e8 00 00 00 00	 call	 ?charLoginStart@@YAXXZ	; charLoginStart

; 4022 : 		charLoginProcNo++;

  00145	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?charLoginProcNo@@3FA
$LN24@charLogin:

; 4036 : 		}
; 4037 : 	}
; 4038 : 
; 4039 : 	if (ptActMenuWin != NULL)

  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A
$LN13@charLogin:
  00152	85 c9		 test	 ecx, ecx
  00154	74 5a		 je	 SHORT $LN21@charLogin

; 4040 : 	{
; 4041 : 		// ?????î¸î
; 4042 : 		if (ptActMenuWin->hp >= 1)

  00156	39 71 78	 cmp	 DWORD PTR [ecx+120], esi
  00159	7c 55		 jl	 SHORT $LN21@charLogin

; 4043 : 		{
; 4044 : 			int len;
; 4045 : 			int xx, yy;
; 4046 : 
; 4047 : 			len = strlen(msg);

  0015b	be 00 00 00 00	 mov	 esi, OFFSET ?msg@?1??charLogin@@YAHXZ@4PADA
  00160	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL19@charLogin:
  00163	8a 06		 mov	 al, BYTE PTR [esi]
  00165	46		 inc	 esi
  00166	84 c0		 test	 al, al
  00168	75 f9		 jne	 SHORT $LL19@charLogin

; 4048 : 			xx = (w * 64 - len * 8) / 2;
; 4049 : 			yy = (h * 48 - 16) / 2;

  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??charLogin@@YAHXZ@4HA
  0016f	2b f1		 sub	 esi, ecx

; 4050 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  00171	6a 00		 push	 0
  00173	68 00 00 00 00	 push	 OFFSET ?msg@?1??charLogin@@YAHXZ@4PADA
  00178	6a 00		 push	 0
  0017a	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0017d	c1 e0 04	 shl	 eax, 4
  00180	83 e8 10	 sub	 eax, 16			; 00000010H
  00183	99		 cdq
  00184	2b c2		 sub	 eax, edx
  00186	d1 f8		 sar	 eax, 1
  00188	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??charLogin@@YAHXZ@4HA
  0018e	6a 01		 push	 1
  00190	50		 push	 eax
  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??charLogin@@YAHXZ@4HA
  00196	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0019d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??charLogin@@YAHXZ@4HA
  001a2	2b ce		 sub	 ecx, esi
  001a4	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  001a7	50		 push	 eax
  001a8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001ad	83 c4 18	 add	 esp, 24			; 00000018H
$LN21@charLogin:

; 4051 : 		}
; 4052 : 	}
; 4053 : 
; 4054 : 	return ret;
; 4055 : }

  001b0	8b c7		 mov	 eax, edi
  001b2	5f		 pop	 edi
  001b3	5e		 pop	 esi
  001b4	c3		 ret	 0
$LN4@charLogin:

; 4023 : 	}
; 4024 : 	else
; 4025 : 		if (charLoginProcNo == 2)

  001b5	66 83 f8 02	 cmp	 ax, 2
  001b9	75 97		 jne	 SHORT $LN13@charLogin

; 4026 : 		{
; 4027 : 			ret = charLoginProc();

  001bb	e8 00 00 00 00	 call	 ?charLoginProc@@YAHXZ	; charLoginProc
  001c0	8b f8		 mov	 edi, eax

; 4028 : 		}
; 4029 : 
; 4030 : 	if (ret != 0)

  001c2	85 ff		 test	 edi, edi
  001c4	74 86		 je	 SHORT $LN24@charLogin

; 4031 : 	{
; 4032 : 		if (ptActMenuWin)

  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A
  001cb	85 c0		 test	 eax, eax
  001cd	74 e1		 je	 SHORT $LN21@charLogin

; 4033 : 		{
; 4034 : 			DeathAction(ptActMenuWin);

  001cf	50		 push	 eax
  001d0	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001d5	83 c4 04	 add	 esp, 4

; 4035 : 			ptActMenuWin = NULL;

  001d8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??charLogin@@YAHXZ@4PAUaction@@A, 0

; 4051 : 		}
; 4052 : 	}
; 4053 : 
; 4054 : 	return ret;
; 4055 : }

  001e2	8b c7		 mov	 eax, edi
  001e4	5f		 pop	 edi
  001e5	5e		 pop	 esi
  001e6	c3		 ret	 0
?charLogin@@YAHXZ ENDP					; charLogin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initCharLogin@@YAXXZ
_TEXT	SEGMENT
?initCharLogin@@YAXXZ PROC				; initCharLogin, COMDAT

; 3954 : 	charLoginProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?charLoginProcNo@@3FA, ax

; 3955 : }

  00008	c3		 ret	 0
?initCharLogin@@YAXXZ ENDP				; initCharLogin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selHomeTown@@YAHXZ
_TEXT	SEGMENT
_ret$1$ = -4						; size = 4
?selHomeTown@@YAHXZ PROC				; selHomeTown, COMDAT

; 3517 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 3518 : 	static int btnId[] = { -2, -2, -2, -2, -2 };
; 3519 : 	int id;
; 3520 : 	int ret = 0;
; 3521 : 	int ret2;
; 3522 : 	char* homeTownName[] =
; 3523 : 	{
; 3524 : 		"ì´ê¸°ë¥´ ë§ì",
; 3525 : 		"ë§ë¦¬ëì¤ ë§ì",
; 3526 : 		"ìì ë§ì",
; 3527 : 		"ì¹´ë£¨íë ë§ì"
; 3528 : 	};
; 3529 : 	int selUseFlag = 0;
; 3530 : 	int i;
; 3531 : 
; 3532 : 	if (selHomeTownProcNo == 0) {

  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?selHomeTownProcNo@@3HA
  0000c	33 db		 xor	 ebx, ebx
  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 0
  00015	57		 push	 edi
  00016	85 f6		 test	 esi, esi
  00018	75 28		 jne	 SHORT $LN5@selHomeTow

; 3533 : 		for (i = 0; i < sizeof(btnId) / sizeof(int); i++) {
; 3534 : 			btnId[i] = -2;

  0001a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 3535 : 		}
; 3536 : 		selHomeTownProcNo++;

  00021	be 01 00 00 00	 mov	 esi, 1
  00026	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA, xmm0
  0002d	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA+16, -2 ; fffffffeH
  00037	89 35 00 00 00
	00		 mov	 DWORD PTR ?selHomeTownProcNo@@3HA, esi

; 3540 : 		selUseFlag = 2;

  0003d	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]

; 3541 : 	}
; 3542 : 
; 3543 : 	if (selHomeTownProcNo == 10) {

  00040	eb 45		 jmp	 SHORT $LN10@selHomeTow
$LN5@selHomeTow:

; 3537 : 	}
; 3538 : 
; 3539 : 	if (selHomeTownProcNo == 1) {

  00042	83 fe 01	 cmp	 esi, 1
  00045	75 05		 jne	 SHORT $LN6@selHomeTow

; 3540 : 		selUseFlag = 2;

  00047	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]

; 3541 : 	}
; 3542 : 
; 3543 : 	if (selHomeTownProcNo == 10) {

  0004a	eb 3b		 jmp	 SHORT $LN10@selHomeTow
$LN6@selHomeTow:
  0004c	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0004f	75 36		 jne	 SHORT $LN10@selHomeTow

; 3544 : 		ret2 = commonYesNoWindow(320, 240);

  00051	68 f0 00 00 00	 push	 240			; 000000f0H
  00056	68 40 01 00 00	 push	 320			; 00000140H
  0005b	e8 00 00 00 00	 call	 ?commonYesNoWindow@@YAHHH@Z ; commonYesNoWindow
  00060	83 c4 08	 add	 esp, 8

; 3545 : 		if (ret2 == 1) {

  00063	83 f8 01	 cmp	 eax, 1
  00066	75 08		 jne	 SHORT $LN8@selHomeTow

; 3546 : 			ret = 1;

  00068	89 45 fc	 mov	 DWORD PTR _ret$1$[ebp], eax

; 3547 : 			selHomeTownProcNo = 11;

  0006b	8d 70 0a	 lea	 esi, DWORD PTR [eax+10]

; 3548 : 		}

  0006e	eb 11		 jmp	 SHORT $LN39@selHomeTow
$LN8@selHomeTow:

; 3549 : 		else
; 3550 : 			if (ret2 == 2)

  00070	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?selHomeTownProcNo@@3HA
  00076	83 f8 02	 cmp	 eax, 2
  00079	b9 01 00 00 00	 mov	 ecx, 1
  0007e	0f 44 f1	 cmove	 esi, ecx
$LN39@selHomeTow:

; 3551 : 			{
; 3552 : 				selHomeTownProcNo = 1;
; 3553 : 			}
; 3554 : 	}
; 3555 : 
; 3556 : 	id = selGraId(btnId, sizeof(btnId) / sizeof(int));

  00081	89 35 00 00 00
	00		 mov	 DWORD PTR ?selHomeTownProcNo@@3HA, esi
$LN10@selHomeTow:
  00087	6a 05		 push	 5
  00089	68 00 00 00 00	 push	 OFFSET ?btnId@?1??selHomeTown@@YAHXZ@4PAHA
  0008e	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00093	8b f8		 mov	 edi, eax
  00095	83 c4 08	 add	 esp, 8

; 3557 : 	// ?????
; 3558 : 	if (id == 0)

  00098	85 ff		 test	 edi, edi
  0009a	75 09		 jne	 SHORT $LN11@selHomeTow

; 3559 : 	{
; 3560 : 		ret = 2;

  0009c	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 2

; 3561 : 		play_se(217, 320, 240);	// ?????
; 3562 : 	}
; 3563 : 
; 3564 : 	if (1 <= id && id <= 4)

  000a3	eb 1c		 jmp	 SHORT $LN40@selHomeTow
$LN11@selHomeTow:
  000a5	8d 47 ff	 lea	 eax, DWORD PTR [edi-1]
  000a8	83 f8 03	 cmp	 eax, 3
  000ab	77 31		 ja	 SHORT $LN12@selHomeTow

; 3565 : 
; 3566 : 	{
; 3567 : 		nowSelHomeTownNo = id - 1;

  000ad	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelHomeTownNo@@3HA, eax

; 3568 : 		newCharacterHomeTown = nowSelHomeTownNo;

  000b2	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterHomeTown@@3HA, eax ; newCharacterHomeTown

; 3569 : 		selHomeTownProcNo = 10;

  000b7	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?selHomeTownProcNo@@3HA, 10 ; 0000000aH
$LN40@selHomeTow:

; 3570 : 		play_se(217, 320, 240);	// ?????
; 3571 : 	}
; 3572 : 
; 3573 : 
; 3574 : 	if (selHomeTownProcNo == 1)

  000c1	68 f0 00 00 00	 push	 240			; 000000f0H
  000c6	68 40 01 00 00	 push	 320			; 00000140H
  000cb	68 d9 00 00 00	 push	 217			; 000000d9H
  000d0	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000d5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?selHomeTownProcNo@@3HA
  000db	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@selHomeTow:
  000de	83 fe 01	 cmp	 esi, 1
  000e1	75 11		 jne	 SHORT $LN13@selHomeTow

; 3575 : 	{
; 3576 : 		id = focusGraId(btnId, sizeof(btnId) / sizeof(int));

  000e3	6a 05		 push	 5
  000e5	68 00 00 00 00	 push	 OFFSET ?btnId@?1??selHomeTown@@YAHXZ@4PAHA
  000ea	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  000ef	83 c4 08	 add	 esp, 8
  000f2	8b f8		 mov	 edi, eax
$LN13@selHomeTow:

; 3577 : 	}
; 3578 : 	// ?????î?îî¡
; 3579 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 3580 : #else
; 3581 : 	if (id == 1)

  000f4	83 ff 01	 cmp	 edi, 1
  000f7	75 60		 jne	 SHORT $LN14@selHomeTow

; 3582 : 	{
; 3583 : 		StockFontBuffer(444, 96,

  000f9	6a 00		 push	 0
  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DLFCBPCC@?$LM?$KE?$LB?b?$LI?$KD?5?$LI?$LG?$MA?$LL@
  00100	6a 04		 push	 4
  00102	6a 00		 push	 0
  00104	6a 60		 push	 96			; 00000060H
  00106	68 bc 01 00 00	 push	 444			; 000001bcH
  0010b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3584 : 			FONT_PRIO_BACK, FONT_PAL_YELLOW, homeTownName[0], 0);
; 3585 : 
; 3586 : 		StockFontBuffer(386, 156,

  00110	6a 00		 push	 0
  00112	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@OGPAGALA@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@
  00117	57		 push	 edi
  00118	6a 00		 push	 0
  0011a	68 9c 00 00 00	 push	 156			; 0000009cH
  0011f	68 82 01 00 00	 push	 386			; 00000182H
  00124	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3587 : 			FONT_PRIO_BACK, 1, "ì¬ì´ëì¤ì ëìª½ì ìì¹í´ ììµëë¤.", 0);
; 3588 : 		StockFontBuffer(386, 176,

  00129	6a 00		 push	 0
  0012b	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@IHPDPOHC@4?$LA?$LD?5?$LI?$LG?$MA?$LL?A?$NP?5?$LA?$KB?$MA?e?5?E?$KO?$LE?O?$LE?Y?4@
  00130	57		 push	 edi
  00131	6a 00		 push	 0
  00133	68 b0 00 00 00	 push	 176			; 000000b0H
  00138	68 82 01 00 00	 push	 386			; 00000182H
  0013d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00142	83 c4 48	 add	 esp, 72			; 00000048H

; 3589 : 			FONT_PRIO_BACK, 1, "4ê° ë§ìì¤ ê°ì¥ í½ëë¤.", 0);
; 3590 : 		StockFontBuffer(386, 196,

  00145	b8 82 01 00 00	 mov	 eax, 386		; 00000182H
  0014a	b9 c4 00 00 00	 mov	 ecx, 196		; 000000c4H
  0014f	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BO@BMBAEGNC@?$LG?G?G?Q?5?$LA?$KB?$MA?e?5?A?z?$LM?$KN?$MA?V?$LE?B?5?$LI?$LG?$MA?$LL?$MA?L?$LE?Y?$KB?$KD@

; 3591 : 			FONT_PRIO_BACK, 1, "ëí ê°ì¥ ì§ììë ë§ìì´ë¤ã", 0);
; 3592 : 
; 3593 : 	}

  00154	e9 1d 01 00 00	 jmp	 $LN23@selHomeTow
$LN14@selHomeTow:

; 3594 : 	else
; 3595 : 		// ?????î?îî¡
; 3596 : 		if (id == 2)

  00159	83 ff 02	 cmp	 edi, 2
  0015c	75 43		 jne	 SHORT $LN16@selHomeTow

; 3597 : 		{
; 3598 : 			StockFontBuffer(444, 96,

  0015e	6a 00		 push	 0
  00160	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OLOFEGAL@?$LI?$LG?$LI?$KO?$LD?J?$LN?$LK?5?$LI?$LG?$MA?$LL@
  00165	6a 04		 push	 4
  00167	6a 00		 push	 0
  00169	6a 60		 push	 96			; 00000060H
  0016b	68 bc 01 00 00	 push	 444			; 000001bcH
  00170	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3599 : 				FONT_PRIO_BACK, FONT_PAL_YELLOW, homeTownName[1], 0);
; 3600 : 			StockFontBuffer(390, 166,

  00175	6a 00		 push	 0
  00177	68 00 00 00 00	 push	 OFFSET ??_C@_0CD@FJDMGMIM@?$LL?g?$MA?L?$LD?J?$LN?$LK?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O@
  0017c	6a 01		 push	 1
  0017e	6a 00		 push	 0
  00180	68 a6 00 00 00	 push	 166			; 000000a6H
  00185	68 86 01 00 00	 push	 390			; 00000186H
  0018a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0018f	83 c4 30	 add	 esp, 48			; 00000030H

; 3601 : 				FONT_PRIO_BACK, 1, "ì¬ì´ëì¤ì ììª½ì ìì¹í´ ììµëë¤.", 0);
; 3602 : 			StockFontBuffer(390, 186,

  00192	b9 ba 00 00 00	 mov	 ecx, 186		; 000000baH
  00197	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0CL@GOPLDOIL@?$LO?F?$LI?$KH?$LE?Y?$LP?n?5?G?X?$LK?$KP?$MA?$LL?5?$LJ?Y?$LG?s?$LK?$LI?$LA?m?5?$MA?V?$LE?B?5?$LI@

; 3603 : 				FONT_PRIO_BACK, 1, "ìë¦ë¤ì´ í´ë³ì ë°ë¼ë³´ê³  ìë ë§ììëë¤ã", 0);
; 3604 : 		}

  0019c	e9 d0 00 00 00	 jmp	 $LN41@selHomeTow
$LN16@selHomeTow:

; 3605 : 		else
; 3606 : 			// ?????î?îî¡
; 3607 : 			if (id == 3)

  001a1	83 ff 03	 cmp	 edi, 3
  001a4	75 5a		 jne	 SHORT $LN18@selHomeTow

; 3608 : 			{
; 3609 : 				StockFontBuffer(444, 96,

  001a6	6a 00		 push	 0
  001a8	68 00 00 00 00	 push	 OFFSET ??_C@_09GFHIJBMK@?$MA?p?$MA?p?5?$LI?$LG?$MA?$LL@
  001ad	6a 04		 push	 4
  001af	6a 00		 push	 0
  001b1	6a 60		 push	 96			; 00000060H
  001b3	68 bc 01 00 00	 push	 444			; 000001bcH
  001b8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3610 : 					FONT_PRIO_BACK, FONT_PAL_YELLOW, homeTownName[2], 0);
; 3611 : 
; 3612 : 				StockFontBuffer(390, 156,

  001bd	6a 00		 push	 0
  001bf	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@DMMCBILE@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LF?$LP?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@
  001c4	6a 01		 push	 1
  001c6	6a 00		 push	 0
  001c8	68 9c 00 00 00	 push	 156			; 0000009cH
  001cd	68 86 01 00 00	 push	 390			; 00000186H
  001d2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3613 : 					FONT_PRIO_BACK, 1, "ê°ì°ë¦°ì ëìª½ì ìì¹í´ ììµëë¤ï¼", 0);
; 3614 : 				StockFontBuffer(390, 176,

  001d7	6a 00		 push	 0
  001d9	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DLENCNEM@?$LN?$KD?$MA?$LI?$LH?N?5?$LF?Q?$LH?$KP?5?$LN?W?$LP?$KJ?$MA?V?$LE?B@
  001de	6a 01		 push	 1
  001e0	6a 00		 push	 0
  001e2	68 b0 00 00 00	 push	 176			; 000000b0H
  001e7	68 86 01 00 00	 push	 390			; 00000186H
  001ec	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001f1	83 c4 48	 add	 esp, 72			; 00000048H

; 3615 : 					FONT_PRIO_BACK, 1, "ì²ì¼ë¡ ëë¬ ìì¬ìë", 0);
; 3616 : 				StockFontBuffer(390, 196,

  001f4	b9 c4 00 00 00	 mov	 ecx, 196		; 000000c4H
  001f9	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BF@PENPANFK@?$LN?L?$LB?W?$LH?$KP?$LP?n?5?$LD?l?$LL?v?5?$LI?$LG?$MA?$LL?$KB?$KD@

; 3617 : 					FONT_PRIO_BACK, 1, "ì±ê·¸ë¬ì´ ë¹ì ë§ìã", 0);
; 3618 : 
; 3619 : 			}

  001fe	eb 71		 jmp	 SHORT $LN41@selHomeTow
$LN18@selHomeTow:

; 3620 : 			else
; 3621 : 				if (id == 4)

  00200	83 ff 04	 cmp	 edi, 4
  00203	75 59		 jne	 SHORT $LN20@selHomeTow

; 3622 : 				{
; 3623 : 					StockFontBuffer(444, 96,

  00205	6a 00		 push	 0
  00207	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FAJDIKKM@?D?$KL?$LH?g?E?$LI?$LD?$KK?5?$LI?$LG?$MA?$LL@
  0020c	57		 push	 edi
  0020d	6a 00		 push	 0
  0020f	6a 60		 push	 96			; 00000060H
  00211	68 bc 01 00 00	 push	 444			; 000001bcH
  00216	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3624 : 						FONT_PRIO_BACK, FONT_PAL_YELLOW, homeTownName[3], 0);
; 3625 : 
; 3626 : 					StockFontBuffer(390, 156,

  0021b	6a 00		 push	 0
  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@JHAOGAJO@?$LA?$KB?$LP?l?$LI?$LA?$MA?G?5?$LM?$KN?B?J?$LP?$KB?5?$MA?$KH?D?$KB?G?X?5?$MA?V?$LN?$MA?$LE?O?$LE?Y@
  00222	6a 01		 push	 1
  00224	6a 00		 push	 0
  00226	68 9c 00 00 00	 push	 156			; 0000009cH
  0022b	68 86 01 00 00	 push	 390			; 00000186H
  00230	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3627 : 						FONT_PRIO_BACK, 1, "ê°ì°ë¦°ì ììª½ì ìì¹í´ ììµëë¤ã", 0);
; 3628 : 					StockFontBuffer(390, 176,

  00235	6a 00		 push	 0
  00237	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BHNBHDIA@?$LI?$LG?$MA?$LL?$MA?$LK?5?$MA?$NL?$MA?$LK?5?$LP?$KJ?$LH?$KP@
  0023c	6a 01		 push	 1
  0023e	6a 00		 push	 0
  00240	68 b0 00 00 00	 push	 176			; 000000b0H
  00245	68 86 01 00 00	 push	 390			; 00000186H
  0024a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0024f	83 c4 48	 add	 esp, 72			; 00000048H

; 3629 : 						FONT_PRIO_BACK, 1, "ë§ìì ìì ì¬ë¬", 0);
; 3630 : 					StockFontBuffer(390, 196,

  00252	b9 c4 00 00 00	 mov	 ecx, 196		; 000000c4H
  00257	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@MIIMPKCJ@?$LM?$LG?5?$MA?$KH?$LP?$KB?5?A?v?$LO?n?A?$LD?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@

; 3631 : 						FONT_PRIO_BACK, 1, "ì¬ ìì ì§ì´ì¡ìµëë¤ã", 0);
; 3632 : 
; 3633 : 				}

  0025c	eb 13		 jmp	 SHORT $LN41@selHomeTow
$LN20@selHomeTow:

; 3634 : 				else
; 3635 : 					if (id == 0)

  0025e	b9 b0 00 00 00	 mov	 ecx, 176		; 000000b0H

; 3636 : 					{
; 3637 : 						StockFontBuffer(390, 176,

  00263	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@
  00268	85 ff		 test	 edi, edi
  0026a	74 05		 je	 SHORT $LN41@selHomeTow

; 3638 : 							FONT_PRIO_BACK, 1, "ì´ì íë©´ì¼ë¡ ëìê°ê¸°ã", 0);
; 3639 : 					}
; 3640 : 					else
; 3641 : 					{
; 3642 : 						StockFontBuffer(390, 176,

  0026c	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BI@JKLCAMPH@?C?b?$LN?E?A?v?$LI?$KG?5?$LM?$LB?E?C?G?O?$LN?J?$LN?C?$LP?$MA?$KB?$KD@
$LN41@selHomeTow:

; 3643 : 							FONT_PRIO_BACK, 1, "ì¶ì ì§ë¥¼ ì ííì­ìì¤ã", 0);
; 3644 : 					}
; 3645 : 
; 3646 : 	btnId[0] = StockDispBuffer(412, 296, DISP_PRIO_CHAR, CG_CHR_MAKE_BACK_BTN, selUseFlag);

  00271	b8 86 01 00 00	 mov	 eax, 390		; 00000186H
$LN23@selHomeTow:
  00276	6a 00		 push	 0
  00278	52		 push	 edx
  00279	6a 01		 push	 1
  0027b	6a 00		 push	 0
  0027d	51		 push	 ecx
  0027e	50		 push	 eax
  0027f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00284	53		 push	 ebx
  00285	68 6e 71 00 00	 push	 29038			; 0000716eH
  0028a	6a 0a		 push	 10			; 0000000aH
  0028c	68 28 01 00 00	 push	 296			; 00000128H
  00291	68 9c 01 00 00	 push	 412			; 0000019cH
  00296	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3647 : 
; 3648 : 	btnId[1] = StockDispBuffer(320, 240, DISP_PRIO_BG, CG_CHR_MAKE_HOME_NAME0, selUseFlag);

  0029b	53		 push	 ebx
  0029c	68 70 71 00 00	 push	 29040			; 00007170H
  002a1	6a 00		 push	 0
  002a3	68 f0 00 00 00	 push	 240			; 000000f0H
  002a8	68 40 01 00 00	 push	 320			; 00000140H
  002ad	a3 00 00 00 00	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA, eax
  002b2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002b7	83 c4 40	 add	 esp, 64			; 00000040H
  002ba	a3 04 00 00 00	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA+4, eax

; 3649 : 	btnId[2] = StockDispBuffer(320, 240, DISP_PRIO_BG, CG_CHR_MAKE_HOME_NAME1, selUseFlag);

  002bf	53		 push	 ebx
  002c0	68 71 71 00 00	 push	 29041			; 00007171H
  002c5	6a 00		 push	 0
  002c7	68 f0 00 00 00	 push	 240			; 000000f0H
  002cc	68 40 01 00 00	 push	 320			; 00000140H
  002d1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3650 : 	btnId[3] = StockDispBuffer(320, 240, DISP_PRIO_BG, CG_CHR_MAKE_HOME_NAME2, selUseFlag);

  002d6	53		 push	 ebx
  002d7	68 72 71 00 00	 push	 29042			; 00007172H
  002dc	6a 00		 push	 0
  002de	68 f0 00 00 00	 push	 240			; 000000f0H
  002e3	68 40 01 00 00	 push	 320			; 00000140H
  002e8	a3 08 00 00 00	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA+8, eax
  002ed	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3651 : 	btnId[4] = StockDispBuffer(320, 240, DISP_PRIO_BG, CG_CHR_MAKE_HOME_NAME3, selUseFlag);

  002f2	53		 push	 ebx
  002f3	68 73 71 00 00	 push	 29043			; 00007173H
  002f8	6a 00		 push	 0
  002fa	68 f0 00 00 00	 push	 240			; 000000f0H
  002ff	68 40 01 00 00	 push	 320			; 00000140H
  00304	a3 0c 00 00 00	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA+12, eax
  00309	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0030e	83 c4 3c	 add	 esp, 60			; 0000003cH
  00311	a3 10 00 00 00	 mov	 DWORD PTR ?btnId@?1??selHomeTown@@YAHXZ@4PAHA+16, eax

; 3652 : 
; 3653 : 	if (ResoMode == åè¾¨ç::mode800) {

  00316	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  0031b	5f		 pop	 edi
  0031c	5e		 pop	 esi
  0031d	5b		 pop	 ebx
  0031e	83 f8 03	 cmp	 eax, 3
  00321	75 0f		 jne	 SHORT $LN24@selHomeTow

; 3654 : 		StockDispBuffer(400, 300, DISP_PRIO_BG, IMAGE_SetCSD_2, 0);

  00323	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  00328	ba 30 a0 00 00	 mov	 edx, 41008		; 0000a030H
  0032d	8d 48 9c	 lea	 ecx, DWORD PTR [eax-100]

; 3655 : 	}

  00330	eb 21		 jmp	 SHORT $LN27@selHomeTow
$LN24@selHomeTow:

; 3656 : 	else if (ResoMode == åè¾¨ç::mode1024) {

  00332	83 f8 04	 cmp	 eax, 4
  00335	75 0f		 jne	 SHORT $LN26@selHomeTow

; 3657 : 		StockDispBuffer(512, 384, DISP_PRIO_BG, IMAGE_SetCSD_3, 0);

  00337	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  0033c	ba 18 a4 00 00	 mov	 edx, 42008		; 0000a418H
  00341	8d 48 80	 lea	 ecx, DWORD PTR [eax-128]

; 3658 : 	}

  00344	eb 0d		 jmp	 SHORT $LN27@selHomeTow
$LN26@selHomeTow:

; 3659 : 	else {
; 3660 : 		StockDispBuffer(320, 240, DISP_PRIO_BG, IMAGE_SetCSD_1, 0);

  00346	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  0034b	ba 48 9c 00 00	 mov	 edx, 40008		; 00009c48H
  00350	8d 48 b0	 lea	 ecx, DWORD PTR [eax-80]
$LN27@selHomeTow:

; 3661 : 	}
; 3662 : 
; 3663 : #endif
; 3664 : 	return ret;

  00353	6a 00		 push	 0
  00355	52		 push	 edx
  00356	6a 00		 push	 0
  00358	51		 push	 ecx
  00359	50		 push	 eax
  0035a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0035f	8b 45 fc	 mov	 eax, DWORD PTR _ret$1$[ebp]
  00362	83 c4 14	 add	 esp, 20			; 00000014H

; 3665 : }

  00365	8b e5		 mov	 esp, ebp
  00367	5d		 pop	 ebp
  00368	c3		 ret	 0
?selHomeTown@@YAHXZ ENDP				; selHomeTown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSelHomeTown@@YAXXZ
_TEXT	SEGMENT
?initSelHomeTown@@YAXXZ PROC				; initSelHomeTown, COMDAT

; 3512 : 	selHomeTownProcNo = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selHomeTownProcNo@@3HA, 0

; 3513 : 	nowSelHomeTownNo = 0;

  0000a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelHomeTownNo@@3HA, 0

; 3514 : }

  00014	c3		 ret	 0
?initSelHomeTown@@YAXXZ ENDP				; initSelHomeTown
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?createChar@@YAHXZ
_TEXT	SEGMENT
_msg$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
?createChar@@YAHXZ PROC					; createChar, COMDAT

; 3683 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3684 : 	static ACTION* ptActMenuWin = NULL;
; 3685 : 	static int x, y, w, h;
; 3686 : 	int ret = 0;
; 3687 : 	int ret2;
; 3688 : 	char msg[] = "ìºë¦­í° ì ì ì¤...";

  00010	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@FPKFEPPA@?D?$LD?$LI?$KP?E?M?5?A?$KG?$MA?$NL?5?A?$NP?4?4?4@+16
  00016	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@FPKFEPPA@?D?$LD?$LI?$KP?E?M?5?A?$KG?$MA?$NL?5?A?$NP?4?4?4@
  0001d	66 89 45 f8	 mov	 WORD PTR _msg$[ebp+16], ax

; 3689 : 
; 3690 : 	// ???
; 3691 : 	if (createCharProcNo == 0)

  00021	a1 00 00 00 00	 mov	 eax, DWORD PTR ?createCharProcNo@@3HA
  00026	0f 11 45 e8	 movups	 XMMWORD PTR _msg$[ebp], xmm0
  0002a	85 c0		 test	 eax, eax
  0002c	0f 85 98 00 00
	00		 jne	 $LN20@createChar

; 3692 : 	{
; 3693 : 		createCharProcNo++;
; 3694 : 
; 3695 : 		// ??????î
; 3696 : 		w = (strlen(msg) * 9 + 63) / 64;

  00032	8d 4d e8	 lea	 ecx, DWORD PTR _msg$[ebp]
  00035	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?createCharProcNo@@3HA, 1
  0003f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL15@createChar:
  00042	8a 01		 mov	 al, BYTE PTR [ecx]
  00044	41		 inc	 ecx
  00045	84 c0		 test	 al, al
  00047	75 f9		 jne	 SHORT $LL15@createChar
  00049	2b ca		 sub	 ecx, edx
  0004b	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0004e	83 c1 3f	 add	 ecx, 63			; 0000003fH
  00051	c1 e9 06	 shr	 ecx, 6
  00054	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??createChar@@YAHXZ@4HA, ecx
  0005a	8b d1		 mov	 edx, ecx
  0005c	83 f9 02	 cmp	 ecx, 2

; 3697 : 		if (w < 2)

  0005f	73 0d		 jae	 SHORT $LN3@createChar

; 3698 : 			w = 2;

  00061	b9 02 00 00 00	 mov	 ecx, 2
  00066	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??createChar@@YAHXZ@4HA, ecx
  0006c	8b d1		 mov	 edx, ecx
$LN3@createChar:

; 3699 : 		h = 2;
; 3700 : 		x = (640 - w * 64) / 2;
; 3701 : 		y = (480 - h * 48) / 2;
; 3702 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  0006e	6a 01		 push	 1
  00070	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00075	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??createChar@@YAHXZ@4HA, 2
  0007f	2b c2		 sub	 eax, edx
  00081	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??createChar@@YAHXZ@4HA, 192 ; 000000c0H
  0008b	c1 e0 06	 shl	 eax, 6
  0008e	6a 00		 push	 0
  00090	99		 cdq
  00091	6a 02		 push	 2
  00093	51		 push	 ecx
  00094	2b c2		 sub	 eax, edx
  00096	d1 f8		 sar	 eax, 1
  00098	68 c0 00 00 00	 push	 192			; 000000c0H
  0009d	50		 push	 eax
  0009e	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??createChar@@YAHXZ@4HA, eax
  000a3	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a8	8b c8		 mov	 ecx, eax
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A, ecx

; 3703 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 3704 : 		x = ptActMenuWin->x;

  000b3	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000b6	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??createChar@@YAHXZ@4HA, eax

; 3705 : 		y = ptActMenuWin->y;

  000bb	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000be	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??createChar@@YAHXZ@4HA, eax
  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?createCharProcNo@@3HA
  000c8	eb 06		 jmp	 SHORT $LN2@createChar
$LN20@createChar:

; 3689 : 
; 3690 : 	// ???
; 3691 : 	if (createCharProcNo == 0)

  000ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A
$LN2@createChar:

; 3706 : #endif
; 3707 : 	}
; 3708 : 
; 3709 : 	// î¡????î?î¿
; 3710 : 	if (createCharProcNo == 1)

  000d0	83 f8 01	 cmp	 eax, 1
  000d3	75 16		 jne	 SHORT $LN4@createChar

; 3711 : 	{
; 3712 : 		createNewCharStart();

  000d5	e8 00 00 00 00	 call	 ?createNewCharStart@@YAXXZ ; createNewCharStart

; 3713 : 		createCharProcNo++;

  000da	a1 00 00 00 00	 mov	 eax, DWORD PTR ?createCharProcNo@@3HA
  000df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A
  000e5	40		 inc	 eax
  000e6	a3 00 00 00 00	 mov	 DWORD PTR ?createCharProcNo@@3HA, eax
$LN4@createChar:

; 3714 : 	}
; 3715 : 	if (createCharProcNo == 2)

  000eb	56		 push	 esi
  000ec	83 f8 02	 cmp	 eax, 2
  000ef	75 4a		 jne	 SHORT $LN10@createChar

; 3716 : 	{
; 3717 : 		ret2 = createNewCharProc();

  000f1	e8 00 00 00 00	 call	 ?createNewCharProc@@YAHXZ ; createNewCharProc

; 3718 : 		// ??
; 3719 : 		if (ret2 == 1)

  000f6	83 f8 01	 cmp	 eax, 1
  000f9	75 04		 jne	 SHORT $LN6@createChar

; 3720 : 		{
; 3721 : 			ret = 1;

  000fb	8b f0		 mov	 esi, eax

; 3722 : 		}

  000fd	eb 09		 jmp	 SHORT $LN14@createChar
$LN6@createChar:

; 3723 : 		else
; 3724 : 			// î§î²
; 3725 : 			if (ret2 < 0)

  000ff	85 c0		 test	 eax, eax
  00101	79 32		 jns	 SHORT $LN21@createChar

; 3726 : 			{
; 3727 : 				ret = 2;

  00103	be 02 00 00 00	 mov	 esi, 2
$LN14@createChar:

; 3728 : 			}
; 3729 : 	}
; 3730 : 
; 3731 : 
; 3732 : 	// ?????????????î¼??
; 3733 : 	if (ret != 0)
; 3734 : 	{
; 3735 : 		if (ptActMenuWin)

  00108	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A
  0010d	85 c0		 test	 eax, eax
  0010f	74 13		 je	 SHORT $LN19@createChar

; 3736 : 		{
; 3737 : 			DeathAction(ptActMenuWin);

  00111	50		 push	 eax
  00112	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00117	83 c4 04	 add	 esp, 4

; 3738 : 			ptActMenuWin = NULL;

  0011a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A, 0
$LN19@createChar:

; 3754 : 		}
; 3755 : 	}
; 3756 : 
; 3757 : 	return ret;
; 3758 : }

  00124	8b c6		 mov	 eax, esi
  00126	5e		 pop	 esi
  00127	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012a	33 cd		 xor	 ecx, ebp
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
$LN21@createChar:

; 3723 : 		else
; 3724 : 			// î§î²
; 3725 : 			if (ret2 < 0)

  00135	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??createChar@@YAHXZ@4PAUaction@@A
$LN10@createChar:

; 3739 : 		}
; 3740 : 	}
; 3741 : 
; 3742 : 	if (ptActMenuWin != NULL)

  0013b	85 c9		 test	 ecx, ecx
  0013d	74 65		 je	 SHORT $LN18@createChar

; 3743 : 	{
; 3744 : 		// ?????î¸î
; 3745 : 		if (ptActMenuWin->hp >= 1)

  0013f	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  00143	7c 5f		 jl	 SHORT $LN18@createChar

; 3746 : 		{
; 3747 : 			int len;
; 3748 : 			int xx, yy;
; 3749 : 
; 3750 : 			len = strlen(msg) / 2;

  00145	8d 75 e8	 lea	 esi, DWORD PTR _msg$[ebp]
  00148	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  0014b	0f 1f 44 00 00	 npad	 5
$LL16@createChar:
  00150	8a 06		 mov	 al, BYTE PTR [esi]
  00152	46		 inc	 esi
  00153	84 c0		 test	 al, al
  00155	75 f9		 jne	 SHORT $LL16@createChar

; 3751 : 			xx = (w * 64 - len * 17) / 2;
; 3752 : 			yy = (h * 48 - 16) / 2;
; 3753 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  00157	6a 00		 push	 0
  00159	8d 45 e8	 lea	 eax, DWORD PTR _msg$[ebp]
  0015c	2b f1		 sub	 esi, ecx
  0015e	50		 push	 eax
  0015f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??createChar@@YAHXZ@4HA
  00164	6a 00		 push	 0
  00166	d1 ee		 shr	 esi, 1
  00168	6a 01		 push	 1
  0016a	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0016d	8b ce		 mov	 ecx, esi
  0016f	c1 e0 04	 shl	 eax, 4
  00172	83 e8 10	 sub	 eax, 16			; 00000010H
  00175	c1 e1 04	 shl	 ecx, 4
  00178	99		 cdq
  00179	03 ce		 add	 ecx, esi
  0017b	2b c2		 sub	 eax, edx
  0017d	d1 f8		 sar	 eax, 1
  0017f	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??createChar@@YAHXZ@4HA
  00185	50		 push	 eax
  00186	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??createChar@@YAHXZ@4HA
  0018b	c1 e0 06	 shl	 eax, 6
  0018e	2b c1		 sub	 eax, ecx
  00190	99		 cdq
  00191	2b c2		 sub	 eax, edx
  00193	d1 f8		 sar	 eax, 1
  00195	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??createChar@@YAHXZ@4HA
  0019b	50		 push	 eax
  0019c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001a1	83 c4 18	 add	 esp, 24			; 00000018H
$LN18@createChar:

; 3754 : 		}
; 3755 : 	}
; 3756 : 
; 3757 : 	return ret;
; 3758 : }

  001a4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a7	33 c0		 xor	 eax, eax
  001a9	33 cd		 xor	 ecx, ebp
  001ab	5e		 pop	 esi
  001ac	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b1	8b e5		 mov	 esp, ebp
  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
?createChar@@YAHXZ ENDP					; createChar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initCreateChar@@YAXXZ
_TEXT	SEGMENT
?initCreateChar@@YAXXZ PROC				; initCreateChar, COMDAT

; 3674 : 	createCharProcNo = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?createCharProcNo@@3HA, 0

; 3675 : }

  0000a	c3		 ret	 0
?initCreateChar@@YAXXZ ENDP				; initCreateChar
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?editCharParam@@YAHXZ
_TEXT	SEGMENT
_ret$1$ = -208						; size = 4
_id3$1$ = -204						; size = 4
_id$1$ = -200						; size = 4
_i$2$ = -196						; size = 4
tv2542 = -196						; size = 4
_btn2$2$ = -192						; size = 4
_btn1$1$ = -192						; size = 4
tv2539 = -192						; size = 4
_selUseFlag$1$ = -188					; size = 4
_btn2$3$ = -184						; size = 4
_btn2$1$ = -184						; size = 4
_btn1$2$ = -184						; size = 4
tv2567 = -184						; size = 4
_attrColor$ = -180					; size = 32
_statusLocate$ = -148					; size = 32
_attrLocate$ = -116					; size = 32
_upDownBtnGraNo$ = -84					; size = 16
_msg$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?editCharParam@@YAHXZ PROC				; editCharParam, COMDAT

; 2795 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2796 : 	int ret = 0;
; 2797 : 	char msg[64];
; 2798 : 	int x1, y1, x2, y2;
; 2799 : 	int cnt = 1;
; 2800 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ[ì¼ê´ ì´ë³´ì ë§ììì íìí¨]
; 2801 : 	BORNPETINFO petinfo[4] = {
; 2802 : 
; 2803 : 		{ 100251 , 0 , 4 , 6 , 0 , "ëë¦¬"},
; 2804 : 		{ 100296 , 2 , 0 , 0 , 8 , "ì¼ì´ë¹"},
; 2805 : 		{ 100292 , 0 , 7 , 3 , 0 , "ì¿ ì¿ ë¥´"},
; 2806 : 		{ 100266 , 6 , 0 , 0 , 4 , "ì¤í¬í¬"} };
; 2807 : 
; 2808 : 	/*		{ 101490 , 7 , 5 , 8 , 3 , "í´ì ì"},
; 2809 : 			{ 100444 , 10 , 10 , 10 , 10 , "ì´ë ì ì ë ¹ì"},
; 2810 : 			{ 100725 , 10 , 9 , 10 , 9 , "ì½í¤ë¬´ì¼"},
; 2811 : 			{ 100451 , 1 , 1 , 1 , 1 , "ë§ë í¼ì"}};
; 2812 : 	*/	int BornPreBtn, BornNextBtn;
; 2813 : 	int attrx1, attry1, attrx2, attry2;
; 2814 : 	int BornBaseX = 430, BornBaseY = 110;
; 2815 : #endif
; 2816 : 	static int graId[] =
; 2817 : 	{ -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
; 2818 : 	  -2, -2, -2, -2, -2, -2, -2, -2,
; 2819 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ[ì¼ê´ ì´ë³´ì ë§ììì íìí¨]
; 2820 : 	  - 2, -2, -2, -2, -2, -2 };
; 2821 : #else
; 2822 : 		- 2, -2, -2, -2
; 2823 : };
; 2824 : #endif
; 2825 : 	int i;
; 2826 : 	int id, id2, id3;
; 2827 : 
; 2828 : 
; 2829 : 	int statusLocate[4][2] =
; 2830 : 	{
; 2831 : 		{ 111, 250 },

  00013	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000001160000006f000000fa0000006f
  0001a	0f 11 85 6c ff
	ff ff		 movups	 XMMWORD PTR _statusLocate$[ebp], xmm0

; 2832 : 		{ 111, 278 },
; 2833 : 		{ 111, 305 },
; 2834 : 		{ 111, 334 }
; 2835 : 	};
; 2836 : 	int attrLocate[4][2] =
; 2837 : 	{
; 2838 : 		{ 297, 255 },
; 2839 : 		{ 297, 279 },
; 2840 : 		{ 297, 303 },
; 2841 : 		{ 297, 327 }
; 2842 : 	};
; 2843 : 	int attrColor[4][2] =
; 2844 : 	{
; 2845 : 		{ SYSTEM_PAL_GREEN,  SYSTEM_PAL_GREEN2  },
; 2846 : 		{ SYSTEM_PAL_AQUA,   SYSTEM_PAL_AQUA2   },
; 2847 : 		{ SYSTEM_PAL_RED,    SYSTEM_PAL_RED2    },
; 2848 : 		{ SYSTEM_PAL_YELLOW, SYSTEM_PAL_YELLOW2 }
; 2849 : 	};
; 2850 : 	int upDownBtnGraNo[][2] =
; 2851 : 	{
; 2852 : 		{ CG_PREV_BTN, CG_PREV_BTN_DOWN },
; 2853 : 		{ CG_NEXT_BTN, CG_NEXT_BTN_DOWN }
; 2854 : 	};
; 2855 : 	int selUseFlag = 0;
; 2856 : 	int btn1, btn2;
; 2857 : 
; 2858 : 
; 2859 : 
; 2860 : 	GetKeyInputFocus(NULL);

  00021	6a 00		 push	 0
  00023	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000014e0000006f000001310000006f
  0002a	0f 11 85 7c ff
	ff ff		 movups	 XMMWORD PTR _statusLocate$[ebp+16], xmm0
  00031	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _ret$1$[ebp], 0
  0003b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000011700000129000000ff00000129
  00042	0f 11 45 8c	 movups	 XMMWORD PTR _attrLocate$[ebp], xmm0
  00046	c7 85 44 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _selUseFlag$1$[ebp], 0
  00050	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000147000001290000012f00000129
  00057	0f 11 45 9c	 movups	 XMMWORD PTR _attrLocate$[ebp+16], xmm0
  0005b	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000006000000fe00000002000000fa
  00062	0f 11 85 4c ff
	ff ff		 movups	 XMMWORD PTR _attrColor$[ebp], xmm0
  00069	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000003000000fb00000001000000f9
  00070	0f 11 85 5c ff
	ff ff		 movups	 XMMWORD PTR _attrColor$[ebp+16], xmm0
  00077	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00006647000066460000664500006644
  0007e	0f 11 45 ac	 movups	 XMMWORD PTR _upDownBtnGraNo$[ebp], xmm0
  00082	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00087	83 c4 04	 add	 esp, 4

; 2861 : 
; 2862 : 	if (editCharParamProcNo == 0)

  0008a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 0
  00091	75 3c		 jne	 SHORT $LN23@editCharPa

; 2863 : 	{
; 2864 : 		for (i = 0; i < sizeof(graId) / sizeof(int); i++)

  00093	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0009a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA, xmm0

; 2865 : 		{
; 2866 : 			graId[i] = -2;
; 2867 : 		}
; 2868 : 		editCharParamProcNo++;

  000a1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1
  000ab	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+16, xmm0
  000b2	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+32, xmm0
  000b9	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+48, xmm0
  000c0	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+64, xmm0
  000c7	66 0f d6 05 50
	00 00 00	 movq	 QWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+80, xmm0
$LN23@editCharPa:

; 2869 : 	}
; 2870 : 
; 2871 : 	id = -1;
; 2872 : 	id3 = -1;
; 2873 : 	if (editCharParamProcNo == 1)

  000cf	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 1
  000d6	53		 push	 ebx
  000d7	56		 push	 esi
  000d8	57		 push	 edi
  000d9	c7 85 38 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR _id$1$[ebp], -1
  000e3	c7 85 34 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR _id3$1$[ebp], -1
  000ed	0f 85 29 03 00
	00		 jne	 $LN67@editCharPa

; 2874 : 	{
; 2875 : 		selUseFlag = 2;
; 2876 : 		GetKeyInputFocus(&selCharName);

  000f3	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  000f8	c7 85 44 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR _selUseFlag$1$[ebp], 2
  00102	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 2877 : 		//id = selGraId( graId, sizeof( graId )/sizeof( int ) );
; 2878 : 		id = selRepGraId(graId, sizeof(graId) / sizeof(int));

  00107	6a 16		 push	 22			; 00000016H
  00109	68 00 00 00 00	 push	 OFFSET ?graId@?1??editCharParam@@YAHXZ@4PAHA
  0010e	e8 00 00 00 00	 call	 ?selRepGraId@@YAHPAHH@Z	; selRepGraId
  00113	8b d8		 mov	 ebx, eax

; 2879 : 		id3 = pushGraId(graId, sizeof(graId) / sizeof(int));

  00115	6a 16		 push	 22			; 00000016H
  00117	68 00 00 00 00	 push	 OFFSET ?graId@?1??editCharParam@@YAHXZ@4PAHA
  0011c	89 9d 38 ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx
  00122	e8 00 00 00 00	 call	 ?pushGraId@@YAHPAHH@Z	; pushGraId
  00127	83 c4 14	 add	 esp, 20			; 00000014H
  0012a	89 85 34 ff ff
	ff		 mov	 DWORD PTR _id3$1$[ebp], eax

; 2880 : 
; 2881 : 		if (id == 0)

  00130	85 db		 test	 ebx, ebx
  00132	0f 85 35 01 00
	00		 jne	 $LN25@editCharPa

; 2882 : 		{
; 2883 : 			if (selCharName.cnt <= 0)

  00138	8a 15 07 01 00
	00		 mov	 dl, BYTE PTR ?selCharName@@3USTR_BUFFER@@A+263
  0013e	84 d2		 test	 dl, dl
  00140	0f 84 df 02 00
	00		 je	 $LN206@editCharPa

; 2884 : 			{
; 2885 : 				editCharParamProcNo = 100;
; 2886 : 			}
; 2887 : 			else
; 2888 : 				if (nowSelCharStatusPoint > 0)

  00146	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?nowSelCharStatusPoint@@3HA, ebx
  0014c	0f 8f 83 03 00
	00		 jg	 $LN207@editCharPa

; 2889 : 				{
; 2890 : 					editCharParamProcNo = 104;
; 2891 : 				}
; 2892 : 				else
; 2893 : 					if (nowSelCharAttrPoint > 0)

  00152	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?nowSelCharAttrPoint@@3HA, ebx
  00158	0f 8f cf 03 00
	00		 jg	 $LN208@editCharPa

; 2894 : 					{
; 2895 : 						editCharParamProcNo = 106;
; 2896 : 					}
; 2897 : 					else
; 2898 : 					{
; 2899 : 						strcpy(newCharacterName, selCharName.buffer);

  0015e	33 c9		 xor	 ecx, ecx
$LL147@editCharPa:
  00160	8a 81 00 00 00
	00		 mov	 al, BYTE PTR ?selCharName@@3USTR_BUFFER@@A[ecx]
  00166	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00169	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?newCharacterName@@3PADA[ecx-1], al
  0016f	84 c0		 test	 al, al
  00171	75 ed		 jne	 SHORT $LL147@editCharPa

; 2900 : 						newCharacterName[selCharName.cnt] = '\0';

  00173	0f b6 c2	 movzx	 eax, dl

; 2901 : 
; 2902 : 						if (cmpNameCharacterList(selCharName.buffer))

  00176	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  0017b	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?newCharacterName@@3PADA[eax], 0
  00182	e8 00 00 00 00	 call	 ?cmpNameCharacterList@@YAHPAD@Z ; cmpNameCharacterList
  00187	83 c4 04	 add	 esp, 4
  0018a	85 c0		 test	 eax, eax
  0018c	0f 85 eb 02 00
	00		 jne	 $LN209@editCharPa
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00192	68 00 00 00 00	 push	 OFFSET ??_C@_01CLKCMJKC@?5@
  00197	68 00 00 00 00	 push	 OFFSET ?newCharacterName@@3PADA ; newCharacterName
  0019c	e8 00 00 00 00	 call	 _strstr
  001a1	83 c4 08	 add	 esp, 8
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 2908 : 								|| strstr(newCharacterName, "  ") != NULL)

  001a4	85 c0		 test	 eax, eax
  001a6	0f 85 d9 03 00
	00		 jne	 $LN210@editCharPa
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\string.h

; 520  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  001ac	68 00 00 00 00	 push	 OFFSET ??_C@_02KNHHEEKP@?5?5@
  001b1	68 00 00 00 00	 push	 OFFSET ?newCharacterName@@3PADA ; newCharacterName
  001b6	e8 00 00 00 00	 call	 _strstr
  001bb	83 c4 08	 add	 esp, 8
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp

; 2908 : 								|| strstr(newCharacterName, "  ") != NULL)

  001be	85 c0		 test	 eax, eax
  001c0	0f 85 bf 03 00
	00		 jne	 $LN210@editCharPa

; 2909 : 							{
; 2910 : 								editCharParamProcNo = 108;
; 2911 : 							}
; 2912 : 						/*else
; 2913 : 						if(!CheckName(newCharacterName))
; 2914 : 						{
; 2915 : 							editCharParamProcNo = 110;
; 2916 : 						}*/
; 2917 : 							else
; 2918 : 							{
; 2919 : 								// ?î
; 2920 : 								ret = 1;
; 2921 : 								newCharacterGraNo =

  001c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowSelCharGraNo@@3HA
  001cc	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _ret$1$[ebp], 1

; 2922 : 									selectGraNoTbl[nowSelCharGraNo] + selCharColor[nowSelCharGraNo] * 5;
; 2923 : 								newCharacterFaceGraNo =
; 2924 : 									CG_CHR_MAKE_FACE + nowSelCharGraNo * 100
; 2925 : 									+ selCharColor[nowSelCharGraNo] * 25
; 2926 : 									+ nowSelCharEyeNo * 5 + nowSelCharMouthNo;
; 2927 : 								newCharacterVit = nowSelCharStatus[0];
; 2928 : 								newCharacterStr = nowSelCharStatus[1];
; 2929 : 								newCharacterTgh = nowSelCharStatus[2];
; 2930 : 								newCharacterDex = nowSelCharStatus[3];
; 2931 : 								newCharacterEarth = nowSelCharAttr[0];
; 2932 : 								newCharacterWater = nowSelCharAttr[1];
; 2933 : 								newCharacterFire = nowSelCharAttr[2];
; 2934 : 								newCharacterWind = nowSelCharAttr[3];
; 2935 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ[ìë ì¶ìì§ ë³ìë¥¼ ì´ì©íì¬ í« ì¶ìì ê¸°ë¡í¨] 
; 2936 : 								//ç¨åæ¥çåºçç¹åæ°çºªå½åºçå® 
; 2937 : 								newCharacterHomeTown = BornPetNum;
; 2938 : #endif
; 2939 : 								loginDp = 0;

  001d6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?loginDp@@3HA, 0 ; loginDp
  001e0	8b 0c 95 00 00
	00 00		 mov	 ecx, DWORD PTR ?selCharColor@@3PAHA[edx*4]
  001e7	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  001ea	03 04 95 00 00
	00 00		 add	 eax, DWORD PTR ?selectGraNoTbl@@3PAHA[edx*4]
  001f1	8d 0c 91	 lea	 ecx, DWORD PTR [ecx+edx*4]
  001f4	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterGraNo@@3HA, eax ; newCharacterGraNo
  001f9	81 c1 b0 04 00
	00		 add	 ecx, 1200		; 000004b0H
  001ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharEyeNo@@3HA
  00204	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00207	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharMouthNo@@3HA
  0020c	03 d1		 add	 edx, ecx
  0020e	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  00211	03 c2		 add	 eax, edx
  00213	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterFaceGraNo@@3HA, eax ; newCharacterFaceGraNo
  00218	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharStatus@@3PAHA
  0021d	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterVit@@3HA, eax ; newCharacterVit
  00222	a1 04 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharStatus@@3PAHA+4
  00227	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterStr@@3HA, eax ; newCharacterStr
  0022c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharStatus@@3PAHA+8
  00231	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterTgh@@3HA, eax ; newCharacterTgh
  00236	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharStatus@@3PAHA+12
  0023b	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterDex@@3HA, eax ; newCharacterDex
  00240	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharAttr@@3PAHA
  00245	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterEarth@@3HA, eax ; newCharacterEarth
  0024a	a1 04 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharAttr@@3PAHA+4
  0024f	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterWater@@3HA, eax ; newCharacterWater
  00254	a1 08 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharAttr@@3PAHA+8
  00259	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterFire@@3HA, eax ; newCharacterFire
  0025e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharAttr@@3PAHA+12
  00263	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterWind@@3HA, eax ; newCharacterWind

; 2940 : 								play_se(217, 320, 240);	// ?????

  00268	e9 98 01 00 00	 jmp	 $LN220@editCharPa
$LN25@editCharPa:

; 2941 : 							}
; 2942 : 					}
; 2943 : 		}
; 2944 : 		else
; 2945 : 			// ??
; 2946 : 			if (id == 1)

  0026d	83 fb 01	 cmp	 ebx, 1
  00270	75 0f		 jne	 SHORT $LN38@editCharPa

; 2947 : 			{
; 2948 : 				ret = 2;

  00272	c7 85 30 ff ff
	ff 02 00 00 00	 mov	 DWORD PTR _ret$1$[ebp], 2

; 2949 : 				play_se(217, 320, 240);	// ?????
; 2950 : 			}

  0027c	e9 84 01 00 00	 jmp	 $LN220@editCharPa
$LN38@editCharPa:

; 2951 : 			else
; 2952 : 				// ??????????î ?î¤?
; 2953 : 				if (2 <= id && id <= 9)

  00281	8d 43 fe	 lea	 eax, DWORD PTR [ebx-2]
  00284	83 f8 07	 cmp	 eax, 7
  00287	77 53		 ja	 SHORT $LN40@editCharPa

; 2954 : 				{
; 2955 : 					id2 = id - 2;
; 2956 : 					if ((id2 % 2) == 0)

  00289	a8 01		 test	 al, 1
  0028b	75 29		 jne	 SHORT $LN42@editCharPa

; 2957 : 					{
; 2958 : 						if (nowSelCharStatus[id2 / 2] > 0)

  0028d	99		 cdq
  0028e	2b c2		 sub	 eax, edx
  00290	8b c8		 mov	 ecx, eax
  00292	d1 f9		 sar	 ecx, 1
  00294	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?nowSelCharStatus@@3PAHA[ecx*4]
  0029b	85 c0		 test	 eax, eax
  0029d	0f 8e 79 01 00
	00		 jle	 $LN67@editCharPa

; 2959 : 						{
; 2960 : 							nowSelCharStatus[id2 / 2]--;

  002a3	48		 dec	 eax

; 2961 : 							nowSelCharStatusPoint++;

  002a4	ff 05 00 00 00
	00		 inc	 DWORD PTR ?nowSelCharStatusPoint@@3HA
  002aa	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?nowSelCharStatus@@3PAHA[ecx*4], eax

; 2962 : 							play_se(217, 320, 240);
; 2963 : 						}
; 2964 : 					}

  002b1	e9 4f 01 00 00	 jmp	 $LN220@editCharPa
$LN42@editCharPa:

; 2965 : 					else
; 2966 : 					{
; 2967 : 						if (nowSelCharStatusPoint > 0)

  002b6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowSelCharStatusPoint@@3HA
  002bc	85 c9		 test	 ecx, ecx
  002be	0f 8e 58 01 00
	00		 jle	 $LN67@editCharPa

; 2968 : 						{
; 2969 : 
; 2970 : #ifdef __TEST_SERVER
; 2971 : 							if (nowSelCharStatusPoint > 100)
; 2972 : 								cnt = 10;
; 2973 : 							else
; 2974 : 								cnt = 1;
; 2975 : 							nowSelCharStatus[id2 / 2] += cnt;
; 2976 : 							nowSelCharStatusPoint -= cnt;
; 2977 : 							play_se(217, 320, 240);
; 2978 : #else
; 2979 : 							nowSelCharStatus[id2 / 2]++;

  002c4	99		 cdq
  002c5	2b c2		 sub	 eax, edx
  002c7	d1 f8		 sar	 eax, 1
  002c9	ff 04 85 00 00
	00 00		 inc	 DWORD PTR ?nowSelCharStatus@@3PAHA[eax*4]

; 2980 : 							nowSelCharStatusPoint--;

  002d0	49		 dec	 ecx
  002d1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nowSelCharStatusPoint@@3HA, ecx

; 2981 : 							play_se(217, 320, 240);
; 2982 : #endif
; 2983 : 
; 2984 : 						}
; 2985 : 					}
; 2986 : 				}

  002d7	e9 29 01 00 00	 jmp	 $LN220@editCharPa
$LN40@editCharPa:

; 2987 : 				else
; 2988 : 					if (10 <= id && id <= 17)

  002dc	8d 43 f6	 lea	 eax, DWORD PTR [ebx-10]
  002df	89 85 48 ff ff
	ff		 mov	 DWORD PTR tv2567[ebp], eax
  002e5	83 f8 07	 cmp	 eax, 7
  002e8	0f 87 a4 00 00
	00		 ja	 $LN46@editCharPa

; 2989 : 					{
; 2990 : 						id2 = id - 10;
; 2991 : 						if ((id2 % 2) == 0)

  002ee	99		 cdq
  002ef	2b c2		 sub	 eax, edx
  002f1	8b c8		 mov	 ecx, eax
  002f3	d1 f9		 sar	 ecx, 1
  002f5	f6 85 48 ff ff
	ff 01		 test	 BYTE PTR tv2567[ebp], 1
  002fc	75 22		 jne	 SHORT $LN48@editCharPa

; 2992 : 						{
; 2993 : 							if (nowSelCharAttr[id2 / 2] > 0)

  002fe	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?nowSelCharAttr@@3PAHA[ecx*4]
  00305	85 c0		 test	 eax, eax
  00307	0f 8e 0f 01 00
	00		 jle	 $LN67@editCharPa

; 2994 : 							{
; 2995 : 								nowSelCharAttr[id2 / 2]--;

  0030d	48		 dec	 eax

; 2996 : 								nowSelCharAttrPoint++;

  0030e	ff 05 00 00 00
	00		 inc	 DWORD PTR ?nowSelCharAttrPoint@@3HA
  00314	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?nowSelCharAttr@@3PAHA[ecx*4], eax

; 2997 : 								play_se(217, 320, 240);
; 2998 : 							}
; 2999 : 						}

  0031b	e9 e5 00 00 00	 jmp	 $LN220@editCharPa
$LN48@editCharPa:

; 3000 : 						else
; 3001 : 						{
; 3002 : 							int no, no2;
; 3003 : 
; 3004 : 							no = id2 / 2;
; 3005 : 							if (no < 2)
; 3006 : 							{
; 3007 : 								no2 = no + 2;
; 3008 : 							}
; 3009 : 							else
; 3010 : 							{
; 3011 : 								no2 = no - 2;
; 3012 : 							}
; 3013 : 
; 3014 : 							if (nowSelCharAttr[no2] == 0)

  00320	33 c0		 xor	 eax, eax
  00322	83 f9 02	 cmp	 ecx, 2
  00325	0f 9c c0	 setl	 al
  00328	8d 04 85 fe ff
	ff ff		 lea	 eax, DWORD PTR [eax*4-2]
  0032f	03 c1		 add	 eax, ecx
  00331	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA[eax*4], 0
  00339	0f 85 dd 00 00
	00		 jne	 $LN67@editCharPa

; 3015 : 							{
; 3016 : 								if (nowSelCharAttrPoint > 0)

  0033f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharAttrPoint@@3HA
  00344	85 c0		 test	 eax, eax
  00346	7e 12		 jle	 SHORT $LN54@editCharPa

; 3017 : 								{
; 3018 : 									nowSelCharAttr[no]++;

  00348	ff 04 8d 00 00
	00 00		 inc	 DWORD PTR ?nowSelCharAttr@@3PAHA[ecx*4]

; 3019 : 									nowSelCharAttrPoint--;

  0034f	48		 dec	 eax
  00350	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharAttrPoint@@3HA, eax

; 3020 : 									play_se(217, 320, 240);
; 3021 : 								}

  00355	e9 ab 00 00 00	 jmp	 $LN220@editCharPa
$LN54@editCharPa:

; 3022 : 								else
; 3023 : 								{
; 3024 : 									for (i = 0; i < 4; i++)

  0035a	33 c0		 xor	 eax, eax
  0035c	0f 1f 40 00	 npad	 4
$LL7@editCharPa:

; 3025 : 									{
; 3026 : 										if (i != no && nowSelCharAttr[i] > 0)

  00360	3b c1		 cmp	 eax, ecx
  00362	74 0a		 je	 SHORT $LN5@editCharPa
  00364	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA[eax*4], 0
  0036c	7f 0b		 jg	 SHORT $LN160@editCharPa
$LN5@editCharPa:

; 3022 : 								else
; 3023 : 								{
; 3024 : 									for (i = 0; i < 4; i++)

  0036e	40		 inc	 eax
  0036f	83 f8 04	 cmp	 eax, 4
  00372	7c ec		 jl	 SHORT $LL7@editCharPa
  00374	e9 a3 00 00 00	 jmp	 $LN67@editCharPa
$LN160@editCharPa:

; 3027 : 										{
; 3028 : 											break;
; 3029 : 										}
; 3030 : 									}
; 3031 : 									if (i < 4)

  00379	83 f8 04	 cmp	 eax, 4
  0037c	0f 8d 9a 00 00
	00		 jge	 $LN67@editCharPa

; 3032 : 									{
; 3033 : 										nowSelCharAttr[no]++;

  00382	ff 04 8d 00 00
	00 00		 inc	 DWORD PTR ?nowSelCharAttr@@3PAHA[ecx*4]

; 3034 : 										nowSelCharAttr[i]--;

  00389	ff 0c 85 00 00
	00 00		 dec	 DWORD PTR ?nowSelCharAttr@@3PAHA[eax*4]

; 3035 : 										play_se(217, 320, 240);
; 3036 : 									}
; 3037 : 								}
; 3038 : 							}
; 3039 : 						}
; 3040 : 					}

  00390	eb 73		 jmp	 SHORT $LN220@editCharPa
$LN46@editCharPa:

; 3041 : 					else
; 3042 : 						if (id == 18 || id == 19)

  00392	83 fb 12	 cmp	 ebx, 18			; 00000012H
  00395	74 58		 je	 SHORT $LN205@editCharPa
  00397	83 fb 13	 cmp	 ebx, 19			; 00000013H
  0039a	74 42		 je	 SHORT $LN61@editCharPa

; 3067 : 						}
; 3068 : 						else
; 3069 : 							if (id == 20 || id == 21)

  0039c	83 fb 14	 cmp	 ebx, 20			; 00000014H
  0039f	74 20		 je	 SHORT $LN204@editCharPa
  003a1	83 fb 15	 cmp	 ebx, 21			; 00000015H
  003a4	75 76		 jne	 SHORT $LN67@editCharPa

; 3080 : 									}
; 3081 : 								}
; 3082 : 								else
; 3083 : 									// ?????????
; 3084 : 								{
; 3085 : 									if (nowSelCharMouthNo < 4)

  003a6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharMouthNo@@3HA
  003ab	83 f8 04	 cmp	 eax, 4
  003ae	7d 08		 jge	 SHORT $LN73@editCharPa

; 3086 : 									{
; 3087 : 										nowSelCharMouthNo++;

  003b0	40		 inc	 eax

; 3092 : 									}
; 3093 : 								}
; 3094 : 								play_se(217, 320, 240);	// ?????

  003b1	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, eax
  003b6	eb 4d		 jmp	 SHORT $LN220@editCharPa
$LN73@editCharPa:

; 3088 : 									}
; 3089 : 									else
; 3090 : 									{
; 3091 : 										nowSelCharMouthNo = 0;

  003b8	33 c0		 xor	 eax, eax

; 3092 : 									}
; 3093 : 								}
; 3094 : 								play_se(217, 320, 240);	// ?????

  003ba	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, eax
  003bf	eb 44		 jmp	 SHORT $LN220@editCharPa
$LN204@editCharPa:

; 3070 : 							{
; 3071 : 								if (id == 20)
; 3072 : 								{
; 3073 : 									if (nowSelCharMouthNo > 0)

  003c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharMouthNo@@3HA
  003c6	85 c0		 test	 eax, eax
  003c8	7e 08		 jle	 SHORT $LN71@editCharPa

; 3074 : 									{
; 3075 : 										nowSelCharMouthNo--;

  003ca	48		 dec	 eax

; 3092 : 									}
; 3093 : 								}
; 3094 : 								play_se(217, 320, 240);	// ?????

  003cb	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, eax
  003d0	eb 33		 jmp	 SHORT $LN220@editCharPa
$LN71@editCharPa:

; 3076 : 									}
; 3077 : 									else
; 3078 : 									{
; 3079 : 										nowSelCharMouthNo = 4;

  003d2	b8 04 00 00 00	 mov	 eax, 4

; 3092 : 									}
; 3093 : 								}
; 3094 : 								play_se(217, 320, 240);	// ?????

  003d7	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, eax
  003dc	eb 27		 jmp	 SHORT $LN220@editCharPa
$LN61@editCharPa:

; 3053 : 								}
; 3054 : 							}
; 3055 : 							else
; 3056 : 							{
; 3057 : 								if (nowSelCharEyeNo < 4)

  003de	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharEyeNo@@3HA
  003e3	83 f8 04	 cmp	 eax, 4
  003e6	7d 03		 jge	 SHORT $LN65@editCharPa

; 3058 : 								{
; 3059 : 									nowSelCharEyeNo++;

  003e8	40		 inc	 eax

; 3060 : 								}

  003e9	eb 15		 jmp	 SHORT $LN64@editCharPa
$LN65@editCharPa:

; 3061 : 								else
; 3062 : 								{
; 3063 : 									nowSelCharEyeNo = 0;

  003eb	33 c0		 xor	 eax, eax
  003ed	eb 11		 jmp	 SHORT $LN64@editCharPa
$LN205@editCharPa:

; 3043 : 						{
; 3044 : 							if (id == 18)
; 3045 : 							{
; 3046 : 								if (nowSelCharEyeNo > 0)

  003ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharEyeNo@@3HA
  003f4	85 c0		 test	 eax, eax
  003f6	7e 03		 jle	 SHORT $LN63@editCharPa

; 3047 : 								{
; 3048 : 									nowSelCharEyeNo--;

  003f8	48		 dec	 eax

; 3049 : 								}

  003f9	eb 05		 jmp	 SHORT $LN64@editCharPa
$LN63@editCharPa:

; 3050 : 								else
; 3051 : 								{
; 3052 : 									nowSelCharEyeNo = 4;

  003fb	b8 04 00 00 00	 mov	 eax, 4
$LN64@editCharPa:

; 3064 : 								}
; 3065 : 							}
; 3066 : 							play_se(217, 320, 240);

  00400	a3 00 00 00 00	 mov	 DWORD PTR ?nowSelCharEyeNo@@3HA, eax
$LN220@editCharPa:

; 3095 : 							}
; 3096 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 3097 : 							else
; 3098 : 								if (id == 22 || id == 23)
; 3099 : 								{
; 3100 : 									if (pActPet20 != NULL)
; 3101 : 									{
; 3102 : 										DeathAction(pActPet20);
; 3103 : 										pActPet20 = NULL;
; 3104 : 									}
; 3105 : 									if (id == 22)
; 3106 : 									{
; 3107 : 										if (BornPetNum > 0)
; 3108 : 											BornPetNum--;
; 3109 : 										else
; 3110 : 											BornPetNum = 3;
; 3111 : 									}
; 3112 : 									else
; 3113 : 									{
; 3114 : 										if (BornPetNum < 3)
; 3115 : 											BornPetNum++;
; 3116 : 										else
; 3117 : 											BornPetNum = 0;
; 3118 : 									}
; 3119 : 									play_se(217, 320, 240);
; 3120 : 								}
; 3121 : #endif
; 3122 : 	}
; 3123 : 
; 3124 : 
; 3125 : 	// ????????
; 3126 : 	// î¡î·î¼????
; 3127 : 	if (editCharParamProcNo == 100)

  00405	68 f0 00 00 00	 push	 240			; 000000f0H
  0040a	68 40 01 00 00	 push	 320			; 00000140H
  0040f	68 d9 00 00 00	 push	 217			; 000000d9H
  00414	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00419	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN67@editCharPa:
  0041c	83 3d 00 00 00
	00 64		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 100 ; 00000064H
  00423	75 26		 jne	 SHORT $LN75@editCharPa
$LN206@editCharPa:

; 3128 : 	{
; 3129 : 		initCommonMsgWin();

  00425	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3130 : 		editCharParamProcNo++;
; 3131 : 		play_se(220, 320, 240);	// ???

  0042a	68 f0 00 00 00	 push	 240			; 000000f0H
  0042f	68 40 01 00 00	 push	 320			; 00000140H
  00434	68 dc 00 00 00	 push	 220			; 000000dcH
  00439	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 101 ; 00000065H
  00443	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00448	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN75@editCharPa:

; 3132 : 	}
; 3133 : 	if (editCharParamProcNo == 101)

  0044b	83 3d 00 00 00
	00 65		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 101 ; 00000065H
  00452	75 20		 jne	 SHORT $LN214@editCharPa

; 3134 : 	{
; 3135 : 		if (commonMsgWin("ì´ë¦ì ìë ¥íì§ ìììµëë¤ï¼"))

  00454	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@MICBHKJB@?$MA?L?$LI?$KH?$MA?$LL?5?$MA?T?$LH?B?G?O?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
  00459	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  0045e	83 c4 04	 add	 esp, 4
  00461	85 c0		 test	 eax, eax
  00463	74 0f		 je	 SHORT $LN214@editCharPa

; 3136 : 		{
; 3137 : 			// ï¼¯ï¼«????????
; 3138 : 			editCharParamProcNo = 1;

  00465	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3139 : 		}
; 3140 : 	}
; 3141 : 	// î¯????î¡
; 3142 : 	if (editCharParamProcNo == 102)

  0046f	e9 bf 01 00 00	 jmp	 $LN211@editCharPa
$LN214@editCharPa:
  00474	83 3d 00 00 00
	00 66		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 102 ; 00000066H
  0047b	75 26		 jne	 SHORT $LN78@editCharPa
$LN209@editCharPa:

; 3143 : 	{
; 3144 : 		initCommonMsgWin();

  0047d	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3145 : 		editCharParamProcNo++;
; 3146 : 		play_se(220, 320, 240);	// ???

  00482	68 f0 00 00 00	 push	 240			; 000000f0H
  00487	68 40 01 00 00	 push	 320			; 00000140H
  0048c	68 dc 00 00 00	 push	 220			; 000000dcH
  00491	c7 05 00 00 00
	00 67 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 103 ; 00000067H
  0049b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004a0	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN78@editCharPa:

; 3147 : 	}
; 3148 : 	if (editCharParamProcNo == 103)

  004a3	83 3d 00 00 00
	00 67		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 103 ; 00000067H
  004aa	75 20		 jne	 SHORT $LN215@editCharPa

; 3149 : 	{
; 3150 : 		if (commonMsgWin("ê°ì ì´ë¦ì ìºë¦­í°ê° ì´ë¯¸ ì¡´ì¬í©ëë¤ï¼"))

  004ac	68 00 00 00 00	 push	 OFFSET ??_C@_0CH@NAEAKGPD@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?D?$LD?$LI?$KP?E?M?$LA?$KB?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G@
  004b1	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  004b6	83 c4 04	 add	 esp, 4
  004b9	85 c0		 test	 eax, eax
  004bb	74 0f		 je	 SHORT $LN215@editCharPa

; 3151 : 		{
; 3152 : 			// ï¼¯ï¼«????????
; 3153 : 			editCharParamProcNo = 1;

  004bd	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3154 : 		}
; 3155 : 	}
; 3156 : 	// ??????î ?î¤??????î´???
; 3157 : 	if (editCharParamProcNo == 104)

  004c7	e9 67 01 00 00	 jmp	 $LN211@editCharPa
$LN215@editCharPa:
  004cc	83 3d 00 00 00
	00 68		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 104 ; 00000068H
  004d3	75 26		 jne	 SHORT $LN81@editCharPa
$LN207@editCharPa:

; 3158 : 	{
; 3159 : 		initCommonMsgWin();

  004d5	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3160 : 		editCharParamProcNo++;
; 3161 : 		play_se(220, 320, 240);	// ???

  004da	68 f0 00 00 00	 push	 240			; 000000f0H
  004df	68 40 01 00 00	 push	 320			; 00000140H
  004e4	68 dc 00 00 00	 push	 220			; 000000dcH
  004e9	c7 05 00 00 00
	00 69 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 105 ; 00000069H
  004f3	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004f8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN81@editCharPa:

; 3162 : 	}
; 3163 : 	if (editCharParamProcNo == 105)

  004fb	83 3d 00 00 00
	00 69		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 105 ; 00000069H
  00502	75 20		 jne	 SHORT $LN216@editCharPa

; 3164 : 	{
; 3165 : 		if (commonMsgWin("ìí í¬ì¸í¸ë¥¼ ë¶ë°° ìë£íì¸ìï¼"))

  00504	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@HJHEICBF@?$LL?s?E?B?5?F?w?$MA?N?F?$KO?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM?$LP?d?$KD?$KB@
  00509	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  0050e	83 c4 04	 add	 esp, 4
  00511	85 c0		 test	 eax, eax
  00513	74 0f		 je	 SHORT $LN216@editCharPa

; 3166 : 		{
; 3167 : 			// ï¼¯ï¼«????????
; 3168 : 			editCharParamProcNo = 1;

  00515	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3169 : 		}
; 3170 : 	}
; 3171 : 	// î´î?î ?î¤??????î´???
; 3172 : 	if (editCharParamProcNo == 106)

  0051f	e9 0f 01 00 00	 jmp	 $LN211@editCharPa
$LN216@editCharPa:
  00524	83 3d 00 00 00
	00 6a		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 106 ; 0000006aH
  0052b	75 26		 jne	 SHORT $LN84@editCharPa
$LN208@editCharPa:

; 3173 : 	{
; 3174 : 		initCommonMsgWin();

  0052d	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3175 : 		editCharParamProcNo++;
; 3176 : 		play_se(220, 320, 240);	// ???

  00532	68 f0 00 00 00	 push	 240			; 000000f0H
  00537	68 40 01 00 00	 push	 320			; 00000140H
  0053c	68 dc 00 00 00	 push	 220			; 000000dcH
  00541	c7 05 00 00 00
	00 6b 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 107 ; 0000006bH
  0054b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00550	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN84@editCharPa:

; 3177 : 	}
; 3178 : 	if (editCharParamProcNo == 107)

  00553	83 3d 00 00 00
	00 6b		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 107 ; 0000006bH
  0055a	75 20		 jne	 SHORT $LN217@editCharPa

; 3179 : 	{
; 3180 : 		if (commonMsgWin("ìì±ì¹(/í¬ì¸í¸)ë¥¼ ë¶ë°° ìë£íì¸ìï¼"))

  0055c	68 00 00 00 00	 push	 OFFSET ??_C@_0CE@IAICGILF@?$LM?S?$LM?$LK?D?$KB?$CI?1?F?w?$MA?N?F?$KO?$CJ?$LI?$KG?5?$LK?P?$LJ?h?5?$LP?O?$LH?a?G?O?$LM?$LM@
  00561	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00566	83 c4 04	 add	 esp, 4
  00569	85 c0		 test	 eax, eax
  0056b	74 0f		 je	 SHORT $LN217@editCharPa

; 3181 : 		{
; 3182 : 			// ï¼¯ï¼«????????
; 3183 : 			editCharParamProcNo = 1;

  0056d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3184 : 		}
; 3185 : 	}
; 3186 : 	// î¡î·???î°?
; 3187 : 	if (editCharParamProcNo == 108)

  00577	e9 b7 00 00 00	 jmp	 $LN211@editCharPa
$LN217@editCharPa:
  0057c	83 3d 00 00 00
	00 6c		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 108 ; 0000006cH
  00583	75 26		 jne	 SHORT $LN87@editCharPa
$LN210@editCharPa:

; 3188 : 	{
; 3189 : 		initCommonMsgWin();

  00585	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3190 : 		editCharParamProcNo++;
; 3191 : 		play_se(220, 320, 240);	// ???

  0058a	68 f0 00 00 00	 push	 240			; 000000f0H
  0058f	68 40 01 00 00	 push	 320			; 00000140H
  00594	68 dc 00 00 00	 push	 220			; 000000dcH
  00599	c7 05 00 00 00
	00 6d 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 109 ; 0000006dH
  005a3	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  005a8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN87@editCharPa:

; 3192 : 	}
; 3193 : 	if (editCharParamProcNo == 109)

  005ab	83 3d 00 00 00
	00 6d		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 109 ; 0000006dH
  005b2	75 1d		 jne	 SHORT $LN218@editCharPa

; 3194 : 	{
; 3195 : 		if (commonMsgWin("ì´ë¦ì ê³µë°±ì ëì ììµëë¤ï¼"))

  005b4	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@DBBPEHG@?$MA?L?$LI?$KH?$LP?$KB?5?$LA?x?$LJ?i?$MA?$LL?5?$LF?Q?$LM?v?5?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
  005b9	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  005be	83 c4 04	 add	 esp, 4
  005c1	85 c0		 test	 eax, eax
  005c3	74 0c		 je	 SHORT $LN218@editCharPa

; 3196 : 		{
; 3197 : 			// ï¼¯ï¼«????????
; 3198 : 			editCharParamProcNo = 1;

  005c5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3199 : 		}
; 3200 : 	}
; 3201 : 	if (editCharParamProcNo == 110)

  005cf	eb 62		 jmp	 SHORT $LN211@editCharPa
$LN218@editCharPa:
  005d1	83 3d 00 00 00
	00 6e		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 110 ; 0000006eH
  005d8	75 26		 jne	 SHORT $LN90@editCharPa

; 3202 : 	{
; 3203 : 		initCommonMsgWin();

  005da	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3204 : 		editCharParamProcNo++;
; 3205 : 		play_se(220, 320, 240);	// ???

  005df	68 f0 00 00 00	 push	 240			; 000000f0H
  005e4	68 40 01 00 00	 push	 320			; 00000140H
  005e9	68 dc 00 00 00	 push	 220			; 000000dcH
  005ee	c7 05 00 00 00
	00 6f 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 111 ; 0000006fH
  005f8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  005fd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN90@editCharPa:

; 3206 : 	}
; 3207 : 	if (editCharParamProcNo == 111)

  00600	83 3d 00 00 00
	00 6f		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 111 ; 0000006fH
  00607	75 1d		 jne	 SHORT $LN219@editCharPa

; 3208 : 	{
; 3209 : 		if (commonMsgWin("ìë ¥í ì´ë¦ìë íì©ëì§ ìë ë¬¸ìê° í¬í¨ëì´ ììµëë¤ï¼"))

  00609	68 00 00 00 00	 push	 OFFSET ??_C@_0DJ@CMGKIMKM@?$MA?T?$LH?B?G?Q?5?$MA?L?$LI?$KH?$LP?$KB?$LE?B?5?G?c?$LP?k?$LF?G?A?v?5?$LO?J?$LE?B?5?$LJ@
  0060e	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00613	83 c4 04	 add	 esp, 4
  00616	85 c0		 test	 eax, eax
  00618	74 0c		 je	 SHORT $LN219@editCharPa

; 3210 : 		{
; 3211 : 			editCharParamProcNo = 1;

  0061a	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 1

; 3212 : 		}
; 3213 : 	}
; 3214 : 	if (editCharParamProcNo == 1)

  00624	eb 0d		 jmp	 SHORT $LN211@editCharPa
$LN219@editCharPa:
  00626	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?editCharParamProcNo@@3HA, 1
  0062d	0f 85 0e 01 00
	00		 jne	 $LN120@editCharPa
$LN211@editCharPa:

; 3215 : 	{
; 3216 : 		id = focusGraId(graId, sizeof(graId) / sizeof(int));

  00633	6a 16		 push	 22			; 00000016H
  00635	68 00 00 00 00	 push	 OFFSET ?graId@?1??editCharParam@@YAHXZ@4PAHA
  0063a	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId
  0063f	8b d8		 mov	 ebx, eax
  00641	83 c4 08	 add	 esp, 8
  00644	89 9d 38 ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 3217 : 		if (id == 0)

  0064a	85 db		 test	 ebx, ebx
  0064c	75 0a		 jne	 SHORT $LN94@editCharPa

; 3218 : 		{
; 3219 : 			ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í° ì¤ì ì ê²°ì í©ëë¤ã");

  0064e	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@DBMJLOIN@?D?$LD?$LI?$KP?E?M?5?$LM?$LD?A?$KE?$MA?$LL?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y?$KB?$KD@

; 3220 : 		}

  00653	e9 df 00 00 00	 jmp	 $LN221@editCharPa
$LN94@editCharPa:

; 3221 : 		else
; 3222 : 			if (id == 1)

  00658	83 fb 01	 cmp	 ebx, 1
  0065b	75 0a		 jne	 SHORT $LN96@editCharPa

; 3223 : 			{
; 3224 : 				ShowBottomLineString(FONT_PAL_WHITE, "ì´ì íë©´ì¼ë¡ ëìê°ê¸°ã");

  0065d	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@

; 3225 : 			}

  00662	e9 d0 00 00 00	 jmp	 $LN221@editCharPa
$LN96@editCharPa:

; 3226 : 			else
; 3227 : 				if (2 <= id && id <= 9)

  00667	8d 43 fe	 lea	 eax, DWORD PTR [ebx-2]
  0066a	83 f8 07	 cmp	 eax, 7
  0066d	77 4a		 ja	 SHORT $LN98@editCharPa

; 3228 : 				{
; 3229 : 					id -= 2;
; 3230 : 					id /= 2;

  0066f	99		 cdq
  00670	2b c2		 sub	 eax, edx
  00672	8b d8		 mov	 ebx, eax
  00674	d1 fb		 sar	 ebx, 1
  00676	89 9d 38 ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 3231 : 					if (id == 0)

  0067c	75 0a		 jne	 SHORT $LN100@editCharPa

; 3232 : 					{
; 3233 : 						ShowBottomLineString(FONT_PAL_WHITE, "ì´ í­ëª©ì ì£¼ë¡ ë´êµ¬ë ¥ê³¼ ê´ë ¨ì´ ììµëë¤ã");

  0067e	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@EACHLIEL@?$MA?L?5?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LD?$LL?$LB?$LI?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5@

; 3234 : 					}

  00683	e9 af 00 00 00	 jmp	 $LN221@editCharPa
$LN100@editCharPa:

; 3235 : 					else
; 3236 : 						if (id == 1)

  00688	83 fb 01	 cmp	 ebx, 1
  0068b	75 0a		 jne	 SHORT $LN102@editCharPa

; 3237 : 						{
; 3238 : 							ShowBottomLineString(FONT_PAL_WHITE, "ì´í­ëª©ì ì£¼ë¡ ê³µê²©ë ¥ê³¼ ê´ë ¨ì´ ììµëë¤ã");

  0068d	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@DBPCCGK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LA?x?$LA?$NN?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@

; 3239 : 						}

  00692	e9 a0 00 00 00	 jmp	 $LN221@editCharPa
$LN102@editCharPa:

; 3240 : 						else
; 3241 : 							if (id == 2)

  00697	83 fb 02	 cmp	 ebx, 2
  0069a	75 0a		 jne	 SHORT $LN104@editCharPa

; 3242 : 							{
; 3243 : 								ShowBottomLineString(FONT_PAL_WHITE, "ì´í­ëª©ì ì£¼ë¡ ë°©ì´ë ¥ê³¼ ê´ë ¨ì´ ììµëë¤ã");

  0069c	68 00 00 00 00	 push	 OFFSET ??_C@_0CJ@PBMHJDKK@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LJ?f?$LO?n?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$MA@

; 3244 : 							}

  006a1	e9 91 00 00 00	 jmp	 $LN221@editCharPa
$LN104@editCharPa:

; 3245 : 							else
; 3246 : 								if (id == 3)

  006a6	83 fb 03	 cmp	 ebx, 3
  006a9	0f 85 92 00 00
	00		 jne	 $LN120@editCharPa

; 3247 : 								{
; 3248 : 									ShowBottomLineString(FONT_PAL_WHITE, "ì´í­ëª©ì ì£¼ë¡ ìë°ë ¥ê³¼ ê´ë ¨ì´ ê´ë ¨ì´ ììµëë¤ã");

  006af	68 00 00 00 00	 push	 OFFSET ??_C@_0DA@OOLAIOAA@?$MA?L?G?W?$LI?q?$MA?$LK?5?A?V?$LH?N?5?$LM?x?$LJ?$NP?$LH?B?$LA?z?5?$LA?$PM?$LH?C?$MA?L?5?$LA@

; 3249 : 								}
; 3250 : 				}

  006b4	e9 7e 00 00 00	 jmp	 $LN221@editCharPa
$LN98@editCharPa:

; 3251 : 				else
; 3252 : 					if (10 <= id && id <= 17)

  006b9	8d 43 f6	 lea	 eax, DWORD PTR [ebx-10]
  006bc	83 f8 07	 cmp	 eax, 7
  006bf	77 3a		 ja	 SHORT $LN107@editCharPa

; 3253 : 					{
; 3254 : 						id -= 10;
; 3255 : 						id /= 2;

  006c1	99		 cdq
  006c2	2b c2		 sub	 eax, edx
  006c4	8b d8		 mov	 ebx, eax
  006c6	d1 fb		 sar	 ebx, 1
  006c8	89 9d 38 ff ff
	ff		 mov	 DWORD PTR _id$1$[ebp], ebx

; 3256 : 						if (id == 0)

  006ce	75 07		 jne	 SHORT $LN109@editCharPa

; 3257 : 						{
; 3258 : 							ShowBottomLineString(FONT_PAL_WHITE, "ì§ìì±ãììì±ì ìëì ì¸ì¸ ë ëì± ì ë¦¬í©ëë¤ã");

  006d0	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DFHCGCAL@?A?v?$LM?S?$LM?$LK?$KB?$KD?$LM?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@

; 3259 : 						}

  006d5	eb 60		 jmp	 SHORT $LN221@editCharPa
$LN109@editCharPa:

; 3260 : 						else
; 3261 : 							if (id == 1)

  006d7	83 fb 01	 cmp	 ebx, 1
  006da	75 07		 jne	 SHORT $LN111@editCharPa

; 3262 : 							{
; 3263 : 								ShowBottomLineString(FONT_PAL_WHITE, "ììì±ãíìì±ì ìëì ì¸ì¸ ë ëì± ì ë¦¬í©ëë¤ã");

  006dc	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@EIPOCBIG@?$LM?v?$LM?S?$LM?$LK?$KB?$KD?H?$KN?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@

; 3264 : 							}

  006e1	eb 54		 jmp	 SHORT $LN221@editCharPa
$LN111@editCharPa:

; 3265 : 							else
; 3266 : 								if (id == 2)

  006e3	83 fb 02	 cmp	 ebx, 2
  006e6	75 07		 jne	 SHORT $LN113@editCharPa

; 3267 : 								{
; 3268 : 									ShowBottomLineString(FONT_PAL_WHITE, "íìì±ãíìì±ì ìëì ì¸ì¸ ë ëì± ì ë¦¬í©ëë¤ã");

  006e8	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@DBHNIFJM@?H?$KN?$LM?S?$LM?$LK?$KB?$KD?G?$LD?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@

; 3269 : 								}

  006ed	eb 48		 jmp	 SHORT $LN221@editCharPa
$LN113@editCharPa:

; 3270 : 								else
; 3271 : 									if (id == 3)

  006ef	83 fb 03	 cmp	 ebx, 3
  006f2	75 4d		 jne	 SHORT $LN120@editCharPa

; 3272 : 									{
; 3273 : 										ShowBottomLineString(FONT_PAL_WHITE, "íìì±ãì§ìì±ì ìëì ì¸ì¸ ë ëì± ì ë¦¬í©ëë¤ã");

  006f4	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@HDKFGPCM@?G?$LD?$LM?S?$LM?$LK?$KB?$KD?A?v?$LM?S?$LM?$LK?$MA?G?5?$LL?s?$LE?k?$LP?M?5?$LN?N?$LP?o?5?$LG?$KH@

; 3274 : 									}
; 3275 : 					}

  006f9	eb 3c		 jmp	 SHORT $LN221@editCharPa
$LN107@editCharPa:

; 3276 : 					else
; 3277 : 						if (id == 18 || id == 19)

  006fb	83 fb 12	 cmp	 ebx, 18			; 00000012H
  006fe	74 1d		 je	 SHORT $LN118@editCharPa
  00700	83 fb 13	 cmp	 ebx, 19			; 00000013H
  00703	74 18		 je	 SHORT $LN118@editCharPa

; 3286 : 							}
; 3287 : 						}
; 3288 : 						else
; 3289 : 							if (id == 20 || id == 21)

  00705	83 fb 14	 cmp	 ebx, 20			; 00000014H
  00708	74 0c		 je	 SHORT $LN123@editCharPa
  0070a	83 fb 15	 cmp	 ebx, 21			; 00000015H
  0070d	74 07		 je	 SHORT $LN123@editCharPa

; 3293 : 							else
; 3294 : 							{
; 3295 : 								ShowBottomLineString(FONT_PAL_WHITE, "ì´ë¦, ì¼êµ´, ê¸°ë³¸ ìí ë° ìì± ì¤ì ã");

  0070f	68 00 00 00 00	 push	 OFFSET ??_C@_0CF@JDHEEBNC@?$MA?L?$LI?$KH?0?5?$LO?s?$LB?$LM?0?5?$LB?b?$LK?$LL?5?$LL?s?E?B?5?$LJ?W?5?$LM?S?$LM?$LK?5?$LM@
  00714	eb 21		 jmp	 SHORT $LN221@editCharPa
$LN123@editCharPa:

; 3290 : 							{
; 3291 : 								ShowBottomLineString(FONT_PAL_WHITE, "ì ëª¨ì ë³ê²½ã");

  00716	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LMMJJHJP@?$MA?T?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@

; 3292 : 							}

  0071b	eb 1a		 jmp	 SHORT $LN221@editCharPa
$LN118@editCharPa:

; 3278 : 						{
; 3279 : 							if (nowSelCharGraNo != 0 && nowSelCharGraNo != 6)

  0071d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharGraNo@@3HA
  00722	85 c0		 test	 eax, eax
  00724	74 0c		 je	 SHORT $LN119@editCharPa
  00726	83 f8 06	 cmp	 eax, 6
  00729	74 07		 je	 SHORT $LN119@editCharPa

; 3280 : 							{
; 3281 : 								ShowBottomLineString(FONT_PAL_WHITE, "ë ëª¨ì ë³ê²½ã");

  0072b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IMBCCPOD@?$LE?$KL?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@

; 3282 : 							}

  00730	eb 05		 jmp	 SHORT $LN221@editCharPa
$LN119@editCharPa:

; 3283 : 							else
; 3284 : 							{
; 3285 : 								ShowBottomLineString(FONT_PAL_WHITE, "ì½ ëª¨ì ë³ê²½ã");

  00732	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PNCOKHHM@?D?Z?5?$LI?p?$LO?g?5?$LK?$KP?$LA?f?$KB?$KD@
$LN221@editCharPa:

; 3296 : 							}
; 3297 : 	}
; 3298 : 
; 3299 : 
; 3300 : 
; 3301 : 	StockFontBuffer2(&selCharName);

  00737	6a 00		 push	 0
  00739	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  0073e	83 c4 08	 add	 esp, 8
$LN120@editCharPa:
  00741	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  00746	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 3302 : 
; 3303 : 	// ???????
; 3304 : 	StockDispBuffer(93, 172, DISP_PRIO_BG,

  0074b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowSelCharGraNo@@3HA
  00751	6a 00		 push	 0
  00753	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?selCharColor@@3PAHA[ecx*4]
  0075a	81 c1 2c 01 00
	00		 add	 ecx, 300		; 0000012cH
  00760	8d 0c 88	 lea	 ecx, DWORD PTR [eax+ecx*4]
  00763	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharEyeNo@@3HA
  00768	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  0076b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharMouthNo@@3HA
  00770	03 d1		 add	 edx, ecx
  00772	8d 04 90	 lea	 eax, DWORD PTR [eax+edx*4]
  00775	03 c2		 add	 eax, edx
  00777	50		 push	 eax
  00778	6a 00		 push	 0
  0077a	68 ac 00 00 00	 push	 172			; 000000acH
  0077f	6a 5d		 push	 93			; 0000005dH
  00781	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3305 : 		CG_CHR_MAKE_FACE + nowSelCharGraNo * 100 + selCharColor[nowSelCharGraNo] * 25
; 3306 : 		+ nowSelCharEyeNo * 5 + nowSelCharMouthNo,
; 3307 : 		0);
; 3308 : 
; 3309 : 	// ????????????î ??????
; 3310 : 	sprintf(msg, "%3d", nowSelCharStatusPoint);

  00786	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowSelCharStatusPoint@@3HA
  0078c	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  0078f	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00794	50		 push	 eax
  00795	e8 00 00 00 00	 call	 _sprintf

; 3311 : 	StockFontBuffer(161, 224, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  0079a	6a 00		 push	 0
  0079c	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  0079f	50		 push	 eax
  007a0	6a 00		 push	 0
  007a2	6a 00		 push	 0
  007a4	68 e0 00 00 00	 push	 224			; 000000e0H
  007a9	68 a1 00 00 00	 push	 161			; 000000a1H
  007ae	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  007b3	83 c4 3c	 add	 esp, 60			; 0000003cH
  007b6	8d b5 6c ff ff
	ff		 lea	 esi, DWORD PTR _statusLocate$[ebp]
  007bc	bf 00 00 00 00	 mov	 edi, OFFSET ?nowSelCharStatus@@3PAHA
$LL10@editCharPa:

; 3312 : 
; 3313 : 	// ?????????
; 3314 : 	for (i = 0; i < 4; i++)
; 3315 : 	{
; 3316 : 		sprintf(msg, "%3d", nowSelCharStatus[i]);

  007c1	ff 37		 push	 DWORD PTR [edi]
  007c3	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  007c6	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  007cb	50		 push	 eax
  007cc	e8 00 00 00 00	 call	 _sprintf

; 3317 : 		StockFontBuffer(statusLocate[i][0], statusLocate[i][1],

  007d1	6a 00		 push	 0
  007d3	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  007d6	50		 push	 eax
  007d7	6a 00		 push	 0
  007d9	6a 00		 push	 0
  007db	ff 76 04	 push	 DWORD PTR [esi+4]
  007de	ff 36		 push	 DWORD PTR [esi]
  007e0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  007e5	83 c7 04	 add	 edi, 4
  007e8	8d 76 08	 lea	 esi, DWORD PTR [esi+8]
  007eb	83 c4 24	 add	 esp, 36			; 00000024H
  007ee	81 ff 10 00 00
	00		 cmp	 edi, OFFSET ?nowSelCharStatus@@3PAHA+16
  007f4	7c cb		 jl	 SHORT $LL10@editCharPa

; 3318 : 			FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);
; 3319 : 	}
; 3320 : 
; 3321 : 
; 3322 : 	// ????î´î???î ??????
; 3323 : 	sprintf(msg, "%3d", nowSelCharAttrPoint);

  007f6	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowSelCharAttrPoint@@3HA
  007fc	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  007ff	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00804	50		 push	 eax
  00805	e8 00 00 00 00	 call	 _sprintf

; 3324 : 	StockFontBuffer(350, 224, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  0080a	6a 00		 push	 0
  0080c	8d 45 bc	 lea	 eax, DWORD PTR _msg$[ebp]
  0080f	50		 push	 eax
  00810	6a 00		 push	 0
  00812	6a 00		 push	 0
  00814	68 e0 00 00 00	 push	 224			; 000000e0H
  00819	68 5e 01 00 00	 push	 350			; 0000015eH
  0081e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00823	83 c4 24	 add	 esp, 36			; 00000024H
  00826	b8 00 00 00 00	 mov	 eax, OFFSET ?nowSelCharAttr@@3PAHA
  0082b	33 f6		 xor	 esi, esi
  0082d	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv2539[ebp], eax
  00833	89 b5 3c ff ff
	ff		 mov	 DWORD PTR tv2542[ebp], esi
  00839	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@editCharPa:

; 3329 : 	{
; 3330 : 		if (nowSelCharAttr[i] > 0)

  00840	8b 10		 mov	 edx, DWORD PTR [eax]
  00842	85 d2		 test	 edx, edx
  00844	0f 8e 7e 00 00
	00		 jle	 $LN11@editCharPa

; 3331 : 		{
; 3332 : 			x1 = attrLocate[i][0];
; 3333 : 			y1 = attrLocate[i][1];

  0084a	8b 44 35 90	 mov	 eax, DWORD PTR _attrLocate$[ebp+esi+4]
  0084e	8b 4c 35 8c	 mov	 ecx, DWORD PTR _attrLocate$[ebp+esi]

; 3334 : 			x2 = x1 + nowSelCharAttr[i] * 8;
; 3335 : 			y2 = y1 + 8;
; 3336 : 			StockBoxDispBuffer(x1, y1, x2, y2, DISP_PRIO_IME2, attrColor[i][0], 1);

  00852	6a 01		 push	 1
  00854	ff b4 35 4c ff
	ff ff		 push	 DWORD PTR _attrColor$[ebp+esi]
  0085b	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  0085e	6a 67		 push	 103			; 00000067H
  00860	57		 push	 edi
  00861	8d 1c d1	 lea	 ebx, DWORD PTR [ecx+edx*8]
  00864	53		 push	 ebx
  00865	50		 push	 eax
  00866	51		 push	 ecx
  00867	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 3337 : 			StockBoxDispBuffer(x1 + 1, y1 + 1, x2 + 1, y2 + 1, DISP_PRIO_IME1, attrColor[i][1], 0);

  0086c	8b b4 35 50 ff
	ff ff		 mov	 esi, DWORD PTR _attrColor$[ebp+esi+4]
  00873	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00876	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv2542[ebp]
  0087c	6a 00		 push	 0
  0087e	56		 push	 esi
  0087f	6a 66		 push	 102			; 00000066H
  00881	50		 push	 eax
  00882	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00885	50		 push	 eax
  00886	8b 44 0d 90	 mov	 eax, DWORD PTR _attrLocate$[ebp+ecx+4]
  0088a	40		 inc	 eax
  0088b	50		 push	 eax
  0088c	8b 44 0d 8c	 mov	 eax, DWORD PTR _attrLocate$[ebp+ecx]
  00890	40		 inc	 eax
  00891	50		 push	 eax
  00892	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 3338 : 			StockBoxDispBuffer(x1 + 2, y1 + 2, x2 + 2, y2 + 2, DISP_PRIO_IME1, attrColor[i][1], 0);

  00897	6a 00		 push	 0
  00899	56		 push	 esi
  0089a	8b b5 3c ff ff
	ff		 mov	 esi, DWORD PTR tv2542[ebp]
  008a0	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  008a3	6a 66		 push	 102			; 00000066H
  008a5	50		 push	 eax
  008a6	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  008a9	50		 push	 eax
  008aa	8b 44 35 90	 mov	 eax, DWORD PTR _attrLocate$[ebp+esi+4]
  008ae	83 c0 02	 add	 eax, 2
  008b1	50		 push	 eax
  008b2	8b 44 35 8c	 mov	 eax, DWORD PTR _attrLocate$[ebp+esi]
  008b6	83 c0 02	 add	 eax, 2
  008b9	50		 push	 eax
  008ba	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer
  008bf	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR tv2539[ebp]
  008c5	83 c4 54	 add	 esp, 84			; 00000054H
$LN11@editCharPa:

; 3325 : 
; 3326 : 
; 3327 : 	// î´î????
; 3328 : 	for (i = 0; i < 4; i++)

  008c8	83 c0 04	 add	 eax, 4
  008cb	83 c6 08	 add	 esi, 8
  008ce	89 85 40 ff ff
	ff		 mov	 DWORD PTR tv2539[ebp], eax
  008d4	89 b5 3c ff ff
	ff		 mov	 DWORD PTR tv2542[ebp], esi
  008da	3d 10 00 00 00	 cmp	 eax, OFFSET ?nowSelCharAttr@@3PAHA+16
  008df	0f 8c 5b ff ff
	ff		 jl	 $LL13@editCharPa

; 3339 : 		}
; 3340 : 	}
; 3341 : 
; 3342 : 	graId[0] = StockDispBuffer(96, 410, DISP_PRIO_CHAR, CG_CHR_MAKE_OK_BTN, selUseFlag);

  008e5	8b 9d 44 ff ff
	ff		 mov	 ebx, DWORD PTR _selUseFlag$1$[ebp]
  008eb	53		 push	 ebx
  008ec	68 6d 71 00 00	 push	 29037			; 0000716dH
  008f1	6a 0a		 push	 10			; 0000000aH
  008f3	68 9a 01 00 00	 push	 410			; 0000019aH
  008f8	6a 60		 push	 96			; 00000060H
  008fa	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3343 : 	graId[1] = StockDispBuffer(192, 410, DISP_PRIO_CHAR, CG_CHR_MAKE_BACK_BTN, selUseFlag);

  008ff	53		 push	 ebx
  00900	68 6e 71 00 00	 push	 29038			; 0000716eH
  00905	6a 0a		 push	 10			; 0000000aH
  00907	68 9a 01 00 00	 push	 410			; 0000019aH
  0090c	68 c0 00 00 00	 push	 192			; 000000c0H
  00911	a3 00 00 00 00	 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA, eax
  00916	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0091b	8b 9d 34 ff ff
	ff		 mov	 ebx, DWORD PTR _id3$1$[ebp]
  00921	33 c9		 xor	 ecx, ecx
  00923	83 c4 28	 add	 esp, 40			; 00000028H
  00926	a3 04 00 00 00	 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA+4, eax
  0092b	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  00931	83 c3 fe	 add	 ebx, -2			; fffffffeH
$LL16@editCharPa:

; 3344 : 
; 3345 : 	for (i = 0; i < 4; i++)
; 3346 : 	{
; 3347 : 		btn1 = 0;

  00934	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _btn1$1$[ebp], 0

; 3348 : 		btn2 = 0;

  0093e	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _btn2$1$[ebp], 0

; 3349 : 		if (2 <= id3 && id3 <= 9
; 3350 : 			&& (id3 - 2) / 2 == i)

  00948	83 fb 07	 cmp	 ebx, 7
  0094b	77 26		 ja	 SHORT $LN127@editCharPa
  0094d	8b c3		 mov	 eax, ebx
  0094f	99		 cdq
  00950	2b c2		 sub	 eax, edx
  00952	d1 f8		 sar	 eax, 1
  00954	3b c1		 cmp	 eax, ecx
  00956	75 1b		 jne	 SHORT $LN127@editCharPa

; 3351 : 		{
; 3352 : 			if (((id3 - 2) % 2) == 0)

  00958	f6 c3 01	 test	 bl, 1
  0095b	75 0c		 jne	 SHORT $LN126@editCharPa

; 3353 : 			{
; 3354 : 				btn1 = 1;

  0095d	c7 85 40 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _btn1$1$[ebp], 1

; 3355 : 			}

  00967	eb 0a		 jmp	 SHORT $LN127@editCharPa
$LN126@editCharPa:

; 3356 : 			else
; 3357 : 			{
; 3358 : 				btn2 = 1;

  00969	c7 85 48 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _btn2$1$[ebp], 1
$LN127@editCharPa:

; 3359 : 			}
; 3360 : 		}
; 3361 : 		graId[i * 2 + 2] = StockDispBuffer(statusLocate[i][0] + 51, statusLocate[i][1] + 8,

  00973	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  00979	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _btn1$1$[ebp]
  0097f	8b bc cd 6c ff
	ff ff		 mov	 edi, DWORD PTR _statusLocate$[ebp+ecx*8]
  00986	8b b4 cd 70 ff
	ff ff		 mov	 esi, DWORD PTR _statusLocate$[ebp+ecx*8+4]
  0098d	83 c6 08	 add	 esi, 8
  00990	ff 74 85 ac	 push	 DWORD PTR _upDownBtnGraNo$[ebp+eax*4]
  00994	8d 47 33	 lea	 eax, DWORD PTR [edi+51]
  00997	6a 0a		 push	 10			; 0000000aH
  00999	56		 push	 esi
  0099a	50		 push	 eax
  0099b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  009a0	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]

; 3362 : 			DISP_PRIO_CHAR, upDownBtnGraNo[0][btn1], selUseFlag);
; 3363 : 
; 3364 : 		graId[i * 2 + 3] = StockDispBuffer(statusLocate[i][0] + 87, statusLocate[i][1] + 8,

  009a6	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  009ac	89 04 cd 08 00
	00 00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[ecx*8+8], eax
  009b3	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _btn2$1$[ebp]
  009b9	ff 74 85 b4	 push	 DWORD PTR _upDownBtnGraNo$[ebp+eax*4+8]
  009bd	8d 47 57	 lea	 eax, DWORD PTR [edi+87]
  009c0	6a 0a		 push	 10			; 0000000aH
  009c2	56		 push	 esi
  009c3	50		 push	 eax
  009c4	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  009c9	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]
  009cf	83 c4 28	 add	 esp, 40			; 00000028H
  009d2	89 04 cd 0c 00
	00 00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[ecx*8+12], eax
  009d9	41		 inc	 ecx
  009da	89 8d 3c ff ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ecx
  009e0	83 f9 04	 cmp	 ecx, 4
  009e3	0f 8c 4b ff ff
	ff		 jl	 $LL16@editCharPa

; 3365 : 			DISP_PRIO_CHAR, upDownBtnGraNo[1][btn2], selUseFlag);
; 3366 : 	}
; 3367 : 
; 3368 : 	for (i = 0; i < 4; i++)

  009e9	33 db		 xor	 ebx, ebx
  009eb	0f 1f 44 00 00	 npad	 5
$LL19@editCharPa:

; 3369 : 	{
; 3370 : 		if (i == 0 && nowSelCharAttr[i + 2] == 0
; 3371 : 			|| i == 1 && nowSelCharAttr[i + 2] == 0
; 3372 : 			|| i == 2 && nowSelCharAttr[i - 2] == 0
; 3373 : 			|| i == 3 && nowSelCharAttr[i - 2] == 0)

  009f0	85 db		 test	 ebx, ebx
  009f2	75 71		 jne	 SHORT $LN192@editCharPa
  009f4	39 1d 08 00 00
	00		 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA+8, ebx
$LN222@editCharPa:

; 3395 : 		else
; 3396 : 		{
; 3397 : 			graId[i * 2 + 10] = -2;

  009fa	0f 84 9a 00 00
	00		 je	 $LN130@editCharPa
$LN128@editCharPa:
  00a00	8d 04 dd 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*8]

; 3398 : 			graId[i * 2 + 11] = -2;

  00a07	b9 fe ff ff ff	 mov	 ecx, -2			; fffffffeH
  00a0c	c7 80 28 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[eax+40], -2 ; fffffffeH
$LN17@editCharPa:

; 3365 : 			DISP_PRIO_CHAR, upDownBtnGraNo[1][btn2], selUseFlag);
; 3366 : 	}
; 3367 : 
; 3368 : 	for (i = 0; i < 4; i++)

  00a16	43		 inc	 ebx
  00a17	89 88 2c 00 00
	00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[eax+44], ecx
  00a1d	83 fb 04	 cmp	 ebx, 4
  00a20	7c ce		 jl	 SHORT $LL19@editCharPa

; 3399 : 		}
; 3400 : 	}
; 3401 : 
; 3402 : 	for (i = 0; i < 2; i++)

  00a22	8b 9d 34 ff ff
	ff		 mov	 ebx, DWORD PTR _id3$1$[ebp]
  00a28	33 f6		 xor	 esi, esi
  00a2a	83 c3 ee	 add	 ebx, -18		; ffffffeeH
  00a2d	bf ac 00 00 00	 mov	 edi, 172		; 000000acH
$LL22@editCharPa:

; 3403 : 	{
; 3404 : 		btn1 = 0;

  00a32	33 c9		 xor	 ecx, ecx

; 3405 : 		btn2 = 0;

  00a34	89 8d 48 ff ff
	ff		 mov	 DWORD PTR _btn2$3$[ebp], ecx

; 3406 : 		if (18 <= id3 && id3 <= 21
; 3407 : 			&& (id3 - 18) / 2 == i)

  00a3a	83 fb 03	 cmp	 ebx, 3
  00a3d	0f 87 17 01 00
	00		 ja	 $LN139@editCharPa
  00a43	8b c3		 mov	 eax, ebx
  00a45	99		 cdq
  00a46	2b c2		 sub	 eax, edx
  00a48	d1 f8		 sar	 eax, 1
  00a4a	3b c6		 cmp	 eax, esi
  00a4c	0f 85 08 01 00
	00		 jne	 $LN139@editCharPa

; 3408 : 		{
; 3409 : 			if (((id3 - 18) % 2) == 0)

  00a52	f6 c3 01	 test	 bl, 1
  00a55	0f 85 f5 00 00
	00		 jne	 $LN138@editCharPa

; 3410 : 			{
; 3411 : 				btn1 = 1;

  00a5b	b9 01 00 00 00	 mov	 ecx, 1

; 3412 : 			}

  00a60	e9 f5 00 00 00	 jmp	 $LN139@editCharPa
$LN192@editCharPa:

; 3369 : 	{
; 3370 : 		if (i == 0 && nowSelCharAttr[i + 2] == 0
; 3371 : 			|| i == 1 && nowSelCharAttr[i + 2] == 0
; 3372 : 			|| i == 2 && nowSelCharAttr[i - 2] == 0
; 3373 : 			|| i == 3 && nowSelCharAttr[i - 2] == 0)

  00a65	83 fb 01	 cmp	 ebx, 1
  00a68	75 09		 jne	 SHORT $LN191@editCharPa
  00a6a	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA+12, 0
  00a71	eb 87		 jmp	 SHORT $LN222@editCharPa
$LN191@editCharPa:
  00a73	83 fb 02	 cmp	 ebx, 2
  00a76	75 0c		 jne	 SHORT $LN193@editCharPa
  00a78	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA, 0
  00a7f	e9 76 ff ff ff	 jmp	 $LN222@editCharPa
$LN193@editCharPa:
  00a84	83 fb 03	 cmp	 ebx, 3
  00a87	0f 85 73 ff ff
	ff		 jne	 $LN128@editCharPa
  00a8d	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?nowSelCharAttr@@3PAHA+4, 0
  00a94	0f 85 66 ff ff
	ff		 jne	 $LN128@editCharPa
$LN130@editCharPa:

; 3374 : 		{
; 3375 : 			btn1 = 0;
; 3376 : 			btn2 = 0;
; 3377 : 			if (10 <= id3 && id <= 17
; 3378 : 				&& (id3 - 10) / 2 == i)

  00a9a	8b 85 34 ff ff
	ff		 mov	 eax, DWORD PTR _id3$1$[ebp]
  00aa0	c7 85 48 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _btn1$2$[ebp], 0
  00aaa	c7 85 40 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _btn2$2$[ebp], 0
  00ab4	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00ab7	7c 32		 jl	 SHORT $LN136@editCharPa
  00ab9	83 bd 38 ff ff
	ff 11		 cmp	 DWORD PTR _id$1$[ebp], 17 ; 00000011H
  00ac0	7f 29		 jg	 SHORT $LN136@editCharPa
  00ac2	8d 48 f6	 lea	 ecx, DWORD PTR [eax-10]
  00ac5	8b c1		 mov	 eax, ecx
  00ac7	99		 cdq
  00ac8	2b c2		 sub	 eax, edx
  00aca	d1 f8		 sar	 eax, 1
  00acc	3b c3		 cmp	 eax, ebx
  00ace	75 1b		 jne	 SHORT $LN136@editCharPa

; 3379 : 			{
; 3380 : 				if (((id3 - 10) % 2) == 0)

  00ad0	f6 c1 01	 test	 cl, 1
  00ad3	75 0c		 jne	 SHORT $LN135@editCharPa

; 3381 : 				{
; 3382 : 					btn1 = 1;

  00ad5	c7 85 48 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _btn1$2$[ebp], 1

; 3383 : 				}

  00adf	eb 0a		 jmp	 SHORT $LN136@editCharPa
$LN135@editCharPa:

; 3384 : 				else
; 3385 : 				{
; 3386 : 					btn2 = 1;

  00ae1	c7 85 40 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _btn2$2$[ebp], 1
$LN136@editCharPa:

; 3387 : 				}
; 3388 : 			}
; 3389 : 
; 3390 : 			graId[i * 2 + 10] = StockDispBuffer(attrLocate[i][0] + 101, attrLocate[i][1] + 5,

  00aeb	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  00af1	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _btn1$2$[ebp]
  00af7	8d 0c dd 00 00
	00 00		 lea	 ecx, DWORD PTR [ebx*8]
  00afe	8b 7c 0d 8c	 mov	 edi, DWORD PTR _attrLocate$[ebp+ecx]
  00b02	8b 74 0d 90	 mov	 esi, DWORD PTR _attrLocate$[ebp+ecx+4]
  00b06	83 c6 05	 add	 esi, 5
  00b09	ff 74 85 ac	 push	 DWORD PTR _upDownBtnGraNo$[ebp+eax*4]
  00b0d	8d 47 65	 lea	 eax, DWORD PTR [edi+101]
  00b10	6a 0a		 push	 10			; 0000000aH
  00b12	56		 push	 esi
  00b13	50		 push	 eax
  00b14	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3391 : 				DISP_PRIO_CHAR, upDownBtnGraNo[0][btn1], selUseFlag);
; 3392 : 			graId[i * 2 + 11] = StockDispBuffer(attrLocate[i][0] + 137, attrLocate[i][1] + 5,

  00b19	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  00b1f	89 04 dd 28 00
	00 00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[ebx*8+40], eax
  00b26	8b 85 40 ff ff
	ff		 mov	 eax, DWORD PTR _btn2$2$[ebp]
  00b2c	ff 74 85 b4	 push	 DWORD PTR _upDownBtnGraNo$[ebp+eax*4+8]
  00b30	8d 87 89 00 00
	00		 lea	 eax, DWORD PTR [edi+137]
  00b36	6a 0a		 push	 10			; 0000000aH
  00b38	56		 push	 esi
  00b39	50		 push	 eax
  00b3a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00b3f	8b c8		 mov	 ecx, eax
  00b41	83 c4 28	 add	 esp, 40			; 00000028H

; 3393 : 				DISP_PRIO_CHAR, upDownBtnGraNo[1][btn2], selUseFlag);
; 3394 : 		}

  00b44	8d 04 dd 00 00
	00 00		 lea	 eax, DWORD PTR [ebx*8]
  00b4b	e9 c6 fe ff ff	 jmp	 $LN17@editCharPa
$LN138@editCharPa:

; 3413 : 			else
; 3414 : 			{
; 3415 : 				btn2 = 1;

  00b50	c7 85 48 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR _btn2$3$[ebp], 1
$LN139@editCharPa:

; 3416 : 			}
; 3417 : 		}
; 3418 : 		graId[i * 2 + 18] =

  00b5a	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  00b60	ff 74 8d ac	 push	 DWORD PTR _upDownBtnGraNo$[ebp+ecx*4]
  00b64	6a 0a		 push	 10			; 0000000aH
  00b66	57		 push	 edi
  00b67	68 9c 00 00 00	 push	 156			; 0000009cH
  00b6c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 3419 : 			StockDispBuffer(156, 172 + i * 24,
; 3420 : 				DISP_PRIO_CHAR, upDownBtnGraNo[0][btn1], selUseFlag);
; 3421 : 		graId[i * 2 + 19] =

  00b71	ff b5 44 ff ff
	ff		 push	 DWORD PTR _selUseFlag$1$[ebp]
  00b77	89 04 f5 48 00
	00 00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[esi*8+72], eax
  00b7e	8b 85 48 ff ff
	ff		 mov	 eax, DWORD PTR _btn2$3$[ebp]
  00b84	ff 74 85 b4	 push	 DWORD PTR _upDownBtnGraNo$[ebp+eax*4+8]
  00b88	6a 0a		 push	 10			; 0000000aH
  00b8a	57		 push	 edi
  00b8b	68 04 01 00 00	 push	 260			; 00000104H
  00b90	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00b95	89 04 f5 4c 00
	00 00		 mov	 DWORD PTR ?graId@?1??editCharParam@@YAHXZ@4PAHA[esi*8+76], eax
  00b9c	83 c7 18	 add	 edi, 24			; 00000018H
  00b9f	83 c4 28	 add	 esp, 40			; 00000028H
  00ba2	46		 inc	 esi
  00ba3	81 ff dc 00 00
	00		 cmp	 edi, 220		; 000000dcH
  00ba9	0f 8c 83 fe ff
	ff		 jl	 $LL22@editCharPa

; 3422 : 			StockDispBuffer(260, 172 + i * 24,
; 3423 : 				DISP_PRIO_CHAR, upDownBtnGraNo[1][btn2], selUseFlag);
; 3424 : 	}
; 3425 : 
; 3426 : 	if (nowSelCharGraNo != 0 && nowSelCharGraNo != 6)

  00baf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowSelCharGraNo@@3HA
  00bb4	5f		 pop	 edi
  00bb5	5e		 pop	 esi
  00bb6	5b		 pop	 ebx
  00bb7	85 c0		 test	 eax, eax
  00bb9	74 0a		 je	 SHORT $LN140@editCharPa
  00bbb	83 f8 06	 cmp	 eax, 6

; 3427 : 	{
; 3428 : 		StockDispBuffer(320, 240, DISP_PRIO_CHAR, CG_CHR_MAKE_EYE_SEL, 0);

  00bbe	b8 74 71 00 00	 mov	 eax, 29044		; 00007174H
  00bc3	75 05		 jne	 SHORT $LN141@editCharPa
$LN140@editCharPa:

; 3429 : 	}
; 3430 : 	else
; 3431 : 	{
; 3432 : 		StockDispBuffer(320, 240, DISP_PRIO_CHAR, CG_CHR_MAKE_NOSE_SEL, 0);

  00bc5	b8 75 71 00 00	 mov	 eax, 29045		; 00007175H
$LN141@editCharPa:

; 3433 : 	}
; 3434 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 3435 : 	BornPreBtn = 0;
; 3436 : 	BornNextBtn = 0;
; 3437 : 	if (id3 == 22 || id3 == 23)
; 3438 : 	{
; 3439 : 		if (id3 == 22)
; 3440 : 			BornPreBtn = 1;
; 3441 : 		else
; 3442 : 			BornNextBtn = 1;
; 3443 : 	}
; 3444 : 	attrx1 = BornBaseX + 35;
; 3445 : 	if (petinfo[BornPetNum].earth > 0)
; 3446 : 	{
; 3447 : 		attry1 = BornBaseY;
; 3448 : 		attrx2 = attrx1 + petinfo[BornPetNum].earth * 8;
; 3449 : 		attry2 = attry1 + 8;
; 3450 : 		StockBoxDispBuffer(attrx1, attry1, attrx2, attry2, DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 1);
; 3451 : 		StockBoxDispBuffer(attrx1 + 1, attry1 + 1, attrx2 + 1, attry2 + 1, DISP_PRIO_IME1, SYSTEM_PAL_GREEN2, 0);
; 3452 : 		StockBoxDispBuffer(attrx1 + 2, attry1 + 2, attrx2 + 2, attry2 + 2, DISP_PRIO_IME1, SYSTEM_PAL_GREEN2, 0);
; 3453 : 	}
; 3454 : 	if (petinfo[BornPetNum].water > 0)
; 3455 : 	{
; 3456 : 		attry1 = BornBaseY + 20;
; 3457 : 		attrx2 = attrx1 + petinfo[BornPetNum].water * 8;
; 3458 : 		attry2 = attry1 + 8;
; 3459 : 		StockBoxDispBuffer(attrx1, attry1, attrx2, attry2, DISP_PRIO_IME2, SYSTEM_PAL_AQUA, 1);
; 3460 : 		StockBoxDispBuffer(attrx1 + 1, attry1 + 1, attrx2 + 1, attry2 + 1, DISP_PRIO_IME1, SYSTEM_PAL_AQUA2, 0);
; 3461 : 		StockBoxDispBuffer(attrx1 + 2, attry1 + 2, attrx2 + 2, attry2 + 2, DISP_PRIO_IME1, SYSTEM_PAL_AQUA2, 0);
; 3462 : 	}
; 3463 : 	if (petinfo[BornPetNum].fire > 0)
; 3464 : 	{
; 3465 : 		attry1 = BornBaseY + 40;
; 3466 : 		attrx2 = attrx1 + petinfo[BornPetNum].fire * 8;
; 3467 : 		attry2 = attry1 + 8;
; 3468 : 		StockBoxDispBuffer(attrx1, attry1, attrx2, attry2, DISP_PRIO_IME2, SYSTEM_PAL_RED, 1);
; 3469 : 		StockBoxDispBuffer(attrx1 + 1, attry1 + 1, attrx2 + 1, attry2 + 1, DISP_PRIO_IME1, SYSTEM_PAL_RED2, 0);
; 3470 : 		StockBoxDispBuffer(attrx1 + 2, attry1 + 2, attrx2 + 2, attry2 + 2, DISP_PRIO_IME1, SYSTEM_PAL_RED2, 0);
; 3471 : 	}
; 3472 : 	if (petinfo[BornPetNum].wind > 0)
; 3473 : 	{
; 3474 : 		attry1 = BornBaseY + 60;
; 3475 : 		attrx2 = attrx1 + petinfo[BornPetNum].wind * 8;
; 3476 : 		attry2 = attry1 + 8;
; 3477 : 		StockBoxDispBuffer(attrx1, attry1, attrx2, attry2, DISP_PRIO_IME2, SYSTEM_PAL_YELLOW, 1);
; 3478 : 		StockBoxDispBuffer(attrx1 + 1, attry1 + 1, attrx2 + 1, attry2 + 1, DISP_PRIO_IME1, SYSTEM_PAL_YELLOW2, 0);
; 3479 : 		StockBoxDispBuffer(attrx1 + 2, attry1 + 2, attrx2 + 2, attry2 + 2, DISP_PRIO_IME1, SYSTEM_PAL_YELLOW2, 0);
; 3480 : 	}
; 3481 : 
; 3482 : 	StockFontBuffer(BornBaseX + 15, BornBaseY - 33, FONT_PRIO_FRONT, FONT_PAL_WHITE, petinfo[BornPetNum].name, 0);
; 3483 : 	graId[22] = StockDispBuffer(BornBaseX - 105, BornBaseY + 85, DISP_PRIO_CHAR, upDownBtnGraNo[0][BornPreBtn], selUseFlag);
; 3484 : 	graId[23] = StockDispBuffer(BornBaseX - 30, BornBaseY + 85, DISP_PRIO_CHAR, upDownBtnGraNo[1][BornNextBtn], selUseFlag);
; 3485 : 	StockDispBuffer(BornBaseX - 3, BornBaseY - 4, DISP_PRIO_CHAR, CG_NEWBORNPET_WND, 0);
; 3486 : 	if (pActPet20 == NULL)
; 3487 : 	{
; 3488 : 		//3~9
; 3489 : 		pActPet20 = MakeAnimDisp(BornBaseX - 60, BornBaseY + 45, petinfo[BornPetNum].spr_num, 0);
; 3490 : 	}
; 3491 : #endif
; 3492 : 	if (ResoMode == åè¾¨ç::mode800) {

  00bca	6a 00		 push	 0
  00bcc	50		 push	 eax
  00bcd	6a 0a		 push	 10			; 0000000aH
  00bcf	68 f0 00 00 00	 push	 240			; 000000f0H
  00bd4	68 40 01 00 00	 push	 320			; 00000140H
  00bd9	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00bde	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00be3	83 c4 14	 add	 esp, 20			; 00000014H
  00be6	83 f8 03	 cmp	 eax, 3
  00be9	75 0f		 jne	 SHORT $LN142@editCharPa

; 3493 : 		StockDispBuffer(400, 300, DISP_PRIO_BG, IMAGE_SetVar_2, 0);

  00beb	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  00bf0	ba 2f a0 00 00	 mov	 edx, 41007		; 0000a02fH
  00bf5	8d 48 9c	 lea	 ecx, DWORD PTR [eax-100]

; 3494 : 	}

  00bf8	eb 21		 jmp	 SHORT $LN145@editCharPa
$LN142@editCharPa:

; 3495 : 	else if (ResoMode == åè¾¨ç::mode1024) {

  00bfa	83 f8 04	 cmp	 eax, 4
  00bfd	75 0f		 jne	 SHORT $LN144@editCharPa

; 3496 : 		StockDispBuffer(512, 384, DISP_PRIO_BG, IMAGE_SetVar_3, 0);

  00bff	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00c04	ba 17 a4 00 00	 mov	 edx, 42007		; 0000a417H
  00c09	8d 48 80	 lea	 ecx, DWORD PTR [eax-128]

; 3497 : 	}

  00c0c	eb 0d		 jmp	 SHORT $LN145@editCharPa
$LN144@editCharPa:

; 3498 : 	else {
; 3499 : 		StockDispBuffer(320, 240, DISP_PRIO_BG, IMAGE_SetVar_1, 0);

  00c0e	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  00c13	ba 47 9c 00 00	 mov	 edx, 40007		; 00009c47H
  00c18	8d 48 b0	 lea	 ecx, DWORD PTR [eax-80]
$LN145@editCharPa:

; 3500 : 	}
; 3501 : 
; 3502 : 	RunAction();

  00c1b	6a 00		 push	 0
  00c1d	52		 push	 edx
  00c1e	6a 00		 push	 0
  00c20	51		 push	 ecx
  00c21	50		 push	 eax
  00c22	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00c27	83 c4 14	 add	 esp, 20			; 00000014H
  00c2a	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 3503 : 	StockTaskDispBuffer();

  00c2f	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 3504 : 	FlashKeyboardCursor();

  00c34	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 3505 : 	ImeProc();

  00c39	e8 00 00 00 00	 call	 ?ImeProc@@YAXXZ		; ImeProc

; 3506 : 
; 3507 : 	return ret;
; 3508 : }

  00c3e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c41	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR _ret$1$[ebp]
  00c47	33 cd		 xor	 ecx, ebp
  00c49	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c4e	8b e5		 mov	 esp, ebp
  00c50	5d		 pop	 ebp
  00c51	c3		 ret	 0
?editCharParam@@YAHXZ ENDP				; editCharParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initEditCharParam2@@YAXXZ
_TEXT	SEGMENT
?initEditCharParam2@@YAXXZ PROC				; initEditCharParam2, COMDAT

; 2771 : 	editCharParamProcNo = 0;
; 2772 : 
; 2773 : 	selCharNameBoxX = 104;
; 2774 : 	selCharNameBoxY = 102;
; 2775 : 	initStrBuffer(&selCharName, selCharNameBoxX, selCharNameBoxY,

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 10		 push	 16			; 00000010H
  00006	6a 66		 push	 102			; 00000066H
  00008	6a 68		 push	 104			; 00000068H
  0000a	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  0000f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 0
  00019	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?selCharNameBoxX@@3HA, 104 ; 00000068H
  00023	c7 05 00 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?selCharNameBoxY@@3HA, 102 ; 00000066H
  0002d	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 2776 : 		CHAR_NAME_LEN, FONT_PAL_WHITE, FONT_PRIO_BACK);
; 2777 : 	GetKeyInputFocus(&selCharName);

  00032	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  00037	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0003c	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2778 : }

  0003f	c3		 ret	 0
?initEditCharParam2@@YAXXZ ENDP				; initEditCharParam2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initEditCharParam@@YAXXZ
_TEXT	SEGMENT
?initEditCharParam@@YAXXZ PROC				; initEditCharParam, COMDAT

; 2732 : 	editCharParamProcNo = 0;
; 2733 : 
; 2734 : 	selCharNameBoxX = 104;
; 2735 : 	selCharNameBoxY = 102;
; 2736 : 	initStrBuffer(&selCharName, selCharNameBoxX, selCharNameBoxY, CHAR_NAME_LEN, FONT_PAL_WHITE, FONT_PRIO_BACK);

  00000	6a 00		 push	 0
  00002	6a 00		 push	 0
  00004	6a 10		 push	 16			; 00000010H
  00006	6a 66		 push	 102			; 00000066H
  00008	6a 68		 push	 104			; 00000068H
  0000a	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  0000f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?editCharParamProcNo@@3HA, 0
  00019	c7 05 00 00 00
	00 68 00 00 00	 mov	 DWORD PTR ?selCharNameBoxX@@3HA, 104 ; 00000068H
  00023	c7 05 00 00 00
	00 66 00 00 00	 mov	 DWORD PTR ?selCharNameBoxY@@3HA, 102 ; 00000066H
  0002d	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 2737 : 	selCharName.buffer[0] = '\0';
; 2738 : 	selCharName.cnt = 0;
; 2739 : 	selCharName.cursor = 0;
; 2740 : 	GetKeyInputFocus(&selCharName);

  00032	68 00 00 00 00	 push	 OFFSET ?selCharName@@3USTR_BUFFER@@A ; selCharName
  00037	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?selCharName@@3USTR_BUFFER@@A, 0
  0003e	c6 05 07 01 00
	00 00		 mov	 BYTE PTR ?selCharName@@3USTR_BUFFER@@A+263, 0
  00045	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?selCharName@@3USTR_BUFFER@@A+265, 0
  0004c	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 2741 : 
; 2742 : #ifdef __TEST_SERVER
; 2743 : 	if ((bNewServer & 0xf100000) == 0xf100000) {
; 2744 : 		nowSelCharStatusPoint = 550;
; 2745 : 	}
; 2746 : 	else {
; 2747 : 		nowSelCharStatusPoint = 20;
; 2748 : 	}
; 2749 : #else
; 2750 : 	//nowSelCharStatusPoint = 20;
; 2751 : 	nowSelCharStatusPoint = 0;
; 2752 : #endif
; 2753 : 	//	nowSelCharStatus[0]   =  0;
; 2754 : 	//	nowSelCharStatus[1]   =  0;
; 2755 : 
; 2756 : 	nowSelCharStatus[0] = 10;

  00051	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000000000000000000000a0000000a
  00058	83 c4 1c	 add	 esp, 28			; 0000001cH
  0005b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?nowSelCharStatus@@3PAHA, xmm0
  00062	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelCharStatusPoint@@3HA, 0
  0006c	0f 57 c0	 xorps	 xmm0, xmm0

; 2757 : 	nowSelCharStatus[1] = 10;
; 2758 : 
; 2759 : 	nowSelCharStatus[2] = 0;
; 2760 : 	nowSelCharStatus[3] = 0;
; 2761 : 	nowSelCharAttrPoint = 10;

  0006f	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?nowSelCharAttrPoint@@3HA, 10 ; 0000000aH

; 2762 : 	nowSelCharAttr[0] = 0;

  00079	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?nowSelCharAttr@@3PAHA, xmm0

; 2763 : 	nowSelCharAttr[1] = 0;
; 2764 : 	nowSelCharAttr[2] = 0;
; 2765 : 	nowSelCharAttr[3] = 0;
; 2766 : }

  00080	c3		 ret	 0
?initEditCharParam@@YAXXZ ENDP				; initEditCharParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selCharGraColorWin@@YAHXZ
_TEXT	SEGMENT
_ret$1$ = -72						; size = 4
_msg$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
?selCharGraColorWin@@YAHXZ PROC				; selCharGraColorWin, COMDAT

; 2624 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 48	 sub	 esp, 72			; 00000048H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2625 : 	static int fontId[] = { -2, -2, -2, -2 };
; 2626 : 	static ACTION* ptActMenuWin = NULL;
; 2627 : 	int id;
; 2628 : 	int i;
; 2629 : 	static int x, y, w, h;
; 2630 : 	int ret = 0;
; 2631 : 	char msg[][16] =

  00010	0f b7 05 08 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@+8
  00017	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@
  0001f	66 89 45 c4	 mov	 WORD PTR _msg$[ebp+8], ax
  00023	0f b6 05 0a 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0L@POIBACII@?5?5?5?$LA?a?A?$KE?5?5?5@+10
  0002a	88 45 c6	 mov	 BYTE PTR _msg$[ebp+10], al
  0002d	0f b7 05 08 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@+8
  00034	66 89 45 d4	 mov	 WORD PTR _msg$[ebp+24], ax
  00038	0f b6 05 0a 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@+10
  0003f	88 45 d6	 mov	 BYTE PTR _msg$[ebp+26], al
  00042	0f b7 05 08 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@+8
  00049	66 0f d6 45 bc	 movq	 QWORD PTR _msg$[ebp], xmm0
  0004e	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@DDKLBPNB@?5?$LL?v?$LL?s?$LK?$KP?$LA?f?5@
  00056	66 89 45 e4	 mov	 WORD PTR _msg$[ebp+40], ax
  0005a	0f b6 05 0a 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@+10
  00061	66 0f d6 45 cc	 movq	 QWORD PTR _msg$[ebp+16], xmm0
  00066	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@KFACDLLI@?5?$LJ?f?G?b?$MA?$PM?H?$KP?5@
  0006e	88 45 e6	 mov	 BYTE PTR _msg$[ebp+42], al
  00071	0f b7 05 08 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@+8
  00078	53		 push	 ebx
  00079	33 db		 xor	 ebx, ebx
  0007b	66 0f d6 45 dc	 movq	 QWORD PTR _msg$[ebp+32], xmm0
  00080	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@
  00088	66 89 45 f4	 mov	 WORD PTR _msg$[ebp+56], ax
  0008c	0f b6 05 0a 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0L@LJAAMAMF@?5?5?5?C?k?$LM?R?5?5?5@+10
  00093	89 5d b8	 mov	 DWORD PTR _ret$1$[ebp], ebx
  00096	89 5d c7	 mov	 DWORD PTR _msg$[ebp+11], ebx
  00099	88 5d cb	 mov	 BYTE PTR _msg$[ebp+15], bl
  0009c	89 5d d7	 mov	 DWORD PTR _msg$[ebp+27], ebx
  0009f	88 5d db	 mov	 BYTE PTR _msg$[ebp+31], bl
  000a2	89 5d e7	 mov	 DWORD PTR _msg$[ebp+43], ebx
  000a5	88 5d eb	 mov	 BYTE PTR _msg$[ebp+47], bl
  000a8	66 0f d6 45 ec	 movq	 QWORD PTR _msg$[ebp+48], xmm0
  000ad	88 45 f6	 mov	 BYTE PTR _msg$[ebp+58], al
  000b0	89 5d f7	 mov	 DWORD PTR _msg$[ebp+59], ebx
  000b3	88 5d fb	 mov	 BYTE PTR _msg$[ebp+63], bl

; 2632 : 	{
; 2633 : 		"   ê²°ì    ",
; 2634 : 		" ììë³ê²½ ",
; 2635 : 		" ë°©í¥ì í ",
; 2636 : 		"   ì·¨ì   "
; 2637 : 	};
; 2638 : 
; 2639 : 	if (selCharGraColorWinProcNo == 0)

  000b6	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, ebx
  000bc	75 6e		 jne	 SHORT $LN47@selCharGra

; 2640 : 	{
; 2641 : 		selCharGraColorWinProcNo = 1;
; 2642 : 
; 2643 : 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 2644 : 		{
; 2645 : 			fontId[i] = -2;

  000be	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 2646 : 		}
; 2647 : 
; 2648 : 		w = 2;
; 2649 : 		h = 3;
; 2650 : 		x = 496;
; 2651 : 		y = 80;
; 2652 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  000c5	6a 01		 push	 1
  000c7	53		 push	 ebx
  000c8	6a 03		 push	 3
  000ca	6a 02		 push	 2
  000cc	6a 50		 push	 80			; 00000050H
  000ce	68 f0 01 00 00	 push	 496			; 000001f0H
  000d3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, 1
  000dd	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA, xmm0
  000e4	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?w@?1??selCharGraColorWin@@YAHXZ@4HA, 2
  000ee	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?h@?1??selCharGraColorWin@@YAHXZ@4HA, 3
  000f8	c7 05 00 00 00
	00 f0 01 00 00	 mov	 DWORD PTR ?x@?1??selCharGraColorWin@@YAHXZ@4HA, 496 ; 000001f0H
  00102	c7 05 00 00 00
	00 50 00 00 00	 mov	 DWORD PTR ?y@?1??selCharGraColorWin@@YAHXZ@4HA, 80 ; 00000050H
  0010c	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00111	8b c8		 mov	 ecx, eax
  00113	83 c4 18	 add	 esp, 24			; 00000018H
  00116	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A, ecx

; 2653 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 2654 : 		x = ptActMenuWin->x;

  0011c	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0011f	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??selCharGraColorWin@@YAHXZ@4HA, eax

; 2655 : 		y = ptActMenuWin->y;

  00124	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00127	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??selCharGraColorWin@@YAHXZ@4HA, eax
$LN47@selCharGra:

; 2656 : #endif
; 2657 : 	}
; 2658 : 
; 2659 : 	id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0012c	6a 04		 push	 4
  0012e	68 00 00 00 00	 push	 OFFSET ?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA
  00133	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00138	83 c4 08	 add	 esp, 8

; 2660 : 	if (id == 0)

  0013b	85 c0		 test	 eax, eax
  0013d	75 08		 jne	 SHORT $LN9@selCharGra

; 2661 : 	{
; 2662 : 		ret = 1;

  0013f	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 2663 : 		play_se(217, 320, 240);
; 2664 : 	}

  00142	e9 8f 00 00 00	 jmp	 $LN53@selCharGra
$LN9@selCharGra:

; 2665 : 	else
; 2666 : 		if (id == 1)

  00147	83 f8 01	 cmp	 eax, 1
  0014a	75 3f		 jne	 SHORT $LN11@selCharGra

; 2667 : 		{
; 2668 : 			selCharColor[nowSelCharGraNo]++;

  0014c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowSelCharGraNo@@3HA

; 2669 : 			if (selCharColor[nowSelCharGraNo] > 3)

  00152	33 d2		 xor	 edx, edx

; 2670 : 				selCharColor[nowSelCharGraNo] = 0;
; 2671 : 			play_se(217, 320, 240);

  00154	68 f0 00 00 00	 push	 240			; 000000f0H
  00159	68 40 01 00 00	 push	 320			; 00000140H
  0015e	68 d9 00 00 00	 push	 217			; 000000d9H
  00163	ff 04 8d 00 00
	00 00		 inc	 DWORD PTR ?selCharColor@@3PAHA[ecx*4]
  0016a	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?selCharColor@@3PAHA[ecx*4]
  00171	83 f8 03	 cmp	 eax, 3
  00174	0f 4f c2	 cmovg	 eax, edx
  00177	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?selCharColor@@3PAHA[ecx*4], eax
  0017e	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00183	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2672 : 		}

  00186	e9 82 00 00 00	 jmp	 $LN48@selCharGra
$LN11@selCharGra:

; 2673 : 		else
; 2674 : 			if (id == 2)

  0018b	83 f8 02	 cmp	 eax, 2
  0018e	75 3c		 jne	 SHORT $LN14@selCharGra

; 2675 : 			{
; 2676 : 				selCharDir[nowSelCharGraNo]++;

  00190	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowSelCharGraNo@@3HA

; 2677 : 				if (selCharDir[nowSelCharGraNo] > 7)

  00196	33 d2		 xor	 edx, edx

; 2678 : 					selCharDir[nowSelCharGraNo] = 0;
; 2679 : 				play_se(217, 320, 240);

  00198	68 f0 00 00 00	 push	 240			; 000000f0H
  0019d	68 40 01 00 00	 push	 320			; 00000140H
  001a2	68 d9 00 00 00	 push	 217			; 000000d9H
  001a7	ff 04 8d 00 00
	00 00		 inc	 DWORD PTR ?selCharDir@@3PAHA[ecx*4]
  001ae	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?selCharDir@@3PAHA[ecx*4]
  001b5	83 f8 07	 cmp	 eax, 7
  001b8	0f 4f c2	 cmovg	 eax, edx
  001bb	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?selCharDir@@3PAHA[ecx*4], eax
  001c2	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001c7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2680 : 			}

  001ca	eb 41		 jmp	 SHORT $LN48@selCharGra
$LN14@selCharGra:

; 2681 : 			else
; 2682 : 				if (id == 3)

  001cc	83 f8 03	 cmp	 eax, 3
  001cf	75 3c		 jne	 SHORT $LN48@selCharGra

; 2683 : 				{
; 2684 : 					ret = 2;

  001d1	bb 02 00 00 00	 mov	 ebx, 2
$LN53@selCharGra:

; 2685 : 					play_se(217, 320, 240);
; 2686 : 				}
; 2687 : 	if (ret != 0)
; 2688 : 	{
; 2689 : 		if (ptActMenuWin)

  001d6	68 f0 00 00 00	 push	 240			; 000000f0H
  001db	68 40 01 00 00	 push	 320			; 00000140H
  001e0	68 d9 00 00 00	 push	 217			; 000000d9H
  001e5	89 5d b8	 mov	 DWORD PTR _ret$1$[ebp], ebx
  001e8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001ed	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A
  001f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f6	85 c9		 test	 ecx, ecx
  001f8	74 13		 je	 SHORT $LN48@selCharGra

; 2690 : 		{
; 2691 : 			DeathAction(ptActMenuWin);

  001fa	51		 push	 ecx
  001fb	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00200	83 c4 04	 add	 esp, 4

; 2692 : 			ptActMenuWin = NULL;

  00203	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A, 0
$LN48@selCharGra:

; 2693 : 		}
; 2694 : 	}
; 2695 : 
; 2696 : 	id = focusFontId(fontId, sizeof(fontId) / sizeof(int));

  0020d	6a 04		 push	 4
  0020f	68 00 00 00 00	 push	 OFFSET ?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA
  00214	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId
  00219	83 c4 08	 add	 esp, 8

; 2697 : 	if (id == 0)

  0021c	85 c0		 test	 eax, eax
  0021e	75 07		 jne	 SHORT $LN20@selCharGra

; 2698 : 	{
; 2699 : 		ShowBottomLineString(FONT_PAL_WHITE, "íì¬ ì íí ìºë¦­í°ë¡ ê²°ì í©ëë¤ã");

  00220	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@NKOCBMEN@?G?v?$MA?g?5?$LM?$LB?E?C?G?Q?5?D?$LD?$LI?$KP?E?M?$LH?N?5?$LA?a?A?$KE?G?U?$LE?O?$LE?Y@

; 2700 : 	}

  00225	eb 22		 jmp	 SHORT $LN54@selCharGra
$LN20@selCharGra:

; 2701 : 	else
; 2702 : 		if (id == 1)

  00227	83 f8 01	 cmp	 eax, 1
  0022a	75 07		 jne	 SHORT $LN22@selCharGra

; 2703 : 		{
; 2704 : 			ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í° ìì ë³ê²½ã");

  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GLGANICJ@?D?$LD?$LI?$KP?E?M?5?$LL?v?$LL?s?5?$LK?$KP?$LA?f?$KB?$KD@

; 2705 : 		}

  00231	eb 16		 jmp	 SHORT $LN54@selCharGra
$LN22@selCharGra:

; 2706 : 		else
; 2707 : 			if (id == 2)

  00233	83 f8 02	 cmp	 eax, 2
  00236	75 07		 jne	 SHORT $LN24@selCharGra

; 2708 : 			{
; 2709 : 				ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í°ë°©í¥ì íã");

  00238	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IBMPLOHE@?D?$LD?$LI?$KP?E?M?$LJ?f?G?b?$MA?$PM?H?$KP?$KB?$KD@

; 2710 : 			}

  0023d	eb 0a		 jmp	 SHORT $LN54@selCharGra
$LN24@selCharGra:

; 2711 : 			else
; 2712 : 				if (id == 3)

  0023f	83 f8 03	 cmp	 eax, 3
  00242	75 0f		 jne	 SHORT $LN26@selCharGra

; 2713 : 				{
; 2714 : 					ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í°ì ííë©´ì¼ë¡ëìê°ê¸°ã");

  00244	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@JACDIIAG@?D?$LD?$LI?$KP?E?M?$LM?$LB?E?C?H?$KN?$LI?i?$MA?$LI?$LH?N?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@
$LN54@selCharGra:

; 2715 : 				}
; 2716 : 
; 2717 : 	if (ptActMenuWin != NULL) {

  00249	6a 00		 push	 0
  0024b	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00250	83 c4 08	 add	 esp, 8
$LN26@selCharGra:
  00253	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??selCharGraColorWin@@YAHXZ@4PAUaction@@A
  00259	85 c9		 test	 ecx, ecx
  0025b	74 5e		 je	 SHORT $LN46@selCharGra

; 2718 : 		if (ptActMenuWin->hp >= 1) {

  0025d	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  00261	7c 58		 jl	 SHORT $LN46@selCharGra

; 2719 : 			for (i = 0; i < sizeof(fontId) / sizeof(int); i++) {

  00263	56		 push	 esi
  00264	57		 push	 edi
  00265	33 ff		 xor	 edi, edi
  00267	8d 5d bc	 lea	 ebx, DWORD PTR _msg$[ebp]
  0026a	33 f6		 xor	 esi, esi
  0026c	0f 1f 40 00	 npad	 4
$LL7@selCharGra:

; 2720 : 				fontId[i] = StockFontBuffer(x + 22, y + i * 22 + 32, FONT_PRIO_FRONT, FONT_PAL_YELLOW, msg[i], 2);

  00270	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??selCharGraColorWin@@YAHXZ@4HA
  00275	6a 02		 push	 2
  00277	53		 push	 ebx
  00278	83 c0 20	 add	 eax, 32			; 00000020H
  0027b	6a 04		 push	 4
  0027d	03 c7		 add	 eax, edi
  0027f	6a 01		 push	 1
  00281	50		 push	 eax
  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??selCharGraColorWin@@YAHXZ@4HA
  00287	83 c0 16	 add	 eax, 22			; 00000016H
  0028a	50		 push	 eax
  0028b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00290	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??selCharGraColorWin@@YAHXZ@4PAHA[esi], eax
  00296	83 c4 18	 add	 esp, 24			; 00000018H
  00299	83 c6 04	 add	 esi, 4
  0029c	83 c3 10	 add	 ebx, 16			; 00000010H
  0029f	83 c7 16	 add	 edi, 22			; 00000016H
  002a2	83 fe 10	 cmp	 esi, 16			; 00000010H
  002a5	72 c9		 jb	 SHORT $LL7@selCharGra

; 2721 : 			}
; 2722 : 		}
; 2723 : 	}
; 2724 : 
; 2725 : 	return ret;

  002a7	8b 45 b8	 mov	 eax, DWORD PTR _ret$1$[ebp]
  002aa	5f		 pop	 edi
  002ab	5e		 pop	 esi
  002ac	5b		 pop	 ebx

; 2726 : }

  002ad	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002b0	33 cd		 xor	 ecx, ebp
  002b2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b7	8b e5		 mov	 esp, ebp
  002b9	5d		 pop	 ebp
  002ba	c3		 ret	 0
$LN46@selCharGra:
  002bb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002be	8b c3		 mov	 eax, ebx
  002c0	33 cd		 xor	 ecx, ebp
  002c2	5b		 pop	 ebx
  002c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c8	8b e5		 mov	 esp, ebp
  002ca	5d		 pop	 ebp
  002cb	c3		 ret	 0
?selCharGraColorWin@@YAHXZ ENDP				; selCharGraColorWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSelCharGraColorWin@@YAXXZ
_TEXT	SEGMENT
?initSelCharGraColorWin@@YAXXZ PROC			; initSelCharGraColorWin, COMDAT

; 2620 : 	selCharGraColorWinProcNo = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, 0

; 2621 : }

  0000a	c3		 ret	 0
?initSelCharGraColorWin@@YAXXZ ENDP			; initSelCharGraColorWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selCharGraNo@@YAHXZ
_TEXT	SEGMENT
_tmmsg$1 = -516						; size = 512
__$ArrayPad$ = -4					; size = 4
?selCharGraNo@@YAHXZ PROC				; selCharGraNo, COMDAT

; 2452 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2453 : 	int i;
; 2454 : 	int ret = 0;
; 2455 : 	int ret2;
; 2456 : 	int x1, y1, x2, y2;
; 2457 : 	int id;
; 2458 : 	static int selCharCanselGraId[] = { -2 };
; 2459 : 	if (selCharGraNoProcNo == 0)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?selCharGraNoProcNo@@3HA
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	33 db		 xor	 ebx, ebx
  0001c	57		 push	 edi
  0001d	85 c0		 test	 eax, eax
  0001f	75 16		 jne	 SHORT $LN14@selCharGra

; 2460 : 	{
; 2461 : 		for (i = 0; i < sizeof(selCharCanselGraId) / sizeof(int); i++)
; 2462 : 		{
; 2463 : 			selCharCanselGraId[i] = -2;

  00021	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA, -2 ; fffffffeH

; 2464 : 		}
; 2465 : 		selCharGraNoProcNo++;

  0002b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 1

; 2466 : 	}
; 2467 : 
; 2468 : 	if (selCharGraNoProcNo == 1)

  00035	eb 09		 jmp	 SHORT $LN65@selCharGra
$LN14@selCharGra:
  00037	83 f8 01	 cmp	 eax, 1
  0003a	0f 85 f1 00 00
	00		 jne	 $LN6@selCharGra
$LN65@selCharGra:

; 2469 : 	{
; 2470 : 		for (i = 0; i < MaxSelectChar; i++)

  00040	33 f6		 xor	 esi, esi
  00042	bb 04 00 00 00	 mov	 ebx, OFFSET ?selectGraHitArea@@3PAY03HA+4
  00047	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL7@selCharGra:

; 2471 : 		{
; 2472 : 			if (ptActSelChar[i] != NULL) {

  00050	8b 3c b5 00 00
	00 00		 mov	 edi, DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi*4]
  00057	85 ff		 test	 edi, edi
  00059	0f 84 be 00 00
	00		 je	 $LN5@selCharGra

; 2473 : 				if (ResoMode == åè¾¨ç::mode800) {

  0005f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00064	8b 0c f5 00 00
	00 00		 mov	 ecx, DWORD PTR ?selectGraLocate@@3PAY01HA[esi*8]
  0006b	83 f8 03	 cmp	 eax, 3
  0006e	75 12		 jne	 SHORT $LN17@selCharGra

; 2474 : 					ptActSelChar[i]->x = selectGraLocate[i][0] + 100;

  00070	83 c1 64	 add	 ecx, 100		; 00000064H
  00073	89 4f 18	 mov	 DWORD PTR [edi+24], ecx

; 2475 : 					ptActSelChar[i]->y = selectGraLocate[i][1] + 100;

  00076	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?selectGraLocate@@3PAY01HA[esi*8+4]
  0007d	83 c0 64	 add	 eax, 100		; 00000064H

; 2476 : 				}

  00080	eb 26		 jmp	 SHORT $LN20@selCharGra
$LN17@selCharGra:

; 2477 : 				else if (ResoMode == åè¾¨ç::mode1024) {

  00082	83 f8 04	 cmp	 eax, 4
  00085	75 17		 jne	 SHORT $LN19@selCharGra

; 2478 : 					ptActSelChar[i]->x = selectGraLocate[i][0] + 200;

  00087	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  0008d	89 4f 18	 mov	 DWORD PTR [edi+24], ecx

; 2479 : 					ptActSelChar[i]->y = selectGraLocate[i][1] + 200;

  00090	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?selectGraLocate@@3PAY01HA[esi*8+4]
  00097	05 c8 00 00 00	 add	 eax, 200		; 000000c8H

; 2480 : 				}

  0009c	eb 0a		 jmp	 SHORT $LN20@selCharGra
$LN19@selCharGra:

; 2481 : 				else {
; 2482 : 					ptActSelChar[i]->x = selectGraLocate[i][0];

  0009e	89 4f 18	 mov	 DWORD PTR [edi+24], ecx

; 2483 : 					ptActSelChar[i]->y = selectGraLocate[i][1];

  000a1	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?selectGraLocate@@3PAY01HA[esi*8+4]
$LN20@selCharGra:

; 2484 : 				}
; 2485 : 				x1 = ptActSelChar[i]->x + selectGraHitArea[i][0];

  000a8	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  000ab	8b 53 fc	 mov	 edx, DWORD PTR [ebx-4]
  000ae	03 d1		 add	 edx, ecx

; 2486 : 				y1 = ptActSelChar[i]->y + selectGraHitArea[i][1];

  000b0	8b c8		 mov	 ecx, eax
  000b2	03 0b		 add	 ecx, DWORD PTR [ebx]

; 2487 : 				x2 = x1 + selectGraHitArea[i][2];
; 2488 : 				y2 = y1 + selectGraHitArea[i][3];

  000b4	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]

; 2489 : 				if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX)) {

  000b7	6a 65		 push	 101			; 00000065H
  000b9	03 c1		 add	 eax, ecx
  000bb	50		 push	 eax
  000bc	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000bf	03 c2		 add	 eax, edx
  000c1	50		 push	 eax
  000c2	51		 push	 ecx
  000c3	52		 push	 edx
  000c4	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000c9	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi*4]
  000d0	83 c4 14	 add	 esp, 20			; 00000014H
  000d3	85 c0		 test	 eax, eax
  000d5	74 3c		 je	 SHORT $LN21@selCharGra

; 2490 : 					ptActSelChar[i]->anim_no = ANIM_WALK;

  000d7	c7 81 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [ecx+332], 4

; 2491 : 					if (mouse.onceState & MOUSE_LEFT_CRICK) {

  000e1	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000e8	74 33		 je	 SHORT $LN5@selCharGra

; 2492 : 						selCharGraNoProcNo = 2;
; 2493 : 						nowSelCharGraNo = i;
; 2494 : 						play_se(217, 320, 240);

  000ea	68 f0 00 00 00	 push	 240			; 000000f0H
  000ef	68 40 01 00 00	 push	 320			; 00000140H
  000f4	68 d9 00 00 00	 push	 217			; 000000d9H
  000f9	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 2
  00103	89 35 00 00 00
	00		 mov	 DWORD PTR ?nowSelCharGraNo@@3HA, esi
  00109	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0010e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2495 : 					}
; 2496 : 				}

  00111	eb 0a		 jmp	 SHORT $LN5@selCharGra
$LN21@selCharGra:

; 2497 : 				else {
; 2498 : 					ptActSelChar[i]->anim_no = ANIM_STAND;

  00113	c7 81 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [ecx+332], 3
$LN5@selCharGra:

; 2469 : 	{
; 2470 : 		for (i = 0; i < MaxSelectChar; i++)

  0011d	46		 inc	 esi
  0011e	83 c3 10	 add	 ebx, 16			; 00000010H
  00121	83 fe 0c	 cmp	 esi, 12			; 0000000cH
  00124	0f 8c 26 ff ff
	ff		 jl	 $LL7@selCharGra
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?selCharGraNoProcNo@@3HA
  0012f	33 db		 xor	 ebx, ebx
$LN6@selCharGra:

; 2499 : 				}
; 2500 : 			}
; 2501 : 		}
; 2502 : 	}
; 2503 : 
; 2504 : 	if (selCharGraNoProcNo == 2)

  00131	83 f8 02	 cmp	 eax, 2
  00134	75 11		 jne	 SHORT $LN24@selCharGra

; 2505 : 	{
; 2506 : 		initSelCharGraColorWin();

  00136	e8 00 00 00 00	 call	 ?initSelCharGraColorWin@@YAXXZ ; initSelCharGraColorWin

; 2507 : 		selCharGraNoProcNo++;

  0013b	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 3

; 2508 : 	}
; 2509 : 	if (selCharGraNoProcNo == 3)

  00145	eb 05		 jmp	 SHORT $LN66@selCharGra
$LN24@selCharGra:
  00147	83 f8 03	 cmp	 eax, 3
  0014a	75 27		 jne	 SHORT $LN69@selCharGra
$LN66@selCharGra:

; 2510 : 	{
; 2511 : 		ret2 = selCharGraColorWin();

  0014c	e8 00 00 00 00	 call	 ?selCharGraColorWin@@YAHXZ ; selCharGraColorWin

; 2512 : 		if (ret2 == 1)

  00151	83 f8 01	 cmp	 eax, 1
  00154	75 04		 jne	 SHORT $LN26@selCharGra

; 2513 : 		{
; 2514 : 			ret = 1;

  00156	8b d8		 mov	 ebx, eax

; 2515 : 		}

  00158	eb 19		 jmp	 SHORT $LN69@selCharGra
$LN26@selCharGra:

; 2516 : 		else
; 2517 : 			if (ret2 == 2)

  0015a	83 f8 02	 cmp	 eax, 2
  0015d	75 14		 jne	 SHORT $LN69@selCharGra

; 2518 : 			{
; 2519 : 				selCharGraNoProcNo = 1;

  0015f	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 1

; 2520 : 				nowSelCharGraNo = -1;

  00169	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?nowSelCharGraNo@@3HA, -1
$LN69@selCharGra:

; 2521 : 			}
; 2522 : 	}
; 2523 : 
; 2524 : 	id = selGraId(selCharCanselGraId, sizeof(selCharCanselGraId) / sizeof(int));

  00173	6a 01		 push	 1
  00175	68 00 00 00 00	 push	 OFFSET ?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA
  0017a	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  0017f	83 c4 08	 add	 esp, 8

; 2525 : 	if (id == 0) {

  00182	85 c0		 test	 eax, eax
  00184	75 1c		 jne	 SHORT $LN29@selCharGra

; 2526 : 		ret = 2;
; 2527 : 		play_se(217, 320, 240);

  00186	68 f0 00 00 00	 push	 240			; 000000f0H
  0018b	68 40 01 00 00	 push	 320			; 00000140H
  00190	68 d9 00 00 00	 push	 217			; 000000d9H
  00195	8d 58 02	 lea	 ebx, DWORD PTR [eax+2]
  00198	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0019d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2528 : 	}
; 2529 : 	if (ret != 0) {

  001a0	eb 04		 jmp	 SHORT $LN67@selCharGra
$LN29@selCharGra:
  001a2	85 db		 test	 ebx, ebx
  001a4	74 2a		 je	 SHORT $LN9@selCharGra
$LN67@selCharGra:

; 2530 : 		for (i = 0; i < MaxSelectChar; i++)

  001a6	be 00 00 00 00	 mov	 esi, OFFSET ?ptActSelChar@@3PAPAUaction@@A
  001ab	0f 1f 44 00 00	 npad	 5
$LL10@selCharGra:

; 2531 : 		{
; 2532 : 			if (ptActSelChar[i] != NULL)

  001b0	8b 06		 mov	 eax, DWORD PTR [esi]
  001b2	85 c0		 test	 eax, eax
  001b4	74 0f		 je	 SHORT $LN8@selCharGra

; 2533 : 			{
; 2534 : 				DeathAction(ptActSelChar[i]);

  001b6	50		 push	 eax
  001b7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001bc	83 c4 04	 add	 esp, 4

; 2535 : 				ptActSelChar[i] = NULL;

  001bf	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN8@selCharGra:

; 2530 : 		for (i = 0; i < MaxSelectChar; i++)

  001c5	83 c6 04	 add	 esi, 4
  001c8	81 fe 30 00 00
	00		 cmp	 esi, OFFSET ?ptActSelChar@@3PAPAUaction@@A+48
  001ce	7c e0		 jl	 SHORT $LL10@selCharGra
$LN9@selCharGra:

; 2536 : 			}
; 2537 : 		}
; 2538 : 	}
; 2539 : 	for (i = 0; i < MaxSelectChar; i++) {

  001d0	33 f6		 xor	 esi, esi
  001d2	bf 04 00 00 00	 mov	 edi, OFFSET ?selectGraHitArea@@3PAY03HA+4
  001d7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL13@selCharGra:

; 2540 : 		if (ptActSelChar[i] != NULL) {

  001e0	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi*4]
  001e7	85 c9		 test	 ecx, ecx
  001e9	74 75		 je	 SHORT $LN11@selCharGra

; 2541 : 			if (nowSelCharGraNo == i) {

  001eb	39 35 00 00 00
	00		 cmp	 DWORD PTR ?nowSelCharGraNo@@3HA, esi
  001f1	75 3c		 jne	 SHORT $LN33@selCharGra

; 2542 : 				ptActSelChar[i]->anim_no = ANIM_WALK;

  001f3	c7 81 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [ecx+332], 4

; 2543 : 				x1 = ptActSelChar[i]->x + selectGraHitArea[i][0];

  001fd	8b 51 18	 mov	 edx, DWORD PTR [ecx+24]

; 2544 : 				y1 = ptActSelChar[i]->y + selectGraHitArea[i][1];

  00200	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00203	03 0f		 add	 ecx, DWORD PTR [edi]

; 2545 : 				x2 = x1 + selectGraHitArea[i][2];
; 2546 : 				y2 = y1 + selectGraHitArea[i][3];

  00205	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00208	03 57 fc	 add	 edx, DWORD PTR [edi-4]
  0020b	03 c1		 add	 eax, ecx

; 2547 : 				StockBoxDispBuffer(x1, y1, x2, y2, DISP_PRIO_BOX, BoxColor, 0);

  0020d	6a 00		 push	 0
  0020f	ff 35 00 00 00
	00		 push	 DWORD PTR ?BoxColor@@3HA ; BoxColor
  00215	6a 65		 push	 101			; 00000065H
  00217	50		 push	 eax
  00218	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0021b	03 c2		 add	 eax, edx
  0021d	50		 push	 eax
  0021e	51		 push	 ecx
  0021f	52		 push	 edx
  00220	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer
  00225	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi*4]
  0022c	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN33@selCharGra:

; 2548 : 				//MakeHitBox( x1, y1, x2, y2, DISP_PRIO_BOX );
; 2549 : 			}
; 2550 : 			ptActSelChar[i]->anim_chr_no = selectGraNoTbl[i] + selCharColor[i] * 5;

  0022f	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?selCharColor@@3PAHA[esi*4]

; 2551 : 			ptActSelChar[i]->anim_ang = selCharDir[i];
; 2552 : 			pattern(ptActSelChar[i], ANM_NOMAL_SPD, ANM_LOOP);

  00236	6a 00		 push	 0
  00238	6a 00		 push	 0
  0023a	51		 push	 ecx
  0023b	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0023e	03 04 b5 00 00
	00 00		 add	 eax, DWORD PTR ?selectGraNoTbl@@3PAHA[esi*4]
  00245	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax
  0024b	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?selCharDir@@3PAHA[esi*4]
  00252	89 81 54 01 00
	00		 mov	 DWORD PTR [ecx+340], eax
  00258	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  0025d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@selCharGra:

; 2536 : 			}
; 2537 : 		}
; 2538 : 	}
; 2539 : 	for (i = 0; i < MaxSelectChar; i++) {

  00260	83 c7 10	 add	 edi, 16			; 00000010H
  00263	46		 inc	 esi
  00264	81 ff c4 00 00
	00		 cmp	 edi, OFFSET ?selectGraHitArea@@3PAY03HA+196
  0026a	0f 8c 70 ff ff
	ff		 jl	 $LL13@selCharGra

; 2553 : 		}
; 2554 : 	}
; 2555 : 
; 2556 : 	if (nowSelCharGraNo > -1) {

  00270	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?nowSelCharGraNo@@3HA, -1
  00277	7e 2f		 jle	 SHORT $LN34@selCharGra

; 2557 : 		char msg[12][4][2][52] =
; 2558 : 		{
; 2559 : 			{{"ê³ ë¥´ê³ ë¥´","ë¤ì´ë¸ì¤"},{"ë² ë¥´ê°","ë¤ì´ë¸ì¤"},{"ë¸ë¥´ë¸ë¥´","ë¤ì´ë¸ì¤"},{"ë² ë£¨ë£¨","ë¤ì´ë¸ì¤"}},
; 2560 : 			{{"ë² ë£¨ë£¨","íë¦¬í ì¤"},{"ê³ ë¥´ê³ ë¥´","íë¦¬í ì¤"},{"ë² ë¥´ê°","íë¦¬í ì¤"},{"ë¸ë¥´ë¸ë¥´","íë¦¬í ì¤"}},
; 2561 : 			{{"ë² ë£¨ë£¨","ë¤ì´ë¸"},{"ë¸ë¥´ë¸ë¥´","ë¤ì´ë¸"},{"ë² ë¥´ê°","ë¤ì´ë¸"},{"ê³ ë¥´ê³ ë¥´","ë¤ì´ë¸"}},
; 2562 : 			{{"ê³ ë¥´ê³ ë¥´","íë¼í¤í ì¤"},{"ë² ë¥´ê°","íë¼í¤í ì¤"},{"ë¸ë¥´ë¸ë¥´","íë¼í¤í ì¤"},{"ë² ë£¨ë£¨","íë¼í¤í ì¤"}},
; 2563 : 			{{"ë² ë£¨ë£¨","íë¦¬í ì¤"},{"ë² ë¥´ê°","íë¦¬í ì¤"},{"ë¸ë¥´ë¸ë¥´","íë¦¬í ì¤"},{"ê³ ë¥´ê³ ë¥´","íë¦¬í ì¤"}},
; 2564 : 			{{"ê³ ë¥´ê³ ë¥´","íë¼í¤í ì¤"},{"ë² ë£¨ë£¨","íë¼í¤í ì¤"},{"ë¸ë¥´ë¸ë¥´","íë¼í¤í ì¤"},{"ë² ë¥´ê°","íë¼í¤í ì¤"}},
; 2565 : 			{{"ë² ë¥´ê°","ì¤íí ì¤"},{"ë¸ë¥´ë¸ë¥´","ì¤íí ì¤"},{"ë² ë£¨ë£¨","ì¤íí ì¤"},{"ê³ ë¥´ê³ ë¥´","ì¤íí ì¤"}},
; 2566 : 			{{"ë² ë¥´ê°","ì¤íí ì¤"},{"ê³ ë¥´ê³ ë¥´","ì¤íí ì¤"},{"ë¸ë¥´ë¸ë¥´","ì¤íí ì¤"},{"ë² ë£¨ë£¨","ì¤íí ì¤"}},
; 2567 : 			{{"ë¸ë¥´ë¸ë¥´","ë¤ì´ë¸ì¤"},{"ê³ ë¥´ê³ ë¥´","ë¤ì´ë¸ì¤"},{"ë² ë¥´ê°","ë¤ì´ë¸ì¤"},{"ë² ë£¨ë£¨","ë¤ì´ë¸ì¤"}},
; 2568 : 			{{"ë² ë£¨ë£¨","ë¤ì´ë¸"},{"ë¸ë¥´ë¸ë¥´","ë¤ì´ë¸"},{"ê³ ë¥´ê³ ë¥´","ë¤ì´ë¸"},{"ë² ë¥´ê°","ë¤ì´ë¸"}},
; 2569 : 			{{"ê³ ë¥´ê³ ë¥´","íë¼í¤í ì¤"},{"ë² ë£¨ë£¨","íë¼í¤í ì¤"},{"ë² ë¥´ê°","íë¼í¤í ì¤"},{"ë¸ë¥´ë¸ë¥´","íë¼í¤í ì¤"}},
; 2570 : 			{{"ë¸ë¥´ë¸ë¥´","íë¦¬í ì¤"},{"ë² ë¥´ê°","íë¦¬í ì¤"},{"ê³ ë¥´ê³ ë¥´","íë¦¬í ì¤"},{"ë² ë£¨ë£¨","íë¦¬í ì¤"}}
; 2571 : 		};
; 2572 : 		char tmmsg[512];
; 2573 : 		//sprintf(tmmsg, "íì¹ê°ë¥í¸ëì´ï¼%s", msg[nowSelCharGraNo][selCharColor[nowSelCharGraNo]][0]);
; 2574 : 		StockFontBuffer(10, 40, FONT_PRIO_FRONT, 2, tmmsg, 0);

  00279	6a 00		 push	 0
  0027b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _tmmsg$1[ebp]
  00281	50		 push	 eax
  00282	6a 02		 push	 2
  00284	6a 01		 push	 1
  00286	6a 28		 push	 40			; 00000028H
  00288	6a 0a		 push	 10			; 0000000aH
  0028a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 2575 : 		//sprintf(tmmsg, "íì¹ê°ë¥ëëê³¤ï¼%s", msg[nowSelCharGraNo][selCharColor[nowSelCharGraNo]][1]);
; 2576 : 		StockFontBuffer(10, 60, FONT_PRIO_FRONT, 2, tmmsg, 0);

  0028f	6a 00		 push	 0
  00291	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _tmmsg$1[ebp]
  00297	50		 push	 eax
  00298	6a 02		 push	 2
  0029a	6a 01		 push	 1
  0029c	6a 3c		 push	 60			; 0000003cH
  0029e	6a 0a		 push	 10			; 0000000aH
  002a0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002a5	83 c4 30	 add	 esp, 48			; 00000030H
$LN34@selCharGra:

; 2577 : 	}
; 2578 : 
; 2579 : 	if (selCharGraNoProcNo == 1)

  002a8	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?selCharGraNoProcNo@@3HA, 1
  002af	75 60		 jne	 SHORT $LN41@selCharGra

; 2580 : 	{
; 2581 : 		id = focusGraId(selCharCanselGraId, sizeof(selCharCanselGraId) / sizeof(int));

  002b1	6a 01		 push	 1
  002b3	68 00 00 00 00	 push	 OFFSET ?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA
  002b8	e8 00 00 00 00	 call	 ?focusGraId@@YAHPAHH@Z	; focusGraId

; 2582 : 		if (id == 0) {
; 2583 : 			ShowBottomLineString(FONT_PAL_WHITE, "ì´ì íë©´ì¼ë¡ ëìê°ê¸°ã");
; 2584 : 		}
; 2585 : 		else {
; 2586 : 			ShowBottomLineString(FONT_PAL_WHITE, "ìºë¦­í°ë¥¼ ì ííì¸ìã");
; 2587 : 		}
; 2588 : 		if (ResoMode == åè¾¨ç::mode800) {

  002bd	85 c0		 test	 eax, eax
  002bf	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BI@KIAMPJKG@?$MA?L?$MA?$PM?H?$KN?$LI?i?$MA?$LI?$LH?N?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?$KB?$KD@
  002c4	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0BG@OIHOGAMJ@?D?$LD?$LI?$KP?E?M?$LI?$KG?5?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d?$KB?$KD@
  002c9	0f 44 ca	 cmove	 ecx, edx
  002cc	51		 push	 ecx
  002cd	6a 00		 push	 0
  002cf	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  002d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  002d9	83 c4 10	 add	 esp, 16			; 00000010H
  002dc	6a 02		 push	 2
  002de	68 6e 71 00 00	 push	 29038			; 0000716eH
  002e3	6a 00		 push	 0
  002e5	83 f8 03	 cmp	 eax, 3
  002e8	75 07		 jne	 SHORT $LN38@selCharGra

; 2589 : 			selCharCanselGraId[0] = StockDispBuffer(64, 520, DISP_PRIO_BG, CG_CHR_MAKE_BACK_BTN, 2);

  002ea	68 08 02 00 00	 push	 520			; 00000208H

; 2590 : 		}

  002ef	eb 11		 jmp	 SHORT $LN70@selCharGra
$LN38@selCharGra:

; 2591 : 		else if (ResoMode == åè¾¨ç::mode1024) {

  002f1	83 f8 04	 cmp	 eax, 4
  002f4	75 07		 jne	 SHORT $LN40@selCharGra

; 2592 : 			selCharCanselGraId[0] = StockDispBuffer(64, 688, DISP_PRIO_BG, CG_CHR_MAKE_BACK_BTN, 2);

  002f6	68 b0 02 00 00	 push	 688			; 000002b0H

; 2593 : 		}

  002fb	eb 05		 jmp	 SHORT $LN70@selCharGra
$LN40@selCharGra:

; 2594 : 		else {
; 2595 : 			selCharCanselGraId[0] = StockDispBuffer(64, 400, DISP_PRIO_BG, CG_CHR_MAKE_BACK_BTN, 2);

  002fd	68 90 01 00 00	 push	 400			; 00000190H
$LN70@selCharGra:

; 2596 : 		}
; 2597 : 	}
; 2598 : 	if (ret == 0) {

  00302	6a 40		 push	 64			; 00000040H
  00304	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00309	83 c4 14	 add	 esp, 20			; 00000014H
  0030c	a3 00 00 00 00	 mov	 DWORD PTR ?selCharCanselGraId@?1??selCharGraNo@@YAHXZ@4PAHA, eax
$LN41@selCharGra:
  00311	85 db		 test	 ebx, ebx
  00313	75 4e		 jne	 SHORT $LN46@selCharGra

; 2599 : 		if (ResoMode == åè¾¨ç::mode800) {

  00315	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  0031a	53		 push	 ebx
  0031b	83 f8 03	 cmp	 eax, 3
  0031e	75 12		 jne	 SHORT $LN43@selCharGra

; 2600 : 			StockDispBuffer(400, 300, DISP_PRIO_BG, IMAGE_SetPlay_2, 0);

  00320	68 2e a0 00 00	 push	 41006			; 0000a02eH
  00325	53		 push	 ebx
  00326	68 2c 01 00 00	 push	 300			; 0000012cH
  0032b	68 90 01 00 00	 push	 400			; 00000190H

; 2601 : 		}

  00330	eb 29		 jmp	 SHORT $LN71@selCharGra
$LN43@selCharGra:

; 2602 : 		else if (ResoMode == åè¾¨ç::mode1024) {

  00332	83 f8 04	 cmp	 eax, 4
  00335	75 13		 jne	 SHORT $LN45@selCharGra

; 2603 : 			StockDispBuffer(512, 384, DISP_PRIO_BG, IMAGE_SetPlay_3, 0);

  00337	68 16 a4 00 00	 push	 42006			; 0000a416H
  0033c	6a 00		 push	 0
  0033e	68 80 01 00 00	 push	 384			; 00000180H
  00343	68 00 02 00 00	 push	 512			; 00000200H

; 2604 : 		}

  00348	eb 11		 jmp	 SHORT $LN71@selCharGra
$LN45@selCharGra:

; 2605 : 		else {
; 2606 : 			StockDispBuffer(320, 240, DISP_PRIO_BG, IMAGE_SetPlay_1, 0);

  0034a	68 46 9c 00 00	 push	 40006			; 00009c46H
  0034f	6a 00		 push	 0
  00351	68 f0 00 00 00	 push	 240			; 000000f0H
  00356	68 40 01 00 00	 push	 320			; 00000140H
$LN71@selCharGra:

; 2607 : 		}
; 2608 : 	}
; 2609 : 
; 2610 : 	RunAction();

  0035b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00360	83 c4 14	 add	 esp, 20			; 00000014H
$LN46@selCharGra:
  00363	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 2611 : 	StockTaskDispBuffer();

  00368	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 2612 : 
; 2613 : 	return ret;
; 2614 : }

  0036d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00370	8b c3		 mov	 eax, ebx
  00372	5f		 pop	 edi
  00373	5e		 pop	 esi
  00374	33 cd		 xor	 ecx, ebp
  00376	5b		 pop	 ebx
  00377	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0037c	8b e5		 mov	 esp, ebp
  0037e	5d		 pop	 ebp
  0037f	c3		 ret	 0
?selCharGraNo@@YAHXZ ENDP				; selCharGraNo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSelCharGraNo2@@YAXXZ
_TEXT	SEGMENT
?initSelCharGraNo2@@YAXXZ PROC				; initSelCharGraNo2, COMDAT

; 2423 : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2424 : 	int i;
; 2425 : 
; 2426 : 	selCharGraNoProcNo = 0;

  00002	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 0

; 2427 : 	nowSelCharMouthNo = 0;

  0000c	bf 04 00 00 00	 mov	 edi, OFFSET ?selectGraLocate@@3PAY01HA+4
  00011	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, 0
  0001b	33 f6		 xor	 esi, esi

; 2428 : 	nowSelCharEyeNo = 0;

  0001d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelCharEyeNo@@3HA, 0

; 2429 : 	nowSelCharGraNo = -1;

  00027	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?nowSelCharGraNo@@3HA, -1
$LL4@initSelCha:

; 2431 : 	{
; 2432 : 		if (selectGraNoTbl[i] < 0)

  00031	83 be 00 00 00
	00 00		 cmp	 DWORD PTR ?selectGraNoTbl@@3PAHA[esi], 0
  00038	7d 0c		 jge	 SHORT $LN5@initSelCha

; 2433 : 		{
; 2434 : 			ptActSelChar[i] = NULL;

  0003a	c7 86 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi], 0

; 2435 : 			continue;

  00044	eb 49		 jmp	 SHORT $LN2@initSelCha
$LN5@initSelCha:

; 2436 : 		}
; 2437 : 
; 2438 : 		ptActSelChar[i] = GetAction(PRIO_CHR, 0);

  00046	6a 00		 push	 0
  00048	6a 01		 push	 1
  0004a	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  0004f	8b d0		 mov	 edx, eax
  00051	83 c4 08	 add	 esp, 8
  00054	89 96 00 00 00
	00		 mov	 DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi], edx

; 2439 : 		if (ptActSelChar[i] != NULL)

  0005a	85 d2		 test	 edx, edx
  0005c	74 31		 je	 SHORT $LN2@initSelCha

; 2440 : 		{
; 2441 : 			ptActSelChar[i]->anim_chr_no = selectGraNoTbl[i];

  0005e	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?selectGraNoTbl@@3PAHA[esi]
  00064	89 8a 44 01 00
	00		 mov	 DWORD PTR [edx+324], ecx

; 2442 : 			ptActSelChar[i]->anim_no = ANIM_STAND;

  0006a	c7 82 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [edx+332], 3

; 2443 : 			ptActSelChar[i]->dispPrio = DISP_PRIO_CHAR;

  00074	c6 42 15 0a	 mov	 BYTE PTR [edx+21], 10	; 0000000aH

; 2444 : 			ptActSelChar[i]->x = selectGraLocate[i][0];

  00078	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
  0007b	89 4a 18	 mov	 DWORD PTR [edx+24], ecx

; 2445 : 			ptActSelChar[i]->y = selectGraLocate[i][1];

  0007e	8b 07		 mov	 eax, DWORD PTR [edi]
  00080	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 2446 : 			ptActSelChar[i]->anim_ang = selCharDir[i];

  00083	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?selCharDir@@3PAHA[esi]
  00089	89 82 54 01 00
	00		 mov	 DWORD PTR [edx+340], eax
$LN2@initSelCha:

; 2430 : 	for (i = 0; i < MaxSelectChar; i++)

  0008f	83 c7 08	 add	 edi, 8
  00092	83 c6 04	 add	 esi, 4
  00095	81 ff 64 00 00
	00		 cmp	 edi, OFFSET ?selectGraLocate@@3PAY01HA+100
  0009b	7c 94		 jl	 SHORT $LL4@initSelCha

; 2447 : 		}
; 2448 : 	}
; 2449 : }

  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	c3		 ret	 0
?initSelCharGraNo2@@YAXXZ ENDP				; initSelCharGraNo2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSelCharGraNo@@YAXXZ
_TEXT	SEGMENT
?initSelCharGraNo@@YAXXZ PROC				; initSelCharGraNo, COMDAT

; 2386 : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 2387 : 	int i;
; 2388 : 
; 2389 : 	selCharGraNoProcNo = 0;

  00003	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selCharGraNoProcNo@@3HA, 0
  0000d	56		 push	 esi
  0000e	57		 push	 edi

; 2390 : 	nowSelCharGraNo = -1;

  0000f	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?nowSelCharGraNo@@3HA, -1

; 2391 : 	nowSelCharMouthNo = 0;
; 2392 : 	nowSelCharEyeNo = 0;
; 2393 : 
; 2394 : 	for (i = 0; i < MaxSelectChar; i++)
; 2395 : 	{
; 2396 : 		selCharColor[i] = 0;

  00019	bf 04 00 00 00	 mov	 edi, OFFSET ?selectGraLocate@@3PAY01HA+4
  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelCharMouthNo@@3HA, 0
  00028	33 f6		 xor	 esi, esi
  0002a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nowSelCharEyeNo@@3HA, 0
  00034	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?selCharColor@@3PAHA, xmm0
  0003b	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?selCharColor@@3PAHA+16, xmm0
  00042	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?selCharColor@@3PAHA+32, xmm0
  00049	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?selCharDir@@3PAHA, xmm0
  00050	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?selCharDir@@3PAHA+16, xmm0
  00057	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?selCharDir@@3PAHA+32, xmm0
  0005e	66 90		 npad	 2
$LL7@initSelCha:

; 2401 : 	{
; 2402 : 		if (selectGraNoTbl[i] < 0)

  00060	83 be 00 00 00
	00 00		 cmp	 DWORD PTR ?selectGraNoTbl@@3PAHA[esi], 0
  00067	7d 0c		 jge	 SHORT $LN8@initSelCha

; 2403 : 		{
; 2404 : 			ptActSelChar[i] = NULL;

  00069	c7 86 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi], 0

; 2405 : 			continue;

  00073	eb 49		 jmp	 SHORT $LN5@initSelCha
$LN8@initSelCha:

; 2406 : 		}
; 2407 : 
; 2408 : 		ptActSelChar[i] = GetAction(PRIO_CHR, 0);

  00075	6a 00		 push	 0
  00077	6a 01		 push	 1
  00079	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  0007e	8b d0		 mov	 edx, eax
  00080	83 c4 08	 add	 esp, 8
  00083	89 96 00 00 00
	00		 mov	 DWORD PTR ?ptActSelChar@@3PAPAUaction@@A[esi], edx

; 2409 : 		if (ptActSelChar[i] != NULL)

  00089	85 d2		 test	 edx, edx
  0008b	74 31		 je	 SHORT $LN5@initSelCha

; 2410 : 		{
; 2411 : 			ptActSelChar[i]->anim_chr_no = selectGraNoTbl[i];

  0008d	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?selectGraNoTbl@@3PAHA[esi]
  00093	89 8a 44 01 00
	00		 mov	 DWORD PTR [edx+324], ecx

; 2412 : 			ptActSelChar[i]->anim_no = ANIM_STAND;

  00099	c7 82 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [edx+332], 3

; 2413 : 			ptActSelChar[i]->dispPrio = DISP_PRIO_CHAR;

  000a3	c6 42 15 0a	 mov	 BYTE PTR [edx+21], 10	; 0000000aH

; 2414 : 			ptActSelChar[i]->x = selectGraLocate[i][0];

  000a7	8b 4f fc	 mov	 ecx, DWORD PTR [edi-4]
  000aa	89 4a 18	 mov	 DWORD PTR [edx+24], ecx

; 2415 : 			ptActSelChar[i]->y = selectGraLocate[i][1];

  000ad	8b 07		 mov	 eax, DWORD PTR [edi]
  000af	89 42 1c	 mov	 DWORD PTR [edx+28], eax

; 2416 : 			ptActSelChar[i]->anim_ang = selCharDir[i];

  000b2	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?selCharDir@@3PAHA[esi]
  000b8	89 82 54 01 00
	00		 mov	 DWORD PTR [edx+340], eax
$LN5@initSelCha:

; 2397 : 		selCharDir[i] = 0;
; 2398 : 	}
; 2399 : 
; 2400 : 	for (i = 0; i < MaxSelectChar; i++)

  000be	83 c7 08	 add	 edi, 8
  000c1	83 c6 04	 add	 esi, 4
  000c4	81 ff 64 00 00
	00		 cmp	 edi, OFFSET ?selectGraLocate@@3PAY01HA+100
  000ca	7c 94		 jl	 SHORT $LL7@initSelCha

; 2417 : 		}
; 2418 : 	}
; 2419 : 
; 2420 : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	c3		 ret	 0
?initSelCharGraNo@@YAXXZ ENDP				; initSelCharGraNo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initMakeCharacter@@YAXXZ
_TEXT	SEGMENT
?initMakeCharacter@@YAXXZ PROC				; initMakeCharacter, COMDAT

; 2242 : }

  00000	c2 00 00	 ret	 0
?initMakeCharacter@@YAXXZ ENDP				; initMakeCharacter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT ??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ PROC		; sprintf_s<128>, COMDAT

; 1840 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	68 80 00 00 00	 push	 128			; 00000080H
  00011	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	ff 30		 push	 DWORD PTR [eax]
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1496 :     }
; 1497 :     #endif
; 1498 : 
; 1499 :     #if __STDC_WANT_SECURE_LIB__
; 1500 : 
; 1501 :         _Success_(return >= 0)
; 1502 :         _Check_return_opt_
; 1503 :         _CRT_STDIO_INLINE int __CRTDECL vsprintf_s(
; 1504 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1505 :             _In_                                          size_t      const _BufferCount,
; 1506 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1507 :                                                           va_list           _ArgList
; 1508 :             )
; 1509 :     #if defined _NO_CRT_STDIO_INLINE
; 1510 :     ;
; 1511 :     #else
; 1512 :         {
; 1513 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1514 :         }
; 1515 :     #endif
; 1516 : 
; 1517 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
; 1518 :             _Success_(return >= 0)
; 1519 :             int, vsprintf_s,
; 1520 :             _Always_(_Post_z_)            char,        _Buffer,
; 1521 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1522 :                                           va_list,     _ArgList
; 1523 :             )
; 1524 : 
; 1525 :     #endif
; 1526 : 
; 1527 :     _Success_(return >= 0)
; 1528 :     _Check_return_opt_
; 1529 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p_l(
; 1530 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1531 :         _In_                                          size_t      const _BufferCount,
; 1532 :         _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
; 1533 :         _In_opt_                                      _locale_t   const _Locale,
; 1534 :                                                       va_list           _ArgList
; 1535 :         )
; 1536 :     #if defined _NO_CRT_STDIO_INLINE
; 1537 :     ;
; 1538 :     #else
; 1539 :     {
; 1540 :         int const _Result = __stdio_common_vsprintf_p(
; 1541 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1542 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1543 : 
; 1544 :         return _Result < 0 ? -1 : _Result;
; 1545 :     }
; 1546 :     #endif
; 1547 : 
; 1548 :     _Success_(return >= 0)
; 1549 :     _Check_return_opt_
; 1550 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p(
; 1551 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1552 :         _In_                                          size_t      const _BufferCount,
; 1553 :         _In_z_ _Printf_format_string_                 char const* const _Format,
; 1554 :                                                       va_list           _ArgList
; 1555 :         )
; 1556 :     #if defined _NO_CRT_STDIO_INLINE
; 1557 :     ;
; 1558 :     #else
; 1559 :     {
; 1560 :         return _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1561 :     }
; 1562 :     #endif
; 1563 : 
; 1564 :     _Success_(return >= 0)
; 1565 :     _Check_return_opt_
; 1566 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s_l(
; 1567 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1568 :         _In_                                              size_t      const _BufferCount,
; 1569 :         _In_                                              size_t      const _MaxCount,
; 1570 :         _In_z_ _Printf_format_string_params_(2)           char const* const _Format,
; 1571 :         _In_opt_                                          _locale_t   const _Locale,
; 1572 :                                                           va_list          _ArgList
; 1573 :         )
; 1574 :     #if defined _NO_CRT_STDIO_INLINE
; 1575 :     ;
; 1576 :     #else
; 1577 :     {
; 1578 :         int const _Result = __stdio_common_vsnprintf_s(
; 1579 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1580 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1581 : 
; 1582 :         return _Result < 0 ? -1 : _Result;
; 1583 :     }
; 1584 :     #endif
; 1585 : 
; 1586 :     _Success_(return >= 0)
; 1587 :     _Check_return_opt_
; 1588 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s(
; 1589 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1590 :         _In_                                              size_t      const _BufferCount,
; 1591 :         _In_                                              size_t      const _MaxCount,
; 1592 :         _In_z_ _Printf_format_string_                     char const* const _Format,
; 1593 :                                                           va_list           _ArgList
; 1594 :         )
; 1595 :     #if defined _NO_CRT_STDIO_INLINE
; 1596 :     ;
; 1597 :     #else
; 1598 :     {
; 1599 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1600 :     }
; 1601 :     #endif
; 1602 : 
; 1603 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1604 :         _Success_(return >= 0)
; 1605 :         int, _vsnprintf_s,
; 1606 :         _Always_(_Post_z_)            char,        _Buffer,
; 1607 :         _In_                          size_t,      _BufferCount,
; 1608 :         _In_z_ _Printf_format_string_ char const*, _Format,
; 1609 :                                       va_list,     _ArgList
; 1610 :         )
; 1611 : 
; 1612 :     #if __STDC_WANT_SECURE_LIB__
; 1613 : 
; 1614 :         _Success_(return >= 0)
; 1615 :         _Check_return_opt_
; 1616 :         _CRT_STDIO_INLINE int __CRTDECL vsnprintf_s(
; 1617 :             _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1618 :             _In_                                              size_t      const _BufferCount,
; 1619 :             _In_                                              size_t      const _MaxCount,
; 1620 :             _In_z_ _Printf_format_string_                     char const* const _Format,
; 1621 :                                                               va_list           _ArgList
; 1622 :             )
; 1623 :     #if defined _NO_CRT_STDIO_INLINE
; 1624 :     ;
; 1625 :     #else
; 1626 :         {
; 1627 :             return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1628 :         }
; 1629 :     #endif
; 1630 : 
; 1631 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1632 :             _Success_(return >= 0)
; 1633 :             int, vsnprintf_s,
; 1634 :             _Always_(_Post_z_)            char,        _Buffer,
; 1635 :             _In_                          size_t,      _BufferCount,
; 1636 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1637 :                                           va_list,     _ArgList
; 1638 :             )
; 1639 : 
; 1640 :     #endif
; 1641 : 
; 1642 :     _Check_return_opt_
; 1643 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_l(
; 1644 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1645 :         _In_opt_                                _locale_t   const _Locale,
; 1646 :                                                 va_list           _ArgList
; 1647 :         )
; 1648 :     #if defined _NO_CRT_STDIO_INLINE
; 1649 :     ;
; 1650 :     #else
; 1651 :     {
; 1652 :         int const _Result = __stdio_common_vsprintf(
; 1653 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1654 :             NULL, 0, _Format, _Locale, _ArgList);
; 1655 : 
; 1656 :         return _Result < 0 ? -1 : _Result;
; 1657 :     }
; 1658 :     #endif
; 1659 : 
; 1660 :     _Check_return_
; 1661 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf(
; 1662 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1663 :                                       va_list           _ArgList
; 1664 :         )
; 1665 :     #if defined _NO_CRT_STDIO_INLINE
; 1666 :     ;
; 1667 :     #else
; 1668 :     {
; 1669 :         return _vscprintf_l(_Format, NULL, _ArgList);
; 1670 :     }
; 1671 :     #endif
; 1672 : 
; 1673 :     _Check_return_opt_
; 1674 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p_l(
; 1675 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1676 :         _In_opt_                                _locale_t   const _Locale,
; 1677 :                                                 va_list           _ArgList
; 1678 :         )
; 1679 :     #if defined _NO_CRT_STDIO_INLINE
; 1680 :     ;
; 1681 :     #else
; 1682 :     {
; 1683 :         int const _Result = __stdio_common_vsprintf_p(
; 1684 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1685 :             NULL, 0, _Format, _Locale, _ArgList);
; 1686 : 
; 1687 :         return _Result < 0 ? -1 : _Result;
; 1688 :     }
; 1689 :     #endif
; 1690 : 
; 1691 :     _Check_return_
; 1692 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p(
; 1693 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1694 :                                       va_list           _ArgList
; 1695 :         )
; 1696 :     #if defined _NO_CRT_STDIO_INLINE
; 1697 :     ;
; 1698 :     #else
; 1699 :     {
; 1700 :         return _vscprintf_p_l(_Format, NULL, _ArgList);
; 1701 :     }
; 1702 :     #endif
; 1703 : 
; 1704 :     _Check_return_opt_
; 1705 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c_l(
; 1706 :         _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
; 1707 :         _In_                                    size_t      const _BufferCount,
; 1708 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1709 :         _In_opt_                                _locale_t   const _Locale,
; 1710 :                                                 va_list           _ArgList
; 1711 :         )
; 1712 :     #if defined _NO_CRT_STDIO_INLINE
; 1713 :     ;
; 1714 :     #else
; 1715 :     {
; 1716 :         int const _Result = __stdio_common_vsprintf(
; 1717 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1718 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1719 : 
; 1720 :         return _Result < 0 ? -1 : _Result;
; 1721 :     }
; 1722 :     #endif
; 1723 : 
; 1724 :     _Success_(return >= 0)
; 1725 :     _Check_return_opt_
; 1726 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c(
; 1727 :         _Out_writes_opt_(_BufferCount) char*       const _Buffer,
; 1728 :         _In_                           size_t      const _BufferCount,
; 1729 :         _In_z_ _Printf_format_string_  char const* const _Format,
; 1730 :                                        va_list           _ArgList
; 1731 :         )
; 1732 :     #if defined _NO_CRT_STDIO_INLINE
; 1733 :     ;
; 1734 :     #else
; 1735 :     {
; 1736 :         return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1737 :     }
; 1738 :     #endif
; 1739 : 
; 1740 :     _Success_(return >= 0)
; 1741 :     _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sprintf_s_l)
; 1742 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_l(
; 1743 :         _Pre_notnull_ _Always_(_Post_z_)        char*       const _Buffer,
; 1744 :         _In_z_ _Printf_format_string_params_(0) char const* const _Format,
; 1745 :         _In_opt_                                _locale_t   const _Locale,
; 1746 :         ...)
; 1747 :     #if defined _NO_CRT_STDIO_INLINE
; 1748 :     ;
; 1749 :     #else
; 1750 :     {
; 1751 :         int _Result;
; 1752 :         va_list _ArgList;
; 1753 :         __crt_va_start(_ArgList, _Locale);
; 1754 : 
; 1755 :         _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
; 1756 : 
; 1757 :         __crt_va_end(_ArgList);
; 1758 :         return _Result;
; 1759 :     }
; 1760 :     #endif
; 1761 : 
; 1762 :     _Success_(return >= 0)
; 1763 :     _Check_return_opt_
; 1764 :     _CRT_STDIO_INLINE int __CRTDECL sprintf(
; 1765 :         _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
; 1766 :         _In_z_ _Printf_format_string_    char const* const _Format,
; 1767 :         ...)
; 1768 :     #if defined _NO_CRT_STDIO_INLINE
; 1769 :     ;
; 1770 :     #else
; 1771 :     {
; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }
; 1781 :     #endif
; 1782 : 
; 1783 :     __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(
; 1784 :         _Success_(return >= 0)
; 1785 :         int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, sprintf, vsprintf,
; 1786 :         _Pre_notnull_ _Always_(_Post_z_), char,        _Buffer,
; 1787 :         _In_z_ _Printf_format_string_     char const*, _Format
; 1788 :         )
; 1789 : 
; 1790 :     _Success_(return >= 0)
; 1791 :     _Check_return_opt_
; 1792 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_s_l(
; 1793 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1794 :         _In_                                          size_t      const _BufferCount,
; 1795 :         _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
; 1796 :         _In_opt_                                      _locale_t   const _Locale,
; 1797 :         ...)
; 1798 :     #if defined _NO_CRT_STDIO_INLINE
; 1799 :     ;
; 1800 :     #else
; 1801 :     {
; 1802 :         int _Result;
; 1803 :         va_list _ArgList;
; 1804 :         __crt_va_start(_ArgList, _Locale);
; 1805 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1806 :         __crt_va_end(_ArgList);
; 1807 :         return _Result;
; 1808 :     }
; 1809 :     #endif
; 1810 : 
; 1811 :     #if __STDC_WANT_SECURE_LIB__
; 1812 : 
; 1813 :         _Success_(return >= 0)
; 1814 :         _Check_return_opt_
; 1815 :         _CRT_STDIO_INLINE int __CRTDECL sprintf_s(
; 1816 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1817 :             _In_                                          size_t      const _BufferCount,
; 1818 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1819 :             ...)
; 1820 :     #if defined _NO_CRT_STDIO_INLINE
; 1821 :     ;
; 1822 :     #else
; 1823 :         {
; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);
; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1828 :             __crt_va_end(_ArgList);
; 1829 :             return _Result;
; 1830 :         }
; 1831 :     #endif
; 1832 : 
; 1833 :     #endif
; 1834 : 
; 1835 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ ENDP		; sprintf_s<128>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?BIG5ToGB2312@@YAPADPBD@Z
_TEXT	SEGMENT
_szUnicodeBuff$1$ = -4					; size = 4
_szBIG5String$ = 8					; size = 4
?BIG5ToGB2312@@YAPADPBD@Z PROC				; BIG5ToGB2312, COMDAT

; 194  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi

; 195  : 	LCID lcid = MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_SIMPLIFIED), SORT_CHINESE_PRC);
; 196  : 	wchar_t* szUnicodeBuff = BIG5ToUnicode(szBIG5String);

  00006	ff 75 08	 push	 DWORD PTR _szBIG5String$[ebp]
  00009	e8 00 00 00 00	 call	 ?BIG5ToUnicode@@YAPA_WPBD@Z ; BIG5ToUnicode

; 197  : 	char* szGB2312Buff = UnicodeToGB2312(szUnicodeBuff);

  0000e	50		 push	 eax
  0000f	89 45 fc	 mov	 DWORD PTR _szUnicodeBuff$1$[ebp], eax
  00012	e8 00 00 00 00	 call	 ?UnicodeToGB2312@@YAPADPB_W@Z ; UnicodeToGB2312
  00017	83 c4 08	 add	 esp, 8
  0001a	8b d8		 mov	 ebx, eax

; 198  : 	int nLength = LCMapString(lcid, LCMAP_SIMPLIFIED_CHINESE, szGB2312Buff, -1, NULL, 0);

  0001c	6a 00		 push	 0
  0001e	6a 00		 push	 0
  00020	6a ff		 push	 -1
  00022	53		 push	 ebx
  00023	68 00 00 00 02	 push	 33554432		; 02000000H
  00028	68 04 08 02 00	 push	 133124			; 00020804H
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LCMapStringA@24
  00033	8b f0		 mov	 esi, eax

; 199  : 	char* pBuffer = BigpBuffer;
; 200  : 	LCMapString(0x0804, LCMAP_SIMPLIFIED_CHINESE, szGB2312Buff, -1, pBuffer, nLength);

  00035	56		 push	 esi
  00036	68 00 00 00 00	 push	 OFFSET ?BigpBuffer@@3PADA ; BigpBuffer
  0003b	6a ff		 push	 -1
  0003d	53		 push	 ebx
  0003e	68 00 00 00 02	 push	 33554432		; 02000000H
  00043	68 04 08 00 00	 push	 2052			; 00000804H
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LCMapStringA@24

; 201  : 	pBuffer[nLength] = 0;
; 202  : 	delete[] szUnicodeBuff;

  0004e	ff 75 fc	 push	 DWORD PTR _szUnicodeBuff$1$[ebp]
  00051	c6 86 00 00 00
	00 00		 mov	 BYTE PTR ?BigpBuffer@@3PADA[esi], 0
  00058	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 203  : 	delete[] szGB2312Buff;

  0005d	53		 push	 ebx
  0005e	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00063	83 c4 08	 add	 esp, 8

; 204  : 	return pBuffer;

  00066	b8 00 00 00 00	 mov	 eax, OFFSET ?BigpBuffer@@3PADA ; BigpBuffer
  0006b	5e		 pop	 esi
  0006c	5b		 pop	 ebx

; 205  : }

  0006d	8b e5		 mov	 esp, ebp
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?BIG5ToGB2312@@YAPADPBD@Z ENDP				; BIG5ToGB2312
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?UnicodeToGB2312@@YAPADPB_W@Z
_TEXT	SEGMENT
_szUnicodeString$ = 8					; size = 4
?UnicodeToGB2312@@YAPADPB_W@Z PROC			; UnicodeToGB2312, COMDAT

; 184  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 185  : 	UINT nCodePage = 936; //GB2312
; 186  : 	int nLength = WideCharToMultiByte(nCodePage, 0, szUnicodeString, -1, NULL, 0, NULL, NULL);

  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	6a ff		 push	 -1
  0000f	ff 75 08	 push	 DWORD PTR _szUnicodeString$[ebp]
  00012	6a 00		 push	 0
  00014	68 a8 03 00 00	 push	 936			; 000003a8H
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0001f	8b f8		 mov	 edi, eax

; 187  : 	char* pBuffer = new char[nLength + 1];

  00021	68 bb 00 00 00	 push	 187			; 000000bbH
  00026	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@
  0002b	6a 01		 push	 1
  0002d	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
  00030	51		 push	 ecx
  00031	e8 00 00 00 00	 call	 ??_U@YAPAXIHPBDH@Z	; operator new[]
  00036	83 c4 10	 add	 esp, 16			; 00000010H
  00039	8b f0		 mov	 esi, eax

; 188  : 	WideCharToMultiByte(nCodePage, 0, szUnicodeString, -1, pBuffer, nLength, NULL, NULL);

  0003b	6a 00		 push	 0
  0003d	6a 00		 push	 0
  0003f	57		 push	 edi
  00040	56		 push	 esi
  00041	6a ff		 push	 -1
  00043	ff 75 08	 push	 DWORD PTR _szUnicodeString$[ebp]
  00046	6a 00		 push	 0
  00048	68 a8 03 00 00	 push	 936			; 000003a8H
  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 189  : 	pBuffer[nLength] = 0;

  00053	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0

; 190  : 	return pBuffer;

  00057	8b c6		 mov	 eax, esi
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi

; 191  : }

  0005b	5d		 pop	 ebp
  0005c	c3		 ret	 0
?UnicodeToGB2312@@YAPADPB_W@Z ENDP			; UnicodeToGB2312
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?BIG5ToUnicode@@YAPA_WPBD@Z
_TEXT	SEGMENT
_szBIG5String$ = 8					; size = 4
?BIG5ToUnicode@@YAPA_WPBD@Z PROC			; BIG5ToUnicode, COMDAT

; 172  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 173  : 	UINT nCodePage = 950; //BIG5
; 174  : 	int nLength = MultiByteToWideChar(nCodePage, 0, szBIG5String, -1, NULL, 0);

  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	ff 75 08	 push	 DWORD PTR _szBIG5String$[ebp]
  0000e	6a 00		 push	 0
  00010	68 b6 03 00 00	 push	 950			; 000003b6H
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0001b	8b d8		 mov	 ebx, eax

; 175  : 	wchar_t* pBuffer = new wchar_t[nLength + 1];

  0001d	33 c9		 xor	 ecx, ecx
  0001f	ba 02 00 00 00	 mov	 edx, 2
  00024	68 af 00 00 00	 push	 175			; 000000afH
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@
  0002e	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00031	f7 e2		 mul	 edx
  00033	6a 01		 push	 1
  00035	0f 90 c1	 seto	 cl
  00038	f7 d9		 neg	 ecx
  0003a	0b c8		 or	 ecx, eax
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ??_U@YAPAXIHPBDH@Z	; operator new[]
  00042	83 c4 10	 add	 esp, 16			; 00000010H
  00045	8b f0		 mov	 esi, eax

; 176  : 	MultiByteToWideChar(nCodePage, 0, szBIG5String, -1, pBuffer, nLength);

  00047	53		 push	 ebx
  00048	56		 push	 esi
  00049	6a ff		 push	 -1
  0004b	ff 75 08	 push	 DWORD PTR _szBIG5String$[ebp]
  0004e	6a 00		 push	 0
  00050	68 b6 03 00 00	 push	 950			; 000003b6H
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24

; 177  : 	pBuffer[nLength] = 0;

  0005b	33 c0		 xor	 eax, eax
  0005d	66 89 04 5e	 mov	 WORD PTR [esi+ebx*2], ax

; 178  : 	return pBuffer;

  00061	8b c6		 mov	 eax, esi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx

; 179  : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?BIG5ToUnicode@@YAPA_WPBD@Z ENDP			; BIG5ToUnicode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?GB2312ToBIG5@@YAPADPBD@Z
_TEXT	SEGMENT
_szGBString$ = 8					; size = 4
?GB2312ToBIG5@@YAPADPBD@Z PROC				; GB2312ToBIG5, COMDAT

; 158  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 159  : 	LCID lcid = MAKELCID(MAKELANGID(LANG_CHINESE, SUBLANG_CHINESE_SIMPLIFIED), SORT_CHINESE_PRC);
; 160  : 	int nLength = LCMapString(lcid, LCMAP_TRADITIONAL_CHINESE, szGBString, -1, NULL, 0);

  00006	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__LCMapStringA@24
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	6a ff		 push	 -1
  00012	ff 75 08	 push	 DWORD PTR _szGBString$[ebp]
  00015	68 00 00 00 04	 push	 67108864		; 04000000H
  0001a	68 04 08 02 00	 push	 133124			; 00020804H
  0001f	ff d7		 call	 edi
  00021	8b f0		 mov	 esi, eax

; 161  : 	char* pBuffer = new char[nLength + 1];

  00023	68 a1 00 00 00	 push	 161			; 000000a1H
  00028	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@
  0002d	6a 01		 push	 1
  0002f	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ??_U@YAPAXIHPBDH@Z	; operator new[]
  00038	83 c4 10	 add	 esp, 16			; 00000010H
  0003b	8b d8		 mov	 ebx, eax

; 162  : 	LCMapString(lcid, LCMAP_TRADITIONAL_CHINESE, szGBString, -1, pBuffer, nLength);

  0003d	56		 push	 esi
  0003e	53		 push	 ebx
  0003f	6a ff		 push	 -1
  00041	ff 75 08	 push	 DWORD PTR _szGBString$[ebp]
  00044	68 00 00 00 04	 push	 67108864		; 04000000H
  00049	68 04 08 02 00	 push	 133124			; 00020804H
  0004e	ff d7		 call	 edi

; 163  : 	pBuffer[nLength] = 0;
; 164  : 	wchar_t* pUnicodeBuff = GB2312ToUnicode(pBuffer);

  00050	53		 push	 ebx
  00051	c6 04 33 00	 mov	 BYTE PTR [ebx+esi], 0
  00055	e8 00 00 00 00	 call	 ?GB2312ToUnicode@@YAPA_WPBD@Z ; GB2312ToUnicode
  0005a	8b f8		 mov	 edi, eax

; 165  : 	char* pBIG5Buff = UnicodeToBIG5(pUnicodeBuff);

  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ?UnicodeToBIG5@@YAPADPB_W@Z ; UnicodeToBIG5

; 166  : 	delete[] pBuffer;

  00062	53		 push	 ebx
  00063	8b f0		 mov	 esi, eax
  00065	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]

; 167  : 	delete[] pUnicodeBuff;

  0006a	57		 push	 edi
  0006b	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00070	83 c4 10	 add	 esp, 16			; 00000010H

; 168  : 	return pBIG5Buff;

  00073	8b c6		 mov	 eax, esi
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	5b		 pop	 ebx

; 169  : }

  00078	5d		 pop	 ebp
  00079	c3		 ret	 0
?GB2312ToBIG5@@YAPADPBD@Z ENDP				; GB2312ToBIG5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?UnicodeToBIG5@@YAPADPB_W@Z
_TEXT	SEGMENT
_szUnicodeString$ = 8					; size = 4
?UnicodeToBIG5@@YAPADPB_W@Z PROC			; UnicodeToBIG5, COMDAT

; 149  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 150  : 	UINT nCodePage = 950; //BIG5
; 151  : 	int nLength = WideCharToMultiByte(nCodePage, 0, szUnicodeString, -1, NULL, 0, NULL, NULL);

  00004	6a 00		 push	 0
  00006	6a 00		 push	 0
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR _szUnicodeString$[ebp]
  00011	6a 00		 push	 0
  00013	68 b6 03 00 00	 push	 950			; 000003b6H
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 152  : 	char* pBuffer = BigpBuffer;
; 153  : 	WideCharToMultiByte(nCodePage, 0, szUnicodeString, -1, pBuffer, nLength, NULL, NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	8b f0		 mov	 esi, eax
  00024	56		 push	 esi
  00025	68 00 00 00 00	 push	 OFFSET ?BigpBuffer@@3PADA ; BigpBuffer
  0002a	6a ff		 push	 -1
  0002c	ff 75 08	 push	 DWORD PTR _szUnicodeString$[ebp]
  0002f	6a 00		 push	 0
  00031	68 b6 03 00 00	 push	 950			; 000003b6H
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 154  : 	pBuffer[nLength] = 0;

  0003c	c6 86 00 00 00
	00 00		 mov	 BYTE PTR ?BigpBuffer@@3PADA[esi], 0

; 155  : 	return pBuffer;

  00043	b8 00 00 00 00	 mov	 eax, OFFSET ?BigpBuffer@@3PADA ; BigpBuffer
  00048	5e		 pop	 esi

; 156  : }

  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
?UnicodeToBIG5@@YAPADPB_W@Z ENDP			; UnicodeToBIG5
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?GB2312ToUnicode@@YAPA_WPBD@Z
_TEXT	SEGMENT
_szGBString$ = 8					; size = 4
?GB2312ToUnicode@@YAPA_WPBD@Z PROC			; GB2312ToUnicode, COMDAT

; 137  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 138  : 	UINT nCodePage = 936; //GB2312
; 139  : 	int nLength = MultiByteToWideChar(nCodePage, 0, szGBString, -1, NULL, 0);

  00005	6a 00		 push	 0
  00007	6a 00		 push	 0
  00009	6a ff		 push	 -1
  0000b	ff 75 08	 push	 DWORD PTR _szGBString$[ebp]
  0000e	6a 00		 push	 0
  00010	68 a8 03 00 00	 push	 936			; 000003a8H
  00015	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24
  0001b	8b d8		 mov	 ebx, eax

; 140  : 	wchar_t* pBuffer = new wchar_t[nLength + 1];

  0001d	33 c9		 xor	 ecx, ecx
  0001f	ba 02 00 00 00	 mov	 edx, 2
  00024	68 8c 00 00 00	 push	 140			; 0000008cH
  00029	68 00 00 00 00	 push	 OFFSET ??_C@_0DE@PEDMJHJH@?2VBOXSVR?2_stoneage?2repos?2ssm?9sa@
  0002e	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00031	f7 e2		 mul	 edx
  00033	6a 01		 push	 1
  00035	0f 90 c1	 seto	 cl
  00038	f7 d9		 neg	 ecx
  0003a	0b c8		 or	 ecx, eax
  0003c	51		 push	 ecx
  0003d	e8 00 00 00 00	 call	 ??_U@YAPAXIHPBDH@Z	; operator new[]
  00042	83 c4 10	 add	 esp, 16			; 00000010H
  00045	8b f0		 mov	 esi, eax

; 141  : 	MultiByteToWideChar(nCodePage, 0, szGBString, -1, pBuffer, nLength);

  00047	53		 push	 ebx
  00048	56		 push	 esi
  00049	6a ff		 push	 -1
  0004b	ff 75 08	 push	 DWORD PTR _szGBString$[ebp]
  0004e	6a 00		 push	 0
  00050	68 a8 03 00 00	 push	 936			; 000003a8H
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MultiByteToWideChar@24

; 142  : 	pBuffer[nLength] = 0;

  0005b	33 c0		 xor	 eax, eax
  0005d	66 89 04 5e	 mov	 WORD PTR [esi+ebx*2], ax

; 143  : 	return pBuffer;

  00061	8b c6		 mov	 eax, esi
  00063	5e		 pop	 esi
  00064	5b		 pop	 ebx

; 144  : }

  00065	5d		 pop	 ebp
  00066	c3		 ret	 0
?GB2312ToUnicode@@YAPA_WPBD@Z ENDP			; GB2312ToUnicode
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?CheckSpace@@YAXPAD@Z
_TEXT	SEGMENT
_temp$1$ = -4						; size = 4
_buf$ = 8						; size = 4
?CheckSpace@@YAXPAD@Z PROC				; CheckSpace, COMDAT

; 19091: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx

; 19092: 	int i, j;
; 19093: 	char* temp;
; 19094: 
; 19095: 	for (i = 0; i < (int)strlen(buf); i++)

  00005	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
  00008	33 d2		 xor	 edx, edx
  0000a	8b cb		 mov	 ecx, ebx
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL18@CheckSpace:
  00011	8a 01		 mov	 al, BYTE PTR [ecx]
  00013	41		 inc	 ecx
  00014	84 c0		 test	 al, al
  00016	75 f9		 jne	 SHORT $LL18@CheckSpace
  00018	2b ce		 sub	 ecx, esi
  0001a	85 c9		 test	 ecx, ecx
  0001c	7e 5f		 jle	 SHORT $LN3@CheckSpace
  0001e	66 90		 npad	 2
$LL4@CheckSpace:

; 19096: 	{
; 19097: 		if (*(buf + i) == 0x20)

  00020	80 3c 1a 20	 cmp	 BYTE PTR [edx+ebx], 32	; 00000020H
  00024	8d 3c 1a	 lea	 edi, DWORD PTR [edx+ebx]
  00027	75 3b		 jne	 SHORT $LN2@CheckSpace

; 19098: 		{
; 19099: 			temp = (buf + i);
; 19100: 			for (j = 0; j < (int)strlen(buf + i); j++)

  00029	8b cf		 mov	 ecx, edi
  0002b	89 7d fc	 mov	 DWORD PTR _temp$1$[ebp], edi
  0002e	33 d2		 xor	 edx, edx
  00030	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL19@CheckSpace:
  00033	8a 01		 mov	 al, BYTE PTR [ecx]
  00035	41		 inc	 ecx
  00036	84 c0		 test	 al, al
  00038	75 f9		 jne	 SHORT $LL19@CheckSpace
  0003a	2b ce		 sub	 ecx, esi
  0003c	85 c9		 test	 ecx, ecx
  0003e	7e 22		 jle	 SHORT $LN6@CheckSpace
  00040	8b 5d fc	 mov	 ebx, DWORD PTR _temp$1$[ebp]
$LL7@CheckSpace:

; 19101: 			{
; 19102: 				*temp = *(temp + 1);

  00043	8a 43 01	 mov	 al, BYTE PTR [ebx+1]

; 19103: 				temp++;

  00046	8d 5b 01	 lea	 ebx, DWORD PTR [ebx+1]
  00049	88 43 ff	 mov	 BYTE PTR [ebx-1], al
  0004c	42		 inc	 edx
  0004d	8b c7		 mov	 eax, edi
  0004f	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL20@CheckSpace:

; 19098: 		{
; 19099: 			temp = (buf + i);
; 19100: 			for (j = 0; j < (int)strlen(buf + i); j++)

  00052	8a 08		 mov	 cl, BYTE PTR [eax]
  00054	40		 inc	 eax
  00055	84 c9		 test	 cl, cl
  00057	75 f9		 jne	 SHORT $LL20@CheckSpace
  00059	2b c6		 sub	 eax, esi
  0005b	3b d0		 cmp	 edx, eax
  0005d	7c e4		 jl	 SHORT $LL7@CheckSpace
  0005f	8b 5d 08	 mov	 ebx, DWORD PTR _buf$[ebp]
$LN6@CheckSpace:

; 19104: 			}
; 19105: 			i = 0;

  00062	33 d2		 xor	 edx, edx
$LN2@CheckSpace:

; 19092: 	int i, j;
; 19093: 	char* temp;
; 19094: 
; 19095: 	for (i = 0; i < (int)strlen(buf); i++)

  00064	8b cb		 mov	 ecx, ebx
  00066	42		 inc	 edx
  00067	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0006a	66 0f 1f 44 00
	00		 npad	 6
$LL21@CheckSpace:
  00070	8a 01		 mov	 al, BYTE PTR [ecx]
  00072	41		 inc	 ecx
  00073	84 c0		 test	 al, al
  00075	75 f9		 jne	 SHORT $LL21@CheckSpace
  00077	2b ce		 sub	 ecx, esi
  00079	3b d1		 cmp	 edx, ecx
  0007b	7c a3		 jl	 SHORT $LL4@CheckSpace
$LN3@CheckSpace:

; 19106: 		}
; 19107: 	}
; 19108: 	strcat(buf, "\0");

  0007d	4b		 dec	 ebx
  0007e	66 90		 npad	 2
$LL22@CheckSpace:
  00080	8a 43 01	 mov	 al, BYTE PTR [ebx+1]
  00083	43		 inc	 ebx
  00084	84 c0		 test	 al, al
  00086	75 f8		 jne	 SHORT $LL22@CheckSpace
  00088	a0 00 00 00 00	 mov	 al, BYTE PTR ??_C@_01LOCGONAA@?$AA@
  0008d	8b fb		 mov	 edi, ebx
  0008f	88 07		 mov	 BYTE PTR [edi], al
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx

; 19109: }

  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?CheckSpace@@YAXPAD@Z ENDP				; CheckSpace
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?CheckNumber@@YAXPADH@Z
_TEXT	SEGMENT
_buf$ = 8						; size = 4
_num$ = 12						; size = 4
?CheckNumber@@YAXPADH@Z PROC				; CheckNumber, COMDAT

; 19078: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 19079: 	int i;
; 19080: 
; 19081: 	for (i = 0; i < (int)strlen(buf); i++) if (*(buf + i) < '0' || *(buf + i) > '9') *(buf + i) = '0';

  00005	8b 7d 08	 mov	 edi, DWORD PTR _buf$[ebp]
  00008	33 d2		 xor	 edx, edx
  0000a	8b cf		 mov	 ecx, edi
  0000c	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0000f	90		 npad	 1
$LL17@CheckNumbe:
  00010	8a 01		 mov	 al, BYTE PTR [ecx]
  00012	41		 inc	 ecx
  00013	84 c0		 test	 al, al
  00015	75 f9		 jne	 SHORT $LL17@CheckNumbe
  00017	2b ce		 sub	 ecx, esi
  00019	85 c9		 test	 ecx, ecx
  0001b	7e 25		 jle	 SHORT $LN3@CheckNumbe
  0001d	0f 1f 00	 npad	 3
$LL4@CheckNumbe:
  00020	8a 04 3a	 mov	 al, BYTE PTR [edx+edi]
  00023	3c 30		 cmp	 al, 48			; 00000030H
  00025	7c 04		 jl	 SHORT $LN6@CheckNumbe
  00027	3c 39		 cmp	 al, 57			; 00000039H
  00029	7e 04		 jle	 SHORT $LN2@CheckNumbe
$LN6@CheckNumbe:
  0002b	c6 04 3a 30	 mov	 BYTE PTR [edx+edi], 48	; 00000030H
$LN2@CheckNumbe:
  0002f	8b c7		 mov	 eax, edi
  00031	42		 inc	 edx
  00032	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$LL18@CheckNumbe:
  00035	8a 08		 mov	 cl, BYTE PTR [eax]
  00037	40		 inc	 eax
  00038	84 c9		 test	 cl, cl
  0003a	75 f9		 jne	 SHORT $LL18@CheckNumbe
  0003c	2b c6		 sub	 eax, esi
  0003e	3b d0		 cmp	 edx, eax
  00040	7c de		 jl	 SHORT $LL4@CheckNumbe
$LN3@CheckNumbe:

; 19082: 	if (num > -1) {

  00042	8b 75 0c	 mov	 esi, DWORD PTR _num$[ebp]
  00045	57		 push	 edi
  00046	e8 00 00 00 00	 call	 _atoi
  0004b	83 c4 04	 add	 esp, 4
  0004e	83 fe ff	 cmp	 esi, -1
  00051	7e 17		 jle	 SHORT $LN7@CheckNumbe

; 19083: 		if (atoi(buf) > num) sprintf(buf, "%d", num);

  00053	3b c6		 cmp	 eax, esi
  00055	7e 32		 jle	 SHORT $LN10@CheckNumbe
  00057	56		 push	 esi

; 19086: }

  00058	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0005d	57		 push	 edi
  0005e	e8 00 00 00 00	 call	 _sprintf
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5d		 pop	 ebp
  00069	c3		 ret	 0
$LN7@CheckNumbe:

; 19084: 	}
; 19085: 	else if (atoi(buf) > CHAR_getMaxHaveGold()) sprintf(buf, "%d", CHAR_getMaxHaveGold());

  0006a	8b f0		 mov	 esi, eax
  0006c	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  00071	3b f0		 cmp	 esi, eax
  00073	7e 14		 jle	 SHORT $LN10@CheckNumbe
  00075	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  0007a	50		 push	 eax

; 19086: }

  0007b	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00080	57		 push	 edi
  00081	e8 00 00 00 00	 call	 _sprintf
  00086	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN10@CheckNumbe:
  00089	5f		 pop	 edi
  0008a	5e		 pop	 esi
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?CheckNumber@@YAXPADH@Z ENDP				; CheckNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z
_TEXT	SEGMENT
_buf$ = -516						; size = 256
_temp$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_nWhichOne$ = 8						; size = 4
_ald$ = 12						; size = 4
?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z PROC	; AuctionGetString, COMDAT

; 19008: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 02 00
	00		 sub	 esp, 516		; 00000204H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	8b 7d 0c	 mov	 edi, DWORD PTR _ald$[ebp]

; 19009: 	int i;
; 19010: 	char buf[256];
; 19011: 	char temp[256];
; 19012: 
; 19013: 	ZeroMemory(buf, sizeof(buf));

  00018	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0001e	68 00 01 00 00	 push	 256			; 00000100H
  00023	6a 00		 push	 0
  00025	50		 push	 eax
  00026	e8 00 00 00 00	 call	 _memset

; 19014: 	ZeroMemory(temp, sizeof(temp));

  0002b	68 00 01 00 00	 push	 256			; 00000100H
  00030	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00036	6a 00		 push	 0
  00038	50		 push	 eax
  00039	e8 00 00 00 00	 call	 _memset

; 19015: 	makeStringFromEscaped(szpALD);

  0003e	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  00044	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19016: 	// è¥æ¯å¼äºlist
; 19017: 	if (nWhichOne == 0)

  00049	8b 45 08	 mov	 eax, DWORD PTR _nWhichOne$[ebp]
  0004c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004f	85 c0		 test	 eax, eax
  00051	0f 85 b6 00 00
	00		 jne	 $LN3@AuctionGet

; 19018: 	{
; 19019: 		for (i = 0; i < 10; i++)

  00057	53		 push	 ebx
  00058	33 db		 xor	 ebx, ebx
  0005a	83 c7 15	 add	 edi, 21			; 00000015H
  0005d	0f 1f 00	 npad	 3
$LL4@AuctionGet:

; 19020: 		{
; 19021: 			getStringToken(szpALD, '|', i + 1, sizeof(buf), buf);

  00060	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00066	43		 inc	 ebx
  00067	50		 push	 eax
  00068	68 00 01 00 00	 push	 256			; 00000100H
  0006d	53		 push	 ebx
  0006e	6a 7c		 push	 124			; 0000007cH
  00070	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  00076	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19022: 			makeStringFromEscaped(buf);

  0007b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00081	50		 push	 eax
  00082	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19023: 			getStringToken(buf, '|', 1, sizeof(temp), temp);												// ç´¢å¼å¼

  00087	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0008d	50		 push	 eax
  0008e	68 00 01 00 00	 push	 256			; 00000100H
  00093	6a 01		 push	 1
  00095	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0009b	6a 7c		 push	 124			; 0000007cH
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19024: 			ald[i].index = atoi(temp);

  000a3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _atoi

; 19025: 			getStringToken(buf, '|', 2, sizeof(ald[i].cdkey), ald[i].cdkey);				// å§æäººçcdkey

  000af	8d 77 ef	 lea	 esi, DWORD PTR [edi-17]
  000b2	89 47 eb	 mov	 DWORD PTR [edi-21], eax
  000b5	56		 push	 esi
  000b6	6a 11		 push	 17			; 00000011H
  000b8	6a 02		 push	 2
  000ba	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000c0	6a 7c		 push	 124			; 0000007cH
  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  000c8	83 c4 44	 add	 esp, 68			; 00000044H

; 19026: 			makeStringFromEscaped(ald[i].cdkey);

  000cb	56		 push	 esi
  000cc	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19027: 			getStringToken(buf, '|', 3, sizeof(ald[i].account), ald[i].account);		// åè¿°

  000d1	57		 push	 edi
  000d2	6a 65		 push	 101			; 00000065H
  000d4	6a 03		 push	 3
  000d6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  000dc	6a 7c		 push	 124			; 0000007cH
  000de	50		 push	 eax
  000df	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19028: 			makeStringFromEscaped(ald[i].account);

  000e4	57		 push	 edi
  000e5	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped
  000ea	83 c4 1c	 add	 esp, 28			; 0000001cH
  000ed	81 c7 18 01 00
	00		 add	 edi, 280		; 00000118H
  000f3	83 fb 0a	 cmp	 ebx, 10			; 0000000aH
  000f6	0f 8c 64 ff ff
	ff		 jl	 $LL4@AuctionGet

; 19072: 		}
; 19073: 	}
; 19074: }

  000fc	5b		 pop	 ebx
  000fd	5f		 pop	 edi
  000fe	5e		 pop	 esi
  000ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00102	33 cd		 xor	 ecx, ebp
  00104	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
$LN3@AuctionGet:

; 19029: 		}
; 19030: 	}
; 19031: 	// è¥æ¯å¼äºè§çèµæ
; 19032: 	if (nWhichOne == 1)

  0010d	83 f8 01	 cmp	 eax, 1
  00110	0f 85 ac 02 00
	00		 jne	 $LN8@AuctionGet

; 19033: 	{
; 19034: 		getStringToken(szpALD, '|', 1, sizeof(temp), temp);											// ç´¢å¼å¼

  00116	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0011c	50		 push	 eax
  0011d	68 00 01 00 00	 push	 256			; 00000100H
  00122	6a 01		 push	 1
  00124	6a 7c		 push	 124			; 0000007cH
  00126	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  0012c	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19035: 		ald->index = atoi(temp);

  00131	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 _atoi

; 19036: 		getStringToken(szpALD, '|', 2, sizeof(ald->name), ald->name);					// å§æäººåå­

  0013d	8d 77 7a	 lea	 esi, DWORD PTR [edi+122]
  00140	89 07		 mov	 DWORD PTR [edi], eax
  00142	56		 push	 esi
  00143	6a 11		 push	 17			; 00000011H
  00145	6a 02		 push	 2
  00147	6a 7c		 push	 124			; 0000007cH
  00149	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  0014f	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19037: 		makeStringFromEscaped(ald->name);

  00154	56		 push	 esi
  00155	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19038: 		getStringToken(szpALD, '|', 3, sizeof(ald->account), ald->account);			// åè¿°

  0015a	8d 77 15	 lea	 esi, DWORD PTR [edi+21]
  0015d	56		 push	 esi
  0015e	6a 65		 push	 101			; 00000065H
  00160	6a 03		 push	 3
  00162	6a 7c		 push	 124			; 0000007cH
  00164	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  0016a	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  0016f	83 c4 44	 add	 esp, 68			; 00000044H

; 19039: 		makeStringFromEscaped(ald->account);

  00172	56		 push	 esi
  00173	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19040: 		getStringToken(szpALD, '|', 4, sizeof(ald->money), ald->money);				// ä»·é±

  00178	8d 87 8b 00 00
	00		 lea	 eax, DWORD PTR [edi+139]
  0017e	50		 push	 eax
  0017f	6a 08		 push	 8
  00181	6a 04		 push	 4
  00183	6a 7c		 push	 124			; 0000007cH
  00185	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  0018b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19041: 		getStringToken(szpALD, '|', 5, sizeof(temp), temp);										// åå® ç©ææ¯ç©å

  00190	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00196	50		 push	 eax
  00197	68 00 01 00 00	 push	 256			; 00000100H
  0019c	6a 05		 push	 5
  0019e	6a 7c		 push	 124			; 0000007cH
  001a0	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  001a6	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19042: 		ald->kind = atoi(temp);

  001ab	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  001b1	50		 push	 eax
  001b2	e8 00 00 00 00	 call	 _atoi
  001b7	89 87 94 00 00
	00		 mov	 DWORD PTR [edi+148], eax

; 19043: 		getStringToken(szpALD, '|', 6, sizeof(buf), buf);								  		// åå¾å® ç©ææ¯ç©åçèµæ

  001bd	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001c3	50		 push	 eax
  001c4	68 00 01 00 00	 push	 256			; 00000100H
  001c9	6a 06		 push	 6
  001cb	6a 7c		 push	 124			; 0000007cH
  001cd	ff 35 00 00 00
	00		 push	 DWORD PTR ?szpALD@@3PADA ; szpALD
  001d3	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  001d8	83 c4 44	 add	 esp, 68			; 00000044H

; 19044: 		makeStringFromEscaped(buf);

  001db	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001e1	50		 push	 eax
  001e2	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19045: 		getStringToken(buf, '|', 1, sizeof(ald->sellname), ald->sellname);		// å® ç©ææ¯ç©åçåç§°

  001e7	8d 87 98 00 00
	00		 lea	 eax, DWORD PTR [edi+152]
  001ed	50		 push	 eax
  001ee	6a 1d		 push	 29			; 0000001dH
  001f0	6a 01		 push	 1
  001f2	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  001f8	6a 7c		 push	 124			; 0000007cH
  001fa	50		 push	 eax
  001fb	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19046: 		getStringToken(buf, '|', 2, sizeof(temp), temp);		           				// å® ç©ææ¯ç©åçå¾å·

  00200	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00206	50		 push	 eax
  00207	68 00 01 00 00	 push	 256			; 00000100H
  0020c	6a 02		 push	 2
  0020e	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00214	6a 7c		 push	 124			; 0000007cH
  00216	50		 push	 eax
  00217	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19047: 		ald->grp_no = atoi(temp);

  0021c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 _atoi
  00228	89 87 b8 00 00
	00		 mov	 DWORD PTR [edi+184], eax
  0022e	83 c4 30	 add	 esp, 48			; 00000030H

; 19048: 		// è¥æ¯åå® ç©
; 19049: 		if (ald[0].kind == 1)

  00231	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00237	83 bf 94 00 00
	00 01		 cmp	 DWORD PTR [edi+148], 1
  0023e	50		 push	 eax
  0023f	68 00 01 00 00	 push	 256			; 00000100H
  00244	6a 03		 push	 3
  00246	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0024c	6a 7c		 push	 124			; 0000007cH
  0024e	50		 push	 eax
  0024f	0f 85 16 01 00
	00		 jne	 $LN7@AuctionGet

; 19050: 		{
; 19051: 			getStringToken(buf, '|', 3, sizeof(temp), temp);									// å® ç©çç­çº§

  00255	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19052: 			ald->lv = atoi(temp);

  0025a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 _atoi
  00266	89 87 bc 00 00
	00		 mov	 DWORD PTR [edi+188], eax

; 19053: 			getStringToken(buf, '|', 4, sizeof(temp), temp);									// å® ç©çæ»

  0026c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00272	50		 push	 eax
  00273	68 00 01 00 00	 push	 256			; 00000100H
  00278	6a 04		 push	 4
  0027a	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00280	6a 7c		 push	 124			; 0000007cH
  00282	50		 push	 eax
  00283	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19054: 			ald->act = atoi(temp);

  00288	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0028e	50		 push	 eax
  0028f	e8 00 00 00 00	 call	 _atoi
  00294	89 87 c0 00 00
	00		 mov	 DWORD PTR [edi+192], eax

; 19055: 			getStringToken(buf, '|', 5, sizeof(temp), temp);									// å® ç©çé²

  0029a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  002a0	50		 push	 eax
  002a1	68 00 01 00 00	 push	 256			; 00000100H
  002a6	6a 05		 push	 5
  002a8	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002ae	6a 7c		 push	 124			; 0000007cH
  002b0	50		 push	 eax
  002b1	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  002b6	83 c4 44	 add	 esp, 68			; 00000044H

; 19056: 			ald->def = atoi(temp);

  002b9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  002bf	50		 push	 eax
  002c0	e8 00 00 00 00	 call	 _atoi
  002c5	89 87 c4 00 00
	00		 mov	 DWORD PTR [edi+196], eax

; 19057: 			getStringToken(buf, '|', 6, sizeof(temp), temp);									// å® ç©çæ

  002cb	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  002d1	50		 push	 eax
  002d2	68 00 01 00 00	 push	 256			; 00000100H
  002d7	6a 06		 push	 6
  002d9	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002df	6a 7c		 push	 124			; 0000007cH
  002e1	50		 push	 eax
  002e2	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19058: 			ald->dex = atoi(temp);

  002e7	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  002ed	50		 push	 eax
  002ee	e8 00 00 00 00	 call	 _atoi
  002f3	89 87 c8 00 00
	00		 mov	 DWORD PTR [edi+200], eax

; 19059: 			getStringToken(buf, '|', 7, sizeof(temp), temp);									// å® ç©çè¡

  002f9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  002ff	50		 push	 eax
  00300	68 00 01 00 00	 push	 256			; 00000100H
  00305	6a 07		 push	 7
  00307	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0030d	6a 7c		 push	 124			; 0000007cH
  0030f	50		 push	 eax
  00310	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19060: 			ald->hp = atoi(temp);

  00315	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 _atoi
  00321	89 87 cc 00 00
	00		 mov	 DWORD PTR [edi+204], eax

; 19061: 			getStringToken(buf, '|', 8, sizeof(temp), temp);									// å® ç©çå¿ è¯

  00327	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0032d	50		 push	 eax
  0032e	68 00 01 00 00	 push	 256			; 00000100H
  00333	6a 08		 push	 8
  00335	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  0033b	6a 7c		 push	 124			; 0000007cH
  0033d	50		 push	 eax
  0033e	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken
  00343	83 c4 48	 add	 esp, 72			; 00000048H

; 19062: 			ald->loyal = atoi(temp);

  00346	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 _atoi
  00352	83 c4 04	 add	 esp, 4
  00355	89 87 d0 00 00
	00		 mov	 DWORD PTR [edi+208], eax
  0035b	5f		 pop	 edi

; 19072: 		}
; 19073: 	}
; 19074: }

  0035c	5e		 pop	 esi
  0035d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00360	33 cd		 xor	 ecx, ebp
  00362	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00367	8b e5		 mov	 esp, ebp
  00369	5d		 pop	 ebp
  0036a	c3		 ret	 0
$LN7@AuctionGet:

; 19063: 		}
; 19064: 		// åéå·
; 19065: 		else
; 19066: 		{
; 19067: 			getStringToken(buf, '|', 3, sizeof(temp), temp);									// éå·åç§°çé¢è² 0:ç½å­ 4:é»å­ 5:ç»¿å­

  0036b	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19068: 			ald->name_color = atoi(temp);

  00370	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00376	50		 push	 eax
  00377	e8 00 00 00 00	 call	 _atoi
  0037c	89 87 d4 00 00
	00		 mov	 DWORD PTR [edi+212], eax

; 19069: 			getStringToken(buf, '|', 4, sizeof(temp), temp);									// éå·åè¿°

  00382	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00388	50		 push	 eax
  00389	68 00 01 00 00	 push	 256			; 00000100H
  0038e	6a 04		 push	 4
  00390	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00396	6a 7c		 push	 124			; 0000007cH
  00398	50		 push	 eax
  00399	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 19070: 			makeStringFromEscaped(temp);

  0039e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  003a4	50		 push	 eax
  003a5	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 19071: 			strncpy(ald->item_effect_string, temp, 64);

  003aa	6a 40		 push	 64			; 00000040H
  003ac	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  003b2	50		 push	 eax
  003b3	8d 87 d8 00 00
	00		 lea	 eax, DWORD PTR [edi+216]
  003b9	50		 push	 eax
  003ba	e8 00 00 00 00	 call	 _strncpy
  003bf	83 c4 3c	 add	 esp, 60			; 0000003cH
$LN8@AuctionGet:

; 19072: 		}
; 19073: 	}
; 19074: }

  003c2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003c5	5f		 pop	 edi
  003c6	33 cd		 xor	 ecx, ebp
  003c8	5e		 pop	 esi
  003c9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003ce	8b e5		 mov	 esp, ebp
  003d0	5d		 pop	 ebp
  003d1	c3		 ret	 0
?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z ENDP	; AuctionGetString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?AuctionSurveyModifyWT@@YAXXZ
_TEXT	SEGMENT
_x$1$ = -32						; size = 4
_szSendMsg$ = -28					; size = 16
_szPetAttrib$ = -12					; size = 8
__$ArrayPad$ = -4					; size = 4
?AuctionSurveyModifyWT@@YAXXZ PROC			; AuctionSurveyModifyWT, COMDAT

; 18817: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi

; 18818: 	static ACTION* pShowPet = NULL;
; 18819: 	static ALD ald;	// å§æç©çåé¡¹èµæ
; 18820: 	static int nButton[2][2]; // nButton[x][y]-> x:0->?? x:1->ì·¨ì
; 18821: 							//                 y:0->è¢«ç¹éæ¶çæé®ç¼å· y:1->ç¹éç¶æ 0->æ²¡ç¹é 1->æç¹é
; 18822: 	static BOOL bPress;
; 18823: 	int x, y, i;
; 18824: 	char szSendMsg[2][8];
; 18825: 	char szPetAttrib[8];
; 18826: 
; 18827: 	if (CheckMenuFlag()
; 18828: 		|| (joy_trg[0] & JOY_ESC)
; 18829: 		|| actBtn == 1
; 18830: 		|| menuBtn == 1
; 18831: 		|| disconnectServerFlag == TRUE
; 18832: 		|| wnCloseFlag == 1)

  00013	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00018	85 c0		 test	 eax, eax
  0001a	0f 85 5e 04 00
	00		 jne	 $LN9@AuctionSur
  00020	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0002a	0f 85 4e 04 00
	00		 jne	 $LN9@AuctionSur
  00030	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00038	0f 84 40 04 00
	00		 je	 $LN9@AuctionSur
  0003e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00046	0f 84 32 04 00
	00		 je	 $LN9@AuctionSur
  0004c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00053	0f 84 25 04 00
	00		 je	 $LN9@AuctionSur
  00059	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00061	0f 84 17 04 00
	00		 je	 $LN9@AuctionSur

; 18838: 			pActAuctionWT = NULL;
; 18839: 			if (pShowPet != NULL)
; 18840: 			{
; 18841: 				DeathAction(pShowPet);
; 18842: 				pShowPet = NULL;
; 18843: 			}
; 18844: 			GetKeyInputFocus(&MyChatBuffer);
; 18845: 			play_se(217, 320, 240);
; 18846: 			return;
; 18847: 		}
; 18848: 	}
; 18849: 	// å¦æç®åæ²¡æäº§çè´­ä¹°ä»é¢
; 18850: 	if (pActAuctionWT == NULL)

  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  0006d	85 c9		 test	 ecx, ecx
  0006f	0f 84 7d 04 00
	00		 je	 $LN60@AuctionSur

; 18896: 	}
; 18897: 	else
; 18898: 	{
; 18899: 		// å¦æè§çªå·²ç»å¼å¥½äº
; 18900: 		if (pActAuctionWT->hp > 0)

  00075	39 41 78	 cmp	 DWORD PTR [ecx+120], eax
  00078	0f 8e 5e 06 00
	00		 jle	 $LN15@AuctionSur

; 18901: 		{
; 18902: 			// åº§æ è®¾å®
; 18903: 			x = pActAuctionWT->x;
; 18904: 			y = pActAuctionWT->y;
; 18905: 
; 18906: 			// å¦ææ»é¼ å·¦é®æç
; 18907: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  0007e	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00083	8b 79 18	 mov	 edi, DWORD PTR [ecx+24]
  00086	8b 59 1c	 mov	 ebx, DWORD PTR [ecx+28]
  00089	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+4
  0008f	89 7d e0	 mov	 DWORD PTR _x$1$[ebp], edi
  00092	a8 01		 test	 al, 1
  00094	74 3f		 je	 SHORT $LN67@AuctionSur

; 18908: 			{
; 18909: 				for (i = 0; i < 2; i++) if (HitDispNo == nButton[i][0]) nButton[i][1] = 1;

  00096	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0009b	ba 01 00 00 00	 mov	 edx, 1
  000a0	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA
  000a6	0f 44 f2	 cmove	 esi, edx
  000a9	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+8
  000af	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+12
  000b5	b8 01 00 00 00	 mov	 eax, 1
  000ba	0f 44 d0	 cmove	 edx, eax

; 18910: 				bPress = TRUE;

  000bd	a3 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionSurveyModifyWT@@YAXXZ@4HA, eax
  000c2	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  000c7	89 35 04 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+4, esi
  000cd	89 15 0c 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+12, edx
  000d3	eb 06		 jmp	 SHORT $LN16@AuctionSur
$LN67@AuctionSur:

; 18901: 		{
; 18902: 			// åº§æ è®¾å®
; 18903: 			x = pActAuctionWT->x;
; 18904: 			y = pActAuctionWT->y;
; 18905: 
; 18906: 			// å¦ææ»é¼ å·¦é®æç
; 18907: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  000d5	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+12
$LN16@AuctionSur:

; 18911: 			}
; 18912: 			// å¦ææ»é¼ å·¦é®æ¾å¼
; 18913: 			if (mouse.onceState & MOUSE_LEFT_CRICK_UP)

  000db	a8 04		 test	 al, 4
  000dd	74 20		 je	 SHORT $LN18@AuctionSur

; 18914: 			{
; 18915: 				for (i = 0; i < 2; i++) nButton[i][1] = 0;

  000df	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+4, 0
  000e9	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+12, 0

; 18916: 				bPress = FALSE;

  000f3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionSurveyModifyWT@@YAXXZ@4HA, 0

; 18917: 			}
; 18918: 			// å¦ææä¸??æì·¨ì
; 18919: 			if (nButton[0][1] || nButton[1][1])

  000fd	eb 10		 jmp	 SHORT $LN62@AuctionSur
$LN18@AuctionSur:
  000ff	85 f6		 test	 esi, esi
  00101	0f 85 fb 02 00
	00		 jne	 $LN59@AuctionSur
  00107	85 d2		 test	 edx, edx
  00109	0f 85 6c 03 00
	00		 jne	 $LN23@AuctionSur
$LN62@AuctionSur:

; 18939: 				return;
; 18940: 			}
; 18941: 
; 18942: 			if (windowTypeWN == WINDOW_MESSAGETYPE_AUCTIONMODIFY)

  0010f	83 3d 00 00 00
	00 26		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 38 ; windowTypeWN, 00000026H
  00116	75 67		 jne	 SHORT $LN27@AuctionSur

; 18943: 			{
; 18944: 				// æ»é¼ å¨åè¿°åºå
; 18945: 				if (MakeHitBox(AuctionStr.x, AuctionStr.y, AuctionStr.x + 170, AuctionStr.y + 95, DISP_PRIO_BOX2) == TRUE)

  00118	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+272
  0011e	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+268
  00124	6a 6b		 push	 107			; 0000006bH
  00126	8d 42 5f	 lea	 eax, DWORD PTR [edx+95]
  00129	50		 push	 eax
  0012a	8d 81 aa 00 00
	00		 lea	 eax, DWORD PTR [ecx+170]
  00130	50		 push	 eax
  00131	52		 push	 edx
  00132	51		 push	 ecx
  00133	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00138	83 c4 14	 add	 esp, 20			; 00000014H
  0013b	83 f8 01	 cmp	 eax, 1
  0013e	75 0d		 jne	 SHORT $LN26@AuctionSur

; 18946: 				{
; 18947: 					GetKeyInputFocus(&AuctionStr);

  00140	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00145	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0014a	83 c4 04	 add	 esp, 4
$LN26@AuctionSur:

; 18948: 				}
; 18949: 
; 18950: 				// æ»é¼ å¨ä»·é±åºå
; 18951: 				if (MakeHitBox(AuctionMoney.x, AuctionMoney.y, AuctionMoney.x + 115, AuctionMoney.y + 18, DISP_PRIO_BOX2) == TRUE)

  0014d	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+272
  00153	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+268
  00159	6a 6b		 push	 107			; 0000006bH
  0015b	8d 42 12	 lea	 eax, DWORD PTR [edx+18]
  0015e	50		 push	 eax
  0015f	8d 41 73	 lea	 eax, DWORD PTR [ecx+115]
  00162	50		 push	 eax
  00163	52		 push	 edx
  00164	51		 push	 ecx
  00165	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0016a	83 c4 14	 add	 esp, 20			; 00000014H
  0016d	83 f8 01	 cmp	 eax, 1
  00170	75 0d		 jne	 SHORT $LN27@AuctionSur

; 18952: 				{
; 18953: 					GetKeyInputFocus(&AuctionMoney);

  00172	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00177	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0017c	83 c4 04	 add	 esp, 4
$LN27@AuctionSur:

; 18954: 				}
; 18955: 			}
; 18956: 
; 18957: 			// æ¾ç¤ºåè®¾å®buttonåºç°çä½ç½®
; 18958: 			nButton[0][0] = StockDispBuffer(x + 210, y + 433, DISP_PRIO_IME3, AUCTION_DECIDE_U, 2);

  0017f	6a 02		 push	 2
  00181	68 b1 66 00 00	 push	 26289			; 000066b1H
  00186	6a 69		 push	 105			; 00000069H
  00188	8d b3 b1 01 00
	00		 lea	 esi, DWORD PTR [ebx+433]
  0018e	8d 87 d2 00 00
	00		 lea	 eax, DWORD PTR [edi+210]
  00194	56		 push	 esi
  00195	50		 push	 eax
  00196	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18959: 			nButton[1][0] = StockDispBuffer(x + 320, y + 433, DISP_PRIO_IME3, AUCTION_CANCEL_R_U, 2);

  0019b	6a 02		 push	 2
  0019d	68 b3 66 00 00	 push	 26291			; 000066b3H
  001a2	6a 69		 push	 105			; 00000069H
  001a4	a3 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA, eax
  001a9	8d 87 40 01 00
	00		 lea	 eax, DWORD PTR [edi+320]
  001af	56		 push	 esi
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18960: 			// æ¾ç¤ºå§æäººåå­
; 18961: 			StockFontBuffer(x + 235, y + 22, FONT_PRIO_FRONT, 0, ald.name, 1);

  001b6	6a 01		 push	 1
  001b8	68 7a 00 00 00	 push	 OFFSET ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+122
  001bd	6a 00		 push	 0
  001bf	a3 08 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA+8, eax
  001c4	8d b7 eb 00 00
	00		 lea	 esi, DWORD PTR [edi+235]
  001ca	6a 01		 push	 1
  001cc	8d 43 16	 lea	 eax, DWORD PTR [ebx+22]
  001cf	50		 push	 eax
  001d0	56		 push	 esi
  001d1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001d6	83 c4 40	 add	 esp, 64			; 00000040H

; 18962: 			// è¥æ¯å® ç©
; 18963: 			if (ald.kind == 1)

  001d9	83 3d 94 00 00
	00 01		 cmp	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+148, 1
  001e0	0f 85 55 01 00
	00		 jne	 $LN28@AuctionSur

; 18964: 			{
; 18965: 				if (pShowPet == NULL) pShowPet = MakeAnimDisp(x + 280, y + 200, ald.grp_no, 0);

  001e6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A, 0
  001ed	75 23		 jne	 SHORT $LN30@AuctionSur
  001ef	6a 00		 push	 0
  001f1	ff 35 b8 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+184
  001f7	8d 83 c8 00 00
	00		 lea	 eax, DWORD PTR [ebx+200]
  001fd	50		 push	 eax
  001fe	8d 87 18 01 00
	00		 lea	 eax, DWORD PTR [edi+280]
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  0020a	83 c4 10	 add	 esp, 16			; 00000010H
  0020d	a3 00 00 00 00	 mov	 DWORD PTR ?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A, eax
$LN30@AuctionSur:

; 18966: 				// æ¾ç¤ºå® ç©åå­
; 18967: 				StockFontBuffer(x + 235, y + 55, FONT_PRIO_FRONT, 0, ald.sellname, 1);

  00212	6a 01		 push	 1
  00214	68 98 00 00 00	 push	 OFFSET ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+152
  00219	6a 00		 push	 0
  0021b	6a 01		 push	 1
  0021d	8d 43 37	 lea	 eax, DWORD PTR [ebx+55]
  00220	50		 push	 eax
  00221	56		 push	 esi
  00222	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18968: 				// ç§å® ç©å±æ§åºä¸çåºå¾
; 18969: 				StockDispBuffer(x + 375, y + 170, DISP_PRIO_IME3, AUCTION_PET_STAT, 0);

  00227	6a 00		 push	 0
  00229	68 b9 66 00 00	 push	 26297			; 000066b9H
  0022e	6a 69		 push	 105			; 00000069H
  00230	8d 83 aa 00 00
	00		 lea	 eax, DWORD PTR [ebx+170]
  00236	50		 push	 eax
  00237	8d b7 77 01 00
	00		 lea	 esi, DWORD PTR [edi+375]
  0023d	56		 push	 esi
  0023e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18970: 				// ç§å® ç©èµæ
; 18971: 				itoa(ald.lv, szPetAttrib, 10);

  00243	6a 0a		 push	 10			; 0000000aH
  00245	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00248	50		 push	 eax
  00249	ff 35 bc 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+188
  0024f	e8 00 00 00 00	 call	 _itoa

; 18972: 				StockFontBuffer(x + 375, y + 90, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  00254	6a 01		 push	 1
  00256	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00259	50		 push	 eax
  0025a	6a 00		 push	 0
  0025c	6a 01		 push	 1
  0025e	8d 43 5a	 lea	 eax, DWORD PTR [ebx+90]
  00261	50		 push	 eax
  00262	56		 push	 esi
  00263	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00268	83 c4 50	 add	 esp, 80			; 00000050H

; 18973: 				itoa(ald.act, szPetAttrib, 10);

  0026b	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  0026e	6a 0a		 push	 10			; 0000000aH
  00270	50		 push	 eax
  00271	ff 35 c0 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+192
  00277	e8 00 00 00 00	 call	 _itoa

; 18974: 				StockFontBuffer(x + 375, y + 120, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  0027c	6a 01		 push	 1
  0027e	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00281	50		 push	 eax
  00282	6a 00		 push	 0
  00284	6a 01		 push	 1
  00286	8d 43 78	 lea	 eax, DWORD PTR [ebx+120]
  00289	50		 push	 eax
  0028a	56		 push	 esi
  0028b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18975: 				itoa(ald.def, szPetAttrib, 10);

  00290	6a 0a		 push	 10			; 0000000aH
  00292	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00295	50		 push	 eax
  00296	ff 35 c4 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+196
  0029c	e8 00 00 00 00	 call	 _itoa

; 18976: 				StockFontBuffer(x + 375, y + 148, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  002a1	6a 01		 push	 1
  002a3	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  002a6	50		 push	 eax
  002a7	6a 00		 push	 0
  002a9	6a 01		 push	 1
  002ab	8d 83 94 00 00
	00		 lea	 eax, DWORD PTR [ebx+148]
  002b1	50		 push	 eax
  002b2	56		 push	 esi
  002b3	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002b8	83 c4 48	 add	 esp, 72			; 00000048H

; 18977: 				itoa(ald.dex, szPetAttrib, 10);

  002bb	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  002be	6a 0a		 push	 10			; 0000000aH
  002c0	50		 push	 eax
  002c1	ff 35 c8 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+200
  002c7	e8 00 00 00 00	 call	 _itoa

; 18978: 				StockFontBuffer(x + 375, y + 174, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  002cc	6a 01		 push	 1
  002ce	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  002d1	50		 push	 eax
  002d2	6a 00		 push	 0
  002d4	6a 01		 push	 1
  002d6	8d 83 ae 00 00
	00		 lea	 eax, DWORD PTR [ebx+174]
  002dc	50		 push	 eax
  002dd	56		 push	 esi
  002de	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18979: 				itoa(ald.hp, szPetAttrib, 10);

  002e3	6a 0a		 push	 10			; 0000000aH
  002e5	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  002e8	50		 push	 eax
  002e9	ff 35 cc 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+204
  002ef	e8 00 00 00 00	 call	 _itoa

; 18980: 				StockFontBuffer(x + 375, y + 202, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  002f4	6a 01		 push	 1
  002f6	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  002f9	50		 push	 eax
  002fa	6a 00		 push	 0
  002fc	6a 01		 push	 1
  002fe	8d 83 ca 00 00
	00		 lea	 eax, DWORD PTR [ebx+202]
  00304	50		 push	 eax
  00305	56		 push	 esi
  00306	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0030b	83 c4 48	 add	 esp, 72			; 00000048H

; 18981: 				itoa(ald.loyal, szPetAttrib, 10);

  0030e	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00311	6a 0a		 push	 10			; 0000000aH
  00313	50		 push	 eax
  00314	ff 35 d0 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+208
  0031a	e8 00 00 00 00	 call	 _itoa

; 18982: 				StockFontBuffer(x + 375, y + 230, FONT_PRIO_FRONT, 0, szPetAttrib, 1);

  0031f	6a 01		 push	 1
  00321	8d 45 f4	 lea	 eax, DWORD PTR _szPetAttrib$[ebp]
  00324	50		 push	 eax
  00325	6a 00		 push	 0
  00327	6a 01		 push	 1
  00329	8d 83 e6 00 00
	00		 lea	 eax, DWORD PTR [ebx+230]
  0032f	50		 push	 eax
  00330	56		 push	 esi
  00331	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00336	83 c4 24	 add	 esp, 36			; 00000024H

; 18983: 			}

  00339	eb 56		 jmp	 SHORT $LN29@AuctionSur
$LN28@AuctionSur:

; 18984: 			else
; 18985: 			{
; 18986: 				// æ¾ç¤ºéå·åå­
; 18987: 				StockFontBuffer(x + 235, y + 55, FONT_PRIO_FRONT, ald.name_color, ald.sellname, 1);

  0033b	6a 01		 push	 1
  0033d	68 98 00 00 00	 push	 OFFSET ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+152
  00342	ff 35 d4 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+212
  00348	8d 43 37	 lea	 eax, DWORD PTR [ebx+55]
  0034b	6a 01		 push	 1
  0034d	50		 push	 eax
  0034e	56		 push	 esi
  0034f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18988: 				// æ¾ç¤ºéå·åè¿°
; 18989: 				StockFontBuffer2(&AuctionItem);

  00354	68 00 00 00 00	 push	 OFFSET ?AuctionItem@@3USTR_BUFFER@@A ; AuctionItem
  00359	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 18990: 				// ç§éå·å¾
; 18991: 				StockDispBuffer(x + 315, y + 155, DISP_PRIO_IME3, ald.grp_no, 0);

  0035e	6a 00		 push	 0
  00360	ff 35 b8 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+184
  00366	8d b3 9b 00 00
	00		 lea	 esi, DWORD PTR [ebx+155]
  0036c	81 c7 3b 01 00
	00		 add	 edi, 315		; 0000013bH
  00372	6a 69		 push	 105			; 00000069H
  00374	56		 push	 esi
  00375	57		 push	 edi
  00376	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18992: 				// ç§åºä¸çç³æ¿
; 18993: 				StockDispBuffer(x + 315, y + 155, DISP_PRIO_IME3, AUCTION_PLANK, 0);

  0037b	6a 00		 push	 0
  0037d	68 9d 66 00 00	 push	 26269			; 0000669dH
  00382	6a 69		 push	 105			; 00000069H
  00384	56		 push	 esi
  00385	57		 push	 edi
  00386	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0038b	8b 7d e0	 mov	 edi, DWORD PTR _x$1$[ebp]
  0038e	83 c4 44	 add	 esp, 68			; 00000044H
$LN29@AuctionSur:

; 18994: 			}
; 18995: 			// ç§åºåè¿°åä»·é±
; 18996: 			StockFontBuffer2(&AuctionStr);

  00391	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00396	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 18997: 			CheckNumber(AuctionMoney.buffer, -1);

  0039b	6a ff		 push	 -1
  0039d	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  003a2	e8 00 00 00 00	 call	 ?CheckNumber@@YAXPADH@Z	; CheckNumber

; 18998: 			StockFontBuffer2(&AuctionMoney);

  003a7	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  003ac	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  003b1	83 c4 10	 add	 esp, 16			; 00000010H

; 18999: 
; 19000: 			// å¦ææ¯ä¿®æ¹å§æåå®¹,ç§åº"ä¿®æ¹"çå¾æ"è´­ä¹°"çå­çæ
; 19001: 			if (windowTypeWN == WINDOW_MESSAGETYPE_AUCTIONMODIFY) StockDispBuffer(x + 160, y, DISP_PRIO_IME3, AUCTION_SURVEY_1, 1);

  003b4	83 3d 00 00 00
	00 26		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 38 ; windowTypeWN, 00000026H
  003bb	75 19		 jne	 SHORT $LN31@AuctionSur
  003bd	6a 01		 push	 1
  003bf	68 b5 66 00 00	 push	 26293			; 000066b5H
  003c4	6a 69		 push	 105			; 00000069H
  003c6	8d 87 a0 00 00
	00		 lea	 eax, DWORD PTR [edi+160]
  003cc	53		 push	 ebx
  003cd	50		 push	 eax
  003ce	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003d3	83 c4 14	 add	 esp, 20			; 00000014H
$LN31@AuctionSur:

; 19002: 			StockDispBuffer(320, 240, DISP_PRIO_IME3, AUCTION_SURVEY, 1);

  003d6	6a 01		 push	 1
  003d8	68 b4 66 00 00	 push	 26292			; 000066b4H
  003dd	6a 69		 push	 105			; 00000069H
  003df	68 f0 00 00 00	 push	 240			; 000000f0H
  003e4	68 40 01 00 00	 push	 320			; 00000140H
  003e9	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003ee	83 c4 14	 add	 esp, 20			; 00000014H
  003f1	5f		 pop	 edi

; 19003: 		}
; 19004: 	}
; 19005: }

  003f2	5e		 pop	 esi
  003f3	5b		 pop	 ebx
  003f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003f7	33 cd		 xor	 ecx, ebp
  003f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003fe	8b e5		 mov	 esp, ebp
  00400	5d		 pop	 ebp
  00401	c3		 ret	 0
$LN59@AuctionSur:

; 18920: 			{
; 18921: 				if (nButton[0][1])
; 18922: 				{
; 18923: 					ZeroMemory(szSendMsg, sizeof(szSendMsg));
; 18924: 					sprintf(szSendMsg[0], "%d|", ald.index);

  00402	ff 35 00 00 00
	00		 push	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A
  00408	8d 45 e4	 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  0040b	0f 57 c0	 xorps	 xmm0, xmm0
  0040e	68 00 00 00 00	 push	 OFFSET ??_C@_03IFADCKOJ@?$CFd?$HM@
  00413	50		 push	 eax
  00414	0f 11 45 e4	 movups	 XMMWORD PTR _szSendMsg$[ebp], xmm0
  00418	e8 00 00 00 00	 call	 _sprintf

; 18925: 					makeEscapeString(szSendMsg[0], szSendMsg[1], sizeof(szSendMsg[0]));

  0041d	6a 08		 push	 8
  0041f	8d 45 ec	 lea	 eax, DWORD PTR _szSendMsg$[ebp+8]
  00422	50		 push	 eax
  00423	8d 45 e4	 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00426	50		 push	 eax
  00427	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0042c	83 c4 18	 add	 esp, 24			; 00000018H

; 18926: 					if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_OK, szSendMsg[1]);

  0042f	8d 45 ec	 lea	 eax, DWORD PTR _szSendMsg$[ebp+8]
  00432	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00439	50		 push	 eax
  0043a	6a 01		 push	 1
  0043c	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00442	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00448	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0044e	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00454	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0045a	74 11		 je	 SHORT $LN22@AuctionSur
  0045c	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send

; 18928: 				}
; 18929: 				windowTypeWN = -1;

  00461	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00467	83 c4 1c	 add	 esp, 28			; 0000001cH

; 18930: 				DeathAction(pActAuctionWT);

  0046a	51		 push	 ecx

; 18931: 				pActAuctionWT = NULL;
; 18932: 				if (pShowPet != NULL)
; 18933: 				{
; 18934: 					DeathAction(pShowPet);
; 18935: 					pShowPet = NULL;

  0046b	eb 1b		 jmp	 SHORT $LN70@AuctionSur
$LN22@AuctionSur:

; 18927: 					else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_OK, szSendMsg[1]);

  0046d	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send

; 18928: 				}
; 18929: 				windowTypeWN = -1;

  00472	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00478	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN23@AuctionSur:

; 18930: 				DeathAction(pActAuctionWT);

  0047b	51		 push	 ecx

; 18931: 				pActAuctionWT = NULL;
; 18932: 				if (pShowPet != NULL)
; 18933: 				{
; 18934: 					DeathAction(pShowPet);
; 18935: 					pShowPet = NULL;

  0047c	eb 0a		 jmp	 SHORT $LN70@AuctionSur
$LN9@AuctionSur:

; 18833: 	{
; 18834: 		if (pActAuctionWT != NULL)

  0047e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00483	85 c0		 test	 eax, eax
  00485	74 6b		 je	 SHORT $LN60@AuctionSur

; 18835: 		{
; 18836: 			windowTypeWN = -1;
; 18837: 			DeathAction(pActAuctionWT);

  00487	50		 push	 eax
$LN70@AuctionSur:

; 18936: 				}
; 18937: 				GetKeyInputFocus(&MyChatBuffer);

  00488	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00492	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00497	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A
  0049c	83 c4 04	 add	 esp, 4
  0049f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  004a9	85 c0		 test	 eax, eax
  004ab	74 13		 je	 SHORT $LN24@AuctionSur
  004ad	50		 push	 eax
  004ae	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004b3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet@?1??AuctionSurveyModifyWT@@YAXXZ@4PAUaction@@A, 0
  004bd	83 c4 04	 add	 esp, 4
$LN24@AuctionSur:
  004c0	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  004c5	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 18938: 				play_se(217, 320, 240);

  004ca	68 f0 00 00 00	 push	 240			; 000000f0H
  004cf	68 40 01 00 00	 push	 320			; 00000140H
  004d4	68 d9 00 00 00	 push	 217			; 000000d9H
  004d9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004de	83 c4 10	 add	 esp, 16			; 00000010H
  004e1	5f		 pop	 edi

; 19003: 		}
; 19004: 	}
; 19005: }

  004e2	5e		 pop	 esi
  004e3	5b		 pop	 ebx
  004e4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004e7	33 cd		 xor	 ecx, ebp
  004e9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004ee	8b e5		 mov	 esp, ebp
  004f0	5d		 pop	 ebp
  004f1	c3		 ret	 0
$LN60@AuctionSur:

; 18851: 	{
; 18852: 		// äº§çè´­ä¹°ä»é¢
; 18853: 		pActAuctionWT = MakeWindowDisp(50, 15, 540, 450, AUCTION_SURVEY, -1);

  004f2	6a ff		 push	 -1
  004f4	68 b4 66 00 00	 push	 26292			; 000066b4H
  004f9	68 c2 01 00 00	 push	 450			; 000001c2H
  004fe	68 1c 02 00 00	 push	 540			; 0000021cH
  00503	6a 0f		 push	 15			; 0000000fH
  00505	6a 32		 push	 50			; 00000032H
  00507	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 18854: 		ZeroMemory(&ald, sizeof(ald));

  0050c	68 18 01 00 00	 push	 280			; 00000118H
  00511	6a 00		 push	 0
  00513	68 00 00 00 00	 push	 OFFSET ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A
  00518	a3 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, eax ; pActAuctionWT
  0051d	e8 00 00 00 00	 call	 _memset
  00522	0f 57 c0	 xorps	 xmm0, xmm0

; 18855: 		ZeroMemory(nButton, sizeof(nButton));
; 18856: 		AuctionGetString(1, &ald);

  00525	68 00 00 00 00	 push	 OFFSET ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A
  0052a	6a 01		 push	 1
  0052c	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?nButton@?1??AuctionSurveyModifyWT@@YAXXZ@4PAY01HA, xmm0
  00533	e8 00 00 00 00	 call	 ?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z ; AuctionGetString
  00538	83 c4 2c	 add	 esp, 44			; 0000002cH

; 18857: 		bPress = FALSE;

  0053b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionSurveyModifyWT@@YAXXZ@4HA, 0
  00545	33 c9		 xor	 ecx, ecx
  00547	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL33@AuctionSur:

; 18858: 		// åè¿°æå­åå§å
; 18859: 		strcpy(AuctionStr.buffer, ald.account);

  00550	8a 81 15 00 00
	00		 mov	 al, BYTE PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A[ecx+21]
  00556	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00559	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A[ecx-1], al
  0055f	84 c0		 test	 al, al
  00561	75 ed		 jne	 SHORT $LL33@AuctionSur

; 18860: 		AuctionStr.cnt = strlen(AuctionStr.buffer);

  00563	b9 00 00 00 00	 mov	 ecx, OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00568	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0056b	0f 1f 44 00 00	 npad	 5
$LL63@AuctionSur:
  00570	8a 01		 mov	 al, BYTE PTR [ecx]
  00572	41		 inc	 ecx
  00573	84 c0		 test	 al, al
  00575	75 f9		 jne	 SHORT $LL63@AuctionSur
  00577	2b ca		 sub	 ecx, edx
  00579	88 0d 07 01 00
	00		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+263, cl

; 18861: 		AuctionStr.cursor = strlen(AuctionStr.buffer);

  0057f	b9 00 00 00 00	 mov	 ecx, OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00584	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL64@AuctionSur:
  00587	8a 01		 mov	 al, BYTE PTR [ecx]
  00589	41		 inc	 ecx
  0058a	84 c0		 test	 al, al
  0058c	75 f9		 jne	 SHORT $LL64@AuctionSur
  0058e	2b ca		 sub	 ecx, edx

; 18862: 		AuctionStr.color = 0;

  00590	a2 08 01 00 00	 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+264, al

; 18863: 		AuctionStr.len = 100;
; 18864: 		AuctionStr.lineLen = 24;
; 18865: 		AuctionStr.lineDist = 20;
; 18866: 		AuctionStr.x = pActAuctionWT->x + 230;

  00595	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  0059b	88 0d 09 01 00
	00		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+265, cl
  005a1	66 c7 05 04 01
	00 00 64 18	 mov	 WORD PTR ?AuctionStr@@3USTR_BUFFER@@A+260, 6244 ; 00001864H
  005aa	c6 05 06 01 00
	00 14		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+262, 20 ; 00000014H
  005b1	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  005b4	05 e6 00 00 00	 add	 eax, 230		; 000000e6H
  005b9	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+268, eax

; 18867: 		AuctionStr.y = pActAuctionWT->y + 265;

  005be	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  005c1	05 09 01 00 00	 add	 eax, 265		; 00000109H

; 18868: 		AuctionStr.fontPrio = FONT_PRIO_FRONT;

  005c6	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+284, 1
  005d0	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+272, eax
  005d5	33 c9		 xor	 ecx, ecx
  005d7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL34@AuctionSur:

; 18869: 		// ä»·é±æå­åå§å
; 18870: 		strcpy(AuctionMoney.buffer, ald.money);

  005e0	8a 81 8b 00 00
	00		 mov	 al, BYTE PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A[ecx+139]
  005e6	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  005e9	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A[ecx-1], al
  005ef	84 c0		 test	 al, al
  005f1	75 ed		 jne	 SHORT $LL34@AuctionSur

; 18871: 		AuctionMoney.cnt = strlen(AuctionMoney.buffer);

  005f3	b9 00 00 00 00	 mov	 ecx, OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  005f8	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  005fb	0f 1f 44 00 00	 npad	 5
$LL65@AuctionSur:
  00600	8a 01		 mov	 al, BYTE PTR [ecx]
  00602	41		 inc	 ecx
  00603	84 c0		 test	 al, al
  00605	75 f9		 jne	 SHORT $LL65@AuctionSur
  00607	2b ce		 sub	 ecx, esi
  00609	88 0d 07 01 00
	00		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+263, cl

; 18872: 		AuctionMoney.cursor = strlen(AuctionMoney.buffer);

  0060f	b9 00 00 00 00	 mov	 ecx, OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00614	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL66@AuctionSur:
  00617	8a 01		 mov	 al, BYTE PTR [ecx]
  00619	41		 inc	 ecx
  0061a	84 c0		 test	 al, al
  0061c	75 f9		 jne	 SHORT $LL66@AuctionSur
  0061e	2b ce		 sub	 ecx, esi

; 18873: 		AuctionMoney.color = 0;

  00620	a2 08 01 00 00	 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+264, al
  00625	88 0d 09 01 00
	00		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+265, cl

; 18874: 		AuctionMoney.len = 100;

  0062b	66 c7 05 04 01
	00 00 64 1c	 mov	 WORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+260, 7268 ; 00001c64H

; 18875: 		AuctionMoney.lineLen = 28;
; 18876: 		AuctionMoney.lineDist = 20;

  00634	c6 05 06 01 00
	00 14		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+262, 20 ; 00000014H

; 18877: 		AuctionMoney.x = pActAuctionWT->x + 270;

  0063b	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  0063e	05 0e 01 00 00	 add	 eax, 270		; 0000010eH
  00643	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+268, eax

; 18878: 		AuctionMoney.y = pActAuctionWT->y + 385;

  00648	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  0064b	05 81 01 00 00	 add	 eax, 385		; 00000181H

; 18879: 		AuctionMoney.fontPrio = FONT_PRIO_FRONT;

  00650	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+284, 1

; 18880: 		// éå·åè¿°åå§å
; 18881: 		if (ald.kind == 2)

  0065a	83 3d 94 00 00
	00 02		 cmp	 DWORD PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A+148, 2
  00661	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+272, eax
  00666	75 5d		 jne	 SHORT $LN14@AuctionSur

; 18882: 		{
; 18883: 			strcpy(AuctionItem.buffer, ald.item_effect_string);

  00668	33 c9		 xor	 ecx, ecx
  0066a	66 0f 1f 44 00
	00		 npad	 6
$LL35@AuctionSur:
  00670	8a 81 d8 00 00
	00		 mov	 al, BYTE PTR ?ald@?1??AuctionSurveyModifyWT@@YAXXZ@4U_AUCTION_LIST_DATA@@A[ecx+216]
  00676	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00679	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?AuctionItem@@3USTR_BUFFER@@A[ecx-1], al
  0067f	84 c0		 test	 al, al
  00681	75 ed		 jne	 SHORT $LL35@AuctionSur

; 18884: 			AuctionItem.cnt = 0;
; 18885: 			AuctionItem.cursor = 0;

  00683	a2 09 01 00 00	 mov	 BYTE PTR ?AuctionItem@@3USTR_BUFFER@@A+265, al
  00688	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?AuctionItem@@3USTR_BUFFER@@A+263, 0

; 18886: 			AuctionItem.color = 0;
; 18887: 			AuctionItem.len = 100;

  00691	66 c7 05 04 01
	00 00 64 1c	 mov	 WORD PTR ?AuctionItem@@3USTR_BUFFER@@A+260, 7268 ; 00001c64H

; 18888: 			AuctionItem.lineLen = 28;
; 18889: 			AuctionItem.lineDist = 20;

  0069a	c6 05 06 01 00
	00 14		 mov	 BYTE PTR ?AuctionItem@@3USTR_BUFFER@@A+262, 20 ; 00000014H

; 18890: 			AuctionItem.x = pActAuctionWT->x + 220;

  006a1	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  006a4	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  006a9	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+268, eax

; 18891: 			AuctionItem.y = pActAuctionWT->y + 200;

  006ae	8b 42 1c	 mov	 eax, DWORD PTR [edx+28]
  006b1	05 c8 00 00 00	 add	 eax, 200		; 000000c8H

; 18892: 			AuctionItem.fontPrio = FONT_PRIO_FRONT;

  006b6	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+284, 1
  006c0	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+272, eax
$LN14@AuctionSur:

; 18893: 		}
; 18894: 		// æ­é³æ
; 18895: 		play_se(202, 320, 240);

  006c5	68 f0 00 00 00	 push	 240			; 000000f0H
  006ca	68 40 01 00 00	 push	 320			; 00000140H
  006cf	68 ca 00 00 00	 push	 202			; 000000caH
  006d4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  006d9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@AuctionSur:

; 19003: 		}
; 19004: 	}
; 19005: }

  006dc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006df	5f		 pop	 edi
  006e0	5e		 pop	 esi
  006e1	33 cd		 xor	 ecx, ebp
  006e3	5b		 pop	 ebx
  006e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006e9	8b e5		 mov	 esp, ebp
  006eb	5d		 pop	 ebp
  006ec	c3		 ret	 0
?AuctionSurveyModifyWT@@YAXXZ ENDP			; AuctionSurveyModifyWT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?AuctionListWT@@YAXXZ
_TEXT	SEGMENT
tv1113 = -548						; size = 4
_y$1$ = -548						; size = 4
_x$1$ = -544						; size = 4
_szSendMsg$ = -540					; size = 520
_temp$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?AuctionListWT@@YAXXZ PROC				; AuctionListWT, COMDAT

; 18604: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 02 00
	00		 sub	 esp, 548		; 00000224H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 18605: 	static ALD aldArea[10];		// serverä¸æ¬¡ä¼ æå¤åä¸ªå§æçåå®¹è¿æ¥
; 18606: 	static int nButton[5][2];	// nButton[x][y]-> x:0->é¢å x:1->è§çèµæ x:2->?? x:3->?? x:4->ì·¨ì  
; 18607: 							//                 y:0->è¢«ç¹éæ¶çæé®ç¼å· y:1->ç¹éç¶æ 0->æ²¡ç¹é 1->æç¹é 2->æ ä½ç¨
; 18608: 	static int nList[10][2];	// ä¼ æ¥çåä¸ªå§æææ è¢«ç¹éå° nList[x][y]-> x:0~9->åä¸ªå§æåå®¹  
; 18609: 							//															            y:0->è¢«ç¹éæ¶çæé®ç¼å· y:1->ç¹éç¶æ 0->æ²¡ç¹é 1->æç¹é
; 18610: 	static int nListSelect;   // éå°ç¬¬å ä¸ªåè¡¨
; 18611: 	int x, y, i;
; 18612: 	char temp[16], szSendMsg[2][260];
; 18613: 	static char id[16];							// ç©å®¶çcd key
; 18614: 	static BOOL bPress;
; 18615: 	static BOOL bIsThisPlayerAuction; // éå°çéé¡¹æ¯å¦ä¸ºè¿ä¸ªç©å®¶çå§æ
; 18616: 	static int nListNum;			// åè¡¨çç¼å·
; 18617: 	static int nCurrentPage;	// ç®åé¡µæ°
; 18618: 
; 18619: 	if (CheckMenuFlag()
; 18620: 		|| (joy_trg[0] & JOY_ESC)
; 18621: 		|| actBtn == 1
; 18622: 		|| menuBtn == 1
; 18623: 		|| disconnectServerFlag == TRUE
; 18624: 		|| wnCloseFlag == 1)

  00013	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00018	85 c0		 test	 eax, eax
  0001a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  0001f	75 33		 jne	 SHORT $LN12@AuctionLis
  00021	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0002b	75 27		 jne	 SHORT $LN12@AuctionLis
  0002d	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00035	74 1d		 je	 SHORT $LN12@AuctionLis
  00037	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0003f	74 13		 je	 SHORT $LN12@AuctionLis
  00041	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00048	74 0a		 je	 SHORT $LN12@AuctionLis
  0004a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00052	75 4d		 jne	 SHORT $LN13@AuctionLis
$LN12@AuctionLis:

; 18625: 	{
; 18626: 		if (pActAuctionWT != NULL)

  00054	85 c0		 test	 eax, eax
  00056	74 49		 je	 SHORT $LN13@AuctionLis

; 18627: 		{
; 18628: 			windowTypeWN = -1;
; 18629: 			DeathAction(pActAuctionWT);

  00058	50		 push	 eax
  00059	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00063	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18630: 			pActAuctionWT = NULL;
; 18631: 			bNewData = FALSE;
; 18632: 			play_se(217, 320, 240);

  00068	68 f0 00 00 00	 push	 240			; 000000f0H
  0006d	68 40 01 00 00	 push	 320			; 00000140H
  00072	68 d9 00 00 00	 push	 217			; 000000d9H
  00077	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  00081	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bNewData@@3HA, 0 ; bNewData
  0008b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00090	83 c4 10	 add	 esp, 16			; 00000010H

; 18812: 		}
; 18813: 	}
; 18814: }

  00093	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00096	33 cd		 xor	 ecx, ebp
  00098	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
$LN13@AuctionLis:

; 18633: 			return;
; 18634: 		}
; 18635: 	}
; 18636: 
; 18637: 	if (bNewData == TRUE)

  000a1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?bNewData@@3HA, 1 ; bNewData
  000a8	56		 push	 esi
  000a9	57		 push	 edi
  000aa	75 5b		 jne	 SHORT $LN75@AuctionLis

; 18638: 	{
; 18639: 		ZeroMemory(aldArea, sizeof(aldArea));

  000ac	68 f0 0a 00 00	 push	 2800			; 00000af0H
  000b1	6a 00		 push	 0
  000b3	68 00 00 00 00	 push	 OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A
  000b8	e8 00 00 00 00	 call	 _memset

; 18640: 		AuctionGetString(0, aldArea);

  000bd	68 00 00 00 00	 push	 OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A
  000c2	6a 00		 push	 0
  000c4	e8 00 00 00 00	 call	 ?AuctionGetString@@YAXHPAU_AUCTION_LIST_DATA@@@Z ; AuctionGetString

; 18641: 		bIsThisPlayerAuction = FALSE;
; 18642: 		bNewData = FALSE;
; 18643: 		nButton[2][1] = 2;
; 18644: 		nButton[3][1] = 2;
; 18645: 		if (buttonTypeWN & WINDOW_BUTTONTYPE_PRE)  nButton[2][1] = 0;

  000c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  000ce	33 d2		 xor	 edx, edx
  000d0	83 c4 14	 add	 esp, 20			; 00000014H
  000d3	89 15 00 00 00
	00		 mov	 DWORD PTR ?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA, edx
  000d9	a8 10		 test	 al, 16			; 00000010H
  000db	89 15 00 00 00
	00		 mov	 DWORD PTR ?bNewData@@3HA, edx ; bNewData
  000e1	be 02 00 00 00	 mov	 esi, 2
  000e6	8b fa		 mov	 edi, edx
  000e8	8b ce		 mov	 ecx, esi
  000ea	0f 45 f7	 cmovne	 esi, edi

; 18646: 		if (buttonTypeWN & WINDOW_BUTTONTYPE_NEXT) nButton[3][1] = 0;

  000ed	a8 20		 test	 al, 32			; 00000020H
  000ef	89 35 14 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+20, esi
  000f5	8b c2		 mov	 eax, edx
  000f7	0f 45 c8	 cmovne	 ecx, eax
  000fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  000ff	89 0d 1c 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+28, ecx
  00105	eb 0c		 jmp	 SHORT $LN16@AuctionLis
$LN75@AuctionLis:

; 18633: 			return;
; 18634: 		}
; 18635: 	}
; 18636: 
; 18637: 	if (bNewData == TRUE)

  00107	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA
  0010d	8b 35 14 00 00
	00		 mov	 esi, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+20
$LN16@AuctionLis:

; 18647: 	}
; 18648: 
; 18649: 	// å¦æç®åæ²¡æäº§çå§æä»é¢
; 18650: 	if (pActAuctionWT == NULL)

  00113	85 c0		 test	 eax, eax
  00115	0f 85 da 00 00
	00		 jne	 $LN17@AuctionLis

; 18651: 	{
; 18652: 		// äº§çå§æä»é¢
; 18653: 		pActAuctionWT = MakeWindowDisp(50, 15, 540, 450, AUCTION_LIST, -1);

  0011b	6a ff		 push	 -1
  0011d	68 9e 66 00 00	 push	 26270			; 0000669eH
  00122	68 c2 01 00 00	 push	 450			; 000001c2H
  00127	68 1c 02 00 00	 push	 540			; 0000021cH
  0012c	6a 0f		 push	 15			; 0000000fH
  0012e	6a 32		 push	 50			; 00000032H
  00130	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 18654: 		ZeroMemory(nList, sizeof(nList));

  00135	6a 50		 push	 80			; 00000050H
  00137	6a 00		 push	 0
  00139	68 00 00 00 00	 push	 OFFSET ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA
  0013e	a3 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, eax ; pActAuctionWT
  00143	e8 00 00 00 00	 call	 _memset

; 18655: 		nButton[0][1] = 2; // ä¸å¼å§è®¾å®ä¸ºæ ä½ç¨
; 18656: 		nButton[1][1] = 2;
; 18657: 		nButton[2][1] = 2;
; 18658: 		if (!(buttonTypeWN & WINDOW_BUTTONTYPE_NEXT)) nButton[3][1] = 2;

  00148	a0 00 00 00 00	 mov	 al, BYTE PTR ?buttonTypeWN@@3HA

; 18659: 		else																				 nButton[3][1] = 0;
; 18660: 		nButton[4][1] = 0;
; 18661: 		nListSelect = -1;
; 18662: 		bPress = TRUE;
; 18663: 		nListNum = 0;
; 18664: 		bIsThisPlayerAuction = FALSE;
; 18665: 		extern char szUser[];
; 18666: 		CopyMemory(id, szUser, 16);

  0014d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?szUser@@3PADA
  00154	f6 d0		 not	 al
  00156	c7 05 04 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4, 2

; 18667: 		ecb_crypt("f;encor1c", id, 16, DES_DECRYPT);

  00160	6a 01		 push	 1
  00162	0f b6 c0	 movzx	 eax, al
  00165	6a 10		 push	 16			; 00000010H
  00167	c1 e8 04	 shr	 eax, 4
  0016a	83 e0 02	 and	 eax, 2
  0016d	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12, 2
  00177	68 00 00 00 00	 push	 OFFSET ?id@?1??AuctionListWT@@YAXXZ@4PADA
  0017c	68 00 00 00 00	 push	 OFFSET ??_C@_09BACHGGGK@f?$DLencor1c@
  00181	c7 05 14 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+20, 2
  0018b	a3 1c 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+28, eax
  00190	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+36, 0
  0019a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA, -1
  001a4	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionListWT@@YAXXZ@4HA, 1
  001ae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nListNum@?1??AuctionListWT@@YAXXZ@4HA, 0
  001b8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA, 0
  001c2	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?id@?1??AuctionListWT@@YAXXZ@4PADA, xmm0
  001c9	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 18668: 		// æ­é³æ
; 18669: 		play_se(202, 320, 240);

  001ce	68 f0 00 00 00	 push	 240			; 000000f0H
  001d3	68 40 01 00 00	 push	 320			; 00000140H
  001d8	68 ca 00 00 00	 push	 202			; 000000caH
  001dd	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001e2	83 c4 40	 add	 esp, 64			; 00000040H
  001e5	5f		 pop	 edi
  001e6	5e		 pop	 esi

; 18812: 		}
; 18813: 	}
; 18814: }

  001e7	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ea	33 cd		 xor	 ecx, ebp
  001ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f1	8b e5		 mov	 esp, ebp
  001f3	5d		 pop	 ebp
  001f4	c3		 ret	 0
$LN17@AuctionLis:

; 18670: 	}
; 18671: 	else
; 18672: 	{
; 18673: 		// å¦æè§çªå·²ç»å¼å¥½äº
; 18674: 		if (pActAuctionWT->hp > 0)

  001f5	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001f9	0f 8e 11 06 00
	00		 jle	 $LN77@AuctionLis

; 18675: 		{
; 18676: 			// åº§æ è®¾å®
; 18677: 			x = pActAuctionWT->x;
; 18678: 			y = pActAuctionWT->y;
; 18679: 
; 18680: 			// å¦ææ»é¼ å·¦é®æç
; 18681: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  001ff	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4
  00205	53		 push	 ebx
  00206	8b 58 18	 mov	 ebx, DWORD PTR [eax+24]
  00209	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0020c	89 85 dc fd ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  00212	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00217	89 9d e0 fd ff
	ff		 mov	 DWORD PTR _x$1$[ebp], ebx
  0021d	a8 01		 test	 al, 1
  0021f	0f 84 e7 00 00
	00		 je	 $LN3@AuctionLis

; 18682: 			{
; 18683: 				for (i = 0; i < 10; i++)

  00225	33 f6		 xor	 esi, esi
  00227	bb 04 00 00 00	 mov	 ebx, OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A+4
  0022c	0f 1f 40 00	 npad	 4
$LL4@AuctionLis:

; 18684: 				{
; 18685: 					nList[i][1] = 0;
; 18686: 					if (HitFontNo == nList[i][0])

  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00235	c7 04 f5 04 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8+4], 0
  00240	3b 04 f5 00 00
	00 00		 cmp	 eax, DWORD PTR ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8]
  00247	75 67		 jne	 SHORT $LN23@AuctionLis

; 18687: 					{
; 18688: 						// å¦æç¹éå°è¿ä¸ªå§æçç©å®¶æ¯è¿ä¸ªå§æçåå§æè
; 18689: 						if (!strcmp(aldArea[i].cdkey, id))

  00249	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?1??AuctionListWT@@YAXXZ@4PADA
  0024e	8b c3		 mov	 eax, ebx
$LL66@AuctionLis:
  00250	8a 10		 mov	 dl, BYTE PTR [eax]
  00252	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00254	75 1a		 jne	 SHORT $LN67@AuctionLis
  00256	84 d2		 test	 dl, dl
  00258	74 12		 je	 SHORT $LN68@AuctionLis
  0025a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0025d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00260	75 0e		 jne	 SHORT $LN67@AuctionLis
  00262	83 c0 02	 add	 eax, 2
  00265	83 c1 02	 add	 ecx, 2
  00268	84 d2		 test	 dl, dl
  0026a	75 e4		 jne	 SHORT $LL66@AuctionLis
$LN68@AuctionLis:
  0026c	33 c0		 xor	 eax, eax
  0026e	eb 05		 jmp	 SHORT $LN69@AuctionLis
$LN67@AuctionLis:
  00270	1b c0		 sbb	 eax, eax
  00272	83 c8 01	 or	 eax, 1
$LN69@AuctionLis:
  00275	33 c9		 xor	 ecx, ecx

; 18690: 						{
; 18691: 							bIsThisPlayerAuction = TRUE;
; 18692: 							nButton[0][1] = 0;
; 18693: 						}
; 18694: 						else bIsThisPlayerAuction = FALSE;
; 18695: 						nListSelect = i;

  00277	89 35 00 00 00
	00		 mov	 DWORD PTR ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA, esi
  0027d	85 c0		 test	 eax, eax

; 18696: 						nList[i][1] = 1;

  0027f	c7 04 f5 04 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8+4], 1

; 18697: 						nButton[1][1] = 0;

  0028a	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12, ecx
  00290	0f 44 f9	 cmove	 edi, ecx

; 18698: 						bPress = TRUE;

  00293	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionListWT@@YAXXZ@4HA, 1
  0029d	33 d2		 xor	 edx, edx
  0029f	89 3d 04 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4, edi
  002a5	85 c0		 test	 eax, eax
  002a7	0f 94 c2	 sete	 dl
  002aa	89 15 00 00 00
	00		 mov	 DWORD PTR ?bIsThisPlayerAuction@?1??AuctionListWT@@YAXXZ@4HA, edx
$LN23@AuctionLis:

; 18699: 					}
; 18700: 					if (i < 5)

  002b0	83 fe 05	 cmp	 esi, 5
  002b3	7d 33		 jge	 SHORT $LN2@AuctionLis

; 18701: 					{
; 18702: 						if (HitDispNo == nButton[i][0] && nButton[i][1] == 0)

  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  002ba	3b 04 f5 00 00
	00 00		 cmp	 eax, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8]
  002c1	75 25		 jne	 SHORT $LN2@AuctionLis
  002c3	83 3c f5 04 00
	00 00 00	 cmp	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8+4], 0
  002cb	75 1b		 jne	 SHORT $LN2@AuctionLis

; 18703: 						{
; 18704: 							nButton[i][1] = 1;

  002cd	c7 04 f5 04 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA[esi*8+4], 1

; 18705: 							bPress = TRUE;

  002d8	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4
  002de	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionListWT@@YAXXZ@4HA, 1
$LN2@AuctionLis:

; 18682: 			{
; 18683: 				for (i = 0; i < 10; i++)

  002e8	81 c3 18 01 00
	00		 add	 ebx, 280		; 00000118H
  002ee	46		 inc	 esi
  002ef	81 fb f4 0a 00
	00		 cmp	 ebx, OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A+2804
  002f5	0f 8c 35 ff ff
	ff		 jl	 $LL4@AuctionLis

; 18675: 		{
; 18676: 			// åº§æ è®¾å®
; 18677: 			x = pActAuctionWT->x;
; 18678: 			y = pActAuctionWT->y;
; 18679: 
; 18680: 			// å¦ææ»é¼ å·¦é®æç
; 18681: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  002fb	8b 35 14 00 00
	00		 mov	 esi, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+20
  00301	8b 9d e0 fd ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00307	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
$LN3@AuctionLis:

; 18706: 						}
; 18707: 					}
; 18708: 				}
; 18709: 			}
; 18710: 			// å¦ææ»é¼ å·¦é®æ¾å¼
; 18711: 			if (mouse.onceState & MOUSE_LEFT_CRICK_UP)

  0030c	b9 02 00 00 00	 mov	 ecx, 2
  00311	a8 04		 test	 al, 4
  00313	74 36		 je	 SHORT $LN6@AuctionLis

; 18712: 			{
; 18713: 				if (!bIsThisPlayerAuction) nButton[0][1] = 2;

  00315	33 ff		 xor	 edi, edi

; 18714: 				else  									  nButton[0][1] = 0;
; 18715: 				nButton[1][1] = 2;

  00317	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12, ecx
  0031d	85 d2		 test	 edx, edx
  0031f	b8 04 00 00 00	 mov	 eax, OFFSET ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA+4
  00324	0f 44 f9	 cmove	 edi, ecx
  00327	89 3d 04 00 00
	00		 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4, edi
  0032d	0f 1f 00	 npad	 3
$LL7@AuctionLis:

; 18717: 				{
; 18718: 					if (nList[i][1])

  00330	83 38 00	 cmp	 DWORD PTR [eax], 0
  00333	75 0c		 jne	 SHORT $LN55@AuctionLis

; 18716: 				for (i = 0; i < 10; i++)

  00335	83 c0 08	 add	 eax, 8
  00338	3d 54 00 00 00	 cmp	 eax, OFFSET ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA+84
  0033d	7c f1		 jl	 SHORT $LL7@AuctionLis

; 18717: 				{
; 18718: 					if (nList[i][1])

  0033f	eb 0a		 jmp	 SHORT $LN6@AuctionLis
$LN55@AuctionLis:

; 18719: 					{
; 18720: 						nButton[1][1] = 0;

  00341	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12, 0
$LN6@AuctionLis:

; 18721: 						break;
; 18722: 					}
; 18723: 				}
; 18724: 			}
; 18725: 			// æäºé¢åææäºè§çèµæ  ä¼ aldArea[nListSelect].indexåå»server
; 18726: 			if (nButton[0][1] == 1 || nButton[1][1] == 1)

  0034b	83 ff 01	 cmp	 edi, 1
  0034e	0f 84 e9 03 00
	00		 je	 $LN65@AuctionLis
  00354	83 3d 0c 00 00
	00 01		 cmp	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12, 1
  0035b	0f 84 d5 03 00
	00		 je	 $LN34@AuctionLis

; 18744: 				return;
; 18745: 			}
; 18746: 			// æäº??ææäº?? ä¼ aldArea[0].indexåå»server
; 18747: 			if ((nButton[2][1] == 1 || nButton[3][1] == 1) && bPress)

  00361	83 fe 01	 cmp	 esi, 1
  00364	74 0d		 je	 SHORT $LN39@AuctionLis
  00366	83 3d 1c 00 00
	00 01		 cmp	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+28, 1
  0036d	0f 85 df 00 00
	00		 jne	 $LN38@AuctionLis
$LN39@AuctionLis:
  00373	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bPress@?1??AuctionListWT@@YAXXZ@4HA, 0
  0037a	0f 84 d2 00 00
	00		 je	 $LN38@AuctionLis

; 18748: 			{
; 18749: 				int type;
; 18750: 
; 18751: 				if (nButton[2][1] == 1)

  00380	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nListNum@?1??AuctionListWT@@YAXXZ@4HA
  00386	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0038b	83 fe 01	 cmp	 esi, 1
  0038e	75 0a		 jne	 SHORT $LN40@AuctionLis

; 18752: 				{
; 18753: 					type = WINDOW_BUTTONTYPE_PRE;

  00390	be 10 00 00 00	 mov	 esi, 16			; 00000010H

; 18754: 					nListNum -= 10;

  00395	83 c1 f6	 add	 ecx, -10		; fffffff6H

; 18755: 					nCurrentPage = nListNum / 10 + 1;
; 18756: 				}

  00398	eb 08		 jmp	 SHORT $LN80@AuctionLis
$LN40@AuctionLis:

; 18757: 				else
; 18758: 				{
; 18759: 					type = WINDOW_BUTTONTYPE_NEXT;

  0039a	be 20 00 00 00	 mov	 esi, 32			; 00000020H

; 18760: 					nListNum += 10;

  0039f	83 c1 0a	 add	 ecx, 10			; 0000000aH
$LN80@AuctionLis:

; 18761: 					nCurrentPage = nListNum / 10 + 1;
; 18762: 				}
; 18763: 				ZeroMemory(szSendMsg, sizeof(szSendMsg));

  003a2	f7 e9		 imul	 ecx
  003a4	68 08 02 00 00	 push	 520			; 00000208H
  003a9	c1 fa 02	 sar	 edx, 2
  003ac	8b c2		 mov	 eax, edx
  003ae	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nListNum@?1??AuctionListWT@@YAXXZ@4HA, ecx
  003b4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003b7	03 c2		 add	 eax, edx
  003b9	40		 inc	 eax
  003ba	a3 00 00 00 00	 mov	 DWORD PTR ?nCurrentPage@?1??AuctionListWT@@YAXXZ@4HA, eax
  003bf	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  003c5	6a 00		 push	 0
  003c7	50		 push	 eax
  003c8	e8 00 00 00 00	 call	 _memset

; 18764: 				sprintf(szSendMsg[1], "%d|", aldArea[0].index);

  003cd	ff 35 00 00 00
	00		 push	 DWORD PTR ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A
  003d3	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  003d9	68 00 00 00 00	 push	 OFFSET ??_C@_03IFADCKOJ@?$CFd?$HM@
  003de	50		 push	 eax
  003df	e8 00 00 00 00	 call	 _sprintf

; 18765: 				makeEscapeString(szSendMsg[1], szSendMsg[0], sizeof(szSendMsg[0]));

  003e4	68 04 01 00 00	 push	 260			; 00000104H
  003e9	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  003ef	50		 push	 eax
  003f0	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  003f6	50		 push	 eax
  003f7	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  003fc	83 c4 24	 add	 esp, 36			; 00000024H

; 18766: 				if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, type, szSendMsg[0]);

  003ff	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00405	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0040c	50		 push	 eax
  0040d	56		 push	 esi
  0040e	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00414	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  0041a	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00420	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00426	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0042c	74 07		 je	 SHORT $LN42@AuctionLis
  0042e	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00433	eb 05		 jmp	 SHORT $LN81@AuctionLis
$LN42@AuctionLis:

; 18767: 				else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, type, szSendMsg[0]);

  00435	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN81@AuctionLis:

; 18768: 				bPress = FALSE;

  0043a	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+4
  00440	83 c4 1c	 add	 esp, 28			; 0000001cH
  00443	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionListWT@@YAXXZ@4HA, 0
  0044d	b9 02 00 00 00	 mov	 ecx, 2
$LN38@AuctionLis:

; 18769: 			}
; 18770: 			// å¦ææäºì·¨ì
; 18771: 			if (nButton[4][1])

  00452	8b b5 dc fd ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  00458	81 c3 b7 01 00
	00		 add	 ebx, 439		; 000001b7H
  0045e	a1 24 00 00 00	 mov	 eax, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+36
  00463	81 c6 82 01 00
	00		 add	 esi, 386		; 00000182H
  00469	85 c0		 test	 eax, eax
  0046b	74 62		 je	 SHORT $LN44@AuctionLis

; 18772: 			{
; 18773: 				StockDispBuffer(x + 439, y + 386, DISP_PRIO_IME3, AUCTION_CANCEL_Y_U + nButton[4][1], 2);

  0046d	6a 02		 push	 2
  0046f	05 ac 66 00 00	 add	 eax, 26284		; 000066acH
  00474	50		 push	 eax
  00475	6a 69		 push	 105			; 00000069H
  00477	56		 push	 esi
  00478	53		 push	 ebx
  00479	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18774: 				windowTypeWN = -1;
; 18775: 				bNewData = FALSE;
; 18776: 				DeathAction(pActAuctionWT);

  0047e	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00484	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  0048e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bNewData@@3HA, 0 ; bNewData
  00498	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18777: 				pActAuctionWT = NULL;
; 18778: 				play_se(217, 320, 240);

  0049d	68 f0 00 00 00	 push	 240			; 000000f0H
  004a2	68 40 01 00 00	 push	 320			; 00000140H
  004a7	68 d9 00 00 00	 push	 217			; 000000d9H
  004ac	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  004b6	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004bb	83 c4 24	 add	 esp, 36			; 00000024H
  004be	5b		 pop	 ebx
  004bf	5f		 pop	 edi
  004c0	5e		 pop	 esi

; 18812: 		}
; 18813: 	}
; 18814: }

  004c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004c4	33 cd		 xor	 ecx, ebp
  004c6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004cb	8b e5		 mov	 esp, ebp
  004cd	5d		 pop	 ebp
  004ce	c3		 ret	 0
$LN44@AuctionLis:

; 18779: 				return;
; 18780: 			}
; 18781: 
; 18782: 			// æ¾ç¤ºåè®¾å®buttonåºç°çä½ç½®
; 18783: 			nButton[0][0] = StockDispBuffer(x + 102, y + 386, DISP_PRIO_IME3, AUCTION_GET_BACK_U + nButton[0][1], nButton[0][1] == 2 ? 0 : 2);

  004cf	8b c1		 mov	 eax, ecx
  004d1	33 c9		 xor	 ecx, ecx
  004d3	83 ff 02	 cmp	 edi, 2
  004d6	0f 44 c1	 cmove	 eax, ecx
  004d9	50		 push	 eax
  004da	8d 87 a0 66 00
	00		 lea	 eax, DWORD PTR [edi+26272]
  004e0	50		 push	 eax
  004e1	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  004e7	6a 69		 push	 105			; 00000069H
  004e9	83 c0 66	 add	 eax, 102		; 00000066H
  004ec	56		 push	 esi
  004ed	50		 push	 eax
  004ee	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004f3	a3 00 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA, eax

; 18784: 			nButton[1][0] = StockDispBuffer(x + 172, y + 386, DISP_PRIO_IME3, AUCTION_SEE_DATA_U + nButton[1][1], nButton[1][1] == 2 ? 0 : 2);

  004f8	bf 02 00 00 00	 mov	 edi, 2
  004fd	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+12
  00502	33 d2		 xor	 edx, edx
  00504	3b c7		 cmp	 eax, edi
  00506	8b cf		 mov	 ecx, edi
  00508	0f 44 ca	 cmove	 ecx, edx
  0050b	05 a3 66 00 00	 add	 eax, 26275		; 000066a3H
  00510	51		 push	 ecx
  00511	50		 push	 eax
  00512	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00518	6a 69		 push	 105			; 00000069H
  0051a	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  0051f	56		 push	 esi
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00526	a3 08 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+8, eax

; 18785: 			nButton[2][0] = StockDispBuffer(x + 299, y + 386, DISP_PRIO_IME3, AUCTION_PAGE_UP_U + nButton[2][1], nButton[2][1] == 2 ? 0 : 2);

  0052b	33 d2		 xor	 edx, edx
  0052d	a1 14 00 00 00	 mov	 eax, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+20
  00532	8b cf		 mov	 ecx, edi
  00534	3b c7		 cmp	 eax, edi
  00536	0f 44 ca	 cmove	 ecx, edx
  00539	05 a6 66 00 00	 add	 eax, 26278		; 000066a6H
  0053e	51		 push	 ecx
  0053f	50		 push	 eax
  00540	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00546	6a 69		 push	 105			; 00000069H
  00548	05 2b 01 00 00	 add	 eax, 299		; 0000012bH
  0054d	56		 push	 esi
  0054e	50		 push	 eax
  0054f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00554	a3 10 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+16, eax

; 18786: 			nButton[3][0] = StockDispBuffer(x + 369, y + 386, DISP_PRIO_IME3, AUCTION_PAGE_DOWN_U + nButton[3][1], nButton[3][1] == 2 ? 0 : 2);

  00559	33 c9		 xor	 ecx, ecx
  0055b	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+28
  00560	3b c7		 cmp	 eax, edi
  00562	0f 44 f9	 cmove	 edi, ecx
  00565	05 a9 66 00 00	 add	 eax, 26281		; 000066a9H
  0056a	57		 push	 edi
  0056b	8b bd e0 fd ff
	ff		 mov	 edi, DWORD PTR _x$1$[ebp]
  00571	50		 push	 eax
  00572	6a 69		 push	 105			; 00000069H
  00574	56		 push	 esi
  00575	8d 87 71 01 00
	00		 lea	 eax, DWORD PTR [edi+369]
  0057b	50		 push	 eax
  0057c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00581	83 c4 50	 add	 esp, 80			; 00000050H
  00584	a3 18 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+24, eax

; 18787: 			nButton[4][0] = StockDispBuffer(x + 439, y + 386, DISP_PRIO_IME3, AUCTION_CANCEL_Y_U, 2);

  00589	6a 02		 push	 2
  0058b	68 ac 66 00 00	 push	 26284			; 000066acH
  00590	6a 69		 push	 105			; 00000069H
  00592	56		 push	 esi
  00593	53		 push	 ebx
  00594	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18788: 			// ç§åºç®åé¡µæ°
; 18789: 			sprintf(temp, "%d/9 é¡µ", nCurrentPage);

  00599	ff 35 00 00 00
	00		 push	 DWORD PTR ?nCurrentPage@?1??AuctionListWT@@YAXXZ@4HA
  0059f	a3 20 00 00 00	 mov	 DWORD PTR ?nButton@?1??AuctionListWT@@YAXXZ@4PAY01HA+32, eax
  005a4	8d 45 ec	 lea	 eax, DWORD PTR _temp$[ebp]
  005a7	68 00 00 00 00	 push	 OFFSET ??_C@_06MCFCBINE@?$CFd?19?5?$DP@
  005ac	50		 push	 eax
  005ad	e8 00 00 00 00	 call	 _sprintf

; 18790: 			StockFontBuffer(x + 420, y + 350, FONT_PRIO_FRONT, 0, temp, 0);

  005b2	8b 9d dc fd ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  005b8	8d 45 ec	 lea	 eax, DWORD PTR _temp$[ebp]
  005bb	6a 00		 push	 0
  005bd	50		 push	 eax
  005be	6a 00		 push	 0
  005c0	8d 83 5e 01 00
	00		 lea	 eax, DWORD PTR [ebx+350]
  005c6	6a 01		 push	 1
  005c8	50		 push	 eax
  005c9	8d 87 a4 01 00
	00		 lea	 eax, DWORD PTR [edi+420]
  005cf	50		 push	 eax
  005d0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  005d5	83 c4 38	 add	 esp, 56			; 00000038H
  005d8	33 ff		 xor	 edi, edi
  005da	be 15 00 00 00	 mov	 esi, OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A+21
  005df	83 c3 6e	 add	 ebx, 110		; 0000006eH
$LL10@AuctionLis:

; 18792: 			{
; 18793: 				if (strlen(aldArea[i].account) > 0)

  005e2	8b c6		 mov	 eax, esi
  005e4	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL70@AuctionLis:
  005e7	8a 08		 mov	 cl, BYTE PTR [eax]
  005e9	40		 inc	 eax
  005ea	84 c9		 test	 cl, cl
  005ec	75 f9		 jne	 SHORT $LL70@AuctionLis
  005ee	2b c2		 sub	 eax, edx
  005f0	0f 84 dd 00 00
	00		 je	 $LN8@AuctionLis

; 18794: 				{
; 18795: 					// ç§åºç¼å·
; 18796: 					StockFontBuffer(x + 92, y + 110 + i * 25, FONT_PRIO_FRONT, 0, itoa(nListNum + i, temp, 10), 0);

  005f6	6a 00		 push	 0
  005f8	6a 0a		 push	 10			; 0000000aH
  005fa	8d 45 ec	 lea	 eax, DWORD PTR _temp$[ebp]
  005fd	50		 push	 eax
  005fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nListNum@?1??AuctionListWT@@YAXXZ@4HA
  00603	03 c7		 add	 eax, edi
  00605	50		 push	 eax
  00606	e8 00 00 00 00	 call	 _itoa
  0060b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0060e	50		 push	 eax
  0060f	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00615	6a 00		 push	 0
  00617	6a 01		 push	 1
  00619	83 c0 5c	 add	 eax, 92			; 0000005cH
  0061c	53		 push	 ebx
  0061d	50		 push	 eax
  0061e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00623	8b 8d e0 fd ff
	ff		 mov	 ecx, DWORD PTR _x$1$[ebp]
  00629	83 c4 18	 add	 esp, 24			; 00000018H
  0062c	81 c1 84 00 00
	00		 add	 ecx, 132		; 00000084H

; 18797: 					// ç§åºåè¿°
; 18798: 					// ä¿®æ¹åè¡¨
; 18799: 					if (windowTypeWN == WINDOW_MESSAGETYPE_AUCTIONLIST_MODIFY)

  00632	83 3d 00 00 00
	00 27		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 39 ; windowTypeWN, 00000027H
  00639	75 71		 jne	 SHORT $LN46@AuctionLis

; 18800: 					{
; 18801: 						// å¦ææ¯è¿ä¸ªç©å®¶çå§æ,åè¿°ç§çº¢å­;ç¹éå°ç§é»å­
; 18802: 						if (!strcmp(aldArea[i].cdkey, id)) nList[i][0] = StockFontBuffer(x + 132, y + 110 + i * 25, FONT_PRIO_FRONT, nListSelect == i ? FONT_PAL_YELLOW : FONT_PAL_RED, aldArea[i].account, 2);

  0063b	b9 00 00 00 00	 mov	 ecx, OFFSET ?id@?1??AuctionListWT@@YAXXZ@4PADA
  00640	8d 46 ef	 lea	 eax, DWORD PTR [esi-17]
$LL71@AuctionLis:
  00643	8a 10		 mov	 dl, BYTE PTR [eax]
  00645	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00647	75 1a		 jne	 SHORT $LN72@AuctionLis
  00649	84 d2		 test	 dl, dl
  0064b	74 12		 je	 SHORT $LN73@AuctionLis
  0064d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00650	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00653	75 0e		 jne	 SHORT $LN72@AuctionLis
  00655	83 c0 02	 add	 eax, 2
  00658	83 c1 02	 add	 ecx, 2
  0065b	84 d2		 test	 dl, dl
  0065d	75 e4		 jne	 SHORT $LL71@AuctionLis
$LN73@AuctionLis:
  0065f	33 c0		 xor	 eax, eax
  00661	eb 05		 jmp	 SHORT $LN74@AuctionLis
$LN72@AuctionLis:
  00663	1b c0		 sbb	 eax, eax
  00665	83 c8 01	 or	 eax, 1
$LN74@AuctionLis:
  00668	85 c0		 test	 eax, eax
  0066a	75 25		 jne	 SHORT $LN48@AuctionLis
  0066c	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA, edi
  00672	6a 02		 push	 2
  00674	0f 95 c0	 setne	 al
  00677	56		 push	 esi
  00678	8d 04 45 04 00
	00 00		 lea	 eax, DWORD PTR [eax*2+4]
  0067f	50		 push	 eax
  00680	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00686	6a 01		 push	 1
  00688	53		 push	 ebx
  00689	05 84 00 00 00	 add	 eax, 132		; 00000084H
  0068e	50		 push	 eax
  0068f	eb 33		 jmp	 SHORT $LN82@AuctionLis
$LN48@AuctionLis:

; 18803: 						// å¶å®çåè¿°ä¸è½ç¹éç§ç½å­
; 18804: 						else StockFontBuffer(x + 132, y + 110 + i * 25, FONT_PRIO_FRONT, 0, aldArea[i].account, 0);

  00691	8b 85 e0 fd ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  00697	6a 00		 push	 0
  00699	56		 push	 esi
  0069a	6a 00		 push	 0
  0069c	6a 01		 push	 1
  0069e	05 84 00 00 00	 add	 eax, 132		; 00000084H
  006a3	53		 push	 ebx
  006a4	50		 push	 eax
  006a5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18805: 					}

  006aa	eb 24		 jmp	 SHORT $LN83@AuctionLis
$LN46@AuctionLis:

; 18806: 					// è´­ä¹°åè¡¨
; 18807: 					else nList[i][0] = StockFontBuffer(x + 132, y + 110 + i * 25, FONT_PRIO_FRONT, nListSelect == i ? FONT_PAL_YELLOW : 0, aldArea[i].account, 2);

  006ac	6a 02		 push	 2
  006ae	33 c0		 xor	 eax, eax
  006b0	ba 04 00 00 00	 mov	 edx, 4
  006b5	39 3d 00 00 00
	00		 cmp	 DWORD PTR ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA, edi
  006bb	56		 push	 esi
  006bc	0f 44 c2	 cmove	 eax, edx
  006bf	50		 push	 eax
  006c0	6a 01		 push	 1
  006c2	53		 push	 ebx
  006c3	51		 push	 ecx
$LN82@AuctionLis:

; 18791: 			for (i = 0; i < 10; i++)

  006c4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  006c9	89 04 fd 00 00
	00 00		 mov	 DWORD PTR ?nList@?1??AuctionListWT@@YAXXZ@4PAY01HA[edi*8], eax
$LN83@AuctionLis:
  006d0	83 c4 18	 add	 esp, 24			; 00000018H
$LN8@AuctionLis:
  006d3	81 c6 18 01 00
	00		 add	 esi, 280		; 00000118H
  006d9	47		 inc	 edi
  006da	83 c3 19	 add	 ebx, 25			; 00000019H
  006dd	81 fe 05 0b 00
	00		 cmp	 esi, OFFSET ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A+2821
  006e3	0f 8c f9 fe ff
	ff		 jl	 $LL10@AuctionLis

; 18808: 				}
; 18809: 			}
; 18810: 			if (windowTypeWN == WINDOW_MESSAGETYPE_AUCTIONLIST_MODIFY) StockDispBuffer(244, 72, DISP_PRIO_IME3, AUCTION_LIST_1, 1);

  006e9	83 3d 00 00 00
	00 27		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 39 ; windowTypeWN, 00000027H
  006f0	75 18		 jne	 SHORT $LN50@AuctionLis
  006f2	6a 01		 push	 1
  006f4	68 9f 66 00 00	 push	 26271			; 0000669fH
  006f9	6a 69		 push	 105			; 00000069H
  006fb	6a 48		 push	 72			; 00000048H
  006fd	68 f4 00 00 00	 push	 244			; 000000f4H
  00702	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00707	83 c4 14	 add	 esp, 20			; 00000014H
$LN50@AuctionLis:

; 18811: 			StockDispBuffer(320, 240, DISP_PRIO_IME3, AUCTION_LIST, 1);

  0070a	6a 01		 push	 1
  0070c	68 9e 66 00 00	 push	 26270			; 0000669eH
  00711	6a 69		 push	 105			; 00000069H
  00713	68 f0 00 00 00	 push	 240			; 000000f0H
  00718	68 40 01 00 00	 push	 320			; 00000140H
  0071d	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00722	83 c4 14	 add	 esp, 20			; 00000014H
  00725	5b		 pop	 ebx
  00726	5f		 pop	 edi
  00727	5e		 pop	 esi

; 18812: 		}
; 18813: 	}
; 18814: }

  00728	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0072b	33 cd		 xor	 ecx, ebp
  0072d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00732	8b e5		 mov	 esp, ebp
  00734	5d		 pop	 ebp
  00735	c3		 ret	 0
$LN34@AuctionLis:

; 18731: 				else                   type = WINDOW_BUTTONTYPE_YES;

  00736	be 04 00 00 00	 mov	 esi, 4
  0073b	eb 05		 jmp	 SHORT $LN35@AuctionLis
$LN65@AuctionLis:

; 18727: 			{
; 18728: 				int type;
; 18729: 
; 18730: 				if (nButton[0][1] == 1) type = WINDOW_BUTTONTYPE_OK;

  0073d	be 01 00 00 00	 mov	 esi, 1
$LN35@AuctionLis:

; 18732: 
; 18733: 				ZeroMemory(szSendMsg, sizeof(szSendMsg));

  00742	68 08 02 00 00	 push	 520			; 00000208H
  00747	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  0074d	6a 00		 push	 0
  0074f	50		 push	 eax
  00750	e8 00 00 00 00	 call	 _memset

; 18734: 				sprintf(szSendMsg[1], "%d|", aldArea[nListSelect].index);

  00755	69 05 00 00 00
	00 18 01 00 00	 imul	 eax, DWORD PTR ?nListSelect@?1??AuctionListWT@@YAXXZ@4HA, 280
  0075f	ff b0 00 00 00
	00		 push	 DWORD PTR ?aldArea@?1??AuctionListWT@@YAXXZ@4PAU_AUCTION_LIST_DATA@@A[eax]
  00765	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  0076b	68 00 00 00 00	 push	 OFFSET ??_C@_03IFADCKOJ@?$CFd?$HM@
  00770	50		 push	 eax
  00771	e8 00 00 00 00	 call	 _sprintf

; 18735: 				makeEscapeString(szSendMsg[1], szSendMsg[0], sizeof(szSendMsg[0]));

  00776	68 04 01 00 00	 push	 260			; 00000104H
  0077b	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00781	50		 push	 eax
  00782	8d 85 e8 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  00788	50		 push	 eax
  00789	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  0078e	83 c4 24	 add	 esp, 36			; 00000024H

; 18736: 				if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, type, szSendMsg[0]);

  00791	8d 85 e4 fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00797	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0079e	50		 push	 eax
  0079f	56		 push	 esi
  007a0	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  007a6	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  007ac	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  007b2	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  007b8	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  007be	74 07		 je	 SHORT $LN36@AuctionLis
  007c0	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  007c5	eb 05		 jmp	 SHORT $LN84@AuctionLis
$LN36@AuctionLis:

; 18737: 				else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, type, szSendMsg[0]);

  007c7	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN84@AuctionLis:

; 18738: 
; 18739: 				windowTypeWN = -1;

  007cc	83 c4 1c	 add	 esp, 28			; 0000001cH
  007cf	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 18740: 				bNewData = FALSE;

  007d9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bNewData@@3HA, 0 ; bNewData

; 18741: 				DeathAction(pActAuctionWT);

  007e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  007e9	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18742: 				pActAuctionWT = NULL;
; 18743: 				play_se(217, 320, 240);

  007ee	68 f0 00 00 00	 push	 240			; 000000f0H
  007f3	68 40 01 00 00	 push	 320			; 00000140H
  007f8	68 d9 00 00 00	 push	 217			; 000000d9H
  007fd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  00807	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0080c	83 c4 10	 add	 esp, 16			; 00000010H
  0080f	5b		 pop	 ebx
$LN77@AuctionLis:

; 18812: 		}
; 18813: 	}
; 18814: }

  00810	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00813	5f		 pop	 edi
  00814	33 cd		 xor	 ecx, ebp
  00816	5e		 pop	 esi
  00817	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0081c	8b e5		 mov	 esp, ebp
  0081e	5d		 pop	 ebp
  0081f	c3		 ret	 0
?AuctionListWT@@YAXXZ ENDP				; AuctionListWT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?AuctionNewWT@@YAXXZ
_TEXT	SEGMENT
tv2293 = -820						; size = 4
tv2290 = -816						; size = 4
_y$1$ = -812						; size = 4
tv2303 = -808						; size = 4
tv2298 = -808						; size = 4
tv2292 = -808						; size = 4
tv2301 = -804						; size = 4
tv2294 = -804						; size = 4
tv2299 = -800						; size = 4
tv2297 = -800						; size = 4
_x$1$ = -796						; size = 4
_szSendMsg$ = -792					; size = 780
_temp$ = -12						; size = 8
__$ArrayPad$ = -4					; size = 4
?AuctionNewWT@@YAXXZ PROC				; AuctionNewWT, COMDAT

; 18250: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 34 03 00
	00		 sub	 esp, 820		; 00000334H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi

; 18251: 	static ACTION* pShowPet1 = NULL, * pShowPet2 = NULL;
; 18252: 	static int nButton1[3][2]; // nBotton1[x][y]-> x:0->ä¸ç®­å¤´ x:1->ok x:2->ä¸ç®­å¤´  y:0->è¢«ç¹éæ¶çæé®ç¼å·
; 18253: 														 //                                                   y:1->ç¹éç¶æ 0->æ²¡è¢«ç¹éå° 1->è¢«ç¹éå°
; 18254: 	static int nButton2[2][2]; // nBotton2[x][y]-> x:0->?? x:1->ì·¨ì y:0->è¢«ç¹éæ¶çæé®ç¼å·
; 18255: 							 //                                      y:1->ç¹éç¶æ 0->æ²¡è¢«ç¹éå° 1->è¢«ç¹éå°
; 18256: 	static int nItem[MAX_ITEM - MAX_ITEMSTART][2];	 // nItem[x][y]-> x:->ç¬¬å ä¸ªç©å(å³ä¸å¼å§åå³ç®èµ·0~14) y:0->è¢«ç¹éæ¶çæé®ç¼å·
; 18257: 																		 //                                                    y:1->ç¹éç¶æ 0->æ²¡è¢«ç¹éå° 1->è¢«ç¹éå° 
; 18258: 	static int nPet, nPetShow;	 // nPet:å³è¾¹åè¡¨çå® ç©æ¯ç¬¬å åª nPetShow:è¦åçå® ç©
; 18259: 	static int nItemSelect;		 // ç®åéå°çéå·æ¯ç¬¬å ä¸ª
; 18260: 	static int nAuctionKind;	 // è¦æåçæ¯å® ç©è¿æ¯éå· 1:Pet 2:Item
; 18261: 	static BOOL bPress;
; 18262: 	int x, y, i, j, k;
; 18263: 	char temp[8];
; 18264: 	char szSendMsg[3][260];			 // szSendMsg[x][256]-> x:0->æååè¿° x:1->éå°serverç«¯çèµæ
; 18265: 
; 18266: 	if (CheckMenuFlag()
; 18267: 		|| (joy_trg[0] & JOY_ESC)
; 18268: 		|| actBtn == 1
; 18269: 		|| menuBtn == 1
; 18270: 		|| disconnectServerFlag == TRUE
; 18271: 		|| wnCloseFlag == 1)

  00015	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  0001a	85 c0		 test	 eax, eax
  0001c	0f 85 64 0c 00
	00		 jne	 $LN33@AuctionNew
  00022	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0002c	0f 85 54 0c 00
	00		 jne	 $LN33@AuctionNew
  00032	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  0003a	0f 84 46 0c 00
	00		 je	 $LN33@AuctionNew
  00040	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00048	0f 84 38 0c 00
	00		 je	 $LN33@AuctionNew
  0004e	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00055	0f 84 2b 0c 00
	00		 je	 $LN33@AuctionNew
  0005b	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00063	0f 84 1d 0c 00
	00		 je	 $LN33@AuctionNew

; 18284: 			return;
; 18285: 		}
; 18286: 	}
; 18287: 	// å¦æç®åæ²¡æäº§çå§æä»é¢
; 18288: 	if (pActAuctionWT == NULL)

  00069	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  0006f	85 db		 test	 ebx, ebx
  00071	0f 84 8d 0c 00
	00		 je	 $LN140@AuctionNew

; 18336: 	}
; 18337: 	else
; 18338: 	{
; 18339: 		// å¦æè§çªå·²ç»å¼å¥½äº
; 18340: 		if (pActAuctionWT->hp > 0)

  00077	39 43 78	 cmp	 DWORD PTR [ebx+120], eax
  0007a	0f 8e f2 09 00
	00		 jle	 $LN70@AuctionNew

; 18341: 		{
; 18342: 			// åº§æ è®¾å®
; 18343: 			x = pActAuctionWT->x;

  00080	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]

; 18344: 			y = pActAuctionWT->y;
; 18345: 
; 18346: 			// å¦ææ»é¼ å·¦é®æç
; 18347: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  00083	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00089	8b 5b 1c	 mov	 ebx, DWORD PTR [ebx+28]
  0008c	89 85 e4 fc ff
	ff		 mov	 DWORD PTR _x$1$[ebp], eax
  00092	89 9d d4 fc ff
	ff		 mov	 DWORD PTR _y$1$[ebp], ebx
  00098	f6 c2 01	 test	 dl, 1
  0009b	74 69		 je	 SHORT $LN6@AuctionNew

; 18348: 			{
; 18349: 				for (i = 0; i < 3; i++)

  0009d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  000a3	33 c0		 xor	 eax, eax
$LL7@AuctionNew:

; 18350: 				{
; 18351: 					if (HitDispNo == nButton1[i][0] && !nButton1[i][1])

  000a5	3b 0c c5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8]
  000ac	75 1f		 jne	 SHORT $LN39@AuctionNew
  000ae	83 3c c5 04 00
	00 00 00	 cmp	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8+4], 0
  000b6	75 15		 jne	 SHORT $LN39@AuctionNew

; 18352: 					{
; 18353: 						nButton1[i][1] = 1;

  000b8	c7 04 c5 04 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8+4], 1

; 18354: 						bPress = TRUE;

  000c3	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 1
$LN39@AuctionNew:

; 18355: 					}
; 18356: 					if (i < 2)

  000cd	83 f8 02	 cmp	 eax, 2
  000d0	73 28		 jae	 SHORT $LN5@AuctionNew

; 18357: 					{
; 18358: 						if (HitDispNo == nButton2[i][0] && !nButton2[i][1])

  000d2	3b 0c c5 00 00
	00 00		 cmp	 ecx, DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8]
  000d9	75 1f		 jne	 SHORT $LN5@AuctionNew
  000db	83 3c c5 04 00
	00 00 00	 cmp	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8+4], 0
  000e3	75 15		 jne	 SHORT $LN5@AuctionNew

; 18359: 						{
; 18360: 							nButton2[i][1] = 1;

  000e5	c7 04 c5 04 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8+4], 1

; 18361: 							bPress = TRUE;

  000f0	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 1
$LN5@AuctionNew:

; 18348: 			{
; 18349: 				for (i = 0; i < 3; i++)

  000fa	40		 inc	 eax
  000fb	83 f8 03	 cmp	 eax, 3
  000fe	7c a5		 jl	 SHORT $LL7@AuctionNew
  00100	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
$LN6@AuctionNew:

; 18362: 						}
; 18363: 					}
; 18364: 				}
; 18365: 			}
; 18366: 			// å¦ææ»é¼ å·¦é®æ¾å¼
; 18367: 			if (mouse.onceState & MOUSE_LEFT_CRICK_UP)

  00106	f6 c2 04	 test	 dl, 4
  00109	74 3c		 je	 SHORT $LN42@AuctionNew

; 18368: 			{
; 18369: 				for (i = 0; i < 3; i++)
; 18370: 				{
; 18371: 					if (nButton1[i][1]) nButton1[i][1] = 0;

  0010b	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4, 0

; 18372: 					if (i < 2) if (nButton2[i][1]) nButton2[i][1] = 0;

  00115	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4, 0
  0011f	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+12, 0
  00129	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+12, 0
  00133	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+20, 0

; 18373: 				}
; 18374: 				bPress = FALSE;

  0013d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
$LN42@AuctionNew:

; 18375: 			}
; 18376: 
; 18377: 			for (i = 0; i < 3; i++)

  00147	05 ed 00 00 00	 add	 eax, 237		; 000000edH
  0014c	c7 85 dc fc ff
	ff 00 00 00 00	 mov	 DWORD PTR tv2301[ebp], 0
  00156	8d 8b f8 00 00
	00		 lea	 ecx, DWORD PTR [ebx+248]
  0015c	89 85 d8 fc ff
	ff		 mov	 DWORD PTR tv2303[ebp], eax
  00162	89 8d e0 fc ff
	ff		 mov	 DWORD PTR tv2299[ebp], ecx
  00168	8b d8		 mov	 ebx, eax
  0016a	57		 push	 edi
  0016b	0f 1f 44 00 00	 npad	 5
$LL13@AuctionNew:

; 18378: 			{
; 18379: 				for (j = 0; j < 5; j++)

  00170	8d 41 2f	 lea	 eax, DWORD PTR [ecx+47]
  00173	33 ff		 xor	 edi, edi
  00175	89 85 d8 fc ff
	ff		 mov	 DWORD PTR tv2298[ebp], eax
  0017b	8b f3		 mov	 esi, ebx
  0017d	0f 1f 00	 npad	 3
$LL16@AuctionNew:

; 18380: 				{
; 18381: 					if (MakeHitBox(x + 261 + j * 50 - 24, y + 272 + i * 48 - 24, x + 261 + j * 50 + 25, y + 272 + i * 48 + 23, DISP_PRIO_IME3) == TRUE)

  00180	6a 69		 push	 105			; 00000069H
  00182	50		 push	 eax
  00183	8d 46 31	 lea	 eax, DWORD PTR [esi+49]
  00186	50		 push	 eax
  00187	51		 push	 ecx
  00188	56		 push	 esi
  00189	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0018e	83 c4 14	 add	 esp, 20			; 00000014H
  00191	83 f8 01	 cmp	 eax, 1
  00194	75 09		 jne	 SHORT $LN14@AuctionNew

; 18382: 					{
; 18383: 						// å¦ææ»é¼ å·¦é®double-click
; 18384: 						if (mouse.onceState & MOUSE_LEFT_DBL_CRICK)

  00196	f6 05 2c 00 00
	00 10		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 16 ; 00000010H
  0019d	75 17		 jne	 SHORT $LN96@AuctionNew
$LN14@AuctionNew:

; 18378: 			{
; 18379: 				for (j = 0; j < 5; j++)

  0019f	47		 inc	 edi
  001a0	83 c6 32	 add	 esi, 50			; 00000032H
  001a3	83 ff 05	 cmp	 edi, 5
  001a6	7d 79		 jge	 SHORT $LN11@AuctionNew
  001a8	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv2299[ebp]
  001ae	8b 85 d8 fc ff
	ff		 mov	 eax, DWORD PTR tv2298[ebp]
  001b4	eb ca		 jmp	 SHORT $LL16@AuctionNew
$LN96@AuctionNew:

; 18385: 						{
; 18386: 							for (k = 0; k < MAX_ITEM - MAX_ITEMSTART; k++) nItem[k][1] = 0;

  001b6	b8 04 00 00 00	 mov	 eax, OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4
  001bb	0f 1f 44 00 00	 npad	 5
$LL19@AuctionNew:
  001c0	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  001c6	83 c0 08	 add	 eax, 8
  001c9	3d 6c 01 00 00	 cmp	 eax, OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA+364
  001ce	7c f0		 jl	 SHORT $LL19@AuctionNew

; 18387: 							// æ­¤éå·è¢«ç¹é
; 18388: 							nItem[i * 5 + j][1] = 1;

  001d0	8b 85 dc fc ff
	ff		 mov	 eax, DWORD PTR tv2301[ebp]

; 18389: 							// é£ä¸ä¸ªéå·è¢«ç¹éäº
; 18390: 							nItemSelect = i * 5 + j + 5;
; 18391: 							nAuctionKind = 2;
; 18392: 							DeathAction(pShowPet2);

  001d6	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  001dc	03 c7		 add	 eax, edi
  001de	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA, 2
  001e8	c7 04 c5 04 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8+4], 1
  001f3	83 c0 05	 add	 eax, 5
  001f6	a3 00 00 00 00	 mov	 DWORD PTR ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA, eax
  001fb	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18393: 							pShowPet2 = NULL;
; 18394: 							play_se(217, 320, 240);

  00200	68 f0 00 00 00	 push	 240			; 000000f0H
  00205	68 40 01 00 00	 push	 320			; 00000140H
  0020a	68 d9 00 00 00	 push	 217			; 000000d9H
  0020f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00219	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0021e	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@AuctionNew:

; 18375: 			}
; 18376: 
; 18377: 			for (i = 0; i < 3; i++)

  00221	8b 95 dc fc ff
	ff		 mov	 edx, DWORD PTR tv2301[ebp]
  00227	8b 8d e0 fc ff
	ff		 mov	 ecx, DWORD PTR tv2299[ebp]
  0022d	83 c2 05	 add	 edx, 5
  00230	83 c1 30	 add	 ecx, 48			; 00000030H
  00233	89 95 dc fc ff
	ff		 mov	 DWORD PTR tv2301[ebp], edx
  00239	89 8d e0 fc ff
	ff		 mov	 DWORD PTR tv2299[ebp], ecx
  0023f	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  00242	0f 8c 28 ff ff
	ff		 jl	 $LL13@AuctionNew

; 18395: 							break;
; 18396: 						}
; 18397: 					}
; 18398: 				}
; 18399: 			}
; 18400: 
; 18401: 			// æä¸äº??
; 18402: 			if (nButton2[0][1] || nButton2[1][1])

  00248	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4, 0
  0024f	8b 9d d4 fc ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  00255	0f 85 27 08 00
	00		 jne	 $LN139@AuctionNew
  0025b	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+12, 0
  00262	0f 85 a3 09 00
	00		 jne	 $LN58@AuctionNew

; 18443: 				return;
; 18444: 			}
; 18445: 
; 18446: 			// æä¸äºä¸ç®­å¤´
; 18447: 			if (nButton1[0][1] && bPress)

  00268	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4, 0
  0026f	0f 84 d1 00 00
	00		 je	 $LN144@AuctionNew
  00275	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  0027c	0f 84 c4 00 00
	00		 je	 $LN144@AuctionNew

; 18448: 			{
; 18449: 				bPress = FALSE;
; 18450: 				nPet = (nPet - 1 < 0 ? 4 : nPet - 1);

  00282	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA
  00287	be 04 00 00 00	 mov	 esi, 4

; 18451: 				DeathAction(pShowPet1);

  0028c	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00292	83 c0 ff	 add	 eax, -1
  00295	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  0029f	0f 48 c6	 cmovs	 eax, esi
  002a2	a3 00 00 00 00	 mov	 DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, eax
  002a7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18452: 				pShowPet1 = NULL;
; 18453: 				// ç§å® ç©
; 18454: 				for (i = 0; i < MAX_PET; i++)

  002ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA
  002b2	83 c4 04	 add	 esp, 4
  002b5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  002bf	33 d2		 xor	 edx, edx
  002c1	0f 1f 40 00 66
	66 66 0f 1f 84
	00 00 00 00 00	 npad	 15
$LL22@AuctionNew:

; 18455: 				{
; 18456: 					if (pet[nPet].useFlag == 1)

  002d0	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  002d6	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  002de	74 1e		 je	 SHORT $LN97@AuctionNew

; 18459: 						break;
; 18460: 					}
; 18461: 					else nPet = (nPet - 1 < 0 ? 4 : nPet - 1);

  002e0	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  002e3	85 c0		 test	 eax, eax
  002e5	8b c8		 mov	 ecx, eax
  002e7	0f 48 ce	 cmovs	 ecx, esi
  002ea	42		 inc	 edx
  002eb	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, ecx
  002f1	83 fa 05	 cmp	 edx, 5
  002f4	7c da		 jl	 SHORT $LL22@AuctionNew

; 18491: 				{
; 18492: 					if (pet[nPet].useFlag == 1)

  002f6	8b b5 e4 fc ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
  002fc	eb 2f		 jmp	 SHORT $LN21@AuctionNew
$LN97@AuctionNew:

; 18457: 					{
; 18458: 						pShowPet1 = MakeAnimDisp(x + 235 + 70, y + 55 + 120, pet[nPet].graNo, 0);

  002fe	8b b5 e4 fc ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
  00304	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  0030a	6a 00		 push	 0
  0030c	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  00312	8d 83 af 00 00
	00		 lea	 eax, DWORD PTR [ebx+175]
  00318	50		 push	 eax
  00319	8d 86 31 01 00
	00		 lea	 eax, DWORD PTR [esi+305]
  0031f	50		 push	 eax
  00320	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00325	83 c4 10	 add	 esp, 16			; 00000010H
  00328	a3 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, eax
$LN21@AuctionNew:

; 18462: 				}
; 18463: 				play_se(217, 320, 240);

  0032d	68 f0 00 00 00	 push	 240			; 000000f0H
  00332	68 40 01 00 00	 push	 320			; 00000140H
  00337	68 d9 00 00 00	 push	 217			; 000000d9H
  0033c	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00341	83 c4 0c	 add	 esp, 12			; 0000000cH
  00344	eb 06		 jmp	 SHORT $LN142@AuctionNew
$LN144@AuctionNew:

; 18464: 			}
; 18465: 			// æä¸äºok
; 18466: 			if (nButton1[1][1] && bPress)

  00346	8b b5 e4 fc ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
$LN142@AuctionNew:
  0034c	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+12, 0
  00353	0f 84 a7 00 00
	00		 je	 $LN62@AuctionNew
  00359	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00360	0f 84 9a 00 00
	00		 je	 $LN62@AuctionNew

; 18467: 			{
; 18468: 				nAuctionKind = 1;
; 18469: 				bPress = FALSE;
; 18470: 				nItem[nItemSelect - 5][1] = 0;
; 18471: 				//if(nPetShow != nPet && pShowPet1 != NULL)
; 18472: 				if (pShowPet1 != NULL)

  00366	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  0036d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA
  00372	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA, 1
  0037c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00386	c7 04 c5 dc ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA[eax*8-36], 0
  00391	74 56		 je	 SHORT $LN64@AuctionNew

; 18473: 				{
; 18474: 					nPetShow = nPet;

  00393	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA

; 18475: 					DeathAction(pShowPet2);

  00398	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  0039e	a3 00 00 00 00	 mov	 DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, eax
  003a3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18476: 					pShowPet2 = NULL;
; 18477: 					// ç§è¦è¢«æåçå® ç©
; 18478: 					if (pet[nPetShow].useFlag == 1) pShowPet2 = MakeAnimDisp(x + 15 + 70, y + 55 + 120, pet[nPetShow].graNo, 0);

  003a8	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  003b2	83 c4 04	 add	 esp, 4
  003b5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  003bf	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  003c7	75 20		 jne	 SHORT $LN64@AuctionNew
  003c9	6a 00		 push	 0
  003cb	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  003d1	8d 83 af 00 00
	00		 lea	 eax, DWORD PTR [ebx+175]
  003d7	50		 push	 eax
  003d8	8d 46 55	 lea	 eax, DWORD PTR [esi+85]
  003db	50		 push	 eax
  003dc	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  003e1	83 c4 10	 add	 esp, 16			; 00000010H
  003e4	a3 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, eax
$LN64@AuctionNew:

; 18479: 				}
; 18480: 				play_se(217, 320, 240);

  003e9	68 f0 00 00 00	 push	 240			; 000000f0H
  003ee	68 40 01 00 00	 push	 320			; 00000140H
  003f3	68 d9 00 00 00	 push	 217			; 000000d9H
  003f8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003fd	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN62@AuctionNew:

; 18481: 			}
; 18482: 			// æä¸äºä¸ç®­å¤´
; 18483: 			if (nButton1[2][1] && bPress)

  00400	83 3d 14 00 00
	00 00		 cmp	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+20, 0
  00407	0f 84 bc 00 00
	00		 je	 $LN65@AuctionNew
  0040d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00414	0f 84 af 00 00
	00		 je	 $LN65@AuctionNew

; 18484: 			{
; 18485: 				bPress = FALSE;

  0041a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA

; 18486: 				nPet = (nPet + 1 >= 5 ? 0 : nPet + 1);
; 18487: 				DeathAction(pShowPet1);

  00420	33 c0		 xor	 eax, eax
  00422	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00428	41		 inc	 ecx
  00429	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00433	83 f9 05	 cmp	 ecx, 5
  00436	0f 4c c1	 cmovl	 eax, ecx
  00439	a3 00 00 00 00	 mov	 DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, eax
  0043e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18488: 				pShowPet1 = NULL;
; 18489: 				// ç§å® ç©
; 18490: 				for (i = 0; i < MAX_PET; i++)

  00443	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA
  00449	83 c4 04	 add	 esp, 4
  0044c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00456	33 d2		 xor	 edx, edx
  00458	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL25@AuctionNew:

; 18491: 				{
; 18492: 					if (pet[nPet].useFlag == 1)

  00460	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00466	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  0046e	74 19		 je	 SHORT $LN98@AuctionNew

; 18495: 						break;
; 18496: 					}
; 18497: 					else nPet = (nPet + 1 >= 5 ? 0 : nPet + 1);

  00470	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00473	33 c9		 xor	 ecx, ecx
  00475	83 f8 05	 cmp	 eax, 5
  00478	0f 4c c8	 cmovl	 ecx, eax
  0047b	42		 inc	 edx
  0047c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, ecx
  00482	83 fa 05	 cmp	 edx, 5
  00485	7c d9		 jl	 SHORT $LL25@AuctionNew

; 18491: 				{
; 18492: 					if (pet[nPet].useFlag == 1)

  00487	eb 29		 jmp	 SHORT $LN24@AuctionNew
$LN98@AuctionNew:

; 18493: 					{
; 18494: 						pShowPet1 = MakeAnimDisp(x + 235 + 70, y + 55 + 120, pet[nPet].graNo, 0);

  00489	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  0048f	6a 00		 push	 0
  00491	ff b0 04 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  00497	8d 83 af 00 00
	00		 lea	 eax, DWORD PTR [ebx+175]
  0049d	50		 push	 eax
  0049e	8d 86 31 01 00
	00		 lea	 eax, DWORD PTR [esi+305]
  004a4	50		 push	 eax
  004a5	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  004aa	83 c4 10	 add	 esp, 16			; 00000010H
  004ad	a3 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, eax
$LN24@AuctionNew:

; 18498: 				}
; 18499: 				play_se(217, 320, 240);

  004b2	68 f0 00 00 00	 push	 240			; 000000f0H
  004b7	68 40 01 00 00	 push	 320			; 00000140H
  004bc	68 d9 00 00 00	 push	 217			; 000000d9H
  004c1	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004c6	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN65@AuctionNew:

; 18500: 			}
; 18501: 
; 18502: 			// æ»é¼ å¨åè¿°åºå
; 18503: 			if (MakeHitBox(AuctionStr.x, AuctionStr.y, AuctionStr.x + 170, AuctionStr.y + 95, DISP_PRIO_BOX2) == TRUE)

  004c9	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+272
  004cf	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+268
  004d5	6a 6b		 push	 107			; 0000006bH
  004d7	8d 42 5f	 lea	 eax, DWORD PTR [edx+95]
  004da	50		 push	 eax
  004db	8d 81 aa 00 00
	00		 lea	 eax, DWORD PTR [ecx+170]
  004e1	50		 push	 eax
  004e2	52		 push	 edx
  004e3	51		 push	 ecx
  004e4	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  004e9	83 c4 14	 add	 esp, 20			; 00000014H
  004ec	83 f8 01	 cmp	 eax, 1
  004ef	75 0d		 jne	 SHORT $LN68@AuctionNew

; 18504: 			{
; 18505: 				GetKeyInputFocus(&AuctionStr);

  004f1	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  004f6	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  004fb	83 c4 04	 add	 esp, 4
$LN68@AuctionNew:

; 18506: 			}
; 18507: 
; 18508: 			// æ»é¼ å¨ä»·é±åºå
; 18509: 			if (MakeHitBox(AuctionMoney.x, AuctionMoney.y, AuctionMoney.x + 115, AuctionMoney.y + 18, DISP_PRIO_BOX2) == TRUE)

  004fe	8b 15 10 01 00
	00		 mov	 edx, DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+272
  00504	8b 0d 0c 01 00
	00		 mov	 ecx, DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+268
  0050a	6a 6b		 push	 107			; 0000006bH
  0050c	8d 42 12	 lea	 eax, DWORD PTR [edx+18]
  0050f	50		 push	 eax
  00510	8d 41 73	 lea	 eax, DWORD PTR [ecx+115]
  00513	50		 push	 eax
  00514	52		 push	 edx
  00515	51		 push	 ecx
  00516	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0051b	83 c4 14	 add	 esp, 20			; 00000014H
  0051e	83 f8 01	 cmp	 eax, 1
  00521	75 0d		 jne	 SHORT $LN69@AuctionNew

; 18510: 			{
; 18511: 				GetKeyInputFocus(&AuctionMoney);

  00523	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00528	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0052d	83 c4 04	 add	 esp, 4
$LN69@AuctionNew:

; 18512: 			}
; 18513: 
; 18514: 			if (pActAuctionWT != NULL)

  00530	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  00537	0f 84 34 05 00
	00		 je	 $LN145@AuctionNew

; 18515: 			{
; 18516: 				// æ¾ç¤ºåè®¾å®buttonåºç°çä½ç½®
; 18517: 				nButton1[0][0] = StockDispBuffer(x + 485, y + 70, DISP_PRIO_IME3, AUCTION_UP_U + nButton1[0][1], 2);

  0053d	a1 04 00 00 00	 mov	 eax, DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4
  00542	8b bd d4 fc ff
	ff		 mov	 edi, DWORD PTR _y$1$[ebp]
  00548	05 4c 66 00 00	 add	 eax, 26188		; 0000664cH
  0054d	8b 9d e4 fc ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00553	6a 02		 push	 2
  00555	50		 push	 eax
  00556	6a 69		 push	 105			; 00000069H
  00558	8d 47 46	 lea	 eax, DWORD PTR [edi+70]
  0055b	50		 push	 eax
  0055c	8d b3 e5 01 00
	00		 lea	 esi, DWORD PTR [ebx+485]
  00562	56		 push	 esi
  00563	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00568	a3 00 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA, eax

; 18518: 				nButton1[1][0] = StockDispBuffer(x + 484, y + 100, DISP_PRIO_IME3, AUCTION_OK_U + nButton1[1][1], 2);

  0056d	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+12
  00572	6a 02		 push	 2
  00574	05 9b 66 00 00	 add	 eax, 26267		; 0000669bH
  00579	50		 push	 eax
  0057a	6a 69		 push	 105			; 00000069H
  0057c	8d 47 64	 lea	 eax, DWORD PTR [edi+100]
  0057f	50		 push	 eax
  00580	8d 83 e4 01 00
	00		 lea	 eax, DWORD PTR [ebx+484]
  00586	50		 push	 eax
  00587	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0058c	a3 08 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+8, eax

; 18519: 				nButton1[2][0] = StockDispBuffer(x + 485, y + 130, DISP_PRIO_IME3, AUCTION_DOWN_U + nButton1[2][1], 2);

  00591	a1 14 00 00 00	 mov	 eax, DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+20
  00596	6a 02		 push	 2
  00598	05 4e 66 00 00	 add	 eax, 26190		; 0000664eH
  0059d	50		 push	 eax
  0059e	6a 69		 push	 105			; 00000069H
  005a0	8d 87 82 00 00
	00		 lea	 eax, DWORD PTR [edi+130]
  005a6	50		 push	 eax
  005a7	56		 push	 esi
  005a8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005ad	a3 10 00 00 00	 mov	 DWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+16, eax

; 18520: 				nButton2[0][0] = StockDispBuffer(x + 312, y + 422, DISP_PRIO_IME3, AUCTION_DECIDE_U + nButton2[0][1], 2);

  005b2	8d b7 a6 01 00
	00		 lea	 esi, DWORD PTR [edi+422]
  005b8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4
  005bd	6a 02		 push	 2
  005bf	05 b1 66 00 00	 add	 eax, 26289		; 000066b1H
  005c4	50		 push	 eax
  005c5	6a 69		 push	 105			; 00000069H
  005c7	8d 83 38 01 00
	00		 lea	 eax, DWORD PTR [ebx+312]
  005cd	56		 push	 esi
  005ce	50		 push	 eax
  005cf	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005d4	83 c4 50	 add	 esp, 80			; 00000050H
  005d7	a3 00 00 00 00	 mov	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA, eax

; 18521: 				nButton2[1][0] = StockDispBuffer(x + 432, y + 422, DISP_PRIO_IME3, AUCTION_CANCEL_R_U, 2);

  005dc	8d 83 b0 01 00
	00		 lea	 eax, DWORD PTR [ebx+432]
  005e2	6a 02		 push	 2
  005e4	68 b3 66 00 00	 push	 26291			; 000066b3H
  005e9	6a 69		 push	 105			; 00000069H
  005eb	56		 push	 esi
  005ec	50		 push	 eax
  005ed	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005f2	a3 08 00 00 00	 mov	 DWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA+8, eax
  005f7	8d 93 06 01 00
	00		 lea	 edx, DWORD PTR [ebx+262]
  005fd	8d 87 11 01 00
	00		 lea	 eax, DWORD PTR [edi+273]
  00603	89 95 cc fc ff
	ff		 mov	 DWORD PTR tv2293[ebp], edx
  00609	83 c4 14	 add	 esp, 20			; 00000014H
  0060c	89 85 d0 fc ff
	ff		 mov	 DWORD PTR tv2290[ebp], eax
  00612	bb 00 00 00 00	 mov	 ebx, OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA
  00617	be 34 08 00 00	 mov	 esi, OFFSET ?pc@@3UPC@@A+2100
  0061c	0f 1f 40 00	 npad	 4
$LL28@AuctionNew:

; 18525: 				{
; 18526: 					for (j = 0; j < 5; j++)

  00620	8b c2		 mov	 eax, edx
  00622	89 9d d8 fc ff
	ff		 mov	 DWORD PTR tv2292[ebp], ebx
  00628	ba 05 00 00 00	 mov	 edx, 5
  0062d	89 85 dc fc ff
	ff		 mov	 DWORD PTR tv2294[ebp], eax
  00633	89 95 e0 fc ff
	ff		 mov	 DWORD PTR tv2297[ebp], edx
  00639	0f 1f 80 00 00
	00 00		 npad	 7
$LL31@AuctionNew:

; 18527: 					{
; 18528: 						// å¦æè¿ä¸æ æéå·ä¸æ²¡è¢«ç¹éå°,ç§å¨å³ä¸è§çèº«ä¸éå·æ 
; 18529: 						if (!nItem[i * 5 + j][1])

  00640	83 7b 04 00	 cmp	 DWORD PTR [ebx+4], 0
  00644	75 27		 jne	 SHORT $LN71@AuctionNew

; 18530: 						{
; 18531: 							// ç§éå·å¾
; 18532: 							if (pc.item[i * 5 + j + 5].useFlag == 1) nItem[i * 5 + j][0] = StockDispBuffer(x + 262 + j * 50, y + 273 + i * 48, DISP_PRIO_ITEM, pc.item[i * 5 + j + 5].graNo, 0);

  00646	66 83 be d8 00
	00 00 01	 cmp	 WORD PTR [esi+216], 1
  0064e	0f 85 9d 00 00
	00		 jne	 $LN73@AuctionNew
  00654	6a 00		 push	 0
  00656	ff 36		 push	 DWORD PTR [esi]
  00658	6a 6c		 push	 108			; 0000006cH
  0065a	ff b5 d0 fc ff
	ff		 push	 DWORD PTR tv2290[ebp]
  00660	50		 push	 eax
  00661	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00666	83 c4 14	 add	 esp, 20			; 00000014H
  00669	89 03		 mov	 DWORD PTR [ebx], eax

; 18533: 						}

  0066b	eb 78		 jmp	 SHORT $LN146@AuctionNew
$LN71@AuctionNew:

; 18534: 						// å¦æè¿ä¸æ çéå·è¢«ç¹éå°,ç§å¨å·¦ä¸è§çè¦è¢«æåçæ ä½
; 18535: 						else
; 18536: 						{
; 18537: 							// ç§éå·å¾
; 18538: 							StockDispBuffer(x + 120, y + 125, DISP_PRIO_IME3, pc.item[i * 5 + j + 5].graNo, 0);

  0066d	8b 9d e4 fc ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00673	83 c7 7d	 add	 edi, 125		; 0000007dH
  00676	6a 00		 push	 0
  00678	ff 36		 push	 DWORD PTR [esi]
  0067a	83 c3 78	 add	 ebx, 120		; 00000078H
  0067d	6a 69		 push	 105			; 00000069H
  0067f	57		 push	 edi
  00680	53		 push	 ebx
  00681	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18539: 							// ç§åºä¸çç³æ¿
; 18540: 							StockDispBuffer(x + 120, y + 125, DISP_PRIO_IME3, AUCTION_PLANK, 0);

  00686	6a 00		 push	 0
  00688	68 9d 66 00 00	 push	 26269			; 0000669dH
  0068d	6a 69		 push	 105			; 00000069H
  0068f	57		 push	 edi
  00690	53		 push	 ebx
  00691	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18541: 							// ç§éå·åç§°
; 18542: 							StockFontBuffer(x + 36, y + 28, FONT_PRIO_FRONT, 0, pc.item[i * 5 + j + 5].name, 0);

  00696	8b bd d4 fc ff
	ff		 mov	 edi, DWORD PTR _y$1$[ebp]
  0069c	8d 86 e2 00 00
	00		 lea	 eax, DWORD PTR [esi+226]
  006a2	6a 00		 push	 0
  006a4	50		 push	 eax
  006a5	8b 85 e4 fc ff
	ff		 mov	 eax, DWORD PTR _x$1$[ebp]
  006ab	6a 00		 push	 0
  006ad	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  006b0	83 c0 24	 add	 eax, 36			; 00000024H
  006b3	6a 01		 push	 1
  006b5	51		 push	 ecx
  006b6	50		 push	 eax
  006b7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  006bc	83 c4 40	 add	 esp, 64			; 00000040H

; 18543: 							// ç§éå·åè¿°
; 18544: 							strncpy(AuctionItem.buffer, pc.item[i * 5 + j + 5].memo, 64);

  006bf	8d 86 10 01 00
	00		 lea	 eax, DWORD PTR [esi+272]
  006c5	6a 40		 push	 64			; 00000040H
  006c7	50		 push	 eax
  006c8	68 00 00 00 00	 push	 OFFSET ?AuctionItem@@3USTR_BUFFER@@A ; AuctionItem
  006cd	e8 00 00 00 00	 call	 _strncpy

; 18545: 							StockFontBuffer2(&AuctionItem);

  006d2	68 00 00 00 00	 push	 OFFSET ?AuctionItem@@3USTR_BUFFER@@A ; AuctionItem
  006d7	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  006dc	8b 9d d8 fc ff
	ff		 mov	 ebx, DWORD PTR tv2292[ebp]
  006e2	83 c4 10	 add	 esp, 16			; 00000010H
$LN146@AuctionNew:

; 18525: 				{
; 18526: 					for (j = 0; j < 5; j++)

  006e5	8b 95 e0 fc ff
	ff		 mov	 edx, DWORD PTR tv2297[ebp]
  006eb	8b 85 dc fc ff
	ff		 mov	 eax, DWORD PTR tv2294[ebp]
$LN73@AuctionNew:
  006f1	83 c3 08	 add	 ebx, 8
  006f4	8d 4f 1c	 lea	 ecx, DWORD PTR [edi+28]
  006f7	83 c0 32	 add	 eax, 50			; 00000032H
  006fa	89 9d d8 fc ff
	ff		 mov	 DWORD PTR tv2292[ebp], ebx
  00700	81 c6 7c 01 00
	00		 add	 esi, 380		; 0000017cH
  00706	89 85 dc fc ff
	ff		 mov	 DWORD PTR tv2294[ebp], eax
  0070c	83 ea 01	 sub	 edx, 1
  0070f	89 95 e0 fc ff
	ff		 mov	 DWORD PTR tv2297[ebp], edx
  00715	0f 85 25 ff ff
	ff		 jne	 $LL31@AuctionNew

; 18522: 
; 18523: 				// æ¾ç¤ºç©å®¶èº«ä¸çéå·
; 18524: 				for (i = 0; i < 3; i++)

  0071b	83 85 d0 fc ff
	ff 30		 add	 DWORD PTR tv2290[ebp], 48 ; 00000030H
  00722	8b 95 cc fc ff
	ff		 mov	 edx, DWORD PTR tv2293[ebp]
  00728	81 fe 78 1e 00
	00		 cmp	 esi, OFFSET ?pc@@3UPC@@A+7800
  0072e	0f 8c ec fe ff
	ff		 jl	 $LL28@AuctionNew

; 18546: 						}
; 18547: 					}
; 18548: 				}
; 18549: 				// æ¾ç¤ºç©å®¶èº«ä¸çå® ç©èµæ
; 18550: 				// æéå°çå® ç©èµæç§å¨å³è¾¹
; 18551: 				if (pet[nPet].useFlag == 1)

  00734	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  0073e	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  00746	0f 85 ea 02 00
	00		 jne	 $LN76@AuctionNew

; 18552: 				{
; 18553: 					if (pShowPet1 != NULL)

  0074c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00753	8b 9d e4 fc ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00759	0f 84 4f 01 00
	00		 je	 $LN75@AuctionNew

; 18554: 					{
; 18555: 						// ç§å® ç©åç§°
; 18556: 						StockFontBuffer(x + 256, y + 28, FONT_PRIO_FRONT, 0, pet[nPet].name, 0);

  0075f	6a 00		 push	 0
  00761	8d 80 54 00 00
	00		 lea	 eax, DWORD PTR ?pet@@3PAUPET@@A[eax+84]
  00767	50		 push	 eax
  00768	6a 00		 push	 0
  0076a	6a 01		 push	 1
  0076c	51		 push	 ecx
  0076d	8d 83 00 01 00
	00		 lea	 eax, DWORD PTR [ebx+256]
  00773	50		 push	 eax
  00774	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18557: 						// ç§å® ç©çå±æ§
; 18558: 						itoa(pet[nPet].level, temp, 10);

  00779	6a 0a		 push	 10			; 0000000aH
  0077b	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0077e	50		 push	 eax
  0077f	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00789	ff b0 20 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+32]
  0078f	e8 00 00 00 00	 call	 _itoa

; 18559: 						StockFontBuffer(x + 400, y + 58, FONT_PRIO_FRONT, 0, temp, 0);

  00794	6a 00		 push	 0
  00796	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  00799	51		 push	 ecx
  0079a	6a 00		 push	 0
  0079c	8d 47 3a	 lea	 eax, DWORD PTR [edi+58]
  0079f	6a 01		 push	 1
  007a1	50		 push	 eax
  007a2	8d b3 90 01 00
	00		 lea	 esi, DWORD PTR [ebx+400]
  007a8	56		 push	 esi
  007a9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18560: 						itoa(pet[nPet].atk, temp, 10);

  007ae	6a 0a		 push	 10			; 0000000aH
  007b0	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  007b3	50		 push	 eax
  007b4	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  007be	ff b0 24 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+36]
  007c4	e8 00 00 00 00	 call	 _itoa
  007c9	83 c4 48	 add	 esp, 72			; 00000048H

; 18561: 						StockFontBuffer(x + 400, y + 58 + 28, FONT_PRIO_FRONT, 0, temp, 0);

  007cc	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  007cf	8d 47 56	 lea	 eax, DWORD PTR [edi+86]
  007d2	6a 00		 push	 0
  007d4	51		 push	 ecx
  007d5	6a 00		 push	 0
  007d7	6a 01		 push	 1
  007d9	50		 push	 eax
  007da	56		 push	 esi
  007db	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18562: 						itoa(pet[nPet].def, temp, 10);

  007e0	6a 0a		 push	 10			; 0000000aH
  007e2	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  007e5	50		 push	 eax
  007e6	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  007f0	ff b0 28 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+40]
  007f6	e8 00 00 00 00	 call	 _itoa

; 18563: 						StockFontBuffer(x + 400, y + 58 + 56, FONT_PRIO_FRONT, 0, temp, 0);

  007fb	6a 00		 push	 0
  007fd	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  00800	51		 push	 ecx
  00801	6a 00		 push	 0
  00803	8d 47 72	 lea	 eax, DWORD PTR [edi+114]
  00806	6a 01		 push	 1
  00808	50		 push	 eax
  00809	56		 push	 esi
  0080a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18564: 						itoa(pet[nPet].quick, temp, 10);

  0080f	6a 0a		 push	 10			; 0000000aH
  00811	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00814	50		 push	 eax
  00815	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  0081f	ff b0 2c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+44]
  00825	e8 00 00 00 00	 call	 _itoa
  0082a	83 c4 48	 add	 esp, 72			; 00000048H

; 18565: 						StockFontBuffer(x + 400, y + 58 + 84, FONT_PRIO_FRONT, 0, temp, 0);

  0082d	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  00830	8d 87 8e 00 00
	00		 lea	 eax, DWORD PTR [edi+142]
  00836	6a 00		 push	 0
  00838	51		 push	 ecx
  00839	6a 00		 push	 0
  0083b	6a 01		 push	 1
  0083d	50		 push	 eax
  0083e	56		 push	 esi
  0083f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18566: 						itoa(pet[nPet].maxHp, temp, 10);

  00844	6a 0a		 push	 10			; 0000000aH
  00846	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00849	50		 push	 eax
  0084a	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00854	ff b0 0c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+12]
  0085a	e8 00 00 00 00	 call	 _itoa

; 18567: 						StockFontBuffer(x + 400, y + 58 + 112, FONT_PRIO_FRONT, 0, temp, 0);

  0085f	8d 87 aa 00 00
	00		 lea	 eax, DWORD PTR [edi+170]
  00865	6a 00		 push	 0
  00867	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  0086a	51		 push	 ecx
  0086b	6a 00		 push	 0
  0086d	6a 01		 push	 1
  0086f	50		 push	 eax
  00870	56		 push	 esi
  00871	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18568: 						itoa(pet[nPet].ai, temp, 10);

  00876	6a 0a		 push	 10			; 0000000aH
  00878	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0087b	50		 push	 eax
  0087c	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00886	ff b0 30 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+48]
  0088c	e8 00 00 00 00	 call	 _itoa
  00891	83 c4 48	 add	 esp, 72			; 00000048H

; 18569: 						StockFontBuffer(x + 400, y + 58 + 140, FONT_PRIO_FRONT, 0, temp, 0);

  00894	8d 4d f4	 lea	 ecx, DWORD PTR _temp$[ebp]
  00897	8d 87 c6 00 00
	00		 lea	 eax, DWORD PTR [edi+198]
  0089d	6a 00		 push	 0
  0089f	51		 push	 ecx
  008a0	6a 00		 push	 0
  008a2	6a 01		 push	 1
  008a4	50		 push	 eax
  008a5	56		 push	 esi
  008a6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  008ab	83 c4 18	 add	 esp, 24			; 00000018H
$LN75@AuctionNew:

; 18570: 					}
; 18571: 					// å¦æææä¸ok æå® ç©èµæç§å¨å·¦è¾¹
; 18572: 					if (nAuctionKind == 1 && pShowPet2 != NULL)

  008ae	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA, 1
  008b5	0f 85 7b 01 00
	00		 jne	 $LN76@AuctionNew
  008bb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  008c2	0f 84 6e 01 00
	00		 je	 $LN76@AuctionNew

; 18573: 					{
; 18574: 						// ç§å® ç©åç§°
; 18575: 						StockFontBuffer(x + 36, y + 28, FONT_PRIO_FRONT, 0, pet[nPetShow].name, 0);

  008c8	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  008d2	6a 00		 push	 0
  008d4	05 54 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+84
  008d9	50		 push	 eax
  008da	6a 00		 push	 0
  008dc	6a 01		 push	 1
  008de	8d 47 1c	 lea	 eax, DWORD PTR [edi+28]
  008e1	50		 push	 eax
  008e2	8d 43 24	 lea	 eax, DWORD PTR [ebx+36]
  008e5	50		 push	 eax
  008e6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18576: 						// ç§å® ç©å±æ§åºä¸çåºå¾
; 18577: 						StockDispBuffer(x + 180, y + 137, DISP_PRIO_IME3, AUCTION_PET_STAT, 0);

  008eb	6a 00		 push	 0
  008ed	68 b9 66 00 00	 push	 26297			; 000066b9H
  008f2	6a 69		 push	 105			; 00000069H
  008f4	8d 87 89 00 00
	00		 lea	 eax, DWORD PTR [edi+137]
  008fa	50		 push	 eax
  008fb	8d b3 b4 00 00
	00		 lea	 esi, DWORD PTR [ebx+180]
  00901	56		 push	 esi
  00902	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18578: 						// ç§å® ç©çå±æ§
; 18579: 						itoa(pet[nPetShow].level, temp, 10);

  00907	6a 0a		 push	 10			; 0000000aH
  00909	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0090c	50		 push	 eax
  0090d	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00917	ff b0 20 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+32]
  0091d	e8 00 00 00 00	 call	 _itoa

; 18580: 						StockFontBuffer(x + 180, y + 58, FONT_PRIO_FRONT, 0, temp, 0);

  00922	6a 00		 push	 0
  00924	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00927	50		 push	 eax
  00928	6a 00		 push	 0
  0092a	6a 01		 push	 1
  0092c	8d 47 3a	 lea	 eax, DWORD PTR [edi+58]
  0092f	50		 push	 eax
  00930	56		 push	 esi
  00931	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00936	83 c4 50	 add	 esp, 80			; 00000050H

; 18581: 						itoa(pet[nPetShow].atk, temp, 10);

  00939	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0093c	6a 0a		 push	 10			; 0000000aH
  0093e	50		 push	 eax
  0093f	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00949	ff b0 24 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+36]
  0094f	e8 00 00 00 00	 call	 _itoa

; 18582: 						StockFontBuffer(x + 180, y + 58 + 28, FONT_PRIO_FRONT, 0, temp, 0);

  00954	6a 00		 push	 0
  00956	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00959	50		 push	 eax
  0095a	6a 00		 push	 0
  0095c	6a 01		 push	 1
  0095e	8d 47 56	 lea	 eax, DWORD PTR [edi+86]
  00961	50		 push	 eax
  00962	56		 push	 esi
  00963	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18583: 						itoa(pet[nPetShow].def, temp, 10);

  00968	6a 0a		 push	 10			; 0000000aH
  0096a	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0096d	50		 push	 eax
  0096e	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00978	ff b0 28 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+40]
  0097e	e8 00 00 00 00	 call	 _itoa

; 18584: 						StockFontBuffer(x + 180, y + 58 + 56, FONT_PRIO_FRONT, 0, temp, 0);

  00983	6a 00		 push	 0
  00985	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00988	50		 push	 eax
  00989	6a 00		 push	 0
  0098b	6a 01		 push	 1
  0098d	8d 47 72	 lea	 eax, DWORD PTR [edi+114]
  00990	50		 push	 eax
  00991	56		 push	 esi
  00992	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00997	83 c4 48	 add	 esp, 72			; 00000048H

; 18585: 						itoa(pet[nPetShow].quick, temp, 10);

  0099a	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  0099d	6a 0a		 push	 10			; 0000000aH
  0099f	50		 push	 eax
  009a0	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  009aa	ff b0 2c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+44]
  009b0	e8 00 00 00 00	 call	 _itoa

; 18586: 						StockFontBuffer(x + 180, y + 58 + 84, FONT_PRIO_FRONT, 0, temp, 0);

  009b5	6a 00		 push	 0
  009b7	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  009ba	50		 push	 eax
  009bb	6a 00		 push	 0
  009bd	6a 01		 push	 1
  009bf	8d 87 8e 00 00
	00		 lea	 eax, DWORD PTR [edi+142]
  009c5	50		 push	 eax
  009c6	56		 push	 esi
  009c7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18587: 						itoa(pet[nPetShow].maxHp, temp, 10);

  009cc	6a 0a		 push	 10			; 0000000aH
  009ce	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  009d1	50		 push	 eax
  009d2	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  009dc	ff b0 0c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+12]
  009e2	e8 00 00 00 00	 call	 _itoa

; 18588: 						StockFontBuffer(x + 180, y + 58 + 112, FONT_PRIO_FRONT, 0, temp, 0);

  009e7	6a 00		 push	 0
  009e9	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  009ec	50		 push	 eax
  009ed	6a 00		 push	 0
  009ef	6a 01		 push	 1
  009f1	8d 87 aa 00 00
	00		 lea	 eax, DWORD PTR [edi+170]
  009f7	50		 push	 eax
  009f8	56		 push	 esi
  009f9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  009fe	83 c4 48	 add	 esp, 72			; 00000048H

; 18589: 						itoa(pet[nPetShow].ai, temp, 10);

  00a01	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00a04	6a 0a		 push	 10			; 0000000aH
  00a06	50		 push	 eax
  00a07	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00a11	ff b0 30 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[eax+48]
  00a17	e8 00 00 00 00	 call	 _itoa

; 18590: 						StockFontBuffer(x + 180, y + 58 + 140, FONT_PRIO_FRONT, 0, temp, 0);

  00a1c	6a 00		 push	 0
  00a1e	8d 45 f4	 lea	 eax, DWORD PTR _temp$[ebp]
  00a21	50		 push	 eax
  00a22	6a 00		 push	 0
  00a24	6a 01		 push	 1
  00a26	8d 87 c6 00 00
	00		 lea	 eax, DWORD PTR [edi+198]
  00a2c	50		 push	 eax
  00a2d	56		 push	 esi
  00a2e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00a33	83 c4 24	 add	 esp, 36			; 00000024H
$LN76@AuctionNew:

; 18591: 					}
; 18592: 				}
; 18593: 				StockFontBuffer2(&AuctionStr);

  00a36	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00a3b	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 18594: 				CheckNumber(AuctionMoney.buffer, -1);

  00a40	6a ff		 push	 -1
  00a42	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00a47	e8 00 00 00 00	 call	 ?CheckNumber@@YAXPADH@Z	; CheckNumber

; 18595: 				StockFontBuffer2(&AuctionMoney);

  00a4c	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00a51	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 18596: 				StockDispBuffer(320, 240, DISP_PRIO_IME3, AUCTION_NEW, 1);

  00a56	6a 01		 push	 1
  00a58	68 9a 66 00 00	 push	 26266			; 0000669aH
  00a5d	6a 69		 push	 105			; 00000069H
  00a5f	68 f0 00 00 00	 push	 240			; 000000f0H
  00a64	68 40 01 00 00	 push	 320			; 00000140H
  00a69	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00a6e	83 c4 24	 add	 esp, 36			; 00000024H
$LN145@AuctionNew:
  00a71	5f		 pop	 edi
$LN70@AuctionNew:
  00a72	5e		 pop	 esi

; 18597: 			}
; 18598: 		}
; 18599: 	}
; 18600: }

  00a73	5b		 pop	 ebx
  00a74	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a77	33 cd		 xor	 ecx, ebp
  00a79	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a7e	8b e5		 mov	 esp, ebp
  00a80	5d		 pop	 ebp
  00a81	c3		 ret	 0
$LN139@AuctionNew:

; 18403: 			{
; 18404: 				if (nButton2[0][1])
; 18405: 				{
; 18406: 					// è¥æ¯è¦åå® ç©
; 18407: 					if (nAuctionKind == 1)

  00a82	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA, 1
  00a89	0f 85 be 00 00
	00		 jne	 $LN54@AuctionNew

; 18408: 					{
; 18409: 						CheckSpace(AuctionStr.buffer);

  00a8f	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00a94	e8 00 00 00 00	 call	 ?CheckSpace@@YAXPAD@Z	; CheckSpace

; 18410: 						// æè¿åªå® ç©
; 18411: 						if (pet[nPetShow].useFlag == 1)

  00a99	69 05 00 00 00
	00 78 0b 00 00	 imul	 eax, DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 2936
  00aa3	83 c4 04	 add	 esp, 4
  00aa6	66 83 b8 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[eax+118], 1
  00aae	0f 85 57 01 00
	00		 jne	 $LN58@AuctionNew

; 18412: 						{
; 18413: 							makeEscapeString(AuctionStr.buffer, szSendMsg[0], sizeof(AuctionStr.buffer));

  00ab4	68 04 01 00 00	 push	 260			; 00000104H
  00ab9	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00abf	50		 push	 eax
  00ac0	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00ac5	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 18414: 							sprintf(szSendMsg[1], "1|%d|%s|%d", nPetShow, szSendMsg[0], atoi(AuctionMoney.buffer));

  00aca	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00acf	e8 00 00 00 00	 call	 _atoi
  00ad4	50		 push	 eax
  00ad5	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00adb	50		 push	 eax
  00adc	ff 35 00 00 00
	00		 push	 DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA
  00ae2	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  00ae8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NBALFHDN@1?$HM?$CFd?$HM?$CFs?$HM?$CFd@
  00aed	50		 push	 eax
  00aee	e8 00 00 00 00	 call	 _sprintf

; 18415: 							makeEscapeString(szSendMsg[1], szSendMsg[2], sizeof(szSendMsg[1]));

  00af3	68 04 01 00 00	 push	 260			; 00000104H
  00af8	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+520]
  00afe	50		 push	 eax
  00aff	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  00b05	50		 push	 eax
  00b06	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00b0b	83 c4 30	 add	 esp, 48			; 00000030H

; 18416: 							if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_YES, szSendMsg[2]);

  00b0e	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+520]
  00b14	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00b1b	50		 push	 eax
  00b1c	6a 04		 push	 4
  00b1e	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00b24	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00b2a	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00b30	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00b36	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00b3c	74 07		 je	 SHORT $LN53@AuctionNew
  00b3e	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00b43	eb 05		 jmp	 SHORT $LN147@AuctionNew
$LN53@AuctionNew:

; 18417: 							else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_YES, szSendMsg[2]);

  00b45	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN147@AuctionNew:

; 18418: 						}
; 18419: 					}
; 18420: 					// è¥æ¯è¦åéå·
; 18421: 					if (nAuctionKind == 2)

  00b4a	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN54@AuctionNew:
  00b4d	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?nAuctionKind@?1??AuctionNewWT@@YAXXZ@4HA, 2
  00b54	0f 85 b1 00 00
	00		 jne	 $LN58@AuctionNew

; 18422: 					{
; 18423: 						// æè¿ä¸ªéå·
; 18424: 						if (pc.item[nItemSelect].useFlag == 1)

  00b5a	69 05 00 00 00
	00 7c 01 00 00	 imul	 eax, DWORD PTR ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA, 380
  00b64	66 83 b8 a0 01
	00 00 01	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+416], 1
  00b6c	0f 85 99 00 00
	00		 jne	 $LN58@AuctionNew

; 18425: 						{
; 18426: 							makeEscapeString(AuctionStr.buffer, szSendMsg[0], sizeof(AuctionStr.buffer));

  00b72	68 04 01 00 00	 push	 260			; 00000104H
  00b77	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00b7d	50		 push	 eax
  00b7e	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00b83	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString

; 18427: 							sprintf(szSendMsg[1], "2|%d|%s|%d", nItemSelect, szSendMsg[0], atoi(AuctionMoney.buffer));

  00b88	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00b8d	e8 00 00 00 00	 call	 _atoi
  00b92	50		 push	 eax
  00b93	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00b99	50		 push	 eax
  00b9a	ff 35 00 00 00
	00		 push	 DWORD PTR ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA
  00ba0	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  00ba6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EIOJDBDM@2?$HM?$CFd?$HM?$CFs?$HM?$CFd@
  00bab	50		 push	 eax
  00bac	e8 00 00 00 00	 call	 _sprintf

; 18428: 							makeEscapeString(szSendMsg[1], szSendMsg[2], sizeof(szSendMsg[1]));

  00bb1	68 04 01 00 00	 push	 260			; 00000104H
  00bb6	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+520]
  00bbc	50		 push	 eax
  00bbd	8d 85 ec fd ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+260]
  00bc3	50		 push	 eax
  00bc4	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00bc9	83 c4 30	 add	 esp, 48			; 00000030H

; 18429: 							if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_YES, szSendMsg[2]);

  00bcc	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp+520]
  00bd2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00bd9	50		 push	 eax
  00bda	6a 04		 push	 4
  00bdc	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00be2	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00be8	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00bee	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00bf4	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00bfa	74 07		 je	 SHORT $LN57@AuctionNew
  00bfc	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  00c01	eb 05		 jmp	 SHORT $LN148@AuctionNew
$LN57@AuctionNew:

; 18430: 							else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, WINDOW_BUTTONTYPE_YES, szSendMsg[2]);

  00c03	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN148@AuctionNew:

; 18431: 						}
; 18432: 					}
; 18433: 				}
; 18434: 				windowTypeWN = -1;

  00c08	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN58@AuctionNew:

; 18435: 				DeathAction(pActAuctionWT);

  00c0b	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00c11	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00c1b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18436: 				pActAuctionWT = NULL;
; 18437: 				DeathAction(pShowPet1);

  00c20	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00c26	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  00c30	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18438: 				pShowPet1 = NULL;
; 18439: 				DeathAction(pShowPet2);

  00c35	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00c3b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00c45	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18440: 				pShowPet2 = NULL;
; 18441: 				play_se(217, 320, 240);

  00c4a	68 f0 00 00 00	 push	 240			; 000000f0H
  00c4f	68 40 01 00 00	 push	 320			; 00000140H
  00c54	68 d9 00 00 00	 push	 217			; 000000d9H
  00c59	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00c63	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 18442: 				GetKeyInputFocus(&MyChatBuffer);

  00c68	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00c6d	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00c72	83 c4 1c	 add	 esp, 28			; 0000001cH
  00c75	5f		 pop	 edi
  00c76	5e		 pop	 esi

; 18597: 			}
; 18598: 		}
; 18599: 	}
; 18600: }

  00c77	5b		 pop	 ebx
  00c78	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c7b	33 cd		 xor	 ecx, ebp
  00c7d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c82	8b e5		 mov	 esp, ebp
  00c84	5d		 pop	 ebp
  00c85	c3		 ret	 0
$LN33@AuctionNew:

; 18272: 	{
; 18273: 		if (pActAuctionWT != NULL)

  00c86	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActAuctionWT@@3PAUaction@@A ; pActAuctionWT
  00c8b	85 c0		 test	 eax, eax
  00c8d	74 75		 je	 SHORT $LN140@AuctionNew

; 18274: 		{
; 18275: 			windowTypeWN = -1;
; 18276: 			DeathAction(pActAuctionWT);

  00c8f	50		 push	 eax
  00c90	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00c9a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18277: 			pActAuctionWT = NULL;
; 18278: 			DeathAction(pShowPet1);

  00c9f	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00ca5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, 0 ; pActAuctionWT
  00caf	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18279: 			pShowPet1 = NULL;
; 18280: 			DeathAction(pShowPet2);

  00cb4	ff 35 00 00 00
	00		 push	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A
  00cba	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00cc4	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 18281: 			pShowPet2 = NULL;
; 18282: 			play_se(217, 320, 240);

  00cc9	68 f0 00 00 00	 push	 240			; 000000f0H
  00cce	68 40 01 00 00	 push	 320			; 00000140H
  00cd3	68 d9 00 00 00	 push	 217			; 000000d9H
  00cd8	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00ce2	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 18283: 			GetKeyInputFocus(&MyChatBuffer);

  00ce7	68 00 00 00 00	 push	 OFFSET ?MyChatBuffer@@3USTR_BUFFER@@A ; MyChatBuffer
  00cec	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00cf1	83 c4 1c	 add	 esp, 28			; 0000001cH
  00cf4	5e		 pop	 esi

; 18597: 			}
; 18598: 		}
; 18599: 	}
; 18600: }

  00cf5	5b		 pop	 ebx
  00cf6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00cf9	33 cd		 xor	 ecx, ebp
  00cfb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00d00	8b e5		 mov	 esp, ebp
  00d02	5d		 pop	 ebp
  00d03	c3		 ret	 0
$LN140@AuctionNew:

; 18289: 	{
; 18290: 		// äº§çå§æä»é¢
; 18291: 		pActAuctionWT = MakeWindowDisp(50, 15, 540, 450, AUCTION_NEW, -1);

  00d04	6a ff		 push	 -1
  00d06	68 9a 66 00 00	 push	 26266			; 0000669aH
  00d0b	68 c2 01 00 00	 push	 450			; 000001c2H
  00d10	68 1c 02 00 00	 push	 540			; 0000021cH
  00d15	6a 0f		 push	 15			; 0000000fH
  00d17	6a 32		 push	 50			; 00000032H
  00d19	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00d1e	8b f0		 mov	 esi, eax

; 18292: 		ZeroMemory(szSendMsg, sizeof(szSendMsg));

  00d20	8d 85 e8 fc ff
	ff		 lea	 eax, DWORD PTR _szSendMsg$[ebp]
  00d26	68 0c 03 00 00	 push	 780			; 0000030cH
  00d2b	6a 00		 push	 0
  00d2d	50		 push	 eax
  00d2e	89 35 00 00 00
	00		 mov	 DWORD PTR ?pActAuctionWT@@3PAUaction@@A, esi ; pActAuctionWT
  00d34	e8 00 00 00 00	 call	 _memset

; 18293: 		ZeroMemory(nButton1, sizeof(nButton1));
; 18294: 		ZeroMemory(nButton2, sizeof(nButton2));
; 18295: 		ZeroMemory(nItem, sizeof(nItem));

  00d39	68 64 01 00 00	 push	 356			; 00000164H
  00d3e	0f 57 c0	 xorps	 xmm0, xmm0
  00d41	6a 00		 push	 0
  00d43	68 04 00 00 00	 push	 OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA+4
  00d48	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA, xmm0
  00d4f	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?nButton1@?1??AuctionNewWT@@YAXXZ@4PAY01HA+16, xmm0
  00d57	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?nButton2@?1??AuctionNewWT@@YAXXZ@4PAY01HA, xmm0
  00d5e	e8 00 00 00 00	 call	 _memset
  00d63	83 c4 30	 add	 esp, 48			; 00000030H
  00d66	b8 00 00 00 00	 mov	 eax, OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA
  00d6b	0f 1f 44 00 00	 npad	 5
$LL4@AuctionNew:

; 18296: 		for (i = 0; i < MAX_ITEM; i++) nItem[i][0] = -1;

  00d70	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  00d76	83 c0 08	 add	 eax, 8
  00d79	3d b0 01 00 00	 cmp	 eax, OFFSET ?nItem@?1??AuctionNewWT@@YAXXZ@4PAY01HA+432
  00d7e	7c f0		 jl	 SHORT $LL4@AuctionNew

; 18297: 		nPet = nPetShow = 0;
; 18298: 		nItemSelect = 0;
; 18299: 		pShowPet1 = pShowPet2 = NULL;
; 18300: 		bPress = TRUE;
; 18301: 		// åè¿°æå­åå§å
; 18302: 		ZeroMemory(AuctionStr.buffer, sizeof(AuctionStr.buffer));

  00d80	68 04 01 00 00	 push	 260			; 00000104H
  00d85	6a 00		 push	 0
  00d87	68 00 00 00 00	 push	 OFFSET ?AuctionStr@@3USTR_BUFFER@@A ; AuctionStr
  00d8c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nPetShow@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00d96	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nPet@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00da0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nItemSelect@?1??AuctionNewWT@@YAXXZ@4HA, 0
  00daa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet2@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00db4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pShowPet1@?1??AuctionNewWT@@YAXXZ@4PAUaction@@A, 0
  00dbe	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bPress@?1??AuctionNewWT@@YAXXZ@4HA, 1
  00dc8	e8 00 00 00 00	 call	 _memset

; 18303: 		AuctionStr.cnt = 0;

  00dcd	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?AuctionStr@@3USTR_BUFFER@@A+263, 0

; 18304: 		AuctionStr.cursor = 0;

  00dd6	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+265, 0

; 18305: 		AuctionStr.color = 0;
; 18306: 		AuctionStr.len = 100;

  00ddd	66 c7 05 04 01
	00 00 64 18	 mov	 WORD PTR ?AuctionStr@@3USTR_BUFFER@@A+260, 6244 ; 00001864H

; 18307: 		AuctionStr.lineLen = 24;
; 18308: 		AuctionStr.lineDist = 20;

  00de6	c6 05 06 01 00
	00 14		 mov	 BYTE PTR ?AuctionStr@@3USTR_BUFFER@@A+262, 20 ; 00000014H

; 18309: 		AuctionStr.x = pActAuctionWT->x + 30;

  00ded	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00df0	83 c0 1e	 add	 eax, 30			; 0000001eH
  00df3	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+268, eax

; 18310: 		AuctionStr.y = pActAuctionWT->y + 260;

  00df8	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]

; 18311: 		AuctionStr.fontPrio = FONT_PRIO_FRONT;
; 18312: 		// ä»·é±æå­åå§å
; 18313: 		ZeroMemory(AuctionMoney.buffer, sizeof(AuctionMoney.buffer));

  00dfb	68 04 01 00 00	 push	 260			; 00000104H
  00e00	05 04 01 00 00	 add	 eax, 260		; 00000104H
  00e05	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+284, 1
  00e0f	6a 00		 push	 0
  00e11	68 00 00 00 00	 push	 OFFSET ?AuctionMoney@@3USTR_BUFFER@@A ; AuctionMoney
  00e16	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionStr@@3USTR_BUFFER@@A+272, eax
  00e1b	e8 00 00 00 00	 call	 _memset

; 18314: 		AuctionMoney.cnt = 0;

  00e20	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+263, 0

; 18315: 		AuctionMoney.cursor = 0;

  00e29	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+265, 0

; 18316: 		AuctionMoney.color = 0;
; 18317: 		AuctionMoney.len = 7;

  00e30	66 c7 05 04 01
	00 00 07 07	 mov	 WORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+260, 1799 ; 00000707H

; 18318: 		AuctionMoney.lineLen = 7;
; 18319: 		AuctionMoney.lineDist = 0;

  00e39	c6 05 06 01 00
	00 00		 mov	 BYTE PTR ?AuctionMoney@@3USTR_BUFFER@@A+262, 0

; 18320: 		AuctionMoney.x = pActAuctionWT->x + 95;

  00e40	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00e43	83 c0 5f	 add	 eax, 95			; 0000005fH
  00e46	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+268, eax

; 18321: 		AuctionMoney.y = pActAuctionWT->y + 387;

  00e4b	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]

; 18322: 		AuctionMoney.fontPrio = FONT_PRIO_FRONT;
; 18323: 		// éå·åè¿°åå§å
; 18324: 		ZeroMemory(AuctionItem.buffer, sizeof(AuctionItem.buffer));

  00e4e	68 04 01 00 00	 push	 260			; 00000104H
  00e53	05 83 01 00 00	 add	 eax, 387		; 00000183H
  00e58	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+284, 1
  00e62	6a 00		 push	 0
  00e64	68 00 00 00 00	 push	 OFFSET ?AuctionItem@@3USTR_BUFFER@@A ; AuctionItem
  00e69	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionMoney@@3USTR_BUFFER@@A+272, eax
  00e6e	e8 00 00 00 00	 call	 _memset

; 18325: 		AuctionItem.cnt = 0;

  00e73	66 c7 05 07 01
	00 00 00 00	 mov	 WORD PTR ?AuctionItem@@3USTR_BUFFER@@A+263, 0

; 18326: 		AuctionItem.cursor = 0;

  00e7c	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?AuctionItem@@3USTR_BUFFER@@A+265, 0

; 18327: 		AuctionItem.color = 0;
; 18328: 		AuctionItem.len = 100;

  00e83	66 c7 05 04 01
	00 00 64 1c	 mov	 WORD PTR ?AuctionItem@@3USTR_BUFFER@@A+260, 7268 ; 00001c64H

; 18329: 		AuctionItem.lineLen = 28;
; 18330: 		AuctionItem.lineDist = 20;

  00e8c	c6 05 06 01 00
	00 14		 mov	 BYTE PTR ?AuctionItem@@3USTR_BUFFER@@A+262, 20 ; 00000014H

; 18331: 		AuctionItem.x = pActAuctionWT->x + 26;

  00e93	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00e96	83 c0 1a	 add	 eax, 26			; 0000001aH
  00e99	a3 0c 01 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+268, eax

; 18332: 		AuctionItem.y = pActAuctionWT->y + 170;

  00e9e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]

; 18333: 		AuctionItem.fontPrio = FONT_PRIO_FRONT;
; 18334: 		// æ­é³æ
; 18335: 		play_se(202, 320, 240);

  00ea1	68 f0 00 00 00	 push	 240			; 000000f0H
  00ea6	05 aa 00 00 00	 add	 eax, 170		; 000000aaH
  00eab	c7 05 1c 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+284, 1
  00eb5	68 40 01 00 00	 push	 320			; 00000140H
  00eba	68 ca 00 00 00	 push	 202			; 000000caH
  00ebf	a3 10 01 00 00	 mov	 DWORD PTR ?AuctionItem@@3USTR_BUFFER@@A+272, eax
  00ec4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 18597: 			}
; 18598: 		}
; 18599: 	}
; 18600: }

  00ec9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ecc	83 c4 30	 add	 esp, 48			; 00000030H
  00ecf	33 cd		 xor	 ecx, ebp
  00ed1	5e		 pop	 esi
  00ed2	5b		 pop	 ebx
  00ed3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ed8	8b e5		 mov	 esp, ebp
  00eda	5d		 pop	 ebp
  00edb	c3		 ret	 0
?AuctionNewWT@@YAXXZ ENDP				; AuctionNewWT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?BankProc@@YAXXZ
_TEXT	SEGMENT
_y$1$ = -264						; size = 4
_msg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BankProc@@YAXXZ PROC					; BankProc, COMDAT

; 17936: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 17937: 	static int BankBtNo[20]; 		// æé®çç¼å·
; 17938: 	static int BankBtFlag[20];	// æé®çç¶æ
; 17939: 	static int Gold = 0;									// è¦å­å¥æååºçé±
; 17940: 	static int BankGoldInc = 0;						// éé±æ¯å ä¸æ¬¡çå¼
; 17941: 	static int BankGoldCnt = 0;						// æé®è®¡æ°
; 17942: 	int x, y;
; 17943: 	char msg[256];
; 17944: 
; 17945: 	if (CheckMenuFlag()
; 17946: 		|| (joy_trg[0] & JOY_ESC)
; 17947: 		|| actBtn == 1
; 17948: 		|| menuBtn == 1
; 17949: 		|| disconnectServerFlag == TRUE
; 17950: 		|| wnCloseFlag == 1)

  00013	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00018	85 c0		 test	 eax, eax
  0001a	0f 85 7a 06 00
	00		 jne	 $LN3@BankProc
  00020	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  0002a	0f 85 6a 06 00
	00		 jne	 $LN3@BankProc
  00030	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00038	0f 84 5c 06 00
	00		 je	 $LN3@BankProc
  0003e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00046	0f 84 4e 06 00
	00		 je	 $LN3@BankProc
  0004c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00053	0f 84 41 06 00
	00		 je	 $LN3@BankProc
  00059	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00061	0f 84 33 06 00
	00		 je	 $LN3@BankProc

; 17958: 			return;
; 17959: 		}
; 17960: 	}
; 17961: 
; 17962: 	// å¦æç®åæ²¡æç§åºé¶è¡ä»é¢
; 17963: 	if (pBankProcWnd == NULL)

  00067	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pBankProcWnd@@3PAUaction@@A ; pBankProcWnd
  0006c	85 c0		 test	 eax, eax
  0006e	0f 84 6e 06 00
	00		 je	 $LN50@BankProc

; 17974: 	}
; 17975: 	else
; 17976: 	{
; 17977: 		// å¦æè§çªå·²ç»å¼å¥½äº
; 17978: 		if (pBankProcWnd->hp > 0)

  00074	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00078	0f 8e 0e 06 00
	00		 jle	 $LN48@BankProc

; 17979: 		{
; 17980: 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  0007e	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00085	0f 84 f0 00 00
	00		 je	 $LN12@BankProc

; 17981: 			{
; 17982: 				// å¦ææä¸çæ¯ì·¨ì,æ¸æä»é¢
; 17983: 				if (HitDispNo == BankBtNo[0])

  0008b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00090	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA
  00096	0f 85 99 00 00
	00		 jne	 $LN9@BankProc

; 17984: 				{
; 17985: 					ZeroMemory(msg, sizeof(msg));

  0009c	68 00 01 00 00	 push	 256			; 00000100H
  000a1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  000a7	6a 00		 push	 0
  000a9	50		 push	 eax
  000aa	e8 00 00 00 00	 call	 _memset
  000af	83 c4 0c	 add	 esp, 12			; 0000000cH

; 17986: 					if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);

  000b2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  000b8	50		 push	 eax
  000b9	6a 00		 push	 0
$LN63@BankProc:

; 18202: 			}
; 18203: 		}
; 18204: 	}
; 18205: }

  000bb	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000c2	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  000c8	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  000ce	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  000d4	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  000da	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000e0	74 07		 je	 SHORT $LN10@BankProc
  000e2	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  000e7	eb 05		 jmp	 SHORT $LN58@BankProc
$LN10@BankProc:
  000e9	e8 00 00 00 00	 call	 ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ; old_lssproto_WN_send
$LN58@BankProc:
  000ee	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f1	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  000fb	ff 35 00 00 00
	00		 push	 DWORD PTR ?pBankProcWnd@@3PAUaction@@A ; pBankProcWnd
  00101	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00106	68 f0 00 00 00	 push	 240			; 000000f0H
  0010b	68 40 01 00 00	 push	 320			; 00000140H
  00110	68 d9 00 00 00	 push	 217			; 000000d9H
  00115	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pBankProcWnd@@3PAUaction@@A, 0 ; pBankProcWnd
  0011f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00124	83 c4 10	 add	 esp, 16			; 00000010H
  00127	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012a	33 cd		 xor	 ecx, ebp
  0012c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00131	8b e5		 mov	 esp, ebp
  00133	5d		 pop	 ebp
  00134	c3		 ret	 0
$LN9@BankProc:

; 17987: 					else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 0, msg);
; 17988: 					windowTypeWN = -1;
; 17989: 					DeathAction(pBankProcWnd);
; 17990: 					pBankProcWnd = NULL;
; 17991: 					play_se(217, 320, 240);
; 17992: 					return;
; 17993: 				}
; 17994: 				// å¦ææä¸çæ¯??,æç©å®¶å­æé¢å¤å°é±éç»gs
; 17995: 				if (HitDispNo == BankBtNo[1])

  00135	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0013a	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+4
  00140	75 39		 jne	 SHORT $LN12@BankProc

; 17996: 				{
; 17997: 					sprintf(msg, "%d", Gold);

  00142	ff 35 00 00 00
	00		 push	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00148	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0014e	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 _sprintf

; 17998: 					pc.gold -= Gold;

  00159	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  0015e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00161	29 05 60 00 00
	00		 sub	 DWORD PTR ?pc@@3UPC@@A+96, eax

; 17999: 					pc.personal_bankgold += Gold;

  00167	01 05 14 51 00
	00		 add	 DWORD PTR ?pc@@3UPC@@A+20756, eax

; 18000: 					if (bNewServer) lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 4, msg);

  0016d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00173	50		 push	 eax
  00174	6a 04		 push	 4
  00176	e9 40 ff ff ff	 jmp	 $LN63@BankProc
$LN12@BankProc:

; 18001: 					else   				 old_lssproto_WN_send(sockfd, nowGx, nowGy, indexWN, idWN, 4, msg);
; 18002: 
; 18003: 					windowTypeWN = -1;
; 18004: 					DeathAction(pBankProcWnd);
; 18005: 					pBankProcWnd = NULL;
; 18006: 					play_se(217, 320, 240);
; 18007: 					return;
; 18008: 				}
; 18009: 			}
; 18010: 
; 18011: 			// ç©å®¶å­é±
; 18012: 			if (HitDispNo == BankBtNo[3])

  0017b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00180	53		 push	 ebx
  00181	bb 10 27 00 00	 mov	 ebx, 10000		; 00002710H
  00186	56		 push	 esi
  00187	57		 push	 edi
  00188	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+12
  0018e	0f 85 6e 02 00
	00		 jne	 $LN15@BankProc

; 18013: 			{
; 18014: 				// å¦ææé®è¢«æ¾å¼äº(æ»é¼ å·¦é®æ¾å¼),è®¾å®æé®æ²¡è¢«æä¸
; 18015: 				if (mouse.onceState & MOUSE_LEFT_CRICK_UP && BankBtFlag[3] == TRUE) BankBtFlag[3] = FALSE;

  00194	f6 05 2c 00 00
	00 04		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 4
  0019b	8b 3d 0c 00 00
	00		 mov	 edi, DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+12
  001a1	74 0e		 je	 SHORT $LN17@BankProc
  001a3	33 c0		 xor	 eax, eax
  001a5	83 ff 01	 cmp	 edi, 1
  001a8	0f 44 f8	 cmove	 edi, eax
  001ab	89 3d 0c 00 00
	00		 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+12, edi
$LN17@BankProc:

; 18016: 
; 18017: 				// å¦æè¦å­å¥çé±å ä¸å·²å¨é¶è¡éçé±æ¯é¶è¡ä¸éå°åç©å®¶èº«ä¸çé±ä¸å°äºè¦å­å¥çé±
; 18018: 				if (Gold + pc.personal_bankgold <= MAX_PERSONAL_BANKGOLD && pc.gold - Gold > 0)

  001b1	8b 15 14 51 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20756
  001b7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  001bd	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  001c0	3d 80 f0 fa 02	 cmp	 eax, 50000000		; 02faf080H
  001c5	0f 8f 1e 02 00
	00		 jg	 $LN18@BankProc
  001cb	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
  001d1	8b c6		 mov	 eax, esi
  001d3	2b c1		 sub	 eax, ecx
  001d5	85 c0		 test	 eax, eax
  001d7	0f 8e 0c 02 00
	00		 jle	 $LN18@BankProc

; 18019: 				{
; 18020: 					// å­å¥çæé®è®¾ä¸ºtrue(æ­¤æ¶ä¸ºä¸ç´æçé®çç¶æ)
; 18021: 					if (BankBtFlag[3] == TRUE)

  001dd	bb 80 f0 fa 02	 mov	 ebx, 50000000		; 02faf080H
  001e2	83 ff 01	 cmp	 edi, 1
  001e5	0f 85 be 00 00
	00		 jne	 $LN26@BankProc

; 18022: 					{
; 18023: 						Gold += BankGoldInc;
; 18024: 						BankGoldCnt++;

  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA
  001f0	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA
  001f6	40		 inc	 eax
  001f7	03 cf		 add	 ecx, edi
  001f9	a3 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, eax
  001fe	89 0d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ecx
  00204	83 f8 1e	 cmp	 eax, 30			; 0000001eH

; 18025: 
; 18026: 						// å¦æBankGoldCntå¤§äº30,å¢å ä¸æ¬¡çé±åä¸ºäºå
; 18027: 						if (BankGoldCnt >= 30)

  00207	7c 2f		 jl	 SHORT $LN24@BankProc

; 18028: 						{
; 18029: 							// æcountæ¸ä¸º0
; 18030: 							BankGoldCnt = 0;

  00209	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0

; 18031: 							if (BankGoldInc == 0) BankGoldInc = 1;

  00213	85 ff		 test	 edi, edi
  00215	75 0c		 jne	 SHORT $LN22@BankProc
  00217	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 1
  00221	eb 15		 jmp	 SHORT $LN24@BankProc
$LN22@BankProc:

; 18032: 							else
; 18033: 							{
; 18034: 								// å¢å åä¸ºäºå
; 18035: 								BankGoldInc *= 5;

  00223	8d 04 bf	 lea	 eax, DWORD PTR [edi+edi*4]

; 18036: 								// æå¤ä¸æ¬¡å 10000
; 18037: 								if (BankGoldInc > 10000) BankGoldInc = 10000;

  00226	bf 10 27 00 00	 mov	 edi, 10000		; 00002710H
  0022b	3d 10 27 00 00	 cmp	 eax, 10000		; 00002710H
  00230	0f 4f c7	 cmovg	 eax, edi
  00233	a3 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, eax
$LN24@BankProc:

; 18038: 							}
; 18039: 						}
; 18040: 						// å¦æå­å¥çé±æ¯é¶è¡ä¸éå¤§
; 18041: 						if (Gold + pc.personal_bankgold >= MAX_PERSONAL_BANKGOLD)

  00238	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  0023b	3d 80 f0 fa 02	 cmp	 eax, 50000000		; 02faf080H
  00240	7c 32		 jl	 SHORT $LN25@BankProc

; 18042: 						{
; 18043: 							Gold = MAX_PERSONAL_BANKGOLD - pc.personal_bankgold;
; 18044: 							play_se(220, 320, 240);

  00242	68 f0 00 00 00	 push	 240			; 000000f0H
  00247	8b c3		 mov	 eax, ebx
  00249	2b c2		 sub	 eax, edx
  0024b	68 40 01 00 00	 push	 320			; 00000140H
  00250	68 dc 00 00 00	 push	 220			; 000000dcH
  00255	a3 00 00 00 00	 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, eax
  0025a	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0025f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00265	83 c4 0c	 add	 esp, 12			; 0000000cH
  00268	8b 15 14 51 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20756
  0026e	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
$LN25@BankProc:

; 18045: 						}
; 18046: 						// å¦æç©å®¶èº«ä¸çé±å·²å°äº0
; 18047: 						if (pc.gold - Gold < 0)

  00274	8b c6		 mov	 eax, esi
  00276	2b c1		 sub	 eax, ecx
  00278	79 2f		 jns	 SHORT $LN26@BankProc

; 18048: 						{
; 18049: 							Gold = pc.gold;
; 18050: 							play_se(220, 320, 240);

  0027a	68 f0 00 00 00	 push	 240			; 000000f0H
  0027f	68 40 01 00 00	 push	 320			; 00000140H
  00284	68 dc 00 00 00	 push	 220			; 000000dcH
  00289	89 35 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, esi
  0028f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00294	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  0029a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0029d	8b 15 14 51 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20756
  002a3	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
$LN26@BankProc:

; 18051: 						}
; 18052: 					}
; 18053: 
; 18054: 					// æä¸å·¦é®æ¶
; 18055: 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  002a9	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  002b0	74 6f		 je	 SHORT $LN54@BankProc

; 18056: 					{
; 18057: 						// å­å¥çé±å¢å 
; 18058: 						Gold++;

  002b2	41		 inc	 ecx
  002b3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ecx
  002b9	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]

; 18059: 						// å¦æå­å¥çé±å ä¸ç©å®¶å·²å¨é¶è¡éçé±å¤§äºé¶è¡ä¸é
; 18060: 						if (Gold + pc.personal_bankgold >= MAX_PERSONAL_BANKGOLD)

  002bc	3d 80 f0 fa 02	 cmp	 eax, 50000000		; 02faf080H
  002c1	7c 2b		 jl	 SHORT $LN28@BankProc

; 18061: 						{
; 18062: 							Gold = MAX_PERSONAL_BANKGOLD - pc.personal_bankgold;
; 18063: 							// æ­é³æ
; 18064: 							play_se(220, 320, 240);

  002c3	68 f0 00 00 00	 push	 240			; 000000f0H
  002c8	2b da		 sub	 ebx, edx
  002ca	68 40 01 00 00	 push	 320			; 00000140H
  002cf	68 dc 00 00 00	 push	 220			; 000000dcH
  002d4	89 1d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ebx
  002da	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  002df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  002e5	83 c4 0c	 add	 esp, 12			; 0000000cH
  002e8	8b 35 60 00 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+96
$LN28@BankProc:

; 18065: 						}
; 18066: 						// å¦æç©å®¶èº«ä¸çé±å·²å°äº0
; 18067: 						if (pc.gold - Gold < 0)

  002ee	8b c6		 mov	 eax, esi
  002f0	2b c1		 sub	 eax, ecx
  002f2	68 f0 00 00 00	 push	 240			; 000000f0H
  002f7	68 40 01 00 00	 push	 320			; 00000140H
  002fc	0f 89 bf 00 00
	00		 jns	 $LN29@BankProc

; 18068: 						{
; 18069: 							Gold = pc.gold;

  00302	89 35 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, esi

; 18070: 							play_se(220, 320, 240);

  00308	68 dc 00 00 00	 push	 220			; 000000dcH
$LN60@BankProc:

; 18095: 			}
; 18096: 
; 18097: 			// ç©å®¶é¢é±
; 18098: 			// å ä¸ºæ¯é¢é±,æä»¥Goldä¸ºè´æ°
; 18099: 			if (HitDispNo == BankBtNo[2])

  0030d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00312	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00318	83 c4 0c	 add	 esp, 12			; 0000000cH
  0031b	8b 15 14 51 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20756
$LN54@BankProc:
  00321	bb 10 27 00 00	 mov	 ebx, 10000		; 00002710H
$LN16@BankProc:
  00326	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0032b	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+8
  00331	0f 85 1c 02 00
	00		 jne	 $LN31@BankProc

; 18100: 			{
; 18101: 				// å¦ææé®è¢«æ¾å¼äº(æ»é¼ å·¦é®æ¾å¼),è®¾å®æé®æ²¡è¢«æä¸
; 18102: 				if (mouse.onceState & MOUSE_LEFT_CRICK_UP && BankBtFlag[2] == TRUE) BankBtFlag[2] = FALSE;

  00337	f6 05 2c 00 00
	00 04		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 4
  0033e	74 12		 je	 SHORT $LN33@BankProc
  00340	a1 08 00 00 00	 mov	 eax, DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8
  00345	33 f6		 xor	 esi, esi
  00347	83 f8 01	 cmp	 eax, 1
  0034a	0f 44 c6	 cmove	 eax, esi
  0034d	a3 08 00 00 00	 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8, eax
$LN33@BankProc:

; 18103: 				// å¦æè¦é¢åºçé±æ¯ç©å®¶å·²å¨é¶è¡éçé±å°ä¸é¢åºçé±å ä¸ç©å®¶èº«ä¸çé±ä¸å¤§äºç©å®¶èº«ä¸é±çä¸é
; 18104: 				if (pc.personal_bankgold + Gold > 0 && pc.gold - Gold <= CHAR_getMaxHaveGold())

  00352	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00355	85 c0		 test	 eax, eax
  00357	0f 8e e0 01 00
	00		 jle	 $LN52@BankProc
  0035d	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  00362	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  00368	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  0036e	2b ca		 sub	 ecx, edx
  00370	3b c8		 cmp	 ecx, eax
  00372	0f 8f c5 01 00
	00		 jg	 $LN52@BankProc

; 18105: 				{
; 18106: 					// å¦ææé®è¢«æä¸
; 18107: 					if (BankBtFlag[2] == TRUE)

  00378	83 3d 08 00 00
	00 01		 cmp	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8, 1
  0037f	0f 85 1b 01 00
	00		 jne	 $LN42@BankProc

; 18108: 					{
; 18109: 						// é¢åºçé±å¢å 
; 18110: 						Gold -= BankGoldInc;
; 18111: 						BankGoldCnt++;

  00385	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA
  0038a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA
  00390	40		 inc	 eax
  00391	2b d1		 sub	 edx, ecx
  00393	a3 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, eax
  00398	89 15 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, edx
  0039e	83 f8 1e	 cmp	 eax, 30			; 0000001eH

; 18112: 
; 18113: 						// å¦æBankGoldCntå¤§äº30,å¢å ä¸æ¬¡çé±åä¸ºäºå
; 18114: 						if (BankGoldCnt >= 30)

  003a1	0f 8c 86 00 00
	00		 jl	 $LN40@BankProc

; 18115: 						{
; 18116: 							// æcountæ¸ä¸º0
; 18117: 							BankGoldCnt = 0;

  003a7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0

; 18118: 							if (BankGoldInc == 0) BankGoldInc = 1;

  003b1	85 c9		 test	 ecx, ecx
  003b3	75 68		 jne	 SHORT $LN38@BankProc
  003b5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 1
  003bf	eb 6c		 jmp	 SHORT $LN40@BankProc
$LN29@BankProc:

; 18071: 						}
; 18072: 						else
; 18073: 						{
; 18074: 							// ä¸æ¬¡å¢å çé±æ¸ä¸º0
; 18075: 							BankGoldInc = 0;

  003c1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 0

; 18076: 							// è®¡æ°æ¸ä¸º0
; 18077: 							BankGoldCnt = 0;

  003cb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0

; 18078: 							// è®¾å®æé®è¢«æä¸
; 18079: 							BankBtFlag[3] = TRUE;

  003d5	c7 05 0c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+12, 1

; 18080: 							// æ­é³æ
; 18081: 							play_se(217, 320, 240);

  003df	68 d9 00 00 00	 push	 217			; 000000d9H

; 18082: 						}
; 18083: 					}
; 18084: 				}

  003e4	e9 24 ff ff ff	 jmp	 $LN60@BankProc
$LN18@BankProc:

; 18085: 				else
; 18086: 				{
; 18087: 					BankGoldInc = 0;

  003e9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 0

; 18088: 					BankGoldCnt = 0;

  003f3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0

; 18089: 				}
; 18090: 			}

  003fd	e9 24 ff ff ff	 jmp	 $LN16@BankProc
$LN15@BankProc:

; 18091: 			else
; 18092: 			{
; 18093: 				// è®¾å®æé®æ²¡è¢«æä¸
; 18094: 				BankBtFlag[3] = FALSE;

  00402	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00408	8b 15 14 51 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20756
  0040e	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+12, 0
  00418	e9 09 ff ff ff	 jmp	 $LN16@BankProc
$LN38@BankProc:

; 18119: 							else
; 18120: 							{
; 18121: 								// å¢å åä¸ºäºå
; 18122: 								BankGoldInc *= 5;

  0041d	8d 04 89	 lea	 eax, DWORD PTR [ecx+ecx*4]
  00420	3d 10 27 00 00	 cmp	 eax, 10000		; 00002710H

; 18123: 								// æå¤ä¸æ¬¡å 10000
; 18124: 								if (BankGoldInc > 10000) BankGoldInc = 10000;

  00425	0f 4f c3	 cmovg	 eax, ebx
  00428	a3 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, eax
$LN40@BankProc:

; 18125: 							}
; 18126: 						}
; 18127: 						// å¦æè¦é¢åºçé±æ¯ç©å®¶å·²å¨é¶è¡éçé±å¤
; 18128: 						if (pc.personal_bankgold + Gold < 0)

  0042d	8b 0d 14 51 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20756
  00433	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00436	85 c0		 test	 eax, eax
  00438	79 1f		 jns	 SHORT $LN41@BankProc

; 18129: 						{
; 18130: 							Gold = pc.personal_bankgold * (-1);
; 18131: 							play_se(220, 320, 240);

  0043a	68 f0 00 00 00	 push	 240			; 000000f0H
  0043f	f7 d9		 neg	 ecx
  00441	68 40 01 00 00	 push	 320			; 00000140H
  00446	68 dc 00 00 00	 push	 220			; 000000dcH
  0044b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ecx
  00451	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00456	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN41@BankProc:

; 18132: 						}
; 18133: 						// å¦æé¢åºçé±å ä¸ç©å®¶èº«ä¸çé±å¤§äºç©å®¶èº«ä¸é±çä¸é
; 18134: 						if (pc.gold - Gold >= CHAR_getMaxHaveGold())

  00459	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  0045e	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  00464	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  0046a	2b ca		 sub	 ecx, edx
  0046c	3b c8		 cmp	 ecx, eax
  0046e	7c 30		 jl	 SHORT $LN42@BankProc

; 18135: 						{
; 18136: 							Gold = (CHAR_getMaxHaveGold() - pc.gold) * (-1);

  00470	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  00475	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+96

; 18137: 							play_se(220, 320, 240);

  0047b	68 f0 00 00 00	 push	 240			; 000000f0H
  00480	2b c8		 sub	 ecx, eax
  00482	68 40 01 00 00	 push	 320			; 00000140H
  00487	68 dc 00 00 00	 push	 220			; 000000dcH
  0048c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ecx
  00492	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00497	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  0049d	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN42@BankProc:

; 18138: 						}
; 18139: 					}
; 18140: 					// æä¸å·¦é®æ¶
; 18141: 					if (mouse.onceState & MOUSE_LEFT_CRICK)

  004a0	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  004a7	0f 84 b0 00 00
	00		 je	 $LN32@BankProc

; 18142: 					{
; 18143: 						Gold--;

  004ad	8b 0d 14 51 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20756
  004b3	4a		 dec	 edx
  004b4	89 15 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, edx
  004ba	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]

; 18144: 
; 18145: 						// å¦æè¦é¢åºçé±æ¯ç©å®¶å·²å¨é¶è¡éçé±å¤
; 18146: 						if (pc.personal_bankgold + Gold < 0)

  004bd	85 c0		 test	 eax, eax
  004bf	79 21		 jns	 SHORT $LN44@BankProc

; 18147: 						{
; 18148: 							Gold = pc.personal_bankgold * (-1);

  004c1	f7 d9		 neg	 ecx
$LN61@BankProc:

; 18180: 			}
; 18181: 
; 18182: 			if (pBankProcWnd != NULL)

  004c3	68 f0 00 00 00	 push	 240			; 000000f0H
  004c8	68 40 01 00 00	 push	 320			; 00000140H
  004cd	68 dc 00 00 00	 push	 220			; 000000dcH
  004d2	89 0d 00 00 00
	00		 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, ecx
  004d8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  004dd	83 c4 0c	 add	 esp, 12			; 0000000cH
  004e0	eb 7b		 jmp	 SHORT $LN32@BankProc
$LN44@BankProc:

; 18149: 							play_se(220, 320, 240);
; 18150: 						}
; 18151: 						else
; 18152: 							// å¦æé¢åºçé±å ä¸ç©å®¶èº«ä¸çé±å¤§äºç©å®¶èº«ä¸é±çä¸é
; 18153: 							if (pc.gold - Gold >= CHAR_getMaxHaveGold())

  004e2	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  004e7	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  004ed	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  004f3	3b c8		 cmp	 ecx, eax
  004f5	7c 0f		 jl	 SHORT $LN46@BankProc

; 18154: 							{
; 18155: 								Gold = (CHAR_getMaxHaveGold() - pc.gold) * (-1);

  004f7	e8 00 00 00 00	 call	 ?CHAR_getMaxHaveGold@@YAHXZ ; CHAR_getMaxHaveGold
  004fc	8b 0d 60 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+96
  00502	2b c8		 sub	 ecx, eax

; 18156: 								play_se(220, 320, 240);
; 18157: 							}

  00504	eb bd		 jmp	 SHORT $LN61@BankProc
$LN46@BankProc:

; 18158: 							else
; 18159: 							{
; 18160: 								// ä¸æ¬¡å¢å çé±æ¸ä¸º0
; 18161: 								BankGoldInc = 0;
; 18162: 								// è®¡æ°æ¸ä¸º0
; 18163: 								BankGoldCnt = 0;
; 18164: 								// è®¾å®æé®è¢«æä¸
; 18165: 								BankBtFlag[2] = TRUE;
; 18166: 								play_se(217, 320, 240);

  00506	68 f0 00 00 00	 push	 240			; 000000f0H
  0050b	68 40 01 00 00	 push	 320			; 00000140H
  00510	68 d9 00 00 00	 push	 217			; 000000d9H
  00515	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 0
  0051f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0
  00529	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8, 1

; 18180: 			}
; 18181: 
; 18182: 			if (pBankProcWnd != NULL)

  00533	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00538	83 c4 0c	 add	 esp, 12			; 0000000cH
  0053b	eb 20		 jmp	 SHORT $LN32@BankProc
$LN52@BankProc:

; 18167: 							}
; 18168: 					}
; 18169: 				}
; 18170: 				else
; 18171: 				{
; 18172: 					BankGoldInc = 0;

  0053d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldInc@?1??BankProc@@YAXXZ@4HA, 0

; 18173: 					BankGoldCnt = 0;

  00547	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankGoldCnt@?1??BankProc@@YAXXZ@4HA, 0

; 18174: 				}
; 18175: 			}

  00551	eb 0a		 jmp	 SHORT $LN32@BankProc
$LN31@BankProc:

; 18176: 			else
; 18177: 			{
; 18178: 				// è®¾å®æé®æ²¡è¢«æä¸
; 18179: 				BankBtFlag[2] = FALSE;

  00553	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8, 0
$LN32@BankProc:

; 18180: 			}
; 18181: 
; 18182: 			if (pBankProcWnd != NULL)

  0055d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pBankProcWnd@@3PAUaction@@A ; pBankProcWnd
  00562	85 c0		 test	 eax, eax
  00564	0f 84 1f 01 00
	00		 je	 $LN55@BankProc

; 18183: 			{
; 18184: 				// åº§æ è®¾å®
; 18185: 				x = pBankProcWnd->x;

  0056a	8b 58 18	 mov	 ebx, DWORD PTR [eax+24]

; 18186: 				y = pBankProcWnd->y;

  0056d	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]

; 18187: 
; 18188: 				BankBtNo[0] = StockDispBuffer(x + 200, y + 133, DISP_PRIO_IME3, CG_TRADE_CANCEL_BTN, 2);

  00570	6a 02		 push	 2
  00572	68 c2 65 00 00	 push	 26050			; 000065c2H
  00577	6a 69		 push	 105			; 00000069H
  00579	8d b0 85 00 00
	00		 lea	 esi, DWORD PTR [eax+133]
  0057f	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  00585	8d bb c8 00 00
	00		 lea	 edi, DWORD PTR [ebx+200]
  0058b	56		 push	 esi
  0058c	57		 push	 edi
  0058d	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18189: 				BankBtNo[1] = StockDispBuffer(x + 75, y + 133, DISP_PRIO_IME3, CG_TRADE_OK_BTN, 2);

  00592	6a 02		 push	 2
  00594	68 ed 65 00 00	 push	 26093			; 000065edH
  00599	6a 69		 push	 105			; 00000069H
  0059b	a3 00 00 00 00	 mov	 DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA, eax
  005a0	8d 43 4b	 lea	 eax, DWORD PTR [ebx+75]
  005a3	56		 push	 esi
  005a4	50		 push	 eax
  005a5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 18190: 				BankBtNo[2] = StockDispBuffer(x + 140, y + 74, DISP_PRIO_IME3, CG_UP_BTN + BankBtFlag[2], 2);

  005aa	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  005b0	a3 04 00 00 00	 mov	 DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+4, eax
  005b5	83 c6 4a	 add	 esi, 74			; 0000004aH
  005b8	a1 08 00 00 00	 mov	 eax, DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+8
  005bd	6a 02		 push	 2
  005bf	05 4c 66 00 00	 add	 eax, 26188		; 0000664cH
  005c4	50		 push	 eax
  005c5	6a 69		 push	 105			; 00000069H
  005c7	8d 83 8c 00 00
	00		 lea	 eax, DWORD PTR [ebx+140]
  005cd	56		 push	 esi
  005ce	50		 push	 eax
  005cf	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005d4	a3 08 00 00 00	 mov	 DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+8, eax

; 18191: 				BankBtNo[3] = StockDispBuffer(x + 200, y + 74, DISP_PRIO_IME3, CG_DOWN_BTN + BankBtFlag[3], 2);

  005d9	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?BankBtFlag@?1??BankProc@@YAXXZ@4PAHA+12
  005de	6a 02		 push	 2
  005e0	05 4e 66 00 00	 add	 eax, 26190		; 0000664eH
  005e5	50		 push	 eax
  005e6	6a 69		 push	 105			; 00000069H
  005e8	56		 push	 esi
  005e9	57		 push	 edi
  005ea	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005ef	a3 0c 00 00 00	 mov	 DWORD PTR ?BankBtNo@?1??BankProc@@YAXXZ@4PAHA+12, eax
  005f4	83 c4 50	 add	 esp, 80			; 00000050H

; 18192: 
; 18193: 				sprintf(msg, "%d", pc.gold - Gold);

  005f7	a1 60 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+96
  005fc	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00602	50		 push	 eax
  00603	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00609	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0060e	50		 push	 eax
  0060f	e8 00 00 00 00	 call	 _sprintf

; 18194: 				StockFontBuffer(x + 180, y + 40, FONT_PRIO_FRONT, 0, msg, 0);

  00614	6a 00		 push	 0
  00616	8d b3 b4 00 00
	00		 lea	 esi, DWORD PTR [ebx+180]
  0061c	8b 9d f8 fe ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  00622	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00628	50		 push	 eax
  00629	6a 00		 push	 0
  0062b	6a 01		 push	 1
  0062d	8d 43 28	 lea	 eax, DWORD PTR [ebx+40]
  00630	50		 push	 eax
  00631	56		 push	 esi
  00632	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 18195: 				sprintf(msg, "%d", pc.personal_bankgold + Gold);

  00637	a1 14 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20756
  0063c	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA
  00642	50		 push	 eax
  00643	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00649	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  0064e	50		 push	 eax
  0064f	e8 00 00 00 00	 call	 _sprintf

; 18196: 				StockFontBuffer(x + 180, y + 86, FONT_PRIO_FRONT, 0, msg, 0);

  00654	6a 00		 push	 0
  00656	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0065c	50		 push	 eax
  0065d	6a 00		 push	 0
  0065f	6a 01		 push	 1
  00661	8d 43 56	 lea	 eax, DWORD PTR [ebx+86]
  00664	50		 push	 eax
  00665	56		 push	 esi
  00666	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0066b	83 c4 48	 add	 esp, 72			; 00000048H

; 18197: #ifdef _READ16BITBMP
; 18198: 				if (g_bUseAlpha) StockDispBuffer(320, 240, DISP_PRIO_IME3, OLD_GRAPHICS_START + 46, 1);
; 18199: 				else
; 18200: #endif
; 18201: 					StockDispBuffer(320, 240, DISP_PRIO_IME3, 26287, 1);

  0066e	6a 01		 push	 1
  00670	68 af 66 00 00	 push	 26287			; 000066afH
  00675	6a 69		 push	 105			; 00000069H
  00677	68 f0 00 00 00	 push	 240			; 000000f0H
  0067c	68 40 01 00 00	 push	 320			; 00000140H
  00681	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00686	83 c4 14	 add	 esp, 20			; 00000014H
$LN55@BankProc:
  00689	5f		 pop	 edi
  0068a	5e		 pop	 esi
  0068b	5b		 pop	 ebx
$LN48@BankProc:

; 18202: 			}
; 18203: 		}
; 18204: 	}
; 18205: }

  0068c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0068f	33 cd		 xor	 ecx, ebp
  00691	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00696	8b e5		 mov	 esp, ebp
  00698	5d		 pop	 ebp
  00699	c3		 ret	 0
$LN3@BankProc:

; 17951: 	{
; 17952: 		if (pBankProcWnd != NULL)

  0069a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pBankProcWnd@@3PAUaction@@A ; pBankProcWnd
  0069f	85 c0		 test	 eax, eax
  006a1	74 3f		 je	 SHORT $LN50@BankProc

; 17953: 		{
; 17954: 			windowTypeWN = -1;
; 17955: 			DeathAction(pBankProcWnd);

  006a3	50		 push	 eax
  006a4	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  006ae	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 17956: 			pBankProcWnd = NULL;
; 17957: 			play_se(217, 320, 240);

  006b3	68 f0 00 00 00	 push	 240			; 000000f0H
  006b8	68 40 01 00 00	 push	 320			; 00000140H
  006bd	68 d9 00 00 00	 push	 217			; 000000d9H
  006c2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pBankProcWnd@@3PAUaction@@A, 0 ; pBankProcWnd
  006cc	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  006d1	83 c4 10	 add	 esp, 16			; 00000010H

; 18202: 			}
; 18203: 		}
; 18204: 	}
; 18205: }

  006d4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006d7	33 cd		 xor	 ecx, ebp
  006d9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006de	8b e5		 mov	 esp, ebp
  006e0	5d		 pop	 ebp
  006e1	c3		 ret	 0
$LN50@BankProc:

; 17964: 	{
; 17965: 		// ç§åºé¶è¡ä»é¢
; 17966: #ifdef _READ16BITBMP
; 17967: 		if (g_bUseAlpha) pBankProcWnd = MakeWindowDisp(185, 160, 270, 160, OLD_GRAPHICS_START + 46, -1);  //x=(640-w)/2 y=(480-h)/2 w=270 h=160
; 17968: 		else
; 17969: #endif
; 17970: 			pBankProcWnd = MakeWindowDisp(185, 160, 270, 160, 26287, -1);  //x=(640-w)/2 y=(480-h)/2 w=270 h=160

  006e2	6a ff		 push	 -1
  006e4	68 af 66 00 00	 push	 26287			; 000066afH
  006e9	68 a0 00 00 00	 push	 160			; 000000a0H
  006ee	68 0e 01 00 00	 push	 270			; 0000010eH
  006f3	68 a0 00 00 00	 push	 160			; 000000a0H
  006f8	68 b9 00 00 00	 push	 185			; 000000b9H
  006fd	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 17971: 		Gold = 0;
; 17972: 		// æ­é³æ
; 17973: 		play_se(202, 320, 240);

  00702	68 f0 00 00 00	 push	 240			; 000000f0H
  00707	68 40 01 00 00	 push	 320			; 00000140H
  0070c	68 ca 00 00 00	 push	 202			; 000000caH
  00711	a3 00 00 00 00	 mov	 DWORD PTR ?pBankProcWnd@@3PAUaction@@A, eax ; pBankProcWnd
  00716	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Gold@?1??BankProc@@YAXXZ@4HA, 0
  00720	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 18202: 			}
; 18203: 		}
; 18204: 	}
; 18205: }

  00725	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00728	83 c4 24	 add	 esp, 36			; 00000024H
  0072b	33 cd		 xor	 ecx, ebp
  0072d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00732	8b e5		 mov	 esp, ebp
  00734	5d		 pop	 ebp
  00735	c3		 ret	 0
?BankProc@@YAXXZ ENDP					; BankProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?DelCharGraColorWin@@YAHXZ
_TEXT	SEGMENT
_ret$1$ = -24						; size = 4
_msg$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?DelCharGraColorWin@@YAHXZ PROC				; DelCharGraColorWin, COMDAT

; 15842: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 15843: 	static int fontId[] = { -2, -2 };
; 15844: 	static BOOL bErr = FALSE;
; 15845: 	static ACTION* ptActMenuWin = NULL;
; 15846: 	int id;
; 15847: 	int i;
; 15848: 	static int x, y, w, h;
; 15849: 	int ret = 0;
; 15850: 	char msg[][8] = {

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04OKOHEJBO@?5?$DP?$DP?5@
  00015	89 45 ec	 mov	 DWORD PTR _msg$[ebp], eax
  00018	0f b6 05 04 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_04OKOHEJBO@?5?$DP?$DP?5@+4
  0001f	88 45 f0	 mov	 BYTE PTR _msg$[ebp+4], al
  00022	33 c0		 xor	 eax, eax
  00024	66 89 45 f1	 mov	 WORD PTR _msg$[ebp+5], ax
  00028	88 45 f3	 mov	 BYTE PTR _msg$[ebp+7], al
  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@
  00030	89 45 f4	 mov	 DWORD PTR _msg$[ebp+8], eax
  00033	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@+4
  00039	53		 push	 ebx
  0003a	33 db		 xor	 ebx, ebx
  0003c	66 89 45 f8	 mov	 WORD PTR _msg$[ebp+12], ax
  00040	0f b6 05 06 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_06CJHLLHBH@?5?C?k?$LM?R?5@+6
  00047	56		 push	 esi
  00048	89 5d e8	 mov	 DWORD PTR _ret$1$[ebp], ebx
  0004b	88 45 fa	 mov	 BYTE PTR _msg$[ebp+14], al
  0004e	88 5d fb	 mov	 BYTE PTR _msg$[ebp+15], bl

; 15851: 		" ?? ",
; 15852: 		" ì·¨ì "
; 15853: 	};
; 15854: 	// åå§å
; 15855: 	if (selCharGraColorWinProcNo == 0) {

  00051	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, ebx
  00057	0f 85 bd 00 00
	00		 jne	 $LN8@DelCharGra

; 15856: 		selCharGraColorWinProcNo = 1;
; 15857: 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 15858: 			fontId[i] = -2;
; 15859: 		//è§çªå¶ä½
; 15860: 		w = 3;
; 15861: 		h = 2;
; 15862: 		x = 250;
; 15863: 		y = 180;
; 15864: 
; 15865: 		//Change fix è°æ´é¢¢ç¤ºçä½ç½®
; 15866: 		y = 355;
; 15867: 		if (selectPcNo == 0)

  0005d	66 39 1d 00 00
	00 00		 cmp	 WORD PTR ?selectPcNo@@3FA, bx ; selectPcNo
  00064	b9 6e 00 00 00	 mov	 ecx, 110		; 0000006eH

; 15868: 			x = 110;
; 15869: 		else
; 15870: 			x = 410;
; 15871: 
; 15872: 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00069	6a 01		 push	 1
  0006b	53		 push	 ebx
  0006c	6a 02		 push	 2
  0006e	6a 03		 push	 3
  00070	b8 9a 01 00 00	 mov	 eax, 410		; 0000019aH
  00075	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, 1
  0007f	0f 44 c1	 cmove	 eax, ecx
  00082	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA, -2 ; fffffffeH
  0008c	68 63 01 00 00	 push	 355			; 00000163H
  00091	50		 push	 eax
  00092	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA+4, -2 ; fffffffeH
  0009c	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?w@?1??DelCharGraColorWin@@YAHXZ@4HA, 3
  000a6	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??DelCharGraColorWin@@YAHXZ@4HA, 2
  000b0	c7 05 00 00 00
	00 63 01 00 00	 mov	 DWORD PTR ?y@?1??DelCharGraColorWin@@YAHXZ@4HA, 355 ; 00000163H
  000ba	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??DelCharGraColorWin@@YAHXZ@4HA, eax
  000bf	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 15873: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 15874: 		x = ptActMenuWin->x;
; 15875: 		y = ptActMenuWin->y;
; 15876: #endif	
; 15877: 		initStrBuffer(&passwd, x + 20, y + 44, 20, FONT_PAL_WHITE, FONT_PRIO_FRONT);

  000c4	6a 01		 push	 1
  000c6	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A, eax
  000cb	53		 push	 ebx
  000cc	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000cf	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  000d2	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??DelCharGraColorWin@@YAHXZ@4HA, eax
  000d7	83 c0 2c	 add	 eax, 44			; 0000002cH
  000da	6a 14		 push	 20			; 00000014H
  000dc	50		 push	 eax
  000dd	8d 41 14	 lea	 eax, DWORD PTR [ecx+20]
  000e0	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??DelCharGraColorWin@@YAHXZ@4HA, ecx
  000e6	50		 push	 eax
  000e7	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  000ec	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 15878: 		// è®¾å®è¾å¥å¯ç çStrBuffer
; 15879: 		passwd.cnt = 0;
; 15880: 		passwd.cursor = 0;
; 15881: 		passwd.filterFlag = BLIND_TYPE;
; 15882: 		GetKeyInputFocus(&passwd);

  000f1	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  000f6	88 1d 07 01 00
	00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+263, bl
  000fc	88 1d 09 01 00
	00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+265, bl
  00102	c7 05 20 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?passwd@@3USTR_BUFFER@@A+288, 1
  0010c	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  00111	83 c4 34	 add	 esp, 52			; 00000034H

; 15883: 		bErr = FALSE;

  00114	89 1d 00 00 00
	00		 mov	 DWORD PTR ?bErr@?1??DelCharGraColorWin@@YAHXZ@4HA, ebx
$LN8@DelCharGra:

; 15884: 	}
; 15885: 	// å¤æ­æ¯å¦æä¸æå­
; 15886: 	id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  0011a	6a 02		 push	 2
  0011c	68 00 00 00 00	 push	 OFFSET ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA
  00121	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  00126	83 c4 08	 add	 esp, 8

; 15887: 	// æä¸??
; 15888: 	if (id == 0) {

  00129	85 c0		 test	 eax, eax
  0012b	75 0a		 jne	 SHORT $LN11@DelCharGra

; 15889: #ifdef _NB_DELCHARTWOPASS
; 15890: 		ret = 1;

  0012d	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 15891: 		bErr = FALSE;

  00130	a3 00 00 00 00	 mov	 DWORD PTR ?bErr@?1??DelCharGraColorWin@@YAHXZ@4HA, eax

; 15892: 		play_se(217, 320, 240);
; 15893: #else
; 15894: 		char sztemp[32];
; 15895: 		CopyMemory(sztemp, szPassword, 32);
; 15896: 		ecb_crypt("f;encor1c", sztemp, 32, DES_DECRYPT);
; 15897: 		if (passwd.cnt == strlen(sztemp) && !strncmp(sztemp, passwd.buffer, passwd.cnt)) {
; 15898: 			ret = 1;
; 15899: 			bErr = FALSE;
; 15900: 			play_se(217, 320, 240);	// clickå£°
; 15901: 		}
; 15902: 		else {
; 15903: 			passwd.cnt = 0;
; 15904: 			passwd.cursor = 0;
; 15905: 			bErr = TRUE;
; 15906: 		}
; 15907: #endif
; 15908: 	}

  00135	eb 0a		 jmp	 SHORT $LN38@DelCharGra
$LN11@DelCharGra:

; 15909: 	else
; 15910: 		// æä¸ì·¨ì
; 15911: 		if (id == 1) {

  00137	83 f8 01	 cmp	 eax, 1
  0013a	75 3c		 jne	 SHORT $LN37@DelCharGra

; 15912: 			ret = 2;

  0013c	bb 02 00 00 00	 mov	 ebx, 2
$LN38@DelCharGra:

; 15913: 			play_se(217, 320, 240);	// clickå£°
; 15914: 		}
; 15915: 	// å·²ç»è¾å¥ç»æ
; 15916: 	if (ret != 0) {
; 15917: 		if (ptActMenuWin) {

  00141	68 f0 00 00 00	 push	 240			; 000000f0H
  00146	68 40 01 00 00	 push	 320			; 00000140H
  0014b	68 d9 00 00 00	 push	 217			; 000000d9H
  00150	89 5d e8	 mov	 DWORD PTR _ret$1$[ebp], ebx
  00153	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00158	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A
  0015e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00161	85 f6		 test	 esi, esi
  00163	74 19		 je	 SHORT $LN15@DelCharGra

; 15918: 			DeathAction(ptActMenuWin);

  00165	56		 push	 esi
  00166	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0016b	83 c4 04	 add	 esp, 4

; 15919: 			ptActMenuWin = NULL;

  0016e	33 f6		 xor	 esi, esi
  00170	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A, esi
  00176	eb 06		 jmp	 SHORT $LN15@DelCharGra
$LN37@DelCharGra:

; 15909: 	else
; 15910: 		// æä¸ì·¨ì
; 15911: 		if (id == 1) {

  00178	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A
$LN15@DelCharGra:

; 15920: 		}
; 15921: 	}
; 15922: 	// æ¯å¦æåæå­
; 15923: 	id = focusFontId(fontId, sizeof(fontId) / sizeof(int));

  0017e	6a 02		 push	 2
  00180	68 00 00 00 00	 push	 OFFSET ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA
  00185	e8 00 00 00 00	 call	 ?focusFontId@@YAHPAHH@Z	; focusFontId
  0018a	83 c4 08	 add	 esp, 8

; 15924: 	// ??
; 15925: 	if (id == 0)

  0018d	85 c0		 test	 eax, eax
  0018f	75 07		 jne	 SHORT $LN16@DelCharGra

; 15926: 		ShowBottomLineString(FONT_PAL_WHITE, "ì¼ë¦­í°ë¥¼ ì­ì íë ¤ë©´ ë¹ë°ë²í¸ë¥¼ ìë ¥íì¸ì");

  00191	68 00 00 00 00	 push	 OFFSET ??_C@_0CK@PKMNOIEH@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?O?$LH?A?$LI?i?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5@
  00196	eb 0a		 jmp	 SHORT $LN39@DelCharGra
$LN16@DelCharGra:

; 15927: 	else
; 15928: 		// ì·¨ì
; 15929: 		if (id == 1)

  00198	83 f8 01	 cmp	 eax, 1
  0019b	75 15		 jne	 SHORT $LN18@DelCharGra

; 15930: 			ShowBottomLineString(FONT_PAL_WHITE, "ì¼ë¦­í°ë¥¼ ì­ì í©ëë¤");

  0019d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DIPOFJGG@?D?I?$LI?$KP?E?M?$LI?$KG?5?$LL?h?A?$KG?G?U?$LE?O?$LE?Y@
$LN39@DelCharGra:

; 15931: 	if (ptActMenuWin != NULL) {

  001a2	6a 00		 push	 0
  001a4	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  001a9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActMenuWin@?1??DelCharGraColorWin@@YAHXZ@4PAUaction@@A
  001af	83 c4 08	 add	 esp, 8
$LN18@DelCharGra:
  001b2	85 f6		 test	 esi, esi
  001b4	0f 84 a5 00 00
	00		 je	 $LN36@DelCharGra

; 15932: 		if (ptActMenuWin->hp >= 1) {

  001ba	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  001be	0f 8c 9b 00 00
	00		 jl	 $LN36@DelCharGra

; 15933: 			for (i = 0; i < sizeof(fontId) / sizeof(int); i++) {

  001c4	57		 push	 edi
  001c5	33 ff		 xor	 edi, edi
  001c7	8d 5d ec	 lea	 ebx, DWORD PTR _msg$[ebp]
  001ca	33 f6		 xor	 esi, esi
  001cc	0f 1f 40 00	 npad	 4
$LL7@DelCharGra:

; 15934: 				fontId[i] = StockFontBuffer(x + 50 + i * 48, y + 64, FONT_PRIO_FRONT, FONT_PAL_YELLOW, msg[i], 2);

  001d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??DelCharGraColorWin@@YAHXZ@4HA
  001d5	6a 02		 push	 2
  001d7	53		 push	 ebx
  001d8	6a 04		 push	 4
  001da	83 c0 40	 add	 eax, 64			; 00000040H
  001dd	6a 01		 push	 1
  001df	50		 push	 eax
  001e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??DelCharGraColorWin@@YAHXZ@4HA
  001e5	83 c0 32	 add	 eax, 50			; 00000032H
  001e8	03 c7		 add	 eax, edi
  001ea	50		 push	 eax
  001eb	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001f0	89 86 00 00 00
	00		 mov	 DWORD PTR ?fontId@?1??DelCharGraColorWin@@YAHXZ@4PAHA[esi], eax
  001f6	83 c4 18	 add	 esp, 24			; 00000018H
  001f9	83 c6 04	 add	 esi, 4
  001fc	83 c3 08	 add	 ebx, 8
  001ff	83 c7 30	 add	 edi, 48			; 00000030H
  00202	83 fe 08	 cmp	 esi, 8
  00205	72 c9		 jb	 SHORT $LL7@DelCharGra

; 15935: 			}
; 15936: 			if (bErr)

  00207	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??DelCharGraColorWin@@YAHXZ@4HA

; 15937: 				StockFontBuffer(x + 20, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë¹ë°ë²í¸ê° íë ¸ìµëë¤.", 0);

  0020d	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BH@BGEMBKPO@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LA?$KB?5?F?$LC?$LH?H?$LN?$MA?$LE?O?$LE?Y?4@
  00212	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??DelCharGraColorWin@@YAHXZ@4HA
  00217	83 c1 14	 add	 ecx, 20			; 00000014H
  0021a	83 c0 14	 add	 eax, 20			; 00000014H
  0021d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bErr@?1??DelCharGraColorWin@@YAHXZ@4HA, 0
  00224	5f		 pop	 edi
  00225	75 05		 jne	 SHORT $LN22@DelCharGra

; 15938: 			else
; 15939: #ifdef _NB_DELCHARTWOPASS
; 15940: 				StockFontBuffer(x + 20, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "ë¹ë°ë²í¸ë¥¼ ìë ¥í´ì£¼ì¸ì", 0);

  00227	ba 00 00 00 00	 mov	 edx, OFFSET ??_C@_0BI@GILIOCHN@?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?X?A?V?$LM?$LM?$LP?d@
$LN22@DelCharGra:

; 15941: #else
; 15942: 				StockFontBuffer(x + 20, y + 20, FONT_PRIO_FRONT, FONT_PAL_WHITE, "è¯·è¾å¥å¯ç ", 0);
; 15943: #endif
; 15944: 			StockFontBuffer2(&passwd);

  0022c	6a 00		 push	 0
  0022e	52		 push	 edx
  0022f	6a 00		 push	 0
  00231	6a 01		 push	 1
  00233	50		 push	 eax
  00234	51		 push	 ecx
  00235	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0023a	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  0023f	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  00244	83 c4 1c	 add	 esp, 28			; 0000001cH

; 15945: 			FlashKeyboardCursor();

  00247	e8 00 00 00 00	 call	 ?FlashKeyboardCursor@@YAXXZ ; FlashKeyboardCursor

; 15946: 		}
; 15947: 	}
; 15948: 	return ret;

  0024c	8b 45 e8	 mov	 eax, DWORD PTR _ret$1$[ebp]
  0024f	5e		 pop	 esi

; 15949: }

  00250	5b		 pop	 ebx
  00251	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00254	33 cd		 xor	 ecx, ebp
  00256	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0025b	8b e5		 mov	 esp, ebp
  0025d	5d		 pop	 ebp
  0025e	c3		 ret	 0
$LN36@DelCharGra:
  0025f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00262	8b c3		 mov	 eax, ebx
  00264	5e		 pop	 esi
  00265	33 cd		 xor	 ecx, ebp
  00267	5b		 pop	 ebx
  00268	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0026d	8b e5		 mov	 esp, ebp
  0026f	5d		 pop	 ebp
  00270	c3		 ret	 0
?DelCharGraColorWin@@YAHXZ ENDP				; DelCharGraColorWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?getStrSplit@@YAXPAD0HHH@Z
_TEXT	SEGMENT
_src$GSCopy$1$ = -1052					; size = 4
_flag$1$ = -1048					; size = 4
tv297 = -1044						; size = 4
_i$1$ = -1040						; size = 4
_distSize$GSCopy$1$ = -1036				; size = 4
_strLen$GSCopy$2$ = -1032				; size = 4
_msg$ = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
_dist$ = 8						; size = 4
_src$ = 12						; size = 4
_distSize$ = 16						; size = 4
_line$ = 20						; size = 4
_strLen$ = 24						; size = 4
?getStrSplit@@YAXPAD0HHH@Z PROC				; getStrSplit, COMDAT

; 5327 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 04 00
	00		 sub	 esp, 1052		; 0000041cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 45 10	 mov	 eax, DWORD PTR _distSize$[ebp]
  00016	8b 55 18	 mov	 edx, DWORD PTR _strLen$[ebp]
  00019	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _distSize$GSCopy$1$[ebp], eax

; 5328 : 	int i, j;
; 5329 : 	int flag;
; 5330 : 	char msg[1024];
; 5331 : 	char* ptMsg;
; 5332 : 	char* dis;
; 5333 : 
; 5334 : 	dis = dist;
; 5335 : 	if (distSize - 1 < strLen)

  0001f	48		 dec	 eax
  00020	3b c2		 cmp	 eax, edx
  00022	53		 push	 ebx
  00023	0f 4c d0	 cmovl	 edx, eax

; 5336 : 	{
; 5337 : 		strLen = distSize - 1;
; 5338 : 	}
; 5339 : 
; 5340 : 	for (i = 0, j = 0; i < line && j < line; i++, j++, dis += distSize)

  00026	33 c9		 xor	 ecx, ecx
  00028	8b 45 14	 mov	 eax, DWORD PTR _line$[ebp]
  0002b	33 db		 xor	 ebx, ebx
  0002d	89 95 f8 fb ff
	ff		 mov	 DWORD PTR _strLen$GSCopy$2$[ebp], edx
  00033	56		 push	 esi
  00034	8b 75 0c	 mov	 esi, DWORD PTR _src$[ebp]
  00037	89 b5 e4 fb ff
	ff		 mov	 DWORD PTR _src$GSCopy$1$[ebp], esi
  0003d	57		 push	 edi
  0003e	8b 7d 08	 mov	 edi, DWORD PTR _dist$[ebp]
  00041	85 c0		 test	 eax, eax
  00043	0f 8e 01 01 00
	00		 jle	 $LN8@getStrSpli
  00049	eb 0b		 jmp	 SHORT $LN4@getStrSpli
  0004b	0f 1f 44 00 00	 npad	 5
$LL37@getStrSpli:
  00050	8b 8d f0 fb ff
	ff		 mov	 ecx, DWORD PTR _i$1$[ebp]
$LN4@getStrSpli:
  00056	3b d8		 cmp	 ebx, eax
  00058	0f 8d ec 00 00
	00		 jge	 $LN8@getStrSpli

; 5341 : 	{
; 5342 : 		// 1?î?î?
; 5343 : 		flag = getStringToken(src, '\n', i + 1, sizeof(msg) - 1, msg);

  0005e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00064	41		 inc	 ecx
  00065	50		 push	 eax
  00066	68 ff 03 00 00	 push	 1023			; 000003ffH
  0006b	51		 push	 ecx
  0006c	6a 0a		 push	 10			; 0000000aH
  0006e	56		 push	 esi
  0006f	89 8d f0 fb ff
	ff		 mov	 DWORD PTR _i$1$[ebp], ecx
  00075	e8 00 00 00 00	 call	 ?getStringToken@@YAHPADDHH0@Z ; getStringToken

; 5344 : 
; 5345 : 		ptMsg = msg;

  0007a	8d b5 fc fb ff
	ff		 lea	 esi, DWORD PTR _msg$[ebp]
  00080	89 85 e8 fb ff
	ff		 mov	 DWORD PTR _flag$1$[ebp], eax

; 5346 : 		while (1)
; 5347 : 		{
; 5348 : 			// î°???strLen?î????î¤?
; 5349 : 			if (strlen(ptMsg) > (unsigned int)strLen)

  00086	8b ce		 mov	 ecx, esi
  00088	83 c4 14	 add	 esp, 20			; 00000014H
  0008b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0008e	66 90		 npad	 2
$LL35@getStrSpli:
  00090	8a 01		 mov	 al, BYTE PTR [ecx]
  00092	41		 inc	 ecx
  00093	84 c0		 test	 al, al
  00095	75 f9		 jne	 SHORT $LL35@getStrSpli
  00097	2b ca		 sub	 ecx, edx
  00099	8b 95 f8 fb ff
	ff		 mov	 edx, DWORD PTR _strLen$GSCopy$2$[ebp]
  0009f	3b ca		 cmp	 ecx, edx
  000a1	76 5e		 jbe	 SHORT $LN11@getStrSpli
$LL5@getStrSpli:

; 5350 : 			{
; 5351 : 				strncpy(dis, ptMsg, strLen);

  000a3	52		 push	 edx
  000a4	56		 push	 esi
  000a5	57		 push	 edi
  000a6	e8 00 00 00 00	 call	 _strncpy

; 5352 : 				if (GetStrLastByte(dis) != 3)

  000ab	03 b5 f8 fb ff
	ff		 add	 esi, DWORD PTR _strLen$GSCopy$2$[ebp]
  000b1	57		 push	 edi
  000b2	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  000b7	8b 95 f8 fb ff
	ff		 mov	 edx, DWORD PTR _strLen$GSCopy$2$[ebp]
  000bd	83 c4 10	 add	 esp, 16			; 00000010H
  000c0	83 f8 03	 cmp	 eax, 3
  000c3	74 06		 je	 SHORT $LN13@getStrSpli

; 5353 : 				{
; 5354 : 					dis[strLen] = '\0';

  000c5	c6 04 3a 00	 mov	 BYTE PTR [edx+edi], 0

; 5355 : 					ptMsg += strLen;
; 5356 : 				}

  000c9	eb 06		 jmp	 SHORT $LN14@getStrSpli
$LN13@getStrSpli:

; 5357 : 				else
; 5358 : 				{
; 5359 : 					dis[strLen - 1] = '\0';

  000cb	c6 44 3a ff 00	 mov	 BYTE PTR [edx+edi-1], 0

; 5360 : 					ptMsg += (strLen - 1);

  000d0	4e		 dec	 esi
$LN14@getStrSpli:

; 5361 : 				}
; 5362 : 				j++;
; 5363 : 				dis += distSize;

  000d1	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _distSize$GSCopy$1$[ebp]
  000d7	43		 inc	 ebx

; 5364 : 				if (j >= line)

  000d8	8b 45 14	 mov	 eax, DWORD PTR _line$[ebp]
  000db	03 f9		 add	 edi, ecx
  000dd	3b d8		 cmp	 ebx, eax
  000df	7d 3a		 jge	 SHORT $LN6@getStrSpli

; 5346 : 		while (1)
; 5347 : 		{
; 5348 : 			// î°???strLen?î????î¤?
; 5349 : 			if (strlen(ptMsg) > (unsigned int)strLen)

  000e1	8b c6		 mov	 eax, esi
  000e3	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  000e6	89 8d ec fb ff
	ff		 mov	 DWORD PTR tv297[ebp], ecx
  000ec	0f 1f 40 00	 npad	 4
$LL36@getStrSpli:
  000f0	8a 08		 mov	 cl, BYTE PTR [eax]
  000f2	40		 inc	 eax
  000f3	84 c9		 test	 cl, cl
  000f5	75 f9		 jne	 SHORT $LL36@getStrSpli
  000f7	2b 85 ec fb ff
	ff		 sub	 eax, DWORD PTR tv297[ebp]
  000fd	3b c2		 cmp	 eax, edx
  000ff	77 a2		 ja	 SHORT $LL5@getStrSpli
$LN11@getStrSpli:

; 5365 : 					break;
; 5366 : 			}
; 5367 : 			else
; 5368 : 				// î?????????????
; 5369 : 			{
; 5370 : 				strcpy(dis, ptMsg);

  00101	8b cf		 mov	 ecx, edi
  00103	2b ce		 sub	 ecx, esi
$LL18@getStrSpli:
  00105	8a 06		 mov	 al, BYTE PTR [esi]
  00107	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  0010a	88 44 31 ff	 mov	 BYTE PTR [ecx+esi-1], al
  0010e	84 c0		 test	 al, al
  00110	75 f3		 jne	 SHORT $LL18@getStrSpli
  00112	8b 45 14	 mov	 eax, DWORD PTR _line$[ebp]
  00115	8b 8d f4 fb ff
	ff		 mov	 ecx, DWORD PTR _distSize$GSCopy$1$[ebp]
$LN6@getStrSpli:

; 5371 : 				break;
; 5372 : 			}
; 5373 : 		}
; 5374 : 
; 5375 : 		if (flag == 1)

  0011b	43		 inc	 ebx
  0011c	03 f9		 add	 edi, ecx
  0011e	83 bd e8 fb ff
	ff 01		 cmp	 DWORD PTR _flag$1$[ebp], 1
  00125	74 12		 je	 SHORT $LN24@getStrSpli

; 5336 : 	{
; 5337 : 		strLen = distSize - 1;
; 5338 : 	}
; 5339 : 
; 5340 : 	for (i = 0, j = 0; i < line && j < line; i++, j++, dis += distSize)

  00127	8b b5 e4 fb ff
	ff		 mov	 esi, DWORD PTR _src$GSCopy$1$[ebp]
  0012d	39 85 f0 fb ff
	ff		 cmp	 DWORD PTR _i$1$[ebp], eax
  00133	0f 8c 17 ff ff
	ff		 jl	 $LL37@getStrSpli
$LN24@getStrSpli:

; 5376 : 		{
; 5377 : 			j++;
; 5378 : 			dis += distSize;
; 5379 : 			break;
; 5380 : 		}
; 5381 : 	}
; 5382 : 	// î°???î¡?????NULL?î¼???
; 5383 : 	for (; j < line; j++, dis += distSize)

  00139	3b d8		 cmp	 ebx, eax
  0013b	7d 0d		 jge	 SHORT $LN8@getStrSpli
  0013d	2b c3		 sub	 eax, ebx
  0013f	90		 npad	 1
$LL9@getStrSpli:

; 5384 : 		dis[0] = '\0';

  00140	c6 07 00	 mov	 BYTE PTR [edi], 0
  00143	03 f9		 add	 edi, ecx
  00145	83 e8 01	 sub	 eax, 1
  00148	75 f6		 jne	 SHORT $LL9@getStrSpli
$LN8@getStrSpli:

; 5385 : }

  0014a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014d	5f		 pop	 edi
  0014e	5e		 pop	 esi
  0014f	33 cd		 xor	 ecx, ebp
  00151	5b		 pop	 ebx
  00152	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00157	8b e5		 mov	 esp, ebp
  00159	5d		 pop	 ebp
  0015a	c3		 ret	 0
?getStrSplit@@YAXPAD0HHH@Z ENDP				; getStrSplit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_len$ = 20						; size = 4
_color$ = 24						; size = 4
_prio$ = 28						; size = 4
?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z PROC		; initStrBuffer, COMDAT

; 826  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 827  : 	pt->x = x;

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _pt$[ebp]
  00006	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00009	89 81 0c 01 00
	00		 mov	 DWORD PTR [ecx+268], eax

; 828  : 	pt->y = y;

  0000f	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  00012	89 81 10 01 00
	00		 mov	 DWORD PTR [ecx+272], eax

; 829  : 	pt->len = len;

  00018	8a 45 14	 mov	 al, BYTE PTR _len$[ebp]
  0001b	88 81 04 01 00
	00		 mov	 BYTE PTR [ecx+260], al

; 830  : 	pt->color = color;

  00021	8a 45 18	 mov	 al, BYTE PTR _color$[ebp]
  00024	88 81 08 01 00
	00		 mov	 BYTE PTR [ecx+264], al

; 831  : 	pt->fontPrio = prio;

  0002a	8b 45 1c	 mov	 eax, DWORD PTR _prio$[ebp]
  0002d	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax

; 832  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ENDP		; initStrBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?fmselectdetuyWindow@@YAHHHH@Z
_TEXT	SEGMENT
tv1025 = -104						; size = 4
_ret$1$ = -100						; size = 4
_y$GSCopy$1$ = -96					; size = 4
_x$GSCopy$1$ = -92					; size = 4
tv1015 = -92						; size = 4
_???Y$1$ = -88						; size = 4
_btnTitle$ = -84					; size = 16
_buff$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_id$ = 16						; size = 4
?fmselectdetuyWindow@@YAHHHH@Z PROC			; fmselectdetuyWindow, COMDAT

; 14776: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 68	 sub	 esp, 104		; 00000068H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _x$[ebp]

; 14777: 	static int btnId[] = { -2, -2, -2 ,-2 };
; 14778: 	static int btnLoc[4][2];
; 14779: 	static ACTION* ptActMenuWin = NULL;
; 14780: 	int ret = 0;

  00013	33 c0		 xor	 eax, eax

; 14781: 	int dutytobtn = -1;
; 14782: 	char buff[64];
; 14783: 	char* btnTitle[] =
; 14784: 	{
; 14785: 		"ì¼ë°ë¶ì¡±ì",
; 14786: 		"í    í´",
; 14787: 		"ì¥    ë¡",
; 14788: 		//"é¿    è",	
; 14789: 		//"ç¥­    å¸",
; 14790: 		//"è´¢ å¡ é¿",
; 14791: 		//"å¯ æ é¿",
; 14792: 		"ì·¨    ì"
; 14793: 	};
; 14794: 	if (fmYesNoproc == 1) {

  00015	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?fmYesNoproc@@3HA, 1 ; fmYesNoproc
  0001c	53		 push	 ebx
  0001d	8b 5d 10	 mov	 ebx, DWORD PTR _id$[ebp]
  00020	56		 push	 esi
  00021	8b 75 0c	 mov	 esi, DWORD PTR _y$[ebp]
  00024	89 4d a4	 mov	 DWORD PTR _x$GSCopy$1$[ebp], ecx
  00027	89 75 a0	 mov	 DWORD PTR _y$GSCopy$1$[ebp], esi
  0002a	89 45 9c	 mov	 DWORD PTR _ret$1$[ebp], eax
  0002d	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_0L@CMOKCILO@?$MA?O?$LJ?$NN?$LK?N?A?$LH?$LP?x@
  00034	c7 45 b0 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_08EKAAGOCB@?E?$LL?5?5?5?5?E?p@
  0003b	c7 45 b4 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+8], OFFSET ??_C@_08FGILGNNJ@?$MA?e?5?5?5?5?$LH?N@
  00042	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+12], OFFSET ??_C@_08JAKOPBJC@?C?k?5?5?5?5?$LM?R@
  00049	75 2a		 jne	 SHORT $LN18@fmselectde

; 14795: 		fmYesNoRet = fmYesNoWindow(170, 170, id);

  0004b	53		 push	 ebx
  0004c	68 aa 00 00 00	 push	 170			; 000000aaH
  00051	68 aa 00 00 00	 push	 170			; 000000aaH
  00056	e8 00 00 00 00	 call	 ?fmYesNoWindow@@YAHHHH@Z ; fmYesNoWindow
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	a3 00 00 00 00	 mov	 DWORD PTR ?fmYesNoRet@@3HA, eax ; fmYesNoRet

; 14796: 		return 0;

  00063	33 c0		 xor	 eax, eax
  00065	5e		 pop	 esi

; 14949: 	}
; 14950: 	return ret;
; 14951: }

  00066	5b		 pop	 ebx
  00067	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0006a	33 cd		 xor	 ecx, ebp
  0006c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
$LN18@fmselectde:

; 14797: 	}
; 14798: 	if (fmYesNoRet != 0) {

  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fmYesNoRet@@3HA ; fmYesNoRet
  0007a	85 c0		 test	 eax, eax
  0007c	74 2c		 je	 SHORT $LN20@fmselectde

; 14799: 		if (fmYesNoRet == 1) {

  0007e	83 f8 01	 cmp	 eax, 1
  00081	75 27		 jne	 SHORT $LN20@fmselectde

; 14800: 			ret = FMMEMBER_NONE;
; 14801: 			fmDutyproc = 0;

  00083	5e		 pop	 esi
  00084	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmDutyproc@@3HA, 0 ; fmDutyproc

; 14802: 			fmYesNoRet = 0;
; 14803: 			return ret;

  0008e	83 c8 ff	 or	 eax, -1
  00091	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmYesNoRet@@3HA, 0 ; fmYesNoRet

; 14949: 	}
; 14950: 	return ret;
; 14951: }

  0009b	5b		 pop	 ebx
  0009c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009f	33 cd		 xor	 ecx, ebp
  000a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000a6	8b e5		 mov	 esp, ebp
  000a8	5d		 pop	 ebp
  000a9	c3		 ret	 0
$LN20@fmselectde:

; 14804: 		}
; 14805: 	}
; 14806: 	int ä¸´æ¶è¡¥X = 0, ä¸´æ¶è¡¥Y = 0;
; 14807: 	if (ResoMode == åè¾¨ç::mode800) {

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  000af	57		 push	 edi
  000b0	33 ff		 xor	 edi, edi
  000b2	89 7d a8	 mov	 DWORD PTR _???Y$1$[ebp], edi
  000b5	83 f8 03	 cmp	 eax, 3
  000b8	75 0c		 jne	 SHORT $LN21@fmselectde

; 14808: 		ä¸´æ¶è¡¥X = 80;

  000ba	8d 78 4d	 lea	 edi, DWORD PTR [eax+77]

; 14809: 		ä¸´æ¶è¡¥Y = 60;

  000bd	c7 45 a8 3c 00
	00 00		 mov	 DWORD PTR _???Y$1$[ebp], 60 ; 0000003cH

; 14810: 	}

  000c4	eb 11		 jmp	 SHORT $LN23@fmselectde
$LN21@fmselectde:

; 14811: 	else if (ResoMode == åè¾¨ç::mode1024) {

  000c6	83 f8 04	 cmp	 eax, 4
  000c9	75 0c		 jne	 SHORT $LN23@fmselectde

; 14812: 		ä¸´æ¶è¡¥X = 190;

  000cb	bf be 00 00 00	 mov	 edi, 190		; 000000beH

; 14813: 		ä¸´æ¶è¡¥Y = 145;

  000d0	c7 45 a8 91 00
	00 00		 mov	 DWORD PTR _???Y$1$[ebp], 145 ; 00000091H
$LN23@fmselectde:

; 14814: 	}
; 14815: 	if (ptActMenuWin == NULL) {

  000d7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A, 0
  000de	0f 85 86 00 00
	00		 jne	 $LN24@fmselectde

; 14816: 		ptActMenuWin = MakeWindowDisp(x, y, 3, 5, NULL, 1);

  000e4	6a 01		 push	 1
  000e6	6a 00		 push	 0
  000e8	6a 05		 push	 5
  000ea	6a 03		 push	 3
  000ec	56		 push	 esi
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp

; 14817: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 14818: 		x = ptActMenuWin->x;
; 14819: 		y = ptActMenuWin->y;
; 14820: #endif
; 14821: 		for (int i = 0; i < 4; i++)
; 14822: 			btnId[i] = -2;

  000f3	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  000fa	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A, eax

; 14823: 		for (int j = 0; j < 4; j++) {
; 14824: 			btnLoc[j][0] = x + 65;
; 14825: 			btnLoc[j][1] = y + 45 + 30 * (j + 1);
; 14826: 		}
; 14827: 		play_se(202, 320, 240);

  000ff	68 f0 00 00 00	 push	 240			; 000000f0H
  00104	8b 70 1c	 mov	 esi, DWORD PTR [eax+28]
  00107	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0010a	89 4d a4	 mov	 DWORD PTR _x$GSCopy$1$[ebp], ecx
  0010d	83 c1 41	 add	 ecx, 65			; 00000041H
  00110	68 40 01 00 00	 push	 320			; 00000140H
  00115	8d 46 4b	 lea	 eax, DWORD PTR [esi+75]
  00118	89 75 a0	 mov	 DWORD PTR _y$GSCopy$1$[ebp], esi
  0011b	a3 04 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+4, eax
  00120	8d 46 69	 lea	 eax, DWORD PTR [esi+105]
  00123	a3 0c 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+12, eax
  00128	8d 86 87 00 00
	00		 lea	 eax, DWORD PTR [esi+135]
  0012e	a3 14 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+20, eax
  00133	8d 86 a5 00 00
	00		 lea	 eax, DWORD PTR [esi+165]
  00139	68 ca 00 00 00	 push	 202			; 000000caH
  0013e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnId@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAHA, xmm0
  00145	89 0d 00 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA, ecx
  0014b	89 0d 08 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+8, ecx
  00151	89 0d 10 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+16, ecx
  00157	89 0d 18 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+24, ecx
  0015d	a3 1c 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+28, eax
  00162	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00167	83 c4 24	 add	 esp, 36			; 00000024H
$LN24@fmselectde:

; 14828: 	}
; 14829: 
; 14830: 	/*switch(FMmsgWN[id]){
; 14831: 	case FMMEMBER_ELDER:
; 14832: 		dutytobtn = 2;
; 14833: 		break;
; 14834: 	case FMMEMBER_INVITE:
; 14835: 		dutytobtn = 3;
; 14836: 		break;
; 14837: 	case FMMEMBER_BAILEE:
; 14838: 		dutytobtn = 4;
; 14839: 		break;
; 14840: 	case FMMEMBER_VICELEADER:
; 14841: 		dutytobtn = 5;
; 14842: 	default:
; 14843: 		break;
; 14844: 	}*/
; 14845: 	switch (FMmsgWN[id]) {
; 14846: 	case FMMEMBER_ELDER:
; 14847: 		dutytobtn = 2;
; 14848: 		break;
; 14849: 	default:
; 14850: 		break;
; 14851: 	}
; 14852: 	sprintf(buff, "ì ííì¸ì");

  0016a	83 c9 ff	 or	 ecx, -1
  0016d	b8 02 00 00 00	 mov	 eax, 2
  00172	83 3c 9d 00 00
	00 00 04	 cmp	 DWORD PTR ?FMmsgWN@@3PAHA[ebx*4], 4
  0017a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DJCDNCBF@?$LM?$LB?E?C?G?O?$LM?$LM?$LP?d@
  0017f	0f 45 c1	 cmovne	 eax, ecx
  00182	89 45 98	 mov	 DWORD PTR tv1025[ebp], eax
  00185	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  00188	50		 push	 eax
  00189	e8 00 00 00 00	 call	 _sprintf

; 14853: 	StockFontBuffer(x + ä¸´æ¶è¡¥X + 20, y + ä¸´æ¶è¡¥Y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, buff, 0);

  0018e	8b 45 a8	 mov	 eax, DWORD PTR _???Y$1$[ebp]
  00191	03 7d a4	 add	 edi, DWORD PTR _x$GSCopy$1$[ebp]
  00194	83 c0 19	 add	 eax, 25			; 00000019H
  00197	03 f0		 add	 esi, eax
  00199	89 7d a4	 mov	 DWORD PTR tv1015[ebp], edi
  0019c	6a 00		 push	 0
  0019e	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  001a1	50		 push	 eax
  001a2	6a 00		 push	 0
  001a4	6a 01		 push	 1
  001a6	8d 47 14	 lea	 eax, DWORD PTR [edi+20]
  001a9	56		 push	 esi
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 14854: 	sprintf(buff, " %s ", FMnameWN[id]);

  001b0	8d 04 9b	 lea	 eax, DWORD PTR [ebx+ebx*4]
  001b3	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4]
  001ba	50		 push	 eax
  001bb	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  001be	68 00 00 00 00	 push	 OFFSET ??_C@_04KMMDIKEB@?5?$CFs?5@
  001c3	50		 push	 eax
  001c4	e8 00 00 00 00	 call	 _sprintf

; 14855: 	StockFontBuffer(x + ä¸´æ¶è¡¥X + 65, y + ä¸´æ¶è¡¥Y + 25, FONT_PRIO_FRONT, FONT_PAL_GREEN, buff, 0);

  001c9	6a 00		 push	 0
  001cb	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  001ce	50		 push	 eax
  001cf	6a 05		 push	 5
  001d1	6a 01		 push	 1
  001d3	8d 47 41	 lea	 eax, DWORD PTR [edi+65]
  001d6	56		 push	 esi
  001d7	50		 push	 eax
  001d8	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001dd	83 c4 44	 add	 esp, 68			; 00000044H

; 14856: 	sprintf(buff, "ë§¡ìì§ì±ï¼");

  001e0	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  001e3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GOKAMOPJ@?$LI?C?$MA?$LK?A?w?C?$KF?$KD?$LK@
  001e8	50		 push	 eax
  001e9	e8 00 00 00 00	 call	 _sprintf

; 14857: 	StockFontBuffer(x + ä¸´æ¶è¡¥X + 55, y + ä¸´æ¶è¡¥Y + 45, FONT_PRIO_FRONT, FONT_PAL_WHITE, buff, 0);

  001ee	8b 4d a8	 mov	 ecx, DWORD PTR _???Y$1$[ebp]
  001f1	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  001f4	6a 00		 push	 0
  001f6	50		 push	 eax
  001f7	8b 45 a0	 mov	 eax, DWORD PTR _y$GSCopy$1$[ebp]
  001fa	83 c1 2d	 add	 ecx, 45			; 0000002dH
  001fd	6a 00		 push	 0
  001ff	03 c1		 add	 eax, ecx
  00201	6a 01		 push	 1
  00203	50		 push	 eax
  00204	8d 47 37	 lea	 eax, DWORD PTR [edi+55]
  00207	50		 push	 eax
  00208	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0020d	83 c4 20	 add	 esp, 32			; 00000020H

; 14858: 	if (ptActMenuWin != NULL) {

  00210	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A, 0
  00217	0f 84 81 00 00
	00		 je	 $LN11@fmselectde

; 14859: 		for (int i = 0; i < 4; i++)

  0021d	33 f6		 xor	 esi, esi
  0021f	90		 npad	 1
$LL12@fmselectde:

; 14860: 			/*if( pc.familyleader == FMMEMBER_ELDER && i >= 2 && i<= 5 )
; 14861: 				StockFontBuffer( btnLoc[i][0], btnLoc[i][1],
; 14862: 							FONT_PRIO_FRONT, FONT_PAL_GRAY, btnTitle[i], 0);*/
; 14863: 			if (FMelderFlag[id] == 0 && i == 2)

  00220	83 3c 9d 00 00
	00 00 00	 cmp	 DWORD PTR ?FMelderFlag@@3PAHA[ebx*4], 0
  00228	75 05		 jne	 SHORT $LN81@fmselectde
  0022a	83 fe 02	 cmp	 esi, 2
  0022d	74 0e		 je	 SHORT $LN84@fmselectde
$LN81@fmselectde:

; 14864: 				StockFontBuffer(btnLoc[i][0], btnLoc[i][1], FONT_PRIO_FRONT, FONT_PAL_GRAY, btnTitle[i], 0);
; 14865: 			else if (pc.familyleader == FMMEMBER_ELDER && i == 2)

  0022f	83 3d 08 51 00
	00 04		 cmp	 DWORD PTR ?pc@@3UPC@@A+20744, 4
  00236	75 19		 jne	 SHORT $LN78@fmselectde
  00238	83 fe 02	 cmp	 esi, 2
  0023b	75 14		 jne	 SHORT $LN78@fmselectde
$LN84@fmselectde:

; 14859: 		for (int i = 0; i < 4; i++)

  0023d	bf 07 00 00 00	 mov	 edi, 7
  00242	8d 45 b4	 lea	 eax, DWORD PTR _btnTitle$[ebp+8]
  00245	b9 14 00 00 00	 mov	 ecx, OFFSET ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+20
  0024a	ba 10 00 00 00	 mov	 edx, OFFSET ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA+16
  0024f	eb 2e		 jmp	 SHORT $LN10@fmselectde
$LN78@fmselectde:

; 14866: 				StockFontBuffer(btnLoc[i][0], btnLoc[i][1], FONT_PRIO_FRONT, FONT_PAL_GRAY, btnTitle[i], 0);
; 14867: 			else if (dutytobtn == i)

  00251	8d 45 ac	 lea	 eax, DWORD PTR _btnTitle$[ebp]
  00254	8d 04 b0	 lea	 eax, DWORD PTR [eax+esi*4]
  00257	8d 0c f5 04 00
	00 00		 lea	 ecx, DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA[esi*8+4]
  0025e	8d 14 f5 00 00
	00 00		 lea	 edx, DWORD PTR ?btnLoc@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAY01HA[esi*8]
  00265	39 75 98	 cmp	 DWORD PTR tv1025[ebp], esi
  00268	75 07		 jne	 SHORT $LN32@fmselectde

; 14868: 				StockFontBuffer(btnLoc[i][0], btnLoc[i][1], FONT_PRIO_FRONT, FONT_PAL_GRAY, btnTitle[i], 0);

  0026a	bf 07 00 00 00	 mov	 edi, 7
  0026f	eb 0e		 jmp	 SHORT $LN10@fmselectde
$LN32@fmselectde:

; 14869: 			else if (i == 3)

  00271	83 fe 03	 cmp	 esi, 3
  00274	75 04		 jne	 SHORT $LN34@fmselectde

; 14870: 				StockFontBuffer(btnLoc[i][0], btnLoc[i][1], FONT_PRIO_FRONT, FONT_PAL_WHITE, btnTitle[i], 0);

  00276	33 ff		 xor	 edi, edi
  00278	eb 05		 jmp	 SHORT $LN10@fmselectde
$LN34@fmselectde:

; 14871: 			else
; 14872: 				StockFontBuffer(btnLoc[i][0], btnLoc[i][1], FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 0);

  0027a	bf 04 00 00 00	 mov	 edi, 4
$LN10@fmselectde:

; 14859: 		for (int i = 0; i < 4; i++)

  0027f	8b 00		 mov	 eax, DWORD PTR [eax]
  00281	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00283	8b 12		 mov	 edx, DWORD PTR [edx]
  00285	6a 00		 push	 0
  00287	50		 push	 eax
  00288	57		 push	 edi
  00289	6a 01		 push	 1
  0028b	51		 push	 ecx
  0028c	52		 push	 edx
  0028d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00292	46		 inc	 esi
  00293	83 c4 18	 add	 esp, 24			; 00000018H
  00296	83 fe 04	 cmp	 esi, 4
  00299	7c 85		 jl	 SHORT $LL12@fmselectde
  0029b	8b 7d a4	 mov	 edi, DWORD PTR tv1015[ebp]
$LN11@fmselectde:

; 14873: 	}
; 14874: 
; 14875: 	for (int i = 0; i < 4; i++) {

  0029e	33 f6		 xor	 esi, esi
  002a0	83 c7 32	 add	 edi, 50			; 00000032H
$LL15@fmselectde:

; 14876: 		int x1 = x + 50 + ä¸´æ¶è¡¥X;
; 14877: 		int y1 = y + 30 * (i + 1) + 42 + ä¸´æ¶è¡¥Y;

  002a3	8b 4d a0	 mov	 ecx, DWORD PTR _y$GSCopy$1$[ebp]
  002a6	8b c6		 mov	 eax, esi
  002a8	c1 e0 04	 shl	 eax, 4
  002ab	2b c6		 sub	 eax, esi
  002ad	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  002b0	8b 4d a8	 mov	 ecx, DWORD PTR _???Y$1$[ebp]
  002b3	83 c1 48	 add	 ecx, 72			; 00000048H
  002b6	03 c8		 add	 ecx, eax

; 14878: 		int x2 = x1 + 85;
; 14879: 		int y2 = y1 + 20;

  002b8	8d 51 14	 lea	 edx, DWORD PTR [ecx+20]

; 14880: 		if (dutytobtn != i)

  002bb	39 75 98	 cmp	 DWORD PTR tv1025[ebp], esi
  002be	0f 84 94 00 00
	00		 je	 $LN13@fmselectde

; 14881: 			/*if( pc.familyleader == FMMEMBER_LEADER ||
; 14882: 				(pc.familyleader == FMMEMBER_ELDER ||
; 14883: 				pc.familyleader == FMMEMBER_VICELEADER )
; 14884: 				&& i >= 0 && i <= 1)*/
; 14885: 			if (!(FMelderFlag[id] == 0 && i == 2))

  002c4	83 3c 9d 00 00
	00 00 00	 cmp	 DWORD PTR ?FMelderFlag@@3PAHA[ebx*4], 0
  002cc	75 09		 jne	 SHORT $LN38@fmselectde
  002ce	83 fe 02	 cmp	 esi, 2
  002d1	0f 84 81 00 00
	00		 je	 $LN13@fmselectde
$LN38@fmselectde:

; 14886: 				if (pc.familyleader == FMMEMBER_LEADER ||

  002d7	a1 08 51 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20744
  002dc	83 f8 03	 cmp	 eax, 3
  002df	74 0f		 je	 SHORT $LN41@fmselectde
  002e1	83 f8 04	 cmp	 eax, 4
  002e4	75 72		 jne	 SHORT $LN13@fmselectde
  002e6	83 fe 01	 cmp	 esi, 1
  002e9	76 05		 jbe	 SHORT $LN41@fmselectde
  002eb	83 fe 03	 cmp	 esi, 3
  002ee	75 68		 jne	 SHORT $LN13@fmselectde
$LN41@fmselectde:

; 14887: 					pc.familyleader == FMMEMBER_ELDER && (i >= 0 && i <= 1 || i == 3))
; 14888: 					if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  002f0	6a 6b		 push	 107			; 0000006bH
  002f2	52		 push	 edx
  002f3	8d 47 55	 lea	 eax, DWORD PTR [edi+85]
  002f6	50		 push	 eax
  002f7	51		 push	 ecx
  002f8	57		 push	 edi
  002f9	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  002fe	83 c4 14	 add	 esp, 20			; 00000014H
  00301	85 c0		 test	 eax, eax
  00303	74 53		 je	 SHORT $LN13@fmselectde

; 14889: 						if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00305	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0030c	74 4a		 je	 SHORT $LN13@fmselectde

; 14890: 							/*switch(i){
; 14891: 							case 0:                         // ä¸è¬æå
; 14892: 								ret = FMMEMBER_MEMBER;
; 14893: 								fmDutyproc = 0;
; 14894: 								break;
; 14895: 							case 1:							// éåº
; 14896: 								fmYesNoproc = 1;
; 14897: 								break;
; 14898: 							case 2:							// é¿è
; 14899: 								ret = FMMEMBER_ELDER;
; 14900: 								fmDutyproc = 0;
; 14901: 								break;
; 14902: 							case 3:							// ç¥­å¸
; 14903: 								ret = FMMEMBER_INVITE;
; 14904: 								fmDutyproc = 0;
; 14905: 								break;
; 14906: 							case 4:							// è´¢å¡é¿
; 14907: 								ret = FMMEMBER_BAILEE;
; 14908: 								fmDutyproc = 0;
; 14909: 								break;
; 14910: 							case 5:                         // å¯æé¿
; 14911: 								ret = FMMEMBER_VICELEADER;
; 14912: 								fmDutyproc = 0;
; 14913: 								break;
; 14914: 							default:
; 14915: 								break;
; 14916: 							}*/
; 14917: 							switch (i) {

  0030e	83 fe 03	 cmp	 esi, 3
  00311	77 2d		 ja	 SHORT $LN49@fmselectde
  00313	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN82@fmselectde[esi*4]
$LN45@fmselectde:

; 14918: 							case 0:                         // ä¸è¬æå
; 14919: 								ret = FMMEMBER_MEMBER;

  0031a	c7 45 9c 01 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 1

; 14920: 								fmDutyproc = 0;
; 14921: 								break;

  00321	eb 13		 jmp	 SHORT $LN48@fmselectde
$LN46@fmselectde:

; 14922: 							case 1:							// éåº 					
; 14923: 								fmYesNoproc = 1;

  00323	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?fmYesNoproc@@3HA, 1 ; fmYesNoproc

; 14924: 								break;

  0032d	eb 11		 jmp	 SHORT $LN49@fmselectde
$LN47@fmselectde:

; 14925: 							case 2:							// é¿è
; 14926: 								ret = FMMEMBER_ELDER;

  0032f	c7 45 9c 04 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 4
$LN48@fmselectde:

; 14927: 								fmDutyproc = 0;
; 14928: 								break;
; 14929: 							case 3:
; 14930: 								fmDutyproc = 0;
; 14931: 								break;
; 14932: 							default:
; 14933: 								break;
; 14934: 							}
; 14935: 							DeathAction(ptActMenuWin);

  00336	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmDutyproc@@3HA, 0 ; fmDutyproc
$LN49@fmselectde:
  00340	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A
  00346	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0034b	83 c4 04	 add	 esp, 4

; 14936: 							ptActMenuWin = NULL;

  0034e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A, 0
$LN13@fmselectde:

; 14873: 	}
; 14874: 
; 14875: 	for (int i = 0; i < 4; i++) {

  00358	46		 inc	 esi
  00359	83 fe 04	 cmp	 esi, 4
  0035c	0f 8c 41 ff ff
	ff		 jl	 $LL15@fmselectde

; 14937: 						}
; 14938: 					}
; 14939: 	}
; 14940: 	if (CheckMenuFlag()
; 14941: 		|| joy_trg[0] & JOY_ESC
; 14942: 		|| actBtn == 1
; 14943: 		|| menuBtn == 1
; 14944: 		|| disconnectServerFlag == TRUE
; 14945: 		|| wnCloseFlag == 1) {

  00362	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00367	5f		 pop	 edi
  00368	85 c0		 test	 eax, eax
  0036a	75 33		 jne	 SHORT $LN51@fmselectde
  0036c	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00376	75 27		 jne	 SHORT $LN51@fmselectde
  00378	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00380	74 1d		 je	 SHORT $LN51@fmselectde
  00382	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  0038a	74 13		 je	 SHORT $LN51@fmselectde
  0038c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  00393	74 0a		 je	 SHORT $LN51@fmselectde
  00395	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  0039d	75 22		 jne	 SHORT $LN50@fmselectde
$LN51@fmselectde:

; 14946: 		fmDutyproc = 0;
; 14947: 		DeathAction(ptActMenuWin);

  0039f	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A
  003a5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmDutyproc@@3HA, 0 ; fmDutyproc
  003af	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  003b4	83 c4 04	 add	 esp, 4

; 14948: 		ptActMenuWin = NULL;

  003b7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??fmselectdetuyWindow@@YAHHHH@Z@4PAUaction@@A, 0
$LN50@fmselectde:

; 14949: 	}
; 14950: 	return ret;
; 14951: }

  003c1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003c4	8b 45 9c	 mov	 eax, DWORD PTR _ret$1$[ebp]
  003c7	33 cd		 xor	 ecx, ebp
  003c9	5e		 pop	 esi
  003ca	5b		 pop	 ebx
  003cb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003d0	8b e5		 mov	 esp, ebp
  003d2	5d		 pop	 ebp
  003d3	c3		 ret	 0
$LN82@fmselectde:
  003d4	00 00 00 00	 DD	 $LN45@fmselectde
  003d8	00 00 00 00	 DD	 $LN46@fmselectde
  003dc	00 00 00 00	 DD	 $LN47@fmselectde
  003e0	00 00 00 00	 DD	 $LN48@fmselectde
?fmselectdetuyWindow@@YAHHHH@Z ENDP			; fmselectdetuyWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?fmYesNoWindow@@YAHHHH@Z
_TEXT	SEGMENT
_btnTitle$ = -88					; size = 8
_x$GSCopy$1$ = -80					; size = 4
tv479 = -76						; size = 4
_id$GSCopy$1$ = -76					; size = 4
tv478 = -72						; size = 4
_y$GSCopy$1$ = -72					; size = 4
_buff$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_id$ = 16						; size = 4
?fmYesNoWindow@@YAHHHH@Z PROC				; fmYesNoWindow, COMDAT

; 14956: {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 58	 sub	 esp, 88			; 00000058H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _id$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]

; 14957: 	static int btnId[] = { -2, -2 };
; 14958: 	static int btnLoc[2][2];
; 14959: 	static ACTION* ptActMenuWin = NULL;
; 14960: 	int ret = 0;

  00018	33 db		 xor	 ebx, ebx
  0001a	57		 push	 edi
  0001b	8b 7d 0c	 mov	 edi, DWORD PTR _y$[ebp]
  0001e	89 75 b0	 mov	 DWORD PTR _x$GSCopy$1$[ebp], esi
  00021	89 7d b8	 mov	 DWORD PTR _y$GSCopy$1$[ebp], edi
  00024	89 45 b4	 mov	 DWORD PTR _id$GSCopy$1$[ebp], eax

; 14961: 	char buff[64];
; 14962: 	char* btnTitle[] =
; 14963: 	{
; 14964: 		"?  ?",

  00027	c7 45 a8 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@

; 14965: 		"?  ?"

  0002e	c7 45 ac 00 00
	00 00		 mov	 DWORD PTR _btnTitle$[ebp+4], OFFSET ??_C@_04NKANOEFH@?$DP?5?5?$DP@

; 14966: 	};
; 14967: 
; 14968: 	if (ptActMenuWin == NULL) {

  00035	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A, ebx
  0003b	75 6f		 jne	 SHORT $LN14@fmYesNoWin

; 14969: 		ptActMenuWin = MakeWindowDisp(x, y, 5, 2, NULL, 1);

  0003d	6a 01		 push	 1
  0003f	53		 push	 ebx
  00040	6a 02		 push	 2
  00042	6a 05		 push	 5
  00044	57		 push	 edi
  00045	56		 push	 esi
  00046	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0004b	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A, eax

; 14970: #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 14971: 		x = ptActMenuWin->x;
; 14972: 		y = ptActMenuWin->y;
; 14973: #endif
; 14974: 		for (int i = 0; i < 2; i++)
; 14975: 			btnId[i] = -2;
; 14976: 		for (int j = 0; j < 2; j++) {
; 14977: 			btnLoc[j][0] = x + 83 * (j + 1);
; 14978: 			btnLoc[j][1] = y + 60;
; 14979: 		}
; 14980: 		play_se(202, 320, 240);

  00050	68 f0 00 00 00	 push	 240			; 000000f0H
  00055	68 40 01 00 00	 push	 320			; 00000140H
  0005a	8b 70 18	 mov	 esi, DWORD PTR [eax+24]
  0005d	8b 78 1c	 mov	 edi, DWORD PTR [eax+28]
  00060	68 ca 00 00 00	 push	 202			; 000000caH
  00065	89 75 b0	 mov	 DWORD PTR _x$GSCopy$1$[ebp], esi
  00068	8d 46 53	 lea	 eax, DWORD PTR [esi+83]
  0006b	89 7d b8	 mov	 DWORD PTR _y$GSCopy$1$[ebp], edi
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA, eax
  00073	8d 4f 3c	 lea	 ecx, DWORD PTR [edi+60]
  00076	8d 86 a6 00 00
	00		 lea	 eax, DWORD PTR [esi+166]
  0007c	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??fmYesNoWindow@@YAHHHH@Z@4PAHA, -2 ; fffffffeH
  00086	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnId@?1??fmYesNoWindow@@YAHHHH@Z@4PAHA+4, -2 ; fffffffeH
  00090	89 0d 04 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA+4, ecx
  00096	a3 08 00 00 00	 mov	 DWORD PTR ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA+8, eax
  0009b	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA+12, ecx
  000a1	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000a6	8b 45 b4	 mov	 eax, DWORD PTR _id$GSCopy$1$[ebp]
  000a9	83 c4 24	 add	 esp, 36			; 00000024H
$LN14@fmYesNoWin:

; 14981: 	}
; 14982: 
; 14983: 	sprintf(buff, "?? %s ì ëªìí¬ê¹ìï¼", FMnameWN[id]);

  000ac	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  000af	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?FMnameWN@@3PAY0BE@DA[eax*4]
  000b6	50		 push	 eax
  000b7	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  000ba	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MDCNOKLO@?$DP?$DP?5?$CFs?5?A?$KG?$LI?m?$LN?C?E?$LD?$LB?n?$LP?d?$KD?$LP@
  000bf	50		 push	 eax
  000c0	e8 00 00 00 00	 call	 _sprintf

; 14984: 	StockFontBuffer(x + 30, y + 25, FONT_PRIO_FRONT, FONT_PAL_WHITE, buff, 0);

  000c5	6a 00		 push	 0
  000c7	8d 45 bc	 lea	 eax, DWORD PTR _buff$[ebp]
  000ca	50		 push	 eax
  000cb	6a 00		 push	 0
  000cd	6a 01		 push	 1
  000cf	8d 47 19	 lea	 eax, DWORD PTR [edi+25]
  000d2	50		 push	 eax
  000d3	8d 46 1e	 lea	 eax, DWORD PTR [esi+30]
  000d6	50		 push	 eax
  000d7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  000dc	83 c4 24	 add	 esp, 36			; 00000024H

; 14985: 	if (ptActMenuWin != NULL) {

  000df	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A, ebx
  000e5	74 2f		 je	 SHORT $LN9@fmYesNoWin

; 14986: 		for (int i = 0; i < 2; i++)

  000e7	be 00 00 00 00	 mov	 esi, OFFSET ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA
  000ec	8d 7d a8	 lea	 edi, DWORD PTR _btnTitle$[ebp]
  000ef	90		 npad	 1
$LL10@fmYesNoWin:

; 14987: 			StockFontBuffer(btnLoc[i][0], btnLoc[i][1],

  000f0	6a 00		 push	 0
  000f2	ff 37		 push	 DWORD PTR [edi]
  000f4	6a 04		 push	 4
  000f6	6a 01		 push	 1
  000f8	ff 76 04	 push	 DWORD PTR [esi+4]
  000fb	ff 36		 push	 DWORD PTR [esi]
  000fd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00102	83 c6 08	 add	 esi, 8
  00105	8d 7f 04	 lea	 edi, DWORD PTR [edi+4]
  00108	83 c4 18	 add	 esp, 24			; 00000018H
  0010b	81 fe 10 00 00
	00		 cmp	 esi, OFFSET ?btnLoc@?1??fmYesNoWindow@@YAHHHH@Z@4PAY01HA+16
  00111	7c dd		 jl	 SHORT $LL10@fmYesNoWin
  00113	8b 7d b8	 mov	 edi, DWORD PTR _y$GSCopy$1$[ebp]
$LN9@fmYesNoWin:
  00116	8d 47 4e	 lea	 eax, DWORD PTR [edi+78]

; 14988: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 0);
; 14989: 	}
; 14990: 
; 14991: 	for (int i = 0; i < 2; i++) {

  00119	33 f6		 xor	 esi, esi
  0011b	8d 4f 3a	 lea	 ecx, DWORD PTR [edi+58]
  0011e	89 45 b4	 mov	 DWORD PTR tv479[ebp], eax
  00121	8b 7d b0	 mov	 edi, DWORD PTR _x$GSCopy$1$[ebp]
  00124	89 4d b8	 mov	 DWORD PTR tv478[ebp], ecx
  00127	83 c7 49	 add	 edi, 73			; 00000049H
  0012a	66 0f 1f 44 00
	00		 npad	 6
$LL13@fmYesNoWin:

; 14992: 		int x1 = x + 83 * (i + 1) - 10;
; 14993: 		int y1 = y + 58;
; 14994: 		int x2 = x1 + 60;
; 14995: 		int y2 = y1 + 20;
; 14996: 		if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX2)) {

  00130	6a 6b		 push	 107			; 0000006bH
  00132	50		 push	 eax
  00133	8d 47 3c	 lea	 eax, DWORD PTR [edi+60]
  00136	50		 push	 eax
  00137	51		 push	 ecx
  00138	57		 push	 edi
  00139	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0013e	83 c4 14	 add	 esp, 20			; 00000014H
  00141	85 c0		 test	 eax, eax
  00143	74 2e		 je	 SHORT $LN11@fmYesNoWin

; 14997: 			if (mouse.onceState & MOUSE_LEFT_CRICK) {

  00145	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0014c	74 25		 je	 SHORT $LN11@fmYesNoWin

; 14998: 				ret = i + 1;
; 14999: 				fmYesNoproc = 0;
; 15000: 				DeathAction(ptActMenuWin);

  0014e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A
  00154	8d 5e 01	 lea	 ebx, DWORD PTR [esi+1]
  00157	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fmYesNoproc@@3HA, 0 ; fmYesNoproc
  00161	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00166	83 c4 04	 add	 esp, 4

; 15001: 				ptActMenuWin = NULL;

  00169	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??fmYesNoWindow@@YAHHHH@Z@4PAUaction@@A, 0
$LN11@fmYesNoWin:

; 14988: 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, btnTitle[i], 0);
; 14989: 	}
; 14990: 
; 14991: 	for (int i = 0; i < 2; i++) {

  00173	8b 45 b4	 mov	 eax, DWORD PTR tv479[ebp]
  00176	46		 inc	 esi
  00177	8b 4d b8	 mov	 ecx, DWORD PTR tv478[ebp]
  0017a	83 c7 53	 add	 edi, 83			; 00000053H
  0017d	83 fe 02	 cmp	 esi, 2
  00180	7c ae		 jl	 SHORT $LL13@fmYesNoWin

; 15002: 			}
; 15003: 		}
; 15004: 	}
; 15005: 	return ret;
; 15006: }

  00182	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00185	8b c3		 mov	 eax, ebx
  00187	5f		 pop	 edi
  00188	5e		 pop	 esi
  00189	33 cd		 xor	 ecx, ebp
  0018b	5b		 pop	 ebx
  0018c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00191	8b e5		 mov	 esp, ebp
  00193	5d		 pop	 ebp
  00194	c3		 ret	 0
?fmYesNoWindow@@YAHHHH@Z ENDP				; fmYesNoWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?commonYesNoWindow@@YAHHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?commonYesNoWindow@@YAHHH@Z PROC			; commonYesNoWindow, COMDAT

; 2085 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 2086 : 	int i;
; 2087 : 	int ret = 0;
; 2088 : 	int id;
; 2089 : 	static int btnGraId[] = { -2, -2 };
; 2090 : 
; 2091 : 	id = selGraId(btnGraId, sizeof(btnGraId) / sizeof(int));

  00004	6a 02		 push	 2
  00006	68 00 00 00 00	 push	 OFFSET ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA
  0000b	33 db		 xor	 ebx, ebx
  0000d	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00012	83 c4 08	 add	 esp, 8

; 2092 : 	// ??????????
; 2093 : 	if (id == 0)

  00015	85 c0		 test	 eax, eax
  00017	75 05		 jne	 SHORT $LN5@commonYesN

; 2094 : 	{
; 2095 : 		ret = 1;

  00019	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 2096 : 		play_se(217, 320, 240);	// ?????
; 2097 : 	}

  0001c	eb 08		 jmp	 SHORT $LN17@commonYesN
$LN5@commonYesN:

; 2098 : 	else
; 2099 : 		// ???????????
; 2100 : 		if (id == 1)

  0001e	83 f8 01	 cmp	 eax, 1
  00021	75 1a		 jne	 SHORT $LN7@commonYesN

; 2101 : 		{
; 2102 : 			ret = 2;

  00023	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
$LN17@commonYesN:

; 2103 : 			play_se(217, 320, 240);	// ?????
; 2104 : 		}
; 2105 : 
; 2106 : 	btnGraId[0] = StockDispBuffer(x, y, DISP_PRIO_YES_NO_BTN, CG_COMMON_YES_BTN, 2);

  00026	68 f0 00 00 00	 push	 240			; 000000f0H
  0002b	68 40 01 00 00	 push	 320			; 00000140H
  00030	68 d9 00 00 00	 push	 217			; 000000d9H
  00035	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN7@commonYesN:
  0003d	56		 push	 esi
  0003e	8b 75 08	 mov	 esi, DWORD PTR _x$[ebp]
  00041	57		 push	 edi
  00042	8b 7d 0c	 mov	 edi, DWORD PTR _y$[ebp]
  00045	6a 02		 push	 2
  00047	68 eb 65 00 00	 push	 26091			; 000065ebH
  0004c	6a 6e		 push	 110			; 0000006eH
  0004e	57		 push	 edi
  0004f	56		 push	 esi
  00050	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 2107 : 	btnGraId[1] = StockDispBuffer(x, y, DISP_PRIO_YES_NO_BTN, CG_COMMON_NO_BTN, 2);

  00055	6a 02		 push	 2
  00057	68 ec 65 00 00	 push	 26092			; 000065ecH
  0005c	6a 6e		 push	 110			; 0000006eH
  0005e	57		 push	 edi
  0005f	56		 push	 esi
  00060	a3 00 00 00 00	 mov	 DWORD PTR ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA, eax
  00065	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 2108 : 
; 2109 : 	StockDispBuffer(x, y, DISP_PRIO_YES_NO_WND, CG_COMMON_WIN_YORO, 0);

  0006a	6a 00		 push	 0
  0006c	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_COMMON_WIN_YORO@@3HA ; CG_COMMON_WIN_YORO
  00072	a3 04 00 00 00	 mov	 DWORD PTR ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA+4, eax
  00077	6a 6d		 push	 109			; 0000006dH
  00079	57		 push	 edi
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00080	83 c4 3c	 add	 esp, 60			; 0000003cH

; 2110 : 
; 2111 : 	if (ret != 0)

  00083	8b c3		 mov	 eax, ebx
  00085	5f		 pop	 edi
  00086	5e		 pop	 esi
  00087	85 db		 test	 ebx, ebx
  00089	74 14		 je	 SHORT $LN13@commonYesN

; 2112 : 	{
; 2113 : 		for (i = 0; i < sizeof(btnGraId) / sizeof(int); i++)
; 2114 : 		{
; 2115 : 			btnGraId[i] = -2;

  0008b	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA, -2 ; fffffffeH
  00095	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnGraId@?1??commonYesNoWindow@@YAHHH@Z@4PAHA+4, -2 ; fffffffeH
$LN13@commonYesN:
  0009f	5b		 pop	 ebx

; 2116 : 		}
; 2117 : 	}
; 2118 : 
; 2119 : 	return ret;
; 2120 : }

  000a0	5d		 pop	 ebp
  000a1	c3		 ret	 0
?commonYesNoWindow@@YAHHH@Z ENDP			; commonYesNoWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?deleteCharacter@@YAHXZ
_TEXT	SEGMENT
?deleteCharacter@@YAHXZ PROC				; deleteCharacter, COMDAT

; 1868 : 	static ACTION* ptActMenuWin = NULL;
; 1869 : 	static int x, y, w, h;
; 1870 : 	int ret = 0;
; 1871 : 	static char msg[] = "ìºë¦­í°ì­ì ";
; 1872 : 
; 1873 : 	// ???
; 1874 : 	if (deleteCharacterProcNo == 0)

  00000	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?deleteCharacterProcNo@@3FA
  00006	57		 push	 edi
  00007	33 ff		 xor	 edi, edi
  00009	66 85 c0	 test	 ax, ax
  0000c	0f 85 88 00 00
	00		 jne	 $LN17@deleteChar

; 1875 : 	{
; 1876 : 		deleteCharacterProcNo = 1;
; 1877 : 
; 1878 : 		// ??????î
; 1879 : 		w = strlen(msg) * 9 / 64 + 2;

  00012	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??deleteCharacter@@YAHXZ@4PADA
  00017	b8 01 00 00 00	 mov	 eax, 1
  0001c	66 a3 00 00 00
	00		 mov	 WORD PTR ?deleteCharacterProcNo@@3FA, ax
  00022	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL12@deleteChar:
  00025	8a 01		 mov	 al, BYTE PTR [ecx]
  00027	41		 inc	 ecx
  00028	84 c0		 test	 al, al
  0002a	75 f9		 jne	 SHORT $LL12@deleteChar
  0002c	2b ca		 sub	 ecx, edx

; 1880 : 		h = (16 + 47) / 48;
; 1881 : 		if (h < 2)
; 1882 : 			h = 2;

  0002e	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??deleteCharacter@@YAHXZ@4HA, 2

; 1883 : 		x = (640 - w * 64) / 2;
; 1884 : 		y = (480 - h * 48) / 2;
; 1885 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00038	6a 01		 push	 1
  0003a	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0003f	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??deleteCharacter@@YAHXZ@4HA, 192 ; 000000c0H
  00049	6a 00		 push	 0
  0004b	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  0004e	c1 e9 06	 shr	 ecx, 6
  00051	83 c1 02	 add	 ecx, 2
  00054	2b c1		 sub	 eax, ecx
  00056	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??deleteCharacter@@YAHXZ@4HA, ecx
  0005c	c1 e0 06	 shl	 eax, 6
  0005f	99		 cdq
  00060	6a 02		 push	 2
  00062	51		 push	 ecx
  00063	2b c2		 sub	 eax, edx
  00065	d1 f8		 sar	 eax, 1
  00067	68 c0 00 00 00	 push	 192			; 000000c0H
  0006c	50		 push	 eax
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??deleteCharacter@@YAHXZ@4HA, eax
  00072	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00077	8b c8		 mov	 ecx, eax
  00079	83 c4 18	 add	 esp, 24			; 00000018H
  0007c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A, ecx

; 1886 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 1887 : 		x = ptActMenuWin->x;

  00082	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00085	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??deleteCharacter@@YAHXZ@4HA, eax

; 1888 : 		y = ptActMenuWin->y;

  0008a	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0008d	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??deleteCharacter@@YAHXZ@4HA, eax
  00092	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?deleteCharacterProcNo@@3FA
  00098	eb 06		 jmp	 SHORT $LN2@deleteChar
$LN17@deleteChar:

; 1868 : 	static ACTION* ptActMenuWin = NULL;
; 1869 : 	static int x, y, w, h;
; 1870 : 	int ret = 0;
; 1871 : 	static char msg[] = "ìºë¦­í°ì­ì ";
; 1872 : 
; 1873 : 	// ???
; 1874 : 	if (deleteCharacterProcNo == 0)

  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A
$LN2@deleteChar:

; 1889 : #endif
; 1890 : 	}
; 1891 : 
; 1892 : 	// ??????îî¾
; 1893 : 	if (deleteCharacterProcNo == 1)

  000a0	66 83 f8 01	 cmp	 ax, 1
  000a4	75 7c		 jne	 SHORT $LN4@deleteChar

; 1894 : 	{
; 1895 : 		delCharStart();

  000a6	e8 00 00 00 00	 call	 ?delCharStart@@YAXXZ	; delCharStart

; 1896 : 		deleteCharacterProcNo++;

  000ab	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?deleteCharacterProcNo@@3FA
$LN18@deleteChar:

; 1910 : 		}
; 1911 : 	}
; 1912 : 
; 1913 : 	if (ptActMenuWin != NULL)

  000b2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A
$LN8@deleteChar:
  000b8	85 c9		 test	 ecx, ecx
  000ba	74 62		 je	 SHORT $LN15@deleteChar

; 1914 : 	{
; 1915 : 		// ?????î¸î
; 1916 : 		if (ptActMenuWin->hp >= 1)

  000bc	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000c0	7c 5c		 jl	 SHORT $LN15@deleteChar

; 1917 : 		{
; 1918 : 			int len;
; 1919 : 			int xx, yy;
; 1920 : 
; 1921 : 			len = strlen(msg);

  000c2	56		 push	 esi
  000c3	be 00 00 00 00	 mov	 esi, OFFSET ?msg@?1??deleteCharacter@@YAHXZ@4PADA
  000c8	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000cb	0f 1f 44 00 00	 npad	 5
$LL13@deleteChar:
  000d0	8a 06		 mov	 al, BYTE PTR [esi]
  000d2	46		 inc	 esi
  000d3	84 c0		 test	 al, al
  000d5	75 f9		 jne	 SHORT $LL13@deleteChar

; 1922 : 			xx = (w * 64 - len * 8) / 2;
; 1923 : 			yy = (h * 48 - 16) / 2;

  000d7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??deleteCharacter@@YAHXZ@4HA
  000dc	2b f1		 sub	 esi, ecx

; 1924 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  000de	6a 00		 push	 0
  000e0	68 00 00 00 00	 push	 OFFSET ?msg@?1??deleteCharacter@@YAHXZ@4PADA
  000e5	6a 00		 push	 0
  000e7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000ea	c1 e0 04	 shl	 eax, 4
  000ed	83 e8 10	 sub	 eax, 16			; 00000010H
  000f0	99		 cdq
  000f1	2b c2		 sub	 eax, edx
  000f3	d1 f8		 sar	 eax, 1
  000f5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??deleteCharacter@@YAHXZ@4HA
  000fb	6a 01		 push	 1
  000fd	50		 push	 eax
  000fe	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??deleteCharacter@@YAHXZ@4HA
  00103	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??deleteCharacter@@YAHXZ@4HA
  0010f	2b ce		 sub	 ecx, esi
  00111	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00114	50		 push	 eax
  00115	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0011a	83 c4 18	 add	 esp, 24			; 00000018H

; 1925 : 		}
; 1926 : 	}
; 1927 : 
; 1928 : 	return ret;

  0011d	5e		 pop	 esi
$LN15@deleteChar:

; 1929 : }

  0011e	8b c7		 mov	 eax, edi
  00120	5f		 pop	 edi
  00121	c3		 ret	 0
$LN4@deleteChar:

; 1897 : 	}
; 1898 : 	else
; 1899 : 		if (deleteCharacterProcNo == 2)

  00122	66 83 f8 02	 cmp	 ax, 2
  00126	75 90		 jne	 SHORT $LN8@deleteChar

; 1900 : 		{
; 1901 : 			ret = delCharProc();

  00128	e8 00 00 00 00	 call	 ?delCharProc@@YAHXZ	; delCharProc
  0012d	8b f8		 mov	 edi, eax

; 1902 : 		}
; 1903 : 
; 1904 : 	if (ret != 0)

  0012f	85 ff		 test	 edi, edi
  00131	0f 84 7b ff ff
	ff		 je	 $LN18@deleteChar

; 1905 : 	{
; 1906 : 		if (ptActMenuWin)

  00137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A
  0013c	85 c0		 test	 eax, eax
  0013e	74 de		 je	 SHORT $LN15@deleteChar

; 1907 : 		{
; 1908 : 			DeathAction(ptActMenuWin);

  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00146	83 c4 04	 add	 esp, 4

; 1909 : 			ptActMenuWin = NULL;

  00149	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??deleteCharacter@@YAHXZ@4PAUaction@@A, 0

; 1929 : }

  00153	8b c7		 mov	 eax, edi
  00155	5f		 pop	 edi
  00156	c3		 ret	 0
?deleteCharacter@@YAHXZ ENDP				; deleteCharacter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initDeleteCharacter@@YAXXZ
_TEXT	SEGMENT
?initDeleteCharacter@@YAXXZ PROC			; initDeleteCharacter, COMDAT

; 1857 : 	deleteCharacterProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?deleteCharacterProcNo@@3FA, ax

; 1858 : }

  00008	c3		 ret	 0
?initDeleteCharacter@@YAXXZ ENDP			; initDeleteCharacter
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?downloadCharList@@YAHXZ
_TEXT	SEGMENT
?downloadCharList@@YAHXZ PROC				; downloadCharList, COMDAT

; 1955 : 	static ACTION* ptActMenuWin = NULL;
; 1956 : 	static int x, y, w, h;
; 1957 : 	int ret = 0;
; 1958 : 	static char msg[256];
; 1959 : 
; 1960 : 	// ???
; 1961 : 	if (downloadCharListProcNo == 0)

  00000	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?downloadCharListProcNo@@3FA
  00006	57		 push	 edi
  00007	33 ff		 xor	 edi, edi
  00009	66 85 c0	 test	 ax, ax
  0000c	0f 85 a7 00 00
	00		 jne	 $LN17@downloadCh

; 1962 : 	{
; 1963 : 		downloadCharListProcNo = 1;
; 1964 : 
; 1965 : 		strcpy(msg, "ìºë¦­ëª©ë¡ê°ì ¸ì¤ê¸°");

  00012	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@IFBIBFPD@?D?$LD?$LI?$KP?$LI?q?$LH?O?$LA?$KB?A?$KO?$LP?$MA?$LB?b@
  00019	b8 01 00 00 00	 mov	 eax, 1

; 1966 : 
; 1967 : 		// ??????î
; 1968 : 		w = strlen(msg) * 8 / 64 + 2;

  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??downloadCharList@@YAHXZ@4PADA
  00023	66 a3 00 00 00
	00		 mov	 WORD PTR ?downloadCharListProcNo@@3FA, ax
  00029	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@IFBIBFPD@?D?$LD?$LI?$KP?$LI?q?$LH?O?$LA?$KB?A?$KO?$LP?$MA?$LB?b@+16
  0002e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??downloadCharList@@YAHXZ@4PADA, xmm0
  00035	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??downloadCharList@@YAHXZ@4PADA+16, al
  0003a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0003d	0f 1f 00	 npad	 3
$LL12@downloadCh:
  00040	8a 01		 mov	 al, BYTE PTR [ecx]
  00042	41		 inc	 ecx
  00043	84 c0		 test	 al, al
  00045	75 f9		 jne	 SHORT $LL12@downloadCh
  00047	2b ca		 sub	 ecx, edx

; 1969 : 		h = (16 + 47) / 48;
; 1970 : 		if (h < 2)
; 1971 : 			h = 2;

  00049	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??downloadCharList@@YAHXZ@4HA, 2

; 1972 : 		x = (640 - w * 64) / 2;
; 1973 : 		y = (480 - h * 48) / 2;
; 1974 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00053	6a 01		 push	 1
  00055	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0005a	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??downloadCharList@@YAHXZ@4HA, 192 ; 000000c0H
  00064	6a 00		 push	 0
  00066	8d 0c cd 00 00
	00 00		 lea	 ecx, DWORD PTR [ecx*8]
  0006d	c1 e9 06	 shr	 ecx, 6
  00070	83 c1 02	 add	 ecx, 2
  00073	2b c1		 sub	 eax, ecx
  00075	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??downloadCharList@@YAHXZ@4HA, ecx
  0007b	c1 e0 06	 shl	 eax, 6
  0007e	99		 cdq
  0007f	6a 02		 push	 2
  00081	51		 push	 ecx
  00082	2b c2		 sub	 eax, edx
  00084	d1 f8		 sar	 eax, 1
  00086	68 c0 00 00 00	 push	 192			; 000000c0H
  0008b	50		 push	 eax
  0008c	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??downloadCharList@@YAHXZ@4HA, eax
  00091	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00096	8b c8		 mov	 ecx, eax
  00098	83 c4 18	 add	 esp, 24			; 00000018H
  0009b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A, ecx

; 1975 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 1976 : 		x = ptActMenuWin->x;

  000a1	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000a4	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??downloadCharList@@YAHXZ@4HA, eax

; 1977 : 		y = ptActMenuWin->y;

  000a9	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000ac	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??downloadCharList@@YAHXZ@4HA, eax
  000b1	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?downloadCharListProcNo@@3FA
  000b7	eb 06		 jmp	 SHORT $LN2@downloadCh
$LN17@downloadCh:

; 1955 : 	static ACTION* ptActMenuWin = NULL;
; 1956 : 	static int x, y, w, h;
; 1957 : 	int ret = 0;
; 1958 : 	static char msg[256];
; 1959 : 
; 1960 : 	// ???
; 1961 : 	if (downloadCharListProcNo == 0)

  000b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A
$LN2@downloadCh:

; 1978 : #endif
; 1979 : 	}
; 1980 : 
; 1981 : 	// ??????îî¾
; 1982 : 	if (downloadCharListProcNo == 1)

  000bf	66 83 f8 01	 cmp	 ax, 1
  000c3	0f 85 79 00 00
	00		 jne	 $LN4@downloadCh

; 1983 : 	{
; 1984 : 		charListStart();

  000c9	e8 00 00 00 00	 call	 ?charListStart@@YAXXZ	; charListStart

; 1985 : 		downloadCharListProcNo++;

  000ce	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?downloadCharListProcNo@@3FA
$LN18@downloadCh:

; 1999 : 		}
; 2000 : 	}
; 2001 : 
; 2002 : 	if (ptActMenuWin != NULL)

  000d5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A
$LN8@downloadCh:
  000db	85 c9		 test	 ecx, ecx
  000dd	74 5f		 je	 SHORT $LN15@downloadCh

; 2003 : 	{
; 2004 : 		// ?????î¸î
; 2005 : 		if (ptActMenuWin->hp >= 1)

  000df	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  000e3	7c 59		 jl	 SHORT $LN15@downloadCh

; 2006 : 		{
; 2007 : 			int len;
; 2008 : 			int xx, yy;
; 2009 : 
; 2010 : 			len = strlen(msg);

  000e5	56		 push	 esi
  000e6	be 00 00 00 00	 mov	 esi, OFFSET ?msg@?1??downloadCharList@@YAHXZ@4PADA
  000eb	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
  000ee	66 90		 npad	 2
$LL13@downloadCh:
  000f0	8a 06		 mov	 al, BYTE PTR [esi]
  000f2	46		 inc	 esi
  000f3	84 c0		 test	 al, al
  000f5	75 f9		 jne	 SHORT $LL13@downloadCh

; 2011 : 			xx = (w * 64 - len * 8) / 2;
; 2012 : 			yy = (h * 48 - 16) / 2;

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??downloadCharList@@YAHXZ@4HA
  000fc	2b f1		 sub	 esi, ecx

; 2013 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  000fe	6a 00		 push	 0
  00100	68 00 00 00 00	 push	 OFFSET ?msg@?1??downloadCharList@@YAHXZ@4PADA
  00105	6a 00		 push	 0
  00107	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0010a	c1 e0 04	 shl	 eax, 4
  0010d	83 e8 10	 sub	 eax, 16			; 00000010H
  00110	99		 cdq
  00111	2b c2		 sub	 eax, edx
  00113	d1 f8		 sar	 eax, 1
  00115	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??downloadCharList@@YAHXZ@4HA
  0011b	6a 01		 push	 1
  0011d	50		 push	 eax
  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??downloadCharList@@YAHXZ@4HA
  00123	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0012a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??downloadCharList@@YAHXZ@4HA
  0012f	2b ce		 sub	 ecx, esi
  00131	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  00134	50		 push	 eax
  00135	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0013a	83 c4 18	 add	 esp, 24			; 00000018H

; 2014 : 		}
; 2015 : 	}
; 2016 : 
; 2017 : 	return ret;

  0013d	5e		 pop	 esi
$LN15@downloadCh:

; 2018 : }

  0013e	8b c7		 mov	 eax, edi
  00140	5f		 pop	 edi
  00141	c3		 ret	 0
$LN4@downloadCh:

; 1986 : 	}
; 1987 : 	else
; 1988 : 		if (downloadCharListProcNo == 2)

  00142	66 83 f8 02	 cmp	 ax, 2
  00146	75 93		 jne	 SHORT $LN8@downloadCh

; 1989 : 		{
; 1990 : 			ret = charListProc();

  00148	e8 00 00 00 00	 call	 ?charListProc@@YAHXZ	; charListProc
  0014d	8b f8		 mov	 edi, eax

; 1991 : 		}
; 1992 : 
; 1993 : 	if (ret != 0)

  0014f	85 ff		 test	 edi, edi
  00151	74 82		 je	 SHORT $LN18@downloadCh

; 1994 : 	{
; 1995 : 		if (ptActMenuWin)

  00153	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A
  00158	85 c0		 test	 eax, eax
  0015a	74 e2		 je	 SHORT $LN15@downloadCh

; 1996 : 		{
; 1997 : 			DeathAction(ptActMenuWin);

  0015c	50		 push	 eax
  0015d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00162	83 c4 04	 add	 esp, 4

; 1998 : 			ptActMenuWin = NULL;

  00165	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??downloadCharList@@YAHXZ@4PAUaction@@A, 0

; 2018 : }

  0016f	8b c7		 mov	 eax, edi
  00171	5f		 pop	 edi
  00172	c3		 ret	 0
?downloadCharList@@YAHXZ ENDP				; downloadCharList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initDownloadCharList@@YAXXZ
_TEXT	SEGMENT
?initDownloadCharList@@YAXXZ PROC			; initDownloadCharList, COMDAT

; 1942 : 	downloadCharListProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?downloadCharListProcNo@@3FA, ax

; 1943 : }

  00008	c3		 ret	 0
?initDownloadCharList@@YAXXZ ENDP			; initDownloadCharList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?connecGameServer@@YAHXZ
_TEXT	SEGMENT
?connecGameServer@@YAHXZ PROC				; connecGameServer, COMDAT

; 1290 : 	static ACTION* ptActMenuWin = NULL;
; 1291 : 	static int x, y, w, h;
; 1292 : 	int ret = 0;
; 1293 : 	int ret2;
; 1294 : 	static char msg[256];
; 1295 : 
; 1296 : 	if (connecGameServerProcNo == 0)

  00000	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?connecGameServerProcNo@@3FA
  00006	53		 push	 ebx
  00007	33 db		 xor	 ebx, ebx
  00009	66 85 c0	 test	 ax, ax
  0000c	0f 85 be 00 00
	00		 jne	 $LN26@connecGame

; 1297 : 	{
; 1298 : 		connecGameServerProcNo = 1;

  00012	b8 01 00 00 00	 mov	 eax, 1
  00017	66 a3 00 00 00
	00		 mov	 WORD PTR ?connecGameServerProcNo@@3FA, ax

; 1299 : 		sprintf(msg, "[%s]ì ì ìì¤ìëë¤.", gmsv[selectServerIndex].name);

  0001d	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectServerIndex@@3FA ; selectServerIndex
  00024	c1 e0 08	 shl	 eax, 8
  00027	05 c0 00 00 00	 add	 eax, OFFSET ?gmsv@@3PAUgameserver@@A+192
  0002c	50		 push	 eax
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LJIGADOK@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?A?$NP?$MA?T?$LE?O?$LE?Y?4@
  00032	68 00 00 00 00	 push	 OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  00037	e8 00 00 00 00	 call	 _sprintf

; 1300 : 		w = (strlen(msg) * 9 + 63) / 64;

  0003c	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  00041	83 c4 0c	 add	 esp, 12			; 0000000cH
  00044	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL21@connecGame:
  00047	8a 01		 mov	 al, BYTE PTR [ecx]
  00049	41		 inc	 ecx
  0004a	84 c0		 test	 al, al
  0004c	75 f9		 jne	 SHORT $LL21@connecGame
  0004e	2b ca		 sub	 ecx, edx
  00050	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  00053	83 c1 3f	 add	 ecx, 63			; 0000003fH
  00056	c1 e9 06	 shr	 ecx, 6
  00059	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??connecGameServer@@YAHXZ@4HA, ecx
  0005f	8b d1		 mov	 edx, ecx
  00061	83 f9 02	 cmp	 ecx, 2

; 1301 : 		if (w < 2)

  00064	73 0d		 jae	 SHORT $LN3@connecGame

; 1302 : 			w = 2;

  00066	b9 02 00 00 00	 mov	 ecx, 2
  0006b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??connecGameServer@@YAHXZ@4HA, ecx
  00071	8b d1		 mov	 edx, ecx
$LN3@connecGame:

; 1303 : 		h = (16 + 47) / 48;
; 1304 : 		if (h < 2)
; 1305 : 			h = 2;
; 1306 : 		x = (640 - w * 64) / 2;
; 1307 : 		y = (480 - h * 48) / 2;
; 1308 : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00073	6a 01		 push	 1
  00075	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0007a	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??connecGameServer@@YAHXZ@4HA, 2
  00084	2b c2		 sub	 eax, edx
  00086	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??connecGameServer@@YAHXZ@4HA, 192 ; 000000c0H
  00090	c1 e0 06	 shl	 eax, 6
  00093	6a 00		 push	 0
  00095	99		 cdq
  00096	6a 02		 push	 2
  00098	51		 push	 ecx
  00099	2b c2		 sub	 eax, edx
  0009b	d1 f8		 sar	 eax, 1
  0009d	68 c0 00 00 00	 push	 192			; 000000c0H
  000a2	50		 push	 eax
  000a3	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??connecGameServer@@YAHXZ@4HA, eax
  000a8	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000ad	8b c8		 mov	 ecx, eax
  000af	83 c4 18	 add	 esp, 24			; 00000018H
  000b2	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A, ecx

; 1309 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 1310 : 		x = ptActMenuWin->x;

  000b8	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??connecGameServer@@YAHXZ@4HA, eax

; 1311 : 		y = ptActMenuWin->y;

  000c0	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  000c3	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??connecGameServer@@YAHXZ@4HA, eax
  000c8	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?connecGameServerProcNo@@3FA
  000ce	eb 06		 jmp	 SHORT $LN2@connecGame
$LN26@connecGame:

; 1290 : 	static ACTION* ptActMenuWin = NULL;
; 1291 : 	static int x, y, w, h;
; 1292 : 	int ret = 0;
; 1293 : 	int ret2;
; 1294 : 	static char msg[256];
; 1295 : 
; 1296 : 	if (connecGameServerProcNo == 0)

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A
$LN2@connecGame:

; 1312 : #endif
; 1313 : 	}
; 1314 : 	if (connecGameServerProcNo == 1)

  000d6	66 83 f8 01	 cmp	 ax, 1
  000da	75 34		 jne	 SHORT $LN7@connecGame

; 1315 : 	{
; 1316 : 		cleanupNetwork();

  000dc	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1317 : 		if (initNet())

  000e1	e8 00 00 00 00	 call	 ?initNet@@YAHXZ		; initNet
  000e6	85 c0		 test	 eax, eax
  000e8	74 17		 je	 SHORT $LN6@connecGame

; 1318 : 		{
; 1319 : 			dwServer = GS;
; 1320 : 			connecGameServerProcNo = 2;

  000ea	b8 02 00 00 00	 mov	 eax, 2
  000ef	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?dwServer@@3KA, 3 ; dwServer
  000f9	66 a3 00 00 00
	00		 mov	 WORD PTR ?connecGameServerProcNo@@3FA, ax

; 1321 : 		}

  000ff	eb 15		 jmp	 SHORT $LN18@connecGame
$LN6@connecGame:

; 1322 : 		else
; 1323 : 		{
; 1324 : 			ret = -1;

  00101	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?connecGameServerProcNo@@3FA
  00107	83 cb ff	 or	 ebx, -1
  0010a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A
$LN7@connecGame:

; 1325 : 		}
; 1326 : 	}
; 1327 : 	if (connecGameServerProcNo == 2)

  00110	66 83 f8 02	 cmp	 ax, 2
  00114	75 12		 jne	 SHORT $LN8@connecGame
$LN18@connecGame:

; 1328 : 	{
; 1329 : 		initConnectServer();

  00116	e8 00 00 00 00	 call	 ?initConnectServer@@YAXXZ ; initConnectServer

; 1330 : 		connecGameServerProcNo = 3;

  0011b	b8 03 00 00 00	 mov	 eax, 3
  00120	66 a3 00 00 00
	00		 mov	 WORD PTR ?connecGameServerProcNo@@3FA, ax

; 1331 : 	}
; 1332 : 	if (connecGameServerProcNo == 3)

  00126	eb 06		 jmp	 SHORT $LN19@connecGame
$LN8@connecGame:
  00128	66 83 f8 03	 cmp	 ax, 3
  0012c	75 1f		 jne	 SHORT $LN12@connecGame
$LN19@connecGame:

; 1333 : 	{
; 1334 : 		ret2 = connectServer();

  0012e	e8 00 00 00 00	 call	 ?connectServer@@YAHXZ	; connectServer

; 1335 : 		if (ret2 == 1)

  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A
  00139	83 f8 01	 cmp	 eax, 1
  0013c	75 04		 jne	 SHORT $LN10@connecGame

; 1336 : 		{
; 1337 : 			ret = 1;

  0013e	8b d8		 mov	 ebx, eax

; 1338 : 		}

  00140	eb 0f		 jmp	 SHORT $LN20@connecGame
$LN10@connecGame:

; 1339 : 		else
; 1340 : 			if (ret2 < 0)

  00142	85 c0		 test	 eax, eax
  00144	79 07		 jns	 SHORT $LN12@connecGame

; 1341 : 			{
; 1342 : 				ret = -2;

  00146	bb fe ff ff ff	 mov	 ebx, -2			; fffffffeH

; 1343 : 			}
; 1344 : 	}
; 1345 : 
; 1346 : 	if (ret != 0) {

  0014b	eb 04		 jmp	 SHORT $LN20@connecGame
$LN12@connecGame:
  0014d	85 db		 test	 ebx, ebx
  0014f	74 1f		 je	 SHORT $LN14@connecGame
$LN20@connecGame:

; 1347 : 		if (ptActMenuWin) {

  00151	85 c9		 test	 ecx, ecx
  00153	0f 84 ec 00 00
	00		 je	 $LN24@connecGame

; 1348 : 			DeathAction(ptActMenuWin);

  00159	51		 push	 ecx
  0015a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0015f	83 c4 04	 add	 esp, 4

; 1349 : 			ptActMenuWin = NULL;

  00162	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??connecGameServer@@YAHXZ@4PAUaction@@A, 0

; 1374 : }

  0016c	8b c3		 mov	 eax, ebx
  0016e	5b		 pop	 ebx
  0016f	c3		 ret	 0
$LN14@connecGame:

; 1350 : 		}
; 1351 : 	}
; 1352 : 
; 1353 : 	if (ptActMenuWin != NULL) {

  00170	85 c9		 test	 ecx, ecx
  00172	0f 84 cd 00 00
	00		 je	 $LN24@connecGame

; 1354 : 		if (ptActMenuWin->hp >= 1) {

  00178	83 79 78 01	 cmp	 DWORD PTR [ecx+120], 1
  0017c	0f 8c c3 00 00
	00		 jl	 $LN24@connecGame

; 1355 : 			int len;
; 1356 : 			int xx, yy;
; 1357 : 			len = strlen(msg);

  00182	b9 00 00 00 00	 mov	 ecx, OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  00187	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0018a	66 0f 1f 44 00
	00		 npad	 6
$LL22@connecGame:
  00190	8a 01		 mov	 al, BYTE PTR [ecx]
  00192	41		 inc	 ecx
  00193	84 c0		 test	 al, al
  00195	75 f9		 jne	 SHORT $LL22@connecGame

; 1358 : 			xx = (w * 64 - len * 8) / 2;

  00197	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??connecGameServer@@YAHXZ@4HA
  0019c	2b ca		 sub	 ecx, edx
  0019e	56		 push	 esi
  0019f	57		 push	 edi

; 1359 : 			yy = (h * 48 - 16) / 2;
; 1360 : #ifdef _NB_ç®¡çæ¨¡å¼
; 1361 : 			sprintf(msg, "%s", "CHAOS STONEAGE");

  001a0	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FLGFPKOG@CHAOS?5STONEAGE@
  001a5	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  001ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??connecGameServer@@YAHXZ@4HA
  001b1	2b f9		 sub	 edi, ecx
  001b3	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  001b8	68 00 00 00 00	 push	 OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  001bd	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001c0	c1 e7 02	 shl	 edi, 2
  001c3	c1 e0 04	 shl	 eax, 4
  001c6	83 e8 10	 sub	 eax, 16			; 00000010H
  001c9	99		 cdq
  001ca	2b c2		 sub	 eax, edx
  001cc	8b f0		 mov	 esi, eax
  001ce	d1 fe		 sar	 esi, 1
  001d0	e8 00 00 00 00	 call	 _sprintf

; 1362 : 			StockFontBuffer(x + xx + 38, y + yy - 10, FONT_PRIO_FRONT, FONT_PAL_AQUA, msg, 0);

  001d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??connecGameServer@@YAHXZ@4HA
  001da	6a 00		 push	 0
  001dc	68 00 00 00 00	 push	 OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  001e1	83 c0 f6	 add	 eax, -10		; fffffff6H
  001e4	6a 01		 push	 1
  001e6	03 c6		 add	 eax, esi
  001e8	6a 01		 push	 1
  001ea	50		 push	 eax
  001eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??connecGameServer@@YAHXZ@4HA
  001f0	83 c0 26	 add	 eax, 38			; 00000026H
  001f3	03 c7		 add	 eax, edi
  001f5	50		 push	 eax
  001f6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1363 : 			sprintf(msg, "[%s]ì ì ì ì¤ìëë¤.", gmsv[selectServerIndex].name);

  001fb	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectServerIndex@@3FA ; selectServerIndex
  00202	c1 e0 08	 shl	 eax, 8
  00205	05 c0 00 00 00	 add	 eax, OFFSET ?gmsv@@3PAUgameserver@@A+192
  0020a	50		 push	 eax
  0020b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@CKDNBLG@?$FL?$CFs?$FN?$LP?$KB?5?A?$KC?$LM?S?5?A?$NP?$MA?T?$LE?O?$LE?Y?4@
  00210	68 00 00 00 00	 push	 OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  00215	e8 00 00 00 00	 call	 _sprintf

; 1364 : 			StockFontBuffer(x + xx + 10, y + yy + 10, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  0021a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??connecGameServer@@YAHXZ@4HA
  0021f	6a 00		 push	 0
  00221	68 00 00 00 00	 push	 OFFSET ?msg@?1??connecGameServer@@YAHXZ@4PADA
  00226	83 c0 0a	 add	 eax, 10			; 0000000aH
  00229	6a 00		 push	 0
  0022b	03 c6		 add	 eax, esi
  0022d	6a 01		 push	 1
  0022f	50		 push	 eax
  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??connecGameServer@@YAHXZ@4HA
  00235	83 c0 0a	 add	 eax, 10			; 0000000aH
  00238	03 c7		 add	 eax, edi
  0023a	50		 push	 eax
  0023b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00240	83 c4 48	 add	 esp, 72			; 00000048H

; 1365 : 
; 1366 : #else
; 1367 : 			StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);
; 1368 : #endif
; 1369 : 
; 1370 : 		}
; 1371 : 	}
; 1372 : 
; 1373 : 	return ret;

  00243	5f		 pop	 edi
  00244	5e		 pop	 esi
$LN24@connecGame:

; 1374 : }

  00245	8b c3		 mov	 eax, ebx
  00247	5b		 pop	 ebx
  00248	c3		 ret	 0
?connecGameServer@@YAHXZ ENDP				; connecGameServer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initConnecGameServer@@YAXXZ
_TEXT	SEGMENT
?initConnecGameServer@@YAXXZ PROC			; initConnecGameServer, COMDAT

; 1284 : 	connecGameServerProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?connecGameServerProcNo@@3FA, ax

; 1285 : }

  00008	c3		 ret	 0
?initConnecGameServer@@YAXXZ ENDP			; initConnecGameServer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selectServer@@YAHXZ
_TEXT	SEGMENT
_title$1 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?selectServer@@YAHXZ PROC				; selectServer, COMDAT

; 1181 : int selectServer() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi

; 1182 : 	static int fontId[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
; 1183 : 	static int x, y;
; 1184 : 	int row;
; 1185 : 	int id;
; 1186 : 	int i;
; 1187 : 	int ret = 0;
; 1188 : 	if (ptActSelectServerWin == NULL) {

  00015	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A ; ptActSelectServerWin
  0001b	57		 push	 edi
  0001c	85 f6		 test	 esi, esi
  0001e	0f 85 a9 00 00
	00		 jne	 $LN38@selectServ

; 1189 : 		y = 270 + DISPLACEMENT_Y;
; 1190 : 		x = 0;
; 1191 : 		row = (gmgroup[nServerGroup].num >> 2) + 1;

  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nServerGroup@@3HA ; nServerGroup
  00029	33 c9		 xor	 ecx, ecx
  0002b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00031	c1 e0 06	 shl	 eax, 6
  00034	81 c2 0e 01 00
	00		 add	 edx, 270		; 0000010eH
  0003a	89 15 00 00 00
	00		 mov	 DWORD PTR ?y@?1??selectServer@@YAHXZ@4HA, edx
  00040	0f be 80 01 00
	00 00		 movsx	 eax, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[eax+1]
  00047	c1 f8 02	 sar	 eax, 2
  0004a	40		 inc	 eax

; 1192 : 		if (row == 1)

  0004b	83 f8 01	 cmp	 eax, 1
  0004e	75 07		 jne	 SHORT $LN9@selectServ

; 1193 : 			x = 256;

  00050	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00055	eb 21		 jmp	 SHORT $LN43@selectServ
$LN9@selectServ:

; 1194 : 		else if (row == 2)

  00057	83 f8 02	 cmp	 eax, 2
  0005a	75 07		 jne	 SHORT $LN11@selectServ

; 1195 : 			x = 192;

  0005c	b9 c0 00 00 00	 mov	 ecx, 192		; 000000c0H
  00061	eb 15		 jmp	 SHORT $LN43@selectServ
$LN11@selectServ:

; 1196 : 		else if (row == 3)

  00063	83 f8 03	 cmp	 eax, 3
  00066	75 05		 jne	 SHORT $LN13@selectServ

; 1197 : 			x = 128;

  00068	8d 48 7d	 lea	 ecx, DWORD PTR [eax+125]
  0006b	eb 0b		 jmp	 SHORT $LN43@selectServ
$LN13@selectServ:

; 1198 : 		else if (row == 4)

  0006d	83 f8 04	 cmp	 eax, 4
  00070	be 40 00 00 00	 mov	 esi, 64			; 00000040H
  00075	0f 44 ce	 cmove	 ecx, esi
$LN43@selectServ:

; 1199 : 			x = 64;
; 1200 : 		ptActSelectServerWin = MakeWindowDisp(x, y, row << 1, 3, NULL, 1);

  00078	6a 01		 push	 1
  0007a	6a 00		 push	 0
  0007c	6a 03		 push	 3
  0007e	03 c0		 add	 eax, eax
  00080	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??selectServer@@YAHXZ@4HA, ecx
  00086	50		 push	 eax
  00087	52		 push	 edx
  00088	51		 push	 ecx
  00089	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0008e	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00095	8b f0		 mov	 esi, eax
  00097	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, esi ; ptActSelectServerWin
  0009d	83 c4 18	 add	 esp, 24			; 00000018H

; 1201 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 1202 : 		x = ptActSelectServerWin->x + 22;

  000a0	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  000a3	83 c1 16	 add	 ecx, 22			; 00000016H
  000a6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??selectServer@@YAHXZ@4HA, ecx

; 1203 : 		y = ptActSelectServerWin->y + 28;

  000ac	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  000af	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000b2	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??selectServer@@YAHXZ@4HA, ecx
  000b8	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectServer@@YAHXZ@4PAHA, xmm0
  000bf	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectServer@@YAHXZ@4PAHA+16, xmm0
  000c6	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectServer@@YAHXZ@4PAHA+32, xmm0
$LN38@selectServ:

; 1204 : #else
; 1205 : 		x += 22;
; 1206 : 		y += 28;
; 1207 : #endif
; 1208 : 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 1209 : 			fontId[i] = -2;
; 1210 : 	}
; 1211 : 	if (ptActSelectServerWin != NULL) {
; 1212 : 		// æ¸¸æ å¨ç¬¬å ä¸ªéé¡¹
; 1213 : 		id = selFontId(fontId, gmgroup[nServerGroup].num + 1);

  000cd	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?nServerGroup@@3HA ; nServerGroup
  000d3	c1 e7 06	 shl	 edi, 6
  000d6	0f be 9f 01 00
	00 00		 movsx	 ebx, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[edi+1]
  000dd	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  000e0	50		 push	 eax
  000e1	68 00 00 00 00	 push	 OFFSET ?fontId@?1??selectServer@@YAHXZ@4PAHA
  000e6	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000eb	8b c8		 mov	 ecx, eax
  000ed	83 c4 08	 add	 esp, 8

; 1214 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1215 : 		extern int èªå¨ç»éæ¯å¦å¼å¯;
; 1216 : #else
; 1217 : 		if (id == -1)
; 1218 : 		{
; 1219 : 			id = JL_èªå¨ç»ééæ©å¯æº();
; 1220 : 		}
; 1221 : #endif
; 1222 : 		if (id >= 0 && id < gmgroup[nServerGroup].num
; 1223 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1224 : 			|| èªå¨ç»éæ¯å¦å¼å¯

  000f0	85 c9		 test	 ecx, ecx
  000f2	78 1a		 js	 SHORT $LN20@selectServ
  000f4	3b cb		 cmp	 ecx, ebx
  000f6	7d 16		 jge	 SHORT $LN20@selectServ

; 1225 : #endif
; 1226 : 			) {
; 1227 : 			char title[256];
; 1228 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1229 : 			if (èªå¨ç»éæ¯å¦å¼å¯) selectServerIndex = gmgroup[nServerGroup].startindex + PcLanded.å°åº;

  000f8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, 0 ; í»?Ôô?ãÀÜú??
  000ff	75 1a		 jne	 SHORT $LN36@selectServ

; 1230 : 			else
; 1231 : #endif
; 1232 : 				selectServerIndex = gmgroup[nServerGroup].startindex + id;

  00101	66 0f be 87 02
	00 00 00	 movsx	 ax, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[edi+2]
  00109	66 03 c1	 add	 ax, cx
  0010c	eb 1c		 jmp	 SHORT $LN44@selectServ
$LN20@selectServ:

; 1214 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1215 : 		extern int èªå¨ç»éæ¯å¦å¼å¯;
; 1216 : #else
; 1217 : 		if (id == -1)
; 1218 : 		{
; 1219 : 			id = JL_èªå¨ç»ééæ©å¯æº();
; 1220 : 		}
; 1221 : #endif
; 1222 : 		if (id >= 0 && id < gmgroup[nServerGroup].num
; 1223 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1224 : 			|| èªå¨ç»éæ¯å¦å¼å¯

  0010e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, 0 ; í»?Ôô?ãÀÜú??
  00115	0f 84 95 00 00
	00		 je	 $LN17@selectServ
$LN36@selectServ:

; 1225 : #endif
; 1226 : 			) {
; 1227 : 			char title[256];
; 1228 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1229 : 			if (èªå¨ç»éæ¯å¦å¼å¯) selectServerIndex = gmgroup[nServerGroup].startindex + PcLanded.å°åº;

  0011b	66 0f be 87 02
	00 00 00	 movsx	 ax, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[edi+2]
  00123	66 03 05 08 00
	00 00		 add	 ax, WORD PTR ?PcLanded@@3ULanded@@A+8
$LN44@selectServ:

; 1233 : #ifdef _STONDEBUG_
; 1234 : 			/*sprintf( title, "%s %s [%s  %s:%s]", DEF_APPNAME, SA_VERSION,
; 1235 : 				gmsv[selectServerIndex].name,
; 1236 : 				gmsv[selectServerIndex].ipaddr, gmsv[selectServerIndex].port );*/
; 1237 : 				//CC_FIX 20170806
; 1238 : 				//å®¢æ·ç«¯åå¸debugçæ¬ï¼è¿éçtitleä¹ä¸éè¦åæ¾ç¤ºæå¡å¨çipåç«¯å£å·
; 1239 : 			sprintf(title, "%s %s [%s]", DEF_APPNAME, SA_VERSION, gmsv[selectServerIndex].name);
; 1240 : #else
; 1241 : 			sprintf(title, "%s %s [%s]", DEF_APPNAME, SA_VERSION, gmsv[selectServerIndex].name);

  0012a	0f b7 c0	 movzx	 eax, ax
  0012d	66 a3 00 00 00
	00		 mov	 WORD PTR ?selectServerIndex@@3FA, ax ; selectServerIndex
  00133	98		 cwde
  00134	c1 e0 08	 shl	 eax, 8
  00137	05 c0 00 00 00	 add	 eax, OFFSET ?gmsv@@3PAUgameserver@@A+192
  0013c	50		 push	 eax
  0013d	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00142	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@
  00147	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$1[ebp]
  0014d	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BGALCGMK@?$CFs?5?$CFs?5?$FL?$CFs?$FN@
  00152	50		 push	 eax
  00153	e8 00 00 00 00	 call	 _sprintf
  00158	83 c4 14	 add	 esp, 20			; 00000014H

; 1242 : #endif
; 1243 : 			SetWindowText(hWnd, title);

  0015b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$1[ebp]
  00161	50		 push	 eax
  00162	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  00168	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SetWindowTextA@8

; 1244 : 			DeathAction(ptActSelectServerWin);

  0016e	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A ; ptActSelectServerWin
  00174	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1245 : 			ptActSelectServerWin = NULL;
; 1246 : 			play_se(217, 320, 240);	// clickå£°

  00179	68 f0 00 00 00	 push	 240			; 000000f0H
  0017e	68 40 01 00 00	 push	 320			; 00000140H
  00183	68 d9 00 00 00	 push	 217			; 000000d9H
  00188	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, 0 ; ptActSelectServerWin
  00192	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00197	83 c4 10	 add	 esp, 16			; 00000010H

; 1247 : 			return 1;

  0019a	b8 01 00 00 00	 mov	 eax, 1
  0019f	5f		 pop	 edi

; 1269 : 		}
; 1270 : 	}
; 1271 : 	return 0;
; 1272 : }

  001a0	5e		 pop	 esi
  001a1	5b		 pop	 ebx
  001a2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a5	33 cd		 xor	 ecx, ebp
  001a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ac	8b e5		 mov	 esp, ebp
  001ae	5d		 pop	 ebp
  001af	c3		 ret	 0
$LN17@selectServ:

; 1248 : 		}
; 1249 : 		else if (id == gmgroup[nServerGroup].num) {

  001b0	3b cb		 cmp	 ecx, ebx
  001b2	75 3d		 jne	 SHORT $LN23@selectServ

; 1250 : 			DeathAction(ptActSelectServerWin);

  001b4	56		 push	 esi
  001b5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1251 : 			ptActSelectServerWin = NULL;
; 1252 : 			play_se(217, 320, 240);	// clickå£°

  001ba	68 f0 00 00 00	 push	 240			; 000000f0H
  001bf	68 40 01 00 00	 push	 320			; 00000140H
  001c4	68 d9 00 00 00	 push	 217			; 000000d9H
  001c9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, 0 ; ptActSelectServerWin
  001d3	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  001d8	83 c4 10	 add	 esp, 16			; 00000010H

; 1253 : 			return 2;

  001db	b8 02 00 00 00	 mov	 eax, 2
  001e0	5f		 pop	 edi

; 1269 : 		}
; 1270 : 	}
; 1271 : 	return 0;
; 1272 : }

  001e1	5e		 pop	 esi
  001e2	5b		 pop	 ebx
  001e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e6	33 cd		 xor	 ecx, ebp
  001e8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001ed	8b e5		 mov	 esp, ebp
  001ef	5d		 pop	 ebp
  001f0	c3		 ret	 0
$LN23@selectServ:

; 1254 : 		}
; 1255 : 		if (ptActSelectServerWin->hp >= 1) {

  001f1	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  001f5	0f 8c af 00 00
	00		 jl	 $LN24@selectServ

; 1256 : 			int j = gmgroup[nServerGroup].startindex;

  001fb	0f be bf 02 00
	00 00		 movsx	 edi, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[edi+2]

; 1257 : 			int Hit = 0;
; 1258 : 			for (i = 0; i < gmgroup[nServerGroup].num; i++, j++) {

  00202	33 f6		 xor	 esi, esi
  00204	85 db		 test	 ebx, ebx
  00206	7e 70		 jle	 SHORT $LN41@selectServ

; 1256 : 			int j = gmgroup[nServerGroup].startindex;

  00208	c1 e7 08	 shl	 edi, 8
  0020b	81 c7 c0 00 00
	00		 add	 edi, OFFSET ?gmsv@@3PAUgameserver@@A+192
$LL7@selectServ:

; 1259 : 				if ('1' == gmsv[j].used)
; 1260 : 					Hit = 2;
; 1261 : 				else
; 1262 : 					Hit = 0;
; 1263 : 
; 1264 : 
; 1265 : 				fontId[i] = StockFontBuffer(x + (i >> 2) * 128, y + (i % 4) * 25, FONT_PRIO_FRONT, FONT_PAL_YELLOW, gmsv[j].name, Hit);

  00211	33 c9		 xor	 ecx, ecx
  00213	b8 02 00 00 00	 mov	 eax, 2
  00218	80 bf 40 ff ff
	ff 31		 cmp	 BYTE PTR [edi-192], 49	; 00000031H
  0021f	0f 45 c1	 cmovne	 eax, ecx
  00222	50		 push	 eax
  00223	57		 push	 edi
  00224	8b c6		 mov	 eax, esi
  00226	6a 04		 push	 4
  00228	6a 01		 push	 1
  0022a	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0022f	79 05		 jns	 SHORT $LN42@selectServ
  00231	48		 dec	 eax
  00232	83 c8 fc	 or	 eax, -4			; fffffffcH
  00235	40		 inc	 eax
$LN42@selectServ:
  00236	6b c0 19	 imul	 eax, eax, 25
  00239	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??selectServer@@YAHXZ@4HA
  0023f	50		 push	 eax
  00240	8b c6		 mov	 eax, esi
  00242	c1 f8 02	 sar	 eax, 2
  00245	c1 e0 07	 shl	 eax, 7
  00248	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??selectServer@@YAHXZ@4HA
  0024e	50		 push	 eax
  0024f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00254	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??selectServer@@YAHXZ@4PAHA[esi*4], eax
  0025b	83 c4 18	 add	 esp, 24			; 00000018H
  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nServerGroup@@3HA ; nServerGroup
  00263	46		 inc	 esi
  00264	c1 e0 06	 shl	 eax, 6
  00267	81 c7 00 01 00
	00		 add	 edi, 256		; 00000100H
  0026d	0f be 80 01 00
	00 00		 movsx	 eax, BYTE PTR ?gmgroup@@3PAUgamegroup@@A[eax+1]
  00274	3b f0		 cmp	 esi, eax
  00276	7c 99		 jl	 SHORT $LL7@selectServ
$LN41@selectServ:

; 1266 : 
; 1267 : 			}
; 1268 : 			fontId[i] = StockFontBuffer(x + (i >> 2) * 128, y + 75, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  ëìê°ê¸°  ", 2);

  00278	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??selectServer@@YAHXZ@4HA
  0027d	6a 02		 push	 2
  0027f	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DFLJEJED@?5?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?5?5@
  00284	83 c0 4b	 add	 eax, 75			; 0000004bH
  00287	6a 04		 push	 4
  00289	6a 01		 push	 1
  0028b	50		 push	 eax
  0028c	8b c6		 mov	 eax, esi
  0028e	c1 f8 02	 sar	 eax, 2
  00291	c1 e0 07	 shl	 eax, 7
  00294	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??selectServer@@YAHXZ@4HA
  0029a	50		 push	 eax
  0029b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002a0	83 c4 18	 add	 esp, 24			; 00000018H
  002a3	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??selectServer@@YAHXZ@4PAHA[esi*4], eax
$LN24@selectServ:

; 1269 : 		}
; 1270 : 	}
; 1271 : 	return 0;
; 1272 : }

  002aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002ad	33 c0		 xor	 eax, eax
  002af	5f		 pop	 edi
  002b0	5e		 pop	 esi
  002b1	33 cd		 xor	 ecx, ebp
  002b3	5b		 pop	 ebx
  002b4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002b9	8b e5		 mov	 esp, ebp
  002bb	5d		 pop	 ebp
  002bc	c3		 ret	 0
?selectServer@@YAHXZ ENDP				; selectServer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selectGroup@@YAHXZ
_TEXT	SEGMENT
_Ûå?$1 = -1284						; size = 1024
_title$2 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?selectGroup@@YAHXZ PROC				; selectGroup, COMDAT

; 1082 : int selectGroup() {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 05 00
	00		 sub	 esp, 1284		; 00000504H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 1083 : 	static int fontId[] = { -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2 };
; 1084 : 	static int x, y;
; 1085 : 	int row;
; 1086 : 	int id;
; 1087 : 	int i;
; 1088 : 	int ret = 0;
; 1089 : 	if (ptActSelectServerWin == NULL) {

  00014	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A ; ptActSelectServerWin
  0001a	57		 push	 edi
  0001b	85 f6		 test	 esi, esi
  0001d	0f 85 9f 00 00
	00		 jne	 $LN42@selectGrou

; 1090 : 		y = 270 + DISPLACEMENT_Y;
; 1091 : 		x = 0;
; 1092 : 		row = (nGroup >> 2) + 1;

  00023	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nGroup@@3HA ; nGroup
  00028	33 c9		 xor	 ecx, ecx
  0002a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00030	c1 f8 02	 sar	 eax, 2
  00033	81 c2 0e 01 00
	00		 add	 edx, 270		; 0000010eH
  00039	40		 inc	 eax
  0003a	89 15 00 00 00
	00		 mov	 DWORD PTR ?y@?1??selectGroup@@YAHXZ@4HA, edx

; 1093 : 		if (row == 1)

  00040	83 f8 01	 cmp	 eax, 1
  00043	75 07		 jne	 SHORT $LN9@selectGrou

; 1094 : 			x = 256;

  00045	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  0004a	eb 21		 jmp	 SHORT $LN47@selectGrou
$LN9@selectGrou:

; 1095 : 		else if (row == 2)

  0004c	83 f8 02	 cmp	 eax, 2
  0004f	75 07		 jne	 SHORT $LN11@selectGrou

; 1096 : 			x = 192;

  00051	b9 c0 00 00 00	 mov	 ecx, 192		; 000000c0H
  00056	eb 15		 jmp	 SHORT $LN47@selectGrou
$LN11@selectGrou:

; 1097 : 		else if (row == 3)

  00058	83 f8 03	 cmp	 eax, 3
  0005b	75 05		 jne	 SHORT $LN13@selectGrou

; 1098 : 			x = 128;

  0005d	8d 48 7d	 lea	 ecx, DWORD PTR [eax+125]
  00060	eb 0b		 jmp	 SHORT $LN47@selectGrou
$LN13@selectGrou:

; 1099 : 		else if (row == 4)

  00062	83 f8 04	 cmp	 eax, 4
  00065	be 40 00 00 00	 mov	 esi, 64			; 00000040H
  0006a	0f 44 ce	 cmove	 ecx, esi
$LN47@selectGrou:

; 1100 : 			x = 64;
; 1101 : 		ptActSelectServerWin = MakeWindowDisp(x, y, row << 1, 3, NULL, 1);

  0006d	6a 01		 push	 1
  0006f	6a 00		 push	 0
  00071	6a 03		 push	 3
  00073	03 c0		 add	 eax, eax
  00075	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??selectGroup@@YAHXZ@4HA, ecx
  0007b	50		 push	 eax
  0007c	52		 push	 edx
  0007d	51		 push	 ecx
  0007e	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00083	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0008a	8b f0		 mov	 esi, eax
  0008c	89 35 00 00 00
	00		 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, esi ; ptActSelectServerWin
  00092	83 c4 18	 add	 esp, 24			; 00000018H

; 1102 : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 1103 : 		x = ptActSelectServerWin->x + 22;

  00095	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00098	83 c1 16	 add	 ecx, 22			; 00000016H
  0009b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??selectGroup@@YAHXZ@4HA, ecx

; 1104 : 		y = ptActSelectServerWin->y + 28;

  000a1	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  000a4	83 c1 1c	 add	 ecx, 28			; 0000001cH
  000a7	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??selectGroup@@YAHXZ@4HA, ecx
  000ad	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectGroup@@YAHXZ@4PAHA, xmm0
  000b4	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectGroup@@YAHXZ@4PAHA+16, xmm0
  000bb	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?fontId@?1??selectGroup@@YAHXZ@4PAHA+32, xmm0
$LN42@selectGrou:

; 1105 : #else
; 1106 : 		x += 22;
; 1107 : 		y += 28;
; 1108 : #endif
; 1109 : 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++)
; 1110 : 			fontId[i] = -2;
; 1111 : 	}
; 1112 : 	if (ptActSelectServerWin != NULL) {
; 1113 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1114 : 		extern int èªå¨ç»éæ¯å¦å¼å¯;
; 1115 : #endif
; 1116 : 		// æ¸¸æ å¨ç¬¬å ä¸ªéé¡¹
; 1117 : 		id = selFontId(fontId, nGroup + 1);

  000c2	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?nGroup@@3HA ; nGroup
  000c8	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  000cb	50		 push	 eax
  000cc	68 00 00 00 00	 push	 OFFSET ?fontId@?1??selectGroup@@YAHXZ@4PAHA
  000d1	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  000d6	83 c4 08	 add	 esp, 8

; 1118 : 
; 1119 : #ifndef _NB_æ­çº¿èªå¨éè¿		//JL HOOK
; 1120 : 		if (id == -1)
; 1121 : 		{
; 1122 : 			id = JL_èªå¨ç»ééæ©æå¡å¨();
; 1123 : 		}
; 1124 : #endif
; 1125 : 		if (id >= 0 && id < nGroup
; 1126 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1127 : 			|| èªå¨ç»éæ¯å¦å¼å¯

  000d9	85 c0		 test	 eax, eax
  000db	78 0f		 js	 SHORT $LN20@selectGrou
  000dd	3b c7		 cmp	 eax, edi
  000df	7d 0b		 jge	 SHORT $LN20@selectGrou

; 1128 : #endif
; 1129 : 			) {
; 1130 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1131 : 			if (èªå¨ç»éæ¯å¦å¼å¯) nServerGroup = PcLanded.å¤§åº;

  000e1	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, 0 ; í»?Ôô?ãÀÜú??
  000e8	75 0f		 jne	 SHORT $LN39@selectGrou

; 1132 : 			else
; 1133 : #endif
; 1134 : 				nServerGroup = id;

  000ea	eb 12		 jmp	 SHORT $LN48@selectGrou
$LN20@selectGrou:

; 1118 : 
; 1119 : #ifndef _NB_æ­çº¿èªå¨éè¿		//JL HOOK
; 1120 : 		if (id == -1)
; 1121 : 		{
; 1122 : 			id = JL_èªå¨ç»ééæ©æå¡å¨();
; 1123 : 		}
; 1124 : #endif
; 1125 : 		if (id >= 0 && id < nGroup
; 1126 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1127 : 			|| èªå¨ç»éæ¯å¦å¼å¯

  000ec	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, 0 ; í»?Ôô?ãÀÜú??
  000f3	0f 84 32 01 00
	00		 je	 $LN17@selectGrou
$LN39@selectGrou:

; 1128 : #endif
; 1129 : 			) {
; 1130 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1131 : 			if (èªå¨ç»éæ¯å¦å¼å¯) nServerGroup = PcLanded.å¤§åº;

  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?PcLanded@@3ULanded@@A
$LN48@selectGrou:

; 1135 : 			char title[256];
; 1136 : 			sprintf(title, "%s %s [%s]", DEF_APPNAME, SA_VERSION, gmgroup[nServerGroup].name);

  000fe	a3 00 00 00 00	 mov	 DWORD PTR ?nServerGroup@@3HA, eax ; nServerGroup
  00103	c1 e0 06	 shl	 eax, 6
  00106	05 03 00 00 00	 add	 eax, OFFSET ?gmgroup@@3PAUgamegroup@@A+3
  0010b	50		 push	 eax
  0010c	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00111	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@
  00116	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$2[ebp]
  0011c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BGALCGMK@?$CFs?5?$CFs?5?$FL?$CFs?$FN@
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 _sprintf
  00127	83 c4 14	 add	 esp, 20			; 00000014H

; 1137 : #ifdef _NB_CANCEL_FANTI
; 1138 : 			extern int ç¹ä½å¼å³;
; 1139 : 			extern int ç¼ç ;
; 1140 : 			if (ç¹ä½å¼å³) {

  0012a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?Ûå???@@3HA, 0 ; Ûå???
  00131	74 67		 je	 SHORT $LN23@selectGrou

; 1141 : 				char ç¹ä½[1024] = { 0 };

  00133	68 00 04 00 00	 push	 1024			; 00000400H
  00138	8d 85 fc fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  0013e	6a 00		 push	 0
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _memset

; 1142 : 				LCMapString(0x804, 0x4000000, title, strlen(title), ç¹ä½, 1024);

  00146	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _title$2[ebp]
  0014c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL41@selectGrou:
  00152	8a 01		 mov	 al, BYTE PTR [ecx]
  00154	41		 inc	 ecx
  00155	84 c0		 test	 al, al
  00157	75 f9		 jne	 SHORT $LL41@selectGrou
  00159	68 00 04 00 00	 push	 1024			; 00000400H
  0015e	8d 85 fc fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  00164	2b ca		 sub	 ecx, edx
  00166	50		 push	 eax
  00167	51		 push	 ecx
  00168	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$2[ebp]
  0016e	50		 push	 eax
  0016f	68 00 00 00 04	 push	 67108864		; 04000000H
  00174	68 04 08 00 00	 push	 2052			; 00000804H
  00179	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LCMapStringA@24

; 1143 : 				sprintf(title, "%s", ç¹ä½);

  0017f	8d 85 fc fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  00185	50		 push	 eax
  00186	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$2[ebp]
  0018c	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00191	50		 push	 eax
  00192	e8 00 00 00 00	 call	 _sprintf
  00197	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN23@selectGrou:

; 1144 : 			}
; 1145 : 			if (ç¼ç  == 950) {

  0019a	81 3d 00 00 00
	00 b6 03 00 00	 cmp	 DWORD PTR ???@@3HA, 950	; ??, 000003b6H
  001a4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$2[ebp]
  001aa	50		 push	 eax
  001ab	75 09		 jne	 SHORT $LN24@selectGrou

; 1146 : 				SetWindowText(hWnd, GB2312ToBIG5((const char*)title));

  001ad	e8 00 00 00 00	 call	 ?GB2312ToBIG5@@YAPADPBD@Z ; GB2312ToBIG5
  001b2	83 c4 04	 add	 esp, 4
  001b5	50		 push	 eax
$LN24@selectGrou:

; 1147 : 			}
; 1148 : 			else {
; 1149 : 				SetWindowText(hWnd, title);
; 1150 : 			}
; 1151 : #else
; 1152 : 			SetWindowText(hWnd, title);
; 1153 : #endif
; 1154 : 			SetWindowText(hWnd, title);

  001b6	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  001bc	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SetWindowTextA@8
  001c2	ff d6		 call	 esi
  001c4	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _title$2[ebp]
  001ca	50		 push	 eax
  001cb	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  001d1	ff d6		 call	 esi

; 1155 : 			DeathAction(ptActSelectServerWin);

  001d3	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A ; ptActSelectServerWin
  001d9	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1156 : 			ptActSelectServerWin = NULL;
; 1157 : 			play_se(217, 320, 240);	// clickå£°

  001de	68 f0 00 00 00	 push	 240			; 000000f0H
  001e3	68 40 01 00 00	 push	 320			; 00000140H
  001e8	68 d9 00 00 00	 push	 217			; 000000d9H
  001ed	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, 0 ; ptActSelectServerWin
  001f7	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1158 : 			if (gmgroup[nServerGroup].used == 1)

  001fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nServerGroup@@3HA ; nServerGroup
  00202	83 c4 10	 add	 esp, 16			; 00000010H
  00205	c1 e1 06	 shl	 ecx, 6
  00208	33 c0		 xor	 eax, eax
  0020a	5f		 pop	 edi
  0020b	80 b9 00 00 00
	00 01		 cmp	 BYTE PTR ?gmgroup@@3PAUgamegroup@@A[ecx], 1

; 1176 : 		}
; 1177 : 	}
; 1178 : 	return 0;
; 1179 : }

  00212	5e		 pop	 esi
  00213	0f 95 c0	 setne	 al
  00216	8d 04 45 01 00
	00 00		 lea	 eax, DWORD PTR [eax*2+1]
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00220	33 cd		 xor	 ecx, ebp
  00222	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c3		 ret	 0
$LN17@selectGrou:

; 1159 : 				return 1;
; 1160 : 			else
; 1161 : 				return 3;
; 1162 : 		}
; 1163 : 		else if (id == nGroup) {

  0022b	3b c7		 cmp	 eax, edi
  0022d	75 3c		 jne	 SHORT $LN28@selectGrou

; 1164 : 			DeathAction(ptActSelectServerWin);

  0022f	56		 push	 esi
  00230	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1165 : 			ptActSelectServerWin = NULL;
; 1166 : 			play_se(217, 320, 240);	// clickå£°

  00235	68 f0 00 00 00	 push	 240			; 000000f0H
  0023a	68 40 01 00 00	 push	 320			; 00000140H
  0023f	68 d9 00 00 00	 push	 217			; 000000d9H
  00244	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, 0 ; ptActSelectServerWin
  0024e	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00253	83 c4 10	 add	 esp, 16			; 00000010H

; 1167 : 			return 2;

  00256	b8 02 00 00 00	 mov	 eax, 2
  0025b	5f		 pop	 edi

; 1176 : 		}
; 1177 : 	}
; 1178 : 	return 0;
; 1179 : }

  0025c	5e		 pop	 esi
  0025d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00260	33 cd		 xor	 ecx, ebp
  00262	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00267	8b e5		 mov	 esp, ebp
  00269	5d		 pop	 ebp
  0026a	c3		 ret	 0
$LN28@selectGrou:

; 1168 : 		}
; 1169 : 		if (ptActSelectServerWin->hp >= 1) {

  0026b	83 7e 78 01	 cmp	 DWORD PTR [esi+120], 1
  0026f	0f 8c 86 00 00
	00		 jl	 $LN29@selectGrou

; 1170 : 			int Hit = 0;
; 1171 : 			for (i = 0; i < nGroup; i++) {

  00275	33 f6		 xor	 esi, esi
  00277	85 ff		 test	 edi, edi
  00279	7e 4e		 jle	 SHORT $LN45@selectGrou
  0027b	bf 03 00 00 00	 mov	 edi, OFFSET ?gmgroup@@3PAUgamegroup@@A+3
$LL7@selectGrou:

; 1172 : 				Hit = 2;
; 1173 : 				fontId[i] = StockFontBuffer(x + (i >> 2) * 128, y + (i % 4) * 25, FONT_PRIO_FRONT, FONT_PAL_YELLOW, gmgroup[i].name, Hit);

  00280	6a 02		 push	 2
  00282	57		 push	 edi
  00283	8b c6		 mov	 eax, esi
  00285	6a 04		 push	 4
  00287	6a 01		 push	 1
  00289	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  0028e	79 05		 jns	 SHORT $LN46@selectGrou
  00290	48		 dec	 eax
  00291	83 c8 fc	 or	 eax, -4			; fffffffcH
  00294	40		 inc	 eax
$LN46@selectGrou:
  00295	6b c0 19	 imul	 eax, eax, 25
  00298	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??selectGroup@@YAHXZ@4HA
  0029e	50		 push	 eax
  0029f	8b c6		 mov	 eax, esi
  002a1	c1 f8 02	 sar	 eax, 2
  002a4	c1 e0 07	 shl	 eax, 7
  002a7	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??selectGroup@@YAHXZ@4HA
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002b3	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??selectGroup@@YAHXZ@4PAHA[esi*4], eax
  002ba	83 c4 18	 add	 esp, 24			; 00000018H
  002bd	46		 inc	 esi
  002be	83 c7 40	 add	 edi, 64			; 00000040H
  002c1	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?nGroup@@3HA ; nGroup
  002c7	7c b7		 jl	 SHORT $LL7@selectGrou
$LN45@selectGrou:

; 1174 : 			}
; 1175 : 			fontId[i] = StockFontBuffer(x + (i >> 2) * 128, y + 75, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  ëìê°ê¸°  ", 2);

  002c9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??selectGroup@@YAHXZ@4HA
  002ce	6a 02		 push	 2
  002d0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DFLJEJED@?5?5?$LF?$LJ?$LO?F?$LA?$KB?$LB?b?5?5@
  002d5	83 c0 4b	 add	 eax, 75			; 0000004bH
  002d8	6a 04		 push	 4
  002da	6a 01		 push	 1
  002dc	50		 push	 eax
  002dd	8b c6		 mov	 eax, esi
  002df	c1 f8 02	 sar	 eax, 2
  002e2	c1 e0 07	 shl	 eax, 7
  002e5	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??selectGroup@@YAHXZ@4HA
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002f1	83 c4 18	 add	 esp, 24			; 00000018H
  002f4	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?fontId@?1??selectGroup@@YAHXZ@4PAHA[esi*4], eax
$LN29@selectGrou:

; 1176 : 		}
; 1177 : 	}
; 1178 : 	return 0;
; 1179 : }

  002fb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002fe	33 c0		 xor	 eax, eax
  00300	5f		 pop	 edi
  00301	33 cd		 xor	 ecx, ebp
  00303	5e		 pop	 esi
  00304	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00309	8b e5		 mov	 esp, ebp
  0030b	5d		 pop	 ebp
  0030c	c3		 ret	 0
?selectGroup@@YAHXZ ENDP				; selectGroup
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initSelectServer@@YAXXZ
_TEXT	SEGMENT
?initSelectServer@@YAXXZ PROC				; initSelectServer, COMDAT

; 1075 : 	ptActSelectServerWin = NULL;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActSelectServerWin@@3PAUaction@@A, 0 ; ptActSelectServerWin

; 1076 : }

  0000a	c3		 ret	 0
?initSelectServer@@YAXXZ ENDP				; initSelectServer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?commonMsgWin@@YAHPAD@Z
_TEXT	SEGMENT
_ret$1$ = -912						; size = 4
tv608 = -908						; size = 4
_j$3$ = -908						; size = 4
$T1 = -904						; size = 4
_i$2$ = -904						; size = 4
_out_msg$ = -900					; size = 640
_temp$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_msg$ = 8						; size = 4
?commonMsgWin@@YAHPAD@Z PROC				; commonMsgWin, COMDAT

; 695  : int commonMsgWin(char* msg) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 90 03 00
	00		 sub	 esp, 912		; 00000390H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx

; 696  : 	static int fontId[] = { -2 };
; 697  : 	static ACTION* ptActMenuWin = NULL;
; 698  : 	int id;
; 699  : 	int i;
; 700  : 	static int x, y, w, h;
; 701  : 	int ret = 0;
; 702  : #ifdef _NEW_WGS_MSG				// WON ADD WGSçæ°è§çª
; 703  : 	char temp[256], out_msg[5][128];
; 704  : 	int j, count = 0, temp_size = 0;

  00014	33 db		 xor	 ebx, ebx
  00016	c7 85 70 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _ret$1$[ebp], 0
  00020	56		 push	 esi
  00021	33 f6		 xor	 esi, esi
  00023	57		 push	 edi

; 705  : #endif
; 706  : 	if (commonMsgWinProcNo == 0) {

  00024	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00027	8b 7d 08	 mov	 edi, DWORD PTR _msg$[ebp]
  0002a	66 39 1d 00 00
	00 00		 cmp	 WORD PTR ?commonMsgWinProcNo@@3FA, bx
  00031	0f 85 54 01 00
	00		 jne	 $LN62@commonMsgW

; 707  : 		commonMsgWinProcNo = 1;
; 708  : 		for (i = 0; i < sizeof(fontId) / sizeof(int); i++) {
; 709  : 			fontId[i] = -2;
; 710  : 		}
; 711  : 
; 712  : #ifdef _NEW_WGS_MSG
; 713  : 		memset(temp, 0, sizeof(temp));

  00037	68 00 01 00 00	 push	 256			; 00000100H
  0003c	66 a3 00 00 00
	00		 mov	 WORD PTR ?commonMsgWinProcNo@@3FA, ax
  00042	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  00048	56		 push	 esi
  00049	50		 push	 eax
  0004a	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?fontId@?1??commonMsgWin@@YAHPAD@Z@4PAHA, -2 ; fffffffeH
  00054	e8 00 00 00 00	 call	 _memset
  00059	8d 95 fc fe ff
	ff		 lea	 edx, DWORD PTR _temp$[ebp]
  0005f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 714  : 		strcpy(temp, msg);

  00062	8b cf		 mov	 ecx, edi
  00064	2b d7		 sub	 edx, edi
$LL30@commonMsgW:
  00066	8a 01		 mov	 al, BYTE PTR [ecx]
  00068	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0006b	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  0006f	84 c0		 test	 al, al
  00071	75 f3		 jne	 SHORT $LL30@commonMsgW

; 715  : 		i = 0; j = 0;
; 716  : 		while (temp[count] != '\0') {

  00073	8a 8d fc fe ff
	ff		 mov	 cl, BYTE PTR _temp$[ebp]
  00079	33 d2		 xor	 edx, edx
  0007b	33 c0		 xor	 eax, eax
  0007d	84 c9		 test	 cl, cl
  0007f	74 6b		 je	 SHORT $LN58@commonMsgW
$LL5@commonMsgW:

; 717  : 			j++;

  00081	40		 inc	 eax

; 718  : 			if (temp[count] == '\n') {

  00082	80 f9 0a	 cmp	 cl, 10			; 0000000aH
  00085	75 0a		 jne	 SHORT $LN16@commonMsgW

; 719  : 				if (j > temp_size)		temp_size = j;
; 720  : 				i++;	j = 0;

  00087	3b c6		 cmp	 eax, esi
  00089	0f 4e c6	 cmovle	 eax, esi
  0008c	42		 inc	 edx
  0008d	8b f0		 mov	 esi, eax
  0008f	33 c0		 xor	 eax, eax
$LN16@commonMsgW:

; 721  : 			}
; 722  : 			count++;

  00091	8a 8c 1d fd fe
	ff ff		 mov	 cl, BYTE PTR _temp$[ebp+ebx+1]
  00098	43		 inc	 ebx
  00099	84 c9		 test	 cl, cl
  0009b	75 e4		 jne	 SHORT $LL5@commonMsgW
  0009d	89 9d 74 fc ff
	ff		 mov	 DWORD PTR tv608[ebp], ebx

; 723  : 		}
; 724  : 
; 725  : 		if (temp_size == 0) {

  000a3	85 f6		 test	 esi, esi
  000a5	74 45		 je	 SHORT $LN58@commonMsgW

; 728  : 		}
; 729  : 
; 730  : 		h = ((36 + 32) / 48) * (i + 2);

  000a7	8d 4a 02	 lea	 ecx, DWORD PTR [edx+2]

; 731  : 		w = temp_size * 8 / 64 + 2;

  000aa	8d 04 f5 00 00
	00 00		 lea	 eax, DWORD PTR [esi*8]
  000b1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?h@?1??commonMsgWin@@YAHPAD@Z@4HA, ecx
  000b7	99		 cdq
  000b8	83 e2 3f	 and	 edx, 63			; 0000003fH
  000bb	89 8d 78 fc ff
	ff		 mov	 DWORD PTR $T1[ebp], ecx
  000c1	03 d0		 add	 edx, eax
  000c3	8b c3		 mov	 eax, ebx
  000c5	c1 fa 06	 sar	 edx, 6
  000c8	83 c2 02	 add	 edx, 2
  000cb	89 15 00 00 00
	00		 mov	 DWORD PTR ?w@?1??commonMsgWin@@YAHPAD@Z@4HA, edx
  000d1	83 f9 02	 cmp	 ecx, 2

; 732  : #else
; 733  : 
; 734  : 		w = strlen(msg) * 8 / 64 + 2;
; 735  : 		h = (36 + 32) / 48;
; 736  : #endif
; 737  : 
; 738  : 		if (h < 2)

  000d4	7d 55		 jge	 SHORT $LN19@commonMsgW

; 739  : 			h = 2;

  000d6	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??commonMsgWin@@YAHPAD@Z@4HA, 2
  000e0	c7 85 78 fc ff
	ff 02 00 00 00	 mov	 DWORD PTR $T1[ebp], 2
  000ea	eb 3f		 jmp	 SHORT $LN19@commonMsgW
$LN58@commonMsgW:

; 726  : 			temp_size = strlen(temp);

  000ec	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  000f2	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL60@commonMsgW:
  000f5	8a 01		 mov	 al, BYTE PTR [ecx]
  000f7	41		 inc	 ecx
  000f8	84 c0		 test	 al, al
  000fa	75 f9		 jne	 SHORT $LL60@commonMsgW
  000fc	2b ca		 sub	 ecx, edx

; 727  : 			i = 1;

  000fe	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?h@?1??commonMsgWin@@YAHPAD@Z@4HA, 3
  00108	c7 85 78 fc ff
	ff 03 00 00 00	 mov	 DWORD PTR $T1[ebp], 3
  00112	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00119	99		 cdq
  0011a	83 e2 3f	 and	 edx, 63			; 0000003fH
  0011d	03 d0		 add	 edx, eax
  0011f	c1 fa 06	 sar	 edx, 6
  00122	83 c2 02	 add	 edx, 2
  00125	89 15 00 00 00
	00		 mov	 DWORD PTR ?w@?1??commonMsgWin@@YAHPAD@Z@4HA, edx
$LN19@commonMsgW:

; 740  : 		x = (640 - w * 64) / 2;

  0012b	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00130	8b c1		 mov	 eax, ecx

; 741  : 		y = (480 - h * 48) / 2;

  00132	2b 8d 78 fc ff
	ff		 sub	 ecx, DWORD PTR $T1[ebp]
  00138	2b c2		 sub	 eax, edx
  0013a	c1 e0 06	 shl	 eax, 6
  0013d	99		 cdq
  0013e	2b c2		 sub	 eax, edx
  00140	8b f0		 mov	 esi, eax
  00142	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]

; 742  : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  00145	6a 01		 push	 1
  00147	c1 e0 04	 shl	 eax, 4
  0014a	6a 00		 push	 0
  0014c	ff 35 00 00 00
	00		 push	 DWORD PTR ?h@?1??commonMsgWin@@YAHPAD@Z@4HA
  00152	99		 cdq
  00153	ff 35 00 00 00
	00		 push	 DWORD PTR ?w@?1??commonMsgWin@@YAHPAD@Z@4HA
  00159	2b c2		 sub	 eax, edx
  0015b	d1 fe		 sar	 esi, 1
  0015d	d1 f8		 sar	 eax, 1
  0015f	50		 push	 eax
  00160	56		 push	 esi
  00161	89 35 00 00 00
	00		 mov	 DWORD PTR ?x@?1??commonMsgWin@@YAHPAD@Z@4HA, esi
  00167	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??commonMsgWin@@YAHPAD@Z@4HA, eax
  0016c	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00171	83 c4 18	 add	 esp, 24			; 00000018H
  00174	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A, eax

; 743  : 
; 744  : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 745  : 		x = ptActMenuWin->x;

  00179	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  0017c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??commonMsgWin@@YAHPAD@Z@4HA, ecx

; 746  : 		y = ptActMenuWin->y;

  00182	8b 48 1c	 mov	 ecx, DWORD PTR [eax+28]
  00185	89 0d 00 00 00
	00		 mov	 DWORD PTR ?y@?1??commonMsgWin@@YAHPAD@Z@4HA, ecx
$LN62@commonMsgW:

; 747  : #endif
; 748  : 	}
; 749  : 
; 750  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 751  : 	extern int èªå¨ç»éæ¯å¦å¼å¯;
; 752  : 	int è¿å¥ = FALSE;

  0018b	33 f6		 xor	 esi, esi

; 753  : 	if (èªå¨ç»éæ¯å¦å¼å¯) {

  0018d	39 35 00 00 00
	00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, esi ; í»?Ôô?ãÀÜú??
  00193	74 13		 je	 SHORT $LN21@commonMsgW

; 754  : 		if (TimeGetTime() > PcLanded.ç»éå»¶æ¶æ¶é´) {

  00195	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0019a	3b 05 9c 00 00
	00		 cmp	 eax, DWORD PTR ?PcLanded@@3ULanded@@A+156
  001a0	b8 01 00 00 00	 mov	 eax, 1
  001a5	0f 47 f0	 cmova	 esi, eax
$LN21@commonMsgW:

; 755  : 			è¿å¥ = TRUE;
; 756  : 		}
; 757  : 	}
; 758  : 	id = selFontId(fontId, sizeof(fontId) / sizeof(int));

  001a8	6a 01		 push	 1
  001aa	68 00 00 00 00	 push	 OFFSET ?fontId@?1??commonMsgWin@@YAHPAD@Z@4PAHA
  001af	e8 00 00 00 00	 call	 ?selFontId@@YAHPAHH@Z	; selFontId
  001b4	83 c4 08	 add	 esp, 8

; 759  : #else
; 760  : 	int JL_èªå¨ç»éè´¦å·å¯ç ç¹OK();
; 761  : 	id = JL_èªå¨ç»éè´¦å·å¯ç ç¹OK();
; 762  : 	if (id == -1) {
; 763  : 		id = selFontId(fontId, sizeof(fontId) / sizeof(int));
; 764  : 	}
; 765  : #endif
; 766  : 
; 767  : 	// ï¼¯ï¼«
; 768  : 	if (id == 0
; 769  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 770  : 		|| è¿å¥

  001b7	85 c0		 test	 eax, eax
  001b9	0f 84 90 01 00
	00		 je	 $LN23@commonMsgW
  001bf	85 f6		 test	 esi, esi
  001c1	0f 85 88 01 00
	00		 jne	 $LN23@commonMsgW

; 779  : 			ptActMenuWin = NULL;
; 780  : 			return ret;
; 781  : 		}
; 782  : 	}
; 783  : 
; 784  : 	if (ptActMenuWin != NULL) {

  001c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A
  001cc	85 c0		 test	 eax, eax
  001ce	0f 84 64 01 00
	00		 je	 $LN27@commonMsgW

; 785  : 		if (ptActMenuWin->hp >= 1) {

  001d4	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  001d8	0f 8c 5a 01 00
	00		 jl	 $LN27@commonMsgW

; 786  : 			int len;
; 787  : 			int xx;
; 788  : #ifdef _NEW_WGS_MSG				// WON ADD WGSçæ°è§çª
; 789  : 			memset(temp, 0, sizeof(temp));

  001de	68 00 01 00 00	 push	 256			; 00000100H
  001e3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _temp$[ebp]
  001e9	56		 push	 esi
  001ea	50		 push	 eax
  001eb	e8 00 00 00 00	 call	 _memset
  001f0	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _temp$[ebp]
  001f6	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f9	2b cf		 sub	 ecx, edi
  001fb	0f 1f 44 00 00	 npad	 5
$LL31@commonMsgW:

; 790  : 			strcpy(temp, msg);

  00200	8a 07		 mov	 al, BYTE PTR [edi]
  00202	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00205	88 44 39 ff	 mov	 BYTE PTR [ecx+edi-1], al
  00209	84 c0		 test	 al, al
  0020b	75 f3		 jne	 SHORT $LL31@commonMsgW

; 791  : 			for (i = 0; i < 5; i++)

  0020d	68 80 02 00 00	 push	 640			; 00000280H
  00212	8d 85 7c fc ff
	ff		 lea	 eax, DWORD PTR _out_msg$[ebp]
  00218	6a 00		 push	 0
  0021a	50		 push	 eax
  0021b	e8 00 00 00 00	 call	 _memset

; 795  : 			while (temp[count] != '\0') {

  00220	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _temp$[ebp]
  00226	33 c0		 xor	 eax, eax
  00228	03 fb		 add	 edi, ebx
  0022a	89 85 78 fc ff
	ff		 mov	 DWORD PTR _i$2$[ebp], eax
  00230	83 c4 0c	 add	 esp, 12			; 0000000cH
  00233	33 c9		 xor	 ecx, ecx
  00235	8a 17		 mov	 dl, BYTE PTR [edi]
  00237	84 d2		 test	 dl, dl
  00239	74 42		 je	 SHORT $LN11@commonMsgW

; 792  : 				memset(out_msg[i], 0, sizeof(out_msg[i]));
; 793  : 
; 794  : 			i = 0; j = 0;

  0023b	33 f6		 xor	 esi, esi
  0023d	0f 1f 00	 npad	 3
$LL10@commonMsgW:

; 796  : 				out_msg[i][j] = temp[count];	j++;

  00240	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]
  00243	41		 inc	 ecx
  00244	88 94 05 7c fc
	ff ff		 mov	 BYTE PTR _out_msg$[ebp+eax], dl

; 797  : 				if (temp[count] == '\n') {

  0024b	80 fa 0a	 cmp	 dl, 10			; 0000000aH
  0024e	75 1f		 jne	 SHORT $LN67@commonMsgW

; 798  : 					out_msg[i][j - 1] = '\0';

  00250	8d 04 0e	 lea	 eax, DWORD PTR [esi+ecx]

; 799  : 					i++;	j = 0;

  00253	83 ee 80	 sub	 esi, -128		; ffffff80H
  00256	c6 84 05 7b fc
	ff ff 00	 mov	 BYTE PTR _out_msg$[ebp+eax-1], 0
  0025e	8b 85 78 fc ff
	ff		 mov	 eax, DWORD PTR _i$2$[ebp]
  00264	40		 inc	 eax
  00265	33 c9		 xor	 ecx, ecx
  00267	89 85 78 fc ff
	ff		 mov	 DWORD PTR _i$2$[ebp], eax
  0026d	eb 06		 jmp	 SHORT $LN28@commonMsgW
$LN67@commonMsgW:

; 797  : 				if (temp[count] == '\n') {

  0026f	8b 85 78 fc ff
	ff		 mov	 eax, DWORD PTR _i$2$[ebp]
$LN28@commonMsgW:

; 795  : 			while (temp[count] != '\0') {

  00275	8a 57 01	 mov	 dl, BYTE PTR [edi+1]

; 800  : 				}
; 801  : 				count++;

  00278	47		 inc	 edi
  00279	84 d2		 test	 dl, dl
  0027b	75 c3		 jne	 SHORT $LL10@commonMsgW
$LN11@commonMsgW:

; 802  : 			}
; 803  : 			for (j = 0; j <= i; j++) {

  0027d	33 db		 xor	 ebx, ebx
  0027f	85 c0		 test	 eax, eax
  00281	78 70		 js	 SHORT $LN66@commonMsgW
  00283	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]
  00286	33 ff		 xor	 edi, edi
  00288	8d b5 7c fc ff
	ff		 lea	 esi, DWORD PTR _out_msg$[ebp]
  0028e	89 9d 74 fc ff
	ff		 mov	 DWORD PTR _j$3$[ebp], ebx
$LL14@commonMsgW:

; 804  : 				len = strlen(out_msg[j]) + 1;

  00294	8b c6		 mov	 eax, esi
  00296	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  00299	0f 1f 80 00 00
	00 00		 npad	 7
$LL61@commonMsgW:
  002a0	8a 08		 mov	 cl, BYTE PTR [eax]
  002a2	40		 inc	 eax
  002a3	84 c9		 test	 cl, cl
  002a5	75 f9		 jne	 SHORT $LL61@commonMsgW

; 805  : 				xx = (w * 64 - len * 8) / 2;
; 806  : 				StockFontBuffer(x + xx, y + (j * 30) + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE, out_msg[j], 0);

  002a7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?y@?1??commonMsgWin@@YAHPAD@Z@4HA
  002ad	2b c2		 sub	 eax, edx
  002af	6a 00		 push	 0
  002b1	56		 push	 esi
  002b2	83 c1 1e	 add	 ecx, 30			; 0000001eH
  002b5	6a 00		 push	 0
  002b7	03 cf		 add	 ecx, edi
  002b9	6a 01		 push	 1
  002bb	51		 push	 ecx
  002bc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?w@?1??commonMsgWin@@YAHPAD@Z@4HA
  002c2	c1 e1 03	 shl	 ecx, 3
  002c5	2b c8		 sub	 ecx, eax
  002c7	8d 04 cd f8 ff
	ff ff		 lea	 eax, DWORD PTR [ecx*8-8]
  002ce	99		 cdq
  002cf	2b c2		 sub	 eax, edx
  002d1	d1 f8		 sar	 eax, 1
  002d3	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?x@?1??commonMsgWin@@YAHPAD@Z@4HA
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002df	83 c4 18	 add	 esp, 24			; 00000018H
  002e2	83 ee 80	 sub	 esi, -128		; ffffff80H
  002e5	83 c7 1e	 add	 edi, 30			; 0000001eH
  002e8	83 eb 01	 sub	 ebx, 1
  002eb	75 a7		 jne	 SHORT $LL14@commonMsgW
  002ed	8b 9d 74 fc ff
	ff		 mov	 ebx, DWORD PTR _j$3$[ebp]
$LN66@commonMsgW:

; 807  : 			}
; 808  : #else
; 809  : 			len = strlen(msg) + 1;
; 810  : 			xx = (w * 64 - len * 8) / 2;
; 811  : 			StockFontBuffer(x + xx, y + 30, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);
; 812  : #endif
; 813  : 
; 814  : 			xx = (w * 64 - strlen("ï¼¯ï¼«") * 8) / 2;

  002f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??commonMsgWin@@YAHPAD@Z@4HA

; 815  : #ifdef _NEW_WGS_MSG				// WON ADD WGSçæ°è§çª?
; 816  : 			fontId[0] = StockFontBuffer(x + xx, y + (j * 30) + 56, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ï¼¯ï¼«", 2);

  002f8	8b cb		 mov	 ecx, ebx
  002fa	c1 e0 06	 shl	 eax, 6
  002fd	83 e8 20	 sub	 eax, 32			; 00000020H
  00300	c1 e1 04	 shl	 ecx, 4
  00303	99		 cdq
  00304	2b cb		 sub	 ecx, ebx
  00306	2b c2		 sub	 eax, edx
  00308	8b d0		 mov	 edx, eax
  0030a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??commonMsgWin@@YAHPAD@Z@4HA
  0030f	6a 02		 push	 2
  00311	68 00 00 00 00	 push	 OFFSET ??_C@_04NDEEPOEI@?$KD?O?$KD?K@
  00316	6a 04		 push	 4
  00318	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]
  0031b	d1 fa		 sar	 edx, 1
  0031d	83 c0 38	 add	 eax, 56			; 00000038H
  00320	6a 01		 push	 1
  00322	50		 push	 eax
  00323	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??commonMsgWin@@YAHPAD@Z@4HA
  00328	03 c2		 add	 eax, edx
  0032a	50		 push	 eax
  0032b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00330	83 c4 18	 add	 esp, 24			; 00000018H
  00333	a3 00 00 00 00	 mov	 DWORD PTR ?fontId@?1??commonMsgWin@@YAHPAD@Z@4PAHA, eax
$LN27@commonMsgW:

; 817  : #else
; 818  : 			fontId[0] = StockFontBuffer(x + xx, y + 56, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ï¼¯ï¼«", 2);
; 819  : #endif
; 820  : 		}
; 821  : 	}
; 822  : 	return ret;

  00338	8b 85 70 fc ff
	ff		 mov	 eax, DWORD PTR _ret$1$[ebp]
  0033e	5f		 pop	 edi

; 823  : }

  0033f	5e		 pop	 esi
  00340	5b		 pop	 ebx
  00341	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00344	33 cd		 xor	 ecx, ebp
  00346	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034b	8b e5		 mov	 esp, ebp
  0034d	5d		 pop	 ebp
  0034e	c3		 ret	 0
$LN23@commonMsgW:

; 771  : #endif
; 772  : 		) {
; 773  : 		ret = 1;
; 774  : 		play_se(217, 320, 240);

  0034f	68 f0 00 00 00	 push	 240			; 000000f0H
  00354	68 40 01 00 00	 push	 320			; 00000140H
  00359	68 d9 00 00 00	 push	 217			; 000000d9H
  0035e	c7 85 70 fc ff
	ff 01 00 00 00	 mov	 DWORD PTR _ret$1$[ebp], 1
  00368	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 775  : 	}
; 776  : 	if (ret != 0) {
; 777  : 		if (ptActMenuWin) {

  0036d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A
  00373	83 c4 0c	 add	 esp, 12			; 0000000cH
  00376	85 c9		 test	 ecx, ecx
  00378	74 be		 je	 SHORT $LN27@commonMsgW

; 778  : 			DeathAction(ptActMenuWin);

  0037a	51		 push	 ecx
  0037b	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 823  : }

  00380	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00383	83 c4 04	 add	 esp, 4
  00386	33 cd		 xor	 ecx, ebp
  00388	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??commonMsgWin@@YAHPAD@Z@4PAUaction@@A, 0
  00392	b8 01 00 00 00	 mov	 eax, 1
  00397	5f		 pop	 edi
  00398	5e		 pop	 esi
  00399	5b		 pop	 ebx
  0039a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0039f	8b e5		 mov	 esp, ebp
  003a1	5d		 pop	 ebp
  003a2	c3		 ret	 0
?commonMsgWin@@YAHPAD@Z ENDP				; commonMsgWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initCommonMsgWin@@YAXXZ
_TEXT	SEGMENT
?initCommonMsgWin@@YAXXZ PROC				; initCommonMsgWin, COMDAT

; 691  : 	commonMsgWinProcNo = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?commonMsgWinProcNo@@3FA, ax

; 692  : }

  00008	c3		 ret	 0
?initCommonMsgWin@@YAXXZ ENDP				; initCommonMsgWin
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?inputIdPassword@@YAHH@Z
_TEXT	SEGMENT
tv324 = -8						; size = 4
tv322 = -8						; size = 4
_ret$1$ = -4						; size = 4
_flag$ = 8						; size = 4
?inputIdPassword@@YAHH@Z PROC				; inputIdPassword, COMDAT

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 529  : 	int id;
; 530  : 	int selOkFlag;
; 531  : 	static BOOL flag2 = FALSE;
; 532  : 	static int oldId = 0;
; 533  : 	int ret = 0;
; 534  : 	int x1, y1, x2, y2, cx, cy;
; 535  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 536  : 	extern int èªå¨ç»éæ¯å¦å¼å¯;
; 537  : 	id = selGraId(idPasswordGraId, sizeof(idPasswordGraId) / sizeof(int));

  00006	6a 02		 push	 2
  00008	68 00 00 00 00	 push	 OFFSET ?idPasswordGraId@@3PAHA
  0000d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 0
  00014	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00019	83 c4 08	 add	 esp, 8

; 538  : #else
; 539  : 	int JL_èªå¨ç»éè´¦å·å¯ç ç¹OK();
; 540  : 
; 541  : 	id = JL_èªå¨ç»éè´¦å·å¯ç ç¹OK();
; 542  : 	if (id == -1) {
; 543  : 		id = selGraId(idPasswordGraId, sizeof(idPasswordGraId) / sizeof(int));
; 544  : 	}
; 545  : #endif
; 546  : 	//JL add å¦ææ²¡æè¾å¥è´¦å·å¯ç ï¼åä¸èªå¨ç»é
; 547  : 	if (id == 0) {

  0001c	85 c0		 test	 eax, eax
  0001e	75 30		 jne	 SHORT $LN45@inputIdPas

; 548  : 		if (!(strlen(idKey.buffer) > 0 && strlen(passwd.buffer) > 0)) {

  00020	b9 00 00 00 00	 mov	 ecx, OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  00025	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL46@inputIdPas:
  00028	8a 01		 mov	 al, BYTE PTR [ecx]
  0002a	41		 inc	 ecx
  0002b	84 c0		 test	 al, al
  0002d	75 f9		 jne	 SHORT $LL46@inputIdPas
  0002f	2b ca		 sub	 ecx, edx
  00031	74 18		 je	 SHORT $LN4@inputIdPas
  00033	b9 00 00 00 00	 mov	 ecx, OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  00038	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0003b	0f 1f 44 00 00	 npad	 5
$LL47@inputIdPas:
  00040	8a 01		 mov	 al, BYTE PTR [ecx]
  00042	41		 inc	 ecx
  00043	84 c0		 test	 al, al
  00045	75 f9		 jne	 SHORT $LL47@inputIdPas
  00047	2b ca		 sub	 ecx, edx
  00049	75 1c		 jne	 SHORT $LN7@inputIdPas
$LN4@inputIdPas:

; 549  : 			id = -1;

  0004b	b8 ff ff ff ff	 mov	 eax, -1
$LN45@inputIdPas:

; 550  : 		}
; 551  : 	}
; 552  : 	if (id == 0
; 553  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 554  : 		|| èªå¨ç»éæ¯å¦å¼å¯

  00050	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA, 0 ; í»?Ôô?ãÀÜú??
  00057	75 0e		 jne	 SHORT $LN7@inputIdPas

; 564  : 		}
; 565  : 	}
; 566  : 	else if (id == 1) {

  00059	83 f8 01	 cmp	 eax, 1
  0005c	75 49		 jne	 SHORT $LN9@inputIdPas

; 567  : 		ret = 2;

  0005e	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 2
  00065	eb 40		 jmp	 SHORT $LN9@inputIdPas
$LN7@inputIdPas:

; 555  : #endif
; 556  : 		) {
; 557  : 		if (strlen(idKey.buffer) > 0) {

  00067	b9 00 00 00 00	 mov	 ecx, OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  0006c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0006f	90		 npad	 1
$LL48@inputIdPas:
  00070	8a 01		 mov	 al, BYTE PTR [ecx]
  00072	41		 inc	 ecx
  00073	84 c0		 test	 al, al
  00075	75 f9		 jne	 SHORT $LL48@inputIdPas
  00077	2b ca		 sub	 ecx, edx
  00079	74 25		 je	 SHORT $LN8@inputIdPas

; 558  : 			idKey.buffer[idKey.cnt] = '\0';

  0007b	0f b6 05 07 01
	00 00		 movzx	 eax, BYTE PTR ?idKey@@3USTR_BUFFER@@A+263

; 559  : 			passwd.buffer[passwd.cnt] = '\0';
; 560  : 			ret = 1;

  00082	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR _ret$1$[ebp], 1
  00089	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?idKey@@3USTR_BUFFER@@A[eax], 0
  00090	0f b6 05 07 01
	00 00		 movzx	 eax, BYTE PTR ?passwd@@3USTR_BUFFER@@A+263
  00097	c6 80 00 00 00
	00 00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A[eax], 0

; 561  : 		}

  0009e	eb 07		 jmp	 SHORT $LN9@inputIdPas
$LN8@inputIdPas:

; 562  : 		else {
; 563  : 			ret = -1;

  000a0	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR _ret$1$[ebp], -1
$LN9@inputIdPas:
  000a7	53		 push	 ebx
  000a8	56		 push	 esi
  000a9	57		 push	 edi

; 568  : 	}
; 569  : 	if (flag) {
; 570  : 		selOkFlag = 2;
; 571  : 	}
; 572  : 	else {
; 573  : 		selOkFlag = 0;
; 574  : 	}
; 575  : 
; 576  : 	StockFontBuffer2(&idKey);

  000aa	68 00 00 00 00	 push	 OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  000af	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 577  : 	StockFontBuffer2(&passwd);

  000b4	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  000b9	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2

; 578  : 	id = -1;
; 579  : 	if (selOkFlag) {

  000be	8b 5d 08	 mov	 ebx, DWORD PTR _flag$[ebp]
  000c1	83 c4 08	 add	 esp, 8
  000c4	83 ce ff	 or	 esi, -1
  000c7	85 db		 test	 ebx, ebx
  000c9	74 5e		 je	 SHORT $LN15@inputIdPas

; 580  : 		x1 = idKeyBoxX - 4 - 2;
; 581  : 		y1 = idKeyBoxY - 2 - 1;

  000cb	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?idKeyBoxY@@3FA
  000d2	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?idKeyBoxX@@3FA
  000d9	83 e9 03	 sub	 ecx, 3
  000dc	83 ea 06	 sub	 edx, 6

; 582  : 		x2 = x1 + 92 + 4;
; 583  : 		y2 = y1 + 20 + 2;
; 584  : 		if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX)) {

  000df	6a 65		 push	 101			; 00000065H
  000e1	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  000e4	50		 push	 eax
  000e5	8d 42 60	 lea	 eax, DWORD PTR [edx+96]
  000e8	50		 push	 eax
  000e9	51		 push	 ecx
  000ea	52		 push	 edx
  000eb	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox

; 585  : 			id = 0;
; 586  : 		}
; 587  : 		x1 = passwdBoxX - 4 - 2;

  000f0	0f bf 15 00 00
	00 00		 movsx	 edx, WORD PTR ?passwdBoxX@@3FA
  000f7	33 c9		 xor	 ecx, ecx
  000f9	85 c0		 test	 eax, eax

; 588  : 		y1 = passwdBoxY - 2 - 1;
; 589  : 
; 590  : 
; 591  : 		x2 = x1 + 92 + 4;
; 592  : 		y2 = y1 + 20 + 2;
; 593  : 		if (MakeHitBox(x1, y1, x2, y2, DISP_PRIO_BOX)) {

  000fb	6a 65		 push	 101			; 00000065H
  000fd	0f 45 f1	 cmovne	 esi, ecx
  00100	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?passwdBoxY@@3FA
  00107	83 e9 03	 sub	 ecx, 3
  0010a	83 ea 06	 sub	 edx, 6
  0010d	8d 41 16	 lea	 eax, DWORD PTR [ecx+22]
  00110	50		 push	 eax
  00111	8d 42 60	 lea	 eax, DWORD PTR [edx+96]
  00114	50		 push	 eax
  00115	51		 push	 ecx
  00116	52		 push	 edx
  00117	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0011c	83 c4 28	 add	 esp, 40			; 00000028H
  0011f	b9 01 00 00 00	 mov	 ecx, 1
  00124	85 c0		 test	 eax, eax
  00126	0f 45 f1	 cmovne	 esi, ecx
$LN15@inputIdPas:

; 594  : 			id = 1;
; 595  : 		}
; 596  : 	}
; 597  : 	if (idKeyReturn) {

  00129	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?idKeyReturn@@3FA, 0 ; idKeyReturn
  00131	74 0d		 je	 SHORT $LN16@inputIdPas

; 598  : 		id = 1;
; 599  : 		idKeyReturn = 0;

  00133	33 c0		 xor	 eax, eax
  00135	be 01 00 00 00	 mov	 esi, 1
  0013a	66 a3 00 00 00
	00		 mov	 WORD PTR ?idKeyReturn@@3FA, ax ; idKeyReturn
$LN16@inputIdPas:

; 600  : 	}
; 601  : 
; 602  : 	if (joy_trg[1] & JOY_TAB) {

  00140	f7 05 04 00 00
	00 00 00 00 02	 test	 DWORD PTR ?joy_trg@@3PAKA+4, 33554432 ; 02000000H
  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?oldId@?1??inputIdPassword@@YAHH@Z@4HA
  0014f	74 11		 je	 SHORT $LN20@inputIdPas

; 603  : 		if (oldId == 0) {

  00151	85 c0		 test	 eax, eax
  00153	75 05		 jne	 SHORT $LN18@inputIdPas

; 604  : 			id = 1;

  00155	8d 70 01	 lea	 esi, DWORD PTR [eax+1]

; 605  : 		}

  00158	eb 08		 jmp	 SHORT $LN20@inputIdPas
$LN18@inputIdPas:

; 606  : 		else if (oldId == 1) {

  0015a	33 c9		 xor	 ecx, ecx
  0015c	83 f8 01	 cmp	 eax, 1
  0015f	0f 44 f1	 cmove	 esi, ecx
$LN20@inputIdPas:

; 607  : 			id = 0;
; 608  : 		}
; 609  : 	}
; 610  : 
; 611  : 	if (!flag) {

  00162	85 db		 test	 ebx, ebx
  00164	75 12		 jne	 SHORT $LN21@inputIdPas

; 612  : 		GetKeyInputFocus(NULL);

  00166	53		 push	 ebx
  00167	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 613  : 		flag2 = TRUE;

  0016c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?flag2@?1??inputIdPassword@@YAHH@Z@4HA, 1

; 614  : 	}

  00176	eb 3b		 jmp	 SHORT $LN49@inputIdPas
$LN21@inputIdPas:

; 615  : 	else if ((0 <= id && id <= 1) || flag2) {

  00178	85 f6		 test	 esi, esi
  0017a	78 10		 js	 SHORT $LN25@inputIdPas
  0017c	83 fe 01	 cmp	 esi, 1
  0017f	7f 0b		 jg	 SHORT $LN25@inputIdPas

; 616  : 		if (flag2)

  00181	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?flag2@?1??inputIdPassword@@YAHH@Z@4HA, 0
  00188	74 0d		 je	 SHORT $LN26@inputIdPas
  0018a	eb 09		 jmp	 SHORT $LN44@inputIdPas
$LN25@inputIdPas:

; 615  : 	else if ((0 <= id && id <= 1) || flag2) {

  0018c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?flag2@?1??inputIdPassword@@YAHH@Z@4HA, 0
  00193	74 21		 je	 SHORT $LN23@inputIdPas
$LN44@inputIdPas:

; 617  : 			id = oldId;

  00195	8b f0		 mov	 esi, eax
$LN26@inputIdPas:

; 618  : 		GetKeyInputFocus(idPasswordFocus[id]);

  00197	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?idPasswordFocus@@3PAPAUSTR_BUFFER@@A[esi*4]
  0019e	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 619  : 		flag2 = FALSE;

  001a3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?flag2@?1??inputIdPassword@@YAHH@Z@4HA, 0

; 620  : 		oldId = id;

  001ad	89 35 00 00 00
	00		 mov	 DWORD PTR ?oldId@?1??inputIdPassword@@YAHH@Z@4HA, esi
$LN49@inputIdPas:

; 621  : 	}
; 622  : 
; 623  : 	//íì¸ë²í¼ìì¹ê³ì°
; 624  : 	if (ResoMode == åè¾¨ç::mode800) {

  001b3	83 c4 04	 add	 esp, 4
$LN23@inputIdPas:
  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  001bb	83 f8 03	 cmp	 eax, 3
  001be	75 0a		 jne	 SHORT $LN27@inputIdPas

; 625  : 		cx = 400;

  001c0	be 90 01 00 00	 mov	 esi, 400		; 00000190H

; 626  : 		cy = 450;

  001c5	8d 7e 32	 lea	 edi, DWORD PTR [esi+50]

; 627  : 	}

  001c8	eb 1b		 jmp	 SHORT $LN30@inputIdPas
$LN27@inputIdPas:

; 628  : 	else if (ResoMode == åè¾¨ç::mode1024) {

  001ca	83 f8 04	 cmp	 eax, 4
  001cd	75 0c		 jne	 SHORT $LN29@inputIdPas

; 629  : 		cx = 830;

  001cf	be 3e 03 00 00	 mov	 esi, 830		; 0000033eH

; 630  : 		cy = 444;

  001d4	bf bc 01 00 00	 mov	 edi, 444		; 000001bcH

; 631  : 	}

  001d9	eb 0a		 jmp	 SHORT $LN30@inputIdPas
$LN29@inputIdPas:

; 632  : 	else {
; 633  : 		cx = 436;

  001db	be b4 01 00 00	 mov	 esi, 436		; 000001b4H

; 634  : 		cy = 339;

  001e0	bf 53 01 00 00	 mov	 edi, 339		; 00000153H
$LN30@inputIdPas:

; 635  : 	}
; 636  : 
; 637  : 	x1 = cx - 40;
; 638  : 	y1 = cy - 26;
; 639  : 	x2 = cx + 40;
; 640  : 	y2 = cy + 26;
; 641  : 	if (MakeHitBox(x1, y1, x2, y2, -1) && selOkFlag)

  001e5	6a ff		 push	 -1
  001e7	8d 47 1a	 lea	 eax, DWORD PTR [edi+26]
  001ea	50		 push	 eax
  001eb	8d 46 28	 lea	 eax, DWORD PTR [esi+40]
  001ee	50		 push	 eax
  001ef	8d 47 e6	 lea	 eax, DWORD PTR [edi-26]
  001f2	50		 push	 eax
  001f3	8d 46 d8	 lea	 eax, DWORD PTR [esi-40]
  001f6	50		 push	 eax
  001f7	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001fc	83 c4 14	 add	 esp, 20			; 00000014H
  001ff	85 c0		 test	 eax, eax
  00201	74 1e		 je	 SHORT $LN31@inputIdPas
  00203	85 db		 test	 ebx, ebx
  00205	74 1a		 je	 SHORT $LN31@inputIdPas

; 642  : 		idPasswordGraId[0] = StockDispBuffer(cx, cy, DISP_PRIO_BG, IMAGE_Login_Ok, 1);

  00207	6a 01		 push	 1
  00209	68 42 9c 00 00	 push	 40002			; 00009c42H
  0020e	6a 00		 push	 0
  00210	57		 push	 edi
  00211	56		 push	 esi
  00212	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00217	83 c4 14	 add	 esp, 20			; 00000014H
  0021a	a3 00 00 00 00	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA, eax
  0021f	eb 0a		 jmp	 SHORT $LN32@inputIdPas
$LN31@inputIdPas:

; 643  : 	else
; 644  : 		idPasswordGraId[0] = -2;

  00221	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA, -2 ; fffffffeH
$LN32@inputIdPas:

; 645  : 
; 646  : 	//ì¢ë£ìì¹ê³ì°
; 647  : 	if (ResoMode == åè¾¨ç::mode800) {

  0022b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00230	83 f8 03	 cmp	 eax, 3
  00233	75 0a		 jne	 SHORT $LN33@inputIdPas

; 648  : 		cx = 500;

  00235	be f4 01 00 00	 mov	 esi, 500		; 000001f4H

; 649  : 		cy = 450;

  0023a	8d 7e ce	 lea	 edi, DWORD PTR [esi-50]

; 650  : 	}

  0023d	eb 1b		 jmp	 SHORT $LN36@inputIdPas
$LN33@inputIdPas:

; 651  : 	else if (ResoMode == åè¾¨ç::mode1024) {

  0023f	83 f8 04	 cmp	 eax, 4
  00242	75 0c		 jne	 SHORT $LN35@inputIdPas

; 652  : 		cx = 948;

  00244	be b4 03 00 00	 mov	 esi, 948		; 000003b4H

; 653  : 		cy = 452;

  00249	bf c4 01 00 00	 mov	 edi, 452		; 000001c4H

; 654  : 	}

  0024e	eb 0a		 jmp	 SHORT $LN36@inputIdPas
$LN35@inputIdPas:

; 655  : 	else {
; 656  : 		cx = 554;

  00250	be 2a 02 00 00	 mov	 esi, 554		; 0000022aH

; 657  : 		cy = 347;

  00255	bf 5b 01 00 00	 mov	 edi, 347		; 0000015bH
$LN36@inputIdPas:

; 658  : 	}
; 659  : 	x1 = cx - 44;
; 660  : 	y1 = cy - 30;
; 661  : 	x2 = cx + 44;
; 662  : 	y2 = cy + 30;
; 663  : 	if (MakeHitBox(x1, y1, x2, y2, -1) && selOkFlag) {

  0025a	6a ff		 push	 -1
  0025c	8d 47 1e	 lea	 eax, DWORD PTR [edi+30]
  0025f	50		 push	 eax
  00260	8d 46 2c	 lea	 eax, DWORD PTR [esi+44]
  00263	50		 push	 eax
  00264	8d 47 e2	 lea	 eax, DWORD PTR [edi-30]
  00267	50		 push	 eax
  00268	8d 46 d4	 lea	 eax, DWORD PTR [esi-44]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00271	83 c4 14	 add	 esp, 20			; 00000014H
  00274	85 c0		 test	 eax, eax
  00276	74 1e		 je	 SHORT $LN37@inputIdPas
  00278	85 db		 test	 ebx, ebx
  0027a	74 1a		 je	 SHORT $LN37@inputIdPas

; 664  : 		idPasswordGraId[1] = StockDispBuffer(cx, cy, DISP_PRIO_BG, IMAGE_Login_Quit, 1);

  0027c	6a 01		 push	 1
  0027e	68 43 9c 00 00	 push	 40003			; 00009c43H
  00283	6a 00		 push	 0
  00285	57		 push	 edi
  00286	56		 push	 esi
  00287	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0028c	83 c4 14	 add	 esp, 20			; 00000014H
  0028f	a3 04 00 00 00	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA+4, eax

; 665  : 	}

  00294	eb 0a		 jmp	 SHORT $LN38@inputIdPas
$LN37@inputIdPas:

; 666  : 	//	idPasswordGraId[1] = StockDispBuffer(cx - 140, cy + 20, DISP_PRIO_BG, CG_TITLE_ID_PASS_QUIT, 1);
; 667  : 	else
; 668  : 		idPasswordGraId[1] = -2;

  00296	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA+4, -2 ; fffffffeH
$LN38@inputIdPas:

; 669  : #ifdef __SKYISLAND
; 670  : 	//ë¡ê·¸ì¸ë°°ê²½ì´ë¯¸ì§
; 671  : 	if (ResoMode == åè¾¨ç::mode800) {

  002a0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  002a5	5f		 pop	 edi
  002a6	5e		 pop	 esi
  002a7	5b		 pop	 ebx
  002a8	83 f8 03	 cmp	 eax, 3
  002ab	75 0f		 jne	 SHORT $LN39@inputIdPas

; 672  : 		//initInputIdPassword();
; 673  : 		StockDispBuffer(400, 300, DISP_PRIO_BG, IMAGE_800_600, 0);

  002ad	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  002b2	ba 29 a0 00 00	 mov	 edx, 41001		; 0000a029H
  002b7	8d 48 9c	 lea	 ecx, DWORD PTR [eax-100]

; 674  : 	}

  002ba	eb 21		 jmp	 SHORT $LN42@inputIdPas
$LN39@inputIdPas:

; 675  : 	else if (ResoMode == åè¾¨ç::mode1024) {

  002bc	83 f8 04	 cmp	 eax, 4
  002bf	75 0f		 jne	 SHORT $LN41@inputIdPas

; 676  : 		//initInputIdPassword();
; 677  : 		StockDispBuffer(512, 384, DISP_PRIO_BG, IMAGE_1024_768, 0);

  002c1	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  002c6	ba 11 a4 00 00	 mov	 edx, 42001		; 0000a411H
  002cb	8d 48 80	 lea	 ecx, DWORD PTR [eax-128]

; 678  : 	}

  002ce	eb 0d		 jmp	 SHORT $LN42@inputIdPas
$LN41@inputIdPas:

; 679  : 	else {
; 680  : 		//initInputIdPassword();
; 681  : 		StockDispBuffer(320, 240, DISP_PRIO_BG, IMAGE_640_480, 0);

  002d0	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  002d5	ba 41 9c 00 00	 mov	 edx, 40001		; 00009c41H
  002da	8d 48 b0	 lea	 ecx, DWORD PTR [eax-80]
$LN42@inputIdPas:

; 682  : 	}
; 683  : #endif
; 684  : 	return ret;

  002dd	6a 00		 push	 0
  002df	52		 push	 edx
  002e0	6a 00		 push	 0
  002e2	51		 push	 ecx
  002e3	50		 push	 eax
  002e4	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  002e9	8b 45 fc	 mov	 eax, DWORD PTR _ret$1$[ebp]
  002ec	83 c4 14	 add	 esp, 20			; 00000014H

; 685  : }

  002ef	8b e5		 mov	 esp, ebp
  002f1	5d		 pop	 ebp
  002f2	c3		 ret	 0
?inputIdPassword@@YAHH@Z ENDP				; inputIdPassword
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initInputIdPassword@@YAXXZ
_TEXT	SEGMENT
?initInputIdPassword@@YAXXZ PROC			; initInputIdPassword, COMDAT

; 474  : void initInputIdPassword(void) {

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 475  : 	int i;
; 476  : 	for (i = 0; i < sizeof(idPasswordGraId) / sizeof(int); i++) {
; 477  : 		idPasswordGraId[i] = -2;
; 478  : 	}
; 479  : 	//ê³ì ìììì¹
; 480  : 	if (ResoMode == åè¾¨ç::mode800) {

  00002	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00008	bb 48 03 00 00	 mov	 ebx, 840		; 00000348H
  0000d	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA, -2 ; fffffffeH
  00017	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?idPasswordGraId@@3PAHA+4, -2 ; fffffffeH
  00021	57		 push	 edi
  00022	bf 59 01 00 00	 mov	 edi, 345		; 00000159H
  00027	8d 47 6d	 lea	 eax, DWORD PTR [edi+109]
  0002a	83 fe 03	 cmp	 esi, 3
  0002d	75 0e		 jne	 SHORT $LN5@initInputI

; 481  : 		idKeyBoxX = 345;

  0002f	66 89 3d 00 00
	00 00		 mov	 WORD PTR ?idKeyBoxX@@3FA, di

; 482  : 		idKeyBoxY = 360;

  00036	8d 47 0f	 lea	 eax, DWORD PTR [edi+15]
  00039	8b cf		 mov	 ecx, edi

; 483  : 	}

  0003b	eb 25		 jmp	 SHORT $LN20@initInputI
$LN5@initInputI:

; 484  : 	else if (ResoMode == åè¾¨ç::mode1024) {

  0003d	83 fe 04	 cmp	 esi, 4
  00040	75 10		 jne	 SHORT $LN7@initInputI

; 485  : 		idKeyBoxX = 840;

  00042	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?idKeyBoxX@@3FA, bx

; 486  : 		idKeyBoxY = 290;

  00049	b8 22 01 00 00	 mov	 eax, 290		; 00000122H
  0004e	8b cb		 mov	 ecx, ebx

; 487  : 	}

  00050	eb 10		 jmp	 SHORT $LN20@initInputI
$LN7@initInputI:

; 488  : 	else {
; 489  : 		idKeyBoxX = 454;

  00052	66 a3 00 00 00
	00		 mov	 WORD PTR ?idKeyBoxX@@3FA, ax

; 490  : 		idKeyBoxY = 206;

  00058	b9 c6 01 00 00	 mov	 ecx, 454		; 000001c6H
  0005d	b8 ce 00 00 00	 mov	 eax, 206		; 000000ceH
$LN20@initInputI:

; 491  : 	}
; 492  : 	initStrBuffer(&idKey, idKeyBoxX, idKeyBoxY, 12, FONT_PAL_WHITE, FONT_PRIO_BACK);

  00062	6a 00		 push	 0
  00064	6a 00		 push	 0
  00066	6a 0c		 push	 12			; 0000000cH
  00068	50		 push	 eax
  00069	51		 push	 ecx
  0006a	68 00 00 00 00	 push	 OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  0006f	66 a3 00 00 00
	00		 mov	 WORD PTR ?idKeyBoxY@@3FA, ax
  00075	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer
  0007a	83 c4 18	 add	 esp, 24			; 00000018H

; 493  : 
; 494  : 	//	idKey.cnt = 0;
; 495  : 	//	idKey.cursor=0;
; 496  : 		//ìí¸ìììì¹
; 497  : 	if (ResoMode == åè¾¨ç::mode800) {

  0007d	83 fe 03	 cmp	 esi, 3
  00080	75 10		 jne	 SHORT $LN9@initInputI

; 498  : 		passwdBoxX = 345;

  00082	66 89 3d 00 00
	00 00		 mov	 WORD PTR ?passwdBoxX@@3FA, di

; 499  : 		passwdBoxY = 398;

  00089	b8 8e 01 00 00	 mov	 eax, 398		; 0000018eH
  0008e	8b cf		 mov	 ecx, edi

; 500  : 	}

  00090	eb 2a		 jmp	 SHORT $LN21@initInputI
$LN9@initInputI:

; 501  : 	else if (ResoMode == åè¾¨ç::mode1024) {

  00092	83 fe 04	 cmp	 esi, 4
  00095	75 10		 jne	 SHORT $LN11@initInputI

; 502  : 		passwdBoxX = 840;

  00097	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?passwdBoxX@@3FA, bx

; 503  : 		passwdBoxY = 347;

  0009e	b8 5b 01 00 00	 mov	 eax, 347		; 0000015bH
  000a3	8b cb		 mov	 ecx, ebx

; 504  : 	}

  000a5	eb 15		 jmp	 SHORT $LN21@initInputI
$LN11@initInputI:

; 505  : 	else {
; 506  : 		passwdBoxX = 454;

  000a7	b8 c6 01 00 00	 mov	 eax, 454		; 000001c6H

; 507  : 		passwdBoxY = 263;

  000ac	b9 c6 01 00 00	 mov	 ecx, 454		; 000001c6H
  000b1	66 a3 00 00 00
	00		 mov	 WORD PTR ?passwdBoxX@@3FA, ax
  000b7	b8 07 01 00 00	 mov	 eax, 263		; 00000107H
$LN21@initInputI:

; 508  : 	}
; 509  : 
; 510  : 	initStrBuffer(&passwd, passwdBoxX, passwdBoxY, 16, FONT_PAL_WHITE, FONT_PRIO_BACK);

  000bc	6a 00		 push	 0
  000be	6a 00		 push	 0
  000c0	6a 10		 push	 16			; 00000010H
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  000c9	66 a3 00 00 00
	00		 mov	 WORD PTR ?passwdBoxY@@3FA, ax
  000cf	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer

; 511  : 
; 512  : 
; 513  : 	//	passwd.cnt = 0;
; 514  : 	//	passwd.cursor=0;
; 515  : 	passwd.filterFlag = BLIND_TYPE;
; 516  : 
; 517  : 	idPasswordFocusSw = 0;
; 518  : 	GetKeyInputFocus(idPasswordFocus[idPasswordFocusSw]);

  000d4	ff 35 00 00 00
	00		 push	 DWORD PTR ?idPasswordFocus@@3PAPAUSTR_BUFFER@@A
  000da	c7 05 20 01 00
	00 01 00 00 00	 mov	 DWORD PTR ?passwd@@3USTR_BUFFER@@A+288, 1
  000e4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?idPasswordFocusSw@@3HA, 0
  000ee	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  000f3	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f6	5f		 pop	 edi
  000f7	5e		 pop	 esi
  000f8	5b		 pop	 ebx

; 519  : #ifdef _75_LOGIN
; 520  : 	if (g_bUseAlpha) {
; 521  : 		aEffect = MakeAnimDisp(300, 244, 101817, 0);
; 522  : 		aEffect1 = MakeAnimDisp(300, 244, 101818, 0);
; 523  : 	}
; 524  : #endif
; 525  : }

  000f9	c3		 ret	 0
?initInputIdPassword@@YAXXZ ENDP			; initInputIdPassword
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?focusFontId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?focusFontId@@YAHPAHH@Z PROC				; focusFontId, COMDAT

; 896  : int focusFontId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 897  : 	int i;
; 898  : 	for (i = 0; i < cnt; i++) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	56		 push	 esi
  00009	85 c9		 test	 ecx, ecx
  0000b	7e 13		 jle	 SHORT $LN3@focusFontI
  0000d	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00010	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
$LL4@focusFontI:

; 899  : 		if (id[i] == HitFontNo) {

  00016	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00019	74 08		 je	 SHORT $LN1@focusFontI

; 897  : 	int i;
; 898  : 	for (i = 0; i < cnt; i++) {

  0001b	40		 inc	 eax
  0001c	3b c1		 cmp	 eax, ecx
  0001e	7c f6		 jl	 SHORT $LL4@focusFontI
$LN3@focusFontI:

; 900  : 			return i;
; 901  : 		}
; 902  : 	}
; 903  : 	return -1;

  00020	83 c8 ff	 or	 eax, -1
$LN1@focusFontI:
  00023	5e		 pop	 esi

; 904  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?focusFontId@@YAHPAHH@Z ENDP				; focusFontId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?focusGraId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?focusGraId@@YAHPAHH@Z PROC				; focusGraId, COMDAT

; 886  : int focusGraId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 887  : 	int i;
; 888  : 	for (i = 0; i < cnt; i++) {

  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00006	33 c0		 xor	 eax, eax
  00008	56		 push	 esi
  00009	85 c9		 test	 ecx, ecx
  0000b	7e 13		 jle	 SHORT $LN3@focusGraId
  0000d	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00010	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
$LL4@focusGraId:

; 889  : 		if (id[i] == HitDispNo) {

  00016	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00019	74 08		 je	 SHORT $LN1@focusGraId

; 887  : 	int i;
; 888  : 	for (i = 0; i < cnt; i++) {

  0001b	40		 inc	 eax
  0001c	3b c1		 cmp	 eax, ecx
  0001e	7c f6		 jl	 SHORT $LL4@focusGraId
$LN3@focusGraId:

; 890  : 			return i;
; 891  : 		}
; 892  : 	}
; 893  : 	return -1;

  00020	83 c8 ff	 or	 eax, -1
$LN1@focusGraId:
  00023	5e		 pop	 esi

; 894  : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?focusGraId@@YAHPAHH@Z ENDP				; focusGraId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selFontId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?selFontId@@YAHPAHH@Z PROC				; selFontId, COMDAT

; 875  : int selFontId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 876  : 	int i;
; 877  : 	if ((mouse.onceState & MOUSE_LEFT_CRICK) == 0)

  00003	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0000a	56		 push	 esi
  0000b	74 1d		 je	 SHORT $LN3@selFontId

; 878  : 		return -1;
; 879  : 	for (i = 0; i < cnt; i++) {

  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00010	33 c0		 xor	 eax, eax
  00012	85 c9		 test	 ecx, ecx
  00014	7e 14		 jle	 SHORT $LN3@selFontId
  00016	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00019	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  0001f	90		 npad	 1
$LL4@selFontId:

; 880  : 		if (id[i] == HitFontNo)

  00020	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00023	74 08		 je	 SHORT $LN1@selFontId

; 878  : 		return -1;
; 879  : 	for (i = 0; i < cnt; i++) {

  00025	40		 inc	 eax
  00026	3b c1		 cmp	 eax, ecx
  00028	7c f6		 jl	 SHORT $LL4@selFontId
$LN3@selFontId:

; 881  : 			return i;
; 882  : 	}
; 883  : 	return -1;

  0002a	83 c8 ff	 or	 eax, -1
$LN1@selFontId:
  0002d	5e		 pop	 esi

; 884  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?selFontId@@YAHPAHH@Z ENDP				; selFontId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?pushGraId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?pushGraId@@YAHPAHH@Z PROC				; pushGraId, COMDAT

; 862  : int pushGraId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 863  : 	int i;
; 864  : 	if ((mouse.state & MOUSE_LEFT_CRICK) == 0)

  00003	f6 05 28 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+40, 1
  0000a	56		 push	 esi
  0000b	74 1d		 je	 SHORT $LN3@pushGraId

; 865  : 		return -1;
; 866  : 
; 867  : 	for (i = 0; i < cnt; i++) {

  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00010	33 c0		 xor	 eax, eax
  00012	85 c9		 test	 ecx, ecx
  00014	7e 14		 jle	 SHORT $LN3@pushGraId
  00016	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00019	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0001f	90		 npad	 1
$LL4@pushGraId:

; 868  : 		if (id[i] == HitDispNo) {

  00020	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00023	74 08		 je	 SHORT $LN1@pushGraId

; 865  : 		return -1;
; 866  : 
; 867  : 	for (i = 0; i < cnt; i++) {

  00025	40		 inc	 eax
  00026	3b c1		 cmp	 eax, ecx
  00028	7c f6		 jl	 SHORT $LL4@pushGraId
$LN3@pushGraId:

; 869  : 			return i;
; 870  : 		}
; 871  : 	}
; 872  : 	return -1;

  0002a	83 c8 ff	 or	 eax, -1
$LN1@pushGraId:
  0002d	5e		 pop	 esi

; 873  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?pushGraId@@YAHPAHH@Z ENDP				; pushGraId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selRepGraId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?selRepGraId@@YAHPAHH@Z PROC				; selRepGraId, COMDAT

; 849  : int selRepGraId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 850  : 	int i;
; 851  : 	if ((mouse.autoState & MOUSE_LEFT_CRICK) == 0)

  00003	f6 05 30 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+48, 1
  0000a	56		 push	 esi
  0000b	74 1d		 je	 SHORT $LN3@selRepGraI

; 852  : 		return -1;
; 853  : 
; 854  : 	for (i = 0; i < cnt; i++) {

  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00010	33 c0		 xor	 eax, eax
  00012	85 c9		 test	 ecx, ecx
  00014	7e 14		 jle	 SHORT $LN3@selRepGraI
  00016	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00019	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0001f	90		 npad	 1
$LL4@selRepGraI:

; 855  : 		if (id[i] == HitDispNo) {

  00020	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00023	74 08		 je	 SHORT $LN1@selRepGraI

; 852  : 		return -1;
; 853  : 
; 854  : 	for (i = 0; i < cnt; i++) {

  00025	40		 inc	 eax
  00026	3b c1		 cmp	 eax, ecx
  00028	7c f6		 jl	 SHORT $LL4@selRepGraI
$LN3@selRepGraI:

; 856  : 			return i;
; 857  : 		}
; 858  : 	}
; 859  : 	return -1;

  0002a	83 c8 ff	 or	 eax, -1
$LN1@selRepGraI:
  0002d	5e		 pop	 esi

; 860  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?selRepGraId@@YAHPAHH@Z ENDP				; selRepGraId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selGraId@@YAHPAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_cnt$ = 12						; size = 4
?selGraId@@YAHPAHH@Z PROC				; selGraId, COMDAT

; 837  : int selGraId(int* id, int cnt) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 838  : 	int i;
; 839  : 	if ((mouse.onceState & MOUSE_LEFT_CRICK) == 0)

  00003	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0000a	56		 push	 esi
  0000b	74 1d		 je	 SHORT $LN3@selGraId

; 840  : 		return -1;
; 841  : 	for (i = 0; i < cnt; i++) {

  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _cnt$[ebp]
  00010	33 c0		 xor	 eax, eax
  00012	85 c9		 test	 ecx, ecx
  00014	7e 14		 jle	 SHORT $LN3@selGraId
  00016	8b 55 08	 mov	 edx, DWORD PTR _id$[ebp]
  00019	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0001f	90		 npad	 1
$LL4@selGraId:

; 842  : 		if (id[i] == HitDispNo) {

  00020	39 34 82	 cmp	 DWORD PTR [edx+eax*4], esi
  00023	74 08		 je	 SHORT $LN1@selGraId

; 840  : 		return -1;
; 841  : 	for (i = 0; i < cnt; i++) {

  00025	40		 inc	 eax
  00026	3b c1		 cmp	 eax, ecx
  00028	7c f6		 jl	 SHORT $LL4@selGraId
$LN3@selGraId:

; 843  : 			return i;
; 844  : 		}
; 845  : 	}
; 846  : 	return -1;

  0002a	83 c8 ff	 or	 eax, -1
$LN1@selGraId:
  0002d	5e		 pop	 esi

; 847  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?selGraId@@YAHPAHH@Z ENDP				; selGraId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?openServerWindowProc@@YAXXZ
_TEXT	SEGMENT
?openServerWindowProc@@YAXXZ PROC			; openServerWindowProc, COMDAT

; 4944 : #if 0
; 4945 : 	// 
; 4946 : 	if (joy_trg[1] & JOY_F6)
; 4947 : 	{
; 4948 : #if 1
; 4949 : 		openServerWindow(9, 0x3c, 0, 0,
; 4950 : 			"1|è¨å§åå°çæ­¦å¨åº|æ¬¢è¿åä¸´ãç°å¨æ¨åºå¾æ£çæè½å|"
; 4951 : 			"èæ°´ä¸æä¹ã|500|æ»å»åä¸åï¼ï¼ï¼ãé²å¾¡åä¸éï¼ï¼ï¼|"
; 4952 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4953 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4954 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4955 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4956 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4957 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4958 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4959 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4960 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4961 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4962 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4963 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4964 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4965 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4966 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4967 : 			"å°çä¸å¨|1000|ä¹è®¸è¿æä»ä¹æ°çåç°ï¼éå½ï¼|"
; 4968 : 		);
; 4969 : #endif
; 4970 : #if 0
; 4971 : 		openServerWindow(1, 0x3c, 0, 0,
; 4972 : 			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n"
; 4973 : 			"BBBBBBBBBBBBBBBB\n"
; 4974 : 			"CCCC\n"
; 4975 : 			"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\n"
; 4976 : 			"EE\n"
; 4977 : 			"FFFFF\n"
; 4978 : 			"GGGGGGGGGGGG\n"
; 4979 : 			"H\n"
; 4980 : 			"IIIIIIIIIIIIIIIIIIIIIIIII\n"
; 4981 : 			"JJJJJJJJJJJ\n"
; 4982 : 			"KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK\n"
; 4983 : 			"LLLLLLLLLLLLLLL\n"
; 4984 : 			"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n"
; 4985 : 			"BBBBBBBBBBBBBBBB\n"
; 4986 : 			"CCCC\n"
; 4987 : 			"DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD\n"
; 4988 : 			"EE\n"
; 4989 : 			"FFFFF\n"
; 4990 : 			"GGGGGGGGGGGG\n"
; 4991 : 			"H\n"
; 4992 : 			"IIIIIIIIIIIIIIIIIIIIIIIII\n"
; 4993 : 			"JJJJJJJJJJJ\n"
; 4994 : 			"KKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKK\n"
; 4995 : 			"LLLLLLLLLLLLLLL\n");
; 4996 : #endif
; 4997 : #if 0
; 4998 : 		openServerWindow(7, 0x3c, 0, 0,
; 4999 : 			"1|1|0|????????|?????????????|??????????????????|"
; 5000 : 			"?????????????????|????????|"
; 5001 : 			"??î |0|30|24000|??î ????î?|"
; 5002 : 			"îº??|0|100|24001|îº?î??????|"
; 5003 : 			"????|0|200|24001|???î??????|"
; 5004 : 			"?????|0|300|24001|îº?î??????|"
; 5005 : 			"????|0|50|24001|???î??????|"
; 5006 : 			"??????|0|100|24001|???????????|"
; 5007 : 			"î??|0|100|24001|î?î??????|"
; 5008 : 			"î??|0|100|24001|î?î??????|"
; 5009 : 			"î??|0|100|24001|î?î??????|"
; 5010 : 			"??????|0|100|24001|??????????????????????\n???????????");
; 5011 : #endif
; 5012 : #if 0
; 5013 : 		openServerWindow(7, 0x3c, 0, 0,
; 5014 : 			"0|1|0|????????|?????????????|???????????|"
; 5015 : 			"?ä¸ªî§???|????î????????î±?????\n??????|î ´???????|"
; 5016 : 			"???????î¯??????|"
; 5017 : 			"??î |0|1|30|24000|??î ????î?|"
; 5018 : 			"îº??|0|3|100|24001|îº?î??????|"
; 5019 : 			"????|0|5|200|24001|???î??????|"
; 5020 : 			"?????|0|10|300|24001|îº?î??????|"
; 5021 : 			"????|0|1|10|24001|???î??????|"
; 5022 : 			"??????|0|2|100|24001|???????????|"
; 5023 : 			"î??|0|3|100|24001|î?î??????|"
; 5024 : 			"î??|0|4|100|24001|î?î??????|"
; 5025 : 			"î??|0|1|100|24001|î?î??????|"
; 5026 : 			"??????|1|100|9999999|24001|??????????????????????\n???????????");
; 5027 : #endif
; 5028 : 	}
; 5029 : #endif
; 5030 : 
; 5031 : 	// Robin 0720 Login Announce
; 5032 : 	if (LoginAnnounce)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?LoginAnnounce@@3HA, 0 ; LoginAnnounce
  00007	74 25		 je	 SHORT $LN4@openServer

; 5033 : 	{
; 5034 : 		LoginAnnounce = 0;
; 5035 : 		lssproto_WN_recv(sockfd, WINDOW_MESSAGETYPE_MESSAGE, WINDOW_BUTTONTYPE_OK

  00009	68 00 00 00 00	 push	 OFFSET ?AnnounceBuf@@3PADA ; AnnounceBuf
  0000e	6a ff		 push	 -1
  00010	6a ff		 push	 -1
  00012	6a 01		 push	 1
  00014	6a 00		 push	 0
  00016	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0001c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?LoginAnnounce@@3HA, 0 ; LoginAnnounce
  00026	e8 00 00 00 00	 call	 ?lssproto_WN_recv@@YAXHHHHHPAD@Z ; lssproto_WN_recv
  0002b	83 c4 18	 add	 esp, 24			; 00000018H
$LN4@openServer:

; 5036 : 			, -1, -1, AnnounceBuf);
; 5037 : 	}
; 5038 : 
; 5039 : 	// ????îî????????????
; 5040 : 	if (windowTypeWN < 0)

  0002e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?windowTypeWN@@3HA, 0 ; windowTypeWN
  00035	0f 8c 49 02 00
	00		 jl	 $LN61@openServer

; 5041 : 		return;
; 5042 : 
; 5043 : 	// ?????????îº?????????????????î¼??
; 5044 : 	if (ABS(wnOpenX - nowGx) >= 2
; 5045 : 		|| ABS(wnOpenY - nowGy) >= 2)

  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wnOpenX@@3HA ; wnOpenX
  00040	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00046	99		 cdq
  00047	33 c2		 xor	 eax, edx
  00049	2b c2		 sub	 eax, edx
  0004b	83 f8 02	 cmp	 eax, 2
  0004e	7d 15		 jge	 SHORT $LN7@openServer
  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?wnOpenY@@3HA ; wnOpenY
  00055	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  0005b	99		 cdq
  0005c	33 c2		 xor	 eax, edx
  0005e	2b c2		 sub	 eax, edx
  00060	83 f8 02	 cmp	 eax, 2
  00063	7c 0b		 jl	 SHORT $LN6@openServer
$LN7@openServer:

; 5046 : 	{
; 5047 : 		wnCloseFlag = 1;	// î¡???????î¼??

  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag
$LN6@openServer:

; 5048 : 	}
; 5049 : 	switch (windowTypeWN)

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  00075	3d ca 00 00 00	 cmp	 eax, 202		; 000000caH
  0007a	0f 87 ac 01 00
	00		 ja	 $LN2@openServer
  00080	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN64@openServer[eax]
  00087	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN65@openServer[eax*4]
$LN8@openServer:

; 5050 : 	{
; 5051 : 		// ???????
; 5052 : 	case WINDOW_MESSAGETYPE_MESSAGE:
; 5053 : 	case WINDOW_MESSAGETYPE_WIDEMESSAGE:
; 5054 : 		serverWindowType0(0);

  0008e	6a 00		 push	 0
  00090	e8 00 00 00 00	 call	 ?serverWindowType0@@YAXH@Z ; serverWindowType0
  00095	83 c4 04	 add	 esp, 4

; 5055 : 		break;

  00098	e9 8f 01 00 00	 jmp	 $LN2@openServer
$LN10@openServer:

; 5056 : 
; 5057 : 		// ????????î¼?
; 5058 : 	case WINDOW_MESSAGETYPE_MESSAGEANDLINEINPUT:
; 5059 : 	case WINDOW_MESSAGETYPE_WIDEMESSAGEANDLINEINPUT:
; 5060 : 		serverWindowType0(1);

  0009d	6a 01		 push	 1
  0009f	e8 00 00 00 00	 call	 ?serverWindowType0@@YAXH@Z ; serverWindowType0
  000a4	83 c4 04	 add	 esp, 4

; 5061 : 		break;

  000a7	e9 80 01 00 00	 jmp	 $LN2@openServer
$LN12@openServer:

; 5062 : #ifdef _NEW_MANOR_LAW
; 5063 : 	case WINDOW_FMMESSAGETYPE_MANOR_SCHEDULE:	// ææåºå­æè¡[ì¥ì/ë¶ì¡± ë§ì ë­í¹ì ëì ]
; 5064 : 		serverWindowType0(2);

  000ac	6a 02		 push	 2
  000ae	e8 00 00 00 00	 call	 ?serverWindowType0@@YAXH@Z ; serverWindowType0
  000b3	83 c4 04	 add	 esp, 4

; 5065 : 		break;

  000b6	e9 71 01 00 00	 jmp	 $LN2@openServer
$LN13@openServer:

; 5066 : #endif
; 5067 : 		// î±î¶
; 5068 : 	case WINDOW_MESSAGETYPE_SELECT:
; 5069 : 		serverWindowType1();

  000bb	e8 00 00 00 00	 call	 ?serverWindowType1@@YAXXZ ; serverWindowType1

; 5070 : 		break;

  000c0	e9 67 01 00 00	 jmp	 $LN2@openServer
$LN14@openServer:

; 5071 : 
; 5072 : 		// ???î±î¶
; 5073 : 	case WINDOW_MESSAGETYPE_PETSELECT:
; 5074 : 		serverWindowType2();

  000c5	e8 00 00 00 00	 call	 ?serverWindowType2@@YAXXZ ; serverWindowType2

; 5075 : 		break;

  000ca	e9 5d 01 00 00	 jmp	 $LN2@openServer
$LN15@openServer:

; 5076 : #ifdef _NPC_FUSION
; 5077 : 	case WINDOWS_MESSAGETYPE_PETFUSION://andy_add å® ç©èå[í« ìµí©]
; 5078 : 		serverWindowType9();

  000cf	e8 00 00 00 00	 call	 ?serverWindowType9@@YAXXZ ; serverWindowType9

; 5079 : 		break;

  000d4	e9 53 01 00 00	 jmp	 $LN2@openServer
$LN16@openServer:

; 5080 : #endif
; 5081 : 		// ??î±î¶
; 5082 : 	case WINDOW_MESSAGETYPE_PARTYSELECT:
; 5083 : 		serverWindowType3();

  000d9	e8 00 00 00 00	 call	 ?serverWindowType3@@YAXXZ ; serverWindowType3

; 5084 : 		break;

  000de	e9 49 01 00 00	 jmp	 $LN2@openServer
$LN17@openServer:

; 5085 : 
; 5086 : 		// ??????î±î¶
; 5087 : 	case WINDOW_MESSAGETYPE_PETANDPARTYSELECT:
; 5088 : 		serverWindowType4();

  000e3	e8 00 00 00 00	 call	 ?serverWindowType4@@YAXXZ ; serverWindowType4

; 5089 : 		break;

  000e8	e9 3f 01 00 00	 jmp	 $LN2@openServer
$LN18@openServer:

; 5090 : 
; 5091 : 		// ????î??????
; 5092 : 	case WINDOW_MESSAGETYPE_ITEMSHOPMENU:
; 5093 : 	case WINDOW_MESSAGETYPE_ITEMSHOPMAIN:
; 5094 : 	case WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN:
; 5095 : 		serverWindowType5();

  000ed	e8 00 00 00 00	 call	 ?serverWindowType5@@YAXXZ ; serverWindowType5

; 5096 : 		break;

  000f2	e9 35 01 00 00	 jmp	 $LN2@openServer
$LN21@openServer:

; 5097 : 
; 5098 : 		// ??????????
; 5099 : 	case WINDOW_MESSAGETYPE_PETSKILLSHOP:
; 5100 : 		serverWindowType6();

  000f7	e8 00 00 00 00	 call	 ?serverWindowType6@@YAXXZ ; serverWindowType6

; 5101 : 		break;

  000fc	e9 2b 01 00 00	 jmp	 $LN2@openServer
$LN22@openServer:

; 5102 : 
; 5103 : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸æè½[ìºë¦­í° ì§ì ì¤í¬]
; 5104 : 	case WINDOW_MESSAGETYPE_PROFESSIONSHOP:
; 5105 : 		profession_windows();

  00101	e8 00 00 00 00	 call	 ?profession_windows@@YAXXZ ; profession_windows

; 5106 : 		break;

  00106	e9 21 01 00 00	 jmp	 $LN2@openServer
$LN23@openServer:

; 5107 : #endif
; 5108 : #ifdef _NPC_WELFARE_2				// WON ADD èä¸NPC-2[ì§ì NPC-2]
; 5109 : 	case WINDOW_MESSAGETYPE_PROFESSIONSHOP2:
; 5110 : 		profession_windows2();
; 5111 : 		break;
; 5112 : #endif
; 5113 : 
; 5114 : #ifdef _PETSKILL_CANNEDFOOD
; 5115 : 	case WINDOWS_MESSAGETYPE_PETSKILLSHOW:
; 5116 : 		PetSkillShowType1();

  0010b	e8 00 00 00 00	 call	 ?PetSkillShowType1@@YAXXZ ; PetSkillShowType1

; 5117 : 		break;

  00110	e9 17 01 00 00	 jmp	 $LN2@openServer
$LN24@openServer:

; 5118 : 
; 5119 : #endif
; 5120 : 		// ????????????????
; 5121 : 	case WINDOW_MESSAGETYPE_POOLITEMSHOPMENU:
; 5122 : 	case WINDOW_MESSAGETYPE_POOLITEMSHOPMAIN:
; 5123 : 		serverWindowType7();

  00115	e8 00 00 00 00	 call	 ?serverWindowType7@@YAXXZ ; serverWindowType7

; 5124 : 		break;

  0011a	e9 0d 01 00 00	 jmp	 $LN2@openServer
$LN26@openServer:

; 5125 : 
; 5126 : 		// Robin 0517 family:
; 5127 : 	case WINDOW_MESSAGETYPE_FAMILYADD:
; 5128 : 		familyAddWN();

  0011f	e8 00 00 00 00	 call	 ?familyAddWN@@YAXXZ	; familyAddWN

; 5129 : 		break;

  00124	e9 03 01 00 00	 jmp	 $LN2@openServer
$LN27@openServer:

; 5130 : 
; 5131 : 	case WINDOW_MESSAGETYPE_FAMILYJOIN:
; 5132 : 		familyListWN();

  00129	e8 00 00 00 00	 call	 ?familyListWN@@YAXXZ	; familyListWN

; 5133 : 		break;

  0012e	e9 f9 00 00 00	 jmp	 $LN2@openServer
$LN28@openServer:

; 5134 : 
; 5135 : 
; 5136 : #ifdef _NPC_SELLSTH
; 5137 : 	case WINDOWS_MESSAGETYPE_SELLSTHMENU:
; 5138 : 		//			SellSth_Menu();
; 5139 : 	case WINDOWS_MESSAGETYPE_SELLSTHVIEW:
; 5140 : 	case WINDOWS_MESSAGETYPE_SELLSTHSELL:
; 5141 : 		SellSth_Sell();
; 5142 : 		break;
; 5143 : #endif
; 5144 : 	case WINDOW_MESSAGETYPE_FAMILYDETAIL:
; 5145 : 		mineFamilyDetailWN();

  00133	e8 00 00 00 00	 call	 ?mineFamilyDetailWN@@YAXXZ ; mineFamilyDetailWN

; 5146 : 		break;

  00138	e9 ef 00 00 00	 jmp	 $LN2@openServer
$LN29@openServer:

; 5147 : 
; 5148 : 		/*
; 5149 : 		case WINDOW_MESSAGETYPE_ITEMMAN:
; 5150 : 			itemmanWN();
; 5151 : 			break;
; 5152 : 		*/
; 5153 : #ifdef _ADD_FAMILY_TAX			   // WON ADD å¢å åºå­ç¨æ¶		[ë¶ì¡± ë§ì ì¸ì ì¦ê°]		
; 5154 : 	case WINDOWS_MESSAGETYPE_FAMILY_TAX:
; 5155 : 		FMTAXWindowsType();
; 5156 : 		break;
; 5157 : #endif
; 5158 : #ifdef _BLACK_MARKET
; 5159 : 	case WINDOW_MESSAGETYPE_BLACKMARKET:
; 5160 : 		BMWindowType();
; 5161 : 		break;
; 5162 : #endif
; 5163 : 		// Shan family memberlist
; 5164 : 	case WINDOW_FMMESSAGETYPE_SELECT:
; 5165 : 		FMWindowType();

  0013d	e8 00 00 00 00	 call	 ?FMWindowType@@YAXXZ	; FMWindowType

; 5166 : 		break;

  00142	e9 e5 00 00 00	 jmp	 $LN2@openServer
$LN30@openServer:

; 5167 : #ifdef _FMVER21
; 5168 : 		// Shan family dplist top30
; 5169 : #ifdef _NEW_MANOR_LAW
; 5170 : 	case WINDOW_FMMESSAGETYPE_FM_MEMONTUM:
; 5171 : 		FMWindowType4(1);

  00147	6a 01		 push	 1
  00149	e8 00 00 00 00	 call	 ?FMWindowType4@@YAXH@Z	; FMWindowType4
  0014e	83 c4 04	 add	 esp, 4

; 5172 : 		break;

  00151	e9 d6 00 00 00	 jmp	 $LN2@openServer
$LN31@openServer:

; 5173 : 	case WINDOW_FMMESSAGETYPE_TOP30DP:
; 5174 : 		FMWindowType4(0);

  00156	6a 00		 push	 0
  00158	e8 00 00 00 00	 call	 ?FMWindowType4@@YAXH@Z	; FMWindowType4
  0015d	83 c4 04	 add	 esp, 4

; 5175 : 		break;

  00160	e9 c7 00 00 00	 jmp	 $LN2@openServer
$LN32@openServer:

; 5176 : #else
; 5177 : 	case WINDOW_FMMESSAGETYPE_TOP30DP:
; 5178 : 		FMWindowType4();
; 5179 : 		break;
; 5180 : #endif
; 5181 : #endif
; 5182 : 		// Shan family dplist
; 5183 : #ifdef _NEW_MANOR_LAW
; 5184 : 	case WINDOW_FMMESSAGETYPE_10_MEMONTUM:
; 5185 : 		FMWindowType3(1);

  00165	6a 01		 push	 1
  00167	e8 00 00 00 00	 call	 ?FMWindowType3@@YAXH@Z	; FMWindowType3
  0016c	83 c4 04	 add	 esp, 4

; 5186 : 		break;

  0016f	e9 b8 00 00 00	 jmp	 $LN2@openServer
$LN33@openServer:

; 5187 : 	case WINDOW_FMMESSAGETYPE_DP:
; 5188 : 		FMWindowType3(0);

  00174	6a 00		 push	 0
  00176	e8 00 00 00 00	 call	 ?FMWindowType3@@YAXH@Z	; FMWindowType3
  0017b	83 c4 04	 add	 esp, 4

; 5189 : 		break;

  0017e	e9 a9 00 00 00	 jmp	 $LN2@openServer
$LN34@openServer:

; 5190 : #else
; 5191 : 	case WINDOW_FMMESSAGETYPE_DP:
; 5192 : 		FMWindowType3();
; 5193 : 		break;
; 5194 : #endif
; 5195 : 		// Shan family pointlist
; 5196 : 	case WINDOW_FMMESSAGETYPE_POINTLIST:
; 5197 : 		FMWindowType2();

  00183	e8 00 00 00 00	 call	 ?FMWindowType2@@YAXXZ	; FMWindowType2

; 5198 : 		break;

  00188	e9 9f 00 00 00	 jmp	 $LN2@openServer
$LN35@openServer:

; 5199 : 		// Shan family dengon
; 5200 : 	case WINDOW_FMMESSAGETYPE_DENGON:
; 5201 : 	case WINDOW_FMMESSAGETYPE_FMSDENGON:
; 5202 : 		FMWindowType1();

  0018d	e8 00 00 00 00	 call	 ?FMWindowType1@@YAXXZ	; FMWindowType1

; 5203 : 		break;

  00192	e9 95 00 00 00	 jmp	 $LN2@openServer
$LN37@openServer:

; 5204 : 
; 5205 : 		// Robin FM_PK
; 5206 : 	case WINDOW_MESSAGETYPE_PKSCHEDULELIST:
; 5207 : 		FMPKListWN(0);

  00197	6a 00		 push	 0
  00199	e8 00 00 00 00	 call	 ?FMPKListWN@@YAXH@Z	; FMPKListWN
  0019e	83 c4 04	 add	 esp, 4

; 5208 : 		break;

  001a1	e9 86 00 00 00	 jmp	 $LN2@openServer
$LN38@openServer:

; 5209 : 	case WINDOW_MESSAGETYPE_PKSCHEDULESELECTFAMILY:
; 5210 : 		FMPKSelectWN(0);

  001a6	6a 00		 push	 0
  001a8	e8 00 00 00 00	 call	 ?FMPKSelectWN@@YAXH@Z	; FMPKSelectWN
  001ad	83 c4 04	 add	 esp, 4

; 5211 : 		break;

  001b0	eb 7a		 jmp	 SHORT $LN2@openServer
$LN39@openServer:

; 5212 : 	case WINDOW_MESSAGETYPE_PKSCHEDULEDETAIL:
; 5213 : 		FMPKDetailWN(0);

  001b2	6a 00		 push	 0
  001b4	e8 00 00 00 00	 call	 ?FMPKDetailWN@@YAXH@Z	; FMPKDetailWN
  001b9	83 c4 04	 add	 esp, 4

; 5214 : 		break;

  001bc	eb 6e		 jmp	 SHORT $LN2@openServer
$LN40@openServer:

; 5215 : 
; 5216 : 	case WINDOW_MESSAGETYPE_FAMILYTAX:
; 5217 : 		familyTaxWN();

  001be	e8 00 00 00 00	 call	 ?familyTaxWN@@YAXXZ	; familyTaxWN

; 5218 : 		break;

  001c3	eb 67		 jmp	 SHORT $LN2@openServer
$LN41@openServer:

; 5219 : 
; 5220 : 	case WINDOW_MESSAGETYPE_SHOWRIDEPET:
; 5221 : 		showRidePetWN();

  001c5	e8 00 00 00 00	 call	 ?showRidePetWN@@YAXXZ	; showRidePetWN

; 5222 : 		break;

  001ca	eb 60		 jmp	 SHORT $LN2@openServer
$LN42@openServer:

; 5223 : 
; 5224 : 	case WINDOW_MESSAGETYPE_LEADERSELECT:
; 5225 : 		familyLeaderChangeWN();

  001cc	e8 00 00 00 00	 call	 ?familyLeaderChangeWN@@YAXXZ ; familyLeaderChangeWN

; 5226 : 		break;

  001d1	eb 59		 jmp	 SHORT $LN2@openServer
$LN43@openServer:

; 5227 : 
; 5228 : 	case WINDOW_MESSAGETYPE_LEADERSELECTQ:
; 5229 : 		familyLeaderChangeQWN();

  001d3	e8 00 00 00 00	 call	 ?familyLeaderChangeQWN@@YAXXZ ; familyLeaderChangeQWN

; 5230 : 		break;

  001d8	eb 52		 jmp	 SHORT $LN2@openServer
$LN44@openServer:

; 5231 : 
; 5232 : 	case WINDOW_MESSAGETYPE_LEADERSELECTA:
; 5233 : 		familyLeaderChangeAWN();

  001da	e8 00 00 00 00	 call	 ?familyLeaderChangeAWN@@YAXXZ ; familyLeaderChangeAWN

; 5234 : 		break;

  001df	eb 4b		 jmp	 SHORT $LN2@openServer
$LN45@openServer:

; 5235 : 		// Terry 2001/12/07
; 5236 : #ifdef __EDEN_EFFECT
; 5237 : 	case WINDOW_MESSAGETYPE_BANK:
; 5238 : 		BankProc();

  001e1	e8 00 00 00 00	 call	 ?BankProc@@YAXXZ	; BankProc

; 5239 : 		break;

  001e6	eb 44		 jmp	 SHORT $LN2@openServer
$LN46@openServer:

; 5240 : #endif
; 5241 : 		// Terry end
; 5242 : 
; 5243 : 		// Terry add 2002/01/03
; 5244 : #ifdef __EDEN_AUCTION
; 5245 : 		// WT-->(W)indow(T)ype
; 5246 : 		// å¼å¯å§æè§çª[ìë¢°ì°½ ì´ê¸°]
; 5247 : 	case WINDOW_MESSAGETYPE_AUCTIONNEW: AuctionNewWT(); break;

  001e8	e8 00 00 00 00	 call	 ?AuctionNewWT@@YAXXZ	; AuctionNewWT
  001ed	eb 3d		 jmp	 SHORT $LN2@openServer
$LN47@openServer:

; 5248 : 		// å¼å¯å§æåè¡¨è§çª[ìë¢° ë¦¬ì¤í¸ ì°½ ì´ê¸°]
; 5249 : 	case WINDOW_MESSAGETYPE_AUCTIONLIST_BUY:
; 5250 : 	case WINDOW_MESSAGETYPE_AUCTIONLIST_MODIFY: AuctionListWT(); break;

  001ef	e8 00 00 00 00	 call	 ?AuctionListWT@@YAXXZ	; AuctionListWT
  001f4	eb 36		 jmp	 SHORT $LN2@openServer
$LN49@openServer:

; 5251 : 		// å¼å¯å§æè¯¦ç»åå®¹è§çª[ìë¢° ì¸ë¶ë´ì©ì°½ ì´ê¸°]
; 5252 : 	case WINDOW_MESSAGETYPE_AUCTIONSURVEY:
; 5253 : 		// å¼å¯ä¿®æ¹å§æåå®¹è§çª[ìë¢° ë´ì© í¸ì§ì°½ ì´ê¸°]
; 5254 : 	case WINDOW_MESSAGETYPE_AUCTIONMODIFY: AuctionSurveyModifyWT(); break;

  001f6	e8 00 00 00 00	 call	 ?AuctionSurveyModifyWT@@YAXXZ ; AuctionSurveyModifyWT
  001fb	eb 2f		 jmp	 SHORT $LN2@openServer
$LN51@openServer:

; 5255 : 		break;
; 5256 : #endif
; 5257 : 		// Terry end
; 5258 : 
; 5259 : #ifdef _MOUSE_DBL_CLICK
; 5260 : 	case WINDOW_MESSAGETYPE_MOUSEGETNAME:
; 5261 : 		showMouseGetNameWN();

  001fd	e8 00 00 00 00	 call	 ?showMouseGetNameWN@@YAXXZ ; showMouseGetNameWN

; 5262 : 		break;

  00202	eb 28		 jmp	 SHORT $LN2@openServer
$LN52@openServer:

; 5263 : #endif
; 5264 : 
; 5265 : #ifdef _CONTRACT
; 5266 : 	case WINDOW_MESSAGETYPE_CONTRACT:
; 5267 : 		showContractWN();

  00204	e8 00 00 00 00	 call	 ?showContractWN@@YAXXZ	; showContractWN

; 5268 : 		break;

  00209	eb 21		 jmp	 SHORT $LN2@openServer
$LN53@openServer:

; 5269 : #endif
; 5270 : 
; 5271 : #ifdef _RACEMAN
; 5272 : 	case WINDOW_MESSAGETYPE_RACEMAN_RANK:
; 5273 : 		showRacemanRankWN();

  0020b	e8 00 00 00 00	 call	 ?showRacemanRankWN@@YAXXZ ; showRacemanRankWN

; 5274 : 		break;

  00210	eb 1a		 jmp	 SHORT $LN2@openServer
$LN54@openServer:

; 5275 : #endif
; 5276 : #ifdef _DRAGON_FUSION // [ë°ê¸°ë¸ ì§í]
; 5277 : 	case WINDOWS_MESSAGETYPE_DRAGONFUSION:
; 5278 : 		serverWindowDragonFusion();

  00212	e8 00 00 00 00	 call	 ?serverWindowDragonFusion@@YAXXZ ; serverWindowDragonFusion

; 5279 : 		break;

  00217	eb 13		 jmp	 SHORT $LN2@openServer
$LN55@openServer:

; 5280 : #endif
; 5281 : 	case WINDOW_MESSAGETYPE_VIPSHOP_MENU:
; 5282 : 	{
; 5283 : 		serverWindowType10();

  00219	e8 00 00 00 00	 call	 ?serverWindowType10@@YAXXZ ; serverWindowType10

; 5284 : 		break;

  0021e	eb 0c		 jmp	 SHORT $LN2@openServer
$LN56@openServer:

; 5285 : 	}
; 5286 : 	case WINDOW_MESSAGETYPE_WARP_MENU:
; 5287 : 	{
; 5288 : 		serverWindowType11();

  00220	e8 00 00 00 00	 call	 ?serverWindowType11@@YAXXZ ; serverWindowType11

; 5289 : 		break;

  00225	eb 05		 jmp	 SHORT $LN2@openServer
$LN57@openServer:

; 5290 : 	}
; 5291 : 	case WINDOW_MESSAGETYPE_WARP_MAIN:
; 5292 : 	{
; 5293 : 		serverWindowType12();

  00227	e8 00 00 00 00	 call	 ?serverWindowType12@@YAXXZ ; serverWindowType12
$LN2@openServer:

; 5294 : 		break;
; 5295 : 	}
; 5296 : 	}
; 5297 : 
; 5298 : 
; 5299 : 
; 5300 : #ifdef _WIN_LUAJIT_
; 5301 : 	if (windowTypeWN > 1004) {

  0022c	81 3d 00 00 00
	00 ec 03 00 00	 cmp	 DWORD PTR ?windowTypeWN@@3HA, 1004 ; windowTypeWN, 000003ecH
  00236	7e 4c		 jle	 SHORT $LN61@openServer

; 5302 : 		if (windows.ptActMenuWin == NULL) {

  00238	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windows@@3USA_WINDOWS@@A
  0023d	85 c0		 test	 eax, eax
  0023f	75 2a		 jne	 SHORT $LN63@openServer

; 5303 : 			windows.ptActMenuWin = FreeCreateWinTypeLua(WinLua);

  00241	ff 35 00 00 00
	00		 push	 DWORD PTR ?WinLua@@3PAUlua_State@@A ; WinLua
  00247	e8 00 00 00 00	 call	 ?FreeCreateWinTypeLua@@YAPAUaction@@PAUlua_State@@@Z ; FreeCreateWinTypeLua
  0024c	83 c4 04	 add	 esp, 4
  0024f	a3 00 00 00 00	 mov	 DWORD PTR ?windows@@3USA_WINDOWS@@A, eax

; 5304 : 			if (windows.ptActMenuWin == NULL) {

  00254	85 c0		 test	 eax, eax
  00256	75 13		 jne	 SHORT $LN63@openServer

; 5305 : 				InitMenu();

  00258	e8 00 00 00 00	 call	 ?InitMenu@@YAXXZ	; InitMenu

; 5306 : 				initFieldProc();

  0025d	e8 00 00 00 00	 call	 ?initFieldProc@@YAXXZ	; initFieldProc

; 5307 : 			}
; 5308 : 		}
; 5309 : 		if (windows.ptActMenuWin != NULL && windows.ptActMenuWin->hp >= 1) {

  00262	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windows@@3USA_WINDOWS@@A
  00267	85 c0		 test	 eax, eax
  00269	74 19		 je	 SHORT $LN61@openServer
$LN63@openServer:
  0026b	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  0026f	7c 13		 jl	 SHORT $LN61@openServer

; 5310 : 			windows.ptActMenuWin = FreeServerWinTypeLua(WinLua);

  00271	ff 35 00 00 00
	00		 push	 DWORD PTR ?WinLua@@3PAUlua_State@@A ; WinLua
  00277	e8 00 00 00 00	 call	 ?FreeServerWinTypeLua@@YAPAUaction@@PAUlua_State@@@Z ; FreeServerWinTypeLua
  0027c	83 c4 04	 add	 esp, 4
  0027f	a3 00 00 00 00	 mov	 DWORD PTR ?windows@@3USA_WINDOWS@@A, eax
$LN61@openServer:

; 5311 : 		}
; 5312 : 	}
; 5313 : #endif
; 5314 : }

  00284	c3		 ret	 0
  00285	0f 1f 00	 npad	 3
$LN65@openServer:
  00288	00 00 00 00	 DD	 $LN8@openServer
  0028c	00 00 00 00	 DD	 $LN10@openServer
  00290	00 00 00 00	 DD	 $LN13@openServer
  00294	00 00 00 00	 DD	 $LN14@openServer
  00298	00 00 00 00	 DD	 $LN16@openServer
  0029c	00 00 00 00	 DD	 $LN17@openServer
  002a0	00 00 00 00	 DD	 $LN18@openServer
  002a4	00 00 00 00	 DD	 $LN21@openServer
  002a8	00 00 00 00	 DD	 $LN24@openServer
  002ac	00 00 00 00	 DD	 $LN26@openServer
  002b0	00 00 00 00	 DD	 $LN27@openServer
  002b4	00 00 00 00	 DD	 $LN29@openServer
  002b8	00 00 00 00	 DD	 $LN35@openServer
  002bc	00 00 00 00	 DD	 $LN34@openServer
  002c0	00 00 00 00	 DD	 $LN31@openServer
  002c4	00 00 00 00	 DD	 $LN33@openServer
  002c8	00 00 00 00	 DD	 $LN45@openServer
  002cc	00 00 00 00	 DD	 $LN37@openServer
  002d0	00 00 00 00	 DD	 $LN38@openServer
  002d4	00 00 00 00	 DD	 $LN39@openServer
  002d8	00 00 00 00	 DD	 $LN40@openServer
  002dc	00 00 00 00	 DD	 $LN41@openServer
  002e0	00 00 00 00	 DD	 $LN28@openServer
  002e4	00 00 00 00	 DD	 $LN42@openServer
  002e8	00 00 00 00	 DD	 $LN43@openServer
  002ec	00 00 00 00	 DD	 $LN44@openServer
  002f0	00 00 00 00	 DD	 $LN46@openServer
  002f4	00 00 00 00	 DD	 $LN47@openServer
  002f8	00 00 00 00	 DD	 $LN49@openServer
  002fc	00 00 00 00	 DD	 $LN15@openServer
  00300	00 00 00 00	 DD	 $LN23@openServer
  00304	00 00 00 00	 DD	 $LN22@openServer
  00308	00 00 00 00	 DD	 $LN32@openServer
  0030c	00 00 00 00	 DD	 $LN30@openServer
  00310	00 00 00 00	 DD	 $LN12@openServer
  00314	00 00 00 00	 DD	 $LN51@openServer
  00318	00 00 00 00	 DD	 $LN52@openServer
  0031c	00 00 00 00	 DD	 $LN53@openServer
  00320	00 00 00 00	 DD	 $LN54@openServer
  00324	00 00 00 00	 DD	 $LN55@openServer
  00328	00 00 00 00	 DD	 $LN56@openServer
  0032c	00 00 00 00	 DD	 $LN57@openServer
  00330	00 00 00 00	 DD	 $LN2@openServer
$LN64@openServer:
  00334	00		 DB	 0
  00335	01		 DB	 1
  00336	02		 DB	 2
  00337	03		 DB	 3
  00338	04		 DB	 4
  00339	05		 DB	 5
  0033a	06		 DB	 6
  0033b	06		 DB	 6
  0033c	06		 DB	 6
  0033d	07		 DB	 7
  0033e	00		 DB	 0
  0033f	01		 DB	 1
  00340	08		 DB	 8
  00341	08		 DB	 8
  00342	09		 DB	 9
  00343	0a		 DB	 10			; 0000000aH
  00344	2a		 DB	 42			; 0000002aH
  00345	2a		 DB	 42			; 0000002aH
  00346	0b		 DB	 11			; 0000000bH
  00347	0c		 DB	 12			; 0000000cH
  00348	0c		 DB	 12			; 0000000cH
  00349	0d		 DB	 13			; 0000000dH
  0034a	0e		 DB	 14			; 0000000eH
  0034b	0f		 DB	 15			; 0000000fH
  0034c	10		 DB	 16			; 00000010H
  0034d	11		 DB	 17			; 00000011H
  0034e	12		 DB	 18			; 00000012H
  0034f	13		 DB	 19			; 00000013H
  00350	2a		 DB	 42			; 0000002aH
  00351	14		 DB	 20			; 00000014H
  00352	15		 DB	 21			; 00000015H
  00353	16		 DB	 22			; 00000016H
  00354	17		 DB	 23			; 00000017H
  00355	18		 DB	 24			; 00000018H
  00356	19		 DB	 25			; 00000019H
  00357	1a		 DB	 26			; 0000001aH
  00358	1b		 DB	 27			; 0000001bH
  00359	1c		 DB	 28			; 0000001cH
  0035a	1c		 DB	 28			; 0000001cH
  0035b	1b		 DB	 27			; 0000001bH
  0035c	1d		 DB	 29			; 0000001dH
  0035d	1e		 DB	 30			; 0000001eH
  0035e	1f		 DB	 31			; 0000001fH
  0035f	20		 DB	 32			; 00000020H
  00360	21		 DB	 33			; 00000021H
  00361	22		 DB	 34			; 00000022H
  00362	2a		 DB	 42			; 0000002aH
  00363	2a		 DB	 42			; 0000002aH
  00364	2a		 DB	 42			; 0000002aH
  00365	2a		 DB	 42			; 0000002aH
  00366	2a		 DB	 42			; 0000002aH
  00367	2a		 DB	 42			; 0000002aH
  00368	2a		 DB	 42			; 0000002aH
  00369	2a		 DB	 42			; 0000002aH
  0036a	2a		 DB	 42			; 0000002aH
  0036b	2a		 DB	 42			; 0000002aH
  0036c	2a		 DB	 42			; 0000002aH
  0036d	2a		 DB	 42			; 0000002aH
  0036e	2a		 DB	 42			; 0000002aH
  0036f	2a		 DB	 42			; 0000002aH
  00370	2a		 DB	 42			; 0000002aH
  00371	2a		 DB	 42			; 0000002aH
  00372	2a		 DB	 42			; 0000002aH
  00373	2a		 DB	 42			; 0000002aH
  00374	2a		 DB	 42			; 0000002aH
  00375	2a		 DB	 42			; 0000002aH
  00376	2a		 DB	 42			; 0000002aH
  00377	2a		 DB	 42			; 0000002aH
  00378	2a		 DB	 42			; 0000002aH
  00379	2a		 DB	 42			; 0000002aH
  0037a	2a		 DB	 42			; 0000002aH
  0037b	2a		 DB	 42			; 0000002aH
  0037c	2a		 DB	 42			; 0000002aH
  0037d	2a		 DB	 42			; 0000002aH
  0037e	2a		 DB	 42			; 0000002aH
  0037f	2a		 DB	 42			; 0000002aH
  00380	2a		 DB	 42			; 0000002aH
  00381	2a		 DB	 42			; 0000002aH
  00382	2a		 DB	 42			; 0000002aH
  00383	2a		 DB	 42			; 0000002aH
  00384	2a		 DB	 42			; 0000002aH
  00385	2a		 DB	 42			; 0000002aH
  00386	2a		 DB	 42			; 0000002aH
  00387	2a		 DB	 42			; 0000002aH
  00388	2a		 DB	 42			; 0000002aH
  00389	2a		 DB	 42			; 0000002aH
  0038a	2a		 DB	 42			; 0000002aH
  0038b	2a		 DB	 42			; 0000002aH
  0038c	2a		 DB	 42			; 0000002aH
  0038d	2a		 DB	 42			; 0000002aH
  0038e	2a		 DB	 42			; 0000002aH
  0038f	2a		 DB	 42			; 0000002aH
  00390	2a		 DB	 42			; 0000002aH
  00391	2a		 DB	 42			; 0000002aH
  00392	2a		 DB	 42			; 0000002aH
  00393	2a		 DB	 42			; 0000002aH
  00394	2a		 DB	 42			; 0000002aH
  00395	2a		 DB	 42			; 0000002aH
  00396	2a		 DB	 42			; 0000002aH
  00397	2a		 DB	 42			; 0000002aH
  00398	2a		 DB	 42			; 0000002aH
  00399	2a		 DB	 42			; 0000002aH
  0039a	2a		 DB	 42			; 0000002aH
  0039b	23		 DB	 35			; 00000023H
  0039c	24		 DB	 36			; 00000024H
  0039d	25		 DB	 37			; 00000025H
  0039e	26		 DB	 38			; 00000026H
  0039f	2a		 DB	 42			; 0000002aH
  003a0	2a		 DB	 42			; 0000002aH
  003a1	2a		 DB	 42			; 0000002aH
  003a2	2a		 DB	 42			; 0000002aH
  003a3	2a		 DB	 42			; 0000002aH
  003a4	2a		 DB	 42			; 0000002aH
  003a5	2a		 DB	 42			; 0000002aH
  003a6	2a		 DB	 42			; 0000002aH
  003a7	2a		 DB	 42			; 0000002aH
  003a8	2a		 DB	 42			; 0000002aH
  003a9	2a		 DB	 42			; 0000002aH
  003aa	2a		 DB	 42			; 0000002aH
  003ab	2a		 DB	 42			; 0000002aH
  003ac	2a		 DB	 42			; 0000002aH
  003ad	2a		 DB	 42			; 0000002aH
  003ae	2a		 DB	 42			; 0000002aH
  003af	2a		 DB	 42			; 0000002aH
  003b0	2a		 DB	 42			; 0000002aH
  003b1	2a		 DB	 42			; 0000002aH
  003b2	2a		 DB	 42			; 0000002aH
  003b3	2a		 DB	 42			; 0000002aH
  003b4	2a		 DB	 42			; 0000002aH
  003b5	2a		 DB	 42			; 0000002aH
  003b6	2a		 DB	 42			; 0000002aH
  003b7	2a		 DB	 42			; 0000002aH
  003b8	2a		 DB	 42			; 0000002aH
  003b9	2a		 DB	 42			; 0000002aH
  003ba	2a		 DB	 42			; 0000002aH
  003bb	2a		 DB	 42			; 0000002aH
  003bc	2a		 DB	 42			; 0000002aH
  003bd	2a		 DB	 42			; 0000002aH
  003be	2a		 DB	 42			; 0000002aH
  003bf	2a		 DB	 42			; 0000002aH
  003c0	2a		 DB	 42			; 0000002aH
  003c1	2a		 DB	 42			; 0000002aH
  003c2	2a		 DB	 42			; 0000002aH
  003c3	2a		 DB	 42			; 0000002aH
  003c4	2a		 DB	 42			; 0000002aH
  003c5	2a		 DB	 42			; 0000002aH
  003c6	2a		 DB	 42			; 0000002aH
  003c7	2a		 DB	 42			; 0000002aH
  003c8	2a		 DB	 42			; 0000002aH
  003c9	2a		 DB	 42			; 0000002aH
  003ca	2a		 DB	 42			; 0000002aH
  003cb	2a		 DB	 42			; 0000002aH
  003cc	2a		 DB	 42			; 0000002aH
  003cd	2a		 DB	 42			; 0000002aH
  003ce	2a		 DB	 42			; 0000002aH
  003cf	2a		 DB	 42			; 0000002aH
  003d0	2a		 DB	 42			; 0000002aH
  003d1	2a		 DB	 42			; 0000002aH
  003d2	2a		 DB	 42			; 0000002aH
  003d3	2a		 DB	 42			; 0000002aH
  003d4	2a		 DB	 42			; 0000002aH
  003d5	2a		 DB	 42			; 0000002aH
  003d6	2a		 DB	 42			; 0000002aH
  003d7	2a		 DB	 42			; 0000002aH
  003d8	2a		 DB	 42			; 0000002aH
  003d9	2a		 DB	 42			; 0000002aH
  003da	2a		 DB	 42			; 0000002aH
  003db	2a		 DB	 42			; 0000002aH
  003dc	2a		 DB	 42			; 0000002aH
  003dd	2a		 DB	 42			; 0000002aH
  003de	2a		 DB	 42			; 0000002aH
  003df	2a		 DB	 42			; 0000002aH
  003e0	2a		 DB	 42			; 0000002aH
  003e1	2a		 DB	 42			; 0000002aH
  003e2	2a		 DB	 42			; 0000002aH
  003e3	2a		 DB	 42			; 0000002aH
  003e4	2a		 DB	 42			; 0000002aH
  003e5	2a		 DB	 42			; 0000002aH
  003e6	2a		 DB	 42			; 0000002aH
  003e7	2a		 DB	 42			; 0000002aH
  003e8	2a		 DB	 42			; 0000002aH
  003e9	2a		 DB	 42			; 0000002aH
  003ea	2a		 DB	 42			; 0000002aH
  003eb	2a		 DB	 42			; 0000002aH
  003ec	2a		 DB	 42			; 0000002aH
  003ed	2a		 DB	 42			; 0000002aH
  003ee	2a		 DB	 42			; 0000002aH
  003ef	2a		 DB	 42			; 0000002aH
  003f0	2a		 DB	 42			; 0000002aH
  003f1	2a		 DB	 42			; 0000002aH
  003f2	2a		 DB	 42			; 0000002aH
  003f3	2a		 DB	 42			; 0000002aH
  003f4	2a		 DB	 42			; 0000002aH
  003f5	2a		 DB	 42			; 0000002aH
  003f6	2a		 DB	 42			; 0000002aH
  003f7	2a		 DB	 42			; 0000002aH
  003f8	2a		 DB	 42			; 0000002aH
  003f9	2a		 DB	 42			; 0000002aH
  003fa	2a		 DB	 42			; 0000002aH
  003fb	2a		 DB	 42			; 0000002aH
  003fc	27		 DB	 39			; 00000027H
  003fd	28		 DB	 40			; 00000028H
  003fe	29		 DB	 41			; 00000029H
?openServerWindowProc@@YAXXZ ENDP			; openServerWindowProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?openServerWindow@@YAXHHHHPAD@Z
_TEXT	SEGMENT
_windowtype$ = 8					; size = 4
_buttontype$ = 12					; size = 4
_index$ = 16						; size = 4
_id$ = 20						; size = 4
_data$ = 24						; size = 4
?openServerWindow@@YAXHHHHPAD@Z PROC			; openServerWindow, COMDAT

; 4582 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 4583 : 
; 4584 : #ifdef _ANGEL_SUMMON
; 4585 : 	if (windowtype == WINDOW_MESSAGETYPE_ANGELMESSAGE) {

  00004	8b 7d 08	 mov	 edi, DWORD PTR _windowtype$[ebp]
  00007	83 ff 65	 cmp	 edi, 101		; 00000065H
  0000a	75 58		 jne	 SHORT $LN7@openServer

; 4586 : 		if (index == 520 /*CHAR_WINDOWTYPE_ANGEL_ASK*/) {

  0000c	81 7d 10 08 02
	00 00		 cmp	 DWORD PTR _index$[ebp], 520 ; 00000208H
  00013	75 3b		 jne	 SHORT $LN5@openServer

; 4587 : 			angelFlag = TRUE;
; 4588 : 			angelRecvType = index;
; 4589 : 			angelRecvButton = buttontype;

  00015	8b 45 0c	 mov	 eax, DWORD PTR _buttontype$[ebp]
  00018	ba 00 00 00 00	 mov	 edx, OFFSET ?angelMsg@@3PADA ; angelMsg

; 4590 : 			strcpy(angelMsg, data);

  0001d	8b 4d 18	 mov	 ecx, DWORD PTR _data$[ebp]
  00020	2b d1		 sub	 edx, ecx
  00022	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?angelFlag@@3HA, 1 ; angelFlag
  0002c	c7 05 00 00 00
	00 08 02 00 00	 mov	 DWORD PTR ?angelRecvType@@3HA, 520 ; angelRecvType, 00000208H
  00036	a3 00 00 00 00	 mov	 DWORD PTR ?angelRecvButton@@3HA, eax ; angelRecvButton
  0003b	0f 1f 44 00 00	 npad	 5
$LL97@openServer:
  00040	8a 01		 mov	 al, BYTE PTR [ecx]
  00042	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00045	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00049	84 c0		 test	 al, al
  0004b	75 f3		 jne	 SHORT $LL97@openServer
  0004d	5f		 pop	 edi

; 4932 : 			cloasewindows = 1;
; 4933 : 		}
; 4934 : 	}
; 4935 : #endif
; 4936 : 
; 4937 : }

  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
$LN5@openServer:

; 4591 : 			return;
; 4592 : 		}
; 4593 : 		else if (index = 521 /*CHAR_WINDOWTYPE_ANGEL_CLEAN*/) {
; 4594 : 			angelFlag = FALSE;

  00050	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?angelFlag@@3HA, 0 ; angelFlag

; 4595 : 			strcpy(angelMsg, "");

  0005a	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?angelMsg@@3PADA, 0
  00061	5f		 pop	 edi

; 4932 : 			cloasewindows = 1;
; 4933 : 		}
; 4934 : 	}
; 4935 : #endif
; 4936 : 
; 4937 : }

  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
$LN7@openServer:

; 4596 : 			return;
; 4597 : 		}
; 4598 : 	}
; 4599 : #endif
; 4600 : 
; 4601 : 	if (windowTypeWN < 0
; 4602 : 		|| windowtype == 33
; 4603 : 		|| windowtype == 0
; 4604 : 		|| windowtype == 36
; 4605 : 		|| windowtype == 39
; 4606 : 		|| windowtype == 42)

  00064	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  00069	53		 push	 ebx
  0006a	bb 01 00 00 00	 mov	 ebx, 1
  0006f	56		 push	 esi
  00070	8b 75 18	 mov	 esi, DWORD PTR _data$[ebp]
  00073	85 c0		 test	 eax, eax
  00075	78 1c		 js	 SHORT $LN9@openServer
  00077	83 ff 21	 cmp	 edi, 33			; 00000021H
  0007a	74 38		 je	 SHORT $LN10@openServer
  0007c	85 ff		 test	 edi, edi
  0007e	74 17		 je	 SHORT $LN105@openServer
  00080	83 ff 24	 cmp	 edi, 36			; 00000024H
  00083	74 2f		 je	 SHORT $LN10@openServer
  00085	83 ff 27	 cmp	 edi, 39			; 00000027H
  00088	74 2a		 je	 SHORT $LN10@openServer
  0008a	83 ff 2a	 cmp	 edi, 42			; 0000002aH
  0008d	0f 85 34 03 00
	00		 jne	 $LN8@openServer
$LN9@openServer:

; 4607 : 	{
; 4608 : 
; 4609 : 		if (windowtype == 0 && windowTypeWN == 13) {

  00093	85 ff		 test	 edi, edi
  00095	75 1d		 jne	 SHORT $LN10@openServer
$LN105@openServer:
  00097	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  0009a	75 18		 jne	 SHORT $LN10@openServer

; 4610 : 			DeathAction(ptActMenuWin);

  0009c	ff 35 00 00 00
	00		 push	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A ; ptActMenuWin
  000a2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000a7	83 c4 04	 add	 esp, 4

; 4611 : 			ptActMenuWin = NULL;

  000aa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin
$LN10@openServer:

; 4612 : 		}
; 4613 : #ifdef _BLACK_MARKET
; 4614 : 		if (windowtype == 0 && windowTypeWN == WINDOW_MESSAGETYPE_BLACKMARKET) {
; 4615 : 			closeBlackMarketWN();
; 4616 : 		}
; 4617 : #endif
; 4618 : 		wnOpenX = nowGx;

  000b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx

; 4619 : 		wnOpenY = nowGy;
; 4620 : 		wnCloseFlag = 0;
; 4621 : 
; 4622 : 		windowTypeWN = windowtype;

  000b9	8b cf		 mov	 ecx, edi
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?wnOpenX@@3HA, eax ; wnOpenX
  000c0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  000c5	a3 00 00 00 00	 mov	 DWORD PTR ?wnOpenY@@3HA, eax ; wnOpenY
  000ca	33 c0		 xor	 eax, eax
  000cc	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag

; 4623 : 		buttonTypeWN = buttontype;

  000d2	8b 45 0c	 mov	 eax, DWORD PTR _buttontype$[ebp]
  000d5	a3 00 00 00 00	 mov	 DWORD PTR ?buttonTypeWN@@3HA, eax ; buttonTypeWN

; 4624 : 		indexWN = index;

  000da	8b 45 10	 mov	 eax, DWORD PTR _index$[ebp]
  000dd	a3 00 00 00 00	 mov	 DWORD PTR ?indexWN@@3HA, eax ; indexWN

; 4625 : 		idWN = id;

  000e2	8b 45 14	 mov	 eax, DWORD PTR _id$[ebp]
  000e5	a3 00 00 00 00	 mov	 DWORD PTR ?idWN@@3HA, eax ; idWN

; 4626 : 
; 4627 : 		buyOffFlag = 0;

  000ea	33 c0		 xor	 eax, eax
  000ec	89 0d 00 00 00
	00		 mov	 DWORD PTR ?windowTypeWN@@3HA, ecx ; windowTypeWN
  000f2	66 a3 00 00 00
	00		 mov	 WORD PTR ?buyOffFlag@@3FA, ax ; buyOffFlag
  000f8	85 ff		 test	 edi, edi

; 4628 : 
; 4629 : 		// ?????î¶
; 4630 : 		if (windowTypeWN == WINDOW_MESSAGETYPE_MESSAGE
; 4631 : 			|| windowTypeWN == WINDOW_MESSAGETYPE_MESSAGEANDLINEINPUT
; 4632 : #ifdef _NEW_MANOR_LAW
; 4633 : 			|| windowTypeWN == WINDOW_FMMESSAGETYPE_MANOR_SCHEDULE	// ææåºå­æè¡

  000fa	0f 84 c9 00 00
	00		 je	 $LN13@openServer
  00100	83 ff 01	 cmp	 edi, 1
  00103	0f 84 c0 00 00
	00		 je	 $LN13@openServer
  00109	83 ff 2d	 cmp	 edi, 45			; 0000002dH
  0010c	0f 84 b7 00 00
	00		 je	 $LN13@openServer

; 4641 : 		}
; 4642 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_SELECT)

  00112	83 ff 02	 cmp	 edi, 2
  00115	75 0b		 jne	 SHORT $LN14@openServer

; 4643 : 		{
; 4644 : 			// î±î¶
; 4645 : 			initServerWindowType1(data);

  00117	56		 push	 esi
  00118	e8 00 00 00 00	 call	 ?initServerWindowType1@@YAXPAD@Z ; initServerWindowType1

; 4646 : 		}

  0011d	e9 ad 00 00 00	 jmp	 $LN111@openServer
$LN14@openServer:

; 4647 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMENU)

  00122	83 ff 06	 cmp	 edi, 6
  00125	75 0b		 jne	 SHORT $LN16@openServer

; 4648 : 		{
; 4649 : 			// ????î??????
; 4650 : 			initServerWindowType2(data);

  00127	56		 push	 esi
  00128	e8 00 00 00 00	 call	 ?initServerWindowType2@@YAXPAD@Z ; initServerWindowType2

; 4651 : 		}

  0012d	e9 9d 00 00 00	 jmp	 $LN111@openServer
$LN16@openServer:

; 4652 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMAIN) {

  00132	83 ff 07	 cmp	 edi, 7
  00135	75 0b		 jne	 SHORT $LN18@openServer

; 4653 : 			initServerWindowType3(data);

  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 ?initServerWindowType3@@YAXPAD@Z ; initServerWindowType3

; 4654 : 		}

  0013d	e9 8d 00 00 00	 jmp	 $LN111@openServer
$LN18@openServer:

; 4655 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN)

  00142	83 ff 08	 cmp	 edi, 8
  00145	75 0f		 jne	 SHORT $LN20@openServer

; 4656 : 		{
; 4657 : 			// ????î??????
; 4658 : 			initServerWindowType3(data);

  00147	56		 push	 esi
  00148	e8 00 00 00 00	 call	 ?initServerWindowType3@@YAXPAD@Z ; initServerWindowType3

; 4659 : 			buyOffFlag = 1;

  0014d	66 89 1d 00 00
	00 00		 mov	 WORD PTR ?buyOffFlag@@3FA, bx ; buyOffFlag

; 4660 : 		}

  00154	eb 79		 jmp	 SHORT $LN111@openServer
$LN20@openServer:

; 4661 : 		else
; 4662 : 			// ?????????????
; 4663 : 			if (windowTypeWN == WINDOW_MESSAGETYPE_PETSKILLSHOP)

  00156	83 ff 09	 cmp	 edi, 9
  00159	75 08		 jne	 SHORT $LN22@openServer

; 4664 : 			{
; 4665 : 				initServerWindowType5(data);

  0015b	56		 push	 esi
  0015c	e8 00 00 00 00	 call	 ?initServerWindowType5@@YAXPAD@Z ; initServerWindowType5

; 4666 : 			}

  00161	eb 6c		 jmp	 SHORT $LN111@openServer
$LN22@openServer:

; 4667 : 			else
; 4668 : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸æè½
; 4669 : 				//	if( windowTypeWN == WINDOW_MESSAGETYPE_PROFESSIONSHOP   || windowTypeWN == 42)		{
; 4670 : 				if (windowTypeWN == WINDOW_MESSAGETYPE_PROFESSIONSHOP) {

  00163	83 ff 2a	 cmp	 edi, 42			; 0000002aH
  00166	75 0e		 jne	 SHORT $LN24@openServer

; 4671 : 					//JL fix èä¸æè½ä¼ æ¥çæ¯windowtype = 42,å¼ºå¶æ¹ä¸º41
; 4672 : 					windowTypeWN = WINDOW_MESSAGETYPE_PROFESSIONSHOP;
; 4673 : 
; 4674 : 
; 4675 : 					initServerWindowProfession(data);

  00168	56		 push	 esi
  00169	89 3d 00 00 00
	00		 mov	 DWORD PTR ?windowTypeWN@@3HA, edi ; windowTypeWN
  0016f	e8 00 00 00 00	 call	 ?initServerWindowProfession@@YAXPAD@Z ; initServerWindowProfession

; 4676 : 				}

  00174	eb 59		 jmp	 SHORT $LN111@openServer
$LN24@openServer:

; 4677 : 				else
; 4678 : #endif
; 4679 : #ifdef _NPC_WELFARE_2				// WON ADD èä¸NPC-2
; 4680 : 					if (windowTypeWN == WINDOW_MESSAGETYPE_PROFESSIONSHOP2)
; 4681 : 					{
; 4682 : 						initServerWindowProfession2(data);
; 4683 : 					}
; 4684 : 					else
; 4685 : #endif
; 4686 : #ifdef _PETSKILL_CANNEDFOOD
; 4687 : 						if (windowTypeWN == WINDOWS_MESSAGETYPE_PETSKILLSHOW) {

  00176	83 ff 29	 cmp	 edi, 41			; 00000029H
  00179	75 08		 jne	 SHORT $LN26@openServer

; 4688 : 							initPetSkillWindowType1(data);

  0017b	56		 push	 esi
  0017c	e8 00 00 00 00	 call	 ?initPetSkillWindowType1@@YAXPAD@Z ; initPetSkillWindowType1

; 4689 : 					}

  00181	eb 4c		 jmp	 SHORT $LN111@openServer
$LN26@openServer:

; 4690 : 						else
; 4691 : #endif
; 4692 : 							// ?îî??î«???????
; 4693 : 							if (windowTypeWN == WINDOW_MESSAGETYPE_WIDEMESSAGE
; 4694 : 								|| windowTypeWN == WINDOW_MESSAGETYPE_WIDEMESSAGEANDLINEINPUT)

  00183	83 ff 0a	 cmp	 edi, 10			; 0000000aH
  00186	74 39		 je	 SHORT $LN30@openServer
  00188	83 ff 0b	 cmp	 edi, 11			; 0000000bH
  0018b	74 34		 je	 SHORT $LN30@openServer

; 4701 : 							else
; 4702 : 								// ????????????????
; 4703 : 								if (windowTypeWN == WINDOW_MESSAGETYPE_POOLITEMSHOPMAIN) {

  0018d	83 ff 0d	 cmp	 edi, 13			; 0000000dH
  00190	75 08		 jne	 SHORT $LN31@openServer

; 4704 : 									initServerWindowType6(data);

  00192	56		 push	 esi
  00193	e8 00 00 00 00	 call	 ?initServerWindowType6@@YAXPAD@Z ; initServerWindowType6

; 4705 : 								}

  00198	eb 35		 jmp	 SHORT $LN111@openServer
$LN31@openServer:

; 4706 : 								else
; 4707 : 									// ????????????????????
; 4708 : 									if (windowTypeWN == WINDOW_MESSAGETYPE_POOLITEMSHOPMENU)

  0019a	83 ff 0c	 cmp	 edi, 12			; 0000000cH
  0019d	75 08		 jne	 SHORT $LN33@openServer

; 4709 : 									{
; 4710 : 										initServerWindowType7(data);

  0019f	56		 push	 esi
  001a0	e8 00 00 00 00	 call	 ?initServerWindowType7@@YAXPAD@Z ; initServerWindowType7

; 4711 : 									}

  001a5	eb 28		 jmp	 SHORT $LN111@openServer
$LN33@openServer:

; 4712 : 									else
; 4713 : 										// Robin 0518 Family
; 4714 : 										if (windowTypeWN == WINDOW_MESSAGETYPE_FAMILYADD)

  001a7	83 ff 0e	 cmp	 edi, 14			; 0000000eH
  001aa	75 08		 jne	 SHORT $LN35@openServer

; 4715 : 										{
; 4716 : 											initFamilyAddWN(data);

  001ac	56		 push	 esi
  001ad	e8 00 00 00 00	 call	 ?initFamilyAddWN@@YAXPAD@Z ; initFamilyAddWN

; 4717 : 										}

  001b2	eb 1b		 jmp	 SHORT $LN111@openServer
$LN35@openServer:

; 4718 : 
; 4719 : #ifdef _BLACK_MARKET
; 4720 : 										else
; 4721 : 											if (windowTypeWN == WINDOW_MESSAGETYPE_BLACKMARKET)
; 4722 : 											{
; 4723 : 												initBlackMarket(data);
; 4724 : 											}
; 4725 : #endif
; 4726 : #ifdef _ADD_FAMILY_TAX			   // WON ADD å¢å åºå­ç¨æ¶
; 4727 : 											else
; 4728 : 												if (windowTypeWN == WINDOWS_MESSAGETYPE_FAMILY_TAX)
; 4729 : 												{
; 4730 : 													initServerWindowType0(data);
; 4731 : 												}
; 4732 : #endif
; 4733 : 												else
; 4734 : 													if (windowTypeWN == WINDOW_MESSAGETYPE_FAMILYJOIN)

  001b4	83 ff 0f	 cmp	 edi, 15			; 0000000fH
  001b7	75 1f		 jne	 SHORT $LN37@openServer

; 4735 : 													{
; 4736 : 														initFamilyList(data);

  001b9	56		 push	 esi
  001ba	e8 00 00 00 00	 call	 ?initFamilyList@@YAXPAD@Z ; initFamilyList
  001bf	eb 0e		 jmp	 SHORT $LN111@openServer
$LN30@openServer:

; 4695 : 							{
; 4696 : 								// ???
; 4697 : 								// ???????
; 4698 : 								// ????????î¼?
; 4699 : 								initServerWindowType4(data);

  001c1	56		 push	 esi
  001c2	e8 00 00 00 00	 call	 ?initServerWindowType4@@YAXPAD@Z ; initServerWindowType4

; 4700 : 							}

  001c7	eb 06		 jmp	 SHORT $LN111@openServer
$LN13@openServer:

; 4634 : #endif
; 4635 : 			)
; 4636 : 		{
; 4637 : 			// ???
; 4638 : 			// ???????
; 4639 : 			// ????????î¼?
; 4640 : 			initServerWindowType0(data);

  001c9	56		 push	 esi
  001ca	e8 00 00 00 00	 call	 ?initServerWindowType0@@YAXPAD@Z ; initServerWindowType0
$LN111@openServer:

; 4737 : 													}
; 4738 : 
; 4739 : 		if (windowTypeWN == WINDOW_MESSAGETYPE_FAMILYDETAIL)

  001cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  001d5	83 c4 04	 add	 esp, 4
$LN37@openServer:
  001d8	83 f9 1f	 cmp	 ecx, 31			; 0000001fH
  001db	75 0b		 jne	 SHORT $LN38@openServer

; 4740 : 		{
; 4741 : 			initMineFamilyDetail(data);

  001dd	56		 push	 esi
  001de	e8 00 00 00 00	 call	 ?initMineFamilyDetail@@YAXPAD@Z ; initMineFamilyDetail

; 4742 : 		}

  001e3	e9 bf 01 00 00	 jmp	 $LN112@openServer
$LN38@openServer:

; 4743 : 
; 4744 : 		// Shan Family Dengon
; 4745 : 		// Member List
; 4746 : 		else
; 4747 : 			if (windowTypeWN == WINDOW_FMMESSAGETYPE_SELECT)

  001e8	83 f9 12	 cmp	 ecx, 18			; 00000012H
  001eb	75 0b		 jne	 SHORT $LN40@openServer

; 4748 : 			{
; 4749 : 				initFMWindowType(data);

  001ed	56		 push	 esi
  001ee	e8 00 00 00 00	 call	 ?initFMWindowType@@YAXPAD@Z ; initFMWindowType

; 4750 : 			}

  001f3	e9 af 01 00 00	 jmp	 $LN112@openServer
$LN40@openServer:

; 4751 : #ifdef _FMVER21
; 4752 : 		// TOP 30 DP List
; 4753 : 			else
; 4754 : 				if (windowTypeWN == WINDOW_FMMESSAGETYPE_TOP30DP)

  001f8	83 f9 16	 cmp	 ecx, 22			; 00000016H
  001fb	75 10		 jne	 SHORT $LN42@openServer

; 4755 : 				{
; 4756 : 					initFMWindowType4(data, 0);

  001fd	6a 00		 push	 0
  001ff	56		 push	 esi
  00200	e8 00 00 00 00	 call	 ?initFMWindowType4@@YAXPADH@Z ; initFMWindowType4
  00205	83 c4 08	 add	 esp, 8

; 4757 : 				}

  00208	e9 9d 01 00 00	 jmp	 $LN91@openServer
$LN42@openServer:

; 4758 : #endif
; 4759 : #ifdef _NEW_MANOR_LAW
; 4760 : 				else if (windowTypeWN == WINDOW_FMMESSAGETYPE_FM_MEMONTUM) initFMWindowType4(data, 1);

  0020d	83 f9 2c	 cmp	 ecx, 44			; 0000002cH
  00210	75 10		 jne	 SHORT $LN44@openServer
  00212	6a 01		 push	 1
  00214	56		 push	 esi
  00215	e8 00 00 00 00	 call	 ?initFMWindowType4@@YAXPADH@Z ; initFMWindowType4
  0021a	83 c4 08	 add	 esp, 8
  0021d	e9 88 01 00 00	 jmp	 $LN91@openServer
$LN44@openServer:

; 4761 : #endif
; 4762 : 		// Dp List
; 4763 : 				else
; 4764 : #ifdef _NEW_MANOR_LAW
; 4765 : 					if (windowTypeWN == WINDOW_FMMESSAGETYPE_DP || windowTypeWN == WINDOW_FMMESSAGETYPE_10_MEMONTUM)

  00222	83 f9 17	 cmp	 ecx, 23			; 00000017H
  00225	0f 84 76 01 00
	00		 je	 $LN48@openServer
  0022b	83 f9 2b	 cmp	 ecx, 43			; 0000002bH
  0022e	0f 84 6d 01 00
	00		 je	 $LN48@openServer

; 4771 : 	}
; 4772 : 		// Point List
; 4773 : 					else
; 4774 : 						if (windowTypeWN == WINDOW_FMMESSAGETYPE_POINTLIST)

  00234	83 f9 15	 cmp	 ecx, 21			; 00000015H
  00237	75 0b		 jne	 SHORT $LN49@openServer

; 4775 : 						{
; 4776 : 							initFMWindowType2(data);

  00239	56		 push	 esi
  0023a	e8 00 00 00 00	 call	 ?initFMWindowType2@@YAXPAD@Z ; initFMWindowType2

; 4777 : 						}

  0023f	e9 63 01 00 00	 jmp	 $LN112@openServer
$LN49@openServer:

; 4778 : 		// Family Memo
; 4779 : 						else
; 4780 : 							if (windowTypeWN == WINDOW_FMMESSAGETYPE_DENGON)

  00244	83 f9 13	 cmp	 ecx, 19			; 00000013H
  00247	0f 84 4c 01 00
	00		 je	 $LN107@openServer

; 4781 : 							{
; 4782 : 								initFMWindowType1(data);
; 4783 : 							}
; 4784 : 		// Familys Memo
; 4785 : 							else
; 4786 : 								if (windowTypeWN == WINDOW_FMMESSAGETYPE_FMSDENGON)

  0024d	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00250	0f 84 43 01 00
	00		 je	 $LN107@openServer

; 4790 : 								else
; 4791 : 									if (windowTypeWN == WINDOW_MESSAGETYPE_PKSCHEDULELIST)

  00256	83 f9 19	 cmp	 ecx, 25			; 00000019H
  00259	75 0b		 jne	 SHORT $LN55@openServer

; 4792 : 									{
; 4793 : 										initFMPKListWN(data);

  0025b	56		 push	 esi
  0025c	e8 00 00 00 00	 call	 ?initFMPKListWN@@YAXPAD@Z ; initFMPKListWN

; 4794 : 									}

  00261	e9 41 01 00 00	 jmp	 $LN112@openServer
$LN55@openServer:

; 4795 : 									else
; 4796 : 										if (windowTypeWN == WINDOW_MESSAGETYPE_PKSCHEDULESELECTFAMILY)

  00266	83 f9 1a	 cmp	 ecx, 26			; 0000001aH
  00269	75 0b		 jne	 SHORT $LN57@openServer

; 4797 : 										{
; 4798 : 											initFMPKSelectWN(data);

  0026b	56		 push	 esi
  0026c	e8 00 00 00 00	 call	 ?initFMPKSelectWN@@YAXPAD@Z ; initFMPKSelectWN

; 4799 : 										}

  00271	e9 31 01 00 00	 jmp	 $LN112@openServer
$LN57@openServer:

; 4800 : 										else
; 4801 : 											if (windowTypeWN == WINDOW_MESSAGETYPE_PKSCHEDULEDETAIL)

  00276	83 f9 1b	 cmp	 ecx, 27			; 0000001bH
  00279	75 0b		 jne	 SHORT $LN59@openServer

; 4802 : 											{
; 4803 : 												initFMPKDetailWN(data);

  0027b	56		 push	 esi
  0027c	e8 00 00 00 00	 call	 ?initFMPKDetailWN@@YAXPAD@Z ; initFMPKDetailWN

; 4804 : 											}

  00281	e9 21 01 00 00	 jmp	 $LN112@openServer
$LN59@openServer:

; 4805 : 											else
; 4806 : 												if (windowTypeWN == WINDOW_MESSAGETYPE_SHOWRIDEPET)

  00286	83 f9 1e	 cmp	 ecx, 30			; 0000001eH
  00289	75 0a		 jne	 SHORT $LN61@openServer

; 4807 : 												{
; 4808 : 													initShowRidePetWN();

  0028b	e8 00 00 00 00	 call	 ?initShowRidePetWN@@YAXXZ ; initShowRidePetWN

; 4809 : 												}

  00290	e9 15 01 00 00	 jmp	 $LN91@openServer
$LN61@openServer:

; 4810 : 												else
; 4811 : 													if (windowTypeWN == WINDOW_MESSAGETYPE_LOGINMESSAGE)

  00295	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  00298	75 2b		 jne	 SHORT $LN63@openServer

; 4812 : 													{
; 4813 : 														windowTypeWN = -1;

  0029a	ba 00 00 00 00	 mov	 edx, OFFSET ?AnnounceBuf@@3PADA ; AnnounceBuf
  0029f	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 4814 : 														LoginAnnounce = 1;

  002a9	89 1d 00 00 00
	00		 mov	 DWORD PTR ?LoginAnnounce@@3HA, ebx ; LoginAnnounce

; 4815 : 														strcpy(AnnounceBuf, data);

  002af	8b ce		 mov	 ecx, esi
  002b1	2b d6		 sub	 edx, esi
$LL98@openServer:
  002b3	8a 01		 mov	 al, BYTE PTR [ecx]
  002b5	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002b8	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  002bc	84 c0		 test	 al, al
  002be	75 f3		 jne	 SHORT $LL98@openServer

; 4816 : 														//windowTypeWN = WINDOW_MESSAGETYPE_MESSAGE;
; 4817 : 														//initServerWindowType0( data );
; 4818 : 													}

  002c0	e9 e5 00 00 00	 jmp	 $LN91@openServer
$LN63@openServer:

; 4819 : 													else if (windowTypeWN == WINDOW_MESSAGETYPE_LEADERSELECT) {

  002c5	83 f9 20	 cmp	 ecx, 32			; 00000020H
  002c8	75 0b		 jne	 SHORT $LN65@openServer

; 4820 : 														initFamilyLeaderChange(data);

  002ca	56		 push	 esi
  002cb	e8 00 00 00 00	 call	 ?initFamilyLeaderChange@@YAXPAD@Z ; initFamilyLeaderChange

; 4821 : 													}

  002d0	e9 d2 00 00 00	 jmp	 $LN112@openServer
$LN65@openServer:

; 4822 : 													else if (windowTypeWN == WINDOW_MESSAGETYPE_LEADERSELECTA) {

  002d5	83 f9 22	 cmp	 ecx, 34			; 00000022H
  002d8	75 0b		 jne	 SHORT $LN67@openServer

; 4823 : 														initFamilyLeaderChangeA(data);

  002da	56		 push	 esi
  002db	e8 00 00 00 00	 call	 ?initFamilyLeaderChangeA@@YAXPAD@Z ; initFamilyLeaderChangeA

; 4824 : 													}

  002e0	e9 c2 00 00 00	 jmp	 $LN112@openServer
$LN67@openServer:

; 4825 : #ifdef _NPC_SELLSTH
; 4826 : 		if (windowTypeWN == WINDOWS_MESSAGETYPE_SELLSTHMENU) {
; 4827 : 			InitSellSth_Menu(data);
; 4828 : 		}
; 4829 : 		else if (windowTypeWN == WINDOWS_MESSAGETYPE_SELLSTHVIEW) {
; 4830 : 			InitSellSth_View(data);
; 4831 : 		}
; 4832 : 		else if (windowTypeWN == WINDOWS_MESSAGETYPE_SELLSTHSELL) {
; 4833 : 			InitSellSth_Sell(data);
; 4834 : 		}
; 4835 : #endif
; 4836 : 
; 4837 : 		// Terry add 2001/12/06
; 4838 : 		// ä¼ç¸å¤§é--ä¸ªäººé¶è¡[ìë´ ëë¥âê°ì¸ ìí]
; 4839 : #ifdef __EDEN_EFFECT
; 4840 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_BANK)

  002e5	83 f9 18	 cmp	 ecx, 24			; 00000018H
  002e8	75 3b		 jne	 SHORT $LN69@openServer

; 4841 : 		{
; 4842 : 			// è®¾å®ç©å®¶èº«ä¸çé¶è¡å­æ¬¾[íë ì´ì´ ìí ìê¸ì¡ ì¤ì ]
; 4843 : 			pc.personal_bankgold = atoi(data);

  002ea	56		 push	 esi
  002eb	e8 00 00 00 00	 call	 _atoi
  002f0	83 c4 04	 add	 esp, 4
  002f3	a3 14 51 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20756, eax

; 4844 : 			if (pc.personal_bankgold < 0)			          					pc.personal_bankgold = 0;

  002f8	85 c0		 test	 eax, eax
  002fa	79 0f		 jns	 SHORT $LN71@openServer
  002fc	c7 05 14 51 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20756, 0
  00306	e9 9f 00 00 00	 jmp	 $LN91@openServer
$LN71@openServer:

; 4845 : 			else if (pc.personal_bankgold > MAX_PERSONAL_BANKGOLD) pc.personal_bankgold = MAX_PERSONAL_BANKGOLD;

  0030b	3d 80 f0 fa 02	 cmp	 eax, 50000000		; 02faf080H
  00310	0f 8e 94 00 00
	00		 jle	 $LN91@openServer
  00316	c7 05 14 51 00
	00 80 f0 fa 02	 mov	 DWORD PTR ?pc@@3UPC@@A+20756, 50000000 ; 02faf080H

; 4846 : 		}

  00320	e9 85 00 00 00	 jmp	 $LN91@openServer
$LN69@openServer:

; 4847 : #endif
; 4848 : 		// Terry end
; 4849 : 		// Terry add 2002/01/03
; 4850 : #ifdef __EDEN_AUCTION
; 4851 : 		else if (windowTypeWN >= WINDOW_MESSAGETYPE_AUCTIONNEW &&

  00325	8d 41 dd	 lea	 eax, DWORD PTR [ecx-35]
  00328	83 f8 04	 cmp	 eax, 4
  0032b	77 25		 ja	 SHORT $LN74@openServer

; 4852 : 			windowTypeWN <= WINDOW_MESSAGETYPE_AUCTIONLIST_MODIFY)
; 4853 : 		{
; 4854 : 			switch (windowTypeWN)

  0032d	83 c1 dc	 add	 ecx, -36		; ffffffdcH
  00330	83 f9 03	 cmp	 ecx, 3
  00333	77 75		 ja	 SHORT $LN91@openServer
  00335	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN108@openServer[ecx*4]
$LN77@openServer:

; 4855 : 			{
; 4856 : 				// å¼å¯å§æè§çª[ìë¢°ì°½ ì´ê¸°]
; 4857 : 			case WINDOW_MESSAGETYPE_AUCTIONNEW:
; 4858 : 				break;
; 4859 : 				// å¼å¯å§æåè¡¨è§çª[ìë¢° ë¦¬ì¤í¸ ì°½ ì´ê¸°]
; 4860 : 			case WINDOW_MESSAGETYPE_AUCTIONLIST_BUY:
; 4861 : 			case WINDOW_MESSAGETYPE_AUCTIONLIST_MODIFY:
; 4862 : 				szpALD = data;

  0033c	89 35 00 00 00
	00		 mov	 DWORD PTR ?szpALD@@3PADA, esi ; szpALD

; 4863 : 				//szpALD = TESTDATA;
; 4864 : 				bNewData = TRUE;

  00342	89 1d 00 00 00
	00		 mov	 DWORD PTR ?bNewData@@3HA, ebx ; bNewData

; 4865 : 				break;

  00348	eb 60		 jmp	 SHORT $LN91@openServer
$LN79@openServer:

; 4866 : 				// å¼å¯å§æè¯¦ç»åå®¹è§çª[ìë¢° ì¸ë¶ë´ì©ì°½ ì´ê¸°]
; 4867 : 			case WINDOW_MESSAGETYPE_AUCTIONSURVEY:
; 4868 : 				// å¼å¯ä¿®æ¹å§æåå®¹è§çª[ìë¢° ë´ì© í¸ì§ì°½ ì´ê¸°
; 4869 : 			case WINDOW_MESSAGETYPE_AUCTIONMODIFY:
; 4870 : 				szpALD = data;

  0034a	89 35 00 00 00
	00		 mov	 DWORD PTR ?szpALD@@3PADA, esi ; szpALD

; 4871 : 				break;
; 4872 : 			}
; 4873 : 		}

  00350	eb 58		 jmp	 SHORT $LN91@openServer
$LN74@openServer:

; 4874 : #endif
; 4875 : 		// Terry end
; 4876 : 
; 4877 : #ifdef _MOUSE_DBL_CLICK
; 4878 : 		else
; 4879 : 			if (windowTypeWN == WINDOW_MESSAGETYPE_MOUSEGETNAME)

  00352	83 f9 67	 cmp	 ecx, 103		; 00000067H
  00355	75 08		 jne	 SHORT $LN81@openServer

; 4880 : 			{
; 4881 : 				initMouseGetNameWN(data);

  00357	56		 push	 esi
  00358	e8 00 00 00 00	 call	 ?initMouseGetNameWN@@YAXPAD@Z ; initMouseGetNameWN

; 4882 : 			}

  0035d	eb 48		 jmp	 SHORT $LN112@openServer
$LN81@openServer:

; 4883 : #endif
; 4884 : 
; 4885 : #ifdef _CONTRACT
; 4886 : 			else
; 4887 : 				if (windowTypeWN == WINDOW_MESSAGETYPE_CONTRACT)

  0035f	83 f9 68	 cmp	 ecx, 104		; 00000068H
  00362	75 08		 jne	 SHORT $LN83@openServer

; 4888 : 				{
; 4889 : 					initContractWN(data);

  00364	56		 push	 esi
  00365	e8 00 00 00 00	 call	 ?initContractWN@@YAXPAD@Z ; initContractWN

; 4890 : 				}

  0036a	eb 3b		 jmp	 SHORT $LN112@openServer
$LN83@openServer:

; 4891 : #endif
; 4892 : 
; 4893 : #ifdef _RACEMAN
; 4894 : 				else
; 4895 : 					if (windowTypeWN == WINDOW_MESSAGETYPE_RACEMAN_RANK)

  0036c	83 f9 69	 cmp	 ecx, 105		; 00000069H
  0036f	75 08		 jne	 SHORT $LN85@openServer

; 4896 : 					{
; 4897 : 						initRacemanRankWN(data);

  00371	56		 push	 esi
  00372	e8 00 00 00 00	 call	 ?initRacemanRankWN@@YAXPAD@Z ; initRacemanRankWN

; 4898 : 					} 

  00377	eb 2e		 jmp	 SHORT $LN112@openServer
$LN85@openServer:

; 4899 : #endif
; 4900 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_VIPSHOP_MENU)

  00379	81 f9 c8 00 00
	00		 cmp	 ecx, 200		; 000000c8H
  0037f	74 10		 je	 SHORT $LN106@openServer

; 4901 : 		{
; 4902 : 			initServerWindowType1(data);
; 4903 : 		}
; 4904 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_WARP_MENU)

  00381	81 f9 c9 00 00
	00		 cmp	 ecx, 201		; 000000c9H
  00387	74 08		 je	 SHORT $LN106@openServer

; 4905 : 		{
; 4906 : 			initServerWindowType1(data);
; 4907 : 		}
; 4908 : 		else if (windowTypeWN == WINDOW_MESSAGETYPE_WARP_MAIN)

  00389	81 f9 ca 00 00
	00		 cmp	 ecx, 202		; 000000caH
  0038f	75 19		 jne	 SHORT $LN91@openServer
$LN106@openServer:

; 4909 : 		{
; 4910 : 			initServerWindowType1(data);
; 4911 : 		}
; 4912 : 
; 4913 : 		if (CheckMenuFlag())

  00391	56		 push	 esi
  00392	e8 00 00 00 00	 call	 ?initServerWindowType1@@YAXPAD@Z ; initServerWindowType1
  00397	eb 0e		 jmp	 SHORT $LN112@openServer
$LN107@openServer:

; 4787 : 								{
; 4788 : 									initFMWindowType1(data);

  00399	56		 push	 esi
  0039a	e8 00 00 00 00	 call	 ?initFMWindowType1@@YAXPAD@Z ; initFMWindowType1

; 4789 : 								}

  0039f	eb 06		 jmp	 SHORT $LN112@openServer
$LN48@openServer:

; 4766 : #else
; 4767 : 					if (windowTypeWN == WINDOW_FMMESSAGETYPE_DP)
; 4768 : #endif
; 4769 : 					{
; 4770 : 						initFMWindowType3(data);

  003a1	56		 push	 esi
  003a2	e8 00 00 00 00	 call	 ?initFMWindowType3@@YAXPAD@Z ; initFMWindowType3
$LN112@openServer:

; 4909 : 		{
; 4910 : 			initServerWindowType1(data);
; 4911 : 		}
; 4912 : 
; 4913 : 		if (CheckMenuFlag())

  003a7	83 c4 04	 add	 esp, 4
$LN91@openServer:
  003aa	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  003af	85 c0		 test	 eax, eax
  003b1	74 05		 je	 SHORT $LN92@openServer

; 4914 : 		{
; 4915 : 			InitMenu2();

  003b3	e8 00 00 00 00	 call	 ?InitMenu2@@YAXXZ	; InitMenu2
$LN92@openServer:

; 4916 : 		}
; 4917 : 
; 4918 : 		closeEtcSwitch();

  003b8	e8 00 00 00 00	 call	 ?closeEtcSwitch@@YAXXZ	; closeEtcSwitch

; 4919 : 		closeCharActionAnimeChange();

  003bd	e8 00 00 00 00	 call	 ?closeCharActionAnimeChange@@YAXXZ ; closeCharActionAnimeChange

; 4920 : 		closeJoinChannelWN();

  003c2	e8 00 00 00 00	 call	 ?closeJoinChannelWN@@YAXXZ ; closeJoinChannelWN
$LN8@openServer:

; 4921 : 		}
; 4922 :  
; 4923 : 
; 4924 : 
; 4925 : #ifdef _WIN_LUAJIT_
; 4926 : 	if (windowtype >= 1000) {

  003c7	81 ff e8 03 00
	00		 cmp	 edi, 1000		; 000003e8H
  003cd	7c 1e		 jl	 SHORT $LN93@openServer

; 4927 : 		cloasewindows = 0;
; 4928 : 		WinLua = FindWinIntLua(windowtype, data);

  003cf	56		 push	 esi
  003d0	57		 push	 edi
  003d1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cloasewindows@@3HA, 0 ; cloasewindows
  003db	e8 00 00 00 00	 call	 ?FindWinIntLua@@YAPAUlua_State@@HPAD@Z ; FindWinIntLua
  003e0	83 c4 08	 add	 esp, 8
  003e3	a3 00 00 00 00	 mov	 DWORD PTR ?WinLua@@3PAUlua_State@@A, eax ; WinLua
  003e8	5e		 pop	 esi
  003e9	5b		 pop	 ebx
  003ea	5f		 pop	 edi

; 4932 : 			cloasewindows = 1;
; 4933 : 		}
; 4934 : 	}
; 4935 : #endif
; 4936 : 
; 4937 : }

  003eb	5d		 pop	 ebp
  003ec	c3		 ret	 0
$LN93@openServer:

; 4929 : 	}
; 4930 : 	else {
; 4931 : 		if (windows.ptActMenuWin != NULL) {

  003ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cloasewindows@@3HA ; cloasewindows
  003f2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?windows@@3USA_WINDOWS@@A, 0
  003f9	5e		 pop	 esi
  003fa	0f 45 c3	 cmovne	 eax, ebx
  003fd	5b		 pop	 ebx
  003fe	a3 00 00 00 00	 mov	 DWORD PTR ?cloasewindows@@3HA, eax ; cloasewindows
  00403	5f		 pop	 edi

; 4932 : 			cloasewindows = 1;
; 4933 : 		}
; 4934 : 	}
; 4935 : #endif
; 4936 : 
; 4937 : }

  00404	5d		 pop	 ebp
  00405	c3		 ret	 0
  00406	66 90		 npad	 2
$LN108@openServer:
  00408	00 00 00 00	 DD	 $LN77@openServer
  0040c	00 00 00 00	 DD	 $LN79@openServer
  00410	00 00 00 00	 DD	 $LN79@openServer
  00414	00 00 00 00	 DD	 $LN77@openServer
?openServerWindow@@YAXHHHHPAD@Z ENDP			; openServerWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?initOpenServerWindow@@YAXXZ
_TEXT	SEGMENT
?initOpenServerWindow@@YAXXZ PROC			; initOpenServerWindow, COMDAT

; 4567 : 	windowTypeWN = -1;

  00000	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN

; 4568 : 	ptActMenuWin = NULL;

  0000a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@@3PAUaction@@A, 0 ; ptActMenuWin

; 4569 : }

  00014	c3		 ret	 0
?initOpenServerWindow@@YAXXZ ENDP			; initOpenServerWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?characterLogoutProc@@YAXXZ
_TEXT	SEGMENT
?characterLogoutProc@@YAXXZ PROC			; characterLogoutProc, COMDAT

; 4073 : 	int ret;
; 4074 : 	static char msg[256];
; 4075 : 
; 4076 : 	if (SubProcNo == 0) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00005	85 c0		 test	 eax, eax
  00007	75 59		 jne	 SHORT $LN2@characterL

; 4077 : 		logOutFlag = TRUE;

  00009	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?logOutFlag@@3HA, 1 ; logOutFlag

; 4078 : 
; 4079 : 		if (!produce_logout()) {		//?î???

  00013	e8 00 00 00 00	 call	 ?produce_logout@@YAHXZ	; produce_logout
  00018	85 c0		 test	 eax, eax
  0001a	0f 84 39 01 00
	00		 je	 $LN1@characterL

; 4080 : 			return;
; 4081 : 		}
; 4082 : #ifdef __SKYISLAND
; 4083 : 		extern void SkyIslandRelease();
; 4084 : 		SkyIslandRelease();

  00020	e8 00 00 00 00	 call	 ?SkyIslandRelease@@YAXXZ ; SkyIslandRelease

; 4085 : #endif
; 4086 : 		//???î±????
; 4087 : 		produce_vct_no = 0;

  00025	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?produce_vct_no@@3HA, 0

; 4088 : 
; 4089 : #ifdef _AniRandom   // Syu ADD éæºäº§çç¯å¢å¨ç»
; 4090 : 		extern void AniRandomRelease();
; 4091 : 		AniRandomRelease();

  0002f	e8 00 00 00 00	 call	 ?AniRandomRelease@@YAXXZ ; AniRandomRelease

; 4092 : #endif
; 4093 : #ifdef _AniCrossFrame	   // Syu ADD å¨ç»å±æ¸¸è¿ç»é¢çç©
; 4094 : 		extern void crossAniRelease();
; 4095 : 		crossAniRelease();

  00034	e8 00 00 00 00	 call	 ?crossAniRelease@@YAXXZ	; crossAniRelease

; 4096 : #endif
; 4097 : #ifdef _AniCharBubble	   // Syu ADD å¨ç»å±äººç©ååºæ°æ³¡
; 4098 : 		extern void CharbubbleRelease();
; 4099 : 		CharbubbleRelease();

  00039	e8 00 00 00 00	 call	 ?CharbubbleRelease@@YAXXZ ; CharbubbleRelease

; 4100 : #endif
; 4101 : #ifdef _AniImmobile	 // Syu ADD å®ç¹äº§çç¹å®å¨ç»
; 4102 : 		extern void ImmobileAniRelease();
; 4103 : 		ImmobileAniRelease();

  0003e	e8 00 00 00 00	 call	 ?ImmobileAniRelease@@YAXXZ ; ImmobileAniRelease

; 4104 : #endif
; 4105 : #ifdef _SPECIALSPACEANIM	// Syu ADD ç¹æ®åºæ¯å¨ç»éç½®
; 4106 : 		extern void ReleaseSpecAnim();
; 4107 : 		ReleaseSpecAnim();

  00043	e8 00 00 00 00	 call	 ?ReleaseSpecAnim@@YAXXZ	; ReleaseSpecAnim

; 4108 : #endif
; 4109 : 		// PC????
; 4110 : 		resetPc();

  00048	e8 00 00 00 00	 call	 ?resetPc@@YAXXZ		; resetPc

; 4111 : 
; 4112 : 		// ?????????????
; 4113 : 		initCharObj();

  0004d	e8 00 00 00 00	 call	 ?initCharObj@@YAXXZ	; initCharObj

; 4114 : 
; 4115 : 		// ??????î
; 4116 : 		DeathAllAction();

  00052	e8 00 00 00 00	 call	 ?DeathAllAction@@YAXXZ	; DeathAllAction

; 4117 : 
; 4118 : 		// ???????
; 4119 : //		fade_out_bgm();
; 4120 : 
; 4121 : #ifdef _STONDEBUG_
; 4122 : 		if (!offlineFlag)
; 4123 : 		{
; 4124 : 			SubProcNo++;
; 4125 : 		}
; 4126 : 		else
; 4127 : 		{
; 4128 : 			// ??????ï¼³? WM_CLOSE ??????????
; 4129 : 			PostMessage(hWnd, WM_CLOSE, 0, 0L);
; 4130 : 		}
; 4131 : #else
; 4132 : 		SubProcNo++;

  00057	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  0005c	40		 inc	 eax
  0005d	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo
$LN2@characterL:

; 4133 : #endif
; 4134 : 	}
; 4135 : 
; 4136 : 	if (SubProcNo == 1)

  00062	83 f8 01	 cmp	 eax, 1
  00065	75 19		 jne	 SHORT $LN4@characterL

; 4137 : 	{
; 4138 : 		initCharLogout();

  00067	e8 00 00 00 00	 call	 ?initCharLogout@@YAXXZ	; initCharLogout

; 4139 : 		SubProcNo++;

  0006c	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 2 ; SubProcNo

; 4180 : 		{
; 4181 : 			// ï¼¯ï¼«????????
; 4182 : 			//cary
; 4183 : 			ChangeProc(PROC_ID_PASSWORD);	// ?????
; 4184 : 			SubProcNo = 0;
; 4185 : 		}
; 4186 : 	}
; 4187 : 
; 4188 : 	RunAction();			// ?????????

  00076	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 4189 : 	StockTaskDispBuffer();	// ???î¸î????????????

  0007b	e9 00 00 00 00	 jmp	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
$LN4@characterL:

; 4140 : 	}
; 4141 : 	else
; 4142 : 		if (SubProcNo == 2) {

  00080	83 f8 02	 cmp	 eax, 2
  00083	0f 85 86 00 00
	00		 jne	 $LN11@characterL

; 4143 : 			ret = charLogout();

  00089	e8 00 00 00 00	 call	 ?charLogout@@YAHXZ	; charLogout

; 4144 : 			if (ret == 1) {

  0008e	83 f8 01	 cmp	 eax, 1
  00091	75 0f		 jne	 SHORT $LN7@characterL

; 4145 : 				cleanupNetwork();

  00093	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 4146 : 				DeathAllAction();

  00098	e8 00 00 00 00	 call	 ?DeathAllAction@@YAXXZ	; DeathAllAction

; 4147 : 				//cary
; 4148 : 				ChangeProc(PROC_ID_PASSWORD);
; 4149 : 				SubProcNo = 0;
; 4150 : 			}

  0009d	e9 99 00 00 00	 jmp	 $LN20@characterL
$LN7@characterL:

; 4151 : 			else
; 4152 : 				// ??????
; 4153 : 				if (ret == -1)

  000a2	83 f8 ff	 cmp	 eax, -1
  000a5	75 24		 jne	 SHORT $LN9@characterL

; 4154 : 				{
; 4155 : 					// ?????????
; 4156 : 					cleanupNetwork();

  000a7	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 4157 : 					SubProcNo = 100;
; 4158 : 					strcpy(msg, NET_ERRMSG_LOGOUTTIMEOUT);

  000ac	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BA@KHEOLEJA@?T?t?u?s?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@
  000b3	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLogoutProc@@YAXXZ@4PADA, xmm0

; 4173 : 	{
; 4174 : 		initCommonMsgWin();

  000ba	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 4175 : 		SubProcNo++;

  000bf	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 4176 : 	}
; 4177 : 	if (SubProcNo == 101)

  000c9	eb 5f		 jmp	 SHORT $LN17@characterL
$LN9@characterL:

; 4159 : 				}
; 4160 : 				else
; 4161 : 					// ???
; 4162 : 					if (ret == -2)

  000cb	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  000ce	75 3a		 jne	 SHORT $LN18@characterL

; 4163 : 					{
; 4164 : 						// ?????????
; 4165 : 						cleanupNetwork();

  000d0	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 4166 : 						SubProcNo = 100;
; 4167 : 						strcpy(msg, "ì²´í¬ ìì ì²ë¦¬ ì¤í¨ã");

  000d5	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@+16
  000da	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@
  000e1	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLogoutProc@@YAXXZ@4PADA+16, eax
  000e6	66 a1 14 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BG@HHBIODFI@?C?$LM?E?$KJ?5?$LO?F?$LP?t?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$KB?$KD@+20
  000ec	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLogoutProc@@YAXXZ@4PADA, xmm0
  000f3	66 a3 14 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLogoutProc@@YAXXZ@4PADA+20, ax

; 4173 : 	{
; 4174 : 		initCommonMsgWin();

  000f9	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 4175 : 		SubProcNo++;

  000fe	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 4176 : 	}
; 4177 : 	if (SubProcNo == 101)

  00108	eb 20		 jmp	 SHORT $LN17@characterL
$LN18@characterL:

; 4159 : 				}
; 4160 : 				else
; 4161 : 					// ???
; 4162 : 					if (ret == -2)

  0010a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN11@characterL:

; 4168 : 					}
; 4169 : 		}
; 4170 : 
; 4171 : 	// ???î¸î
; 4172 : 	if (SubProcNo == 100)

  0010f	83 f8 64	 cmp	 eax, 100		; 00000064H
  00112	75 11		 jne	 SHORT $LN12@characterL

; 4173 : 	{
; 4174 : 		initCommonMsgWin();

  00114	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 4175 : 		SubProcNo++;

  00119	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 4176 : 	}
; 4177 : 	if (SubProcNo == 101)

  00123	eb 05		 jmp	 SHORT $LN17@characterL
$LN12@characterL:
  00125	83 f8 65	 cmp	 eax, 101		; 00000065H
  00128	75 25		 jne	 SHORT $LN14@characterL
$LN17@characterL:

; 4178 : 	{
; 4179 : 		if (commonMsgWin(msg))

  0012a	68 00 00 00 00	 push	 OFFSET ?msg@?1??characterLogoutProc@@YAXXZ@4PADA
  0012f	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00134	83 c4 04	 add	 esp, 4
  00137	85 c0		 test	 eax, eax
  00139	74 14		 je	 SHORT $LN14@characterL
$LN20@characterL:

; 4180 : 		{
; 4181 : 			// ï¼¯ï¼«????????
; 4182 : 			//cary
; 4183 : 			ChangeProc(PROC_ID_PASSWORD);	// ?????
; 4184 : 			SubProcNo = 0;
; 4185 : 		}
; 4186 : 	}
; 4187 : 
; 4188 : 	RunAction();			// ?????????

  0013b	6a 01		 push	 1
  0013d	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  00142	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 0 ; SubProcNo
  0014c	83 c4 04	 add	 esp, 4
$LN14@characterL:
  0014f	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 4189 : 	StockTaskDispBuffer();	// ???î¸î????????????

  00154	e9 00 00 00 00	 jmp	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
$LN1@characterL:

; 4190 : }

  00159	c3		 ret	 0
?characterLogoutProc@@YAXXZ ENDP			; characterLogoutProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?makeCharacterProc@@YAXXZ
_TEXT	SEGMENT
_ret$ = -4						; size = 4
?makeCharacterProc@@YAXXZ PROC				; makeCharacterProc, COMDAT

; 2245 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 2246 : 	int ret;
; 2247 : 	if (SubProcNo == 0)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00009	56		 push	 esi
  0000a	85 c0		 test	 eax, eax
  0000c	75 1b		 jne	 SHORT $LN2@makeCharac

; 2248 : 	{
; 2249 : 		initMakeCharacter();
; 2250 : 		SubProcNo++;

  0000e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo

; 2254 : 	{
; 2255 : 		initSelCharGraNo();

  00018	e8 00 00 00 00	 call	 ?initSelCharGraNo@@YAXXZ ; initSelCharGraNo

; 2256 : 		SubProcNo = 3;

  0001d	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 3 ; SubProcNo

; 2257 : 	}

  00027	eb 30		 jmp	 SHORT $LN35@makeCharac
$LN2@makeCharac:

; 2251 : 	}
; 2252 : 
; 2253 : 	if (SubProcNo == 1)

  00029	83 f8 01	 cmp	 eax, 1
  0002c	75 11		 jne	 SHORT $LN3@makeCharac

; 2254 : 	{
; 2255 : 		initSelCharGraNo();

  0002e	e8 00 00 00 00	 call	 ?initSelCharGraNo@@YAXXZ ; initSelCharGraNo

; 2256 : 		SubProcNo = 3;

  00033	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 3 ; SubProcNo

; 2257 : 	}

  0003d	eb 1a		 jmp	 SHORT $LN35@makeCharac
$LN3@makeCharac:

; 2258 : 	else
; 2259 : 		if (SubProcNo == 2)

  0003f	83 f8 02	 cmp	 eax, 2
  00042	75 10		 jne	 SHORT $LN5@makeCharac

; 2260 : 		{
; 2261 : 			initSelCharGraNo2();

  00044	e8 00 00 00 00	 call	 ?initSelCharGraNo2@@YAXXZ ; initSelCharGraNo2

; 2262 : 			SubProcNo++;

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  0004e	40		 inc	 eax
  0004f	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo
$LN5@makeCharac:

; 2263 : 		}
; 2264 : 	if (SubProcNo == 3)

  00054	83 f8 03	 cmp	 eax, 3
  00057	75 3f		 jne	 SHORT $LN44@makeCharac
$LN35@makeCharac:

; 2265 : 	{
; 2266 : 		ret = selCharGraNo();

  00059	e8 00 00 00 00	 call	 ?selCharGraNo@@YAHXZ	; selCharGraNo
  0005e	8b f0		 mov	 esi, eax

; 2267 : 		if (ret == 1)

  00060	83 fe 01	 cmp	 esi, 1
  00063	75 1b		 jne	 SHORT $LN7@makeCharac

; 2268 : 		{
; 2269 : 			SubProcNo = 10;

  00065	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH

; 2279 : 	{
; 2280 : 		initEditCharParam();

  0006f	e8 00 00 00 00	 call	 ?initEditCharParam@@YAXXZ ; initEditCharParam

; 2281 : 		SubProcNo = 12;

  00074	c7 05 00 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 12 ; SubProcNo, 0000000cH

; 2282 : 	}

  0007e	eb 55		 jmp	 SHORT $LN38@makeCharac
$LN7@makeCharac:

; 2270 : 		}
; 2271 : 		else
; 2272 : 			if (ret == 2)

  00080	83 fe 02	 cmp	 esi, 2
  00083	75 0c		 jne	 SHORT $LN43@makeCharac

; 2273 : 			{
; 2274 : 				ChangeProc(PROC_CHAR_SELECT, 10);

  00085	6a 0a		 push	 10			; 0000000aH
  00087	6a 03		 push	 3
  00089	e8 00 00 00 00	 call	 ?ChangeProc@@YAXHH@Z	; ChangeProc
  0008e	83 c4 08	 add	 esp, 8
$LN43@makeCharac:

; 2275 : 				//			return;
; 2276 : 			}
; 2277 : 	}
; 2278 : 	if (SubProcNo == 10 && ret == 1)

  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00096	eb 03		 jmp	 SHORT $LN9@makeCharac
$LN44@makeCharac:

; 2263 : 		}
; 2264 : 	if (SubProcNo == 3)

  00098	8b 75 fc	 mov	 esi, DWORD PTR _ret$[ebp]
$LN9@makeCharac:

; 2275 : 				//			return;
; 2276 : 			}
; 2277 : 	}
; 2278 : 	if (SubProcNo == 10 && ret == 1)

  0009b	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0009e	75 1a		 jne	 SHORT $LN10@makeCharac
  000a0	83 fe 01	 cmp	 esi, 1
  000a3	0f 85 7d 01 00
	00		 jne	 $LN27@makeCharac

; 2279 : 	{
; 2280 : 		initEditCharParam();

  000a9	e8 00 00 00 00	 call	 ?initEditCharParam@@YAXXZ ; initEditCharParam

; 2281 : 		SubProcNo = 12;

  000ae	c7 05 00 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 12 ; SubProcNo, 0000000cH

; 2282 : 	}

  000b8	eb 1b		 jmp	 SHORT $LN38@makeCharac
$LN10@makeCharac:

; 2283 : 	else
; 2284 : 		if (SubProcNo == 11)

  000ba	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  000bd	75 11		 jne	 SHORT $LN12@makeCharac

; 2285 : 		{
; 2286 : 			initEditCharParam2();

  000bf	e8 00 00 00 00	 call	 ?initEditCharParam2@@YAXXZ ; initEditCharParam2

; 2287 : 			SubProcNo = 12;

  000c4	c7 05 00 00 00
	00 0c 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 12 ; SubProcNo, 0000000cH

; 2288 : 		}
; 2289 : 	if (SubProcNo == 12)

  000ce	eb 05		 jmp	 SHORT $LN38@makeCharac
$LN12@makeCharac:
  000d0	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  000d3	75 28		 jne	 SHORT $LN15@makeCharac
$LN38@makeCharac:

; 2290 : 	{
; 2291 : 		ret = editCharParam();

  000d5	e8 00 00 00 00	 call	 ?editCharParam@@YAHXZ	; editCharParam

; 2292 : 		if (ret == 1)

  000da	83 f8 01	 cmp	 eax, 1
  000dd	74 23		 je	 SHORT $LN39@makeCharac

; 2293 : 		{
; 2294 : 			SubProcNo = 20;
; 2295 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 2296 : 			if (pActPet20 != NULL)
; 2297 : 			{
; 2298 : 				DeathAction(pActPet20);
; 2299 : 				pActPet20 = NULL;
; 2300 : 			}
; 2301 : #endif
; 2302 : 		}
; 2303 : 		if (ret == 2)

  000df	83 f8 02	 cmp	 eax, 2
  000e2	75 14		 jne	 SHORT $LN45@makeCharac

; 2304 : 		{
; 2305 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 2306 : 			if (pActPet20 != NULL)
; 2307 : 			{
; 2308 : 				DeathAction(pActPet20);
; 2309 : 				pActPet20 = NULL;
; 2310 : 			}
; 2311 : #endif
; 2312 : 			SubProcNo = 2;

  000e4	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo

; 2379 : 	}
; 2380 : 
; 2381 : 	RunAction();

  000e9	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 2382 : 	StockTaskDispBuffer();

  000ee	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
  000f3	5e		 pop	 esi

; 2383 : }

  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
$LN45@makeCharac:

; 2293 : 		{
; 2294 : 			SubProcNo = 20;
; 2295 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 2296 : 			if (pActPet20 != NULL)
; 2297 : 			{
; 2298 : 				DeathAction(pActPet20);
; 2299 : 				pActPet20 = NULL;
; 2300 : 			}
; 2301 : #endif
; 2302 : 		}
; 2303 : 		if (ret == 2)

  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN15@makeCharac:

; 2313 : 		}
; 2314 : 	}
; 2315 : 
; 2316 : 	// îî²ä½?î±î¶
; 2317 : 	if (SubProcNo == 20)

  000fd	83 f8 14	 cmp	 eax, 20			; 00000014H
  00100	75 11		 jne	 SHORT $LN16@makeCharac
$LN39@makeCharac:

; 2318 : 	{
; 2319 : #ifndef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 2320 : 		initSelHomeTown();

  00102	e8 00 00 00 00	 call	 ?initSelHomeTown@@YAXXZ	; initSelHomeTown

; 2321 : #endif
; 2322 : 		SubProcNo = 21;

  00107	c7 05 00 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 21 ; SubProcNo, 00000015H

; 2323 : 	}
; 2324 : 	if (SubProcNo == 21)

  00111	eb 05		 jmp	 SHORT $LN40@makeCharac
$LN16@makeCharac:
  00113	83 f8 15	 cmp	 eax, 21			; 00000015H
  00116	75 36		 jne	 SHORT $LN20@makeCharac
$LN40@makeCharac:

; 2325 : 	{
; 2326 : #ifdef _DELBORNPLACE //Syu ADD 6.0 ç»ä¸åºçäºæ°ææ
; 2327 : 		ret = 1;
; 2328 : #else
; 2329 : 		ret = selHomeTown();

  00118	e8 00 00 00 00	 call	 ?selHomeTown@@YAHXZ	; selHomeTown

; 2330 : #endif
; 2331 : 		if (ret == 1)

  0011d	83 f8 01	 cmp	 eax, 1
  00120	75 42		 jne	 SHORT $LN18@makeCharac

; 2332 : 		{
; 2333 : 			SubProcNo = 30;
; 2334 : 			resetCharacterList(selectPcNo);

  00122	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  00129	50		 push	 eax
  0012a	c7 05 00 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 30 ; SubProcNo, 0000001eH
  00134	e8 00 00 00 00	 call	 ?resetCharacterList@@YAHH@Z ; resetCharacterList

; 2335 : 			clearUserSetting(selectPcNo);

  00139	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 ?clearUserSetting@@YAXH@Z ; clearUserSetting
  00146	83 c4 08	 add	 esp, 8
$LN46@makeCharac:

; 2341 : 			}
; 2342 : 	}
; 2343 : 	if (SubProcNo == 30)

  00149	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN20@makeCharac:
  0014e	83 f8 1e	 cmp	 eax, 30			; 0000001eH
  00151	75 2f		 jne	 SHORT $LN21@makeCharac

; 2344 : 	{
; 2345 : 		initCreateChar();

  00153	e8 00 00 00 00	 call	 ?initCreateChar@@YAXXZ	; initCreateChar

; 2346 : 		SubProcNo = 31;

  00158	c7 05 00 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 31 ; SubProcNo, 0000001fH

; 2347 : 	}
; 2348 : 	if (SubProcNo == 31)

  00162	eb 23		 jmp	 SHORT $LN41@makeCharac
$LN18@makeCharac:

; 2336 : 		}
; 2337 : 		else
; 2338 : 			if (ret == 2)

  00164	83 f8 02	 cmp	 eax, 2
  00167	75 e0		 jne	 SHORT $LN46@makeCharac

; 2339 : 			{
; 2340 : 				SubProcNo = 11;

  00169	c7 05 00 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 11 ; SubProcNo, 0000000bH

; 2379 : 	}
; 2380 : 
; 2381 : 	RunAction();

  00173	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 2382 : 	StockTaskDispBuffer();

  00178	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
  0017d	5e		 pop	 esi

; 2383 : }

  0017e	8b e5		 mov	 esp, ebp
  00180	5d		 pop	 ebp
  00181	c3		 ret	 0
$LN21@makeCharac:

; 2347 : 	}
; 2348 : 	if (SubProcNo == 31)

  00182	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00185	75 62		 jne	 SHORT $LN22@makeCharac
$LN41@makeCharac:

; 2349 : 	{
; 2350 : 		ret = createChar();

  00187	e8 00 00 00 00	 call	 ?createChar@@YAHXZ	; createChar
  0018c	8b c8		 mov	 ecx, eax

; 2351 : 		if (ret == 1)

  0018e	83 f9 01	 cmp	 ecx, 1
  00191	75 37		 jne	 SHORT $LN23@makeCharac

; 2352 : 		{
; 2353 : 			maxPcNo++;

  00193	66 ff 05 00 00
	00 00		 inc	 WORD PTR ?maxPcNo@@3FA	; maxPcNo
  0019a	33 c9		 xor	 ecx, ecx
  0019c	0f 1f 40 00	 npad	 4
$LL30@makeCharac:

; 2354 : 			strcpy(gamestate_login_charname, newCharacterName);

  001a0	8a 81 00 00 00
	00		 mov	 al, BYTE PTR ?newCharacterName@@3PADA[ecx]
  001a6	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001a9	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?gamestate_login_charname@@3PADA[ecx-1], al
  001af	84 c0		 test	 al, al
  001b1	75 ed		 jne	 SHORT $LL30@makeCharac

; 2355 : 			ChangeProc(PROC_CHAR_LOGIN_START);

  001b3	6a 05		 push	 5
  001b5	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc

; 2356 : 			createCharFlag = 1;

  001ba	b8 01 00 00 00	 mov	 eax, 1
  001bf	83 c4 04	 add	 esp, 4
  001c2	66 a3 00 00 00
	00		 mov	 WORD PTR ?createCharFlag@@3FA, ax ; createCharFlag

; 2357 : 			//return;
; 2358 : 		}

  001c8	eb 15		 jmp	 SHORT $LN25@makeCharac
$LN23@makeCharac:

; 2359 : 		else
; 2360 : 			if (ret == 2)

  001ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  001cf	83 f9 02	 cmp	 ecx, 2
  001d2	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  001d7	0f 44 c2	 cmove	 eax, edx
  001da	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo
$LN25@makeCharac:

; 2361 : 			{
; 2362 : 				SubProcNo = 100;
; 2363 : 			}
; 2364 : 		selHomeTown();

  001df	e8 00 00 00 00	 call	 ?selHomeTown@@YAHXZ	; selHomeTown
  001e4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN22@makeCharac:

; 2365 : 	}
; 2366 : 	if (SubProcNo == 100)

  001e9	83 f8 64	 cmp	 eax, 100		; 00000064H
  001ec	75 11		 jne	 SHORT $LN26@makeCharac

; 2367 : 	{
; 2368 : 		initCommonMsgWin();

  001ee	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 2369 : 		SubProcNo++;

  001f3	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 2370 : 	}
; 2371 : 	if (SubProcNo == 101)

  001fd	eb 05		 jmp	 SHORT $LN42@makeCharac
$LN26@makeCharac:
  001ff	83 f8 65	 cmp	 eax, 101		; 00000065H
  00202	75 22		 jne	 SHORT $LN27@makeCharac
$LN42@makeCharac:

; 2372 : 	{
; 2373 : 		if (commonMsgWin("ìºë¦­í°ìì±ì¤í¨ã"))

  00204	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@JNLGIAPP@?D?$LD?$LI?$KP?E?M?$LL?$PN?$LM?$LK?$LN?G?F?P?$KB?$KD@
  00209	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  0020e	83 c4 04	 add	 esp, 4
  00211	85 c0		 test	 eax, eax
  00213	74 0c		 je	 SHORT $LN28@makeCharac

; 2374 : 		{
; 2375 : 			ChangeProc(PROC_CHAR_SELECT, 10);

  00215	6a 0a		 push	 10			; 0000000aH
  00217	6a 03		 push	 3
  00219	e8 00 00 00 00	 call	 ?ChangeProc@@YAXHH@Z	; ChangeProc
  0021e	83 c4 08	 add	 esp, 8
$LN28@makeCharac:

; 2376 : 			//return;
; 2377 : 		}
; 2378 : 		selHomeTown();

  00221	e8 00 00 00 00	 call	 ?selHomeTown@@YAHXZ	; selHomeTown
$LN27@makeCharac:

; 2379 : 	}
; 2380 : 
; 2381 : 	RunAction();

  00226	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 2382 : 	StockTaskDispBuffer();

  0022b	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
  00230	5e		 pop	 esi

; 2383 : }

  00231	8b e5		 mov	 esp, ebp
  00233	5d		 pop	 ebp
  00234	c3		 ret	 0
?makeCharacterProc@@YAXXZ ENDP				; makeCharacterProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?characterLoginProc@@YAXXZ
_TEXT	SEGMENT
?characterLoginProc@@YAXXZ PROC				; characterLoginProc, COMDAT

; 3765 : 	int ret;
; 3766 : 	static char msg[256];
; 3767 : 
; 3768 : 	if (SubProcNo == 0) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00005	85 c0		 test	 eax, eax
  00007	75 11		 jne	 SHORT $LN4@characterL

; 3769 : 		initCharLogin();

  00009	e8 00 00 00 00	 call	 ?initCharLogin@@YAXXZ	; initCharLogin

; 3770 : 		SubProcNo++;

  0000e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo

; 3771 : 	}
; 3772 : 	if (SubProcNo == 1) {

  00018	eb 09		 jmp	 SHORT $LN83@characterL
$LN4@characterL:
  0001a	83 f8 01	 cmp	 eax, 1
  0001d	0f 85 21 0a 00
	00		 jne	 $LN63@characterL
$LN83@characterL:

; 3773 : 		ret = charLogin();

  00023	e8 00 00 00 00	 call	 ?charLogin@@YAHXZ	; charLogin

; 3774 : 		if (ret == 0) {

  00028	85 c0		 test	 eax, eax
  0002a	0f 84 0f 0a 00
	00		 je	 $LN87@characterL

; 3775 : 			// ç­¾å¥æå
; 3776 : 		}
; 3777 : 		else if (ret == 1) {

  00030	83 f8 01	 cmp	 eax, 1
  00033	75 14		 jne	 SHORT $LN8@characterL

; 3778 : 
; 3779 : 			//andy_reedit initchat			
; 3780 : 			InitChat();

  00035	e8 00 00 00 00	 call	 ?InitChat@@YAXXZ	; InitChat

; 3781 : 			ChangeProc(PROC_GAME);

  0003a	6a 09		 push	 9
  0003c	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  00041	83 c4 04	 add	 esp, 4

; 3782 : 		}

  00044	e9 f6 09 00 00	 jmp	 $LN87@characterL
$LN8@characterL:

; 3783 : 		else
; 3784 : 			if (ret == -1)

  00049	83 f8 ff	 cmp	 eax, -1
  0004c	75 22		 jne	 SHORT $LN10@characterL

; 3785 : 			{
; 3786 : 				SubProcNo = 100;
; 3787 : 				strcpy(msg, NET_ERRMSG_LOGINTIMEOUT);

  0004e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BA@JFEMHLAM@?T?t?l?$PN?$DP?W?b?$DP?$DP?l?$KL?S?p?$KB?$KD@
  00055	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  0005c	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00061	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0006b	e9 ef 09 00 00	 jmp	 $LN85@characterL
$LN10@characterL:

; 3788 : 			}
; 3789 : 			else
; 3790 : 				if (ret == -2) {

  00070	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  00073	75 42		 jne	 SHORT $LN12@characterL

; 3791 : 					SubProcNo = 100;
; 3792 : 					strcpy(msg, "ì²´í¬ì¸ ì²ë¦¬ ì¤í¨(1001)");

  00075	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@+16
  0007a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@
  00081	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, eax
  00086	66 a1 14 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@+20
  0008c	66 a3 14 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+20, ax
  00092	a0 16 00 00 00	 mov	 al, BYTE PTR ??_C@_0BH@KKDGIMOK@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI1001?$CJ@+22
  00097	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0009e	a2 16 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+22, al

; 3935 : 		initCommonMsgWin();

  000a3	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  000a8	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  000b2	e9 a8 09 00 00	 jmp	 $LN85@characterL
$LN12@characterL:

; 3793 : 				}
; 3794 : 
; 3795 : 
; 3796 : #ifdef _NEW_WGS_MSG				// WON ADD WGSçæ°è§çª
; 3797 : 
; 3798 : 				else if (ret == 101) { // 2.1 New

  000b7	83 f8 65	 cmp	 eax, 101		; 00000065H
  000ba	75 3c		 jne	 SHORT $LN14@characterL

; 3799 : 					SubProcNo = 100;
; 3800 : 					strcpy(msg, "ë°ì´í° ìë²ì ì ì í  ì ììµëë¤");

  000bc	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@
  000c3	66 a1 20 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@+32
  000c9	66 a3 20 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, ax
  000cf	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  000d6	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@NMDHOJLK@?$LF?$KF?$MA?L?E?M?5?$LM?$KN?$LJ?v?$LP?$KB?5?A?$KC?$LM?S?5?G?R?5?$LM?v?5?$LO?x?$LN?$MA?$LE?O@+16
  000dd	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  000e4	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  000e9	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  000f3	e9 67 09 00 00	 jmp	 $LN85@characterL
$LN14@characterL:

; 3801 : 				}
; 3802 : 				else if (ret == 102) {

  000f8	83 f8 66	 cmp	 eax, 102		; 00000066H
  000fb	75 48		 jne	 SHORT $LN16@characterL

; 3803 : 					SubProcNo = 100;
; 3804 : 					strcpy(msg, "ë°ì´í°ë² ì´ì¤ìì ì¬ë°ë¥¸ ì ë³´ë¥¼ ê°ì ¸ì¬ì ììµëë¤");

  000fd	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@
  00104	a0 30 00 00 00	 mov	 al, BYTE PTR ??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@+48
  00109	a2 30 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, al
  0010e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00115	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@+16
  0011c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00123	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DB@MPLNGCGC@?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?$LP?$KB?$LM?$KN?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5@+32
  0012a	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  00131	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00136	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00140	e9 1a 09 00 00	 jmp	 $LN85@characterL
$LN16@characterL:

; 3805 : 				}
; 3806 : 				else if (ret == 103) { // 2.1 New

  00145	83 f8 67	 cmp	 eax, 103		; 00000067H
  00148	75 48		 jne	 SHORT $LN18@characterL

; 3807 : 					SubProcNo = 100;
; 3808 : 					strcpy(msg, "ìë² ì¬ì©ìê° ë§ìµëë¤. ì ì íì ë¤ì ìëíì­ìì¤");

  0014a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@
  00151	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@+48
  00156	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, eax
  0015b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00162	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@+16
  00169	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00170	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@PGOBNCKH@?$LM?$KN?$LJ?v?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?4?5?$MA?a?$LN?C?5?H?D@+32
  00177	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  0017e	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00183	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0018d	e9 cd 08 00 00	 jmp	 $LN85@characterL
$LN18@characterL:

; 3809 : 				}
; 3810 : 				else if (ret == 104) {

  00192	83 f8 68	 cmp	 eax, 104		; 00000068H
  00195	75 46		 jne	 SHORT $LN20@characterL

; 3811 : 					SubProcNo = 100;
; 3812 : 					strcpy(msg, "ìë ¥í ìë£ íìì´ ì¬ë°ë¥´ì§ ììµëë¤.");

  00197	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@
  0019e	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@+32
  001a3	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, eax
  001a8	66 a1 24 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@+36
  001ae	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  001b5	66 a3 24 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+36, ax
  001bb	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CG@HHMHGCGE@?$MA?T?$LH?B?G?Q?5?$MA?Z?$LH?a?5?G?$PM?$LN?D?$MA?L?5?$LP?C?$LJ?Y?$LI?$KD?A?v?5?$LO?J?$LN@+16
  001c2	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  001c9	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  001ce	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  001d8	e9 82 08 00 00	 jmp	 $LN85@characterL
$LN20@characterL:

; 3813 : 				}
; 3814 : 				else if (ret == 201) {

  001dd	3d c9 00 00 00	 cmp	 eax, 201		; 000000c9H
  001e2	75 2b		 jne	 SHORT $LN22@characterL

; 3815 : 					SubProcNo = 100;
; 3816 : 					strcpy(msg, "ìëª»ë ì¬ì©ì ì´ë¦ ëë ë¹ë°ë²í¸, ìì§ íìì ê°ìíì§ ìì ê²½ì° Wayiê²ì ì¬ì´í¸ìì ë¬´ë£ë¡ íìì ê°ìíì­ìì¤ã");

  001e4	56		 push	 esi
  001e5	57		 push	 edi
  001e6	b9 1c 00 00 00	 mov	 ecx, 28			; 0000001cH
  001eb	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_0HC@GFFIGLHA@?$MA?$NP?$LI?x?$LF?H?5?$LL?g?$LP?k?$MA?Z?5?$MA?L?$LI?$KH?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H@
  001f0	bf 00 00 00 00	 mov	 edi, OFFSET ?msg@?1??characterLoginProc@@YAXXZ@4PADA
  001f5	f3 a5		 rep movsd
  001f7	66 a5		 movsw
  001f9	5f		 pop	 edi
  001fa	5e		 pop	 esi

; 3935 : 		initCommonMsgWin();

  001fb	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00200	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0020a	e9 50 08 00 00	 jmp	 $LN85@characterL
$LN22@characterL:

; 3817 : 				}
; 3818 : 				else if (ret == 202) { // 2.1 New

  0020f	3d ca 00 00 00	 cmp	 eax, 202		; 000000caH
  00214	75 60		 jne	 SHORT $LN24@characterL

; 3819 : 					SubProcNo = 100;
; 3820 : 					strcpy(msg, "ëì¼í ì¬ì©ìë ë°ë³µíì¬ ë¡ê·¸ì¸ í  ì ììµëë¤");

  00216	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@
  0021d	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@+40
  00222	a3 28 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+40, eax
  00227	66 a1 2c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@+44
  0022d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00234	66 a3 2c 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+44, ax
  0023a	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@+16
  00241	a0 2e 00 00 00	 mov	 al, BYTE PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@+46
  00246	a2 2e 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+46, al
  0024b	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00252	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CP@NMMNAJC@?$LF?$LP?$MA?O?G?Q?5?$LL?g?$LP?k?$MA?Z?$LE?B?5?$LJ?$NN?$LK?$LJ?G?O?$LP?$KJ?5?$LH?N?$LB?W?$MA?N@+32
  0025a	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  00262	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00267	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00271	e9 e9 07 00 00	 jmp	 $LN85@characterL
$LN24@characterL:

; 3821 : 				}
; 3822 : 				else if (ret == 203) { // 2.1 New

  00276	3d cb 00 00 00	 cmp	 eax, 203		; 000000cbH
  0027b	75 3a		 jne	 SHORT $LN26@characterL

; 3823 : 					SubProcNo = 100;
; 3824 : 					strcpy(msg, "ëì¼í ê³ì ì´ ì¨ë¼ì¸ ìíìëë¤.");

  0027d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@
  00284	a0 20 00 00 00	 mov	 al, BYTE PTR ??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@+32
  00289	a2 20 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, al
  0028e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00295	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CB@OGIGLFK@?$LF?$LP?$MA?O?G?Q?5?$LA?h?A?$KE?$MA?L?5?$LP?B?$LG?s?$MA?N?5?$LL?s?E?B?$MA?T?$LE?O?$LE?Y@+16
  0029c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  002a3	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  002a8	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  002b2	e9 a8 07 00 00	 jmp	 $LN85@characterL
$LN26@characterL:

; 3825 : 				}
; 3826 : 				else if (ret == 204) { // 2.1 New  	// åæç³»éè¦ç»å¥

  002b7	3d cc 00 00 00	 cmp	 eax, 204		; 000000ccH
  002bc	75 3c		 jne	 SHORT $LN28@characterL

; 3827 : 					SubProcNo = 100;
; 3828 : 					//strcpy( msg, "ë¹ì ì ì´ë¯¸ ì´ ìíê³ì ë¡ê·¸ì¸í´ ììµëë¤" );				
; 3829 : 					strcpy(msg, "ì¬ì©ìê° ì´ë¯¸ ê²ìì¤ ìëë¤");

  002be	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@
  002c5	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@+24
  002ca	a3 18 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+24, eax
  002cf	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  002d6	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BM@JBMHIAK@?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?5?$MA?T?$LE?O?$LE?Y@+16
  002de	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  002e6	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  002eb	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  002f5	e9 65 07 00 00	 jmp	 $LN85@characterL
$LN28@characterL:

; 3830 : 				}
; 3831 : 				else if (ret == 205) {

  002fa	3d cd 00 00 00	 cmp	 eax, 205		; 000000cdH
  002ff	75 3c		 jne	 SHORT $LN30@characterL

; 3832 : 					SubProcNo = 100;
; 3833 : 					strcpy(msg, "ë¡ê·¸ì¸íì§ ììê±°ë ë¡ê·¸ì¸ ì¤ë¥ì");

  00301	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@
  00308	66 a1 20 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@+32
  0030e	66 a3 20 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, ax
  00314	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0031b	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@HINJGBNA@?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LO?J?$LO?R?$LA?E?$LD?$KK?5?$LH?N?$LB?W?$MA?N?5?$LP?$MA?$LH?y@+16
  00322	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  00329	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  0032e	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00338	e9 22 07 00 00	 jmp	 $LN85@characterL
$LN30@characterL:

; 3834 : 				}
; 3835 : 				else if (ret == 206) { // 2.1 New

  0033d	3d ce 00 00 00	 cmp	 eax, 206		; 000000ceH
  00342	75 3a		 jne	 SHORT $LN32@characterL

; 3836 : 					SubProcNo = 100;
; 3837 : 					strcpy(msg, "ê°ì ì´ë¦ì ê³ì ì´ ì´ë¯¸ ì¡´ì¬í©ëë¤.");

  00344	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@
  0034b	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@+32
  00350	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, eax
  00355	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0035c	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CE@KOLHMKHB@?$LA?$LA?$MA?$LK?5?$MA?L?$LI?$KH?$MA?G?5?$LA?h?A?$KE?$MA?L?5?$MA?L?$LJ?L?5?A?$LI?$MA?g?G?U?$LE@+16
  00363	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  0036a	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  0036f	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00379	e9 e1 06 00 00	 jmp	 $LN85@characterL
$LN32@characterL:

; 3838 : 				}
; 3839 : 				else if (ret == 207) { // 2.1 New

  0037e	3d cf 00 00 00	 cmp	 eax, 207		; 000000cfH
  00383	75 48		 jne	 SHORT $LN34@characterL

; 3840 : 					SubProcNo = 100;
; 3841 : 					strcpy(msg, "íì ê³ì ì´ íì±í ëììµëë¤");

  00385	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@
  0038c	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@+24
  00391	a3 18 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+24, eax
  00396	66 a1 1c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@+28
  0039c	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  003a3	66 a3 1c 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+28, ax
  003a9	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BO@HAIDEEBI@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y@+16
  003b1	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  003b9	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  003be	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  003c8	e9 92 06 00 00	 jmp	 $LN85@characterL
$LN34@characterL:

; 3842 : 				}
; 3843 : 				else if (ret == 208) { // 2.1 New

  003cd	3d d0 00 00 00	 cmp	 eax, 208		; 000000d0H
  003d2	75 36		 jne	 SHORT $LN36@characterL

; 3844 : 					SubProcNo = 100;
; 3845 : 					strcpy(msg, "ìëª»ë ìì ìë¬ì½ë");

  003d4	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@+16
  003d9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@
  003e0	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, eax
  003e5	a0 14 00 00 00	 mov	 al, BYTE PTR ??_C@_0BF@NHOPBCJF@?$MA?$NP?$LI?x?$LF?H?5?$LN?C?$MA?$NL?5?$LP?$KB?$LH?$KP?D?Z?$LF?e@+20
  003ea	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  003f1	a2 14 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+20, al

; 3935 : 		initCommonMsgWin();

  003f6	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  003fb	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00405	e9 55 06 00 00	 jmp	 $LN85@characterL
$LN36@characterL:

; 3846 : 				}
; 3847 : 				else if (ret == 209) { // 2.1 New

  0040a	3d d1 00 00 00	 cmp	 eax, 209		; 000000d1H
  0040f	75 46		 jne	 SHORT $LN38@characterL

; 3848 : 					SubProcNo = 100;
; 3849 : 					strcpy(msg, "íì ê³ì ì´ íì±í ëì§ ìììµëë¤");

  00411	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@
  00418	66 a1 20 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+32
  0041e	66 a3 20 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, ax
  00424	a0 22 00 00 00	 mov	 al, BYTE PTR ??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+34
  00429	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00430	a2 22 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+34, al
  00435	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CD@NOMGEOJE@?H?$LI?$LP?x?5?$LA?h?A?$KE?$MA?L?5?H?$LA?$LM?$LK?H?$KN?5?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+16
  0043c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  00443	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00448	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00452	e9 08 06 00 00	 jmp	 $LN85@characterL
$LN38@characterL:

; 3850 : 				}
; 3851 : 				else if (ret == 210) { // 2.1 New

  00457	3d d2 00 00 00	 cmp	 eax, 210		; 000000d2H
  0045c	75 52		 jne	 SHORT $LN40@characterL

; 3852 : 					SubProcNo = 100;
; 3853 : 					strcpy(msg, "ìì´ëì ë¹ë°ë²í¸ë ìë¬¸ê³¼ ì«ìë§ ì¬ì©í  ì ììµëë¤");

  0045e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@
  00465	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@+48
  0046a	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, eax
  0046f	a0 34 00 00 00	 mov	 al, BYTE PTR ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@+52
  00474	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0047b	a2 34 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+52, al
  00480	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@+16
  00487	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  0048e	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@NACPJADM@?$LO?F?$MA?L?$LF?p?$LP?M?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LE?B?5?$LP?$LF?$LJ?$KO?$LA?z?5?$LM?$PN?$MA?Z@+32
  00495	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  0049c	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  004a1	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  004ab	e9 af 05 00 00	 jmp	 $LN85@characterL
$LN40@characterL:

; 3854 : 				}
; 3855 : 				else if (ret == 211) {

  004b0	3d d3 00 00 00	 cmp	 eax, 211		; 000000d3H
  004b5	75 50		 jne	 SHORT $LN42@characterL

; 3856 : 					SubProcNo = 100;
; 3857 : 					strcpy(msg, "ì´ ê³ì ì ì ì§ëììµëë¤, ë¬¸ìí´ì£¼ì¸ì");

  004b7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@
  004be	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@+32
  004c3	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, eax
  004c8	66 a1 24 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@+36
  004ce	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  004d5	66 a3 24 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+36, ax
  004db	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@+16
  004e2	a0 26 00 00 00	 mov	 al, BYTE PTR ??_C@_0CH@JMACCECP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?A?$KE?A?v?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?0?5?$LJ?$KO?$MA?G?G@+38
  004e7	a2 26 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+38, al
  004ec	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  004f3	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  004f8	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00502	e9 58 05 00 00	 jmp	 $LN85@characterL
$LN42@characterL:

; 3858 : 				}
; 3859 : 				else if (ret == 212) { // 2.1 New

  00507	3d d4 00 00 00	 cmp	 eax, 212		; 000000d4H
  0050c	75 48		 jne	 SHORT $LN44@characterL

; 3860 : 					SubProcNo = 100;
; 3861 : 					strcpy(msg, "ê²ìì ììíê¸° ì ì ê°ì¸ ì ë³´ë¥¼ ë¤ì íì¸íì­ìì¤]");

  0050e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@
  00515	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@+48
  0051a	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, eax
  0051f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00526	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@+16
  0052d	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00534	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@CGFBMJCB@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5?$LA?$LD?$MA?N?5?A?$KE?$LK?$LI?$LI@+32
  0053b	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  00542	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00547	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00551	e9 09 05 00 00	 jmp	 $LN85@characterL
$LN44@characterL:

; 3862 : 				}
; 3863 : 				else if (ret == 213) { // 2.1 New

  00556	3d d5 00 00 00	 cmp	 eax, 213		; 000000d5H
  0055b	75 48		 jne	 SHORT $LN46@characterL

; 3864 : 					SubProcNo = 100;
; 3865 : 					strcpy(msg, "ë¡ê·¸ì¸ ìê°ì´ ì´ê³¼ëììµëë¤. ë¤ì ë¡ê·¸ì¸ íì­ìì¤.");

  0055d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@
  00564	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@+48
  00569	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, eax
  0056e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00575	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@+16
  0057c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00583	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@LMMPDPLP@?$LH?N?$LB?W?$MA?N?5?$LN?C?$LA?$KD?$MA?L?5?C?J?$LA?z?$LF?G?$LO?z?$LN?$MA?$LE?O?$LE?Y?4?5?$LE@+32
  0058a	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  00591	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00596	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  005a0	e9 ba 04 00 00	 jmp	 $LN85@characterL
$LN46@characterL:

; 3866 : 				}
; 3867 : 				else if (ret == 214) { // 2.1 New

  005a5	3d d6 00 00 00	 cmp	 eax, 214		; 000000d6H
  005aa	75 50		 jne	 SHORT $LN48@characterL

; 3868 : 					SubProcNo = 100;
; 3869 : 					strcpy(msg, "ííì´ì§ì ìì§ ë¡ê·¸ì¸ ëì§ ìììµëë¤");

  005ac	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@
  005b3	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@+32
  005b8	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, eax
  005bd	66 a1 24 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@+36
  005c3	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  005ca	66 a3 24 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+36, ax
  005d0	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@+16
  005d7	a0 26 00 00 00	 mov	 al, BYTE PTR ??_C@_0CH@MGAFLNOF@?H?$KI?F?d?$MA?L?A?v?$LP?$KB?5?$LO?F?A?w?5?$LH?N?$LB?W?$MA?N?5?$LF?G?A?v?5?$LO?J?$LO@+38
  005dc	a2 26 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+38, al
  005e1	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  005e8	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  005ed	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  005f7	e9 63 04 00 00	 jmp	 $LN85@characterL
$LN48@characterL:

; 3870 : 				}
; 3871 : 				else if (ret == 220) { // 2.1 New

  005fc	3d dc 00 00 00	 cmp	 eax, 220		; 000000dcH
  00601	75 56		 jne	 SHORT $LN50@characterL

; 3872 : 					SubProcNo = 100;
; 3873 : 					strcpy(msg, "ì´ ê³ì ì ì´ë¯¸ ìë¡ì´ íìì¼ë¡ ì íëììµëë¤");

  00603	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@
  0060a	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@+40
  0060f	a3 28 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+40, eax
  00614	66 a1 2c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@+44
  0061a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  00621	66 a3 2c 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+44, ax
  00627	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@+16
  0062e	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00635	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CO@LFMOKHEP@?$MA?L?5?$LA?h?A?$KE?$MA?$LK?5?$MA?L?$LJ?L?5?$LL?u?$LH?N?$LP?n?5?H?$LI?$LP?x?$MA?$LI?$LH?N?5@+32
  0063d	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  00645	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  0064a	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00654	e9 06 04 00 00	 jmp	 $LN85@characterL
$LN50@characterL:

; 3874 : 				}
; 3875 : 				else if (ret == 222) { // 2.1 New

  00659	3d de 00 00 00	 cmp	 eax, 222		; 000000deH
  0065e	75 66		 jne	 SHORT $LN52@characterL

; 3876 : 					SubProcNo = 100;
; 3877 : 					strcpy(msg, "ê²ìì ììíê¸° ì ì Wayiê²ìì ì ìíì¬ ê²ì ê´ë¦¬ ê³ì ì ë¹ë°ë²í¸ë¥¼ ë³ê²½íì­ìì¤");

  00660	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@
  00667	66 a1 50 00 00
	00		 mov	 ax, WORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@+80
  0066d	66 a3 50 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+80, ax
  00673	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0067a	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@+16
  00681	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  00688	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@+32
  0068f	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0
  00696	0f 10 05 30 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@+48
  0069d	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, xmm0
  006a4	0f 10 05 40 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0FC@MFALGBLI@?$LA?T?$MA?S?$MA?$LL?5?$LN?C?$MA?$NL?G?O?$LB?b?5?$MA?$PM?$LP?$KB?5Wayi?$LA?T?$MA?S?$LP?$KB@+64
  006ab	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+64, xmm0

; 3935 : 		initCommonMsgWin();

  006b2	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  006b7	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  006c1	e9 99 03 00 00	 jmp	 $LN85@characterL
$LN52@characterL:

; 3878 : 				}
; 3879 : 				else if (ret == 301) {

  006c6	3d 2d 01 00 00	 cmp	 eax, 301		; 0000012dH
  006cb	75 58		 jne	 SHORT $LN54@characterL

; 3880 : 					SubProcNo = 100;
; 3881 : 					strcpy(msg, "ì´ ì íì ìì§ ë±ë¡ëì§ ìììµëë¤.  ì¬ì´í¸ìì ë¨¼ì  ë±ë¡íì¸ìã");

  006cd	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@
  006d4	66 a1 40 00 00
	00		 mov	 ax, WORD PTR ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+64
  006da	66 a3 40 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+64, ax
  006e0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  006e7	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+16
  006ee	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  006f5	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+32
  006fc	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0
  00703	0f 10 05 30 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EC@JANGBCI@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LN?$MA?$LE@+48
  0070a	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+48, xmm0

; 3935 : 		initCommonMsgWin();

  00711	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00716	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00720	e9 3a 03 00 00	 jmp	 $LN85@characterL
$LN54@characterL:

; 3882 : 				}
; 3883 : 				else if (ret == 402) {

  00725	3d 92 01 00 00	 cmp	 eax, 402		; 00000192H
  0072a	75 56		 jne	 SHORT $LN56@characterL

; 3884 : 					SubProcNo = 100;
; 3885 : 					strcpy(msg, "WGSç¹æ°å¡å·²ç¨å®ç¹æ°, è¯·è´­ä¹°ç¹æ°å¡åè³åä¹æ¸¸æç½å®ææ³¨å");

  0072c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@
  00733	66 a1 28 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@+40
  00739	66 a3 28 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+40, ax
  0073f	a0 2a 00 00 00	 mov	 al, BYTE PTR ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@+42
  00744	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  0074b	a2 2a 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+42, al
  00750	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@+16
  00757	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0
  0075e	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CL@DHOIGGNA@WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?0?5?$DP?$DP?$DP?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP@+32
  00766	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, xmm0

; 3935 : 		initCommonMsgWin();

  0076e	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00773	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0077d	e9 dd 02 00 00	 jmp	 $LN85@characterL
$LN56@characterL:

; 3886 : 				}
; 3887 : 				else if (ret == 405) {

  00782	3d 95 01 00 00	 cmp	 eax, 405		; 00000195H
  00787	75 3a		 jne	 SHORT $LN58@characterL

; 3888 : 					SubProcNo = 100;
; 3889 : 
; 3890 : 					strcpy(msg, "WGSç¹æ°ä¸è¶³, è¯·è´­ä¹°WGSç¹æ°å¡åè³åä¹æ¸¸æç½æ³¨å");

  00789	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@
  00790	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@+32
  00795	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+32, eax
  0079a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  007a1	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CE@MIFIPBLG@WGS?o?C?$DP?$NM?t?p?k?0?5?$DP?$DP?$DPWGS?o?C?$DP?$DP?n?$KC?r?$LI?$DP?$DP?j?$PN?$DP@+16
  007a8	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, xmm0

; 3935 : 		initCommonMsgWin();

  007af	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  007b4	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  007be	e9 9c 02 00 00	 jmp	 $LN85@characterL
$LN58@characterL:

; 3891 : 				}
; 3892 : 				else if (ret == 999) { // 2.1 New

  007c3	3d e7 03 00 00	 cmp	 eax, 999		; 000003e7H
  007c8	75 2c		 jne	 SHORT $LN60@characterL

; 3893 : 					SubProcNo = 100;
; 3894 : 					strcpy(msg, "ì¸í°ë· ì°ê²° ì¤ë¥");

  007ca	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@PHBDBDAB@?$MA?N?E?M?$LD?$NN?5?$LP?$KM?$LA?a?5?$LP?$MA?$LH?y@
  007d1	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@PHBDBDAB@?$MA?N?E?M?$LD?$NN?5?$LP?$KM?$LA?a?5?$LP?$MA?$LH?y@+16
  007d6	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, al
  007db	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  007e2	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  007e7	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  007f1	e9 69 02 00 00	 jmp	 $LN85@characterL
$LN60@characterL:

; 3895 : 				}
; 3896 : 				else if (ret >= 2030 && ret < 2044) {	// ä¸åæç³»éè¦ç»å¥

  007f6	8d 88 12 f8 ff
	ff		 lea	 ecx, DWORD PTR [eax-2030]
  007fc	83 f9 0d	 cmp	 ecx, 13			; 0000000dH
  007ff	0f 87 1d 02 00
	00		 ja	 $LN62@characterL

; 3897 : 					int star = -1;
; 3898 : 					star = ret - 2030;
; 3899 : 					SubProcNo = 100;
; 3900 : 
; 3901 : 					// ä¾ç§ cs ç acid å·ç è®¾ç
; 3902 : 					switch (star) {

  00805	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN86@characterL[ecx*4]
$LN64@characterL:

; 3903 : 					case 0: strcpy(msg, "æ¨å·²å¨å¶ä»æç³»ç»å¥ã");	break;

  0080c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@FNJGPFEB@?$DP?l?$KL?n?$KE?P?l?v?b?$OA?x?M?$KH?T?t?l?$PN?$KB?$KD@
  00813	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@FNJGPFEB@?$DP?l?$KL?n?$KE?P?l?v?b?$OA?x?M?$KH?T?t?l?$PN?$KB?$KD@+16
  00818	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, eax
  0081d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00824	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00829	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00833	e9 27 02 00 00	 jmp	 $LN85@characterL
$LN65@characterL:

; 3904 : 					case 1:	strcpy(msg, "æ¨å·²å¨å¤ªé³æç³»ç»å¥");	break;

  00838	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@DDFMPBHB@?$DP?l?$KL?n?$KE?w?$LM?$DP?$OA?x?M?$KH?T?t?l?$PN@
  0083f	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@DDFMPBHB@?$DP?l?$KL?n?$KE?w?$LM?$DP?$OA?x?M?$KH?T?t?l?$PN@+16
  00844	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, al
  00849	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00850	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00855	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0085f	e9 fb 01 00 00	 jmp	 $LN85@characterL
$LN66@characterL:

; 3905 : 					case 2:	strcpy(msg, "æ¨å·²å¨å¤©ç¥æç³»ç»å¥");	break;

  00864	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@BLEFHHCI@?$DP?l?$KL?n?$KE?t?$LI?c?j?$OA?x?M?$KH?T?t?l?$PN@
  0086b	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@BLEFHHCI@?$DP?l?$KL?n?$KE?t?$LI?c?j?$OA?x?M?$KH?T?t?l?$PN@+16
  00871	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  00877	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  0087e	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00883	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0088d	e9 cd 01 00 00	 jmp	 $LN85@characterL
$LN67@characterL:

; 3906 : 					case 3:	strcpy(msg, "æ¨å·²å¨åææç³»ç»å¥");	break;

  00892	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@IADOEDAG@?$DP?l?$KL?n?$KE?$NN?A?T?$OA?$OA?x?M?$KH?T?t?l?$PN@
  00899	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@IADOEDAG@?$DP?l?$KL?n?$KE?$NN?A?T?$OA?$OA?x?M?$KH?T?t?l?$PN@+16
  0089f	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  008a5	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  008ac	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  008b1	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  008bb	e9 9f 01 00 00	 jmp	 $LN85@characterL
$LN68@characterL:

; 3907 : 					case 4:	strcpy(msg, "æ¨å·²å¨ç´«å¾®æç³»ç»å¥");	break;

  008c0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@EOGDPEGN@?$DP?l?$KL?n?$KE?m?$LJ?Z?$LA?$OA?x?M?$KH?T?t?l?$PN@
  008c7	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@EOGDPEGN@?$DP?l?$KL?n?$KE?m?$LJ?Z?$LA?$OA?x?M?$KH?T?t?l?$PN@+16
  008cd	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  008d3	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  008da	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  008df	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  008e9	e9 71 01 00 00	 jmp	 $LN85@characterL
$LN69@characterL:

; 3935 : 		initCommonMsgWin();

  008ee	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BA@OCMAIDLN@?$DP?l?$KL?n?$KE?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@
  008f5	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  008fc	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00901	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  0090b	e9 4f 01 00 00	 jmp	 $LN85@characterL
$LN70@characterL:

; 3908 : 					case 5:	strcpy(msg, "æ¨å·²å¨èé¾æç³»ç»å¥");	break;
; 3909 : 					case 6:	strcpy(msg, "æ¨å·²å¨é¶æ²³æç³»ç»å¥");	break;

  00910	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@MMGOFGBI@?$DP?l?$KL?n?$KE?$DP?y?A?$OA?x?M?$KH?T?t?l?$PN@
  00917	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@MMGOFGBI@?$DP?l?$KL?n?$KE?$DP?y?A?$OA?x?M?$KH?T?t?l?$PN@+16
  0091c	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, al
  00921	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00928	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  0092d	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00937	e9 23 01 00 00	 jmp	 $LN85@characterL
$LN71@characterL:

; 3910 : 					case 7:	strcpy(msg, "æ¨å·²å¨é¦æ¸¯æç³»ç»å¥");	break;

  0093c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@NPHDINBL@?$DP?l?$KL?n?$KE?z?E?y?$PL?$OA?x?M?$KH?T?t?l?$PN@
  00943	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@NPHDINBL@?$DP?l?$KL?n?$KE?z?E?y?$PL?$OA?x?M?$KH?T?t?l?$PN@+16
  00949	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  0094f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00956	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  0095b	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00965	e9 f5 00 00 00	 jmp	 $LN85@characterL
$LN72@characterL:

; 3911 : 					case 8:	strcpy(msg, "æ¨å·²å¨æä¹å­æç³»ç»å¥");	break;

  0096a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@ODOFDCOF@?$DP?l?$KL?n?$KE?$OA?x?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@
  00971	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@ODOFDCOF@?$DP?l?$KL?n?$KE?$OA?x?$DP?$DP?$OA?x?M?$KH?T?t?l?$PN@+16
  00977	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  0097d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00984	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00989	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00993	e9 c7 00 00 00	 jmp	 $LN85@characterL
$LN73@characterL:

; 3912 : 					case 9:	strcpy(msg, "æ¨å·²å¨ç½è·¯å®¶åº­æç³»ç»å¥");	break;

  00998	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@+16
  0099d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@
  009a4	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, eax
  009a9	a0 14 00 00 00	 mov	 al, BYTE PTR ??_C@_0BF@BFOFAFDI@?$DP?l?$KL?n?$KE?$DP?V?X?J?$KL?o?T?$OA?x?M?$KH?T?t?l?$PN@+20
  009ae	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0
  009b5	a2 14 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+20, al

; 3935 : 		initCommonMsgWin();

  009ba	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  009bf	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  009c9	e9 91 00 00 00	 jmp	 $LN85@characterL
$LN75@characterL:

; 3913 : 					case 10: strcpy(msg, "æ¨å·²å¨å£å½æç³»ç»å¥");	break;
; 3914 : 					case 11: strcpy(msg, "æ¨å·²å¨å¤©é¹°æç³»ç»å¥");	break;

  009ce	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@PEBLFAAD@?$DP?l?$KL?n?$KE?t?$LI?$DP?$OA?x?M?$KH?T?t?l?$PN@
  009d5	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@PEBLFAAD@?$DP?l?$KL?n?$KE?t?$LI?$DP?$OA?x?M?$KH?T?t?l?$PN@+16
  009da	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, al
  009df	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  009e6	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  009eb	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  009f5	eb 68		 jmp	 SHORT $LN85@characterL
$LN76@characterL:

; 3915 : 					case 12: strcpy(msg, "æ¨å·²å¨æ°çæç³»ç»å¥");	break;

  009f7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@LBDONGAD@?$DP?l?$KL?n?$KE?c?f?M?$KD?$OA?x?M?$KH?T?t?l?$PN@
  009fe	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@LBDONGAD@?$DP?l?$KL?n?$KE?c?f?M?$KD?$OA?x?M?$KH?T?t?l?$PN@+16
  00a04	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA+16, ax
  00a0a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??characterLoginProc@@YAXXZ@4PADA, xmm0

; 3935 : 		initCommonMsgWin();

  00a11	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00a16	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00a20	eb 3d		 jmp	 SHORT $LN85@characterL
$LN62@characterL:

; 3916 : 					case 13: strcpy(msg, "æ¨å·²å¨æµè¯æç³»ç»å¥");	break;
; 3917 : 					default: strcpy(msg, "ç­¾å¥å¤çå¤±è´¥ã(1002)");		break;
; 3918 : 					}
; 3919 : 				}
; 3920 : 
; 3921 : 				else {
; 3922 : 					SubProcNo = 100;
; 3923 : 					sprintf(msg, "ì²´í¬ì¸ ì²ë¦¬ ì¤í¨(%d)ã", ret);

  00a22	50		 push	 eax
  00a23	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OOIMHFEI@?C?$LM?E?$KJ?$MA?N?5?C?$LD?$LI?$KO?5?$LN?G?F?P?$CI?$CFd?$CJ?$KB?$KD@
  00a28	68 00 00 00 00	 push	 OFFSET ?msg@?1??characterLoginProc@@YAXXZ@4PADA
  00a2d	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  00a37	e8 00 00 00 00	 call	 _sprintf
  00a3c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN87@characterL:

; 3924 : 				}
; 3925 : #endif
; 3926 : 
; 3927 : #ifdef _STONDEBUG_
; 3928 : 		char msg2[1024];
; 3929 : 		sprintf(msg2, "%d %s", ret, msg);
; 3930 : 		strncpy(msg, msg2, sizeof(msg));
; 3931 : #endif
; 3932 : 
; 3933 : 	}
; 3934 : 	if (SubProcNo == 100) {

  00a3f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN63@characterL:
  00a44	83 f8 64	 cmp	 eax, 100		; 00000064H
  00a47	75 11		 jne	 SHORT $LN79@characterL

; 3935 : 		initCommonMsgWin();

  00a49	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 3936 : 		SubProcNo++;

  00a4e	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 3937 : 	}
; 3938 : 	if (SubProcNo == 101) {

  00a58	eb 05		 jmp	 SHORT $LN85@characterL
$LN79@characterL:
  00a5a	83 f8 65	 cmp	 eax, 101		; 00000065H
  00a5d	75 1b		 jne	 SHORT $LN81@characterL
$LN85@characterL:

; 3939 : 		if (commonMsgWin(msg)) {

  00a5f	68 00 00 00 00	 push	 OFFSET ?msg@?1??characterLoginProc@@YAXXZ@4PADA
  00a64	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00a69	83 c4 04	 add	 esp, 4
  00a6c	85 c0		 test	 eax, eax
  00a6e	74 0a		 je	 SHORT $LN81@characterL

; 3940 : 			// ï¼¯ï¼«????????
; 3941 : 			ChangeProc(PROC_TITLE_MENU);

  00a70	6a 02		 push	 2
  00a72	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  00a77	83 c4 04	 add	 esp, 4
$LN81@characterL:

; 3942 : 		}
; 3943 : 	}
; 3944 : 	RunAction();

  00a7a	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 3945 : 	StockTaskDispBuffer();

  00a7f	e9 00 00 00 00	 jmp	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer
$LN86@characterL:

; 3946 : }

  00a84	00 00 00 00	 DD	 $LN64@characterL
  00a88	00 00 00 00	 DD	 $LN65@characterL
  00a8c	00 00 00 00	 DD	 $LN66@characterL
  00a90	00 00 00 00	 DD	 $LN67@characterL
  00a94	00 00 00 00	 DD	 $LN68@characterL
  00a98	00 00 00 00	 DD	 $LN69@characterL
  00a9c	00 00 00 00	 DD	 $LN70@characterL
  00aa0	00 00 00 00	 DD	 $LN71@characterL
  00aa4	00 00 00 00	 DD	 $LN72@characterL
  00aa8	00 00 00 00	 DD	 $LN73@characterL
  00aac	00 00 00 00	 DD	 $LN69@characterL
  00ab0	00 00 00 00	 DD	 $LN75@characterL
  00ab4	00 00 00 00	 DD	 $LN76@characterL
  00ab8	00 00 00 00	 DD	 $LN69@characterL
?characterLoginProc@@YAXXZ ENDP				; characterLoginProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?selectCharacterProc@@YAXXZ
_TEXT	SEGMENT
_i$1$ = -84						; size = 4
tv2214 = -80						; size = 4
tv2211 = -76						; size = 4
tv2207 = -72						; size = 4
tv2209 = -68						; size = 4
tv2208 = -64						; size = 4
_btnUseFlag$1$ = -60					; size = 4
_attrColor$ = -56					; size = 32
_name$1 = -24						; size = 17
_name$2 = -24						; size = 17
__$ArrayPad$ = -4					; size = 4
?selectCharacterProc@@YAXXZ PROC			; selectCharacterProc, COMDAT

; 1378 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 54	 sub	 esp, 84			; 00000054H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1379 : 	int ret;
; 1380 : 	int i, j;
; 1381 : 	int login;
; 1382 : 	int x;
; 1383 : 	static char msg[256];
; 1384 : 	static int btnGraId[] = { -2, -2, -2, -2, -2, -2, -2 };
; 1385 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1386 : 	static int PkBtn[1] = { -2 };
; 1387 : 	int x3, y3;
; 1388 : 	char ServerName[13][32] = {
; 1389 : 		{"é¢è®¾"} ,
; 1390 : 		{"å¤©é¹°ããã"} ,
; 1391 : 		{"ç½è·¯å®¶åº­ã"} ,
; 1392 : 		{"å£å½ããã"} ,
; 1393 : 		{"æä¹å­ãã"} ,
; 1394 : 		{"é¶æ²³ç³»ãã"} ,
; 1395 : 		{"å¤ªé³ããã"} ,
; 1396 : 		{"åæããã"} ,
; 1397 : 		{"å¤©ç¥ããã"} ,
; 1398 : 		{"ç´«å¾®ããã"} ,
; 1399 : 		{"èé¾ããã"} ,
; 1400 : 		{"é¦æ¸¯å°åºã"} ,
; 1401 : 		{"é¦æ¸¯æ°çã"} };
; 1402 : #endif
; 1403 : 	int btnUseFlag = 0;
; 1404 : 	int attrColor[4][2] =
; 1405 : 	{
; 1406 : 		{ SYSTEM_PAL_GREEN,  SYSTEM_PAL_GREEN2  },
; 1407 : 		{ SYSTEM_PAL_AQUA,   SYSTEM_PAL_AQUA2   },
; 1408 : 		{ SYSTEM_PAL_RED,    SYSTEM_PAL_RED2    },
; 1409 : 		{ SYSTEM_PAL_YELLOW, SYSTEM_PAL_YELLOW2 }
; 1410 : 	};
; 1411 : 	int x1, y1, x2, y2;
; 1412 : 
; 1413 : 	if (SubProcNo == 0)

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?SubProcNo@@3IA, 0 ; SubProcNo
  00017	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000006000000fe00000002000000fa
  0001e	0f 11 45 c8	 movups	 XMMWORD PTR _attrColor$[ebp], xmm0
  00022	56		 push	 esi
  00023	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000003000000fb00000001000000f9
  0002a	57		 push	 edi
  0002b	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _btnUseFlag$1$[ebp], 0
  00032	0f 11 45 d8	 movups	 XMMWORD PTR _attrColor$[ebp+16], xmm0
  00036	75 11		 jne	 SHORT $LN11@selectChar

; 1414 : 	{
; 1415 : 		SubProcNo++;

  00038	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo

; 1416 : 
; 1417 : 		initDownloadCharList();

  00042	e8 00 00 00 00	 call	 ?initDownloadCharList@@YAXXZ ; initDownloadCharList

; 1418 : 	}
; 1419 : 	if (SubProcNo == 1)

  00047	eb 0d		 jmp	 SHORT $LN148@selectChar
$LN11@selectChar:
  00049	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo
  00050	0f 85 35 08 00
	00		 jne	 $LN155@selectChar
$LN148@selectChar:

; 1420 : 	{
; 1421 : 		ret = downloadCharList();

  00056	e8 00 00 00 00	 call	 ?downloadCharList@@YAHXZ ; downloadCharList

; 1422 : 		if (ret == 1) {

  0005b	83 f8 01	 cmp	 eax, 1
  0005e	75 19		 jne	 SHORT $LN13@selectChar

; 1423 : 			SubProcNo = 10;
; 1424 : 			play_bgm(2);

  00060	6a 02		 push	 2
  00062	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH
  0006c	e8 00 00 00 00	 call	 ?play_bgm@@YAHH@Z	; play_bgm
  00071	83 c4 04	 add	 esp, 4

; 1425 : 		}

  00074	e9 12 08 00 00	 jmp	 $LN155@selectChar
$LN13@selectChar:

; 1426 : 		else if (ret == -1) {

  00079	83 f8 ff	 cmp	 eax, -1
  0007c	75 2c		 jne	 SHORT $LN15@selectChar

; 1427 : 			SubProcNo = 100;

  0007e	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1428 : 			cleanupNetwork();

  00088	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1429 : 			strcpy(msg, "WGSì ì°ê²°ì¤í¨ï¼");

  0008d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BB@DFFIFBLJ@WGS?$LP?M?5?$LP?$KM?$LA?a?$LN?G?F?P?$KD?$KB@
  00094	a0 10 00 00 00	 mov	 al, BYTE PTR ??_C@_0BB@DFFIFBLJ@WGS?$LP?M?5?$LP?$KM?$LA?a?$LN?G?F?P?$KD?$KB@+16
  00099	a2 10 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, al
  0009e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0

; 1430 : 		}

  000a5	e9 e1 07 00 00	 jmp	 $LN155@selectChar
$LN15@selectChar:

; 1431 : 		else if (ret == -2) {

  000aa	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  000ad	75 54		 jne	 SHORT $LN17@selectChar

; 1432 : 			SubProcNo = 100;

  000af	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1433 : 			cleanupNetwork();

  000b9	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1434 : 			strcpy(msg, "ë¤í¸ìí¬ ì¬ì©ëì´ë§ìµëë¤ï¼ëì¤ì ë¤ììëï¼");

  000be	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@
  000c5	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@+40
  000ca	a3 28 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+40, eax
  000cf	a0 2c 00 00 00	 mov	 al, BYTE PTR ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@+44
  000d4	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  000db	a2 2c 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+44, al
  000e0	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@+16
  000e7	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  000ee	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CN@CDKJOFHB@?$LD?W?F?$KO?$LP?v?E?$KJ?5?$LL?g?$LP?k?$LH?$KO?$MA?L?$LI?$LJ?$LN?$MA?$LE?O?$LE?Y?$KD?$KM?$LD?$KK?A?$NP@+32
  000f6	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1435 : 		}

  000fe	e9 88 07 00 00	 jmp	 $LN155@selectChar
$LN17@selectChar:

; 1436 : 		else if (ret == -3) {

  00103	83 f8 fd	 cmp	 eax, -3			; fffffffdH
  00106	75 58		 jne	 SHORT $LN19@selectChar

; 1437 : 			SubProcNo = 100;

  00108	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1438 : 			cleanupNetwork();

  00112	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1439 : 			strcpy(msg, "ê³ì  ëë ë¹ë°ë²í¸ ìëª»ìë ¥ï¼ë¹íìì ê°ìí ìëí´ì£¼ì¸ìï¼");

  00117	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@
  0011e	a1 38 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@+56
  00123	a3 38 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+56, eax
  00128	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  0012f	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@+16
  00136	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  0013d	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@+32
  00144	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  0014b	f3 0f 7e 05 30
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0DM@MKPKCFOC@?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?5?$MA?$NP?$LI?x?$MA?T?$LH?B?$KD?$KM?$LK?q@+48
  00153	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0

; 1440 : 		}

  0015b	e9 2b 07 00 00	 jmp	 $LN155@selectChar
$LN19@selectChar:

; 1441 : 		else if (ret == -4) {

  00160	83 f8 fc	 cmp	 eax, -4			; fffffffcH
  00163	75 62		 jne	 SHORT $LN21@selectChar

; 1442 : 			SubProcNo = 100;

  00165	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1443 : 			cleanupNetwork();

  0016f	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1444 : 			strcpy(msg, "GS ê²ì í¬ì¸í¸ ì¬ì©ìë£, íì´ê²ìë§ì ë¬´ë£ WGS ê²ì í¬ì¸í¸ ì ì²­í´ì£ ï¼");

  00174	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@
  0017b	a1 40 00 00 00	 mov	 eax, DWORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@+64
  00180	a3 40 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+64, eax
  00185	66 a1 44 00 00
	00		 mov	 ax, WORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@+68
  0018b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00192	66 a3 44 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+68, ax
  00198	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@+16
  0019f	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  001a6	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@+32
  001ad	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  001b4	0f 10 05 30 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EG@HMOFLOCG@GS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?0?5?H?$KN?$MA?L?$LA?T@+48
  001bb	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0

; 1445 : 		}

  001c2	e9 c4 06 00 00	 jmp	 $LN155@selectChar
$LN21@selectChar:

; 1446 : 		else if (ret == -5) {

  001c7	83 f8 fb	 cmp	 eax, -5			; fffffffbH
  001ca	75 66		 jne	 SHORT $LN23@selectChar

; 1447 : 			SubProcNo = 100;

  001cc	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1448 : 			cleanupNetwork();

  001d6	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1449 : 			strcpy(msg, "WGS ê²ì í¬ì¸í¸ ì¬ì©ìë£ WGS í¬ì¸í¸ ì¹´ë êµ¬ë§¤ í íìê²ìë§ì¼ë¡ ì¹´ë ë°ê¸ï¼");

  001db	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@
  001e2	a1 48 00 00 00	 mov	 eax, DWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@+72
  001e7	a3 48 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+72, eax
  001ec	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  001f3	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@+16
  001fa	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00201	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@+32
  00208	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  0020f	0f 10 05 30 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@+48
  00216	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0
  0021d	f3 0f 7e 05 40
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0EM@MKKKOLIM@WGS?5?$LA?T?$MA?S?5?F?w?$MA?N?F?$KO?5?$LL?g?$LP?k?$LP?O?$LH?a?5WGS?5?F?w@+64
  00225	66 0f d6 05 40
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+64, xmm0

; 1450 : 		}

  0022d	e9 59 06 00 00	 jmp	 $LN155@selectChar
$LN23@selectChar:

; 1451 : 		else if (ret == -6) {

  00232	83 f8 fa	 cmp	 eax, -6			; fffffffaH
  00235	75 62		 jne	 SHORT $LN25@selectChar

; 1452 : 			SubProcNo = 100;

  00237	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1453 : 			cleanupNetwork();

  00241	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1454 : 			strcpy(msg, "ë¹ë° ë²í¸ë¥¼ ìë ¥íê±°ë ìëª»ë ê³ì ì´ë ì¬ì©í ê²ì í¬ì¸í¸ë WGS.ã");

  00246	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@
  0024d	66 a1 40 00 00
	00		 mov	 ax, WORD PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@+64
  00253	66 a3 40 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+64, ax
  00259	a0 42 00 00 00	 mov	 al, BYTE PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@+66
  0025e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00265	a2 42 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+66, al
  0026a	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@+16
  00271	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00278	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@+32
  0027f	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  00286	0f 10 05 30 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0ED@GFEEMBM@?$LK?q?$LJ?P?5?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LA?E?$LD?$KK?5?$MA?$NP?$LI?x?$LF?H?5?$LA@+48
  0028d	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0

; 1455 : 		}

  00294	e9 f2 05 00 00	 jmp	 $LN155@selectChar
$LN25@selectChar:

; 1456 : 		else if (ret == -7) {

  00299	83 f8 f9	 cmp	 eax, -7			; fffffff9H
  0029c	75 35		 jne	 SHORT $LN27@selectChar

; 1457 : 			SubProcNo = 100;

  0029e	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1458 : 			cleanupNetwork();

  002a8	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1459 : 			strcpy(msg, "æ­¤äº§åå°æªæ³¨åï¼è¯·åå°åä¹æ¸¸æç½å®ææ³¨åã");

  002ad	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@
  002b4	66 a1 20 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@+32
  002ba	66 a3 20 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, ax
  002c0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  002c7	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CC@CAOCGFP@?s?$KO?$DP?y?$KB?$DP?Z?$LB?q?$LM?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h?G?$OA?w?q?$LM?$DP@+16

; 1460 : 		}

  002ce	e9 b1 05 00 00	 jmp	 $LN159@selectChar
$LN27@selectChar:

; 1461 : 		else if (ret == -8) {

  002d3	83 f8 f8	 cmp	 eax, -8			; fffffff8H
  002d6	75 38		 jne	 SHORT $LN29@selectChar

; 1462 : 			SubProcNo = 100;

  002d8	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1463 : 			cleanupNetwork();

  002e2	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1464 : 			strcpy(msg, "äº§åæ³¨åä½¿ç¨æ¬¡æ°å·²ç¨å®ï¼");

  002e7	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@+16
  002ec	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@
  002f3	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, eax
  002f8	66 a1 14 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BG@FCCDGFEH@?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KD?$KB@+20
  002fe	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00305	66 a3 14 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+20, ax

; 1465 : 		}

  0030b	e9 7b 05 00 00	 jmp	 $LN155@selectChar
$LN29@selectChar:

; 1466 : 		else if (ret == -9) {

  00310	83 f8 f7	 cmp	 eax, -9			; fffffff7H
  00313	75 49		 jne	 SHORT $LN31@selectChar

; 1467 : 			SubProcNo = 100;

  00315	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1468 : 			cleanupNetwork();

  0031f	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1469 : 			strcpy(msg, "ë°ì´í°ì ì¥ìê°ì¬ì©ì¤ï¼ëì¤ìë¤ììëï¼");

  00324	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@+32
  00329	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@
  00330	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, eax
  00335	66 a1 24 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@+36
  0033b	66 a3 24 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+36, ax
  00341	a0 26 00 00 00	 mov	 al, BYTE PTR ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@+38
  00346	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  0034d	a2 26 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+38, al
  00352	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CH@OACDIMFL@?$LF?$KF?$MA?L?E?M?$MA?z?$MA?e?$LM?R?$LA?$KB?$LL?g?$LP?k?A?$NP?$KD?$KM?$LD?$KK?A?$NP?$LP?$KB?$LE?Y?$LN@+16

; 1470 : 		}

  00359	e9 26 05 00 00	 jmp	 $LN159@selectChar
$LN31@selectChar:

; 1471 : 		else if (ret == -10) {

  0035e	83 f8 f6	 cmp	 eax, -10		; fffffff6H
  00361	75 3a		 jne	 SHORT $LN33@selectChar

; 1472 : 			SubProcNo = 100;

  00363	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1473 : 			cleanupNetwork();

  0036d	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1474 : 			strcpy(msg, "ì¸ì¦ì¤í¨ï¼"/*"ç³»ç»å¿çº¿ä¸­ï¼è¯·ç¨ååè¯ï¼"*/);

  00372	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@+8
  00378	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@
  00380	66 a3 08 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+8, ax
  00386	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@CKPMJLEL@?$MA?N?A?u?$LN?G?F?P?$KD?$KB@+10
  0038b	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00393	a2 0a 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+10, al

; 1475 : 		}

  00398	e9 ee 04 00 00	 jmp	 $LN155@selectChar
$LN33@selectChar:

; 1476 : 		else if (ret == -11) {

  0039d	83 f8 f5	 cmp	 eax, -11		; fffffff5H
  003a0	75 38		 jne	 SHORT $LN35@selectChar

; 1477 : 			SubProcNo = 100;

  003a2	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1478 : 			cleanupNetwork();

  003ac	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1479 : 			strcpy(msg, "ì´ ìë²ë ìë¦¬ì¤ã");

  003b1	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@+16
  003b7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@
  003be	66 a3 10 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, ax
  003c4	a0 12 00 00 00	 mov	 al, BYTE PTR ??_C@_0BD@EJCLNBGJ@?$MA?L?5?$LM?$KN?$LJ?v?$LE?B?5?$LM?v?$LI?$KO?A?$NP?$KB?$KD@+18
  003c9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  003d0	a2 12 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+18, al

; 1480 : 		}

  003d5	e9 b1 04 00 00	 jmp	 $LN155@selectChar
$LN35@selectChar:

; 1481 : #ifdef _CHANGEGALAXY
; 1482 : 		else if (ret == -12) {

  003da	83 f8 f4	 cmp	 eax, -12		; fffffff4H
  003dd	75 48		 jne	 SHORT $LN37@selectChar

; 1483 : 			SubProcNo = 100;

  003df	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1484 : 			cleanupNetwork();

  003e9	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1485 : 			strcpy(msg, "ë¤ë¥¸ë´ì©ì ì²ë¦¬ì¤ìëë¤ ì ìí ë¤ì ì¬ì©í´ì£¼ì¸ì ã");

  003ee	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@
  003f5	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@+48
  003fa	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, eax
  003ff	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00406	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@+16
  0040d	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00414	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DE@DJLFGHLF@?$LE?Y?$LI?$KF?$LD?$LL?$LP?k?$MA?$LL?5?C?$LD?$LI?$KO?A?$NP?$MA?T?$LE?O?$LE?Y?5?$MA?a?$LN?C?H?D?5@+32
  0041b	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1486 : 		}

  00422	e9 64 04 00 00	 jmp	 $LN155@selectChar
$LN37@selectChar:

; 1487 : #endif
; 1488 : #ifdef _ERROR301
; 1489 : 		else if (ret == -13) {

  00427	83 f8 f3	 cmp	 eax, -13		; fffffff3H
  0042a	75 27		 jne	 SHORT $LN39@selectChar

; 1490 : 			SubProcNo = 100;

  0042c	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1491 : 			cleanupNetwork();

  00436	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1492 : 			strcpy(msg, "ì´ ì íì ìì§ ë±ë¡ëì§ ììê±°ë, íì ìê·¸ë ì´ë ì ì°¨ê° ì§íëì§ ììì´ì.ã");

  0043b	b9 13 00 00 00	 mov	 ecx, 19			; 00000013H
  00440	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_0EO@GDIJOFL@?$MA?L?5?A?$KG?G?$LA?$MA?$LK?5?$LO?F?A?w?5?$LF?n?$LH?O?$LF?G?A?v?5?$LO?J?$LO?R?$LA?E?$LD@
  00445	bf 00 00 00 00	 mov	 edi, OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  0044a	f3 a5		 rep movsd
  0044c	66 a5		 movsw

; 1493 : 		}

  0044e	e9 38 04 00 00	 jmp	 $LN155@selectChar
$LN39@selectChar:

; 1494 : #endif
; 1495 : 		else if (ret == -101) {

  00453	83 f8 9b	 cmp	 eax, -101		; ffffff9bH
  00456	75 4a		 jne	 SHORT $LN41@selectChar

; 1496 : 			SubProcNo = 100;

  00458	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1497 : 			cleanupNetwork();

  00462	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1498 : 			strcpy(msg, "101 ë°ì´í°ë² ì´ì¤ ìë²ì ì°ê²°í ìììµëë¤.ã");

  00467	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@
  0046e	a1 28 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@+40
  00473	a3 28 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+40, eax
  00478	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  0047f	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@+16
  00486	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  0048d	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CM@LDMHIANO@101?5?$LF?$KF?$MA?L?E?M?$LK?$KD?$MA?L?$LN?$LK?5?$LM?$KN?$LJ?v?$LP?$KB?5?$LP?$KM?$LA?a?G?R?$LM@+32
  00495	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1499 : 		}

  0049d	e9 e9 03 00 00	 jmp	 $LN155@selectChar
$LN41@selectChar:

; 1500 : 		else if (ret == -102) {

  004a2	83 f8 9a	 cmp	 eax, -102		; ffffff9aH
  004a5	75 3f		 jne	 SHORT $LN43@selectChar

; 1501 : 			SubProcNo = 100;

  004a7	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1502 : 			cleanupNetwork();

  004b1	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1503 : 			strcpy(msg, "102 ì¬ë°ë¥¸ ì ë³´ë¥¼ ê°ì ¸ì¬ì ììµëë¤ã");

  004b6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@
  004bd	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@+32
  004c2	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, eax
  004c7	66 a1 24 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@+36
  004cd	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  004d4	66 a3 24 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+36, ax
  004da	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CG@PNGEGPHE@102?5?$LP?C?$LJ?Y?$LI?$KF?5?A?$KE?$LK?$LI?$LI?$KG?5?$LA?$KB?A?$KO?$LP?C?$LM?v?5?$LO?x?$LN?$MA@+16

; 1504 : 		}

  004e1	e9 9e 03 00 00	 jmp	 $LN159@selectChar
$LN43@selectChar:

; 1505 : 		else if (ret == -103) {

  004e6	83 f8 99	 cmp	 eax, -103		; ffffff99H
  004e9	75 42		 jne	 SHORT $LN45@selectChar

; 1506 : 			SubProcNo = 100;

  004eb	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1507 : 			cleanupNetwork();

  004f5	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1508 : 			strcpy(msg, "103 ì°ê²°í ìììµëë¤ã");

  004fa	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+16
  004ff	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@
  00506	a3 10 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, eax
  0050b	66 a1 14 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+20
  00511	66 a3 14 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+20, ax
  00517	a0 16 00 00 00	 mov	 al, BYTE PTR ??_C@_0BH@BELNNDBH@103?5?$LP?$KM?$LA?a?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+22
  0051c	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00523	a2 16 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+22, al

; 1509 : 		}

  00528	e9 5e 03 00 00	 jmp	 $LN155@selectChar
$LN45@selectChar:

; 1510 : 		else if (ret == -201) {

  0052d	3d 37 ff ff ff	 cmp	 eax, -201		; ffffff37H
  00532	75 52		 jne	 SHORT $LN47@selectChar

; 1511 : 			SubProcNo = 100;

  00534	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1512 : 			cleanupNetwork();

  0053e	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1513 : 			strcpy(msg, "201 ìì´ë í¨ì¤ìëê° íë ¸ê±°ë ìì±ëì§ ìììµëë¤ã");

  00543	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@
  0054a	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@+48
  0054f	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, eax
  00554	a0 34 00 00 00	 mov	 al, BYTE PTR ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@+52
  00559	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00560	a2 34 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+52, al
  00565	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@+16
  0056c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00573	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DF@ONGBOPMG@201?5?$LO?F?$MA?L?$LF?p?5?F?P?$LN?$LK?$LP?v?$LF?e?$LA?$KB?5?F?$LC?$LH?H?$LA?E?$LD?$KK?5@+32
  0057a	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1514 : 		}

  00581	e9 05 03 00 00	 jmp	 $LN155@selectChar
$LN47@selectChar:

; 1515 : 		else if (ret == -202) {

  00586	3d 36 ff ff ff	 cmp	 eax, -202		; ffffff36H
  0058b	75 48		 jne	 SHORT $LN49@selectChar

; 1516 : 			SubProcNo = 100;

  0058d	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1517 : 			cleanupNetwork();

  00597	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1518 : 			strcpy(msg, "202 ì¤ë³µë¡ê·¸ì¸ ë¶ê°ë¥í©ëë¤ã");

  0059c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@
  005a3	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@+24
  005a8	a3 18 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+24, eax
  005ad	66 a1 1c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@+28
  005b3	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  005ba	66 a3 1c 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+28, ax
  005c0	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BO@FGBMDDDO@202?5?A?$NP?$LK?$LJ?$LH?N?$LB?W?$MA?N?5?$LK?R?$LA?$KB?$LE?I?G?U?$LE?O?$LE?Y?$KB?$KD@+16
  005c8	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0

; 1519 : 		}

  005d0	e9 b6 02 00 00	 jmp	 $LN155@selectChar
$LN49@selectChar:

; 1520 : 		else if (ret == -203) {

  005d5	3d 35 ff ff ff	 cmp	 eax, -203		; ffffff35H
  005da	75 28		 jne	 SHORT $LN51@selectChar

; 1521 : 			SubProcNo = 100;

  005dc	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1522 : 			cleanupNetwork();

  005e6	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1523 : 			strcpy(msg, "203 ì´ë¯¸ ë¡ê·¸ì¸ì¤ìëë¤. ê³ì ì´ ì ê¹ì¼ë¡ 10ë¶í ìëí´ì£¼ì¸ìã");

  005eb	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  005f0	be 00 00 00 00	 mov	 esi, OFFSET ??_C@_0DP@GGBCENFH@203?5?$MA?L?$LJ?L?5?$LH?N?$LB?W?$MA?N?A?$NP?$MA?T?$LE?O?$LE?Y?4?5?$LA?h?A?$KE?$MA?L@
  005f5	bf 00 00 00 00	 mov	 edi, OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  005fa	f3 a5		 rep movsd
  005fc	66 a5		 movsw
  005fe	a4		 movsb

; 1524 : 		}

  005ff	e9 87 02 00 00	 jmp	 $LN155@selectChar
$LN51@selectChar:

; 1525 : 		else if (ret == -204) {

  00604	3d 34 ff ff ff	 cmp	 eax, -204		; ffffff34H
  00609	75 33		 jne	 SHORT $LN53@selectChar

; 1526 : 			SubProcNo = 100;

  0060b	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1527 : 			cleanupNetwork();

  00615	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1528 : 			strcpy(msg, "204 ì¬ì©ìê° ì´ë¯¸ ê²ìì¤ìëë¤ã");

  0061a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@
  00621	a0 20 00 00 00	 mov	 al, BYTE PTR ??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@+32
  00626	a2 20 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, al
  0062b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00632	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CB@OJHBPHKJ@204?5?$LL?g?$LP?k?$MA?Z?$LA?$KB?5?$MA?L?$LJ?L?5?$LA?T?$MA?S?A?$NP?$MA?T?$LE?O?$LE?Y?$KB@+16

; 1529 : 		}

  00639	e9 46 02 00 00	 jmp	 $LN159@selectChar
$LN53@selectChar:

; 1530 : 		else if (ret == -205) {

  0063e	3d 33 ff ff ff	 cmp	 eax, -205		; ffffff33H
  00643	75 54		 jne	 SHORT $LN55@selectChar

; 1531 : 			SubProcNo = 100;

  00645	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1532 : 			cleanupNetwork();

  0064f	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1533 : 			strcpy(msg, "205 ì´ ê²ìì ë¡ê·¸ì¸íì§ ëª»íê±°ë ë¡ê·¸ì¸ ì¤ë¥ìëë¤ã");

  00654	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@
  0065b	a1 30 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@+48
  00660	a3 30 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, eax
  00665	66 a1 34 00 00
	00		 mov	 ax, WORD PTR ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@+52
  0066b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00672	66 a3 34 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+52, ax
  00678	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@+16
  0067f	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00686	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DG@JNDCNPGC@205?5?$MA?L?5?$LA?T?$MA?S?$LP?$KB?5?$LH?N?$LB?W?$MA?N?G?O?A?v?5?$LI?x?G?$NP?$LA?E@+32
  0068d	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1534 : 		}

  00694	e9 f2 01 00 00	 jmp	 $LN155@selectChar
$LN55@selectChar:

; 1535 : 		else if (ret == -301) {

  00699	3d d3 fe ff ff	 cmp	 eax, -301		; fffffed3H
  0069e	75 58		 jne	 SHORT $LN57@selectChar

; 1536 : 			SubProcNo = 100;

  006a0	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1537 : 			cleanupNetwork();

  006aa	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1538 : 			strcpy(msg, "301 ë±ë¡ëì§ìë ê³ì ìëë¤ ë±ë¡í ì´ì©í´ì£¼ìê¸°ë°ëëë¤..ã");

  006af	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@
  006b6	a1 38 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@+56
  006bb	a3 38 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+56, eax
  006c0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  006c7	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@+16
  006ce	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  006d5	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@+32
  006dc	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  006e3	f3 0f 7e 05 30
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0DM@MBGFAAKE@301?5?$LF?n?$LH?O?$LF?G?A?v?$LO?J?$LE?B?5?$LA?h?A?$KE?$MA?T?$LE?O?$LE?Y?5?$LF?n?$LH@+48
  006eb	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0

; 1539 : 		}

  006f3	e9 93 01 00 00	 jmp	 $LN155@selectChar
$LN57@selectChar:

; 1540 : 		else if (ret == -302) {

  006f8	3d d2 fe ff ff	 cmp	 eax, -302		; fffffed2H
  006fd	75 64		 jne	 SHORT $LN59@selectChar

; 1541 : 			SubProcNo = 100;

  006ff	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1542 : 			cleanupNetwork();

  00709	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1543 : 			strcpy(msg, "302 æ¨çäº§ååºå·å°æªå¼å¡ï¼è¯·åæ£æ¥æ¨ççµå­é®ä»¶ï¼ä¾ç§åä¹æ¸¸æç½å¯çç¡®è®¤ä¿¡è¿è¡å¼å¡ã");

  0070e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@
  00715	a1 38 00 00 00	 mov	 eax, DWORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@+56
  0071a	a3 38 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+56, eax
  0071f	66 a1 3c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@+60
  00725	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  0072c	66 a3 3c 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+60, ax
  00732	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@+16
  00739	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00740	0f 10 05 20 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@+32
  00747	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0
  0074e	f3 0f 7e 05 30
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0DO@PIHOLGOA@302?5?$DP?n?$NM?$DP?y?$KB?$NP?m?$DP?$DP?Z?$LB?$DP?$DP?$KD?$KM?$DP?$OA?$LL?$DP?$DP?$DP?n?$NM?$DP?m?$KN@+48
  00756	66 0f d6 05 30
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+48, xmm0

; 1544 : 		}

  0075e	e9 28 01 00 00	 jmp	 $LN155@selectChar
$LN59@selectChar:

; 1545 : 		else if (ret == -303) {

  00763	3d d1 fe ff ff	 cmp	 eax, -303		; fffffed1H
  00768	75 3e		 jne	 SHORT $LN61@selectChar

; 1546 : 			SubProcNo = 100;

  0076a	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1547 : 			cleanupNetwork();

  00774	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1548 : 			strcpy(msg, "303 äº§åæ³¨åä½¿ç¨æ¬¡æ°å·²ç¨å®ã");

  00779	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@
  00780	66 a1 18 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@+24
  00786	66 a3 18 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+24, ax
  0078c	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00793	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BK@IAPLJHAN@303?5?$DP?y?$KB?q?$LM?$DP?$NO?E?i?D?s?$KN?$DP?l?$KL?i?D?h?G?$KB?$KD@+16
  0079b	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0

; 1549 : 		}

  007a3	e9 e3 00 00 00	 jmp	 $LN155@selectChar
$LN61@selectChar:

; 1550 : 		else if (ret == -304) {

  007a8	3d d0 fe ff ff	 cmp	 eax, -304		; fffffed0H
  007ad	75 52		 jne	 SHORT $LN63@selectChar

; 1551 : 			SubProcNo = 100;

  007af	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1552 : 			cleanupNetwork();

  007b9	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1553 : 			strcpy(msg, "304 ê²ìë­í¹ìì»ììììµëë¤ã");

  007be	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@
  007c5	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+24
  007ca	a3 18 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+24, eax
  007cf	66 a1 1c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+28
  007d5	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  007dc	66 a3 1c 00 00
	00		 mov	 WORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+28, ax
  007e2	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+16
  007ea	a0 1e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BP@IOOEJBCN@304?5?$LA?T?$MA?S?$LH?$KJ?E?$LH?$MA?$LL?$LO?r?$MA?$LL?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KB?$KD@+30
  007ef	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  007f7	a2 1e 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+30, al

; 1554 : 		}

  007fc	e9 8a 00 00 00	 jmp	 $LN155@selectChar
$LN63@selectChar:

; 1555 : 		else if (ret == -401) {

  00801	3d 6f fe ff ff	 cmp	 eax, -401		; fffffe6fH
  00806	75 3d		 jne	 SHORT $LN65@selectChar

; 1556 : 			SubProcNo = 100;

  00808	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1557 : 			cleanupNetwork();

  00812	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1558 : 			strcpy(msg, "401 å°æªæ³¨åWGSç¹æ°å¡ï¼è¯·åå°åä¹æ¸¸æç½å®ææ³¨åã");

  00817	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@
  0081e	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00825	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@+16
  0082c	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
  00833	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CI@CNJAOKCA@401?5?$DP?Z?$LB?q?$LM?$DPWGS?o?C?$DP?$DP?$KD?$KM?$DP?$OA?$LL?S?p?$DP?$DP?j?$PN?$DP?$DP?h@+32
  0083b	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, xmm0

; 1559 : 		}

  00843	eb 46		 jmp	 SHORT $LN155@selectChar
$LN65@selectChar:

; 1560 : 		else if (ret == -402) {

  00845	3d 6e fe ff ff	 cmp	 eax, -402		; fffffe6eH
  0084a	75 3f		 jne	 SHORT $LN155@selectChar

; 1561 : 			SubProcNo = 100;

  0084c	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1562 : 			cleanupNetwork();

  00856	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 1563 : 			strcpy(msg, "402 WGSç¹æ°å¡å·²ç¨å®ç¹æ°ï¼è¯·å°åä¹æ¸¸æç½ç³è¯·ã");

  0085b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@
  00862	a1 20 00 00 00	 mov	 eax, DWORD PTR ??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@+32
  00867	a3 20 00 00 00	 mov	 DWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+32, eax
  0086c	a0 24 00 00 00	 mov	 al, BYTE PTR ??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@+36
  00871	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA, xmm0
  00878	a2 24 00 00 00	 mov	 BYTE PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+36, al
  0087d	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CF@PPIDBOKB@402?5WGS?o?C?$DP?$DP?l?$KL?i?D?h?G?o?C?$DP?$KD?$KM?$DP?S?p?$DP?$DP?j?$PN?$DP?$DP@+16
$LN159@selectChar:

; 1564 : 		}
; 1565 : 	}
; 1566 : 
; 1567 : 	if (SubProcNo == 10) {

  00884	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??selectCharacterProc@@YAXXZ@4PADA+16, xmm0
$LN155@selectChar:
  0088b	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH
  00892	75 42		 jne	 SHORT $LN68@selectChar

; 1568 : 		for (i = 0; i < sizeof(btnGraId) / sizeof(int); i++) {
; 1569 : 			btnGraId[i] = -2;

  00894	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0089b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA, xmm0
  008a2	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA+16, -2 ; fffffffeH
  008ac	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA+20, -2 ; fffffffeH
  008b6	c7 05 18 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA+24, -2 ; fffffffeH

; 1570 : 		}
; 1571 : 		SubProcNo++;

  008c0	c7 05 00 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 11 ; SubProcNo, 0000000bH

; 1574 : 		btnUseFlag = 2;

  008ca	c7 45 c4 02 00
	00 00		 mov	 DWORD PTR _btnUseFlag$1$[ebp], 2

; 1575 : 	}
; 1576 : 	if (SubProcNo == 20) {

  008d1	e9 4e 01 00 00	 jmp	 $LN86@selectChar
$LN68@selectChar:

; 1572 : 	}
; 1573 : 	if (SubProcNo == 11) {

  008d6	83 3d 00 00 00
	00 0b		 cmp	 DWORD PTR ?SubProcNo@@3IA, 11 ; SubProcNo, 0000000bH
  008dd	75 0c		 jne	 SHORT $LN69@selectChar

; 1574 : 		btnUseFlag = 2;

  008df	c7 45 c4 02 00
	00 00		 mov	 DWORD PTR _btnUseFlag$1$[ebp], 2

; 1575 : 	}
; 1576 : 	if (SubProcNo == 20) {

  008e6	e9 39 01 00 00	 jmp	 $LN86@selectChar
$LN69@selectChar:
  008eb	83 3d 00 00 00
	00 14		 cmp	 DWORD PTR ?SubProcNo@@3IA, 20 ; SubProcNo, 00000014H
  008f2	75 10		 jne	 SHORT $LN156@selectChar

; 1577 : 		//cary æä¸å é¤äººç©å
; 1578 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1579 : 		PkMenuflag = 0;
; 1580 : #endif
; 1581 : 
; 1582 : 		ret = DelCharGraColorWin();

  008f4	e8 00 00 00 00	 call	 ?DelCharGraColorWin@@YAHXZ ; DelCharGraColorWin

; 1583 : 		//		ret = commonYesNoWindow( 320, 240 );
; 1584 : 		if (ret == 1) {

  008f9	83 f8 01	 cmp	 eax, 1
  008fc	75 20		 jne	 SHORT $LN71@selectChar

; 1585 : 			SubProcNo++;

  008fe	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN156@selectChar:

; 1589 : 		}
; 1590 : 	}
; 1591 : 	if (SubProcNo == 21) {

  00904	83 3d 00 00 00
	00 15		 cmp	 DWORD PTR ?SubProcNo@@3IA, 21 ; SubProcNo, 00000015H
  0090b	75 25		 jne	 SHORT $LN74@selectChar

; 1592 : 		initDeleteCharacter();

  0090d	e8 00 00 00 00	 call	 ?initDeleteCharacter@@YAXXZ ; initDeleteCharacter

; 1593 : 		SubProcNo++;

  00912	c7 05 00 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 22 ; SubProcNo, 00000016H

; 1594 : 	}
; 1595 : 	if (SubProcNo == 22) {

  0091c	eb 1d		 jmp	 SHORT $LN150@selectChar
$LN71@selectChar:

; 1586 : 		}
; 1587 : 		else if (ret == 2) {

  0091e	83 f8 02	 cmp	 eax, 2
  00921	75 e1		 jne	 SHORT $LN156@selectChar

; 1588 : 			SubProcNo = 10;

  00923	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH

; 1589 : 		}
; 1590 : 	}
; 1591 : 	if (SubProcNo == 21) {

  0092d	e9 f2 00 00 00	 jmp	 $LN86@selectChar
$LN74@selectChar:

; 1594 : 	}
; 1595 : 	if (SubProcNo == 22) {

  00932	83 3d 00 00 00
	00 16		 cmp	 DWORD PTR ?SubProcNo@@3IA, 22 ; SubProcNo, 00000016H
  00939	75 53		 jne	 SHORT $LN80@selectChar
$LN150@selectChar:

; 1596 : 		ret = deleteCharacter();

  0093b	e8 00 00 00 00	 call	 ?deleteCharacter@@YAHXZ	; deleteCharacter

; 1597 : 		if (ret == 1) {

  00940	83 f8 01	 cmp	 eax, 1
  00943	75 44		 jne	 SHORT $LN76@selectChar

; 1598 : 			resetCharacterList(selectPcNo);

  00945	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  0094c	50		 push	 eax
  0094d	e8 00 00 00 00	 call	 ?resetCharacterList@@YAHH@Z ; resetCharacterList

; 1599 : 			clearUserSetting(selectPcNo);

  00952	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  00959	50		 push	 eax
  0095a	e8 00 00 00 00	 call	 ?clearUserSetting@@YAXH@Z ; clearUserSetting
  0095f	83 c4 08	 add	 esp, 8

; 1600 : 			if (saveNowState())

  00962	e8 00 00 00 00	 call	 ?saveNowState@@YAHXZ	; saveNowState

; 1601 : 			{
; 1602 : 			}
; 1603 : 			if (maxPcNo > 0)

  00967	66 a1 00 00 00
	00		 mov	 ax, WORD PTR ?maxPcNo@@3FA ; maxPcNo
  0096d	66 85 c0	 test	 ax, ax
  00970	7e 08		 jle	 SHORT $LN79@selectChar

; 1604 : 				maxPcNo--;

  00972	66 48		 dec	 ax
  00974	66 a3 00 00 00
	00		 mov	 WORD PTR ?maxPcNo@@3FA, ax ; maxPcNo
$LN79@selectChar:

; 1605 : 			SubProcNo = 10;

  0097a	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH

; 1606 : 		}

  00984	e9 9b 00 00 00	 jmp	 $LN86@selectChar
$LN76@selectChar:

; 1607 : 		else if (ret == -2) {

  00989	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  0098c	74 56		 je	 SHORT $LN151@selectChar
$LN80@selectChar:

; 1608 : 			SubProcNo = 300;
; 1609 : 		}
; 1610 : 	}
; 1611 : 	if (SubProcNo == 100) {

  0098e	83 3d 00 00 00
	00 64		 cmp	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  00995	75 11		 jne	 SHORT $LN81@selectChar

; 1612 : 		initCommonMsgWin();

  00997	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 1613 : 		SubProcNo++;

  0099c	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 1614 : 	}
; 1615 : 	if (SubProcNo == 101) {

  009a6	eb 09		 jmp	 SHORT $LN152@selectChar
$LN81@selectChar:
  009a8	83 3d 00 00 00
	00 65		 cmp	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H
  009af	75 27		 jne	 SHORT $LN157@selectChar
$LN152@selectChar:

; 1616 : 		if (commonMsgWin(msg)) {

  009b1	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  009b6	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  009bb	83 c4 04	 add	 esp, 4
  009be	85 c0		 test	 eax, eax
  009c0	74 16		 je	 SHORT $LN157@selectChar

; 1617 : 			ChangeProc(PROC_TITLE_MENU);

  009c2	6a 02		 push	 2
  009c4	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  009c9	83 c4 04	 add	 esp, 4

; 1618 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1619 : 			PkMenuflag = 0;
; 1620 : #endif
; 1621 : 			SubProcNo = 1;

  009cc	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo

; 1622 : 		}
; 1623 : 	}
; 1624 : 	//å é¤äººç©å¤±è´¥
; 1625 : 	if (SubProcNo == 300) {

  009d6	eb 4c		 jmp	 SHORT $LN86@selectChar
$LN157@selectChar:
  009d8	81 3d 00 00 00
	00 2c 01 00 00	 cmp	 DWORD PTR ?SubProcNo@@3IA, 300 ; SubProcNo, 0000012cH
  009e2	75 11		 jne	 SHORT $LN84@selectChar
$LN151@selectChar:

; 1626 : 		initCommonMsgWin();

  009e4	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 1627 : 		SubProcNo++;

  009e9	c7 05 00 00 00
	00 2d 01 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 301 ; SubProcNo, 0000012dH

; 1628 : 	}
; 1629 : 	if (SubProcNo == 301) {

  009f3	eb 0c		 jmp	 SHORT $LN153@selectChar
$LN84@selectChar:
  009f5	81 3d 00 00 00
	00 2d 01 00 00	 cmp	 DWORD PTR ?SubProcNo@@3IA, 301 ; SubProcNo, 0000012dH
  009ff	75 23		 jne	 SHORT $LN86@selectChar
$LN153@selectChar:

; 1630 : 		if (commonMsgWin("ìºë¦­í° ì­ì ë¶ê°ï¼ë¤ììëï¼"))

  00a01	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@LPFLMHNK@?D?$LD?$LI?$KP?E?M?5?$LL?h?A?$KG?$LK?R?$LA?$KB?$KD?$KM?$LE?Y?$LN?C?$LN?C?$LF?$LF?$KD?$KB@
  00a06	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00a0b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00a11	83 c4 04	 add	 esp, 4
  00a14	85 c0		 test	 eax, eax
  00a16	ba 0a 00 00 00	 mov	 edx, 10			; 0000000aH
  00a1b	0f 45 ca	 cmovne	 ecx, edx
  00a1e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?SubProcNo@@3IA, ecx ; SubProcNo
$LN86@selectChar:

; 1631 : 			SubProcNo = 10;
; 1632 : 	}
; 1633 : 
; 1634 : 	ret = selGraId(btnGraId, sizeof(btnGraId) / sizeof(int));

  00a24	6a 07		 push	 7
  00a26	68 00 00 00 00	 push	 OFFSET ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA
  00a2b	e8 00 00 00 00	 call	 ?selGraId@@YAHPAHH@Z	; selGraId
  00a30	8b f0		 mov	 esi, eax
  00a32	83 c4 08	 add	 esp, 8

; 1635 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1636 : 	extern int èªå¨ç»éæ¯å¦å¼å¯;
; 1637 : #endif
; 1638 : 	// JLWG èªå¨ç»ééæ©äººç©
; 1639 : 	if (ret == -1 && SubProcNo == 0xb)  //SubProcNoä¸º10çæ¶åæåå§åäººç©ä¿¡æ¯ï¼ä¸å®è¦ç­å°0xbæè½éæ©äººç©

  00a35	83 fe ff	 cmp	 esi, -1
  00a38	75 14		 jne	 SHORT $LN87@selectChar
  00a3a	83 3d 00 00 00
	00 0b		 cmp	 DWORD PTR ?SubProcNo@@3IA, 11 ; SubProcNo, 0000000bH
  00a41	0f 85 84 00 00
	00		 jne	 $LN95@selectChar

; 1640 : 	{
; 1641 : 		ret = JL_èªå¨ç»ééæ©äººç©();

  00a47	e8 00 00 00 00	 call	 ?JL_í»?Ôô???ìÑÚª@@YAHXZ	; JL_í»?Ôô???ìÑÚª
  00a4c	8b f0		 mov	 esi, eax
$LN87@selectChar:

; 1642 : 	}
; 1643 : 
; 1644 : 	if (ret == 0)

  00a4e	85 f6		 test	 esi, esi
  00a50	75 32		 jne	 SHORT $LN88@selectChar

; 1645 : 	{
; 1646 : 		fade_out_bgm();

  00a52	e8 00 00 00 00	 call	 ?fade_out_bgm@@YAXXZ	; fade_out_bgm

; 1647 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1648 : 		PkMenuflag = 0;
; 1649 : #endif
; 1650 : 
; 1651 : 		ChangeProc(PROC_TITLE_MENU);

  00a57	6a 02		 push	 2
  00a59	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc

; 1652 : 		SubProcNo = 1;
; 1653 : 		play_se(217, 320, 240);	// clickå£°

  00a5e	68 f0 00 00 00	 push	 240			; 000000f0H
  00a63	68 40 01 00 00	 push	 320			; 00000140H
  00a68	68 d9 00 00 00	 push	 217			; 000000d9H
  00a6d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo
  00a77	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00a7c	83 c4 10	 add	 esp, 16			; 00000010H

; 1654 : 	}

  00a7f	e9 72 01 00 00	 jmp	 $LN100@selectChar
$LN88@selectChar:

; 1655 : 	else
; 1656 : 		// î¡??î???????
; 1657 : 		if (1 <= ret && ret <= 2)

  00a84	83 fe 01	 cmp	 esi, 1
  00a87	7c 31		 jl	 SHORT $LN90@selectChar
  00a89	83 fe 02	 cmp	 esi, 2
  00a8c	7f 2c		 jg	 SHORT $LN90@selectChar

; 1658 : 		{
; 1659 : 			selectPcNo = ret - 1;

  00a8e	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]

; 1660 : 			ChangeProc(PROC_CHAR_MAKE);

  00a91	6a 04		 push	 4
  00a93	66 a3 00 00 00
	00		 mov	 WORD PTR ?selectPcNo@@3FA, ax ; selectPcNo
  00a99	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc

; 1661 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1662 : 			PkMenuflag = 0;
; 1663 : #endif
; 1664 : 
; 1665 : 			play_se(217, 320, 240);	// clickå£°

  00a9e	68 f0 00 00 00	 push	 240			; 000000f0H
  00aa3	68 40 01 00 00	 push	 320			; 00000140H
  00aa8	68 d9 00 00 00	 push	 217			; 000000d9H
  00aad	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00ab2	83 c4 10	 add	 esp, 16			; 00000010H

; 1666 : 		}

  00ab5	e9 3c 01 00 00	 jmp	 $LN100@selectChar
$LN90@selectChar:

; 1667 : 		else
; 1668 : 			// JLæ³¨é ç»éäººç©  3å·¦äººç©  4å³äººç©
; 1669 : 			if (3 <= ret && ret <= 4
; 1670 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1671 : 				|| (èªå¨ç»éæ¯å¦å¼å¯ && SubProcNo == 11)

  00aba	83 fe 03	 cmp	 esi, 3
  00abd	7c 0c		 jl	 SHORT $LN95@selectChar
  00abf	83 fe 04	 cmp	 esi, 4
  00ac2	7f 07		 jg	 SHORT $LN95@selectChar
  00ac4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA ; í»?Ôô?ãÀÜú??
  00ac9	eb 1a		 jmp	 SHORT $LN94@selectChar
$LN95@selectChar:
  00acb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?í»?Ôô?ãÀÜú??@@3HA ; í»?Ôô?ãÀÜú??
  00ad0	85 c0		 test	 eax, eax
  00ad2	0f 84 aa 00 00
	00		 je	 $LN92@selectChar
  00ad8	83 3d 00 00 00
	00 0b		 cmp	 DWORD PTR ?SubProcNo@@3IA, 11 ; SubProcNo, 0000000bH
  00adf	0f 85 9d 00 00
	00		 jne	 $LN92@selectChar
$LN94@selectChar:

; 1672 : #endif	
; 1673 : 				)
; 1674 : 			{
; 1675 : 				int éæ©äººç©;
; 1676 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1677 : 				if (èªå¨ç»éæ¯å¦å¼å¯) éæ©äººç© = PcLanded.äººç©;

  00ae5	85 c0		 test	 eax, eax
  00ae7	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?PcLanded@@3ULanded@@A+12
  00aec	75 03		 jne	 SHORT $LN97@selectChar

; 1678 : 				else
; 1679 : #endif
; 1680 : 					éæ©äººç© = ret - 3;

  00aee	8d 46 fd	 lea	 eax, DWORD PTR [esi-3]
$LN97@selectChar:

; 1681 : 				char name[CHAR_NAME_LEN + 1];
; 1682 : 				// î¸?????î
; 1683 : 				strcpy(name, chartable[éæ©äººç©].name);

  00af1	8b d0		 mov	 edx, eax
  00af3	8d 7d e8	 lea	 edi, DWORD PTR _name$2[ebp]
  00af6	c1 e2 04	 shl	 edx, 4
  00af9	03 d0		 add	 edx, eax
  00afb	8d 0c 95 00 00
	00 00		 lea	 ecx, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[edx*4]
  00b02	2b f9		 sub	 edi, ecx
$LL113@selectChar:
  00b04	8a 01		 mov	 al, BYTE PTR [ecx]
  00b06	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00b09	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  00b0d	84 c0		 test	 al, al
  00b0f	75 f3		 jne	 SHORT $LL113@selectChar

; 1684 : 				//cary test		sjisStringToEucString( name );
; 1685 : 				strcpy(gamestate_login_charname, name);

  00b11	33 c9		 xor	 ecx, ecx
$LL114@selectChar:
  00b13	8a 44 0d e8	 mov	 al, BYTE PTR _name$2[ebp+ecx]
  00b17	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00b1a	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?gamestate_login_charname@@3PADA[ecx-1], al
  00b20	84 c0		 test	 al, al
  00b22	75 ef		 jne	 SHORT $LL114@selectChar

; 1686 : 				//selectPcNo = ret - 3;
; 1687 : 
; 1688 : 				// ?????pc.faceGraNo?î¼????
; 1689 : 				newCharacterFaceGraNo = chartable[éæ©äººç©].faceGraNo;

  00b24	8b 04 95 18 00
	00 00		 mov	 eax, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[edx*4+24]

; 1690 : 				loginDp = chartable[selectPcNo].dp;

  00b2b	0f bf 0d 00 00
	00 00		 movsx	 ecx, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  00b32	a3 00 00 00 00	 mov	 DWORD PTR ?newCharacterFaceGraNo@@3HA, eax ; newCharacterFaceGraNo
  00b37	8b c1		 mov	 eax, ecx
  00b39	c1 e0 04	 shl	 eax, 4
  00b3c	03 c1		 add	 eax, ecx

; 1691 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1692 : 				PkMenuflag = 0;
; 1693 : #endif
; 1694 : 
; 1695 : 				ChangeProc(PROC_CHAR_LOGIN_START);

  00b3e	6a 05		 push	 5
  00b40	8b 04 85 40 00
	00 00		 mov	 eax, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[eax*4+64]
  00b47	a3 00 00 00 00	 mov	 DWORD PTR ?loginDp@@3HA, eax ; loginDp
  00b4c	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc

; 1696 : 				play_se(217, 320, 240);	// clickå£°

  00b51	68 f0 00 00 00	 push	 240			; 000000f0H
  00b56	68 40 01 00 00	 push	 320			; 00000140H
  00b5b	68 d9 00 00 00	 push	 217			; 000000d9H
  00b60	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1697 : 
; 1698 : 				// shan 2002/01/18
; 1699 : 				{
; 1700 : 					map_bgm_no = 0;
; 1701 : 					if (ret == 3) {
; 1702 : 						sCharSide = 1;
; 1703 : 					}
; 1704 : 					else {
; 1705 : 						sCharSide = 2;
; 1706 : 					}
; 1707 : 				}
; 1708 : 			}

  00b65	33 c0		 xor	 eax, eax
  00b67	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 0 ; map_bgm_no
  00b71	83 c4 10	 add	 esp, 16			; 00000010H
  00b74	83 fe 03	 cmp	 esi, 3
  00b77	0f 95 c0	 setne	 al
  00b7a	40		 inc	 eax
  00b7b	a3 00 00 00 00	 mov	 DWORD PTR ?sCharSide@@3HA, eax ; sCharSide
  00b80	eb 74		 jmp	 SHORT $LN100@selectChar
$LN92@selectChar:

; 1709 : 			else
; 1710 : 				// ?????????
; 1711 : 				if (5 <= ret && ret <= 6)

  00b82	83 fe 05	 cmp	 esi, 5
  00b85	7c 6f		 jl	 SHORT $LN100@selectChar
  00b87	83 fe 06	 cmp	 esi, 6
  00b8a	7f 6a		 jg	 SHORT $LN100@selectChar

; 1712 : 				{
; 1713 : 					char name[CHAR_NAME_LEN + 1];
; 1714 : 
; 1715 : 					// ??????î
; 1716 : 					strcpy(name, chartable[ret - 5].name);

  00b8c	8d 4e fb	 lea	 ecx, DWORD PTR [esi-5]
  00b8f	8b c1		 mov	 eax, ecx
  00b91	8d 55 e8	 lea	 edx, DWORD PTR _name$1[ebp]
  00b94	c1 e0 04	 shl	 eax, 4
  00b97	03 c1		 add	 eax, ecx
  00b99	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[eax*4]
  00ba0	2b d1		 sub	 edx, ecx
$LL115@selectChar:
  00ba2	8a 01		 mov	 al, BYTE PTR [ecx]
  00ba4	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00ba7	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00bab	84 c0		 test	 al, al
  00bad	75 f3		 jne	 SHORT $LL115@selectChar

; 1717 : 					//cary test		sjisStringToEucString( name );
; 1718 : 					strcpy(gamestate_deletechar_charname, name);

  00baf	33 c9		 xor	 ecx, ecx
$LL116@selectChar:
  00bb1	8a 44 0d e8	 mov	 al, BYTE PTR _name$1[ebp+ecx]
  00bb5	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00bb8	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?gamestate_deletechar_charname@@3PADA[ecx-1], al
  00bbe	84 c0		 test	 al, al
  00bc0	75 ef		 jne	 SHORT $LL116@selectChar

; 1719 : 					selectPcNo = ret - 5;
; 1720 : 					SubProcNo = 20;
; 1721 : 					selCharGraColorWinProcNo = 0;
; 1722 : 					play_se(217, 320, 240);	// clickå£°

  00bc2	68 f0 00 00 00	 push	 240			; 000000f0H
  00bc7	8d 46 fb	 lea	 eax, DWORD PTR [esi-5]
  00bca	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 20 ; SubProcNo, 00000014H
  00bd4	68 40 01 00 00	 push	 320			; 00000140H
  00bd9	68 d9 00 00 00	 push	 217			; 000000d9H
  00bde	66 a3 00 00 00
	00		 mov	 WORD PTR ?selectPcNo@@3FA, ax ; selectPcNo
  00be4	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?selCharGraColorWinProcNo@@3HA, 0
  00bee	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00bf3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN100@selectChar:

; 1723 : 				}
; 1724 : 
; 1725 : 
; 1726 : 	if (SubProcNo >= 10) {

  00bf6	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?SubProcNo@@3IA, 10 ; SubProcNo, 0000000aH
  00bfd	0f 82 42 03 00
	00		 jb	 $LN101@selectChar

; 1727 : 		for (i = 0; i < MAXCHARACTER; i++) {

  00c03	53		 push	 ebx
  00c04	33 f6		 xor	 esi, esi
  00c06	bf b9 00 00 00	 mov	 edi, 185		; 000000b9H
  00c0b	bb 00 00 00 00	 mov	 ebx, OFFSET ?chartable@@3PAUCHARLISTTABLE@@A
  00c10	89 75 ac	 mov	 DWORD PTR _i$1$[ebp], esi
  00c13	89 75 bc	 mov	 DWORD PTR tv2209[ebp], esi
  00c16	89 7d c0	 mov	 DWORD PTR tv2208[ebp], edi
  00c19	89 5d b8	 mov	 DWORD PTR tv2207[ebp], ebx
  00c1c	0f 1f 40 00	 npad	 4
$LL7@selectChar:

; 1728 : 			if (existCharacterListEntry(i)) {

  00c20	56		 push	 esi
  00c21	e8 00 00 00 00	 call	 ?existCharacterListEntry@@YAHH@Z ; existCharacterListEntry
  00c26	83 c4 04	 add	 esp, 4
  00c29	85 c0		 test	 eax, eax
  00c2b	0f 84 9c 02 00
	00		 je	 $LN102@selectChar

; 1729 : 				StockDispBuffer(249 + i * 304, 168, DISP_PRIO_CHAR, chartable[i].faceGraNo, 0);

  00c31	6a 00		 push	 0
  00c33	ff 73 18	 push	 DWORD PTR [ebx+24]
  00c36	8d 47 40	 lea	 eax, DWORD PTR [edi+64]
  00c39	6a 0a		 push	 10			; 0000000aH
  00c3b	68 a8 00 00 00	 push	 168			; 000000a8H
  00c40	50		 push	 eax
  00c41	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1730 : 				x = (144 - strlen(chartable[i].name) * 9) / 2;

  00c46	8b cb		 mov	 ecx, ebx
  00c48	83 c4 14	 add	 esp, 20			; 00000014H
  00c4b	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00c4e	66 90		 npad	 2
$LL154@selectChar:
  00c50	8a 01		 mov	 al, BYTE PTR [ecx]
  00c52	41		 inc	 ecx
  00c53	84 c0		 test	 al, al
  00c55	75 f9		 jne	 SHORT $LL154@selectChar
  00c57	2b ca		 sub	 ecx, edx

; 1731 : 				StockFontBuffer(175 + i * 304 + x, 212, FONT_PRIO_BACK, FONT_PAL_WHITE, chartable[i].name, 0);

  00c59	6a 00		 push	 0
  00c5b	53		 push	 ebx
  00c5c	6a 00		 push	 0
  00c5e	8d 04 c9	 lea	 eax, DWORD PTR [ecx+ecx*8]
  00c61	b9 90 00 00 00	 mov	 ecx, 144		; 00000090H
  00c66	2b c8		 sub	 ecx, eax
  00c68	d1 e9		 shr	 ecx, 1
  00c6a	6a 00		 push	 0
  00c6c	68 d4 00 00 00	 push	 212			; 000000d4H
  00c71	8d 41 f6	 lea	 eax, DWORD PTR [ecx-10]
  00c74	03 c7		 add	 eax, edi
  00c76	50		 push	 eax
  00c77	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1732 : 
; 1733 : 				sprintf(msg, "%3d", chartable[i].level);		//ìºë¦­í° ì ííë©´ ë ë²¨ ì«ì ìì¹

  00c7c	0f bf 43 12	 movsx	 eax, WORD PTR [ebx+18]
  00c80	50		 push	 eax
  00c81	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00c86	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00c8b	e8 00 00 00 00	 call	 _sprintf

; 1734 : 				StockFontBuffer(185 + i * 304, 236, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00c90	6a 00		 push	 0
  00c92	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00c97	6a 00		 push	 0
  00c99	6a 00		 push	 0
  00c9b	68 ec 00 00 00	 push	 236			; 000000ecH
  00ca0	57		 push	 edi
  00ca1	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1735 : 
; 1736 : 				sprintf(msg, "%3d", chartable[i].hp);		//ìºë¦­í° ì ííë©´ ë´êµ¬ë ¥ ì«ì ìì¹

  00ca6	ff 73 1c	 push	 DWORD PTR [ebx+28]
  00ca9	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00cae	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00cb3	e8 00 00 00 00	 call	 _sprintf
  00cb8	83 c4 48	 add	 esp, 72			; 00000048H

; 1737 : 				StockFontBuffer(185 + i * 304, 258, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00cbb	6a 00		 push	 0
  00cbd	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00cc2	6a 00		 push	 0
  00cc4	6a 00		 push	 0
  00cc6	68 02 01 00 00	 push	 258			; 00000102H
  00ccb	57		 push	 edi
  00ccc	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1738 : 
; 1739 : 				sprintf(msg, "%3d", chartable[i].str);		//ìºë¦­í° ì ííë©´ ê³µê²©ë ¥ ì«ì ìì¹

  00cd1	ff 73 20	 push	 DWORD PTR [ebx+32]
  00cd4	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00cd9	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00cde	e8 00 00 00 00	 call	 _sprintf

; 1740 : 				StockFontBuffer(185 + i * 304, 280, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00ce3	6a 00		 push	 0
  00ce5	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00cea	6a 00		 push	 0
  00cec	6a 00		 push	 0
  00cee	68 18 01 00 00	 push	 280			; 00000118H
  00cf3	57		 push	 edi
  00cf4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1741 : 
; 1742 : 				sprintf(msg, "%3d", chartable[i].def);		//ìºë¦­í° ì ííë©´ ë°©ì´ë ¥ ì«ì ìì¹

  00cf9	ff 73 24	 push	 DWORD PTR [ebx+36]
  00cfc	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00d01	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d06	e8 00 00 00 00	 call	 _sprintf
  00d0b	83 c4 48	 add	 esp, 72			; 00000048H

; 1743 : 				StockFontBuffer(185 + i * 304, 302, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00d0e	6a 00		 push	 0
  00d10	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d15	6a 00		 push	 0
  00d17	6a 00		 push	 0
  00d19	68 2e 01 00 00	 push	 302			; 0000012eH
  00d1e	57		 push	 edi
  00d1f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1744 : 
; 1745 : 				sprintf(msg, "%3d", chartable[i].agi);		//ìºë¦­í° ì ííë©´ ë¯¼ì²©ë ¥ ì«ì ìì¹

  00d24	ff 73 28	 push	 DWORD PTR [ebx+40]
  00d27	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00d2c	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d31	e8 00 00 00 00	 call	 _sprintf

; 1746 : 				StockFontBuffer(185 + i * 304, 324, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00d36	6a 00		 push	 0
  00d38	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d3d	6a 00		 push	 0
  00d3f	6a 00		 push	 0
  00d41	68 44 01 00 00	 push	 324			; 00000144H
  00d46	57		 push	 edi
  00d47	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1747 : 
; 1748 : 				sprintf(msg, "%3d", chartable[i].app);		//ìºë¦­í° ì ííë©´ ë§¤ë ¥ ì«ì ìì¹

  00d4c	ff 73 2c	 push	 DWORD PTR [ebx+44]
  00d4f	68 00 00 00 00	 push	 OFFSET ??_C@_03GOOLIKIF@?$CF3d@
  00d54	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d59	e8 00 00 00 00	 call	 _sprintf
  00d5e	83 c4 48	 add	 esp, 72			; 00000048H

; 1749 : 				StockFontBuffer(185 + i * 304, 346, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00d61	6a 00		 push	 0
  00d63	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d68	6a 00		 push	 0
  00d6a	6a 00		 push	 0
  00d6c	68 5a 01 00 00	 push	 346			; 0000015aH
  00d71	57		 push	 edi
  00d72	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1750 : 
; 1751 : 				sprintf(msg, "%8d", chartable[i].dp);		//ìºë¦­í° ì ííë©´ DP ì«ì ìì¹

  00d77	ff 73 40	 push	 DWORD PTR [ebx+64]
  00d7a	68 00 00 00 00	 push	 OFFSET ??_C@_03GCLOGFGE@?$CF8d@
  00d7f	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d84	e8 00 00 00 00	 call	 _sprintf

; 1752 : 				StockFontBuffer(269 + i * 304, 346, FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);

  00d89	6a 00		 push	 0
  00d8b	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00d90	6a 00		 push	 0
  00d92	6a 00		 push	 0
  00d94	8d 47 54	 lea	 eax, DWORD PTR [edi+84]
  00d97	68 5a 01 00 00	 push	 346			; 0000015aH
  00d9c	50		 push	 eax
  00d9d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00da2	8b 45 b8	 mov	 eax, DWORD PTR tv2207[ebp]
  00da5	8d 75 cc	 lea	 esi, DWORD PTR _attrColor$[ebp+4]
  00da8	83 c4 3c	 add	 esp, 60			; 0000003cH
  00dab	89 75 b0	 mov	 DWORD PTR tv2214[ebp], esi
  00dae	83 c0 30	 add	 eax, 48			; 00000030H
  00db1	bb 05 01 00 00	 mov	 ebx, 261		; 00000105H
  00db6	89 45 b4	 mov	 DWORD PTR tv2211[ebp], eax
  00db9	0f 1f 80 00 00
	00 00		 npad	 7
$LL10@selectChar:

; 1755 : 					if (chartable[i].attr[j] > 0) {

  00dc0	8b 08		 mov	 ecx, DWORD PTR [eax]
  00dc2	85 c9		 test	 ecx, ecx
  00dc4	7e 6a		 jle	 SHORT $LN8@selectChar

; 1756 : 						x1 = 289 + i * 304;		//ìºë¦­í° ì ííë©´ ìì± ìì¹
; 1757 : 						y1 = 261 + j * 22;
; 1758 : 						x2 = x1 + chartable[i].attr[j] * 8;

  00dc6	8b 45 bc	 mov	 eax, DWORD PTR tv2209[ebp]
  00dc9	03 c1		 add	 eax, ecx

; 1759 : 						y2 = y1 + 8;
; 1760 : 						StockBoxDispBuffer(x1, y1, x2, y2, DISP_PRIO_IME2, attrColor[j][0], 1);

  00dcb	6a 01		 push	 1
  00dcd	ff 76 fc	 push	 DWORD PTR [esi-4]
  00dd0	8d 3c c5 21 01
	00 00		 lea	 edi, DWORD PTR [eax*8+289]
  00dd7	6a 67		 push	 103			; 00000067H
  00dd9	8d 43 08	 lea	 eax, DWORD PTR [ebx+8]
  00ddc	50		 push	 eax
  00ddd	8b 45 c0	 mov	 eax, DWORD PTR tv2208[ebp]
  00de0	57		 push	 edi
  00de1	83 c0 68	 add	 eax, 104		; 00000068H
  00de4	53		 push	 ebx
  00de5	50		 push	 eax
  00de6	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 1761 : 						StockBoxDispBuffer(x1 + 1, y1 + 1, x2 + 1, y2 + 1, DISP_PRIO_IME1, attrColor[j][1], 0);

  00deb	8b 36		 mov	 esi, DWORD PTR [esi]
  00ded	8d 43 09	 lea	 eax, DWORD PTR [ebx+9]
  00df0	6a 00		 push	 0
  00df2	56		 push	 esi
  00df3	6a 66		 push	 102			; 00000066H
  00df5	50		 push	 eax
  00df6	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00df9	50		 push	 eax
  00dfa	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  00dfd	50		 push	 eax
  00dfe	8b 45 c0	 mov	 eax, DWORD PTR tv2208[ebp]
  00e01	83 c0 69	 add	 eax, 105		; 00000069H
  00e04	50		 push	 eax
  00e05	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 1762 : 						StockBoxDispBuffer(x1 + 2, y1 + 2, x2 + 2, y2 + 2, DISP_PRIO_IME1, attrColor[j][1], 0);

  00e0a	6a 00		 push	 0
  00e0c	56		 push	 esi
  00e0d	6a 66		 push	 102			; 00000066H
  00e0f	8d 43 0a	 lea	 eax, DWORD PTR [ebx+10]
  00e12	50		 push	 eax
  00e13	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00e16	8b 7d c0	 mov	 edi, DWORD PTR tv2208[ebp]
  00e19	50		 push	 eax
  00e1a	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  00e1d	50		 push	 eax
  00e1e	8d 47 6a	 lea	 eax, DWORD PTR [edi+106]
  00e21	50		 push	 eax
  00e22	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer
  00e27	8b 45 b4	 mov	 eax, DWORD PTR tv2211[ebp]
  00e2a	83 c4 54	 add	 esp, 84			; 00000054H
  00e2d	8b 75 b0	 mov	 esi, DWORD PTR tv2214[ebp]
$LN8@selectChar:

; 1753 : 
; 1754 : 				for (j = 0; j < 4; j++) {

  00e30	83 c0 04	 add	 eax, 4
  00e33	83 c6 08	 add	 esi, 8
  00e36	83 c3 16	 add	 ebx, 22			; 00000016H
  00e39	89 45 b4	 mov	 DWORD PTR tv2211[ebp], eax
  00e3c	89 75 b0	 mov	 DWORD PTR tv2214[ebp], esi
  00e3f	81 fb 5d 01 00
	00		 cmp	 ebx, 349		; 0000015dH
  00e45	0f 8c 75 ff ff
	ff		 jl	 $LL10@selectChar

; 1763 : 					}
; 1764 : 				}
; 1765 : 				login = chartable[i].login;		//ìºë¦­í° ì ííë©´ ë¡ê·¸ì¸ íì ì«ì ìì¹

  00e4b	8b 5d b8	 mov	 ebx, DWORD PTR tv2207[ebp]

; 1766 : 				if (login >= 1000)

  00e4e	b9 0f 27 00 00	 mov	 ecx, 9999		; 0000270fH
  00e53	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00e56	3d e8 03 00 00	 cmp	 eax, 1000		; 000003e8H
  00e5b	0f 4d c1	 cmovge	 eax, ecx

; 1767 : 					login = 9999;
; 1768 : 				sprintf(msg, "%4d", login);

  00e5e	50		 push	 eax
  00e5f	68 00 00 00 00	 push	 OFFSET ??_C@_03GLKEJMAA@?$CF4d@
  00e64	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00e69	e8 00 00 00 00	 call	 _sprintf

; 1769 : 				StockFontBuffer(230 + i * 304, 369,

  00e6e	6a 00		 push	 0
  00e70	68 00 00 00 00	 push	 OFFSET ?msg@?1??selectCharacterProc@@YAXXZ@4PADA
  00e75	6a 00		 push	 0
  00e77	6a 00		 push	 0
  00e79	8d 47 2d	 lea	 eax, DWORD PTR [edi+45]
  00e7c	68 71 01 00 00	 push	 369			; 00000171H
  00e81	50		 push	 eax
  00e82	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1770 : 					FONT_PRIO_BACK, FONT_PAL_WHITE, msg, 0);
; 1771 : 				btnGraId[3 + i] = StockDispBuffer(190 + i * 304, 422, DISP_PRIO_CHAR, CG_CHR_SEL_LOGIN_BTN, btnUseFlag);		//ìºë¦­í° ì ííë©´ì°½ ë¡ê·¸ì¸ ë²í¼ ìì¹ì¡°ì 

  00e87	ff 75 c4	 push	 DWORD PTR _btnUseFlag$1$[ebp]
  00e8a	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  00e8d	68 69 71 00 00	 push	 29033			; 00007169H
  00e92	6a 0a		 push	 10			; 0000000aH
  00e94	68 a6 01 00 00	 push	 422			; 000001a6H
  00e99	50		 push	 eax
  00e9a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1772 : 				btnGraId[5 + i] = StockDispBuffer(300 + i * 304, 422, DISP_PRIO_CHAR, CG_CHR_SEL_DEL_BTN, btnUseFlag);		//ìºë¦­í° ì ííë©´ì°½ ì­ì  ë²í¼ ìì¹ì¡°ì 

  00e9f	ff 75 c4	 push	 DWORD PTR _btnUseFlag$1$[ebp]
  00ea2	8b 75 ac	 mov	 esi, DWORD PTR _i$1$[ebp]
  00ea5	68 6b 71 00 00	 push	 29035			; 0000716bH
  00eaa	6a 0a		 push	 10			; 0000000aH
  00eac	68 a6 01 00 00	 push	 422			; 000001a6H
  00eb1	89 04 b5 0c 00
	00 00		 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA[esi*4+12], eax
  00eb8	8d 47 73	 lea	 eax, DWORD PTR [edi+115]
  00ebb	50		 push	 eax
  00ebc	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00ec1	83 c4 4c	 add	 esp, 76			; 0000004cH
  00ec4	89 04 b5 14 00
	00 00		 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA[esi*4+20], eax

; 1773 : 			}

  00ecb	eb 33		 jmp	 SHORT $LN5@selectChar
$LN102@selectChar:

; 1774 : 			else
; 1775 : 				if (SubProcNo < 100 || 300 <= SubProcNo)

  00ecd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00ed2	83 f8 64	 cmp	 eax, 100		; 00000064H
  00ed5	72 07		 jb	 SHORT $LN107@selectChar
  00ed7	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  00edc	72 22		 jb	 SHORT $LN5@selectChar
$LN107@selectChar:

; 1776 : 				{
; 1777 : 					btnGraId[1 + i] =

  00ede	ff 75 c4	 push	 DWORD PTR _btnUseFlag$1$[ebp]
  00ee1	8d 47 3c	 lea	 eax, DWORD PTR [edi+60]
  00ee4	68 6a 71 00 00	 push	 29034			; 0000716aH
  00ee9	6a 0a		 push	 10			; 0000000aH
  00eeb	68 a6 01 00 00	 push	 422			; 000001a6H
  00ef0	50		 push	 eax
  00ef1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00ef6	83 c4 14	 add	 esp, 20			; 00000014H
  00ef9	89 04 b5 04 00
	00 00		 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA[esi*4+4], eax
$LN5@selectChar:

; 1727 : 		for (i = 0; i < MAXCHARACTER; i++) {

  00f00	83 45 bc 26	 add	 DWORD PTR tv2209[ebp], 38 ; 00000026H
  00f04	83 c3 44	 add	 ebx, 68			; 00000044H
  00f07	46		 inc	 esi
  00f08	89 5d b8	 mov	 DWORD PTR tv2207[ebp], ebx
  00f0b	81 c7 30 01 00
	00		 add	 edi, 304		; 00000130H
  00f11	89 75 ac	 mov	 DWORD PTR _i$1$[ebp], esi
  00f14	89 7d c0	 mov	 DWORD PTR tv2208[ebp], edi
  00f17	81 fb 88 00 00
	00		 cmp	 ebx, OFFSET ?chartable@@3PAUCHARLISTTABLE@@A+136
  00f1d	0f 8c fd fc ff
	ff		 jl	 $LL7@selectChar

; 1778 : 						StockDispBuffer(245 + i * 304,
; 1779 : 							422, DISP_PRIO_CHAR, CG_CHR_SEL_NEW_BTN, btnUseFlag);		//ìºë¦­í° ì ííë©´ì°½ ì ê· ë²í¼ ìì¹ì¡°ì 
; 1780 : 				}
; 1781 : 		}
; 1782 : 
; 1783 : 		btnGraId[0] = StockDispBuffer(400, 500, DISP_PRIO_CHAR, CG_CHR_SEL_BACK_BTN, btnUseFlag);		//ìºë¦­í° ì ííë©´ì°½ ëìê°ê¸° ë²í¼ ìì¹ì¡°ì 

  00f23	ff 75 c4	 push	 DWORD PTR _btnUseFlag$1$[ebp]
  00f26	68 6c 71 00 00	 push	 29036			; 0000716cH
  00f2b	6a 0a		 push	 10			; 0000000aH
  00f2d	68 f4 01 00 00	 push	 500			; 000001f4H
  00f32	68 90 01 00 00	 push	 400			; 00000190H
  00f37	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00f3c	83 c4 14	 add	 esp, 20			; 00000014H
  00f3f	a3 00 00 00 00	 mov	 DWORD PTR ?btnGraId@?1??selectCharacterProc@@YAXXZ@4PAHA, eax
  00f44	5b		 pop	 ebx
$LN101@selectChar:

; 1784 : 	}
; 1785 : 
; 1786 : 	if (ResoMode == åè¾¨ç::mode800) {

  00f45	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00f4a	5f		 pop	 edi
  00f4b	5e		 pop	 esi
  00f4c	83 f8 03	 cmp	 eax, 3
  00f4f	75 0f		 jne	 SHORT $LN108@selectChar

; 1787 : 		StockDispBuffer(400, 300, DISP_PRIO_BG, IMAGE_Player_2, 0);

  00f51	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  00f56	ba 2d a0 00 00	 mov	 edx, 41005		; 0000a02dH
  00f5b	8d 48 9c	 lea	 ecx, DWORD PTR [eax-100]

; 1788 : 	}

  00f5e	eb 21		 jmp	 SHORT $LN111@selectChar
$LN108@selectChar:

; 1789 : 	else if (ResoMode == åè¾¨ç::mode1024) {

  00f60	83 f8 04	 cmp	 eax, 4
  00f63	75 0f		 jne	 SHORT $LN110@selectChar

; 1790 : 		StockDispBuffer(512, 384, DISP_PRIO_BG, IMAGE_Player_3, 0);

  00f65	b8 00 02 00 00	 mov	 eax, 512		; 00000200H
  00f6a	ba 15 a4 00 00	 mov	 edx, 42005		; 0000a415H
  00f6f	8d 48 80	 lea	 ecx, DWORD PTR [eax-128]

; 1791 : 	}

  00f72	eb 0d		 jmp	 SHORT $LN111@selectChar
$LN110@selectChar:

; 1792 : 	else {
; 1793 : 		StockDispBuffer(320, 240, DISP_PRIO_BG, IMAGE_Player_1, 0);

  00f74	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  00f79	ba 45 9c 00 00	 mov	 edx, 40005		; 00009c45H
  00f7e	8d 48 b0	 lea	 ecx, DWORD PTR [eax-80]
$LN111@selectChar:

; 1794 : 	}
; 1795 : 
; 1796 : #ifdef _LOGINKICK			
; 1797 : 	if (StartTime == -1)
; 1798 : 		StartTime = TimeGetTime();
; 1799 : 	if (TimeGetTime() > StartTime + 10 * 1000 /*1000ä¸ºä¸ç§*/) {
; 1800 : 		ChangeProc(PROC_TITLE_MENU);
; 1801 : 		StartTime = -1;
; 1802 : 	}
; 1803 : #endif
; 1804 : 
; 1805 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1806 : 	if (VersionXYZ == 1) {
; 1807 : 		PkBtn[0] = StockDispBuffer(160, 430, DISP_PRIO_CHAR, CG_PKSERVER_BTN_UP + PkMenuflag, 2);
; 1808 : 		if (HitDispNo == PkBtn[0]) {
; 1809 : 			if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 1810 : 				(PkMenuflag == 0) ? PkMenuflag = 1 : PkMenuflag = 0;
; 1811 : 				play_se(217, 320, 240);
; 1812 : 			}
; 1813 : 		}
; 1814 : 		if (PkMenuflag == 1) {
; 1815 : 			if (PkServerSel == NULL) {
; 1816 : 				PkServerSel = MakeWindowDisp(255, 5, 2, 7, 0, -1);
; 1817 : 			}
; 1818 : 			else {
; 1819 : 				if (PkServerSel->hp > 0) {
; 1820 : 					x3 = PkServerSel->x;
; 1821 : 					y3 = PkServerSel->y;
; 1822 : 					StockDispBuffer(x3 + 60, y3 + 200, DISP_PRIO_IME3, CG_PKSERVER_PANEL, 0);
; 1823 : 					StockFontBuffer(x3 + 20, y3 + 155, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "éæ©æç³»äººç©", 1);
; 1824 : 					for (i = 0; i < 4; i++) {
; 1825 : 						for (j = 0; j < 3; j++) {
; 1826 : 							StockFontBuffer(x3 - 95 + i * 83, y3 + 178 + j * 22, FONT_PRIO_FRONT, FONT_PAL_WHITE, ServerName[i * 3 + j + 1], 2);
; 1827 : 							if (mouse.onceState & MOUSE_LEFT_CRICK) {
; 1828 : 								//éåºi * 4 + j + 1ç»Gmsvåå¾æè¦çACèµæ
; 1829 : 							}
; 1830 : 						}
; 1831 : 					}
; 1832 : 				}
; 1833 : 			}
; 1834 : 		}
; 1835 : 		else {
; 1836 : 			if (PkServerSel != NULL) {
; 1837 : 				DeathAction(PkServerSel);
; 1838 : 				PkServerSel = NULL;
; 1839 : 			}
; 1840 : 		}
; 1841 : 	}
; 1842 : #endif
; 1843 : 
; 1844 : 	RunAction();			// ?????????

  00f81	6a 00		 push	 0
  00f83	52		 push	 edx
  00f84	6a 00		 push	 0
  00f86	51		 push	 ecx
  00f87	50		 push	 eax
  00f88	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00f8d	83 c4 14	 add	 esp, 20			; 00000014H
  00f90	e8 00 00 00 00	 call	 ?RunAction@@YAXXZ	; RunAction

; 1845 : 	StockTaskDispBuffer();	// ???î¸î????????????

  00f95	e8 00 00 00 00	 call	 ?StockTaskDispBuffer@@YAXXZ ; StockTaskDispBuffer

; 1846 : }

  00f9a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00f9d	33 cd		 xor	 ecx, ebp
  00f9f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00fa4	8b e5		 mov	 esp, ebp
  00fa6	5d		 pop	 ebp
  00fa7	c3		 ret	 0
?selectCharacterProc@@YAXXZ ENDP			; selectCharacterProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?titleProc@@YAXXZ
_TEXT	SEGMENT
tv452 = -1476						; size = 4
_iYear$ = -1472						; size = 4
_iDay$ = -1468						; size = 4
_szMonth$ = -1464					; size = 4
_Ûå?$1 = -1460						; size = 1024
_vermsg$ = -436						; size = 128
_buff1$ = -308						; size = 128
_str$2 = -180						; size = 128
_str$3 = -180						; size = 128
_szEnglishMonth$ = -52					; size = 48
__$ArrayPad$ = -4					; size = 4
?titleProc@@YAXXZ PROC					; titleProc, COMDAT

; 911  : void titleProc(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 05 00
	00		 sub	 esp, 1476		; 000005c4H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 912  : 	int ret;
; 913  : 	static char msg[256];
; 914  : 	if (SubProcNo == 0) {

  00013	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?SubProcNo@@3IA, 0 ; SubProcNo
  0001a	53		 push	 ebx
  0001b	56		 push	 esi
  0001c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__SetWindowTextA@8
  00022	57		 push	 edi
  00023	0f 85 d0 00 00
	00		 jne	 $LN10@titleProc

; 915  : 		char str[128];
; 916  : 		sprintf(str, "%s %s", DEF_APPNAME, SA_VERSION);

  00029	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@
  00033	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$3[ebp]
  00039	68 00 00 00 00	 push	 OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs@
  0003e	50		 push	 eax
  0003f	e8 00 00 00 00	 call	 _sprintf
  00044	83 c4 10	 add	 esp, 16			; 00000010H

; 917  : 		extern int ç¹ä½å¼å³;
; 918  : 		extern int ç¼ç ;
; 919  : 		if (ç¹ä½å¼å³) {

  00047	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?Ûå???@@3HA, 0 ; Ûå???
  0004e	74 68		 je	 SHORT $LN6@titleProc

; 920  : 			char ç¹ä½[1024] = { 0 };

  00050	68 00 04 00 00	 push	 1024			; 00000400H
  00055	8d 85 4c fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  0005b	6a 00		 push	 0
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 _memset

; 921  : 			LCMapString(0x804, 0x4000000, str, strlen(str), ç¹ä½, 1024);

  00063	8d 8d 4c ff ff
	ff		 lea	 ecx, DWORD PTR _str$3[ebp]
  00069	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006c	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0006f	90		 npad	 1
$LL59@titleProc:
  00070	8a 01		 mov	 al, BYTE PTR [ecx]
  00072	41		 inc	 ecx
  00073	84 c0		 test	 al, al
  00075	75 f9		 jne	 SHORT $LL59@titleProc
  00077	68 00 04 00 00	 push	 1024			; 00000400H
  0007c	8d 85 4c fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  00082	2b ca		 sub	 ecx, edx
  00084	50		 push	 eax
  00085	51		 push	 ecx
  00086	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$3[ebp]
  0008c	50		 push	 eax
  0008d	68 00 00 00 04	 push	 67108864		; 04000000H
  00092	68 04 08 00 00	 push	 2052			; 00000804H
  00097	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LCMapStringA@24

; 922  : 			sprintf(str, "%s", ç¹ä½);

  0009d	8d 85 4c fa ff
	ff		 lea	 eax, DWORD PTR _Ûå?$1[ebp]
  000a3	50		 push	 eax
  000a4	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$3[ebp]
  000aa	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 _sprintf
  000b5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@titleProc:

; 923  : 		}
; 924  : 		if (ç¼ç  == 950) {

  000b8	81 3d 00 00 00
	00 b6 03 00 00	 cmp	 DWORD PTR ???@@3HA, 950	; ??, 000003b6H
  000c2	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$3[ebp]
  000c8	50		 push	 eax
  000c9	75 09		 jne	 SHORT $LN7@titleProc

; 925  : 			SetWindowText(hWnd, GB2312ToBIG5((const char*)str));

  000cb	e8 00 00 00 00	 call	 ?GB2312ToBIG5@@YAPADPBD@Z ; GB2312ToBIG5
  000d0	83 c4 04	 add	 esp, 4
  000d3	50		 push	 eax
$LN7@titleProc:

; 926  : 		}
; 927  : 		else {
; 928  : 			SetWindowText(hWnd, str);
; 929  : 		}
; 930  : 		if (0 < strlen(szAnnouncement))

  000d4	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  000da	ff d6		 call	 esi
  000dc	b9 00 00 00 00	 mov	 ecx, OFFSET ?szAnnouncement@@3PADA ; szAnnouncement
  000e1	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL60@titleProc:
  000e4	8a 01		 mov	 al, BYTE PTR [ecx]
  000e6	41		 inc	 ecx
  000e7	84 c0		 test	 al, al
  000e9	75 f9		 jne	 SHORT $LL60@titleProc
  000eb	2b ca		 sub	 ecx, edx
  000ed	0f 85 4c 02 00
	00		 jne	 $LN55@titleProc

; 931  : 			SubProcNo = 200;
; 932  : 		else
; 933  : 			SubProcNo++;

  000f3	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN10@titleProc:

; 934  : 	}
; 935  : 	if (SubProcNo == 1) {

  000f9	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo
  00100	75 6d		 jne	 SHORT $LN13@titleProc

; 936  : 		if (initNet()) {

  00102	e8 00 00 00 00	 call	 ?initNet@@YAHXZ		; initNet
  00107	85 c0		 test	 eax, eax
  00109	74 25		 je	 SHORT $LN12@titleProc

; 937  : 			if (nGroup > 1)

  0010b	33 c0		 xor	 eax, eax

; 938  : 				SubProcNo = 2;
; 939  : 			else
; 940  : 				SubProcNo = 3;
; 941  : 			ProduceInitFlag = TRUE;

  0010d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00117	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?nGroup@@3HA, 1 ; nGroup
  0011e	0f 9e c0	 setle	 al
  00121	83 c0 02	 add	 eax, 2
  00124	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo

; 942  : 			initSelectServer();

  00129	e8 00 00 00 00	 call	 ?initSelectServer@@YAXXZ ; initSelectServer

; 943  : 			//	disconnectServerFlag = FALSE;
; 944  : 		}

  0012e	eb 3f		 jmp	 SHORT $LN13@titleProc
$LN12@titleProc:

; 945  : 		else {
; 946  : 			SubProcNo = 100;

  00130	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 947  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 948  : 			PcLanded.ç»éå»¶æ¶æ¶é´ = TimeGetTime() + 2000;

  0013a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 949  : #endif
; 950  : 			strcpy(netprocErrmsg, NET_ERRMSG_SOCKLIBERROR);

  0013f	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@
  00147	05 d0 07 00 00	 add	 eax, 2000		; 000007d0H
  0014c	a3 9c 00 00 00	 mov	 DWORD PTR ?PcLanded@@3ULanded@@A+156, eax
  00151	a1 08 00 00 00	 mov	 eax, DWORD PTR ??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@+8
  00156	a3 08 00 00 00	 mov	 DWORD PTR ?netprocErrmsg@@3PADA+8, eax
  0015b	66 a1 0c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0O@KDOBPHMN@?$DP?V?X?$DP?Z?$LB?q?W?$DP?$PL?$LP?$KB?$KD@+12
  00161	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?netprocErrmsg@@3PADA, xmm0
  00169	66 a3 0c 00 00
	00		 mov	 WORD PTR ?netprocErrmsg@@3PADA+12, ax
$LN13@titleProc:

; 951  : 		}
; 952  : 	}
; 953  : 	// éæ©Group
; 954  : 	if (SubProcNo == 2) {

  0016f	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?SubProcNo@@3IA, 2 ; SubProcNo
  00176	75 77		 jne	 SHORT $LN61@titleProc

; 955  : 		ret = selectGroup();

  00178	e8 00 00 00 00	 call	 ?selectGroup@@YAHXZ	; selectGroup

; 956  : 		if (ret == 1) {

  0017d	83 f8 01	 cmp	 eax, 1
  00180	75 08		 jne	 SHORT $LN17@titleProc

; 957  : 			SubProcNo++;

  00182	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo

; 958  : 		}

  00188	eb 65		 jmp	 SHORT $LN61@titleProc
$LN17@titleProc:

; 959  : 		else if (ret == 2) {

  0018a	83 f8 02	 cmp	 eax, 2
  0018d	75 2b		 jne	 SHORT $LN19@titleProc

; 960  : 			idPasswordFocusSw = 0;
; 961  : 			GetKeyInputFocus(idPasswordFocus[idPasswordFocusSw]);

  0018f	ff 35 00 00 00
	00		 push	 DWORD PTR ?idPasswordFocus@@3PAPAUSTR_BUFFER@@A
  00195	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?idPasswordFocusSw@@3HA, 0
  0019f	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 962  : 			ChangeProc(PROC_ID_PASSWORD);

  001a4	6a 01		 push	 1
  001a6	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  001ab	83 c4 08	 add	 esp, 8

; 963  : 			SubProcNo = 0;

  001ae	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 0 ; SubProcNo

; 964  : 			cleanupNetwork();
; 965  : 		}

  001b8	eb 30		 jmp	 SHORT $LN65@titleProc
$LN19@titleProc:

; 966  : 		else if (ret == 3) {

  001ba	83 f8 03	 cmp	 eax, 3
  001bd	75 30		 jne	 SHORT $LN61@titleProc

; 967  : 			SubProcNo = 100;
; 968  : 			wsprintf(msg, "[%s]ì´ë²ì ì ì¬ì©í ìììµëë¤ï¼", gmgroup[nServerGroup].name);

  001bf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nServerGroup@@3HA ; nServerGroup
  001c4	c1 e0 06	 shl	 eax, 6
  001c7	05 03 00 00 00	 add	 eax, OFFSET ?gmgroup@@3PAUgamegroup@@A+3
  001cc	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  001d6	50		 push	 eax
  001d7	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@KPEEHOGC@?$FL?$CFs?$FN?$MA?L?$LJ?v?$MA?$PM?$MA?$LK?5?$LL?g?$LP?k?G?R?$LM?v?$LO?x?$LN?$MA?$LE?O?$LE?Y?$KD?$KB@
  001dc	68 00 00 00 00	 push	 OFFSET ?msg@?1??titleProc@@YAXXZ@4PADA
  001e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA
  001e7	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN65@titleProc:

; 969  : 			cleanupNetwork();
; 970  : 		}
; 971  : 	}
; 972  : 	// éæ©Server
; 973  : 	if (SubProcNo == 3) {

  001ea	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork
$LN61@titleProc:
  001ef	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?SubProcNo@@3IA, 3 ; SubProcNo
  001f6	75 10		 jne	 SHORT $LN62@titleProc

; 974  : 		ret = selectServer();

  001f8	e8 00 00 00 00	 call	 ?selectServer@@YAHXZ	; selectServer

; 975  : 		if (ret == 1) {

  001fd	83 f8 01	 cmp	 eax, 1
  00200	75 20		 jne	 SHORT $LN23@titleProc

; 976  : 			SubProcNo++;

  00202	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN62@titleProc:

; 987  : 		}
; 988  : 	}
; 989  : 	if (SubProcNo == 4) {

  00208	83 3d 00 00 00
	00 04		 cmp	 DWORD PTR ?SubProcNo@@3IA, 4 ; SubProcNo
  0020f	75 5b		 jne	 SHORT $LN28@titleProc

; 990  : 		// è¿æ¥Game serverçåå§å
; 991  : 		initConnecGameServer();

  00211	e8 00 00 00 00	 call	 ?initConnecGameServer@@YAXXZ ; initConnecGameServer

; 992  : 		SubProcNo++;

  00216	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 5 ; SubProcNo

; 993  : 	}
; 994  : 	if (SubProcNo == 5) {

  00220	eb 53		 jmp	 SHORT $LN56@titleProc
$LN23@titleProc:

; 977  : 		}
; 978  : 		else if (ret == 2) {

  00222	83 f8 02	 cmp	 eax, 2
  00225	75 e1		 jne	 SHORT $LN62@titleProc

; 979  : 			if (nGroup < 2) {

  00227	39 05 00 00 00
	00		 cmp	 DWORD PTR ?nGroup@@3HA, eax ; nGroup
  0022d	7d 2e		 jge	 SHORT $LN26@titleProc

; 980  : 				idPasswordFocusSw = 0;
; 981  : 				GetKeyInputFocus(idPasswordFocus[idPasswordFocusSw]);

  0022f	ff 35 00 00 00
	00		 push	 DWORD PTR ?idPasswordFocus@@3PAPAUSTR_BUFFER@@A
  00235	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?idPasswordFocusSw@@3HA, 0
  0023f	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 982  : 				ChangeProc(PROC_ID_PASSWORD);

  00244	6a 01		 push	 1
  00246	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  0024b	83 c4 08	 add	 esp, 8

; 983  : 				SubProcNo = 0;

  0024e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 0 ; SubProcNo

; 984  : 			}

  00258	e9 22 01 00 00	 jmp	 $LN38@titleProc
$LN26@titleProc:

; 985  : 			else
; 986  : 				SubProcNo = 2;

  0025d	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 2 ; SubProcNo

; 987  : 		}
; 988  : 	}
; 989  : 	if (SubProcNo == 4) {

  00267	e9 13 01 00 00	 jmp	 $LN38@titleProc
$LN28@titleProc:

; 993  : 	}
; 994  : 	if (SubProcNo == 5) {

  0026c	83 3d 00 00 00
	00 05		 cmp	 DWORD PTR ?SubProcNo@@3IA, 5 ; SubProcNo
  00273	75 53		 jne	 SHORT $LN63@titleProc
$LN56@titleProc:

; 995  : 		// è¿æ¥Game server
; 996  : 		ret = connecGameServer();

  00275	e8 00 00 00 00	 call	 ?connecGameServer@@YAHXZ ; connecGameServer

; 997  : 		if (ret == 1) {

  0027a	83 f8 01	 cmp	 eax, 1
  0027d	75 0c		 jne	 SHORT $LN30@titleProc

; 998  : #ifdef _PK2007
; 999  : 			ChangeProc(PROC_PKSERVER_SELECT);
; 1000 : #else
; 1001 : 			ChangeProc(PROC_CHAR_SELECT);

  0027f	6a 03		 push	 3
  00281	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc
  00286	83 c4 04	 add	 esp, 4

; 1002 : #endif
; 1003 : #ifdef _PKSERVERCHARSEL			// (ä¸å¯å¼) Syu ADD PKä¼ºæå¨éæ©æç³»äººç©
; 1004 : 			PkMenuflag = 0;
; 1005 : #endif
; 1006 : 		}

  00289	eb 3d		 jmp	 SHORT $LN63@titleProc
$LN30@titleProc:

; 1007 : 		else if (ret == -2) {

  0028b	83 f8 fe	 cmp	 eax, -2			; fffffffeH
  0028e	75 38		 jne	 SHORT $LN63@titleProc

; 1008 : 			SubProcNo = 100;

  00290	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H

; 1009 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1010 : 			PcLanded.ç»éå»¶æ¶æ¶é´ = TimeGetTime() + 2000;

  0029a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0029f	05 d0 07 00 00	 add	 eax, 2000		; 000007d0H
  002a4	33 c9		 xor	 ecx, ecx
  002a6	a3 9c 00 00 00	 mov	 DWORD PTR ?PcLanded@@3ULanded@@A+156, eax
  002ab	0f 1f 44 00 00	 npad	 5
$LL45@titleProc:

; 1011 : #endif
; 1012 : 			strcpy(msg, netprocErrmsg);

  002b0	8a 81 00 00 00
	00		 mov	 al, BYTE PTR ?netprocErrmsg@@3PADA[ecx]
  002b6	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002b9	88 81 ff ff ff
	ff		 mov	 BYTE PTR ?msg@?1??titleProc@@YAXXZ@4PADA[ecx-1], al
  002bf	84 c0		 test	 al, al
  002c1	75 ed		 jne	 SHORT $LL45@titleProc

; 1013 : 			cleanupNetwork();

  002c3	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork
$LN63@titleProc:

; 1014 : 		}
; 1015 : 	}
; 1016 : 	if (SubProcNo == 100) {

  002c8	83 3d 00 00 00
	00 64		 cmp	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  002cf	75 11		 jne	 SHORT $LN33@titleProc

; 1017 : 		initCommonMsgWin();

  002d1	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 1018 : 		SubProcNo++;

  002d6	c7 05 00 00 00
	00 65 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H

; 1019 : 	}
; 1020 : 	if (SubProcNo == 101) {

  002e0	eb 09		 jmp	 SHORT $LN57@titleProc
$LN33@titleProc:
  002e2	83 3d 00 00 00
	00 65		 cmp	 DWORD PTR ?SubProcNo@@3IA, 101 ; SubProcNo, 00000065H
  002e9	75 48		 jne	 SHORT $LN64@titleProc
$LN57@titleProc:

; 1021 : 		if (commonMsgWin(msg)) {

  002eb	68 00 00 00 00	 push	 OFFSET ?msg@?1??titleProc@@YAXXZ@4PADA
  002f0	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  002f5	83 c4 04	 add	 esp, 4
  002f8	85 c0		 test	 eax, eax
  002fa	74 37		 je	 SHORT $LN64@titleProc

; 1022 : 			char str[128];
; 1023 : 			SubProcNo = 1;
; 1024 : 
; 1025 : 			sprintf(str, "%s %s", DEF_APPNAME, SA_VERSION);

  002fc	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00301	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NLNMPB@?$KD?S?$KD?t?$KD?o?$KD?n?$KD?e?$KD?A?$KD?g?$KD?e@
  00306	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$2[ebp]
  0030c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 1 ; SubProcNo
  00316	68 00 00 00 00	 push	 OFFSET ??_C@_05DNIIFBMG@?$CFs?5?$CFs@
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 _sprintf
  00321	83 c4 10	 add	 esp, 16			; 00000010H

; 1026 : 
; 1027 : 			SetWindowText(hWnd, str);

  00324	8d 85 4c ff ff
	ff		 lea	 eax, DWORD PTR _str$2[ebp]
  0032a	50		 push	 eax
  0032b	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  00331	ff d6		 call	 esi
$LN64@titleProc:

; 1028 : 		}
; 1029 : 	}
; 1030 : 	if (SubProcNo == 200) {

  00333	81 3d 00 00 00
	00 c8 00 00 00	 cmp	 DWORD PTR ?SubProcNo@@3IA, 200 ; SubProcNo, 000000c8H
  0033d	75 11		 jne	 SHORT $LN36@titleProc
$LN55@titleProc:

; 1031 : 		initCommonMsgWin();

  0033f	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 1032 : 		SubProcNo++;

  00344	c7 05 00 00 00
	00 c9 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 201 ; SubProcNo, 000000c9H

; 1033 : 	}
; 1034 : 	if (SubProcNo == 201) {

  0034e	eb 0c		 jmp	 SHORT $LN58@titleProc
$LN36@titleProc:
  00350	81 3d 00 00 00
	00 c9 00 00 00	 cmp	 DWORD PTR ?SubProcNo@@3IA, 201 ; SubProcNo, 000000c9H
  0035a	75 23		 jne	 SHORT $LN38@titleProc
$LN58@titleProc:

; 1035 : 		if (commonMsgWin(szAnnouncement))

  0035c	68 00 00 00 00	 push	 OFFSET ?szAnnouncement@@3PADA ; szAnnouncement
  00361	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  00366	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  0036c	83 c4 04	 add	 esp, 4
  0036f	85 c0		 test	 eax, eax
  00371	ba 01 00 00 00	 mov	 edx, 1
  00376	0f 45 ca	 cmovne	 ecx, edx
  00379	89 0d 00 00 00
	00		 mov	 DWORD PTR ?SubProcNo@@3IA, ecx ; SubProcNo
$LN38@titleProc:

; 1041 : 	char buff1[128];
; 1042 : 	char szMonth[4];
; 1043 : 	int iYear, iMonth, iDay, iHour, iMin, iSec;
; 1044 : 
; 1045 : 	sprintf_s(buff1, "%s", __DATE__);

  0037f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BKDGIFED@Oct?5?54?52021@
  00384	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _buff1$[ebp]
  0038a	c7 45 cc 4a 61
	6e 00		 mov	 DWORD PTR _szEnglishMonth$[ebp], 7233866 ; 006e614aH
  00391	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00396	50		 push	 eax
  00397	c7 45 d0 46 65
	62 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+4], 6448454 ; 00626546H
  0039e	c7 45 d4 4d 61
	72 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+8], 7496013 ; 0072614dH
  003a5	c7 45 d8 41 70
	72 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+12], 7499841 ; 00727041H
  003ac	c7 45 dc 4d 61
	79 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+16], 7954765 ; 0079614dH
  003b3	c7 45 e0 4a 75
	6e 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+20], 7238986 ; 006e754aH
  003ba	c7 45 e4 4a 75
	6c 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+24], 7107914 ; 006c754aH
  003c1	c7 45 e8 41 75
	67 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+28], 6780225 ; 00677541H
  003c8	c7 45 ec 53 65
	70 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+32], 7365971 ; 00706553H
  003cf	c7 45 f0 4f 63
	74 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+36], 7627599 ; 0074634fH
  003d6	c7 45 f4 4e 6f
	76 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+40], 7761742 ; 00766f4eH
  003dd	c7 45 f8 44 65
	63 00		 mov	 DWORD PTR _szEnglishMonth$[ebp+44], 6513988 ; 00636544H
  003e4	e8 00 00 00 00	 call	 ??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ ; sprintf_s<128>

; 1046 : 	sscanf(buff1, "%s %d %d", szMonth, &iDay, &iYear);

  003e9	8d 85 40 fa ff
	ff		 lea	 eax, DWORD PTR _iYear$[ebp]
  003ef	50		 push	 eax
  003f0	8d 85 44 fa ff
	ff		 lea	 eax, DWORD PTR _iDay$[ebp]
  003f6	50		 push	 eax
  003f7	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _szMonth$[ebp]
  003fd	50		 push	 eax
  003fe	8d 85 cc fe ff
	ff		 lea	 eax, DWORD PTR _buff1$[ebp]
  00404	68 00 00 00 00	 push	 OFFSET ??_C@_08JIAEEDMM@?$CFs?5?$CFd?5?$CFd@
  00409	50		 push	 eax
  0040a	e8 00 00 00 00	 call	 _sscanf

; 1047 : 	for (int i = 0; 12; i++) {
; 1048 : 		if (strncmp(szMonth, szEnglishMonth[i], 3) == 0) {

  0040f	6a 03		 push	 3
  00411	8d 45 cc	 lea	 eax, DWORD PTR _szEnglishMonth$[ebp]
  00414	33 ff		 xor	 edi, edi
  00416	50		 push	 eax
  00417	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _szMonth$[ebp]
  0041d	50		 push	 eax
  0041e	e8 00 00 00 00	 call	 _strncmp
  00423	83 c4 2c	 add	 esp, 44			; 0000002cH
  00426	85 c0		 test	 eax, eax
  00428	74 20		 je	 SHORT $LN49@titleProc

; 1036 : 			SubProcNo = 1;
; 1037 : 	}
; 1038 : 	char vermsg[128];
; 1039 : #ifdef _NB_GAMETIME
; 1040 : 	const char szEnglishMonth[12][4] = { "Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec" };

  0042a	8d 75 cc	 lea	 esi, DWORD PTR _szEnglishMonth$[ebp]
  0042d	0f 1f 00	 npad	 3
$LL4@titleProc:

; 1047 : 	for (int i = 0; 12; i++) {
; 1048 : 		if (strncmp(szMonth, szEnglishMonth[i], 3) == 0) {

  00430	6a 03		 push	 3
  00432	83 c6 04	 add	 esi, 4
  00435	8d 85 48 fa ff
	ff		 lea	 eax, DWORD PTR _szMonth$[ebp]
  0043b	56		 push	 esi
  0043c	50		 push	 eax
  0043d	47		 inc	 edi
  0043e	e8 00 00 00 00	 call	 _strncmp
  00443	83 c4 0c	 add	 esp, 12			; 0000000cH
  00446	85 c0		 test	 eax, eax
  00448	75 e6		 jne	 SHORT $LL4@titleProc
$LN49@titleProc:

; 1049 : 			iMonth = i + 1;
; 1050 : 			break;
; 1051 : 		}
; 1052 : 	}
; 1053 : 	sprintf_s(vermsg, "[Verï¼%04d.%02d.%02d]", iYear, iMonth, iDay);

  0044a	ff b5 44 fa ff
	ff		 push	 DWORD PTR _iDay$[ebp]
  00450	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00453	50		 push	 eax
  00454	ff b5 40 fa ff
	ff		 push	 DWORD PTR _iYear$[ebp]
  0045a	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _vermsg$[ebp]
  00460	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MJOFMAKM@?$FLVer?$KD?$LK?$CF04d?4?$CF02d?4?$CF02d?$FN@
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ??$sprintf_s@$0IA@@@YAHAAY0IA@DPBDZZ ; sprintf_s<128>

; 1054 : #else
; 1055 : 	sprintf_s(vermsg, "%s", _NB_GAMENAME);
; 1056 : #endif
; 1057 : 	if (ResoMode == åè¾¨ç::mode800) {

  0046b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00470	83 c4 14	 add	 esp, 20			; 00000014H
  00473	83 f8 03	 cmp	 eax, 3
  00476	75 0f		 jne	 SHORT $LN40@titleProc

; 1058 : 		StockDispBuffer(320 + DISPLACEMENT_X / 2, 240 + DISPLACEMENT_Y / 2, DISP_PRIO_BG, IMAGE_Server_2, 0);
; 1059 : 		StockFontBuffer(800 - 140, 600 - 20, FONT_PRIO_BACK, 1, vermsg, 0);

  00478	be 94 02 00 00	 mov	 esi, 660		; 00000294H
  0047d	bb 2c a0 00 00	 mov	 ebx, 41004		; 0000a02cH
  00482	8d 7e b0	 lea	 edi, DWORD PTR [esi-80]

; 1060 : 	}

  00485	eb 23		 jmp	 SHORT $LN66@titleProc
$LN40@titleProc:

; 1061 : 	else if (ResoMode == åè¾¨ç::mode1024) {

  00487	83 f8 04	 cmp	 eax, 4
  0048a	75 11		 jne	 SHORT $LN42@titleProc

; 1062 : 		StockDispBuffer(320 + DISPLACEMENT_X / 2, 240 + DISPLACEMENT_Y / 2, DISP_PRIO_BG, IMAGE_Server_3, 0);
; 1063 : 		StockFontBuffer(1024 - 140, 768 - 20, FONT_PRIO_BACK, 1, vermsg, 0);

  0048c	be 74 03 00 00	 mov	 esi, 884		; 00000374H
  00491	bf ec 02 00 00	 mov	 edi, 748		; 000002ecH
  00496	bb 14 a4 00 00	 mov	 ebx, 42004		; 0000a414H

; 1064 : 	}

  0049b	eb 0d		 jmp	 SHORT $LN66@titleProc
$LN42@titleProc:

; 1065 : 	else {
; 1066 : 		StockDispBuffer(320 + DISPLACEMENT_X / 2, 240 + DISPLACEMENT_Y / 2, DISP_PRIO_BG, IMAGE_Server_1, 0);
; 1067 : 		StockFontBuffer(640 - 140, 480 - 20, FONT_PRIO_BACK, 1, vermsg, 0);

  0049d	be f4 01 00 00	 mov	 esi, 500		; 000001f4H
  004a2	bb 44 9c 00 00	 mov	 ebx, 40004		; 00009c44H
  004a7	8d 7e d8	 lea	 edi, DWORD PTR [esi-40]
$LN66@titleProc:

; 1068 : 	}
; 1069 : 
; 1070 : }

  004aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  004af	99		 cdq
  004b0	2b c2		 sub	 eax, edx
  004b2	8b c8		 mov	 ecx, eax
  004b4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  004b9	99		 cdq
  004ba	2b c2		 sub	 eax, edx
  004bc	d1 f9		 sar	 ecx, 1
  004be	6a 00		 push	 0
  004c0	d1 f8		 sar	 eax, 1
  004c2	53		 push	 ebx
  004c3	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  004c8	6a 00		 push	 0
  004ca	50		 push	 eax
  004cb	8d 81 40 01 00
	00		 lea	 eax, DWORD PTR [ecx+320]
  004d1	50		 push	 eax
  004d2	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004d7	6a 00		 push	 0
  004d9	8d 85 4c fe ff
	ff		 lea	 eax, DWORD PTR _vermsg$[ebp]
  004df	50		 push	 eax
  004e0	6a 01		 push	 1
  004e2	6a 00		 push	 0
  004e4	57		 push	 edi
  004e5	56		 push	 esi
  004e6	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  004eb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004ee	83 c4 2c	 add	 esp, 44			; 0000002cH
  004f1	33 cd		 xor	 ecx, ebp
  004f3	5f		 pop	 edi
  004f4	5e		 pop	 esi
  004f5	5b		 pop	 ebx
  004f6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004fb	8b e5		 mov	 esp, ebp
  004fd	5d		 pop	 ebp
  004fe	c3		 ret	 0
?titleProc@@YAXXZ ENDP					; titleProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\login.cpp
;	COMDAT ?idPasswordProc@@YAXXZ
_TEXT	SEGMENT
?idPasswordProc@@YAXXZ PROC				; idPasswordProc, COMDAT

; 249  : 	static ACTION* ptActMenuWin = NULL;
; 250  : 	static int x, y, w, h;
; 251  : 
; 252  : 	BOOL flag = FALSE;
; 253  : 	int ret;
; 254  : 	static char msg[256];
; 255  : 	static char szWGSState[] = "ë¡ê·¸ì¸íì­ìì¤.ï¼ì ìë§ê¸°ë¤ë ¤ì£¼ì¸ìï¼";
; 256  : 
; 257  : 	if (SubProcNo == 0) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00005	53		 push	 ebx
  00006	56		 push	 esi
  00007	33 f6		 xor	 esi, esi
  00009	85 c0		 test	 eax, eax
  0000b	75 68		 jne	 SHORT $LN2@idPassword

; 258  : #ifdef __NEW_CLIENT
; 259  : 		extern HANDLE hPing;
; 260  : 		extern SOCKET sockRaw;
; 261  : 		if (hPing) {

  0000d	39 35 00 00 00
	00		 cmp	 DWORD PTR ?hPing@@3PAXA, esi ; hPing
  00013	74 34		 je	 SHORT $LN3@idPassword

; 262  : 			closesocket(sockRaw);

  00015	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockRaw@@3IA	; sockRaw
  0001b	e8 00 00 00 00	 call	 _closesocket@4

; 263  : 			sockRaw = INVALID_SOCKET;
; 264  : 			TerminateThread(hPing, 0);

  00020	56		 push	 esi
  00021	ff 35 00 00 00
	00		 push	 DWORD PTR ?hPing@@3PAXA	; hPing
  00027	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?sockRaw@@3IA, -1 ; sockRaw
  00031	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__TerminateThread@8

; 265  : 			CloseHandle(hPing);

  00037	ff 35 00 00 00
	00		 push	 DWORD PTR ?hPing@@3PAXA	; hPing
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4

; 266  : 			hPing = NULL;

  00043	89 35 00 00 00
	00		 mov	 DWORD PTR ?hPing@@3PAXA, esi ; hPing
$LN3@idPassword:

; 267  : 		}
; 268  : #endif
; 269  : #ifndef _STONDEBUG_
; 270  : 		Sleep(0);

  00049	6a 00		 push	 0
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 271  : #endif
; 272  : 		PaletteChange(DEF_PAL, 0);

  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	e8 00 00 00 00	 call	 ?PaletteChange@@YAXHH@Z	; PaletteChange

; 273  : 		SubProcNo++;

  0005a	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00060	83 c4 08	 add	 esp, 8

; 274  : 		initInputIdPassword();

  00063	e8 00 00 00 00	 call	 ?initInputIdPassword@@YAXXZ ; initInputIdPassword

; 275  : 		idKeyReturn = 0;

  00068	33 c0		 xor	 eax, eax
  0006a	66 a3 00 00 00
	00		 mov	 WORD PTR ?idKeyReturn@@3FA, ax ; idKeyReturn
  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN2@idPassword:

; 276  : #ifdef _PET_TRACE_MOUSE
; 277  : 		PlayPet.SetActionStep(0);
; 278  : #endif
; 279  : 	}
; 280  : 	if (SubProcNo == 1) {

  00075	83 f8 01	 cmp	 eax, 1
  00078	0f 85 d6 00 00
	00		 jne	 $LN4@idPassword

; 281  : 		if (!bAgain)

  0007e	39 35 00 00 00
	00		 cmp	 DWORD PTR ?bAgain@@3HA, esi
  00084	75 0a		 jne	 SHORT $LN5@idPassword

; 282  : 			bAgain = TRUE;

  00086	a3 00 00 00 00	 mov	 DWORD PTR ?bAgain@@3HA, eax
  0008b	e9 a5 00 00 00	 jmp	 $LN6@idPassword
$LN5@idPassword:

; 283  : 		else {
; 284  : 
; 285  : 			CopyMemory(idKey.buffer, szUser, 32);

  00090	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?szUser@@3PADA

; 286  : 			ecb_crypt("f;encor1c", idKey.buffer, 32, DES_DECRYPT);

  00097	6a 01		 push	 1
  00099	6a 20		 push	 32			; 00000020H
  0009b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?idKey@@3USTR_BUFFER@@A, xmm0
  000a2	68 00 00 00 00	 push	 OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  000a7	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?szUser@@3PADA+16
  000ae	68 00 00 00 00	 push	 OFFSET ??_C@_09BACHGGGK@f?$DLencor1c@
  000b3	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?idKey@@3USTR_BUFFER@@A+16, xmm0
  000ba	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 287  : 			CopyMemory(passwd.buffer, szPassword, 32);

  000bf	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?szPassword@@3PADA

; 288  : 			ecb_crypt("f;encor1c", passwd.buffer, 32, DES_DECRYPT);

  000c6	6a 01		 push	 1
  000c8	6a 20		 push	 32			; 00000020H
  000ca	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?passwd@@3USTR_BUFFER@@A, xmm0
  000d1	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  000d6	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?szPassword@@3PADA+16
  000dd	68 00 00 00 00	 push	 OFFSET ??_C@_09BACHGGGK@f?$DLencor1c@
  000e2	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?passwd@@3USTR_BUFFER@@A+16, xmm0
  000e9	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 289  : 			idKey.cursor = idKey.cnt = strlen(idKey.buffer);

  000ee	b9 00 00 00 00	 mov	 ecx, OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  000f3	83 c4 20	 add	 esp, 32			; 00000020H
  000f6	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  000f9	0f 1f 80 00 00
	00 00		 npad	 7
$LL48@idPassword:
  00100	8a 01		 mov	 al, BYTE PTR [ecx]
  00102	41		 inc	 ecx
  00103	84 c0		 test	 al, al
  00105	75 f9		 jne	 SHORT $LL48@idPassword
  00107	2b ca		 sub	 ecx, edx
  00109	88 0d 07 01 00
	00		 mov	 BYTE PTR ?idKey@@3USTR_BUFFER@@A+263, cl
  0010f	88 0d 09 01 00
	00		 mov	 BYTE PTR ?idKey@@3USTR_BUFFER@@A+265, cl

; 290  : 			passwd.cursor = passwd.cnt = strlen(passwd.buffer);

  00115	b9 00 00 00 00	 mov	 ecx, OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  0011a	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0011d	0f 1f 00	 npad	 3
$LL49@idPassword:
  00120	8a 01		 mov	 al, BYTE PTR [ecx]
  00122	41		 inc	 ecx
  00123	84 c0		 test	 al, al
  00125	75 f9		 jne	 SHORT $LL49@idPassword
  00127	2b ca		 sub	 ecx, edx
  00129	88 0d 07 01 00
	00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+263, cl
  0012f	88 0d 09 01 00
	00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+265, cl
$LN6@idPassword:

; 291  : 
; 292  : 		}
; 293  : 		idPasswordFocusSw = 0;
; 294  : 		GetKeyInputFocus(idPasswordFocus[idPasswordFocusSw]);

  00135	ff 35 00 00 00
	00		 push	 DWORD PTR ?idPasswordFocus@@3PAPAUSTR_BUFFER@@A
  0013b	89 35 00 00 00
	00		 mov	 DWORD PTR ?idPasswordFocusSw@@3HA, esi
  00141	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus

; 295  : 		SubProcNo++;

  00146	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  0014b	83 c4 04	 add	 esp, 4
  0014e	40		 inc	 eax
  0014f	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo
$LN4@idPassword:

; 296  : 	}
; 297  : 
; 298  : 	// å¯ä»¥è¾å¥
; 299  : 	if (SubProcNo == 2)

  00154	83 f8 02	 cmp	 eax, 2
  00157	bb 01 00 00 00	 mov	 ebx, 1
  0015c	0f 44 f3	 cmove	 esi, ebx

; 300  : 		flag = TRUE;	// å¯ä»¥è¾å¥
; 301  : 
; 302  : 	ret = inputIdPassword(flag);

  0015f	56		 push	 esi
  00160	e8 00 00 00 00	 call	 ?inputIdPassword@@YAHH@Z ; inputIdPassword
  00165	83 c4 04	 add	 esp, 4

; 303  : 
; 304  : 	if (ret == 1) {

  00168	3b c3		 cmp	 eax, ebx
  0016a	0f 85 b9 00 00
	00		 jne	 $LN8@idPassword

; 305  : 		SubProcNo = 3;
; 306  : 		play_se(217, 320, 240);

  00170	68 f0 00 00 00	 push	 240			; 000000f0H
  00175	68 40 01 00 00	 push	 320			; 00000140H
  0017a	68 d9 00 00 00	 push	 217			; 000000d9H
  0017f	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 3 ; SubProcNo
  00189	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0018e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN12@idPassword:

; 316  : 	}
; 317  : 	if (SubProcNo == 3) {

  00191	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  00196	83 f8 03	 cmp	 eax, 3
  00199	0f 85 12 01 00
	00		 jne	 $LN13@idPassword

; 318  : #ifdef _STONDEBUG_
; 319  : 		w = (strlen(szWGSState) + 23) * 9 / 64 + 2;
; 320  : #else
; 321  : 		w = (strlen(szWGSState) + 3) * 9 / 64 + 2;

  0019f	b9 00 00 00 00	 mov	 ecx, OFFSET ?szWGSState@?1??idPasswordProc@@YAXXZ@4PADA
  001a4	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL50@idPassword:
  001a7	8a 01		 mov	 al, BYTE PTR [ecx]
  001a9	41		 inc	 ecx
  001aa	84 c0		 test	 al, al
  001ac	75 f9		 jne	 SHORT $LL50@idPassword
  001ae	2b ca		 sub	 ecx, edx

; 322  : #endif
; 323  : 		h = (16 + 47) / 48;
; 324  : 		if (h < 2)
; 325  : 			h = 2;

  001b0	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?h@?1??idPasswordProc@@YAXXZ@4HA, 2

; 326  : 		x = (640 - w * 64) / 2;
; 327  : 		y = (480 - h * 48) / 2;
; 328  : 		ptActMenuWin = MakeWindowDisp(x, y, w, h, NULL, 1);

  001ba	6a 01		 push	 1
  001bc	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  001c1	c7 05 00 00 00
	00 c0 00 00 00	 mov	 DWORD PTR ?y@?1??idPasswordProc@@YAXXZ@4HA, 192 ; 000000c0H
  001cb	6a 00		 push	 0
  001cd	8d 0c c9	 lea	 ecx, DWORD PTR [ecx+ecx*8]
  001d0	83 c1 1b	 add	 ecx, 27			; 0000001bH
  001d3	c1 e9 06	 shr	 ecx, 6
  001d6	83 c1 02	 add	 ecx, 2
  001d9	2b c1		 sub	 eax, ecx
  001db	89 0d 00 00 00
	00		 mov	 DWORD PTR ?w@?1??idPasswordProc@@YAXXZ@4HA, ecx
  001e1	c1 e0 06	 shl	 eax, 6
  001e4	99		 cdq
  001e5	6a 02		 push	 2
  001e7	51		 push	 ecx
  001e8	2b c2		 sub	 eax, edx
  001ea	d1 f8		 sar	 eax, 1
  001ec	68 c0 00 00 00	 push	 192			; 000000c0H
  001f1	50		 push	 eax
  001f2	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??idPasswordProc@@YAXXZ@4HA, eax
  001f7	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  001fc	83 c4 18	 add	 esp, 24			; 00000018H
  001ff	a3 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A, eax

; 329  : 
; 330  : #ifdef _NEW_RESOMODE  //800 600æ¨¡å¼
; 331  : 		x = ptActMenuWin->x;

  00204	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 332  : 		y = ptActMenuWin->y;

  00207	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  0020a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??idPasswordProc@@YAXXZ@4HA, ecx
  00210	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??idPasswordProc@@YAXXZ@4HA, eax

; 333  : #endif
; 334  : 
; 335  : 
; 336  : 		initConnectServer();

  00215	e8 00 00 00 00	 call	 ?initConnectServer@@YAXXZ ; initConnectServer

; 337  : 		SubProcNo = 4;

  0021a	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 4 ; SubProcNo

; 338  : #ifdef _PET_TRACE_MOUSE
; 339  : 		PlayPet.SetActionStep(2);
; 340  : #endif
; 341  : #ifdef _75_LOGIN
; 342  : 		if (g_bUseAlpha) {
; 343  : 			DeathAction(aEffect);
; 344  : 			DeathAction(aEffect1);
; 345  : 		}
; 346  : #endif
; 347  : 	}
; 348  : 	if (SubProcNo == 4) {

  00224	e9 91 00 00 00	 jmp	 $LN47@idPassword
$LN8@idPassword:

; 307  : 	}
; 308  : 	else if (ret == 2) {

  00229	83 f8 02	 cmp	 eax, 2
  0022c	75 2e		 jne	 SHORT $LN10@idPassword

; 309  : 		//æä¸ç»äº
; 310  : 		play_se(217, 320, 240);

  0022e	68 f0 00 00 00	 push	 240			; 000000f0H
  00233	68 40 01 00 00	 push	 320			; 00000140H
  00238	68 d9 00 00 00	 push	 217			; 000000d9H
  0023d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00242	83 c4 0c	 add	 esp, 12			; 0000000cH

; 311  : 		PostMessage(hWnd, WM_CLOSE, 0, 0L);

  00245	6a 00		 push	 0
  00247	6a 00		 push	 0
  00249	6a 10		 push	 16			; 00000010H
  0024b	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  00251	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 312  : 	}

  00257	e9 35 ff ff ff	 jmp	 $LN12@idPassword
$LN10@idPassword:

; 313  : 	else if (ret < 0) {

  0025c	85 c0		 test	 eax, eax
  0025e	0f 89 2d ff ff
	ff		 jns	 $LN12@idPassword

; 314  : 		SubProcNo = 100;
; 315  : 		strcpy(msg, "ê³ì ê³¼ ë¹ë°ë²í¸ë¥¼ ìë ¥íì¸ìï¼");

  00264	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@
  0026b	a1 18 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@+24
  00270	a3 18 00 00 00	 mov	 DWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+24, eax
  00275	66 a1 1c 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@+28
  0027b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA, xmm0
  00282	66 a3 1c 00 00
	00		 mov	 WORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+28, ax
  00288	f3 0f 7e 05 10
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@+16
  00290	a0 1e 00 00 00	 mov	 al, BYTE PTR ??_C@_0BP@LOHIDJF@?$LA?h?A?$KE?$LA?z?5?$LK?q?$LJ?P?$LJ?x?H?$KD?$LI?$KG?5?$MA?T?$LH?B?G?O?$LM?$LM?$LP?d?$KD?$KB@+30
  00295	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  0029f	66 0f d6 05 10
	00 00 00	 movq	 QWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+16, xmm0
  002a7	a2 1e 00 00 00	 mov	 BYTE PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+30, al

; 316  : 	}
; 317  : 	if (SubProcNo == 3) {

  002ac	e9 17 02 00 00	 jmp	 $LN46@idPassword
$LN13@idPassword:

; 338  : #ifdef _PET_TRACE_MOUSE
; 339  : 		PlayPet.SetActionStep(2);
; 340  : #endif
; 341  : #ifdef _75_LOGIN
; 342  : 		if (g_bUseAlpha) {
; 343  : 			DeathAction(aEffect);
; 344  : 			DeathAction(aEffect1);
; 345  : 		}
; 346  : #endif
; 347  : 	}
; 348  : 	if (SubProcNo == 4) {

  002b1	83 f8 04	 cmp	 eax, 4
  002b4	0f 85 c0 01 00
	00		 jne	 $LN22@idPassword
$LN47@idPassword:

; 349  : 		if (ptActMenuWin != NULL) {

  002ba	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A
  002bf	85 c0		 test	 eax, eax
  002c1	0f 84 8e 00 00
	00		 je	 $LN17@idPassword

; 350  : 			if (ptActMenuWin->hp >= 1) {

  002c7	39 58 78	 cmp	 DWORD PTR [eax+120], ebx
  002ca	0f 8c 85 00 00
	00		 jl	 $LN17@idPassword

; 351  : 				int len;
; 352  : 				int xx, yy;
; 353  : 				if (iWGS == 7) isWGS7 = 1; // Nuke 0615: Avoid 7's lock

  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iWGS@@3HA ; iWGS
  002d5	83 f8 07	 cmp	 eax, 7
  002d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?isWGS7@@3HA ; isWGS7

; 354  : 
; 355  : #ifdef _STONDEBUG_
; 356  : 				switch (iWGS) {
; 357  : 				case 0:
; 358  : 					wsprintf(msg, "%s", szWGSState);
; 359  : 					break;
; 360  : 				case 1: //è¿æ¥WGS[WGS ì°ê²°/ì ì]
; 361  : 					wsprintf(msg, "%s(%s)", szWGSState, "Connect to WGS!!");
; 362  : 					break;
; 363  : 				case 2: //åå¾CSIP[CSIP ê°ì ¸ì¤ê¸°]
; 364  : 					wsprintf(msg, "%s(%s)", szWGSState, "Get the Redirect!!");
; 365  : 					break;
; 366  : 				case 3: //è¿æ¥CS[CS ì°ê²°/ì ì]
; 367  : 					wsprintf(msg, "%s(%s)", szWGSState, "Connect to CS!!");
; 368  : 					break;
; 369  : 				case 4: //åå¾Public key(å å¯)[public key(ìí¸í) ê°ì ¸ì¤ê¸°]
; 370  : 					wsprintf(msg, "%s(%s)", szWGSState, "Get the Public key!!");
; 371  : 					break;
; 372  : 				case 5: //åå¾Session key(è§£å¯)[Session key(ìí¸í) ê°ì ¸ì¤ê¸°]
; 373  : 					wsprintf(msg, "%s(%s)", szWGSState, "Send the Session key!!");
; 374  : 					break;
; 375  : 				case 6: //åå¾è¿æ¥GSè¡¨å[GS ì ì ìì ê°ì ¸ì¤ê¸°]
; 376  : 					wsprintf(msg, "%s(%s)", szWGSState, "Get Continue!!");
; 377  : 					break;
; 378  : 				case 7: //ä¼ éå¸å·ãå¯ç [IDì ë¹ë°ë²í¸ë¥¼ ì ì¡íê¸°]
; 379  : 					wsprintf(msg, "%s(%s)", szWGSState, "Send UserName!!");
; 380  : 					break;
; 381  : 				case 8:
; 382  : 					wsprintf(msg, "%s(%s)", szWGSState, "Get Goto!!");
; 383  : 					break;
; 384  : 				}
; 385  : #else
; 386  : 				wsprintf(msg, "%s(%d)", szWGSState, iWGS);

  002de	50		 push	 eax
  002df	68 00 00 00 00	 push	 OFFSET ?szWGSState@?1??idPasswordProc@@YAXXZ@4PADA
  002e4	0f 44 cb	 cmove	 ecx, ebx
  002e7	68 00 00 00 00	 push	 OFFSET ??_C@_06BPGFIOAL@?$CFs?$CI?$CFd?$CJ@
  002ec	68 00 00 00 00	 push	 OFFSET ?msg@?1??idPasswordProc@@YAXXZ@4PADA
  002f1	89 0d 00 00 00
	00		 mov	 DWORD PTR ?isWGS7@@3HA, ecx ; isWGS7
  002f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__wsprintfA

; 387  : #endif
; 388  : 				len = strlen(msg);

  002fd	be 00 00 00 00	 mov	 esi, OFFSET ?msg@?1??idPasswordProc@@YAXXZ@4PADA
  00302	83 c4 10	 add	 esp, 16			; 00000010H
  00305	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]
$LL51@idPassword:
  00308	8a 06		 mov	 al, BYTE PTR [esi]
  0030a	46		 inc	 esi
  0030b	84 c0		 test	 al, al
  0030d	75 f9		 jne	 SHORT $LL51@idPassword

; 389  : 				xx = (w * 64 - len * 8) / 2;
; 390  : 				yy = (h * 48 - 16) / 2;

  0030f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?h@?1??idPasswordProc@@YAXXZ@4HA
  00314	2b f1		 sub	 esi, ecx

; 391  : 				StockFontBuffer(x + xx, y + yy, FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);

  00316	6a 00		 push	 0
  00318	68 00 00 00 00	 push	 OFFSET ?msg@?1??idPasswordProc@@YAXXZ@4PADA
  0031d	6a 00		 push	 0
  0031f	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00322	c1 e0 04	 shl	 eax, 4
  00325	83 e8 10	 sub	 eax, 16			; 00000010H
  00328	99		 cdq
  00329	2b c2		 sub	 eax, edx
  0032b	d1 f8		 sar	 eax, 1
  0032d	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?y@?1??idPasswordProc@@YAXXZ@4HA
  00333	6a 01		 push	 1
  00335	50		 push	 eax
  00336	a1 00 00 00 00	 mov	 eax, DWORD PTR ?w@?1??idPasswordProc@@YAXXZ@4HA
  0033b	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00342	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??idPasswordProc@@YAXXZ@4HA
  00347	2b ce		 sub	 ecx, esi
  00349	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]
  0034c	50		 push	 eax
  0034d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00352	83 c4 18	 add	 esp, 24			; 00000018H
$LN17@idPassword:

; 392  : 			}
; 393  : 		}
; 394  : #ifdef NO_WGS
; 395  : 		int ret2 = 1;
; 396  : 		dwServer = GS;
; 397  : #else
; 398  : 		int ret2 = ConnectWGS();
; 399  : #endif
; 400  : 		if (ret2 == 1) {
; 401  : 			// å¤çTitle
; 402  : 
; 403  : 		//		char* username2 = "jl001";
; 404  : 		//		char* password2 = "asdasd";
; 405  : 
; 406  : 				//æè´¦å·å¯ç åéç»wg
; 407  : 			if (*idKey.buffer == 0)

  00355	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?idKey@@3USTR_BUFFER@@A, 0
  0035c	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?dwServer@@3KA, 3 ; dwServer
  00366	75 01		 jne	 SHORT $LN21@idPassword

; 408  : 			{
; 409  : 				__asm int 3;

  00368	cc		 int	 3
$LN21@idPassword:

; 410  : 			}
; 411  : 			CopyMemory(szUser_JL, idKey.buffer, 32);

  00369	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?idKey@@3USTR_BUFFER@@A

; 412  : 			CopyMemory(szPassword_JL, passwd.buffer, 32);
; 413  : 			void JL_Get_UsernameAndPassword(char* username, char* password);
; 414  : 			JL_Get_UsernameAndPassword(szUser_JL, szPassword_JL);

  00370	68 00 00 00 00	 push	 OFFSET ?szPassword_JL@@3PADA ; szPassword_JL
  00375	68 00 00 00 00	 push	 OFFSET ?szUser_JL@@3PADA ; szUser_JL
  0037a	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?szUser_JL@@3PADA, xmm0
  00381	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?idKey@@3USTR_BUFFER@@A+16
  00388	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?szUser_JL@@3PADA+16, xmm0
  0038f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?passwd@@3USTR_BUFFER@@A
  00396	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?szPassword_JL@@3PADA, xmm0
  0039d	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?passwd@@3USTR_BUFFER@@A+16
  003a4	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?szPassword_JL@@3PADA+16, xmm0
  003ab	e8 00 00 00 00	 call	 ?JL_Get_UsernameAndPassword@@YAXPAD0@Z ; JL_Get_UsernameAndPassword

; 415  : 
; 416  : 
; 417  : 
; 418  : 			//		CopyMemory(szUser, username2, 32);
; 419  : 			CopyMemory(szUser, idKey.buffer, 32);

  003b0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?idKey@@3USTR_BUFFER@@A

; 420  : 			ecb_crypt("f;encor1c", szUser, 32, DES_ENCRYPT);

  003b7	6a 00		 push	 0
  003b9	6a 20		 push	 32			; 00000020H
  003bb	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?szUser@@3PADA, xmm0
  003c2	68 00 00 00 00	 push	 OFFSET ?szUser@@3PADA	; szUser
  003c7	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?idKey@@3USTR_BUFFER@@A+16
  003ce	68 00 00 00 00	 push	 OFFSET ??_C@_09BACHGGGK@f?$DLencor1c@
  003d3	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?szUser@@3PADA+16, xmm0
  003da	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 421  : 			//		CopyMemory(szPassword, password2, 32);
; 422  : 			CopyMemory(szPassword, passwd.buffer, 32);

  003df	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ?passwd@@3USTR_BUFFER@@A

; 423  : 			ecb_crypt("f;encor1c", szPassword, 32, DES_ENCRYPT);

  003e6	6a 00		 push	 0
  003e8	6a 20		 push	 32			; 00000020H
  003ea	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?szPassword@@3PADA, xmm0
  003f1	68 00 00 00 00	 push	 OFFSET ?szPassword@@3PADA ; szPassword
  003f6	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ?passwd@@3USTR_BUFFER@@A+16
  003fd	68 00 00 00 00	 push	 OFFSET ??_C@_09BACHGGGK@f?$DLencor1c@
  00402	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?szPassword@@3PADA+16, xmm0
  00409	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 424  : 			idKey.cnt = 0;
; 425  : 			idKey.cursor = 0;
; 426  : 			ZeroMemory(idKey.buffer, sizeof(idKey.buffer));

  0040e	68 04 01 00 00	 push	 260			; 00000104H
  00413	6a 00		 push	 0
  00415	68 00 00 00 00	 push	 OFFSET ?idKey@@3USTR_BUFFER@@A ; idKey
  0041a	c6 05 07 01 00
	00 00		 mov	 BYTE PTR ?idKey@@3USTR_BUFFER@@A+263, 0
  00421	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?idKey@@3USTR_BUFFER@@A+265, 0
  00428	e8 00 00 00 00	 call	 _memset

; 427  : 			passwd.cnt = 0;
; 428  : 			passwd.cursor = 0;
; 429  : 			ZeroMemory(passwd.buffer, sizeof(passwd.buffer));

  0042d	68 04 01 00 00	 push	 260			; 00000104H
  00432	6a 00		 push	 0
  00434	68 00 00 00 00	 push	 OFFSET ?passwd@@3USTR_BUFFER@@A ; passwd
  00439	c6 05 07 01 00
	00 00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+263, 0
  00440	c6 05 09 01 00
	00 00		 mov	 BYTE PTR ?passwd@@3USTR_BUFFER@@A+265, 0
  00447	e8 00 00 00 00	 call	 _memset
  0044c	83 c4 40	 add	 esp, 64			; 00000040H

; 430  : 			ChangeProc(PROC_TITLE_MENU);

  0044f	6a 02		 push	 2
  00451	e8 00 00 00 00	 call	 ?ChangeProc@@YAXH@Z	; ChangeProc

; 431  : 			if (ptActMenuWin) {

  00456	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A
  0045b	83 c4 04	 add	 esp, 4
  0045e	85 c0		 test	 eax, eax
  00460	74 13		 je	 SHORT $LL52@idPassword

; 432  : 				DeathAction(ptActMenuWin);

  00462	50		 push	 eax
  00463	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00468	83 c4 04	 add	 esp, 4

; 433  : 				ptActMenuWin = NULL;

  0046b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A, 0
$LL52@idPassword:

; 434  : 			}
; 435  : 		}
; 436  : 		else if (ret2 == -7) {
; 437  : 			SubProcNo = 100;
; 438  : #ifdef _NB_æ­çº¿èªå¨éè¿
; 439  : 			PcLanded.ç»éå»¶æ¶æ¶é´ = TimeGetTime() + 2000;
; 440  : #endif
; 441  : 			strcpy(msg, szError);
; 442  : 		}
; 443  : 		else if (ret2 < 0) {
; 444  : 			SubProcNo = 100;
; 445  : 			strcpy(msg, netprocErrmsg);
; 446  : 		}
; 447  : 		else if (ret2 == -8) {
; 448  : 			SubProcNo = 100;
; 449  : 			strcpy(msg, szError);
; 450  : 		}
; 451  : 	}
; 452  : 	if (SubProcNo == 5)

  00475	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN22@idPassword:
  0047a	83 f8 05	 cmp	 eax, 5
  0047d	75 44		 jne	 SHORT $LN28@idPassword

; 453  : 	{
; 454  : 		SubProcNo = 100;
; 455  : 		strcpy(msg, "ìëª»ë ê³ì  ëë ë¹ë°ë²í¸\në¤ììë ¥íì¸ì!");

  0047f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@
  00486	66 a1 28 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@+40
  0048c	c7 05 00 00 00
	00 64 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 100 ; SubProcNo, 00000064H
  00496	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA, xmm0
  0049d	66 a3 28 00 00
	00		 mov	 WORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+40, ax
  004a3	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@+16
  004aa	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+16, xmm0
  004b1	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CK@IPKMMLMJ@?$MA?$NP?$LI?x?$LF?H?5?$LA?h?A?$KE?5?$LG?G?$LE?B?5?$LK?q?$LJ?P?$LJ?x?H?$KD?6?$LE?Y?$LN?C?$MA@+32
  004b9	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?msg@?1??idPasswordProc@@YAXXZ@4PADA+32, xmm0

; 456  : 	}
; 457  : 	if (SubProcNo == 100) {

  004c1	eb 05		 jmp	 SHORT $LN46@idPassword
$LN28@idPassword:
  004c3	83 f8 64	 cmp	 eax, 100		; 00000064H
  004c6	75 31		 jne	 SHORT $LN29@idPassword
$LN46@idPassword:

; 458  : 		cleanupNetwork();

  004c8	e8 00 00 00 00	 call	 ?cleanupNetwork@@YAXXZ	; cleanupNetwork

; 459  : 		if (ptActMenuWin) {

  004cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A
  004d2	85 c0		 test	 eax, eax
  004d4	74 13		 je	 SHORT $LN30@idPassword

; 460  : 			DeathAction(ptActMenuWin);

  004d6	50		 push	 eax
  004d7	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004dc	83 c4 04	 add	 esp, 4

; 461  : 			ptActMenuWin = NULL;

  004df	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActMenuWin@?1??idPasswordProc@@YAXXZ@4PAUaction@@A, 0
$LN30@idPassword:

; 462  : 		}
; 463  : 		initCommonMsgWin();

  004e9	e8 00 00 00 00	 call	 ?initCommonMsgWin@@YAXXZ ; initCommonMsgWin

; 464  : 		SubProcNo++;

  004ee	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  004f3	40		 inc	 eax
  004f4	a3 00 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, eax ; SubProcNo
$LN29@idPassword:

; 465  : 	}
; 466  : 	if (SubProcNo == 101) {

  004f9	5e		 pop	 esi
  004fa	5b		 pop	 ebx
  004fb	83 f8 65	 cmp	 eax, 101		; 00000065H
  004fe	75 26		 jne	 SHORT $LN32@idPassword

; 467  : 		if (commonMsgWin(msg)) {

  00500	68 00 00 00 00	 push	 OFFSET ?msg@?1??idPasswordProc@@YAXXZ@4PADA
  00505	e8 00 00 00 00	 call	 ?commonMsgWin@@YAHPAD@Z	; commonMsgWin
  0050a	83 c4 04	 add	 esp, 4
  0050d	85 c0		 test	 eax, eax
  0050f	74 15		 je	 SHORT $LN32@idPassword

; 468  : 			SubProcNo = 2;
; 469  : 			Sleep(1000);

  00511	68 e8 03 00 00	 push	 1000			; 000003e8H
  00516	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?SubProcNo@@3IA, 2 ; SubProcNo
  00520	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4
$LN32@idPassword:

; 470  : 		}
; 471  : 	}
; 472  : }

  00526	c3		 ret	 0
?idPasswordProc@@YAXXZ ENDP				; idPasswordProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2247 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2153 :         return __stdio_common_vsscanf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00016	ff 70 04	 push	 DWORD PTR [eax+4]
  00019	ff 30		 push	 DWORD PTR [eax]
  0001b	e8 00 00 00 00	 call	 ___stdio_common_vsscanf
  00020	83 c4 1c	 add	 esp, 28			; 0000001cH

; 2248 :         int _Result;
; 2249 :         va_list _ArgList;
; 2250 :         __crt_va_start(_ArgList, _Format);
; 2251 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);
; 2252 :         __crt_va_end(_ArgList);
; 2253 :         return _Result;
; 2254 :     }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 101  :         static unsigned __int64 _OptionsStorage;
; 102  :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@4_KA ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 103  :     }

  00005	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
