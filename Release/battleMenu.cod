; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\battleMenu.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?AI@@3HA					; AI
PUBLIC	?PauseAI@@3KA					; PauseAI
PUBLIC	?BattleCmd@@3PADA				; BattleCmd
PUBLIC	?BattleCmdBak@@3PAY0BAAA@DA			; BattleCmdBak
PUBLIC	?BattleCmdReadPointer@@3HA			; BattleCmdReadPointer
PUBLIC	?BattleCmdWritePointer@@3HA			; BattleCmdWritePointer
PUBLIC	?BattleStatus@@3PADA				; BattleStatus
PUBLIC	?BattleStatusBak@@3PAY0BAAA@DA			; BattleStatusBak
PUBLIC	?BattleStatusReadPointer@@3HA			; BattleStatusReadPointer
PUBLIC	?BattleStatusWritePointer@@3HA			; BattleStatusWritePointer
PUBLIC	?battleMenuFlag2@@3HA				; battleMenuFlag2
PUBLIC	?BattleMyNo@@3HA				; BattleMyNo
PUBLIC	?BattleMyMp@@3HA				; BattleMyMp
PUBLIC	?BattleEscFlag@@3HA				; BattleEscFlag
PUBLIC	?BattlePetStMenCnt@@3HA				; BattlePetStMenCnt
PUBLIC	?battlePetNoBak@@3HA				; battlePetNoBak
PUBLIC	?battlePetNoBak2@@3HA				; battlePetNoBak2
PUBLIC	?BattleBpFlag@@3HA				; BattleBpFlag
PUBLIC	?BattleAnimFlag@@3HA				; BattleAnimFlag
PUBLIC	?BattleTurnReceiveFlag@@3HA			; BattleTurnReceiveFlag
PUBLIC	?BattleCliTurnNo@@3HA				; BattleCliTurnNo
PUBLIC	?BattleSvTurnNo@@3HA				; BattleSvTurnNo
PUBLIC	?BattleResultWndFlag@@3HA			; BattleResultWndFlag
PUBLIC	?BattleCmdNo@@3HA				; BattleCmdNo
PUBLIC	?BattleJujutuNo@@3HA				; BattleJujutuNo
PUBLIC	?BattleWazaNo@@3HA				; BattleWazaNo
PUBLIC	?BattleItemNo@@3HA				; BattleItemNo
PUBLIC	?battlePlayerEscFlag@@3HA			; battlePlayerEscFlag
PUBLIC	?BattleCntDown@@3KA				; BattleCntDown
PUBLIC	?BattleIntervalCnt@@3KA				; BattleIntervalCnt
PUBLIC	?BattleCntDownFlag@@3HA				; BattleCntDownFlag
PUBLIC	?battleMenuFlag@@3HA				; battleMenuFlag
PUBLIC	?battlePetButtonFlag@@3HA			; battlePetButtonFlag
PUBLIC	?battleButtonBak@@3HA				; battleButtonBak
PUBLIC	?battleWazaTargetBak@@3HA			; battleWazaTargetBak
PUBLIC	?wonflag@@3HA					; wonflag
PUBLIC	?prouseskill@@3HA				; prouseskill
PUBLIC	?SkillWnd2@@3HA					; SkillWnd2
_BSS	SEGMENT
?AI@@3HA DD	01H DUP (?)				; AI
?PauseAI@@3KA DD 01H DUP (?)				; PauseAI
?BattleCmd@@3PADA DB 01000H DUP (?)			; BattleCmd
?BattleCmdBak@@3PAY0BAAA@DA DB 04020H DUP (?)		; BattleCmdBak
?BattleCmdReadPointer@@3HA DD 01H DUP (?)		; BattleCmdReadPointer
?BattleCmdWritePointer@@3HA DD 01H DUP (?)		; BattleCmdWritePointer
?BattleStatus@@3PADA DB 01000H DUP (?)			; BattleStatus
?BattleStatusBak@@3PAY0BAAA@DA DB 04020H DUP (?)	; BattleStatusBak
?BattleStatusReadPointer@@3HA DD 01H DUP (?)		; BattleStatusReadPointer
?BattleStatusWritePointer@@3HA DD 01H DUP (?)		; BattleStatusWritePointer
?battleMenuFlag2@@3HA DD 01H DUP (?)			; battleMenuFlag2
?BattleMyNo@@3HA DD 01H DUP (?)				; BattleMyNo
?BattleMyMp@@3HA DD 01H DUP (?)				; BattleMyMp
?BattleEscFlag@@3HA DD 01H DUP (?)			; BattleEscFlag
?BattlePetStMenCnt@@3HA DD 01H DUP (?)			; BattlePetStMenCnt
?BattleBpFlag@@3HA DD 01H DUP (?)			; BattleBpFlag
?BattleAnimFlag@@3HA DD 01H DUP (?)			; BattleAnimFlag
?BattleTurnReceiveFlag@@3HA DD 01H DUP (?)		; BattleTurnReceiveFlag
?BattleCliTurnNo@@3HA DD 01H DUP (?)			; BattleCliTurnNo
?BattleSvTurnNo@@3HA DD 01H DUP (?)			; BattleSvTurnNo
?BattleResultWndFlag@@3HA DD 01H DUP (?)		; BattleResultWndFlag
?BattleJujutuNo@@3HA DD 01H DUP (?)			; BattleJujutuNo
?BattleWazaNo@@3HA DD 01H DUP (?)			; BattleWazaNo
?BattleItemNo@@3HA DD 01H DUP (?)			; BattleItemNo
?battlePlayerEscFlag@@3HA DD 01H DUP (?)		; battlePlayerEscFlag
?BattleCntDown@@3KA DD 01H DUP (?)			; BattleCntDown
?BattleIntervalCnt@@3KA DD 01H DUP (?)			; BattleIntervalCnt
?BattleCntDownFlag@@3HA DD 01H DUP (?)			; BattleCntDownFlag
?battleMenuFlag@@3HA DD 01H DUP (?)			; battleMenuFlag
?battlePetButtonFlag@@3HA DD 01H DUP (?)		; battlePetButtonFlag
?wonflag@@3HA DD 01H DUP (?)				; wonflag
?SkillWnd2@@3HA DD 01H DUP (?)				; SkillWnd2
_BSS	ENDS
_DATA	SEGMENT
?battlePetNoBak@@3HA DD 0fffffffeH			; battlePetNoBak
?battlePetNoBak2@@3HA DD 0fffffffeH			; battlePetNoBak2
?BattleCmdNo@@3HA DD 0ffffffffH				; BattleCmdNo
?battleButtonBak@@3HA DD 0ffffffffH			; battleButtonBak
?battleWazaTargetBak@@3HA DD 0ffffffffH			; battleWazaTargetBak
?prouseskill@@3HA DD 0ffffffffH				; prouseskill
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?BattleMenuProc@@YAXXZ				; BattleMenuProc
PUBLIC	?ClearBattleButton@@YAXXZ			; ClearBattleButton
PUBLIC	?InitBattleMenu@@YAXXZ				; InitBattleMenu
PUBLIC	?CheckBattleAnimFlag@@YAXXZ			; CheckBattleAnimFlag
PUBLIC	?CheckBattle1P2P@@YAHXZ				; CheckBattle1P2P
PUBLIC	?HpMeterDisp@@YAXH@Z				; HpMeterDisp
PUBLIC	?BattleNameDisp@@YAXXZ				; BattleNameDisp
PUBLIC	?BattleSetWazaHitBox@@YAXHH@Z			; BattleSetWazaHitBox
PUBLIC	?InitBattleAnimFlag@@YAXXZ			; InitBattleAnimFlag
PUBLIC	?CheckPetSuu@@YAHXZ				; CheckPetSuu
PUBLIC	?ClearBoxFlag@@YAXXZ				; ClearBoxFlag
PUBLIC	?CheckBattelTarget@@YAHXZ			; CheckBattelTarget
PUBLIC	?BattleButtonOff@@YAXXZ				; BattleButtonOff
PUBLIC	?InitItem2@@YAXHH@Z				; InitItem2
PUBLIC	??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ		; sprintf_s<256>
PUBLIC	?BattleButtonAttack@@YAXXZ			; BattleButtonAttack
PUBLIC	?BattleButtonJujutsu@@YAXXZ			; BattleButtonJujutsu
PUBLIC	?BattleButtonCapture@@YAXXZ			; BattleButtonCapture
PUBLIC	?BattleButtonHelp@@YAXXZ			; BattleButtonHelp
PUBLIC	?BattleButtonGuard@@YAXXZ			; BattleButtonGuard
PUBLIC	?BattleButtonItem@@YAXXZ			; BattleButtonItem
PUBLIC	?BattleButtonPet@@YAXXZ				; BattleButtonPet
PUBLIC	?BattleButtonPPLSKILL@@YAXXZ			; BattleButtonPPLSKILL
PUBLIC	?BattleButtonEscape@@YAXXZ			; BattleButtonEscape
PUBLIC	?BattleButtonWaza@@YAXXZ			; BattleButtonWaza
PUBLIC	?BattleTargetSelect@@YAXXZ			; BattleTargetSelect
PUBLIC	?GetBattelTarget@@YAHXZ				; GetBattelTarget
PUBLIC	?BattleCntDownDisp@@YAXXZ			; BattleCntDownDisp
PUBLIC	?CloseInfoWnd@@YAXXZ				; CloseInfoWnd
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_08JCHLGOEH@?$CFs?5Lv?3?$CFd@		; `string'
PUBLIC	??_C@_08NJBMJDFM@HP?3?$CFd?1?$CFd@		; `string'
PUBLIC	??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0BC@GBLBFMBP@?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@ ; `string'
PUBLIC	??_C@_07HFNBMNBH@?$CF2d?1?$CF2d@		; `string'
PUBLIC	??_C@_0BA@BODGMCMN@?A?V?$LM?z?$MA?L?5?$LO?x?$LN?$MA?$LE?O?$LE?Y@ ; `string'
PUBLIC	??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@ ; `string'
PUBLIC	??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@	; `string'
PUBLIC	??_C@_06EBHMOCNH@HELP?$KB?$KD@			; `string'
PUBLIC	??_C@_01BBODEMC@G@				; `string'
PUBLIC	??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@		; `string'
PUBLIC	??_C@_08CJOHOOE@?$LO?F?$MA?L?E?$NL?$KB?$KD@	; `string'
PUBLIC	??_C@_0CA@ELBOPCEK@?$MA?$PM?E?u?5?A?$NP?5?$LO?V?$LP?O?$LF?$LP?$LJ?$LA?5?$MA?e?$LK?q?5?$LB?$LD?C?$LM?5?$LK?R?$LA?$KB@ ; `string'
PUBLIC	??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@ ; `string'
PUBLIC	??_C@_04FIJAIIHF@S?$HM?$CFd@			; `string'
PUBLIC	??_C@_04JBEPHANM@S?$HM?91@			; `string'
PUBLIC	??_C@_06ELKFHEJ@?C?f?3?$CF3d@			; `string'
PUBLIC	??_C@_0BH@KGEJIJPJ@?$CF?93d?5?5?5?5?5?5?5?5?5?$CF5d?5?5?5?$CF5d@ ; `string'
PUBLIC	??_C@_0BF@FCDGFJJJ@?G?C?$LH?$LJ?$MA?L?$LO?n?$LA?$KB?5?$LO?x?$LE?B?5?F?d?F?$KO@ ; `string'
PUBLIC	??_C@_08LCIHGOIJ@?A?w?$LO?w?$LB?b?$LE?I@	; `string'
PUBLIC	??_C@_03GHDNOBPC@?$CF8s@			; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@		; `string'
PUBLIC	??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@ ; `string'
PUBLIC	??_C@_01DDCIFGEA@E@				; `string'
PUBLIC	??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@		; `string'
PUBLIC	??_C@_07NGDMDFPD@P?$HM?$CFX?$HM?$CFX@		; `string'
PUBLIC	??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@		; `string'
PUBLIC	??_C@_0BC@EMOKBAPI@?$LB?b?$LE?I?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@ ; `string'
PUBLIC	??_C@_07BDJJCCFL@W?$HMFF?$HMFF@			; `string'
PUBLIC	??_C@_0N@DBNACIMP@?5?5?5?5?5?5?5?$CF?922s@	; `string'
PUBLIC	??_C@_0BF@NNNOOJBA@?$LI?q?G?$KF?$LI?$KG?5?$LM?$LB?E?C?5?G?X?A?V?$LM?$LM?$LP?d@ ; `string'
PUBLIC	??_C@_04DMFDFHBJ@H?$HM?$CFX@			; `string'
PUBLIC	??_C@_04JJEDCNJK@T?$HM?$CFX@			; `string'
PUBLIC	??_C@_07DLEHBIBA@J?$HM?$CFX?$HM?$CFX@		; `string'
PUBLIC	??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@		; `string'
PUBLIC	??_C@_01NANMIPIL@N@				; `string'
PUBLIC	??_C@_03GPCJOALC@?$CF2d@			; `string'
PUBLIC	??_C@_05FNFPHGDP@?$CF?924s@			; `string'
PUBLIC	__real@c044000000000000
PUBLIC	__xmm@fffffffefffffffefffffffefffffffe
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	_strncpy:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	___stdio_common_vsprintf_s:PROC
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockBoxDispBuffer@@YAXHHHHEHH@Z:PROC		; StockBoxDispBuffer
EXTRN	?StockChatBufferLine@@YAXPADEH@Z:PROC		; StockChatBufferLine
EXTRN	?GetStrLastByte@@YAHPAD@Z:PROC			; GetStrLastByte
EXTRN	?GetStrWidth@@YAHPAD@Z:PROC			; GetStrWidth
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?lssproto_B_send@@YAXHPAD@Z:PROC		; lssproto_B_send
EXTRN	?lssproto_ID_send@@YAXHHHHH@Z:PROC		; lssproto_ID_send
EXTRN	?lssproto_HL_send@@YAXHH@Z:PROC			; lssproto_HL_send
EXTRN	?old_lssproto_B_send@@YAXHPAD@Z:PROC		; old_lssproto_B_send
EXTRN	?old_lssproto_ID_send@@YAXHHHHH@Z:PROC		; old_lssproto_ID_send
EXTRN	?old_lssproto_HL_send@@YAXHH@Z:PROC		; old_lssproto_HL_send
EXTRN	?play_se@@YAHHHH@Z:PROC				; play_se
EXTRN	?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z:PROC	; MakeWindowDisp
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?DISPLACEMENT_X@@3HA:DWORD			; DISPLACEMENT_X
EXTRN	?DISPLACEMENT_Y@@3HA:DWORD			; DISPLACEMENT_Y
EXTRN	?SubProcNo@@3IA:DWORD				; SubProcNo
EXTRN	?p_party@@3PAPAUaction@@A:BYTE			; p_party
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitFontNo@@3HA:DWORD				; HitFontNo
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?OneLineInfoStr@@3PADA:BYTE			; OneLineInfoStr
EXTRN	?bNewServer@@3HA:DWORD				; bNewServer
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?helpFlag@@3FA:WORD				; helpFlag
EXTRN	?magic@@3PAUMAGIC@@A:BYTE			; magic
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
EXTRN	?petSkill@@3PAY06UPET_SKILL@@A:BYTE		; petSkill
EXTRN	?profession_skill@@3PAUPROFESSION_SKILL@@A:BYTE	; profession_skill
EXTRN	?CG_BATTTLE_SKILLCHOICE@@3HA:DWORD		; CG_BATTTLE_SKILLCHOICE
EXTRN	?CG_BTL_PET_CHANGE_WND@@3HA:DWORD		; CG_BTL_PET_CHANGE_WND
EXTRN	?CG_ITEM_WND_1@@3HA:DWORD			; CG_ITEM_WND_1
EXTRN	?CG_JUJUTU_WND@@3HA:DWORD			; CG_JUJUTU_WND
EXTRN	?CG_PET_WAZA_WND@@3HA:DWORD			; CG_PET_WAZA_WND
EXTRN	?NoHelpFlag@@3HA:DWORD				; NoHelpFlag
EXTRN	?NoEscFlag@@3HA:DWORD				; NoEscFlag
EXTRN	?NoCastFlag@@3HA:DWORD				; NoCastFlag
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?ItemBuffer@@3PAUITEM_BUFFER@@A:BYTE		; ItemBuffer
EXTRN	?nowFloor@@3HA:DWORD				; nowFloor
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?menuBtn@@3FA:WORD				; menuBtn
EXTRN	?nameOverTheHeadFlag@@3FA:WORD			; nameOverTheHeadFlag
EXTRN	?AI_First@@3HA:DWORD				; AI_First
EXTRN	?BattleSkill@@3PAHA:BYTE			; BattleSkill
EXTRN	?AssitSkill@@3PAHA:BYTE				; AssitSkill
EXTRN	?AdvanceSkill@@3PAHA:BYTE			; AdvanceSkill
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?battleButtonFlag@@3PAHA DD 0aH DUP (?)			; battleButtonFlag
?battleButtonDispNo@@3PAHA DD 0aH DUP (?)		; battleButtonDispNo
?battleMenuJujutsuFontNo@@3PAHA DD 06H DUP (?)		; battleMenuJujutsuFontNo
?battleMenuItemFontNo@@3PAHA DD 06H DUP (?)		; battleMenuItemFontNo
?battleMenuPetFontNo@@3PAHA DD 07H DUP (?)		; battleMenuPetFontNo
?battleMenuWazaFontNo@@3PAHA DD 09H DUP (?)		; battleMenuWazaFontNo
?battleMenuReturn@@3HA DD 01H DUP (?)			; battleMenuReturn
?battlePetMenuFlag@@3HA DD 01H DUP (?)			; battlePetMenuFlag
?battleTimeUpFlag@@3HA DD 01H DUP (?)			; battleTimeUpFlag
?battleTargetSelectFlag@@3HA DD 01H DUP (?)		; battleTargetSelectFlag
?pActInfoWnd@@3PAUaction@@A DD 01H DUP (?)		; pActInfoWnd
?pActWnd@@3PAUaction@@A DD 01H DUP (?)			; pActWnd
?buttonX@@3HA DD 01H DUP (?)				; buttonX
?buttonY@@3HA DD 01H DUP (?)				; buttonY
?buttonA@@3HA DD 01H DUP (?)				; buttonA
?AdvanceSkillBtn@@3PAHA DD 01aH DUP (?)			; AdvanceSkillBtn
?AssitSkillBtn@@3PAHA DD 01aH DUP (?)			; AssitSkillBtn
?BattleSkillBtn@@3PAHA DD 01aH DUP (?)			; BattleSkillBtn
_BSS	ENDS
;	COMDAT __xmm@fffffffefffffffefffffffefffffffe
CONST	SEGMENT
__xmm@fffffffefffffffefffffffefffffffe DB 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH
	DB	0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __real@c044000000000000
CONST	SEGMENT
__real@c044000000000000 DQ 0c044000000000000r	; -40
CONST	ENDS
;	COMDAT ??_C@_05FNFPHGDP@?$CF?924s@
CONST	SEGMENT
??_C@_05FNFPHGDP@?$CF?924s@ DB '%-24s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GPCJOALC@?$CF2d@
CONST	SEGMENT
??_C@_03GPCJOALC@?$CF2d@ DB '%2d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NANMIPIL@N@
CONST	SEGMENT
??_C@_01NANMIPIL@N@ DB 'N', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@
CONST	SEGMENT
??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@ DB 'I|%X|%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLEHBIBA@J?$HM?$CFX?$HM?$CFX@
CONST	SEGMENT
??_C@_07DLEHBIBA@J?$HM?$CFX?$HM?$CFX@ DB 'J|%X|%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04JJEDCNJK@T?$HM?$CFX@
CONST	SEGMENT
??_C@_04JJEDCNJK@T?$HM?$CFX@ DB 'T|%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04DMFDFHBJ@H?$HM?$CFX@
CONST	SEGMENT
??_C@_04DMFDFHBJ@H?$HM?$CFX@ DB 'H|%X', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NNNOOJBA@?$LI?q?G?$KF?$LI?$KG?5?$LM?$LB?E?C?5?G?X?A?V?$LM?$LM?$LP?d@
CONST	SEGMENT
??_C@_0BF@NNNOOJBA@?$LI?q?G?$KF?$LI?$KG?5?$LM?$LB?E?C?5?G?X?A?V?$LM?$LM?$LP?d@ DB 0b8H
	DB	0f1H, 0c7H, 0a5H, 0b8H, 0a6H, ' ', 0bcH, 0b1H, 0c5H, 0c3H, ' ', 0c7H
	DB	0d8H, 0c1H, 0d6H, 0bcH, 0bcH, 0bfH, 0e4H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DBNACIMP@?5?5?5?5?5?5?5?$CF?922s@
CONST	SEGMENT
??_C@_0N@DBNACIMP@?5?5?5?5?5?5?5?$CF?922s@ DB '       %-22s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07BDJJCCFL@W?$HMFF?$HMFF@
CONST	SEGMENT
??_C@_07BDJJCCFL@W?$HMFF?$HMFF@ DB 'W|FF|FF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EMOKBAPI@?$LB?b?$LE?I?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BC@EMOKBAPI@?$LB?b?$LE?I?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@ DB 0b1H
	DB	0e2H, 0b4H, 0c9H, 0c0H, 0bbH, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c7H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
CONST	SEGMENT
??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@ DB 'W|%X|%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07NGDMDFPD@P?$HM?$CFX?$HM?$CFX@
CONST	SEGMENT
??_C@_07NGDMDFPD@P?$HM?$CFX?$HM?$CFX@ DB 'P|%X|%X', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@
CONST	SEGMENT
??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@ DB 0c5H, 0bbH, 0c3H, 0e2H, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01DDCIFGEA@E@
CONST	SEGMENT
??_C@_01DDCIFGEA@E@ DB 'E', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@
CONST	SEGMENT
??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@ DB '(', 0bcH, 0d2H
	DB	0baH, 0f1H, 0c7H, 0cfH, 0b4H, 0d9H, 'MP:%d)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@
CONST	SEGMENT
??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@ DB '  %d', 0a3H, 0a5H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GHDNOBPC@?$CF8s@
CONST	SEGMENT
??_C@_03GHDNOBPC@?$CF8s@ DB '%8s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LCIHGOIJ@?A?w?$LO?w?$LB?b?$LE?I@
CONST	SEGMENT
??_C@_08LCIHGOIJ@?A?w?$LO?w?$LB?b?$LE?I@ DB 0c1H, 0f7H, 0beH, 0f7H, 0b1H, 0e2H
	DB	0b4H, 0c9H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FCDGFJJJ@?G?C?$LH?$LJ?$MA?L?$LO?n?$LA?$KB?5?$LO?x?$LE?B?5?F?d?F?$KO@
CONST	SEGMENT
??_C@_0BF@FCDGFJJJ@?G?C?$LH?$LJ?$MA?L?$LO?n?$LA?$KB?5?$LO?x?$LE?B?5?F?d?F?$KO@ DB 0c7H
	DB	0c3H, 0b7H, 0b9H, 0c0H, 0ccH, 0beH, 0eeH, 0b0H, 0a1H, ' ', 0beH
	DB	0f8H, 0b4H, 0c2H, ' ', 0c6H, 0e4H, 0c6H, 0aeH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KGEJIJPJ@?$CF?93d?5?5?5?5?5?5?5?5?5?$CF5d?5?5?5?$CF5d@
CONST	SEGMENT
??_C@_0BH@KGEJIJPJ@?$CF?93d?5?5?5?5?5?5?5?5?5?$CF5d?5?5?5?$CF5d@ DB '%-3d'
	DB	'         %5d   %5d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06ELKFHEJ@?C?f?3?$CF3d@
CONST	SEGMENT
??_C@_06ELKFHEJ@?C?f?3?$CF3d@ DB 0c3H, 0e6H, ':%3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04JBEPHANM@S?$HM?91@
CONST	SEGMENT
??_C@_04JBEPHANM@S?$HM?91@ DB 'S|-1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FIJAIIHF@S?$HM?$CFd@
CONST	SEGMENT
??_C@_04FIJAIIHF@S?$HM?$CFd@ DB 'S|%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@
CONST	SEGMENT
??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@ DB 0c6H, 0e4H, 0c6H, 0aeH
	DB	0b1H, 0b3H, 0c3H, 0bcH, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@ELBOPCEK@?$MA?$PM?E?u?5?A?$NP?5?$LO?V?$LP?O?$LF?$LP?$LJ?$LA?5?$MA?e?$LK?q?5?$LB?$LD?C?$LM?5?$LK?R?$LA?$KB@
CONST	SEGMENT
??_C@_0CA@ELBOPCEK@?$MA?$PM?E?u?5?A?$NP?5?$LO?V?$LP?O?$LF?$LP?$LJ?$LA?5?$MA?e?$LK?q?5?$LB?$LD?C?$LM?5?$LK?R?$LA?$KB@ DB 0c0H
	DB	0fcH, 0c5H, 0f5H, ' ', 0c1H, 0dfH, ' ', 0beH, 0d6H, 0bfH, 0cfH
	DB	0b5H, 0bfH, 0b9H, 0b0H, ' ', 0c0H, 0e5H, 0baH, 0f1H, ' ', 0b1H
	DB	0b3H, 0c3H, 0bcH, ' ', 0baH, 0d2H, 0b0H, 0a1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CJOHOOE@?$LO?F?$MA?L?E?$NL?$KB?$KD@
CONST	SEGMENT
??_C@_08CJOHOOE@?$LO?F?$MA?L?E?$NL?$KB?$KD@ DB 0beH, 0c6H, 0c0H, 0ccH, 0c5H
	DB	0dbH, 0a1H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@
CONST	SEGMENT
??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@ DB 0b9H, 0e6H, 0beH, 0eeH, 0a1H, 0a3H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_01BBODEMC@G@
CONST	SEGMENT
??_C@_01BBODEMC@G@ DB 'G', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06EBHMOCNH@HELP?$KB?$KD@
CONST	SEGMENT
??_C@_06EBHMOCNH@HELP?$KB?$KD@ DB 'HELP', 0a1H, 0a3H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@ DB 0c6H, 0f7H, 0c8H, 0b9H
	DB	0c7H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@
CONST	SEGMENT
??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@ DB 0c6H
	DB	0e4H, 0c6H, 0aeH, 0c3H, 0a2H, 0c0H, 0ccH, ' ', 0b2H, 0cbH, ' ', 0c2H
	DB	0f7H, 0bcH, 0adH, ' ', 0b4H, 0f5H, 0c0H, 0ccH, 0bbH, 0f3H, ' ', 0c6H
	DB	0f7H, 0c8H, 0b9H, 0c7H, 0d2H, 0bcH, 0f6H, ' ', 0beH, 0f8H, 0beH
	DB	0eeH, 0bfH, 0e4H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BODGMCMN@?A?V?$LM?z?$MA?L?5?$LO?x?$LN?$MA?$LE?O?$LE?Y@
CONST	SEGMENT
??_C@_0BA@BODGMCMN@?A?V?$LM?z?$MA?L?5?$LO?x?$LN?$MA?$LE?O?$LE?Y@ DB 0c1H, 0d6H
	DB	0bcH, 0faH, 0c0H, 0ccH, ' ', 0beH, 0f8H, 0bdH, 0c0H, 0b4H, 0cfH
	DB	0b4H, 0d9H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d@
CONST	SEGMENT
??_C@_07HFNBMNBH@?$CF2d?1?$CF2d@ DB '%2d/%2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@
CONST	SEGMENT
??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@ DB 0c4H
	DB	0a7H, 0b9H, 0acH, 0bbH, 0f3H, 0c5H, 0c2H, 0bfH, 0a1H, 0bcH, 0adH
	DB	0b4H, 0c2H, ' ', 0c1H, 0d6H, 0bcH, 0faH, 0c0H, 0bbH, ' ', 0bbH
	DB	0e7H, 0bfH, 0ebH, 0c7H, 0d2H, 0bcH, 0f6H, 0beH, 0f8H, 0bdH, 0c0H
	DB	0b4H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GBLBFMBP@?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0BC@GBLBFMBP@?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@ DB 0c1H
	DB	0d6H, 0bcH, 0faH, 0c0H, 0bbH, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 0c7H
	DB	0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@
CONST	SEGMENT
??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@ DB 0b0H, 0f8H, 0b0H, 0ddH
	DB	0c7H, 0cfH, 0b4H, 0d9H, 0a1H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJBMJDFM@HP?3?$CFd?1?$CFd@
CONST	SEGMENT
??_C@_08NJBMJDFM@HP?3?$CFd?1?$CFd@ DB 'HP:%d/%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JCHLGOEH@?$CFs?5Lv?3?$CFd@
CONST	SEGMENT
??_C@_08JCHLGOEH@?$CFs?5Lv?3?$CFd@ DB '%s Lv:%d', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
?battleButtonBak2@@3HA DD 0ffffffffH			; battleButtonBak2
	ORG $+4
?Ordinal@@3PAHA DD 013H					; Ordinal
	DD	011H
	DD	0fH
	DD	010H
	DD	012H
	DD	0eH
	DD	0cH
	DD	0aH
	DD	0bH
	DD	0dH
	DD	09H
	DD	07H
	DD	05H
	DD	06H
	DD	08H
	DD	04H
	DD	02H
	DD	00H
	DD	01H
	DD	03H
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?CloseInfoWnd@@YAXXZ
_TEXT	SEGMENT
?CloseInfoWnd@@YAXXZ PROC				; CloseInfoWnd, COMDAT

; 3789 : 	if( pActInfoWnd){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  00005	85 c0		 test	 eax, eax
  00007	74 13		 je	 SHORT $LN2@CloseInfoW

; 3790 : 		DeathAction( pActInfoWnd);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0000f	83 c4 04	 add	 esp, 4

; 3791 : 		pActInfoWnd = NULL;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, 0
$LN2@CloseInfoW:

; 3792 : 	}
; 3793 : }

  0001c	c3		 ret	 0
?CloseInfoWnd@@YAXXZ ENDP				; CloseInfoWnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleCntDownDisp@@YAXXZ
_TEXT	SEGMENT
_y$1$ = -24						; size = 4
_moji$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
?BattleCntDownDisp@@YAXXZ PROC				; BattleCntDownDisp, COMDAT

; 3248 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3249 : 	char moji[ 16 ];
; 3250 : 	char *work = moji;
; 3251 : 	int x = 320 - 16 + DISPLACEMENT_X / 2;

  00010	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00015	99		 cdq
  00016	2b c2		 sub	 eax, edx
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	8b f0		 mov	 esi, eax

; 3252 : 	int y = 240 + DISPLACEMENT_Y / 2;

  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00021	99		 cdq
  00022	2b c2		 sub	 eax, edx
  00024	d1 fe		 sar	 esi, 1
  00026	d1 f8		 sar	 eax, 1
  00028	81 c6 30 01 00
	00		 add	 esi, 304		; 00000130H
  0002e	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  00033	57		 push	 edi
  00034	8d 7d ec	 lea	 edi, DWORD PTR _moji$[ebp]
  00037	89 45 e8	 mov	 DWORD PTR _y$1$[ebp], eax

; 3253 : 	int i;
; 3254 : 	// ???
; 3255 : 
; 3256 : 	int BattleCntDownRest = BattleCntDown - TimeGetTime();

  0003a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0003f	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?BattleCntDown@@3KA ; BattleCntDown
  00045	2b d8		 sub	 ebx, eax

; 3257 : 	// ???????
; 3258 : 	if( BattleCntDownFlag == FALSE ) return;

  00047	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?BattleCntDownFlag@@3HA, 0 ; BattleCntDownFlag
  0004e	0f 84 46 01 00
	00		 je	 $LN3@BattleCntD

; 3259 : 
; 3260 : 	// ?????????
; 3261 : /*//人物ai
; 3262 : #ifndef __AI
; 3263 : 	//cary 自动战斗
; 3264 : 	if( AI!=AI_NONE && !PauseAI){
; 3265 : 		if( battleMenuFlag&BATTLE_MENU && battleTargetSelectFlag){
; 3266 : 			if( (BattleIntervalCnt==0 && BattleCntDownRest<=28000) || (BattleIntervalCnt!=0 && BattleIntervalCnt<TimeGetTime())){
; 3267 : 				BattleIntervalCnt = TimeGetTime()+500;
; 3268 : 				// ??????
; 3269 : 				int targetNo = GetBattelTarget();
; 3270 : 				char moji[256];
; 3271 : 				sprintf( moji, "H|%X", targetNo );
; 3272 : 				// ??
; 3273 : 				if( bNewServer)
; 3274 : 					lssproto_B_send( sockfd, moji );
; 3275 : 				else
; 3276 : 					old_lssproto_B_send( sockfd, moji );
; 3277 : 				battleTargetSelectFlag = FALSE;
; 3278 : 				battleMenuReturn = TRUE;
; 3279 : 				// ????????
; 3280 : 				play_se( 203, 320, 240 );
; 3281 : 				// ????????
; 3282 : 				battleButtonBak = battleButtonBak2;
; 3283 : 				// ???????????????
; 3284 : 				if( pActInfoWnd){
; 3285 : 					DeathAction( pActInfoWnd );
; 3286 : 					pActInfoWnd = NULL;
; 3287 : 				}
; 3288 : 			}
; 3289 : 		}else if( battleMenuFlag&BATTLE_MENU_PET && battleTargetSelectFlag){
; 3290 : 			if( (BattleIntervalCnt==0 && BattleCntDownRest<=28000) || BattleIntervalCnt<TimeGetTime()){
; 3291 : 				int no;
; 3292 : 				int targetNo = GetBattelTarget();
; 3293 : 				char moji[256];
; 3294 : 				switch( petSkill[ battlePetNoBak ][ BattleWazaNo ].target ){
; 3295 : 				case PETSKILL_TARGET_MYSELF:				// ??
; 3296 : 				case PETSKILL_TARGET_OTHER:					// ????)
; 3297 : 				case PETSKILL_TARGET_OTHERWITHOUTMYSELF:	// ??????) 
; 3298 : 				case PETSKILL_TARGET_WITHOUTMYSELFANDPET:	// ??????
; 3299 : 					// ???
; 3300 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, targetNo );
; 3301 : 					// ??
; 3302 : 					if( bNewServer)
; 3303 : 						lssproto_B_send( sockfd, moji );
; 3304 : 					else
; 3305 : 						old_lssproto_B_send( sockfd, moji );
; 3306 : 					// ?????
; 3307 : 					play_se( 217, 320, 240 );
; 3308 : 					break;
; 3309 : 					
; 3310 : 				case PETSKILL_TARGET_ALLMYSIDE:	// 
; 3311 : 					// ????????
; 3312 : 					if( BattleMyNo < 10 ) no = 20;
; 3313 : 					else no = 21;
; 3314 : 					// ???
; 3315 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );
; 3316 : 					// ??
; 3317 : 					if( bNewServer)
; 3318 : 						lssproto_B_send( sockfd, moji );
; 3319 : 					else
; 3320 : 						old_lssproto_B_send( sockfd, moji );
; 3321 : 					// ?????
; 3322 : 					play_se( 217, 320, 240 );
; 3323 : 					break;
; 3324 : 					
; 3325 : 				case PETSKILL_TARGET_ALLOTHERSIDE:	// ?
; 3326 : 					// ????????
; 3327 : 					if( BattleMyNo < 10 ) no = 21;
; 3328 : 					else no = 20;
; 3329 : 					// ???
; 3330 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );
; 3331 : 					// ??
; 3332 : 					if( bNewServer)
; 3333 : 						lssproto_B_send( sockfd, moji );
; 3334 : 					else
; 3335 : 						old_lssproto_B_send( sockfd, moji );
; 3336 : 					// ?????
; 3337 : 					play_se( 217, 320, 240 );
; 3338 : 					break;
; 3339 : 					
; 3340 : 				case PETSKILL_TARGET_ALL:	// ?
; 3341 : 					// ???
; 3342 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, 22 );
; 3343 : 					// ??
; 3344 : 					if( bNewServer)
; 3345 : 						lssproto_B_send( sockfd, moji );
; 3346 : 					else
; 3347 : 						old_lssproto_B_send( sockfd, moji );
; 3348 : 					// ?????
; 3349 : 					play_se( 217, 320, 240 );
; 3350 : 					break;
; 3351 : 				}
; 3352 : 				// ??????
; 3353 : 				battleTargetSelectFlag = FALSE;
; 3354 : 				battleMenuReturn = TRUE;
; 3355 : 				// ????????
; 3356 : 				play_se( 203, 320, 240 );
; 3357 : 				// ????????
; 3358 : 				battleButtonBak = battleButtonBak2;
; 3359 : 				// ???????????????
; 3360 : 				if( pActInfoWnd){
; 3361 : 					DeathAction( pActInfoWnd );
; 3362 : 					pActInfoWnd = NULL;
; 3363 : 				}
; 3364 : 			}
; 3365 : 		}
; 3366 : 	}
; 3367 : #endif
; 3368 : */
; 3369 : 
; 3370 : 	if( BattleCntDownRest <= 0 ){

  00054	85 db		 test	 ebx, ebx
  00056	0f 8f ee 00 00
	00		 jg	 $LN6@BattleCntD

; 3371 : 		// ??????
; 3372 : 		BattleCntDownFlag = FALSE;

  0005c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleCntDownFlag@@3HA, 0 ; BattleCntDownFlag

; 3373 : 		BattleCntDownRest = 0;

  00066	33 db		 xor	 ebx, ebx

; 3374 : 		// ????????
; 3375 : 		ClearBoxFlag();

  00068	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 3376 : 		// ???????????
; 3377 : 		DeathAction( pActWnd );

  0006d	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  00073	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00078	83 c4 04	 add	 esp, 4

; 3378 : 		// ????????????
; 3379 : 		pActWnd = NULL;				

  0007b	89 1d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ebx

; 3380 : 		// ?????????
; 3381 : 		ClearBattleButton();

  00081	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 3382 : 		// ?????????????????
; 3383 : 
; 3384 : 		if( battleMenuFlag & BATTLE_MENU && battleMenuReturn == FALSE ){

  00086	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battleMenuFlag@@3HA ; battleMenuFlag
  0008c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleMenuReturn@@3HA
  00091	f6 c1 01	 test	 cl, 1
  00094	74 5f		 je	 SHORT $LN18@BattleCntD
  00096	85 c0		 test	 eax, eax
  00098	75 56		 jne	 SHORT $LN7@BattleCntD

; 3385 : 			// ???????????
; 3386 : 			if( bNewServer)

  0009a	68 00 00 00 00	 push	 OFFSET ??_C@_01NANMIPIL@N@
  0009f	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000a5	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?bNewServer@@3HA, ebx ; bNewServer
  000ab	74 07		 je	 SHORT $LN9@BattleCntD

; 3387 : 				lssproto_B_send( sockfd, "N" );

  000ad	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  000b2	eb 05		 jmp	 SHORT $LN30@BattleCntD
$LN9@BattleCntD:

; 3388 : 			else
; 3389 : 				old_lssproto_B_send( sockfd, "N" );

  000b4	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN30@BattleCntD:

; 3390 : 			// ?????????????????
; 3391 : 			if( battlePetNoBak == -1 || 

  000b9	83 c4 08	 add	 esp, 8
$LN17@BattleCntD:

; 3413 : 					else
; 3414 : 						old_lssproto_B_send( sockfd, "W|FF|FF" );
; 3415 : 				}
; 3416 : 			}
; 3417 : 		}
; 3418 : 		// ??????
; 3419 : 		battleTargetSelectFlag = FALSE;

  000bc	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?battlePetNoBak@@3HA, -1 ; battlePetNoBak
  000c3	74 43		 je	 SHORT $LN21@BattleCntD
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000ca	8b 04 85 14 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4+20]
  000d1	39 58 78	 cmp	 DWORD PTR [eax+120], ebx
  000d4	7e 32		 jle	 SHORT $LN21@BattleCntD
  000d6	68 00 00 00 00	 push	 OFFSET ??_C@_07BDJJCCFL@W?$HMFF?$HMFF@
  000db	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000e1	39 1d 00 00 00
	00		 cmp	 DWORD PTR ?bNewServer@@3HA, ebx ; bNewServer
  000e7	74 17		 je	 SHORT $LN14@BattleCntD
  000e9	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  000ee	eb 15		 jmp	 SHORT $LN31@BattleCntD
$LN7@BattleCntD:

; 3392 : 				p_party[ BattleMyNo + 5 ]->hp <= 0 ){
; 3393 : 				// ??????
; 3394 : 			}else{
; 3395 : 				// ??????????
; 3396 : 				if( bNewServer)
; 3397 : 					lssproto_B_send( sockfd, "W|FF|FF" );
; 3398 : 				else
; 3399 : 					old_lssproto_B_send( sockfd, "W|FF|FF" );
; 3400 : 			}
; 3401 : 		}else{
; 3402 : 			// ????????
; 3403 : 			if( ( battleMenuFlag & BATTLE_MENU && battleMenuReturn == TRUE ) ||

  000f0	83 f8 01	 cmp	 eax, 1
  000f3	74 c7		 je	 SHORT $LN17@BattleCntD
$LN18@BattleCntD:
  000f5	f6 c1 02	 test	 cl, 2
  000f8	74 0e		 je	 SHORT $LN21@BattleCntD
  000fa	85 c0		 test	 eax, eax
  000fc	75 0a		 jne	 SHORT $LN21@BattleCntD

; 3404 : 				( battleMenuFlag & BATTLE_MENU_PET && battleMenuReturn == FALSE ) ){ 
; 3405 : 				// ?????????????????
; 3406 : 				if( battlePetNoBak == -1 || 
; 3407 : 					p_party[ BattleMyNo + 5 ]->hp <= 0 ){
; 3408 : 					// ??????
; 3409 : 				}else{
; 3410 : 					// ??????????
; 3411 : 					if( bNewServer)
; 3412 : 						lssproto_B_send( sockfd, "W|FF|FF" );

  000fe	eb bc		 jmp	 SHORT $LN17@BattleCntD
$LN14@BattleCntD:

; 3413 : 					else
; 3414 : 						old_lssproto_B_send( sockfd, "W|FF|FF" );
; 3415 : 				}
; 3416 : 			}
; 3417 : 		}
; 3418 : 		// ??????
; 3419 : 		battleTargetSelectFlag = FALSE;

  00100	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN31@BattleCntD:
  00105	83 c4 08	 add	 esp, 8
$LN21@BattleCntD:

; 3420 : 		battleMenuReturn = TRUE;
; 3421 : 		// ????????
; 3422 : 		play_se( 203, 320, 240 );

  00108	68 f0 00 00 00	 push	 240			; 000000f0H
  0010d	68 40 01 00 00	 push	 320			; 00000140H
  00112	68 cb 00 00 00	 push	 203			; 000000cbH
  00117	89 1d 00 00 00
	00		 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, ebx
  0011d	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1
  00127	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 3423 : 		// ????????
; 3424 : 		battleButtonBak = battleButtonBak2;

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak2@@3HA

; 3425 : 		// ???????????????
; 3426 : 		DeathAction( pActInfoWnd );

  00131	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  00137	a3 00 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, eax ; battleButtonBak
  0013c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00141	83 c4 10	 add	 esp, 16			; 00000010H

; 3427 : 		pActInfoWnd = NULL;

  00144	89 1d 00 00 00
	00		 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, ebx
$LN6@BattleCntD:

; 3428 : 	}
; 3429 : 
; 3430 : 	sprintf( moji, "%2d", BattleCntDownRest / 1000 );

  0014a	b8 d3 4d 62 10	 mov	 eax, 274877907		; 10624dd3H
  0014f	f7 eb		 imul	 ebx
  00151	c1 fa 06	 sar	 edx, 6
  00154	8b c2		 mov	 eax, edx
  00156	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00159	03 c2		 add	 eax, edx
  0015b	50		 push	 eax
  0015c	8d 45 ec	 lea	 eax, DWORD PTR _moji$[ebp]
  0015f	68 00 00 00 00	 push	 OFFSET ??_C@_03GPCJOALC@?$CF2d@
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 _sprintf
  0016a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016d	bb 02 00 00 00	 mov	 ebx, 2
$LL4@BattleCntD:

; 3431 : 
; 3432 : 	//JL 2016.9.16 战斗时间3位数显示
; 3433 : //	for (i = 0; i < 3; i++){
; 3434 : 	for( i = 0; i < 2; i++){
; 3435 : 		if( *work != 0x20 ){

  00172	8a 07		 mov	 al, BYTE PTR [edi]
  00174	3c 20		 cmp	 al, 32			; 00000020H
  00176	74 19		 je	 SHORT $LN24@BattleCntD

; 3436 : 			StockDispBuffer( x, y, DISP_PRIO_IME1, *work - '0' + CG_CNT_DOWN_0, 0 );

  00178	6a 00		 push	 0
  0017a	0f be c0	 movsx	 eax, al
  0017d	05 fc 64 00 00	 add	 eax, 25852		; 000064fcH
  00182	50		 push	 eax
  00183	6a 66		 push	 102			; 00000066H
  00185	ff 75 e8	 push	 DWORD PTR _y$1$[ebp]
  00188	56		 push	 esi
  00189	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0018e	83 c4 14	 add	 esp, 20			; 00000014H
$LN24@BattleCntD:

; 3437 : 		}
; 3438 : 
; 3439 : 		x += 32;

  00191	83 c6 20	 add	 esi, 32			; 00000020H

; 3440 : 		work++;

  00194	47		 inc	 edi
  00195	83 eb 01	 sub	 ebx, 1
  00198	75 d8		 jne	 SHORT $LL4@BattleCntD
$LN3@BattleCntD:

; 3441 : 	}
; 3442 : 
; 3443 : }

  0019a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019d	5f		 pop	 edi
  0019e	5e		 pop	 esi
  0019f	33 cd		 xor	 ecx, ebp
  001a1	5b		 pop	 ebx
  001a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a7	8b e5		 mov	 esp, ebp
  001a9	5d		 pop	 ebp
  001aa	c3		 ret	 0
?BattleCntDownDisp@@YAXXZ ENDP				; BattleCntDownDisp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?GetBattelTarget@@YAHXZ
_TEXT	SEGMENT
?GetBattelTarget@@YAHXZ PROC				; GetBattelTarget, COMDAT

; 3182 : 	int i, index, end;
; 3183 : 	i = 10;

  00000	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  00005	56		 push	 esi

; 3184 : 	end = 20;
; 3185 : 	if( BattleMyNo < 10){

  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0000c	57		 push	 edi
  0000d	8d 79 0a	 lea	 edi, DWORD PTR [ecx+10]
  00010	3b f1		 cmp	 esi, ecx
  00012	7d 0c		 jge	 SHORT $LL20@GetBattelT

; 3186 : 		i = 0 ;

  00014	33 c9		 xor	 ecx, ecx

; 3187 : 		end = 10;

  00016	8d 79 0a	 lea	 edi, DWORD PTR [ecx+10]
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL20@GetBattelT:

; 3191 : 		index = Ordinal[i];

  00020	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?Ordinal@@3PAHA[ecx*4]

; 3192 : 		if( p_party[ index ]->func == NULL ) continue;

  00027	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[edx*4]
  0002e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00032	74 11		 je	 SHORT $LN2@GetBattelT

; 3193 : 		if( p_party[index]->hp<=0 || index==BattleMyNo || index==5+BattleMyNo)

  00034	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00038	7e 0b		 jle	 SHORT $LN2@GetBattelT
  0003a	3b d6		 cmp	 edx, esi
  0003c	74 07		 je	 SHORT $LN2@GetBattelT
  0003e	8d 46 05	 lea	 eax, DWORD PTR [esi+5]
  00041	3b d0		 cmp	 edx, eax
  00043	75 0b		 jne	 SHORT $LN7@GetBattelT
$LN2@GetBattelT:

; 3188 : 	}
; 3189 : #ifdef __AI
; 3190 : 	for( ; i < end ; i++ ){

  00045	41		 inc	 ecx
  00046	3b cf		 cmp	 ecx, edi
  00048	7c d6		 jl	 SHORT $LL20@GetBattelT

; 3196 : 	}
; 3197 : #else
; 3198 : 	for( ; i < end ; i++ ){
; 3199 : 		index = Ordinal[i];
; 3200 : 		if( p_party[ index ]->func == NULL ) continue;
; 3201 : 		if( index==BattleMyNo || index==5+BattleMyNo)
; 3202 : 			continue;
; 3203 : 
; 3204 : #ifdef __ATTACK_MAGIC
; 3205 : #ifdef _SKILL_ADDBARRIER
; 3206 : 		if( ( p_party[ index ]->atr & ACT_ATR_HIT_BOX ) ||
; 3207 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL1 ) ||
; 3208 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL2 ) ||
; 3209 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL3 ) ||
; 3210 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL4 ) ||
; 3211 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL1 ) ||
; 3212 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL2 ) ||
; 3213 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL3 )
; 3214 : 
; 3215 : 
; 3216 : 			 || ( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL5 ) ||
; 3217 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL6 ) ||
; 3218 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL7 ) || 
; 3219 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL8 ) 
; 3220 : 			)
; 3221 : 			return index;
; 3222 : #else
; 3223 : 		if( ( p_party[ index ]->atr & ACT_ATR_HIT_BOX ) ||
; 3224 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL1 ) ||
; 3225 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL2 ) ||
; 3226 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL3 ) ||
; 3227 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_COL4 ) ||
; 3228 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL1 ) ||
; 3229 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL2 ) ||
; 3230 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL3 ) )
; 3231 : 			return index;
; 3232 : #endif
; 3233 : #else
; 3234 : 		if( ( p_party[ index ]->atr & ACT_ATR_HIT_BOX ) ||
; 3235 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL1 ) ||
; 3236 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL2 ) ||
; 3237 : 			( p_party[ index ]->atr & ACT_ATR_HIT_BOX_ALL3 ) )
; 3238 : 			return index;
; 3239 : #endif
; 3240 : 
; 3241 : 	}
; 3242 : #endif
; 3243 : 	return -1;

  0004a	5f		 pop	 edi
  0004b	83 c8 ff	 or	 eax, -1

; 3244 : }

  0004e	5e		 pop	 esi
  0004f	c3		 ret	 0
$LN7@GetBattelT:
  00050	5f		 pop	 edi

; 3194 : 			continue;
; 3195 : 		return index;

  00051	8b c2		 mov	 eax, edx

; 3244 : }

  00053	5e		 pop	 esi
  00054	c3		 ret	 0
?GetBattelTarget@@YAHXZ ENDP				; GetBattelTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleTargetSelect@@YAXXZ
_TEXT	SEGMENT
_no$ = -264						; size = 4
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleTargetSelect@@YAXXZ PROC				; BattleTargetSelect, COMDAT

; 2783 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	f7 05 00 00 00
	00 00 00 00 86	 test	 DWORD PTR ?MenuToggleFlag@@3IA, -2046820352 ; MenuToggleFlag, 86000000H
  0001d	56		 push	 esi
  0001e	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _no$[ebp]

; 2784 : 	char moji[ 256 ];
; 2785 : 	int targetNo;
; 2786 : 	int no;
; 2787 : 
; 2788 : 	if( !( MenuToggleFlag & JOY_ESC ) && !( MenuToggleFlag & JOY_CTRL_E ) && !( MenuToggleFlag & JOY_CTRL_A ) && !( menuBtn == 1 ) ){

  00024	0f 85 a1 00 00
	00		 jne	 $LN12@BattleTarg
  0002a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00032	0f 84 93 00 00
	00		 je	 $LN12@BattleTarg

; 2789 : 
; 2790 : 		if( pActInfoWnd == NULL ){

  00038	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  0003e	85 c9		 test	 ecx, ecx
  00040	75 34		 jne	 SHORT $LN14@BattleTarg

; 2791 : 
; 2792 : 			if( mouse.nowPoint.y < 228 ){ 

  00042	81 3d 04 00 00
	00 e4 00 00 00	 cmp	 DWORD PTR ?mouse@@3UMOUSE@@A+4, 228 ; 000000e4H
  0004c	b9 90 01 00 00	 mov	 ecx, 400		; 00000190H

; 2793 : 				pActInfoWnd = MakeWindowDisp( 225, 400, 3, 2, 0, 1 );
; 2794 : 			}else{ 
; 2795 : 				pActInfoWnd = MakeWindowDisp( 225, 60, 3, 2, 0, 1 );
; 2796 : 			}
; 2797 : 		}else{	

  00051	6a 01		 push	 1
  00053	6a 00		 push	 0
  00055	6a 02		 push	 2
  00057	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  0005c	0f 4c c1	 cmovl	 eax, ecx
  0005f	6a 03		 push	 3
  00061	50		 push	 eax
  00062	68 e1 00 00 00	 push	 225			; 000000e1H
  00067	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  0006c	83 c4 18	 add	 esp, 24			; 00000018H
  0006f	a3 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, eax
  00074	eb 6d		 jmp	 SHORT $LN13@BattleTarg
$LN14@BattleTarg:

; 2798 : 
; 2799 : 			if( pActInfoWnd->hp > 0 ){

  00076	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0007a	7e 27		 jle	 SHORT $LN18@BattleTarg

; 2800 : 				StockFontBuffer( pActInfoWnd->x + 30, pActInfoWnd->y + 40, FONT_PRIO_FRONT, FONT_PAL_YELLOW, 	"목표를 선택 해주세요", 0 );

  0007c	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0007f	6a 00		 push	 0
  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NNNOOJBA@?$LI?q?G?$KF?$LI?$KG?5?$LM?$LB?E?C?5?G?X?A?V?$LM?$LM?$LP?d@
  00086	6a 04		 push	 4
  00088	83 c0 28	 add	 eax, 40			; 00000028H
  0008b	6a 01		 push	 1
  0008d	50		 push	 eax
  0008e	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00091	83 c0 1e	 add	 eax, 30			; 0000001eH
  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0009a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  000a0	83 c4 18	 add	 esp, 24			; 00000018H
$LN18@BattleTarg:

; 2801 : 			}
; 2802 : 
; 2803 : 			if( mouse.nowPoint.y > 300 ) pActInfoWnd->y = 60;

  000a3	a1 04 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+4
  000a8	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  000ad	7e 0c		 jle	 SHORT $LN19@BattleTarg
  000af	c7 41 1c 3c 00
	00 00		 mov	 DWORD PTR [ecx+28], 60	; 0000003cH
  000b6	a1 04 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+4
$LN19@BattleTarg:

; 2804 : 			if( mouse.nowPoint.y < 156 ) pActInfoWnd->y = 400;

  000bb	3d 9c 00 00 00	 cmp	 eax, 156		; 0000009cH
  000c0	7d 21		 jge	 SHORT $LN13@BattleTarg
  000c2	c7 41 1c 90 01
	00 00		 mov	 DWORD PTR [ecx+28], 400	; 00000190H

; 2805 : 		}
; 2806 : 	}else{

  000c9	eb 18		 jmp	 SHORT $LN13@BattleTarg
$LN12@BattleTarg:

; 2807 : 		DeathAction( pActInfoWnd );

  000cb	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  000d1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000d6	83 c4 04	 add	 esp, 4

; 2808 : 		pActInfoWnd = NULL;

  000d9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, 0
$LN13@BattleTarg:

; 2809 : 	}
; 2810 : 
; 2811 : 	//cary 自动攻击
; 2812 : 	if( mouse.onceState & MOUSE_LEFT_CRICK ){

  000e3	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  000ea	0f 84 d6 03 00
	00		 je	 $LN22@BattleTarg

; 2813 : 
; 2814 : 		if( ( targetNo = CheckBattelTarget() ) != -1 ){

  000f0	e8 00 00 00 00	 call	 ?CheckBattelTarget@@YAHXZ ; CheckBattelTarget
  000f5	8b d0		 mov	 edx, eax
  000f7	83 fa ff	 cmp	 edx, -1
  000fa	0f 84 c6 03 00
	00		 je	 $LN22@BattleTarg

; 2815 : 
; 2816 : 			switch( BattleCmdNo ){

  00100	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleCmdNo@@3HA ; BattleCmdNo
  00105	57		 push	 edi
  00106	83 f8 05	 cmp	 eax, 5
  00109	0f 87 76 03 00
	00		 ja	 $LN10@BattleTarg
  0010f	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN152@BattleTarg[eax*4]
$LN23@BattleTarg:

; 2817 : 			case BATTLE_ATTACK:
; 2818 : 				sprintf( moji, "H|%X", targetNo );

  00116	52		 push	 edx
  00117	68 00 00 00 00	 push	 OFFSET ??_C@_04DMFDFHBJ@H?$HM?$CFX@
$LN167@BattleTarg:

; 3155 : 					lssproto_B_send( sockfd, moji );
; 3156 : 					play_se( 217, 320, 240 );
; 3157 : 					break;
; 3158 : 				}
; 3159 : 
; 3160 : #endif
; 3161 : 			}
; 3162 : 
; 3163 : 			play_se( 203, 320, 240 );

  0011c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00122	50		 push	 eax
  00123	e8 00 00 00 00	 call	 _sprintf
  00128	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00131	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00138	50		 push	 eax
  00139	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0013f	74 0d		 je	 SHORT $LN24@BattleTarg
  00141	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  00146	83 c4 08	 add	 esp, 8
  00149	e9 37 03 00 00	 jmp	 $LN10@BattleTarg
$LN24@BattleTarg:
  0014e	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
  00153	83 c4 08	 add	 esp, 8
  00156	e9 2a 03 00 00	 jmp	 $LN10@BattleTarg
$LN26@BattleTarg:

; 2819 : 				if( bNewServer)
; 2820 : 					lssproto_B_send( sockfd, moji );
; 2821 : 				else
; 2822 : 					old_lssproto_B_send( sockfd, moji );
; 2823 : 				break;
; 2824 : 			
; 2825 : 			case BATTLE_CAPTURE:
; 2826 : 				sprintf( moji, "T|%X", targetNo );

  0015b	52		 push	 edx
  0015c	68 00 00 00 00	 push	 OFFSET ??_C@_04JJEDCNJK@T?$HM?$CFX@

; 2827 : 				if( bNewServer)
; 2828 : 					lssproto_B_send( sockfd, moji );

  00161	eb b9		 jmp	 SHORT $LN167@BattleTarg
$LN29@BattleTarg:

; 2829 : 				else
; 2830 : 					old_lssproto_B_send( sockfd, moji );
; 2831 : 				break;
; 2832 : 				
; 2833 : 			case BATTLE_JUJUTU:
; 2834 : 				//cary*
; 2835 : 				switch( magic[ BattleJujutuNo ].target ){

  00163	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
  00169	6b c1 70	 imul	 eax, ecx, 112
  0016c	0f bf 80 0a 00
	00 00		 movsx	 eax, WORD PTR ?magic@@3PAUMAGIC@@A[eax+10]
  00173	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00176	0f 87 09 03 00
	00		 ja	 $LN10@BattleTarg
  0017c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN153@BattleTarg[eax*4]
$LN30@BattleTarg:

; 2946 : 					else
; 2947 : 						old_lssproto_B_send( sockfd, moji );
; 2948 : 
; 2949 : 					play_se( 217, 320, 240 );

  00183	52		 push	 edx
$LN160@BattleTarg:
  00184	51		 push	 ecx
  00185	68 00 00 00 00	 push	 OFFSET ??_C@_07DLEHBIBA@J?$HM?$CFX?$HM?$CFX@
$LN168@BattleTarg:

; 3155 : 					lssproto_B_send( sockfd, moji );
; 3156 : 					play_se( 217, 320, 240 );
; 3157 : 					break;
; 3158 : 				}
; 3159 : 
; 3160 : #endif
; 3161 : 			}
; 3162 : 
; 3163 : 			play_se( 203, 320, 240 );

  0018a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00190	50		 push	 eax
  00191	e8 00 00 00 00	 call	 _sprintf
  00196	83 c4 10	 add	 esp, 16			; 00000010H
  00199	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0019f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001a6	50		 push	 eax
  001a7	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001ad	74 7f		 je	 SHORT $LN31@BattleTarg
  001af	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  001b4	eb 7d		 jmp	 SHORT $LN159@BattleTarg
$LN33@BattleTarg:

; 2836 : 
; 2837 : 				#ifdef __ATTACK_MAGIC
; 2838 : 
; 2839 : 				// 敌军某一人
; 2840 : 				case MAGIC_TARGET_SINGLE:
; 2841 : 
; 2842 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , targetNo );
; 2843 : 					if( bNewServer)
; 2844 : 						lssproto_B_send( sockfd , moji );
; 2845 : 					else
; 2846 : 						old_lssproto_B_send( sockfd , moji );
; 2847 : 					play_se( 217 , 320 , 240 );
; 2848 : 
; 2849 : 					break;
; 2850 : 
; 2851 : 				// 敌军一整排
; 2852 : 				case MAGIC_TARGET_ONE_ROW:
; 2853 : 
; 2854 : 					// 23: 左上第一列 , 24: 左上第二列 , 25: 右下第一列 , 26: 右下第二列
; 2855 : 					if( targetNo >= 0 && targetNo < 5 )

  001b6	85 d2		 test	 edx, edx
  001b8	78 32		 js	 SHORT $LN40@BattleTarg
  001ba	83 fa 05	 cmp	 edx, 5
  001bd	7d 08		 jge	 SHORT $LN151@BattleTarg

; 2856 : 						no = 26;

  001bf	be 1a 00 00 00	 mov	 esi, 26			; 0000001aH

; 2862 : 						no = 24;
; 2863 : 
; 2864 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , no );

  001c4	56		 push	 esi

; 2865 : 					if( bNewServer)
; 2866 : 						lssproto_B_send( sockfd , moji );

  001c5	eb bd		 jmp	 SHORT $LN160@BattleTarg
$LN151@BattleTarg:

; 2857 : 					else if( targetNo >= 5 && targetNo < 10 )

  001c7	83 fa 0a	 cmp	 edx, 10			; 0000000aH
  001ca	7d 08		 jge	 SHORT $LN150@BattleTarg

; 2858 : 						no = 25;

  001cc	be 19 00 00 00	 mov	 esi, 25			; 00000019H

; 2862 : 						no = 24;
; 2863 : 
; 2864 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , no );

  001d1	56		 push	 esi

; 2865 : 					if( bNewServer)
; 2866 : 						lssproto_B_send( sockfd , moji );

  001d2	eb b0		 jmp	 SHORT $LN160@BattleTarg
$LN150@BattleTarg:

; 2859 : 					else if( targetNo >= 10 && targetNo < 15 )

  001d4	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  001d7	7d 08		 jge	 SHORT $LN149@BattleTarg

; 2860 : 						no = 23;

  001d9	be 17 00 00 00	 mov	 esi, 23			; 00000017H

; 2862 : 						no = 24;
; 2863 : 
; 2864 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , no );

  001de	56		 push	 esi

; 2865 : 					if( bNewServer)
; 2866 : 						lssproto_B_send( sockfd , moji );

  001df	eb a3		 jmp	 SHORT $LN160@BattleTarg
$LN149@BattleTarg:

; 2861 : 					else if( targetNo >= 15 && targetNo < 20 )

  001e1	83 fa 14	 cmp	 edx, 20			; 00000014H
  001e4	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  001e9	0f 4c f0	 cmovl	 esi, eax
$LN40@BattleTarg:

; 2862 : 						no = 24;
; 2863 : 
; 2864 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , no );

  001ec	56		 push	 esi

; 2865 : 					if( bNewServer)
; 2866 : 						lssproto_B_send( sockfd , moji );

  001ed	eb 95		 jmp	 SHORT $LN160@BattleTarg
$LN43@BattleTarg:

; 2946 : 					else
; 2947 : 						old_lssproto_B_send( sockfd, moji );
; 2948 : 
; 2949 : 					play_se( 217, 320, 240 );

  001ef	33 c0		 xor	 eax, eax
  001f1	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  001f8	0f 9c c0	 setl	 al
  001fb	83 c0 14	 add	 eax, 20			; 00000014H
  001fe	50		 push	 eax
  001ff	eb 83		 jmp	 SHORT $LN160@BattleTarg
$LN50@BattleTarg:

; 2867 : 					else
; 2868 : 						old_lssproto_B_send( sockfd , moji );
; 2869 : 					play_se( 217 , 320 , 240 );
; 2870 : 
; 2871 : 					break;
; 2872 : 
; 2873 : 				// 敌军全体
; 2874 : 				case MAGIC_TARGET_ALL_ROWS:
; 2875 : 
; 2876 : 					( BattleMyNo < 10 )? no = 21 : no = 20;
; 2877 : 					sprintf( moji , "J|%X|%X" , BattleJujutuNo , no );
; 2878 : 					if( bNewServer)
; 2879 : 						lssproto_B_send( sockfd , moji );
; 2880 : 					else
; 2881 : 						old_lssproto_B_send( sockfd , moji );
; 2882 : 					play_se( 217 , 320 , 240 );
; 2883 : 
; 2884 : 					break;
; 2885 : 
; 2886 : 				#endif
; 2887 : 
; 2888 : 				case MAGIC_TARGET_MYSELF:
; 2889 : 				case MAGIC_TARGET_OTHER:
; 2890 : 					sprintf( moji,"J|%X|%X", BattleJujutuNo, targetNo );
; 2891 : 					if( bNewServer)
; 2892 : 						lssproto_B_send( sockfd, moji );
; 2893 : 					else
; 2894 : 						old_lssproto_B_send( sockfd, moji );
; 2895 : 					play_se( 217, 320, 240 );
; 2896 : 					break;
; 2897 : 					
; 2898 : 				case MAGIC_TARGET_ALLMYSIDE:
; 2899 : 					if( BattleMyNo < 10 ) no = 20;

  00201	33 c0		 xor	 eax, eax
  00203	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  0020a	0f 9d c0	 setge	 al
  0020d	83 c0 14	 add	 eax, 20			; 00000014H

; 2900 : 					else no = 21;
; 2901 : 					sprintf( moji,"J|%X|%X", BattleJujutuNo, no );

  00210	50		 push	 eax

; 2902 : 
; 2903 : 					if( bNewServer)
; 2904 : 						lssproto_B_send( sockfd, moji );

  00211	e9 6e ff ff ff	 jmp	 $LN160@BattleTarg
$LN60@BattleTarg:

; 2905 : 					else
; 2906 : 						old_lssproto_B_send( sockfd, moji );
; 2907 : 
; 2908 : 					play_se( 217, 320, 240 );
; 2909 : 					break;
; 2910 : 					
; 2911 : 				case MAGIC_TARGET_ALLOTHERSIDE:
; 2912 : 					if( BattleMyNo < 10 ) no = 21;
; 2913 : 					else no = 20;
; 2914 : 
; 2915 : 					sprintf( moji,"J|%X|%X", BattleJujutuNo, no );
; 2916 : 
; 2917 : 					if( bNewServer)
; 2918 : 						lssproto_B_send( sockfd, moji );
; 2919 : 					else
; 2920 : 						old_lssproto_B_send( sockfd, moji );
; 2921 : 
; 2922 : 					play_se( 217, 320, 240 );
; 2923 : 					break;
; 2924 : 					
; 2925 : 				case MAGIC_TARGET_ALL:
; 2926 : 
; 2927 : 					sprintf( moji,"J|%X|%X", BattleJujutuNo, 22 );

  00216	6a 16		 push	 22			; 00000016H

; 2928 : 
; 2929 : 					if( bNewServer)
; 2930 : 						lssproto_B_send( sockfd, moji );

  00218	e9 67 ff ff ff	 jmp	 $LN160@BattleTarg
$LN63@BattleTarg:

; 2931 : 					else
; 2932 : 						old_lssproto_B_send( sockfd, moji );
; 2933 : 
; 2934 : 					play_se( 217, 320, 240 );
; 2935 : 					break;
; 2936 : 					
; 2937 : 				case MAGIC_TARGET_WHOLEOTHERSIDE:
; 2938 : 
; 2939 : 					if( targetNo < 10 ) no = 20;
; 2940 : 					else no = 21;
; 2941 : 
; 2942 : 					sprintf( moji,"J|%X|%X", BattleJujutuNo, no );

  0021d	33 c0		 xor	 eax, eax
  0021f	83 fa 0a	 cmp	 edx, 10			; 0000000aH
  00222	0f 9d c0	 setge	 al
  00225	83 c0 14	 add	 eax, 20			; 00000014H
  00228	50		 push	 eax

; 2943 : 
; 2944 : 					if( bNewServer)
; 2945 : 						lssproto_B_send( sockfd, moji );

  00229	e9 56 ff ff ff	 jmp	 $LN160@BattleTarg
$LN31@BattleTarg:

; 3155 : 					lssproto_B_send( sockfd, moji );
; 3156 : 					play_se( 217, 320, 240 );
; 3157 : 					break;
; 3158 : 				}
; 3159 : 
; 3160 : #endif
; 3161 : 			}
; 3162 : 
; 3163 : 			play_se( 203, 320, 240 );

  0022e	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN159@BattleTarg:
  00233	83 c4 08	 add	 esp, 8
  00236	68 f0 00 00 00	 push	 240			; 000000f0H
  0023b	68 40 01 00 00	 push	 320			; 00000140H
  00240	68 d9 00 00 00	 push	 217			; 000000d9H
  00245	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0024a	83 c4 0c	 add	 esp, 12			; 0000000cH
  0024d	e9 33 02 00 00	 jmp	 $LN10@BattleTarg
$LN68@BattleTarg:

; 2950 : 					break;
; 2951 : 				}
; 2952 : 				break;
; 2953 : 				
; 2954 : 				//Change note 道具选择对象后送出封包
; 2955 : 			case BATTLE_ITEM:
; 2956 : 				//cary*
; 2957 : 				switch( pc.item[ BattleItemNo ].target ){

  00252	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
  00258	69 c1 7c 01 00
	00		 imul	 eax, ecx, 380
  0025e	0f bf 80 a4 01
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A[eax+420]
  00265	83 f8 07	 cmp	 eax, 7
  00268	0f 87 17 02 00
	00		 ja	 $LN10@BattleTarg
  0026e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN154@BattleTarg[eax*4]
$LN69@BattleTarg:

; 2958 : 				case ITEM_TARGET_MYSELF:
; 2959 : 				case ITEM_TARGET_OTHER:
; 2960 : 				case ITEM_TARGET_OTHERWITHOUTMYSELF:
; 2961 : 				case ITEM_TARGET_WITHOUTMYSELFANDPET:
; 2962 : 					sprintf( moji,"I|%X|%X", BattleItemNo, targetNo );

  00275	52		 push	 edx

; 3005 : 
; 3006 : 					if( bNewServer)
; 3007 : 						lssproto_B_send( sockfd, moji );
; 3008 : 					else
; 3009 : 						old_lssproto_B_send( sockfd, moji );
; 3010 : 
; 3011 : 					play_se( 217, 320, 240 );

  00276	51		 push	 ecx
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@
  0027c	e9 09 ff ff ff	 jmp	 $LN168@BattleTarg
$LN75@BattleTarg:

; 2963 : 
; 2964 : 					if( bNewServer)
; 2965 : 						lssproto_B_send( sockfd, moji );
; 2966 : 					else
; 2967 : 						old_lssproto_B_send( sockfd, moji );
; 2968 : 
; 2969 : 					play_se( 217, 320, 240 );
; 2970 : 					break;
; 2971 : 					
; 2972 : 				case ITEM_TARGET_ALLMYSIDE:
; 2973 : 
; 2974 : 					if( BattleMyNo < 10 ) no = 20;

  00281	33 c0		 xor	 eax, eax
  00283	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  0028a	0f 9d c0	 setge	 al
  0028d	83 c0 14	 add	 eax, 20			; 00000014H

; 2975 : 					else no = 21;
; 2976 : 
; 2977 : 					sprintf( moji,"I|%X|%X", BattleItemNo, no );

  00290	50		 push	 eax

; 3005 : 
; 3006 : 					if( bNewServer)
; 3007 : 						lssproto_B_send( sockfd, moji );
; 3008 : 					else
; 3009 : 						old_lssproto_B_send( sockfd, moji );
; 3010 : 
; 3011 : 					play_se( 217, 320, 240 );

  00291	51		 push	 ecx
  00292	68 00 00 00 00	 push	 OFFSET ??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@
  00297	e9 ee fe ff ff	 jmp	 $LN168@BattleTarg
$LN80@BattleTarg:

; 2978 : 
; 2979 : 					if( bNewServer)
; 2980 : 						lssproto_B_send( sockfd, moji );
; 2981 : 					else
; 2982 : 						old_lssproto_B_send( sockfd, moji );
; 2983 : 
; 2984 : 					play_se( 217, 320, 240 );
; 2985 : 					break;
; 2986 : 					
; 2987 : 				case ITEM_TARGET_ALLOTHERSIDE:
; 2988 : 
; 2989 : 					if( BattleMyNo < 10 ) no = 21;

  0029c	33 c0		 xor	 eax, eax
  0029e	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  002a5	0f 9c c0	 setl	 al
  002a8	83 c0 14	 add	 eax, 20			; 00000014H

; 2990 : 					else no = 20;
; 2991 : 
; 2992 : 					sprintf( moji,"I|%X|%X", BattleItemNo, no );

  002ab	50		 push	 eax

; 3005 : 
; 3006 : 					if( bNewServer)
; 3007 : 						lssproto_B_send( sockfd, moji );
; 3008 : 					else
; 3009 : 						old_lssproto_B_send( sockfd, moji );
; 3010 : 
; 3011 : 					play_se( 217, 320, 240 );

  002ac	51		 push	 ecx
  002ad	68 00 00 00 00	 push	 OFFSET ??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@
  002b2	e9 d3 fe ff ff	 jmp	 $LN168@BattleTarg
$LN85@BattleTarg:

; 2993 : 
; 2994 : 					if( bNewServer)
; 2995 : 						lssproto_B_send( sockfd, moji );
; 2996 : 					else
; 2997 : 						old_lssproto_B_send( sockfd, moji );
; 2998 : 
; 2999 : 					play_se( 217, 320, 240 );
; 3000 : 					break;
; 3001 : 					
; 3002 : 				case ITEM_TARGET_ALL:
; 3003 : 
; 3004 : 					sprintf( moji,"I|%X|%X", BattleItemNo, 22 );

  002b7	6a 16		 push	 22			; 00000016H

; 3005 : 
; 3006 : 					if( bNewServer)
; 3007 : 						lssproto_B_send( sockfd, moji );
; 3008 : 					else
; 3009 : 						old_lssproto_B_send( sockfd, moji );
; 3010 : 
; 3011 : 					play_se( 217, 320, 240 );

  002b9	51		 push	 ecx
  002ba	68 00 00 00 00	 push	 OFFSET ??_C@_07LFMIBPPD@I?$HM?$CFX?$HM?$CFX@
  002bf	e9 c6 fe ff ff	 jmp	 $LN168@BattleTarg
$LN88@BattleTarg:

; 3012 : 					break;
; 3013 : 				}
; 3014 : 				break;
; 3015 : 
; 3016 : 				//Change note 宠技选择对象后送出封包
; 3017 : 			case BATTLE_WAZA:
; 3018 : 				switch( petSkill[ battlePetNoBak ][ BattleWazaNo ].target ){

  002c4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  002c9	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleWazaNo@@3HA ; BattleWazaNo
  002cf	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  002d6	2b c8		 sub	 ecx, eax
  002d8	03 cf		 add	 ecx, edi
  002da	6b c1 6a	 imul	 eax, ecx, 106
  002dd	0f bf 80 06 00
	00 00		 movsx	 eax, WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+6]
  002e4	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  002e7	0f 87 98 01 00
	00		 ja	 $LN10@BattleTarg
  002ed	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN155@BattleTarg[eax]
  002f4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN156@BattleTarg[eax*4]
$LN89@BattleTarg:

; 3019 : 				case PETSKILL_TARGET_MYSELF:
; 3020 : 				case PETSKILL_TARGET_OTHER:
; 3021 : 				case PETSKILL_TARGET_OTHERWITHOUTMYSELF:
; 3022 : 				case PETSKILL_TARGET_WITHOUTMYSELFANDPET:
; 3023 : #ifdef _BATTLESKILL
; 3024 : 				case PETSKILL_TARGER_DEATH:
; 3025 : #endif
; 3026 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, targetNo );

  002fb	52		 push	 edx

; 3097 : 
; 3098 : 					if (bNewServer)
; 3099 : 						lssproto_B_send(sockfd, moji);
; 3100 : 					else
; 3101 : 						old_lssproto_B_send(sockfd, moji);
; 3102 : 
; 3103 : 					play_se(217, 320, 240);

  002fc	57		 push	 edi
  002fd	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  00302	e9 83 fe ff ff	 jmp	 $LN168@BattleTarg
$LN96@BattleTarg:

; 3027 : 
; 3028 : 					if( bNewServer)
; 3029 : 						lssproto_B_send( sockfd, moji );
; 3030 : 					else
; 3031 : 						old_lssproto_B_send( sockfd, moji );
; 3032 : 
; 3033 : 					play_se( 217, 320, 240 );
; 3034 : 					break;
; 3035 : 					
; 3036 : 				case PETSKILL_TARGET_ALLMYSIDE:
; 3037 : 
; 3038 : 					if( BattleMyNo < 10 ) no = 20;

  00307	33 c0		 xor	 eax, eax
  00309	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  00310	0f 9d c0	 setge	 al
  00313	83 c0 14	 add	 eax, 20			; 00000014H

; 3039 : 					else no = 21;
; 3040 : 
; 3041 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  00316	50		 push	 eax

; 3097 : 
; 3098 : 					if (bNewServer)
; 3099 : 						lssproto_B_send(sockfd, moji);
; 3100 : 					else
; 3101 : 						old_lssproto_B_send(sockfd, moji);
; 3102 : 
; 3103 : 					play_se(217, 320, 240);

  00317	57		 push	 edi
  00318	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  0031d	e9 68 fe ff ff	 jmp	 $LN168@BattleTarg
$LN101@BattleTarg:

; 3042 : 
; 3043 : 					if( bNewServer)
; 3044 : 						lssproto_B_send( sockfd, moji );
; 3045 : 					else
; 3046 : 						old_lssproto_B_send( sockfd, moji );
; 3047 : 
; 3048 : 					play_se( 217, 320, 240 );
; 3049 : 					break;
; 3050 : 					
; 3051 : 				case PETSKILL_TARGET_ALLOTHERSIDE:
; 3052 : 				
; 3053 : 					if( BattleMyNo < 10 ) no = 21;

  00322	33 c0		 xor	 eax, eax
  00324	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  0032b	0f 9c c0	 setl	 al
  0032e	83 c0 14	 add	 eax, 20			; 00000014H

; 3054 : 					else no = 20;
; 3055 : 
; 3056 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  00331	50		 push	 eax

; 3097 : 
; 3098 : 					if (bNewServer)
; 3099 : 						lssproto_B_send(sockfd, moji);
; 3100 : 					else
; 3101 : 						old_lssproto_B_send(sockfd, moji);
; 3102 : 
; 3103 : 					play_se(217, 320, 240);

  00332	57		 push	 edi
  00333	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  00338	e9 4d fe ff ff	 jmp	 $LN168@BattleTarg
$LN106@BattleTarg:

; 3057 : 
; 3058 : 					if( bNewServer)
; 3059 : 						lssproto_B_send( sockfd, moji );
; 3060 : 					else
; 3061 : 						old_lssproto_B_send( sockfd, moji );
; 3062 : 
; 3063 : 					play_se( 217, 320, 240 );
; 3064 : 					break;
; 3065 : 					
; 3066 : 				case PETSKILL_TARGET_ALL:
; 3067 : 
; 3068 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, 22 );

  0033d	6a 16		 push	 22			; 00000016H

; 3097 : 
; 3098 : 					if (bNewServer)
; 3099 : 						lssproto_B_send(sockfd, moji);
; 3100 : 					else
; 3101 : 						old_lssproto_B_send(sockfd, moji);
; 3102 : 
; 3103 : 					play_se(217, 320, 240);

  0033f	57		 push	 edi
  00340	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  00345	e9 40 fe ff ff	 jmp	 $LN168@BattleTarg
$LN109@BattleTarg:

; 3069 : 
; 3070 : 					if( bNewServer)
; 3071 : 						lssproto_B_send( sockfd, moji );
; 3072 : 					else
; 3073 : 						old_lssproto_B_send( sockfd, moji );
; 3074 : 
; 3075 : 					play_se( 217, 320, 240 );
; 3076 : 					break;
; 3077 : #ifdef _BATTLESKILL
; 3078 : 				case PETSKILL_TARGET_ONE_ROW:
; 3079 : #endif
; 3080 : #ifdef _SKILL_ADDBARRIER
; 3081 : 				case PETSKILL_TARGET_ONE_ROW_ALL:
; 3082 : #endif
; 3083 : 					if ( targetNo >= 0 && targetNo < 5 ) no = 26 ; 

  0034a	85 d2		 test	 edx, edx
  0034c	78 4d		 js	 SHORT $LN111@BattleTarg
  0034e	83 fa 05	 cmp	 edx, 5
  00351	7d 11		 jge	 SHORT $LN148@BattleTarg
  00353	be 1a 00 00 00	 mov	 esi, 26			; 0000001aH

; 3087 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  00358	56		 push	 esi
  00359	57		 push	 edi
  0035a	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@

; 3088 : 					lssproto_B_send( sockfd, moji );
; 3089 : 					play_se( 217, 320, 240 );
; 3090 : 					break;

  0035f	e9 ec 00 00 00	 jmp	 $LN164@BattleTarg
$LN148@BattleTarg:

; 3084 : 					if ( targetNo >= 5 && targetNo < 10 ) no = 25 ; 

  00364	83 fa 0a	 cmp	 edx, 10			; 0000000aH
  00367	7d 11		 jge	 SHORT $LN147@BattleTarg
  00369	be 19 00 00 00	 mov	 esi, 25			; 00000019H

; 3087 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  0036e	56		 push	 esi
  0036f	57		 push	 edi
  00370	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@

; 3088 : 					lssproto_B_send( sockfd, moji );
; 3089 : 					play_se( 217, 320, 240 );
; 3090 : 					break;

  00375	e9 d6 00 00 00	 jmp	 $LN164@BattleTarg
$LN147@BattleTarg:

; 3085 : 					if ( targetNo >= 10 && targetNo < 15 ) no = 23 ; 

  0037a	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  0037d	7d 11		 jge	 SHORT $LN146@BattleTarg
  0037f	be 17 00 00 00	 mov	 esi, 23			; 00000017H

; 3087 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  00384	56		 push	 esi
  00385	57		 push	 edi
  00386	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@

; 3088 : 					lssproto_B_send( sockfd, moji );
; 3089 : 					play_se( 217, 320, 240 );
; 3090 : 					break;

  0038b	e9 c0 00 00 00	 jmp	 $LN164@BattleTarg
$LN146@BattleTarg:

; 3086 : 					if ( targetNo >= 15 && targetNo < 20 ) no = 24 ; 

  00390	83 fa 14	 cmp	 edx, 20			; 00000014H
  00393	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00398	0f 4c f0	 cmovl	 esi, eax
$LN111@BattleTarg:

; 3087 : 					sprintf( moji,"W|%X|%X", BattleWazaNo, no );

  0039b	56		 push	 esi
  0039c	57		 push	 edi
  0039d	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@

; 3088 : 					lssproto_B_send( sockfd, moji );
; 3089 : 					play_se( 217, 320, 240 );
; 3090 : 					break;

  003a2	e9 a9 00 00 00	 jmp	 $LN164@BattleTarg
$LN117@BattleTarg:

; 3091 : 				case PETSKILL_TARGET_WHOLEOTHERSIDE:
; 3092 : 					if (targetNo >= 0 && targetNo < 10)
; 3093 : 						no = 20;
; 3094 : 					else
; 3095 : 						no = 21;
; 3096 : 					sprintf(moji, "W|%X|%X", BattleWazaNo, no);

  003a7	b8 09 00 00 00	 mov	 eax, 9
  003ac	3b c2		 cmp	 eax, edx
  003ae	1b c0		 sbb	 eax, eax
  003b0	f7 d8		 neg	 eax
  003b2	83 c0 14	 add	 eax, 20			; 00000014H
  003b5	50		 push	 eax

; 3097 : 
; 3098 : 					if (bNewServer)
; 3099 : 						lssproto_B_send(sockfd, moji);
; 3100 : 					else
; 3101 : 						old_lssproto_B_send(sockfd, moji);
; 3102 : 
; 3103 : 					play_se(217, 320, 240);

  003b6	57		 push	 edi
  003b7	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  003bc	e9 c9 fd ff ff	 jmp	 $LN168@BattleTarg
$LN120@BattleTarg:

; 3104 : 					break;
; 3105 : 
; 3106 : 				}			
; 3107 : 
; 3108 : 			
; 3109 : 				break;
; 3110 : 				
; 3111 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3112 : 				//Change note 职业技能选择对象后送出封包
; 3113 : 			case BATTLE_PROWAZA:
; 3114 : 				switch( profession_skill[prouseskill].target ){

  003c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?prouseskill@@3HA ; prouseskill
  003c7	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  003ca	c1 e0 06	 shl	 eax, 6
  003cd	0f bf 80 04 00
	00 00		 movsx	 eax, WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+4]
  003d4	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  003d7	0f 87 a8 00 00
	00		 ja	 $LN10@BattleTarg
  003dd	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN157@BattleTarg[eax]
  003e4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN158@BattleTarg[eax*4]
$LN121@BattleTarg:

; 3115 : 				case PETSKILL_TARGET_MYSELF:
; 3116 : 				case PETSKILL_TARGET_OTHER:
; 3117 : 				case PETSKILL_TARGET_OTHERWITHOUTMYSELF:
; 3118 : 				case PETSKILL_TARGET_WITHOUTMYSELFANDPET:
; 3119 : 				case PETSKILL_TARGET_ONE_LINE:
; 3120 : #ifdef _BATTLESKILL
; 3121 : 				case PETSKILL_TARGER_DEATH:
; 3122 : #endif
; 3123 : 					sprintf( moji,"P|%X|%X", prouseskill, targetNo );

  003eb	52		 push	 edx

; 3124 : 					lssproto_B_send( sockfd, moji );
; 3125 : 					play_se( 217, 320, 240 );
; 3126 : 					break;

  003ec	eb 5c		 jmp	 SHORT $LN166@BattleTarg
$LN127@BattleTarg:

; 3127 : 				case PETSKILL_TARGET_ALLMYSIDE:
; 3128 : 					if( BattleMyNo < 10 ) no = 20;

  003ee	33 c0		 xor	 eax, eax
  003f0	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  003f7	0f 9d c0	 setge	 al
  003fa	83 c0 14	 add	 eax, 20			; 00000014H

; 3129 : 					else no = 21;
; 3130 : 					sprintf( moji,"P|%X|%X", prouseskill, no );

  003fd	50		 push	 eax

; 3131 : 					lssproto_B_send( sockfd, moji );
; 3132 : 					play_se( 217, 320, 240 );
; 3133 : 					break;

  003fe	eb 4a		 jmp	 SHORT $LN166@BattleTarg
$LN130@BattleTarg:

; 3134 : 				case PETSKILL_TARGET_ALLOTHERSIDE:
; 3135 : 					if( BattleMyNo < 10 ) no = 21;

  00400	33 c0		 xor	 eax, eax
  00402	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  00409	0f 9c c0	 setl	 al
  0040c	83 c0 14	 add	 eax, 20			; 00000014H

; 3136 : 					else no = 20;
; 3137 : 					sprintf( moji,"P|%X|%X", prouseskill, no );

  0040f	50		 push	 eax

; 3138 : 					lssproto_B_send( sockfd, moji );
; 3139 : 					play_se( 217, 320, 240 );
; 3140 : 					break;

  00410	eb 38		 jmp	 SHORT $LN166@BattleTarg
$LN133@BattleTarg:

; 3141 : 				case PETSKILL_TARGET_ALL:
; 3142 : 					sprintf( moji,"P|%X|%X", prouseskill, 22 );

  00412	6a 16		 push	 22			; 00000016H

; 3143 : 					lssproto_B_send( sockfd, moji );
; 3144 : 					play_se( 217, 320, 240 );
; 3145 : 					break;

  00414	eb 34		 jmp	 SHORT $LN166@BattleTarg
$LN134@BattleTarg:

; 3146 : 				case PETSKILL_TARGET_ONE_ROW:
; 3147 : #ifdef _SKILL_ADDBARRIER
; 3148 : 				case PETSKILL_TARGET_ONE_ROW_ALL:
; 3149 : #endif
; 3150 : 					if ( targetNo >= 0 && targetNo < 5 ) no = 26 ; 

  00416	85 d2		 test	 edx, edx
  00418	78 2f		 js	 SHORT $LN136@BattleTarg
  0041a	83 fa 05	 cmp	 edx, 5
  0041d	7d 07		 jge	 SHORT $LN145@BattleTarg
  0041f	be 1a 00 00 00	 mov	 esi, 26			; 0000001aH
  00424	eb 23		 jmp	 SHORT $LN136@BattleTarg
$LN145@BattleTarg:

; 3151 : 					if ( targetNo >= 5 && targetNo < 10 ) no = 25 ; 

  00426	83 fa 0a	 cmp	 edx, 10			; 0000000aH
  00429	7d 07		 jge	 SHORT $LN144@BattleTarg
  0042b	be 19 00 00 00	 mov	 esi, 25			; 00000019H
  00430	eb 17		 jmp	 SHORT $LN136@BattleTarg
$LN144@BattleTarg:

; 3152 : 					if ( targetNo >= 10 && targetNo < 15 ) no = 23 ; 

  00432	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  00435	7d 07		 jge	 SHORT $LN143@BattleTarg
  00437	be 17 00 00 00	 mov	 esi, 23			; 00000017H
  0043c	eb 0b		 jmp	 SHORT $LN136@BattleTarg
$LN143@BattleTarg:

; 3153 : 					if ( targetNo >= 15 && targetNo < 20 ) no = 24 ; 

  0043e	83 fa 14	 cmp	 edx, 20			; 00000014H
  00441	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
  00446	0f 4c f0	 cmovl	 esi, eax
$LN136@BattleTarg:

; 3154 : 					sprintf( moji,"P|%X|%X", prouseskill, no );

  00449	56		 push	 esi
$LN166@BattleTarg:

; 3155 : 					lssproto_B_send( sockfd, moji );
; 3156 : 					play_se( 217, 320, 240 );
; 3157 : 					break;
; 3158 : 				}
; 3159 : 
; 3160 : #endif
; 3161 : 			}
; 3162 : 
; 3163 : 			play_se( 203, 320, 240 );

  0044a	51		 push	 ecx
  0044b	68 00 00 00 00	 push	 OFFSET ??_C@_07NGDMDFPD@P?$HM?$CFX?$HM?$CFX@
$LN164@BattleTarg:
  00450	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00456	50		 push	 eax
  00457	e8 00 00 00 00	 call	 _sprintf
  0045c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00462	50		 push	 eax
  00463	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00469	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  0046e	68 f0 00 00 00	 push	 240			; 000000f0H
  00473	68 40 01 00 00	 push	 320			; 00000140H
  00478	68 d9 00 00 00	 push	 217			; 000000d9H
  0047d	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00482	83 c4 24	 add	 esp, 36			; 00000024H
$LN10@BattleTarg:
  00485	68 f0 00 00 00	 push	 240			; 000000f0H
  0048a	68 40 01 00 00	 push	 320			; 00000140H
  0048f	68 cb 00 00 00	 push	 203			; 000000cbH
  00494	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 3164 : 
; 3165 : 			battleTargetSelectFlag = FALSE;
; 3166 : 
; 3167 : 			battleMenuReturn = TRUE;
; 3168 : 
; 3169 : 			DeathAction( pActInfoWnd );

  00499	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  0049f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0
  004a9	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1
  004b3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004b8	83 c4 10	 add	 esp, 16			; 00000010H

; 3170 : 			pActInfoWnd = NULL;

  004bb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, 0
  004c5	5f		 pop	 edi
$LN22@BattleTarg:

; 3171 : 		}
; 3172 : 	}
; 3173 : }

  004c6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004c9	33 cd		 xor	 ecx, ebp
  004cb	5e		 pop	 esi
  004cc	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004d1	8b e5		 mov	 esp, ebp
  004d3	5d		 pop	 ebp
  004d4	c3		 ret	 0
  004d5	0f 1f 00	 npad	 3
$LN152@BattleTarg:
  004d8	00 00 00 00	 DD	 $LN23@BattleTarg
  004dc	00 00 00 00	 DD	 $LN29@BattleTarg
  004e0	00 00 00 00	 DD	 $LN26@BattleTarg
  004e4	00 00 00 00	 DD	 $LN68@BattleTarg
  004e8	00 00 00 00	 DD	 $LN88@BattleTarg
  004ec	00 00 00 00	 DD	 $LN120@BattleTarg
$LN153@BattleTarg:
  004f0	00 00 00 00	 DD	 $LN30@BattleTarg
  004f4	00 00 00 00	 DD	 $LN30@BattleTarg
  004f8	00 00 00 00	 DD	 $LN50@BattleTarg
  004fc	00 00 00 00	 DD	 $LN43@BattleTarg
  00500	00 00 00 00	 DD	 $LN60@BattleTarg
  00504	00 00 00 00	 DD	 $LN10@BattleTarg
  00508	00 00 00 00	 DD	 $LN10@BattleTarg
  0050c	00 00 00 00	 DD	 $LN10@BattleTarg
  00510	00 00 00 00	 DD	 $LN63@BattleTarg
  00514	00 00 00 00	 DD	 $LN30@BattleTarg
  00518	00 00 00 00	 DD	 $LN33@BattleTarg
  0051c	00 00 00 00	 DD	 $LN43@BattleTarg
$LN154@BattleTarg:
  00520	00 00 00 00	 DD	 $LN69@BattleTarg
  00524	00 00 00 00	 DD	 $LN69@BattleTarg
  00528	00 00 00 00	 DD	 $LN75@BattleTarg
  0052c	00 00 00 00	 DD	 $LN80@BattleTarg
  00530	00 00 00 00	 DD	 $LN85@BattleTarg
  00534	00 00 00 00	 DD	 $LN10@BattleTarg
  00538	00 00 00 00	 DD	 $LN69@BattleTarg
  0053c	00 00 00 00	 DD	 $LN69@BattleTarg
$LN156@BattleTarg:
  00540	00 00 00 00	 DD	 $LN89@BattleTarg
  00544	00 00 00 00	 DD	 $LN96@BattleTarg
  00548	00 00 00 00	 DD	 $LN101@BattleTarg
  0054c	00 00 00 00	 DD	 $LN106@BattleTarg
  00550	00 00 00 00	 DD	 $LN109@BattleTarg
  00554	00 00 00 00	 DD	 $LN117@BattleTarg
  00558	00 00 00 00	 DD	 $LN10@BattleTarg
$LN155@BattleTarg:
  0055c	00		 DB	 0
  0055d	00		 DB	 0
  0055e	01		 DB	 1
  0055f	02		 DB	 2
  00560	03		 DB	 3
  00561	06		 DB	 6
  00562	00		 DB	 0
  00563	00		 DB	 0
  00564	04		 DB	 4
  00565	06		 DB	 6
  00566	00		 DB	 0
  00567	04		 DB	 4
  00568	05		 DB	 5
  00569	0f 1f 00	 npad	 3
$LN158@BattleTarg:
  0056c	00 00 00 00	 DD	 $LN121@BattleTarg
  00570	00 00 00 00	 DD	 $LN127@BattleTarg
  00574	00 00 00 00	 DD	 $LN130@BattleTarg
  00578	00 00 00 00	 DD	 $LN133@BattleTarg
  0057c	00 00 00 00	 DD	 $LN134@BattleTarg
  00580	00 00 00 00	 DD	 $LN10@BattleTarg
$LN157@BattleTarg:
  00584	00		 DB	 0
  00585	00		 DB	 0
  00586	01		 DB	 1
  00587	02		 DB	 2
  00588	03		 DB	 3
  00589	05		 DB	 5
  0058a	00		 DB	 0
  0058b	00		 DB	 0
  0058c	04		 DB	 4
  0058d	00		 DB	 0
  0058e	00		 DB	 0
  0058f	04		 DB	 4
?BattleTargetSelect@@YAXXZ ENDP				; BattleTargetSelect
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonWaza@@YAXXZ
_TEXT	SEGMENT
_x$1$ = -268						; size = 4
tv980 = -264						; size = 4
_i$2$ = -264						; size = 4
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleButtonWaza@@YAXXZ PROC				; BattleButtonWaza, COMDAT

; 2538 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 01 00
	00		 sub	 esp, 268		; 0000010cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2539 : 	int i, bak;
; 2540 : 	int x, y;
; 2541 : 	char moji[ 256 ];
; 2542 : 	if( HitDispNo == battleButtonDispNo[ 8 ] || battlePetButtonFlag == TRUE ){

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00018	3b 05 20 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+32
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battlePetButtonFlag@@3HA ; battlePetButtonFlag
  00023	56		 push	 esi
  00024	74 10		 je	 SHORT $LN20@BattleButt
  00026	83 f8 01	 cmp	 eax, 1
  00029	74 0b		 je	 SHORT $LN20@BattleButt
  0002b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00031	e9 a7 00 00 00	 jmp	 $LN19@BattleButt
$LN20@BattleButt:

; 2543 : 		// ?????????
; 2544 : 		if( mouse.onceState & MOUSE_LEFT_CRICK || battlePetButtonFlag == TRUE ){

  00036	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0003d	75 05		 jne	 SHORT $LN22@BattleButt
  0003f	83 f8 01	 cmp	 eax, 1
  00042	75 6f		 jne	 SHORT $LN103@BattleButt
$LN22@BattleButt:

; 2545 : 			bak = battleButtonFlag[ 8 ];	// ??????

  00044	8b 35 20 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA+32

; 2546 : 			BattleButtonOff();				// ????????????

  0004a	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 2547 : 			// ?????????
; 2548 : 			if( bak == FALSE ){

  0004f	85 f6		 test	 esi, esi
  00051	75 60		 jne	 SHORT $LN103@BattleButt

; 2549 : 				// ?????????
; 2550 : 				battleButtonFlag[ 8 ] = TRUE; //打开技能选项盒
; 2551 : 				// ?????????
; 2552 : 				battleWazaTargetBak = -1;
; 2553 : 				// ?????
; 2554 : 				//BattleCmdNo = BATTLE_WAZA;
; 2555 : 				// ????????
; 2556 : 				for( i = 0 ; i < BATTLE_MENU_WAZA_FONTS ; i++ ) battleMenuWazaFontNo[ i ] = -2;

  00053	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 2557 : 				// ?????????
; 2558 : 				pActWnd = MakeWindowDisp( 364, 96, 272, 348, 0, -1 );

  0005a	6a ff		 push	 -1
  0005c	56		 push	 esi
  0005d	68 5c 01 00 00	 push	 348			; 0000015cH
  00062	68 10 01 00 00	 push	 272			; 00000110H
  00067	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuWazaFontNo@@3PAHA, xmm0
  0006e	6a 60		 push	 96			; 00000060H
  00070	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00077	68 6c 01 00 00	 push	 364			; 0000016cH
  0007c	c7 05 20 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+32, 1
  00086	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak
  00090	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?battleMenuWazaFontNo@@3PAHA+16, xmm0
  00097	c7 05 20 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuWazaFontNo@@3PAHA+32, -2 ; fffffffeH
  000a1	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a6	8b c8		 mov	 ecx, eax
  000a8	83 c4 18	 add	 esp, 24			; 00000018H
  000ab	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ecx
  000b1	eb 06		 jmp	 SHORT $LN23@BattleButt
$LN103@BattleButt:

; 2547 : 			// ?????????
; 2548 : 			if( bak == FALSE ){

  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN23@BattleButt:

; 2559 : 			}
; 2560 : 		}
; 2561 : 		// ?????????
; 2562 : 		battlePetButtonFlag = FALSE;
; 2563 : 		// ??????				 
; 2564 : 		strcpy( OneLineInfoStr, "기능을 사용하다。");

  000b9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@EMOKBAPI@?$LB?b?$LE?I?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@
  000c0	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@EMOKBAPI@?$LB?b?$LE?I?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@+16
  000c6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battlePetButtonFlag@@3HA, 0 ; battlePetButtonFlag
  000d0	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  000d7	66 a3 10 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+16, ax
$LN19@BattleButt:

; 2565 : 	}
; 2566 : 	// ????????
; 2567 : 	if( battleButtonFlag[ 8 ] == TRUE ){

  000dd	83 3d 20 00 00
	00 01		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+32, 1
  000e4	0f 85 81 04 00
	00		 jne	 $LN47@BattleButt

; 2568 : 		// ?????????
; 2569 : 		if( pActWnd != NULL ){

  000ea	85 c9		 test	 ecx, ecx
  000ec	0f 84 79 04 00
	00		 je	 $LN47@BattleButt

; 2570 : 			// ??????????????
; 2571 : 			if( pActWnd->hp > 0 ){

  000f2	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  000f6	0f 8e 6f 04 00
	00		 jle	 $LN47@BattleButt

; 2572 : 				// ?????????
; 2573 : 				StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my, DISP_PRIO_MENU, CG_PET_WAZA_WND, 1 );

  000fc	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000ff	6a 01		 push	 1
  00101	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_PET_WAZA_WND@@3HA ; CG_PET_WAZA_WND
  00107	6a 68		 push	 104			; 00000068H
  00109	ff 70 18	 push	 DWORD PTR [eax+24]
  0010c	ff 70 14	 push	 DWORD PTR [eax+20]
  0010f	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 2574 : 				// ?????????
; 2575 : 				for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){

  00114	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  0011a	33 f6		 xor	 esi, esi
  0011c	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00122	83 c4 14	 add	 esp, 20			; 00000014H
  00125	39 b0 44 00 00
	00		 cmp	 DWORD PTR ?pet@@3PAUPET@@A[eax+68], esi
  0012b	7e 39		 jle	 SHORT $LN6@BattleButt
  0012d	0f 1f 00	 npad	 3
$LL7@BattleButt:

; 2576 : 					// ?????
; 2577 : 					StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my, DISP_PRIO_IME3, CG_PET_WAZA_BAR_1 + i, 1 );

  00130	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActWnd@@3PAUaction@@A
  00135	6a 01		 push	 1
  00137	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0013a	8d 86 13 66 00
	00		 lea	 eax, DWORD PTR [esi+26131]
  00140	50		 push	 eax
  00141	6a 69		 push	 105			; 00000069H
  00143	ff 71 18	 push	 DWORD PTR [ecx+24]
  00146	ff 71 14	 push	 DWORD PTR [ecx+20]
  00149	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0014e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  00154	46		 inc	 esi
  00155	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  0015b	83 c4 14	 add	 esp, 20			; 00000014H
  0015e	3b b0 44 00 00
	00		 cmp	 esi, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  00164	7c ca		 jl	 SHORT $LL7@BattleButt
$LN6@BattleButt:

; 2578 : 				}
; 2579 : 				// ????????
; 2580 : 				if( mouse.onceState & MOUSE_LEFT_CRICK ){

  00166	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0016d	74 18		 je	 SHORT $LN28@BattleButt

; 2581 : 					// ????????
; 2582 : 					if( HitDispNo == battleMenuWazaFontNo[ 7 ] ){

  0016f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00174	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?battleMenuWazaFontNo@@3PAHA+28
  0017a	75 0b		 jne	 SHORT $LN28@BattleButt

; 2583 : 						// ????????????
; 2584 : 						BattleButtonOff();				

  0017c	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff
  00181	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
$LN28@BattleButt:

; 2585 : 					}
; 2586 : 				}
; 2587 : 				// ????????
; 2588 : 				if( pActWnd != NULL ){

  00187	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pActWnd@@3PAUaction@@A
  0018d	85 d2		 test	 edx, edx
  0018f	0f 84 d6 03 00
	00		 je	 $LN47@BattleButt

; 2589 : 					// ?
; 2590 : 					x = pActWnd->x + 32;

  00195	8b 42 18	 mov	 eax, DWORD PTR [edx+24]
  00198	83 c0 20	 add	 eax, 32			; 00000020H
  0019b	89 85 f4 fe ff
	ff		 mov	 DWORD PTR _x$1$[ebp], eax

; 2591 : 					y = pActWnd->y + 252;
; 2592 : 					// ?
; 2593 : 					for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){

  001a1	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  001a7	53		 push	 ebx
  001a8	57		 push	 edi
  001a9	8b 7a 1c	 mov	 edi, DWORD PTR [edx+28]
  001ac	33 db		 xor	 ebx, ebx
  001ae	81 c7 fc 00 00
	00		 add	 edi, 252		; 000000fcH
  001b4	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ebx
  001ba	39 98 44 00 00
	00		 cmp	 DWORD PTR ?pet@@3PAUPET@@A[eax+68], ebx
  001c0	0f 8e 37 02 00
	00		 jle	 $LN9@BattleButt
  001c6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL10@BattleButt:

; 2594 : 						// ????????
; 2595 : 						if( petSkill[ battlePetNoBak ][ i ].useFlag == TRUE ){

  001d0	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  001d7	2b c1		 sub	 eax, ecx
  001d9	03 c3		 add	 eax, ebx
  001db	6b d0 6a	 imul	 edx, eax, 106
  001de	66 83 ba 00 00
	00 00 01	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx], 1
  001e6	0f 85 f2 01 00
	00		 jne	 $LN8@BattleButt

; 2596 : 							if( HitFontNo == battleMenuWazaFontNo[ i ] ){

  001ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  001f1	3b 04 9d 00 00
	00 00		 cmp	 eax, DWORD PTR ?battleMenuWazaFontNo@@3PAHA[ebx*4]
  001f8	0f 85 e0 01 00
	00		 jne	 $LN8@BattleButt

; 2597 : 								// ??????
; 2598 : 								char *splitPoint = petSkill[ battlePetNoBak ][ i ].memo;

  001fe	8d b2 21 00 00
	00		 lea	 esi, DWORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx+33]

; 2599 : 								// ?????
; 2600 : 								while( 1 ){
; 2601 : 									// ?????????
; 2602 : 									if( strlen( splitPoint ) > 24 ){

  00204	8b ce		 mov	 ecx, esi
  00206	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00209	0f 1f 80 00 00
	00 00		 npad	 7
$LL101@BattleButt:
  00210	8a 01		 mov	 al, BYTE PTR [ecx]
  00212	41		 inc	 ecx
  00213	84 c0		 test	 al, al
  00215	75 f9		 jne	 SHORT $LL101@BattleButt
  00217	2b ca		 sub	 ecx, edx
  00219	83 f9 18	 cmp	 ecx, 24			; 00000018H
  0021c	0f 86 87 00 00
	00		 jbe	 $LN32@BattleButt
  00222	8b 9d f4 fe ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
  00228	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL11@BattleButt:

; 2603 : 										strncpy( moji, splitPoint, 24 );

  00230	6a 18		 push	 24			; 00000018H
  00232	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00238	56		 push	 esi
  00239	50		 push	 eax
  0023a	e8 00 00 00 00	 call	 _strncpy

; 2604 : 										moji[ 24 ] = NULL;	// ??????
; 2605 : 										// ??????
; 2606 : 										if( GetStrLastByte( moji ) == 3 ){

  0023f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00245	c6 85 14 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+24], 0
  0024c	50		 push	 eax
  0024d	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00252	83 c4 10	 add	 esp, 16			; 00000010H
  00255	83 f8 03	 cmp	 eax, 3
  00258	75 0e		 jne	 SHORT $LN34@BattleButt

; 2607 : 											moji[ 23 ] = NULL;

  0025a	c6 85 13 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+23], 0

; 2608 : 											splitPoint += 23;

  00261	b8 17 00 00 00	 mov	 eax, 23			; 00000017H

; 2609 : 										}else{

  00266	eb 0c		 jmp	 SHORT $LN35@BattleButt
$LN34@BattleButt:

; 2610 : 											moji[ 24 ] = NULL;

  00268	c6 85 14 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+24], 0

; 2611 : 											splitPoint += 24;

  0026f	b8 18 00 00 00	 mov	 eax, 24			; 00000018H
$LN35@BattleButt:

; 2612 : 										}
; 2613 : 										StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 ); y += 20;

  00274	6a 00		 push	 0
  00276	03 f0		 add	 esi, eax
  00278	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0027e	50		 push	 eax
  0027f	6a 00		 push	 0
  00281	6a 01		 push	 1
  00283	57		 push	 edi
  00284	53		 push	 ebx
  00285	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0028a	8b c6		 mov	 eax, esi
  0028c	83 c4 18	 add	 esp, 24			; 00000018H
  0028f	83 c7 14	 add	 edi, 20			; 00000014H
  00292	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$LL102@BattleButt:

; 2599 : 								// ?????
; 2600 : 								while( 1 ){
; 2601 : 									// ?????????
; 2602 : 									if( strlen( splitPoint ) > 24 ){

  00295	8a 08		 mov	 cl, BYTE PTR [eax]
  00297	40		 inc	 eax
  00298	84 c9		 test	 cl, cl
  0029a	75 f9		 jne	 SHORT $LL102@BattleButt
  0029c	2b c2		 sub	 eax, edx
  0029e	83 f8 18	 cmp	 eax, 24			; 00000018H
  002a1	77 8d		 ja	 SHORT $LL11@BattleButt
  002a3	8b 9d f8 fe ff
	ff		 mov	 ebx, DWORD PTR _i$2$[ebp]
$LN32@BattleButt:

; 2614 : 									}else{
; 2615 : 										strcpy( moji, splitPoint );

  002a9	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _moji$[ebp]
  002af	2b ce		 sub	 ecx, esi
$LL61@BattleButt:
  002b1	8a 06		 mov	 al, BYTE PTR [esi]
  002b3	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  002b6	88 44 31 ff	 mov	 BYTE PTR [ecx+esi-1], al
  002ba	84 c0		 test	 al, al
  002bc	75 f3		 jne	 SHORT $LL61@BattleButt

; 2616 : 										StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 );

  002be	6a 00		 push	 0
  002c0	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  002c6	50		 push	 eax
  002c7	6a 00		 push	 0
  002c9	6a 01		 push	 1
  002cb	57		 push	 edi
  002cc	ff b5 f4 fe ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  002d2	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 2617 : 										break;
; 2618 : 									}
; 2619 : 								}
; 2620 : 								// ????????
; 2621 : 								if( mouse.onceState & MOUSE_LEFT_CRICK ){

  002d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  002dd	83 c4 18	 add	 esp, 24			; 00000018H
  002e0	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  002e7	0f 84 f1 00 00
	00		 je	 $LN8@BattleButt

; 2622 : 									// ????
; 2623 : 									if(	petSkill[ battlePetNoBak ][ i ].field != PETSKILL_FIELD_MAP ){

  002ed	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  002f4	2b c1		 sub	 eax, ecx
  002f6	03 c3		 add	 eax, ebx
  002f8	6b d0 6a	 imul	 edx, eax, 106
  002fb	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00301	66 83 ba 04 00
	00 00 02	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx+4], 2
  00309	74 2e		 je	 SHORT $LN37@BattleButt

; 2624 : #ifdef _VARY_WOLF
; 2625 : 										if(!((pet[battlePetNoBak].graNo==101428)&&(petSkill[battlePetNoBak][i].skillId==600))

  0030b	81 b8 04 00 00
	00 34 8c 01 00	 cmp	 DWORD PTR ?pet@@3PAUPET@@A[eax+4], 101428 ; 00018c34H
  00315	75 12		 jne	 SHORT $LN40@BattleButt
  00317	be 58 02 00 00	 mov	 esi, 600		; 00000258H
  0031c	66 39 b2 02 00
	00 00		 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx+2], si
  00323	0f 84 b5 00 00
	00		 je	 $LN8@BattleButt
$LN40@BattleButt:

; 2626 : 											)
; 2627 : #endif
; 2628 : 											// ??????????????
; 2629 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2630 : 											BattleSetWazaHitBox( i , 0 ) ; 

  00329	6a 00		 push	 0
  0032b	53		 push	 ebx
  0032c	e8 00 00 00 00	 call	 ?BattleSetWazaHitBox@@YAXHH@Z ; BattleSetWazaHitBox
  00331	83 c4 08	 add	 esp, 8

; 2631 : #else
; 2632 : 										BattleSetWazaHitBox( i );
; 2633 : #endif
; 2634 : 									}else{

  00334	e9 9f 00 00 00	 jmp	 $LN110@BattleButt
$LN37@BattleButt:

; 2636 : 										int j;
; 2637 : 										// ?????????????????
; 2638 : 										for( j = 0 ; j < pet[ battlePetNoBak ].maxSkill ; j++ ){

  00339	8b b0 44 00 00
	00		 mov	 esi, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  0033f	33 d2		 xor	 edx, edx
  00341	85 f6		 test	 esi, esi
  00343	7e 3b		 jle	 SHORT $LN43@BattleButt

; 2635 : 										int flag = 0;

  00345	69 c1 e6 02 00
	00		 imul	 eax, ecx, 742
  0034b	05 04 00 00 00	 add	 eax, OFFSET ?petSkill@@3PAY06UPET_SKILL@@A+4
$LL74@BattleButt:

; 2639 : 											// ????????
; 2640 : 											if( petSkill[ battlePetNoBak ][ j ].useFlag == TRUE ){

  00350	66 83 78 fc 01	 cmp	 WORD PTR [eax-4], 1
  00355	75 07		 jne	 SHORT $LN75@BattleButt

; 2641 : 												// ????
; 2642 : 												if(	petSkill[ battlePetNoBak ][ j ].field != PETSKILL_FIELD_MAP ) flag++;

  00357	66 83 38 02	 cmp	 WORD PTR [eax], 2
  0035b	74 01		 je	 SHORT $LN75@BattleButt
  0035d	42		 inc	 edx
$LN75@BattleButt:

; 2636 : 										int j;
; 2637 : 										// ?????????????????
; 2638 : 										for( j = 0 ; j < pet[ battlePetNoBak ].maxSkill ; j++ ){

  0035e	83 c0 6a	 add	 eax, 106		; 0000006aH
  00361	83 ee 01	 sub	 esi, 1
  00364	75 ea		 jne	 SHORT $LL74@BattleButt

; 2643 : 											}
; 2644 : 										}
; 2645 : 										// ??????????
; 2646 : 										if( flag > 0 ){

  00366	85 d2		 test	 edx, edx
  00368	7e 16		 jle	 SHORT $LN43@BattleButt

; 2647 : 											// ???
; 2648 : 											play_se( 220, 320, 240 );

  0036a	68 f0 00 00 00	 push	 240			; 000000f0H
  0036f	68 40 01 00 00	 push	 320			; 00000140H
  00374	68 dc 00 00 00	 push	 220			; 000000dcH
  00379	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2649 : 										}

  0037e	eb 55		 jmp	 SHORT $LN111@BattleButt
$LN43@BattleButt:

; 2650 : 										// ??????
; 2651 : 										else{
; 2652 : 											BattleButtonOff(); // ????????????

  00380	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 2653 : 											//battleMenuReturn = TRUE;
; 2654 : 											ClearBoxFlag();

  00385	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 2655 : 											// ???????????
; 2656 : 											if( bNewServer)

  0038a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00391	68 00 00 00 00	 push	 OFFSET ??_C@_07BDJJCCFL@W?$HMFF?$HMFF@
  00396	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0039c	74 07		 je	 SHORT $LN45@BattleButt

; 2657 : 												lssproto_B_send( sockfd, "W|FF|FF" );

  0039e	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  003a3	eb 05		 jmp	 SHORT $LN109@BattleButt
$LN45@BattleButt:

; 2658 : 											else
; 2659 : 												old_lssproto_B_send( sockfd, "W|FF|FF" );

  003a5	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN109@BattleButt:

; 2660 : 											// ????????
; 2661 : 											play_se( 203, 320, 240 );

  003aa	83 c4 08	 add	 esp, 8
  003ad	68 f0 00 00 00	 push	 240			; 000000f0H
  003b2	68 40 01 00 00	 push	 320			; 00000140H
  003b7	68 cb 00 00 00	 push	 203			; 000000cbH
  003bc	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2662 : 											// ????????
; 2663 : 											battleWazaTargetBak = -1;

  003c1	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak

; 2664 : 											// ??????????????
; 2665 : 											battleTargetSelectFlag = FALSE;

  003cb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0
$LN111@BattleButt:

; 2591 : 					y = pActWnd->y + 252;
; 2592 : 					// ?
; 2593 : 					for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){

  003d5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN110@BattleButt:
  003d8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
$LN8@BattleButt:
  003de	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  003e4	43		 inc	 ebx
  003e5	89 9d f8 fe ff
	ff		 mov	 DWORD PTR _i$2$[ebp], ebx
  003eb	3b 98 44 00 00
	00		 cmp	 ebx, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  003f1	0f 8c d9 fd ff
	ff		 jl	 $LL10@BattleButt
  003f7	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN9@BattleButt:

; 2666 : 										}
; 2667 : 									}
; 2668 : 								}
; 2669 : 							}
; 2670 : 						}
; 2671 : 					}
; 2672 : /*
; 2673 : #ifndef __AI
; 2674 : 					//cary 宠物的自动战斗
; 2675 : 					if( !PauseAI && AI!=AI_NONE && FALSE==battleTargetSelectFlag){
; 2676 : 						if( (BattleIntervalCnt==0 && (BattleCntDown-TimeGetTime())<=29000) || BattleIntervalCnt<TimeGetTime()){
; 2677 : 							BattleIntervalCnt = TimeGetTime()+500;
; 2678 : 							int first = -1;
; 2679 : 							int firstattack = -1;
; 2680 : 							DWORD ai = AI;
; 2681 : 							if( ai == AI_SELECT){
; 2682 : 								if( pet[ battlePetNoBak ].maxHp*3/10 > pet[ battlePetNoBak ].hp)
; 2683 : 									ai = AI_GUARD;
; 2684 : 								else
; 2685 : 									ai = AI_ATTACK;
; 2686 : 							}
; 2687 : 							for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){
; 2688 : 								if( petSkill[ battlePetNoBak ][ i ].useFlag == TRUE && 
; 2689 : 									petSkill[ battlePetNoBak ][ i ].field != PETSKILL_FIELD_MAP ){
; 2690 : 									if( first == -1)
; 2691 : 										first = i;
; 2692 : 									if( ai == AI_ATTACK){
; 2693 : 										if( petSkill[ battlePetNoBak ][ i ].skillId!=2 && firstattack==-1)
; 2694 : 											firstattack = i;
; 2695 : 										if( petSkill[ battlePetNoBak ][ i ].skillId == 1){
; 2696 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2697 : 											BattleSetWazaHitBox( i , 0 );
; 2698 : 
; 2699 : #else
; 2700 : 											BattleSetWazaHitBox( i );
; 2701 : #endif
; 2702 : 											break;
; 2703 : 										}
; 2704 : 									}else if( ai == AI_GUARD){
; 2705 : 										if( petSkill[ battlePetNoBak ][ i ].skillId == 2){
; 2706 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2707 : 											BattleSetWazaHitBox( i , 0 );
; 2708 : #else
; 2709 : 											BattleSetWazaHitBox( i );
; 2710 : #endif
; 2711 : 											break;
; 2712 : 										}
; 2713 : 									}
; 2714 : 								}
; 2715 : 							}
; 2716 : 							if( i==pet[ battlePetNoBak ].maxSkill){
; 2717 : 								if( ai==AI_ATTACK && firstattack!=-1)
; 2718 : 									first = firstattack;
; 2719 : 								if( first == -1){
; 2720 : 									// ??????????????
; 2721 : 									battleTargetSelectFlag = TRUE;
; 2722 : 									// ???????????
; 2723 : 									DeathAction( pActWnd );
; 2724 : 									pActWnd = NULL;
; 2725 : 									// ?????????
; 2726 : 									ClearBattleButton();
; 2727 : 									// ?????
; 2728 : 									//play_se( 217, 320, 240 );
; 2729 : 								}else
; 2730 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2731 : 									BattleSetWazaHitBox( first , 0 );
; 2732 : #else
; 2733 : 									BattleSetWazaHitBox( first );
; 2734 : #endif
; 2735 : 							}
; 2736 : 						}
; 2737 : 					}
; 2738 : #endif
; 2739 : */
; 2740 : 					// ?????????
; 2741 : 					if( pActWnd != NULL ){

  003fd	85 d2		 test	 edx, edx
  003ff	0f 84 64 01 00
	00		 je	 $LN107@BattleButt

; 2742 : 						// ?
; 2743 : 						x = pActWnd->x + 40;
; 2744 : 						y = pActWnd->y + 32;

  00405	8b 7a 1c	 mov	 edi, DWORD PTR [edx+28]

; 2745 : 						// ??????
; 2746 : 						if( pet[ battlePetNoBak ].freeName[ 0 ] != NULL )
; 2747 : 							CenteringStr( pet[ battlePetNoBak ].freeName, moji, PET_NAME_LEN );
; 2748 : 						else
; 2749 : 							CenteringStr( pet[ battlePetNoBak ].name, moji, PET_NAME_LEN );
; 2750 : 							StockFontBuffer( x - 28, y, FONT_PRIO_FRONT, 0, moji, 0 ); y += 26; x += 18;

  00408	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0040e	8b 5a 18	 mov	 ebx, DWORD PTR [edx+24]
  00411	83 c7 20	 add	 edi, 32			; 00000020H
  00414	69 c9 78 0b 00
	00		 imul	 ecx, ecx, 2936
  0041a	ba 65 00 00 00	 mov	 edx, OFFSET ?pet@@3PAUPET@@A+101
  0041f	6a 10		 push	 16			; 00000010H
  00421	50		 push	 eax
  00422	b8 54 00 00 00	 mov	 eax, OFFSET ?pet@@3PAUPET@@A+84
  00427	89 9d f8 fe ff
	ff		 mov	 DWORD PTR tv980[ebp], ebx
  0042d	80 b9 65 00 00
	00 00		 cmp	 BYTE PTR ?pet@@3PAUPET@@A[ecx+101], 0
  00434	0f 45 c2	 cmovne	 eax, edx
  00437	03 c1		 add	 eax, ecx
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  0043f	6a 00		 push	 0
  00441	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00447	50		 push	 eax
  00448	6a 00		 push	 0
  0044a	6a 01		 push	 1
  0044c	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  0044f	57		 push	 edi
  00450	50		 push	 eax
  00451	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 2751 : 						// ?
; 2752 : 						for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){

  00456	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  0045c	33 f6		 xor	 esi, esi
  0045e	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  00464	83 c4 24	 add	 esp, 36			; 00000024H
  00467	83 c7 1a	 add	 edi, 26			; 0000001aH
  0046a	39 b0 44 00 00
	00		 cmp	 DWORD PTR ?pet@@3PAUPET@@A[eax+68], esi
  00470	0f 8e c8 00 00
	00		 jle	 $LN17@BattleButt
  00476	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL18@BattleButt:

; 2753 : 							// ????????
; 2754 : 							if( petSkill[ battlePetNoBak ][ i ].useFlag == TRUE ){

  00480	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  00487	2b c1		 sub	 eax, ecx
  00489	03 c6		 add	 eax, esi
  0048b	6b c0 6a	 imul	 eax, eax, 106
  0048e	66 83 b8 00 00
	00 00 01	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax], 1
  00496	0f 85 8c 00 00
	00		 jne	 $LN50@BattleButt

; 2755 : 								int color = FONT_PAL_GRAY;
; 2756 : 								//cary
; 2757 : 								sprintf( moji,"       %-22s",petSkill[ battlePetNoBak ][ i ].name );

  0049c	8d 80 08 00 00
	00		 lea	 eax, DWORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+8]
  004a2	bb 07 00 00 00	 mov	 ebx, 7
  004a7	50		 push	 eax
  004a8	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  004ae	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DBNACIMP@?5?5?5?5?5?5?5?$CF?922s@
  004b3	50		 push	 eax
  004b4	e8 00 00 00 00	 call	 _sprintf

; 2758 : 								//end
; 2759 : 								// ????
; 2760 : 								if(	petSkill[ battlePetNoBak ][ i ].field != PETSKILL_FIELD_MAP ){

  004b9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  004bf	83 c4 0c	 add	 esp, 12			; 0000000cH
  004c2	8d 04 cd 00 00
	00 00		 lea	 eax, DWORD PTR [ecx*8]
  004c9	2b c1		 sub	 eax, ecx
  004cb	03 c6		 add	 eax, esi
  004cd	6b d0 6a	 imul	 edx, eax, 106
  004d0	66 83 ba 04 00
	00 00 02	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx+4], 2
  004d8	74 22		 je	 SHORT $LN52@BattleButt

; 2761 : #ifdef _VARY_WOLF
; 2762 : 									if(!((pet[battlePetNoBak].graNo==101428)&&(petSkill[battlePetNoBak][i].skillId==600))

  004da	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  004e0	81 b8 04 00 00
	00 34 8c 01 00	 cmp	 DWORD PTR ?pet@@3PAUPET@@A[eax+4], 101428 ; 00018c34H
  004ea	75 0e		 jne	 SHORT $LN53@BattleButt
  004ec	b8 58 02 00 00	 mov	 eax, 600		; 00000258H
  004f1	66 39 82 02 00
	00 00		 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[edx+2], ax
  004f8	74 02		 je	 SHORT $LN52@BattleButt
$LN53@BattleButt:

; 2763 : 										)
; 2764 : #endif
; 2765 : 										color = FONT_PAL_WHITE;

  004fa	33 db		 xor	 ebx, ebx
$LN52@BattleButt:

; 2766 : 								}
; 2767 : 								battleMenuWazaFontNo[ i ] = StockFontBuffer( x - 43, y, FONT_PRIO_FRONT, color, moji, 2 );

  004fc	6a 02		 push	 2
  004fe	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00504	50		 push	 eax
  00505	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv980[ebp]
  0050b	53		 push	 ebx
  0050c	6a 01		 push	 1
  0050e	83 c0 0f	 add	 eax, 15			; 0000000fH
  00511	57		 push	 edi
  00512	50		 push	 eax
  00513	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00518	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  0051e	83 c4 18	 add	 esp, 24			; 00000018H
  00521	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?battleMenuWazaFontNo@@3PAHA[esi*4], eax
$LN50@BattleButt:

; 2751 : 						// ?
; 2752 : 						for( i = 0 ; i < pet[ battlePetNoBak ].maxSkill ; i++ ){

  00528	69 c1 78 0b 00
	00		 imul	 eax, ecx, 2936
  0052e	46		 inc	 esi

; 2768 : 							}
; 2769 : 							y += 25;

  0052f	83 c7 19	 add	 edi, 25			; 00000019H
  00532	3b b0 44 00 00
	00		 cmp	 esi, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  00538	0f 8c 42 ff ff
	ff		 jl	 $LL18@BattleButt
$LN17@BattleButt:

; 2770 : 						}
; 2771 : 						// ?
; 2772 : 						y = pActWnd->y + 330;

  0053e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A

; 2773 : 						// ?????????
; 2774 : 						battleMenuWazaFontNo[ 7 ] = StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, y, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  00544	6a 02		 push	 2
  00546	68 ba 65 00 00	 push	 26042			; 000065baH
  0054b	6a 69		 push	 105			; 00000069H
  0054d	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00550	05 4a 01 00 00	 add	 eax, 330		; 0000014aH
  00555	50		 push	 eax
  00556	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00559	ff 70 14	 push	 DWORD PTR [eax+20]
  0055c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00561	83 c4 14	 add	 esp, 20			; 00000014H
  00564	a3 1c 00 00 00	 mov	 DWORD PTR ?battleMenuWazaFontNo@@3PAHA+28, eax
$LN107@BattleButt:
  00569	5f		 pop	 edi
  0056a	5b		 pop	 ebx
$LN47@BattleButt:

; 2775 : 					}
; 2776 : 				}
; 2777 : 			}
; 2778 : 		}
; 2779 : 	}
; 2780 : }

  0056b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0056e	33 cd		 xor	 ecx, ebp
  00570	5e		 pop	 esi
  00571	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00576	8b e5		 mov	 esp, ebp
  00578	5d		 pop	 ebp
  00579	c3		 ret	 0
?BattleButtonWaza@@YAXXZ ENDP				; BattleButtonWaza
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonEscape@@YAXXZ
_TEXT	SEGMENT
?BattleButtonEscape@@YAXXZ PROC				; BattleButtonEscape, COMDAT

; 2012 : 	if( HitDispNo == battleButtonDispNo[ 7 ] && battleButtonFlag[ 7 ] == FALSE ){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00005	3b 05 1c 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+28
  0000b	0f 85 c5 00 00
	00		 jne	 $LN2@BattleButt
  00011	83 3d 1c 00 00
	00 00		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+28, 0
  00018	0f 85 b8 00 00
	00		 jne	 $LN2@BattleButt

; 2013 : 
; 2014 : 		if( mouse.onceState & MOUSE_LEFT_CRICK ){

  0001e	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00025	0f 84 8b 00 00
	00		 je	 $LN5@BattleButt

; 2015 : 			if (NoEscFlag == TRUE) {

  0002b	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?NoEscFlag@@3HA, 1 ; NoEscFlag
  00032	75 11		 jne	 SHORT $LN4@BattleButt

; 2016 : 
; 2017 : 				play_se(220, 320, 240);

  00034	68 f0 00 00 00	 push	 240			; 000000f0H
  00039	68 40 01 00 00	 push	 320			; 00000140H
  0003e	68 dc 00 00 00	 push	 220			; 000000dcH

; 2018 : 			} 

  00043	eb 69		 jmp	 SHORT $LN9@BattleButt
$LN4@BattleButt:

; 2019 : 			else
; 2020 : 			{
; 2021 : 				BattleButtonOff();

  00045	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 2022 : 				battleButtonFlag[7] = TRUE;
; 2023 : 				// ??
; 2024 : 				if (bNewServer)

  0004a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_01DDCIFGEA@E@
  00056	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0005c	c7 05 1c 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+28, 1
  00066	74 07		 je	 SHORT $LN6@BattleButt

; 2025 : 					lssproto_B_send(sockfd, "E");

  00068	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  0006d	eb 05		 jmp	 SHORT $LN10@BattleButt
$LN6@BattleButt:

; 2026 : 				else
; 2027 : 					old_lssproto_B_send(sockfd, "E");

  0006f	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN10@BattleButt:

; 2028 : 				// ??????????
; 2029 : 				battlePlayerEscFlag = TRUE;

  00074	83 c4 08	 add	 esp, 8
  00077	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battlePlayerEscFlag@@3HA, 1 ; battlePlayerEscFlag

; 2030 : 				// ??????
; 2031 : 				battleMenuReturn = TRUE;

  00081	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1

; 2032 : 				// ????????
; 2033 : 				battleButtonBak = -1;

  0008b	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak@@3HA, -1 ; battleButtonBak

; 2034 : 				// ????????
; 2035 : 				battleButtonBak2 = -1;

  00095	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1

; 2036 : 				// ????????
; 2037 : 				play_se(203, 320, 240);

  0009f	68 f0 00 00 00	 push	 240			; 000000f0H
  000a4	68 40 01 00 00	 push	 320			; 00000140H
  000a9	68 cb 00 00 00	 push	 203			; 000000cbH
$LN9@BattleButt:

; 2038 : 			}
; 2039 : 		}
; 2040 : 		// ??????
; 2041 : 		strcpy( OneLineInfoStr, "탈출。");

  000ae	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@BattleButt:
  000b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@
  000bb	a3 00 00 00 00	 mov	 DWORD PTR ?OneLineInfoStr@@3PADA, eax
  000c0	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@+4
  000c6	66 a3 04 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+4, ax
  000cc	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06DOILANO@?E?$LL?C?b?$KB?$KD@+6
  000d1	a2 06 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+6, al
$LN2@BattleButt:

; 2042 : 	}
; 2043 : }

  000d6	c3		 ret	 0
?BattleButtonEscape@@YAXXZ ENDP				; BattleButtonEscape
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonPPLSKILL@@YAXXZ
_TEXT	SEGMENT
tv2585 = -784						; size = 4
tv2553 = -784						; size = 4
_use_color$1$ = -780					; size = 4
tv2598 = -780						; size = 4
tv2614 = -776						; size = 4
tv2597 = -776						; size = 4
tv2551 = -776						; size = 4
_buf$ = -772						; size = 256
_msg$ = -516						; size = 256
_msg2$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleButtonPPLSKILL@@YAXXZ PROC			; BattleButtonPPLSKILL, COMDAT

; 1757 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 10 03 00
	00		 sub	 esp, 784		; 00000310H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	f7 05 00 00 00
	00 00 00 00 86	 test	 DWORD PTR ?MenuToggleFlag@@3IA, -2046820352 ; MenuToggleFlag, 86000000H

; 1758 : 	if ( MenuToggleFlag & JOY_ESC || MenuToggleFlag & JOY_CTRL_E || MenuToggleFlag & JOY_CTRL_A) {

  0001d	0f 85 7a 0a 00
	00		 jne	 $LN34@BattleButt

; 1759 : 		//play_se( 220, 320, 240 );
; 1760 : 		return; 
; 1761 : 	}
; 1762 : 	char msg[256] = "";

  00023	68 00 01 00 00	 push	 256			; 00000100H
  00028	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0002e	6a 00		 push	 0
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _memset

; 1763 : 	char buf[256];
; 1764 : 	char msg2[256];
; 1765 : 	if( HitDispNo == battleButtonDispNo[ 9 ] ){

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0003b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0003e	3b 05 24 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+36
  00044	75 7d		 jne	 SHORT $LN142@BattleButt

; 1766 : 		if( mouse.onceState & MOUSE_LEFT_CRICK ){

  00046	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0004d	74 5a		 je	 SHORT $LN141@BattleButt

; 1767 : 			play_se( 217, 320, 240 );

  0004f	68 f0 00 00 00	 push	 240			; 000000f0H
  00054	68 40 01 00 00	 push	 320			; 00000140H
  00059	68 d9 00 00 00	 push	 217			; 000000d9H
  0005e	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1768 : 			DeathAction( pActWnd );

  00063	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  00069	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0006e	83 c4 10	 add	 esp, 16			; 00000010H

; 1769 : 			pActWnd = NULL;

  00071	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0

; 1770 : 			battleTargetSelectFlag = FALSE;

  0007b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0

; 1771 : 			BattleCmdNo = -1;

  00085	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?BattleCmdNo@@3HA, -1 ; BattleCmdNo

; 1772 : 			ClearBattleButton();

  0008f	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 1773 : 			ClearBoxFlag();

  00094	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 1774 : 			//MenuToggleFlag &= ~JOY_CTRL_E;
; 1775 : 			//MenuToggleFlag &= ~JOY_CTRL_A;
; 1776 : 			( wonflag == 0 ) ? wonflag = 1 : wonflag = 0  ; 

  00099	33 c0		 xor	 eax, eax
  0009b	39 05 00 00 00
	00		 cmp	 DWORD PTR ?wonflag@@3HA, eax ; wonflag
  000a1	0f 94 c0	 sete	 al
  000a4	a3 00 00 00 00	 mov	 DWORD PTR ?wonflag@@3HA, eax ; wonflag
$LN141@BattleButt:

; 1777 : 		}
; 1778 : 		strcpy( OneLineInfoStr, "직업기능");

  000a9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08LCIHGOIJ@?A?w?$LO?w?$LB?b?$LE?I@
  000b1	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08LCIHGOIJ@?A?w?$LO?w?$LB?b?$LE?I@+8
  000b6	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  000be	a2 08 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+8, al
$LN142@BattleButt:

; 1779 : 	}
; 1780 : 	if ( wonflag == 1 ) {

  000c3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?wonflag@@3HA, 1 ; wonflag
  000ca	0f 85 cd 09 00
	00		 jne	 $LN34@BattleButt

; 1781 : 		for ( int i = 0 ; i < 3 ; i ++ ) {

  000d0	56		 push	 esi
  000d1	57		 push	 edi
  000d2	33 ff		 xor	 edi, edi
  000d4	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  000d9	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@BattleButt:

; 1782 : #ifdef _READ16BITBMP
; 1783 : 			if(g_bUseAlpha){
; 1784 : 				if( MakeHitBox(  278 , 11 + i	 * 78, 308  , 89 + i * 78 , DISP_PRIO_IME3 ) == TRUE ) {
; 1785 : 					if( mouse.onceState & MOUSE_LEFT_CRICK ) {
; 1786 : 						SkillWnd2 = i ; 
; 1787 : 						play_se( 217, 320, 240 );
; 1788 : 						break;
; 1789 : 					}
; 1790 : 				}
; 1791 : 			}
; 1792 : 			else
; 1793 : #endif
; 1794 : 			if( MakeHitBox(  276 , 10 + i * 79, 306  , 88 + i * 79 , DISP_PRIO_IME3 ) == TRUE ) {

  000e0	6a 69		 push	 105			; 00000069H
  000e2	8d 46 4e	 lea	 eax, DWORD PTR [esi+78]
  000e5	50		 push	 eax
  000e6	68 32 01 00 00	 push	 306			; 00000132H
  000eb	56		 push	 esi
  000ec	68 14 01 00 00	 push	 276			; 00000114H
  000f1	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  000f6	83 c4 14	 add	 esp, 20			; 00000014H
  000f9	83 f8 01	 cmp	 eax, 1
  000fc	75 08		 jne	 SHORT $LN2@BattleButt

; 1795 : 				if( mouse.onceState & MOUSE_LEFT_CRICK ) {

  000fe	84 05 2c 00 00
	00		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, al
  00104	75 0e		 jne	 SHORT $LN99@BattleButt
$LN2@BattleButt:

; 1781 : 		for ( int i = 0 ; i < 3 ; i ++ ) {

  00106	83 c6 4f	 add	 esi, 79			; 0000004fH
  00109	47		 inc	 edi
  0010a	81 fe f7 00 00
	00		 cmp	 esi, 247		; 000000f7H
  00110	7c ce		 jl	 SHORT $LL4@BattleButt
  00112	eb 1d		 jmp	 SHORT $LN138@BattleButt
$LN99@BattleButt:

; 1796 : 					SkillWnd2 = i ; 
; 1797 : 					play_se( 217, 320, 240 );

  00114	68 f0 00 00 00	 push	 240			; 000000f0H
  00119	68 40 01 00 00	 push	 320			; 00000140H
  0011e	68 d9 00 00 00	 push	 217			; 000000d9H
  00123	89 3d 00 00 00
	00		 mov	 DWORD PTR ?SkillWnd2@@3HA, edi ; SkillWnd2
  00129	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0012e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN138@BattleButt:

; 1798 : 					break;
; 1799 : 				}
; 1800 : 			}
; 1801 : 		}
; 1802 : 		StockDispBuffer( 159, 225 , DISP_PRIO_MENU, CG_BATTTLE_SKILLCHOICE, 1 );

  00131	53		 push	 ebx
  00132	6a 01		 push	 1
  00134	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_BATTTLE_SKILLCHOICE@@3HA ; CG_BATTTLE_SKILLCHOICE
  0013a	6a 68		 push	 104			; 00000068H
  0013c	68 e1 00 00 00	 push	 225			; 000000e1H
  00141	68 9f 00 00 00	 push	 159			; 0000009fH
  00146	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1803 : 		extern int BattleSkill[20];
; 1804 : 		extern int AssitSkill[20];
; 1805 : 		extern int AdvanceSkill[20];
; 1806 : 		int x = 26 , y = 5 ; 
; 1807 : 			for ( int i = 0 ; i < 4 ; i ++ ) {
; 1808 : 				for ( int j = 0 ; j < 4 ; j ++ ) {
; 1809 : //					StockDispBuffer( x + 138 + j * 60 , y + 228 + i * 72 , DISP_PRIO_IME3, CG_FIELD_SKILL_TILE , 2 );
; 1810 : 				}
; 1811 : 			}
; 1812 : 
; 1813 : 		switch ( SkillWnd2 ) {

  0014b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SkillWnd2@@3HA ; SkillWnd2
  00150	83 c4 14	 add	 esp, 20			; 00000014H
  00153	83 e8 00	 sub	 eax, 0
  00156	0f 84 ae 05 00
	00		 je	 $LN40@BattleButt
  0015c	83 e8 01	 sub	 eax, 1
  0015f	0f 84 a3 02 00
	00		 je	 $LN52@BattleButt
  00165	83 e8 01	 sub	 eax, 1
  00168	0f 85 50 08 00
	00		 jne	 $LN14@BattleButt

; 1919 : 		case 2:
; 1920 : #ifdef _READ16BITBMP
; 1921 : 			if(g_bUseAlpha) StockDispBuffer( 168, 223, DISP_PRIO_IME3, CG_FIELD_SKILL_ADVSK , 0 );
; 1922 : 			else
; 1923 : #endif
; 1924 : 			StockDispBuffer( 165, 221, DISP_PRIO_IME3, CG_FIELD_SKILL_ADVSK , 0 );

  0016e	50		 push	 eax
  0016f	68 f3 66 00 00	 push	 26355			; 000066f3H
  00174	6a 69		 push	 105			; 00000069H
  00176	68 dd 00 00 00	 push	 221			; 000000ddH
  0017b	68 a5 00 00 00	 push	 165			; 000000a5H
  00180	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00185	83 c4 14	 add	 esp, 20			; 00000014H
  00188	bb 67 00 00 00	 mov	 ebx, 103		; 00000067H
  0018d	33 c0		 xor	 eax, eax
  0018f	89 9d f8 fc ff
	ff		 mov	 DWORD PTR tv2597[ebp], ebx
  00195	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv2598[ebp], eax
  0019b	0f 1f 44 00 00	 npad	 5
$LL27@BattleButt:

; 1926 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  001a0	bf 32 00 00 00	 mov	 edi, 50			; 00000032H
  001a5	8b f0		 mov	 esi, eax
  001a7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL30@BattleButt:

; 1927 : 					if ( AdvanceSkill [ j + i * 4 ] == -1 ) 

  001b0	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  001b6	83 f9 ff	 cmp	 ecx, -1
  001b9	0f 84 20 02 00
	00		 je	 $LN25@BattleButt

; 1928 : 						break;
; 1929 : 					if ( profession_skill[ AdvanceSkill [ j + i * 4 ] ].useFlag == 0 )

  001bf	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  001c2	c1 e0 06	 shl	 eax, 6
  001c5	66 83 b8 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax], 0
  001cd	75 19		 jne	 SHORT $LN123@BattleButt

; 1930 : 						StockDispBuffer ( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , CG_BTL_BUTTON_CROSS , 0 ) ;

  001cf	6a 00		 push	 0
  001d1	68 1d 62 00 00	 push	 25117			; 0000621dH
  001d6	6a 6a		 push	 106			; 0000006aH
  001d8	53		 push	 ebx
  001d9	57		 push	 edi
  001da	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001df	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  001e5	83 c4 14	 add	 esp, 20			; 00000014H
$LN123@BattleButt:

; 1931 : 					//StockDispBuffer( x + 138 + j * 48 , y + 228 + i * 52 , DISP_PRIO_IME3, CG_FIELD_SKILL_TILE , 0 );
; 1932 : 					AdvanceSkillBtn [ j + i * 4 ] = StockDispBuffer( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , profession_skill[ AdvanceSkill [ j + i * 4 ] ].icon  , 2 );

  001e8	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  001eb	c1 e0 06	 shl	 eax, 6
  001ee	6a 02		 push	 2
  001f0	ff b0 b4 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+180]
  001f6	6a 6a		 push	 106			; 0000006aH
  001f8	53		 push	 ebx
  001f9	57		 push	 edi
  001fa	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001ff	89 86 00 00 00
	00		 mov	 DWORD PTR ?AdvanceSkillBtn@@3PAHA[esi], eax

; 1933 : 					sprintf ( msg2 , "%8s" , profession_skill[AdvanceSkill [ j + i * 4 ]].name );

  00205	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  0020b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0020e	c1 e0 06	 shl	 eax, 6
  00211	05 08 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+8
  00216	50		 push	 eax
  00217	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0021d	68 00 00 00 00	 push	 OFFSET ??_C@_03GHDNOBPC@?$CF8s@
  00222	50		 push	 eax
  00223	e8 00 00 00 00	 call	 _sprintf

; 1934 : 					StockFontBuffer( x + j * 60 , y + 110 + i * 57 , FONT_PRIO_FRONT, FONT_PAL_WHITE, msg2, 0 );

  00228	6a 00		 push	 0
  0022a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00230	50		 push	 eax
  00231	6a 00		 push	 0
  00233	6a 01		 push	 1
  00235	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00238	50		 push	 eax
  00239	8d 47 e8	 lea	 eax, DWORD PTR [edi-24]
  0023c	50		 push	 eax
  0023d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1935 : 					if ( HitDispNo == AdvanceSkillBtn [ j + i * 4 ] ){ 

  00242	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00247	83 c4 38	 add	 esp, 56			; 00000038H
  0024a	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR ?AdvanceSkillBtn@@3PAHA[esi]
  00250	0f 85 0a 01 00
	00		 jne	 $LN67@BattleButt

; 1936 : 						
; 1937 : 						int use_color = 0;
; 1938 : 						if( p_party[ BattleMyNo ]->mp >= profession_skill[AdvanceSkill [ j + i * 4 ]].costmp && profession_skill[AdvanceSkill [ j + i * 4 ]].costmp != 0 

  00256	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  0025c	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0025f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00264	c1 e1 06	 shl	 ecx, 6
  00267	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0026e	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  00274	39 90 84 00 00
	00		 cmp	 DWORD PTR [eax+132], edx
  0027a	7c 08		 jl	 SHORT $LN68@BattleButt
  0027c	85 d2		 test	 edx, edx
  0027e	74 04		 je	 SHORT $LN68@BattleButt

; 1939 : 							){
; 1940 : 							use_color = FONT_PAL_WHITE;

  00280	33 db		 xor	 ebx, ebx

; 1941 : 						}else{

  00282	eb 05		 jmp	 SHORT $LN69@BattleButt
$LN68@BattleButt:

; 1942 : 							use_color = FONT_PAL_GRAY;									

  00284	bb 07 00 00 00	 mov	 ebx, 7
$LN69@BattleButt:

; 1943 : 						}
; 1944 : #ifdef _PROFESSION_ADDSKILL
; 1945 : 					//	if ( profession_skill[ AdvanceSkill [ j + i * 4 ] ].skillId == 2 )
; 1946 : 					//		use_color = FONT_PAL_WHITE; //针针相对不做mp限制
; 1947 : #endif			
; 1948 : 						sprintf ( msg2 , "%s" , profession_skill[AdvanceSkill [ j + i * 4 ]].name );

  00289	8d 81 08 00 00
	00		 lea	 eax, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+8]
  0028f	50		 push	 eax
  00290	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00296	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  0029b	50		 push	 eax
  0029c	e8 00 00 00 00	 call	 _sprintf

; 1949 : 						StockFontBuffer( 20, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );

  002a1	6a 00		 push	 0
  002a3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  002a9	50		 push	 eax
  002aa	53		 push	 ebx
  002ab	6a 01		 push	 1
  002ad	68 38 01 00 00	 push	 312			; 00000138H
  002b2	6a 14		 push	 20			; 00000014H
  002b4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1950 : 
; 1951 : 						sprintf( msg , "  %d％", profession_skill[AdvanceSkill [ j + i * 4 ]].skill_level ) ; 

  002b9	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  002bf	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002c2	c1 e0 06	 shl	 eax, 6
  002c5	ff b0 bc 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+188]
  002cb	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  002d1	68 00 00 00 00	 push	 OFFSET ??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@
  002d6	50		 push	 eax
  002d7	e8 00 00 00 00	 call	 _sprintf

; 1952 : 						StockFontBuffer( 85, 310, FONT_PRIO_FRONT, use_color, msg, 0 );

  002dc	6a 00		 push	 0
  002de	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  002e4	50		 push	 eax
  002e5	53		 push	 ebx
  002e6	6a 01		 push	 1
  002e8	68 36 01 00 00	 push	 310			; 00000136H
  002ed	6a 55		 push	 85			; 00000055H
  002ef	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1953 : 						
; 1954 : 						sprintf ( msg2 , "(소비하다MP:%d)" , profession_skill[AdvanceSkill [ j + i * 4 ]].costmp );

  002f4	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  002fa	83 c4 48	 add	 esp, 72			; 00000048H
  002fd	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00300	c1 e0 06	 shl	 eax, 6
  00303	ff b0 b8 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+184]
  00309	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0030f	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@
  00314	50		 push	 eax
  00315	e8 00 00 00 00	 call	 _sprintf

; 1955 : 						StockFontBuffer( 170, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );

  0031a	6a 00		 push	 0
  0031c	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00322	50		 push	 eax
  00323	53		 push	 ebx
  00324	6a 01		 push	 1
  00326	68 38 01 00 00	 push	 312			; 00000138H
  0032b	68 aa 00 00 00	 push	 170			; 000000aaH
  00330	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1956 : 
; 1957 : 						sprintf( msg , "%s" , profession_skill[AdvanceSkill [ j + i * 4 ]].memo ) ; 

  00335	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  0033b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0033e	c1 e0 06	 shl	 eax, 6
  00341	05 5d 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+93
  00346	50		 push	 eax
  00347	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0034d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 _sprintf
  00358	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0035d	83 c4 30	 add	 esp, 48			; 00000030H
$LN67@BattleButt:

; 1958 : 					}
; 1959 : 					if( mouse.onceState & MOUSE_LEFT_CRICK_UP ) {

  00360	f6 05 2c 00 00
	00 04		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 4
  00367	74 5e		 je	 SHORT $LN28@BattleButt

; 1960 : 						if ( HitDispNo == AdvanceSkillBtn [ j + i * 4 ] && profession_skill[ AdvanceSkill [ j + i * 4 ] ].useFlag != 0 ) {

  00369	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR ?AdvanceSkillBtn@@3PAHA[esi]
  0036f	75 56		 jne	 SHORT $LN28@BattleButt
  00371	8b 96 00 00 00
	00		 mov	 edx, DWORD PTR ?AdvanceSkill@@3PAHA[esi]
  00377	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  0037a	c1 e1 06	 shl	 ecx, 6
  0037d	66 83 b9 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx], 0
  00385	74 40		 je	 SHORT $LN28@BattleButt

; 1961 : 							if( p_party[ BattleMyNo ]->mp >= profession_skill[AdvanceSkill [ j + i * 4 ]].costmp && profession_skill[AdvanceSkill [ j + i * 4 ]].costmp != 0 

  00387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0038c	8b 99 b8 00 00
	00		 mov	 ebx, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  00392	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00399	39 98 84 00 00
	00		 cmp	 DWORD PTR [eax+132], ebx
  0039f	7c 26		 jl	 SHORT $LN28@BattleButt
  003a1	85 db		 test	 ebx, ebx
  003a3	74 22		 je	 SHORT $LN28@BattleButt

; 1962 : 								){																					
; 1963 : 								wonflag = 0 ; 
; 1964 : 								prouseskill = AdvanceSkill [ j + i * 4  ]; 
; 1965 : 								BattleSetWazaHitBox( profession_skill[AdvanceSkill [ j + i * 4 ] ].target , 1) ; 

  003a5	0f bf 81 04 00
	00 00		 movsx	 eax, WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+4]
  003ac	6a 01		 push	 1
  003ae	50		 push	 eax
  003af	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wonflag@@3HA, 0 ; wonflag
  003b9	89 15 00 00 00
	00		 mov	 DWORD PTR ?prouseskill@@3HA, edx ; prouseskill
  003bf	e8 00 00 00 00	 call	 ?BattleSetWazaHitBox@@YAXHH@Z ; BattleSetWazaHitBox
  003c4	83 c4 08	 add	 esp, 8
$LN28@BattleButt:

; 1926 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  003c7	8b 9d f8 fc ff
	ff		 mov	 ebx, DWORD PTR tv2597[ebp]
  003cd	83 c7 3c	 add	 edi, 60			; 0000003cH
  003d0	83 c6 04	 add	 esi, 4
  003d3	81 ff 22 01 00
	00		 cmp	 edi, 290		; 00000122H
  003d9	0f 8c d1 fd ff
	ff		 jl	 $LL30@BattleButt
$LN25@BattleButt:

; 1925 : 			for ( int i = 0 ; i < 4 ; i ++ ) {

  003df	8b 85 f4 fc ff
	ff		 mov	 eax, DWORD PTR tv2598[ebp]
  003e5	83 c3 39	 add	 ebx, 57			; 00000039H
  003e8	83 c0 10	 add	 eax, 16			; 00000010H
  003eb	89 9d f8 fc ff
	ff		 mov	 DWORD PTR tv2597[ebp], ebx
  003f1	89 85 f4 fc ff
	ff		 mov	 DWORD PTR tv2598[ebp], eax
  003f7	81 fb 4b 01 00
	00		 cmp	 ebx, 331		; 0000014bH
  003fd	0f 8c 9d fd ff
	ff		 jl	 $LL27@BattleButt

; 1966 : 							}
; 1967 : #ifdef _PROFESSION_ADDSKILL
; 1968 : 					//		else if ( profession_skill[ AdvanceSkill [ j + i * 4 ] ].skillId == 2 && profession_skill[AdvanceSkill [ j + i * 4 ]].costmp == 0 ) { //针针相对不做mp限制
; 1969 : 					//			wonflag = 0 ; 
; 1970 : 					//			BattleSetWazaHitBox( profession_skill[AdvanceSkill [ j + i * 4 ] ].target , 1) ; 
; 1971 : 					//			prouseskill = AdvanceSkill [ j + i * 4  ];  
; 1972 : 					//		}
; 1973 : #endif
; 1974 : 						}
; 1975 : 					}
; 1976 : 				}
; 1977 : 			}
; 1978 : 			break;

  00403	e9 b6 05 00 00	 jmp	 $LN14@BattleButt
$LN52@BattleButt:

; 1858 : 								wonflag = 0 ; 
; 1859 : 								prouseskill = AssitSkill [ j + i * 4 ] ; 
; 1860 : 								BattleSetWazaHitBox( profession_skill[AssitSkill [ j + i * 4 ] ].target , 1) ; 
; 1861 : 							}
; 1862 : 						}
; 1863 : 					}
; 1864 : 				}
; 1865 : 			}
; 1866 : 			break;
; 1867 : 		case 1 :
; 1868 : #ifdef _READ16BITBMP
; 1869 : 			if(g_bUseAlpha) StockDispBuffer( 168, 223, DISP_PRIO_IME3, CG_FIELD_SKILL_BATTLE , 0 );
; 1870 : 			else
; 1871 : #endif
; 1872 : 			StockDispBuffer( 165, 221, DISP_PRIO_IME3, CG_FIELD_SKILL_BATTLE , 0 );

  00408	6a 00		 push	 0
  0040a	68 f5 66 00 00	 push	 26357			; 000066f5H
  0040f	6a 69		 push	 105			; 00000069H
  00411	68 dd 00 00 00	 push	 221			; 000000ddH
  00416	68 a5 00 00 00	 push	 165			; 000000a5H
  0041b	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00420	83 c4 14	 add	 esp, 20			; 00000014H
  00423	33 c0		 xor	 eax, eax
  00425	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv2585[ebp], eax
  0042b	8d 58 67	 lea	 ebx, DWORD PTR [eax+103]
  0042e	66 90		 npad	 2
$LL21@BattleButt:

; 1874 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  00430	bf 32 00 00 00	 mov	 edi, 50			; 00000032H
  00435	8b f0		 mov	 esi, eax
  00437	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL24@BattleButt:

; 1875 : 					if ( BattleSkill [ j + i * 4 ] == -1 ) 

  00440	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00446	83 f8 ff	 cmp	 eax, -1
  00449	0f 84 98 02 00
	00		 je	 $LN19@BattleButt

; 1876 : 						break;
; 1877 : 					if ( profession_skill[ BattleSkill [ j + i * 4 ] ].useFlag == 0 )

  0044f	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00452	c1 e1 06	 shl	 ecx, 6
  00455	66 83 b9 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx], 0
  0045d	75 19		 jne	 SHORT $LN124@BattleButt

; 1878 : 						StockDispBuffer ( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , CG_BTL_BUTTON_CROSS , 0 ) ;

  0045f	6a 00		 push	 0
  00461	68 1d 62 00 00	 push	 25117			; 0000621dH
  00466	6a 6a		 push	 106			; 0000006aH
  00468	53		 push	 ebx
  00469	57		 push	 edi
  0046a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0046f	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00475	83 c4 14	 add	 esp, 20			; 00000014H
$LN124@BattleButt:

; 1879 : 					if ( profession_skill[ BattleSkill [ j + i * 4 ] ].skillId == 40 && p_party[ BattleMyNo ]->hp <= 10 )

  00478	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0047b	c1 e1 06	 shl	 ecx, 6
  0047e	66 83 b9 02 00
	00 00 28	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+2], 40 ; 00000028H
  00486	75 2c		 jne	 SHORT $LN55@BattleButt
  00488	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0048e	8b 0c 8d 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  00495	83 79 78 0a	 cmp	 DWORD PTR [ecx+120], 10	; 0000000aH
  00499	7f 19		 jg	 SHORT $LN55@BattleButt

; 1880 : 						StockDispBuffer ( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , CG_BTL_BUTTON_CROSS , 0 ) ;

  0049b	6a 00		 push	 0
  0049d	68 1d 62 00 00	 push	 25117			; 0000621dH
  004a2	6a 6a		 push	 106			; 0000006aH
  004a4	53		 push	 ebx
  004a5	57		 push	 edi
  004a6	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004ab	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  004b1	83 c4 14	 add	 esp, 20			; 00000014H
$LN55@BattleButt:

; 1881 : 					//StockDispBuffer( x + 138 + j * 48 , y + 228 + i * 52 , DISP_PRIO_IME3, CG_FIELD_SKILL_TILE , 0 );
; 1882 : 					BattleSkillBtn [ j + i * 4 ] = StockDispBuffer( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , profession_skill[ BattleSkill [ j + i * 4 ] ].icon  , 2 );

  004b4	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  004b7	c1 e0 06	 shl	 eax, 6
  004ba	6a 02		 push	 2
  004bc	ff b0 b4 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+180]
  004c2	6a 6a		 push	 106			; 0000006aH
  004c4	53		 push	 ebx
  004c5	57		 push	 edi
  004c6	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004cb	89 86 00 00 00
	00		 mov	 DWORD PTR ?BattleSkillBtn@@3PAHA[esi], eax

; 1883 : 					sprintf ( msg2 , "%8s" , profession_skill[BattleSkill [ j + i * 4 ]].name );

  004d1	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  004d7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  004da	c1 e0 06	 shl	 eax, 6
  004dd	05 08 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+8
  004e2	50		 push	 eax
  004e3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  004e9	68 00 00 00 00	 push	 OFFSET ??_C@_03GHDNOBPC@?$CF8s@
  004ee	50		 push	 eax
  004ef	e8 00 00 00 00	 call	 _sprintf

; 1884 : 					StockFontBuffer( x + j * 60 , y + 110 + i * 57 , FONT_PRIO_FRONT, FONT_PAL_WHITE, msg2, 0 );

  004f4	6a 00		 push	 0
  004f6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  004fc	50		 push	 eax
  004fd	6a 00		 push	 0
  004ff	6a 01		 push	 1
  00501	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00504	50		 push	 eax
  00505	8d 47 e8	 lea	 eax, DWORD PTR [edi-24]
  00508	50		 push	 eax
  00509	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1885 : 					if ( HitDispNo == BattleSkillBtn [ j + i * 4 ] ){ 

  0050e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00513	83 c4 38	 add	 esp, 56			; 00000038H
  00516	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR ?BattleSkillBtn@@3PAHA[esi]
  0051c	0f 85 24 01 00
	00		 jne	 $LN56@BattleButt

; 1886 : 
; 1887 : 						int use_color=0;
; 1888 : 						if( p_party[ BattleMyNo ]->mp >= profession_skill[BattleSkill [ j + i * 4 ]].costmp && profession_skill[BattleSkill [ j + i * 4 ]].costmp != 0 ) {

  00522	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00528	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  0052b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00530	c1 e1 06	 shl	 ecx, 6
  00533	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0053a	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  00540	39 90 84 00 00
	00		 cmp	 DWORD PTR [eax+132], edx
  00546	7c 0e		 jl	 SHORT $LN57@BattleButt

; 1889 : 							use_color = FONT_PAL_WHITE;

  00548	c7 85 f4 fc ff
	ff 00 00 00 00	 mov	 DWORD PTR _use_color$1$[ebp], 0
  00552	85 d2		 test	 edx, edx
  00554	75 0a		 jne	 SHORT $LN58@BattleButt
$LN57@BattleButt:

; 1890 : 						}else{
; 1891 : 							use_color = FONT_PAL_GRAY;									

  00556	c7 85 f4 fc ff
	ff 07 00 00 00	 mov	 DWORD PTR _use_color$1$[ebp], 7
$LN58@BattleButt:

; 1892 : 						}
; 1893 : 
; 1894 : 						sprintf ( msg2 , "%s" , profession_skill[BattleSkill [ j + i * 4 ]].name );

  00560	8d 81 08 00 00
	00		 lea	 eax, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+8]
  00566	50		 push	 eax
  00567	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  0056d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00572	50		 push	 eax
  00573	e8 00 00 00 00	 call	 _sprintf

; 1895 : 						StockFontBuffer( 20, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );

  00578	6a 00		 push	 0
  0057a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00580	50		 push	 eax
  00581	ff b5 f4 fc ff
	ff		 push	 DWORD PTR _use_color$1$[ebp]
  00587	6a 01		 push	 1
  00589	68 38 01 00 00	 push	 312			; 00000138H
  0058e	6a 14		 push	 20			; 00000014H
  00590	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1896 : 						
; 1897 : 						sprintf( msg , "  %d％", profession_skill[BattleSkill [ j + i * 4 ]].skill_level ) ; 

  00595	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  0059b	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0059e	c1 e0 06	 shl	 eax, 6
  005a1	ff b0 bc 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+188]
  005a7	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  005ad	68 00 00 00 00	 push	 OFFSET ??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@
  005b2	50		 push	 eax
  005b3	e8 00 00 00 00	 call	 _sprintf

; 1898 : 						StockFontBuffer( 85, 310, FONT_PRIO_FRONT, use_color, msg, 0 );

  005b8	6a 00		 push	 0
  005ba	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  005c0	50		 push	 eax
  005c1	ff b5 f4 fc ff
	ff		 push	 DWORD PTR _use_color$1$[ebp]
  005c7	6a 01		 push	 1
  005c9	68 36 01 00 00	 push	 310			; 00000136H
  005ce	6a 55		 push	 85			; 00000055H
  005d0	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1899 : 
; 1900 : 						sprintf ( msg2 , "(소비하다MP:%d)" , profession_skill[BattleSkill [ j + i * 4 ]].costmp );

  005d5	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  005db	83 c4 48	 add	 esp, 72			; 00000048H
  005de	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  005e1	c1 e0 06	 shl	 eax, 6
  005e4	ff b0 b8 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+184]
  005ea	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  005f0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@
  005f5	50		 push	 eax
  005f6	e8 00 00 00 00	 call	 _sprintf

; 1901 : 						StockFontBuffer( 170, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );

  005fb	6a 00		 push	 0
  005fd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00603	50		 push	 eax
  00604	ff b5 f4 fc ff
	ff		 push	 DWORD PTR _use_color$1$[ebp]
  0060a	6a 01		 push	 1
  0060c	68 38 01 00 00	 push	 312			; 00000138H
  00611	68 aa 00 00 00	 push	 170			; 000000aaH
  00616	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1902 : 
; 1903 : 						sprintf( msg , "%s" , profession_skill[BattleSkill [ j + i * 4 ]].memo ) ; 

  0061b	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00621	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00624	c1 e0 06	 shl	 eax, 6
  00627	05 5d 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+93
  0062c	50		 push	 eax
  0062d	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00633	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00638	50		 push	 eax
  00639	e8 00 00 00 00	 call	 _sprintf
  0063e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00643	83 c4 30	 add	 esp, 48			; 00000030H
$LN56@BattleButt:

; 1904 : 					}
; 1905 : 					if( mouse.onceState & MOUSE_LEFT_CRICK_UP ) {

  00646	f6 05 2c 00 00
	00 04		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 4
  0064d	0f 84 82 00 00
	00		 je	 $LN22@BattleButt

; 1906 : 						if ( HitDispNo == BattleSkillBtn [ j + i * 4 ] && profession_skill[ BattleSkill [ j + i * 4 ] ].useFlag != 0) {

  00653	3b 86 00 00 00
	00		 cmp	 eax, DWORD PTR ?BattleSkillBtn@@3PAHA[esi]
  00659	75 7a		 jne	 SHORT $LN22@BattleButt
  0065b	8b 96 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00661	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00664	c1 e1 06	 shl	 ecx, 6
  00667	66 83 b9 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx], 0
  0066f	74 64		 je	 SHORT $LN22@BattleButt

; 1907 : 							if( p_party[ BattleMyNo ]->mp >= profession_skill[BattleSkill [ j + i * 4 ]].costmp && profession_skill[BattleSkill [ j + i * 4 ]].costmp != 0  ) {

  00671	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00676	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0067d	89 85 f8 fc ff
	ff		 mov	 DWORD PTR tv2614[ebp], eax
  00683	8b d0		 mov	 edx, eax
  00685	8b 81 b8 00 00
	00		 mov	 eax, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  0068b	39 82 84 00 00
	00		 cmp	 DWORD PTR [edx+132], eax
  00691	8b 96 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleSkill@@3PAHA[esi]
  00697	7c 3c		 jl	 SHORT $LN22@BattleButt
  00699	85 c0		 test	 eax, eax
  0069b	74 38		 je	 SHORT $LN22@BattleButt

; 1908 : 								if ( !(profession_skill[ BattleSkill [ j + i * 4 ] ].skillId == 40 && p_party[ BattleMyNo ]->hp <= 10) ) { //濒死攻击限制

  0069d	66 83 b9 02 00
	00 00 28	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+2], 40 ; 00000028H
  006a5	75 0c		 jne	 SHORT $LN63@BattleButt
  006a7	8b 85 f8 fc ff
	ff		 mov	 eax, DWORD PTR tv2614[ebp]
  006ad	83 78 78 0a	 cmp	 DWORD PTR [eax+120], 10	; 0000000aH
  006b1	7e 22		 jle	 SHORT $LN22@BattleButt
$LN63@BattleButt:

; 1909 : 									wonflag = 0 ; 
; 1910 : 									prouseskill = BattleSkill [ j + i * 4 ] ; 
; 1911 : 									BattleSetWazaHitBox( profession_skill[BattleSkill [ j + i * 4 ] ].target , 1) ; 

  006b3	0f bf 81 04 00
	00 00		 movsx	 eax, WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+4]
  006ba	6a 01		 push	 1
  006bc	50		 push	 eax
  006bd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wonflag@@3HA, 0 ; wonflag
  006c7	89 15 00 00 00
	00		 mov	 DWORD PTR ?prouseskill@@3HA, edx ; prouseskill
  006cd	e8 00 00 00 00	 call	 ?BattleSetWazaHitBox@@YAXHH@Z ; BattleSetWazaHitBox
  006d2	83 c4 08	 add	 esp, 8
$LN22@BattleButt:

; 1874 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  006d5	83 c7 3c	 add	 edi, 60			; 0000003cH
  006d8	83 c6 04	 add	 esi, 4
  006db	81 ff 22 01 00
	00		 cmp	 edi, 290		; 00000122H
  006e1	0f 8c 59 fd ff
	ff		 jl	 $LL24@BattleButt
$LN19@BattleButt:

; 1873 : 			for ( int i = 0 ; i < 4 ; i ++ ) {

  006e7	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR tv2585[ebp]
  006ed	83 c3 39	 add	 ebx, 57			; 00000039H
  006f0	83 c0 10	 add	 eax, 16			; 00000010H
  006f3	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv2585[ebp], eax
  006f9	81 fb 4b 01 00
	00		 cmp	 ebx, 331		; 0000014bH
  006ff	0f 8c 2b fd ff
	ff		 jl	 $LL21@BattleButt

; 1912 : 								}
; 1913 : 							}
; 1914 : 						}
; 1915 : 					}
; 1916 : 				}
; 1917 : 			}
; 1918 : 			break;

  00705	e9 b4 02 00 00	 jmp	 $LN14@BattleButt
$LN40@BattleButt:

; 1814 : 		case 0 :
; 1815 : #ifdef _READ16BITBMP
; 1816 : 			if(g_bUseAlpha) StockDispBuffer( 168, 223, DISP_PRIO_IME3, CG_FIELD_SKILL_ASSIT , 0 );
; 1817 : 			else
; 1818 : #endif
; 1819 : 			StockDispBuffer( 165, 221, DISP_PRIO_IME3, CG_FIELD_SKILL_ASSIT , 0 );

  0070a	6a 00		 push	 0
  0070c	68 f4 66 00 00	 push	 26356			; 000066f4H
  00711	6a 69		 push	 105			; 00000069H
  00713	68 dd 00 00 00	 push	 221			; 000000ddH
  00718	68 a5 00 00 00	 push	 165			; 000000a5H
  0071d	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00722	83 c4 14	 add	 esp, 20			; 00000014H
  00725	be 67 00 00 00	 mov	 esi, 103		; 00000067H
  0072a	33 c0		 xor	 eax, eax
  0072c	89 b5 f8 fc ff
	ff		 mov	 DWORD PTR tv2551[ebp], esi
  00732	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv2553[ebp], eax
  00738	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL15@BattleButt:

; 1821 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  00740	bb 32 00 00 00	 mov	 ebx, 50			; 00000032H
  00745	8b f8		 mov	 edi, eax
  00747	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL18@BattleButt:

; 1822 : 					if ( AssitSkill [ j + i * 4 ] == -1 ) 

  00750	8b 8f 00 00 00
	00		 mov	 ecx, DWORD PTR ?AssitSkill@@3PAHA[edi]
  00756	83 f9 ff	 cmp	 ecx, -1
  00759	0f 84 3b 02 00
	00		 je	 $LN13@BattleButt

; 1823 : 						break;
; 1824 : 					if ( profession_skill[ AssitSkill [ j + i * 4 ] ].useFlag == 0 )

  0075f	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  00762	c1 e0 06	 shl	 eax, 6
  00765	66 83 b8 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax], 0
  0076d	75 19		 jne	 SHORT $LN126@BattleButt

; 1825 : 						StockDispBuffer ( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , CG_BTL_BUTTON_CROSS , 0 ) ;

  0076f	6a 00		 push	 0
  00771	68 1d 62 00 00	 push	 25117			; 0000621dH
  00776	6a 6a		 push	 106			; 0000006aH
  00778	56		 push	 esi
  00779	53		 push	 ebx
  0077a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0077f	8b 8f 00 00 00
	00		 mov	 ecx, DWORD PTR ?AssitSkill@@3PAHA[edi]
  00785	83 c4 14	 add	 esp, 20			; 00000014H
$LN126@BattleButt:

; 1826 : 					//StockDispBuffer( x + 138 + j * 48 , y + 228 + i * 52 , DISP_PRIO_IME3, CG_FIELD_SKILL_TILE , 0 );
; 1827 : 					AssitSkillBtn [ j + i * 4 ] = StockDispBuffer( x + 24 + j * 60 , y + 98 + i * 57 , DISP_PRIO_IME3 + 1 , profession_skill[ AssitSkill [ j + i * 4 ] ].icon  , 2 );

  00788	8d 04 49	 lea	 eax, DWORD PTR [ecx+ecx*2]
  0078b	c1 e0 06	 shl	 eax, 6
  0078e	6a 02		 push	 2
  00790	ff b0 b4 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+180]
  00796	6a 6a		 push	 106			; 0000006aH
  00798	56		 push	 esi
  00799	53		 push	 ebx
  0079a	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0079f	89 87 00 00 00
	00		 mov	 DWORD PTR ?AssitSkillBtn@@3PAHA[edi], eax

; 1828 : 					sprintf ( msg2 , "%8s" , profession_skill[AssitSkill [ j + i * 4 ]].name );

  007a5	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?AssitSkill@@3PAHA[edi]
  007ab	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  007ae	c1 e0 06	 shl	 eax, 6
  007b1	05 08 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+8
  007b6	50		 push	 eax
  007b7	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  007bd	68 00 00 00 00	 push	 OFFSET ??_C@_03GHDNOBPC@?$CF8s@
  007c2	50		 push	 eax
  007c3	e8 00 00 00 00	 call	 _sprintf

; 1829 : 					StockFontBuffer( x + j * 60 , y + 110 + i * 57 , FONT_PRIO_FRONT, FONT_PAL_WHITE, msg2, 0 );

  007c8	6a 00		 push	 0
  007ca	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  007d0	50		 push	 eax
  007d1	6a 00		 push	 0
  007d3	6a 01		 push	 1
  007d5	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  007d8	50		 push	 eax
  007d9	8d 43 e8	 lea	 eax, DWORD PTR [ebx-24]
  007dc	50		 push	 eax
  007dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1830 : 					if ( HitDispNo == AssitSkillBtn [ j + i * 4 ] ){

  007e2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  007e7	83 c4 38	 add	 esp, 56			; 00000038H
  007ea	3b 87 00 00 00
	00		 cmp	 eax, DWORD PTR ?AssitSkillBtn@@3PAHA[edi]
  007f0	0f 85 17 01 00
	00		 jne	 $LN43@BattleButt

; 1831 : 						int use_color=0;
; 1832 : 						if( p_party[ BattleMyNo ]->mp >= profession_skill[AssitSkill [ j + i * 4 ]].costmp && profession_skill[AssitSkill [ j + i * 4 ]].costmp != 0 ){

  007f6	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?AssitSkill@@3PAHA[edi]
  007fc	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  007ff	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00804	c1 e1 06	 shl	 ecx, 6
  00807	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0080e	8b 91 b8 00 00
	00		 mov	 edx, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  00814	39 90 84 00 00
	00		 cmp	 DWORD PTR [eax+132], edx
  0081a	7c 08		 jl	 SHORT $LN44@BattleButt
  0081c	85 d2		 test	 edx, edx
  0081e	74 04		 je	 SHORT $LN44@BattleButt

; 1833 : 							use_color = FONT_PAL_WHITE;

  00820	33 c0		 xor	 eax, eax

; 1834 : 						}else{

  00822	eb 05		 jmp	 SHORT $LN45@BattleButt
$LN44@BattleButt:

; 1835 : 							use_color = FONT_PAL_GRAY;									

  00824	b8 07 00 00 00	 mov	 eax, 7
$LN45@BattleButt:

; 1836 : 						}
; 1837 : 						if ( profession_skill[ AssitSkill [ j + i * 4 ] ].skillId == 11	)
; 1838 : 							use_color = FONT_PAL_WHITE; //嗜血成性不做mp限制
; 1839 : 						sprintf ( msg2 , "%s" , profession_skill[AssitSkill [ j + i * 4 ]].name );

  00829	33 f6		 xor	 esi, esi
  0082b	66 83 b9 02 00
	00 00 0b	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+2], 11 ; 0000000bH
  00833	0f 45 f0	 cmovne	 esi, eax
  00836	8d 81 08 00 00
	00		 lea	 eax, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+8]
  0083c	50		 push	 eax
  0083d	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00843	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00848	50		 push	 eax
  00849	e8 00 00 00 00	 call	 _sprintf

; 1840 : 						StockFontBuffer( 20, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );

  0084e	6a 00		 push	 0
  00850	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  00856	50		 push	 eax
  00857	56		 push	 esi
  00858	6a 01		 push	 1
  0085a	68 38 01 00 00	 push	 312			; 00000138H
  0085f	6a 14		 push	 20			; 00000014H
  00861	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1841 : 
; 1842 : 						sprintf( msg , "  %d％", profession_skill[AssitSkill [ j + i * 4 ]].skill_level ) ; 

  00866	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?AssitSkill@@3PAHA[edi]
  0086c	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0086f	c1 e0 06	 shl	 eax, 6
  00872	ff b0 bc 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+188]
  00878	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0087e	68 00 00 00 00	 push	 OFFSET ??_C@_06BPKJHHJO@?5?5?$CFd?$KD?$KF@
  00883	50		 push	 eax
  00884	e8 00 00 00 00	 call	 _sprintf

; 1843 : 						StockFontBuffer( 85, 310, FONT_PRIO_FRONT, use_color, msg, 0 );

  00889	6a 00		 push	 0
  0088b	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00891	50		 push	 eax
  00892	56		 push	 esi
  00893	6a 01		 push	 1
  00895	68 36 01 00 00	 push	 310			; 00000136H
  0089a	6a 55		 push	 85			; 00000055H
  0089c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1844 : 				
; 1845 : 						sprintf ( msg2 , "(소비하다MP:%d)" , profession_skill[AssitSkill [ j + i * 4 ]].costmp );

  008a1	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?AssitSkill@@3PAHA[edi]
  008a7	83 c4 48	 add	 esp, 72			; 00000048H
  008aa	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  008ad	c1 e0 06	 shl	 eax, 6
  008b0	ff b0 b8 00 00
	00		 push	 DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[eax+184]
  008b6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  008bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OEIEMLKK@?$CI?$LM?R?$LK?q?G?O?$LE?YMP?3?$CFd?$CJ@
  008c1	50		 push	 eax
  008c2	e8 00 00 00 00	 call	 _sprintf

; 1846 : 						StockFontBuffer( 170, 312, FONT_PRIO_FRONT, use_color, msg2, 0 );				

  008c7	6a 00		 push	 0
  008c9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg2$[ebp]
  008cf	50		 push	 eax
  008d0	56		 push	 esi
  008d1	6a 01		 push	 1
  008d3	68 38 01 00 00	 push	 312			; 00000138H
  008d8	68 aa 00 00 00	 push	 170			; 000000aaH
  008dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1847 : 
; 1848 : 						sprintf( msg , "%s" ,	 profession_skill[AssitSkill [ j + i * 4 ]].memo ) ; 

  008e2	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?AssitSkill@@3PAHA[edi]
  008e8	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  008eb	c1 e0 06	 shl	 eax, 6
  008ee	05 5d 00 00 00	 add	 eax, OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A+93
  008f3	50		 push	 eax
  008f4	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  008fa	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  008ff	50		 push	 eax
  00900	e8 00 00 00 00	 call	 _sprintf
  00905	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0090a	83 c4 30	 add	 esp, 48			; 00000030H
$LN43@BattleButt:

; 1849 : 					}
; 1850 : 					if( mouse.onceState & MOUSE_LEFT_CRICK_UP ) {

  0090d	f6 05 2c 00 00
	00 04		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 4
  00914	74 6c		 je	 SHORT $LN16@BattleButt

; 1851 : 						if ( HitDispNo == AssitSkillBtn [ j + i * 4 ]  && profession_skill[ AssitSkill [ j + i * 4 ] ].useFlag != 0) {

  00916	3b 87 00 00 00
	00		 cmp	 eax, DWORD PTR ?AssitSkillBtn@@3PAHA[edi]
  0091c	75 64		 jne	 SHORT $LN16@BattleButt
  0091e	8b 97 00 00 00
	00		 mov	 edx, DWORD PTR ?AssitSkill@@3PAHA[edi]
  00924	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]
  00927	c1 e1 06	 shl	 ecx, 6
  0092a	66 83 b9 00 00
	00 00 00	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx], 0
  00932	74 4e		 je	 SHORT $LN16@BattleButt

; 1852 : 							if( p_party[ BattleMyNo ]->mp >= profession_skill[AssitSkill [ j + i * 4 ]].costmp && profession_skill[AssitSkill [ j + i * 4 ]].costmp != 0 ) {

  00934	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00939	8b b1 b8 00 00
	00		 mov	 esi, DWORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+184]
  0093f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00946	39 b0 84 00 00
	00		 cmp	 DWORD PTR [eax+132], esi
  0094c	7c 04		 jl	 SHORT $LN125@BattleButt
  0094e	85 f6		 test	 esi, esi
  00950	75 0e		 jne	 SHORT $LN144@BattleButt
$LN125@BattleButt:

; 1853 : 								wonflag = 0 ; 
; 1854 : 								prouseskill = AssitSkill [ j + i * 4 ] ; 
; 1855 : 								BattleSetWazaHitBox( profession_skill[AssitSkill [ j + i * 4 ] ].target , 1) ; 
; 1856 : 							}
; 1857 : 							else if ( profession_skill[ AssitSkill [ j + i * 4 ] ].skillId == 11 && profession_skill[AssitSkill [ j + i * 4 ]].costmp == 0 ) { //嗜血成性不做mp限制

  00952	66 83 b9 02 00
	00 00 0b	 cmp	 WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+2], 11 ; 0000000bH
  0095a	75 26		 jne	 SHORT $LN16@BattleButt
  0095c	85 f6		 test	 esi, esi
  0095e	75 22		 jne	 SHORT $LN16@BattleButt
$LN144@BattleButt:

; 1821 : 				for ( int j = 0 ; j < 4 ; j ++ ) {

  00960	0f bf 81 04 00
	00 00		 movsx	 eax, WORD PTR ?profession_skill@@3PAUPROFESSION_SKILL@@A[ecx+4]
  00967	6a 01		 push	 1
  00969	50		 push	 eax
  0096a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wonflag@@3HA, 0 ; wonflag
  00974	89 15 00 00 00
	00		 mov	 DWORD PTR ?prouseskill@@3HA, edx ; prouseskill
  0097a	e8 00 00 00 00	 call	 ?BattleSetWazaHitBox@@YAXHH@Z ; BattleSetWazaHitBox
  0097f	83 c4 08	 add	 esp, 8
$LN16@BattleButt:
  00982	8b b5 f8 fc ff
	ff		 mov	 esi, DWORD PTR tv2551[ebp]
  00988	83 c3 3c	 add	 ebx, 60			; 0000003cH
  0098b	83 c7 04	 add	 edi, 4
  0098e	81 fb 22 01 00
	00		 cmp	 ebx, 290		; 00000122H
  00994	0f 8c b6 fd ff
	ff		 jl	 $LL18@BattleButt
$LN13@BattleButt:

; 1820 : 			for ( int i = 0 ; i < 4 ; i ++ ) {

  0099a	8b 85 f0 fc ff
	ff		 mov	 eax, DWORD PTR tv2553[ebp]
  009a0	83 c6 39	 add	 esi, 57			; 00000039H
  009a3	83 c0 10	 add	 eax, 16			; 00000010H
  009a6	89 b5 f8 fc ff
	ff		 mov	 DWORD PTR tv2551[ebp], esi
  009ac	89 85 f0 fc ff
	ff		 mov	 DWORD PTR tv2553[ebp], eax
  009b2	81 fe 4b 01 00
	00		 cmp	 esi, 331		; 0000014bH
  009b8	0f 8c 82 fd ff
	ff		 jl	 $LL15@BattleButt
$LN14@BattleButt:

; 1979 : 		default:
; 1980 : 			break;
; 1981 : 		}
; 1982 : 		char *splitPoint =  msg  ; 

  009be	8d b5 fc fd ff
	ff		 lea	 esi, DWORD PTR _msg$[ebp]

; 1983 : 		sprintf( buf , "%s" , msg ) ; 

  009c4	8b c6		 mov	 eax, esi
  009c6	50		 push	 eax
  009c7	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  009cd	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  009d2	50		 push	 eax
  009d3	e8 00 00 00 00	 call	 _sprintf
  009d8	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1984 : 		x = 18 ; 
; 1985 : 		y = 340 ; 
; 1986 : 		while( 1 ){
; 1987 : 			if( strlen( splitPoint ) > 34 ) {

  009db	8b ce		 mov	 ecx, esi
  009dd	bf 54 01 00 00	 mov	 edi, 340		; 00000154H
  009e2	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  009e5	5b		 pop	 ebx
$LL139@BattleButt:
  009e6	8a 01		 mov	 al, BYTE PTR [ecx]
  009e8	41		 inc	 ecx
  009e9	84 c0		 test	 al, al
  009eb	75 f9		 jne	 SHORT $LL139@BattleButt
  009ed	2b ca		 sub	 ecx, edx
  009ef	83 f9 22	 cmp	 ecx, 34			; 00000022H
  009f2	76 7a		 jbe	 SHORT $LN74@BattleButt
$LL31@BattleButt:

; 1988 : 				strncpy( msg, splitPoint, 34 );

  009f4	6a 22		 push	 34			; 00000022H
  009f6	8d 85 fc fd ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  009fc	56		 push	 esi
  009fd	50		 push	 eax
  009fe	e8 00 00 00 00	 call	 _strncpy

; 1989 : 				buf[ 34 ] = NULL;
; 1990 : 				if( GetStrLastByte( buf ) == 3 ){

  00a03	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00a09	c6 85 1e fd ff
	ff 00		 mov	 BYTE PTR _buf$[ebp+34], 0
  00a10	50		 push	 eax
  00a11	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00a16	83 c4 10	 add	 esp, 16			; 00000010H
  00a19	83 f8 03	 cmp	 eax, 3
  00a1c	75 0e		 jne	 SHORT $LN76@BattleButt

; 1991 : 					buf[ 33 ] = NULL;

  00a1e	c6 85 1d fd ff
	ff 00		 mov	 BYTE PTR _buf$[ebp+33], 0

; 1992 : 					splitPoint += 33;

  00a25	b8 21 00 00 00	 mov	 eax, 33			; 00000021H

; 1993 : 				}else{

  00a2a	eb 0c		 jmp	 SHORT $LN77@BattleButt
$LN76@BattleButt:

; 1994 : 					buf[ 34 ] = NULL;

  00a2c	c6 85 1e fd ff
	ff 00		 mov	 BYTE PTR _buf$[ebp+34], 0

; 1995 : 					splitPoint += 34;

  00a33	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
$LN77@BattleButt:

; 1996 : 				}
; 1997 : 				StockFontBuffer( x, y , FONT_PRIO_FRONT, 0, buf, 0 ); y += 24;

  00a38	6a 00		 push	 0
  00a3a	03 f0		 add	 esi, eax
  00a3c	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00a42	50		 push	 eax
  00a43	6a 00		 push	 0
  00a45	6a 01		 push	 1
  00a47	57		 push	 edi
  00a48	6a 12		 push	 18			; 00000012H
  00a4a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00a4f	8b ce		 mov	 ecx, esi
  00a51	83 c4 18	 add	 esp, 24			; 00000018H
  00a54	83 c7 18	 add	 edi, 24			; 00000018H
  00a57	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  00a5a	66 0f 1f 44 00
	00		 npad	 6
$LL140@BattleButt:

; 1984 : 		x = 18 ; 
; 1985 : 		y = 340 ; 
; 1986 : 		while( 1 ){
; 1987 : 			if( strlen( splitPoint ) > 34 ) {

  00a60	8a 01		 mov	 al, BYTE PTR [ecx]
  00a62	41		 inc	 ecx
  00a63	84 c0		 test	 al, al
  00a65	75 f9		 jne	 SHORT $LL140@BattleButt
  00a67	2b ca		 sub	 ecx, edx
  00a69	83 f9 22	 cmp	 ecx, 34			; 00000022H
  00a6c	77 86		 ja	 SHORT $LL31@BattleButt
$LN74@BattleButt:

; 1998 : 			}else{
; 1999 : 				strcpy( buf, splitPoint );

  00a6e	8d 8d fc fc ff
	ff		 lea	 ecx, DWORD PTR _buf$[ebp]
  00a74	2b ce		 sub	 ecx, esi
$LL87@BattleButt:
  00a76	8a 06		 mov	 al, BYTE PTR [esi]
  00a78	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  00a7b	88 44 0e ff	 mov	 BYTE PTR [esi+ecx-1], al
  00a7f	84 c0		 test	 al, al
  00a81	75 f3		 jne	 SHORT $LL87@BattleButt

; 2000 : 				StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, buf, 0 );

  00a83	6a 00		 push	 0
  00a85	8d 85 fc fc ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00a8b	50		 push	 eax
  00a8c	6a 00		 push	 0
  00a8e	6a 01		 push	 1
  00a90	57		 push	 edi
  00a91	6a 12		 push	 18			; 00000012H
  00a93	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00a98	83 c4 18	 add	 esp, 24			; 00000018H
  00a9b	5f		 pop	 edi
  00a9c	5e		 pop	 esi
$LN34@BattleButt:

; 2001 : 				break;
; 2002 : 			}
; 2003 : 		}
; 2004 : //	StockFontBuffer ( 300 , 400 , FONT_PRIO_FRONT , FONT_PAL_WHITE , msg , 0 ) ; 
; 2005 : 	}
; 2006 : }

  00a9d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00aa0	33 cd		 xor	 ecx, ebp
  00aa2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00aa7	8b e5		 mov	 esp, ebp
  00aa9	5d		 pop	 ebp
  00aaa	c3		 ret	 0
?BattleButtonPPLSKILL@@YAXXZ ENDP			; BattleButtonPPLSKILL
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonPet@@YAXXZ
_TEXT	SEGMENT
_color$1$ = -292					; size = 4
_i$2$ = -288						; size = 4
_y$1$ = -284						; size = 4
tv1544 = -280						; size = 4
_atrGraNo$ = -276					; size = 16
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleButtonPet@@YAXXZ PROC				; BattleButtonPet, COMDAT

; 1559 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1560 : 	int i, bak;
; 1561 : 	char moji[ 256 ];
; 1562 : 	int x, y;
; 1563 : 	int flag = FALSE;
; 1564 : 	int atrFlag = FALSE;
; 1565 : 	int atrGraNo[ 4 ];
; 1566 : 	int color;
; 1567 : 	if( HitDispNo == battleButtonDispNo[ 6 ] || battleButtonBak2 == 6 ){

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	33 ff		 xor	 edi, edi
  0001c	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+24
  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak2@@3HA
  00027	74 10		 je	 SHORT $LN12@BattleButt
  00029	83 f8 06	 cmp	 eax, 6
  0002c	74 0b		 je	 SHORT $LN12@BattleButt
  0002e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00034	e9 c0 00 00 00	 jmp	 $LN11@BattleButt
$LN12@BattleButt:

; 1568 : 
; 1569 : 		if( mouse.onceState & MOUSE_LEFT_CRICK || battleButtonBak2 == 6 ){

  00039	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00040	75 09		 jne	 SHORT $LN14@BattleButt
  00042	83 f8 06	 cmp	 eax, 6
  00045	0f 85 82 00 00
	00		 jne	 $LN75@BattleButt
$LN14@BattleButt:

; 1570 : 			bak = battleButtonFlag[ 6 ];

  0004b	8b 35 18 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA+24

; 1571 : 			BattleButtonOff();

  00051	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 1572 : 
; 1573 : 			if( bak == FALSE ){

  00056	85 f6		 test	 esi, esi
  00058	75 73		 jne	 SHORT $LN75@BattleButt

; 1574 : 
; 1575 : 				battleButtonFlag[ 6 ] = TRUE;
; 1576 : 
; 1577 : 				for( i = 0 ; i < BATTLE_MENU_PET_FONTS ; i++ ) battleMenuPetFontNo[ i ] = -2;

  0005a	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 1578 : 
; 1579 : 				pActWnd = MakeWindowDisp( 376, 132, 256, 320, 0, -1 );

  00061	6a ff		 push	 -1
  00063	56		 push	 esi
  00064	68 40 01 00 00	 push	 320			; 00000140H
  00069	68 00 01 00 00	 push	 256			; 00000100H
  0006e	68 84 00 00 00	 push	 132			; 00000084H
  00073	68 78 01 00 00	 push	 376			; 00000178H
  00078	c7 05 18 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+24, 1
  00082	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuPetFontNo@@3PAHA, xmm0
  00089	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+16, -2 ; fffffffeH
  00093	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+20, -2 ; fffffffeH
  0009d	c7 05 18 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+24, -2 ; fffffffeH
  000a7	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000ac	8b c8		 mov	 ecx, eax

; 1580 : 
; 1581 : 				battleButtonBak = 6;

  000ae	c7 05 00 00 00
	00 06 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, 6 ; battleButtonBak
  000b8	83 c4 18	 add	 esp, 24			; 00000018H
  000bb	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ecx

; 1582 : 
; 1583 : 				battleButtonBak2 = -1;

  000c1	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
  000cb	eb 06		 jmp	 SHORT $LN15@BattleButt
$LN75@BattleButt:

; 1572 : 
; 1573 : 			if( bak == FALSE ){

  000cd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN15@BattleButt:

; 1584 : 			}	
; 1585 : 		}
; 1586 : 
; 1587 : 		strcpy( OneLineInfoStr, "페트교체。");

  000d3	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@+8
  000d9	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@
  000e1	66 a3 08 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+8, ax
  000e7	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@CJKKBEMM@?F?d?F?$KO?$LB?$LD?C?$LM?$KB?$KD@+10
  000ec	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  000f4	a2 0a 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+10, al
$LN11@BattleButt:

; 1588 : 	}
; 1589 : 
; 1590 : 	if( battleButtonFlag[ 6 ] == TRUE ){

  000f9	83 3d 18 00 00
	00 01		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+24, 1
  00100	0f 85 0d 05 00
	00		 jne	 $LN51@BattleButt

; 1591 : 		if( pActWnd != NULL ){

  00106	85 c9		 test	 ecx, ecx
  00108	0f 84 05 05 00
	00		 je	 $LN51@BattleButt

; 1592 : 			if( pActWnd->hp > 0 ){

  0010e	39 79 78	 cmp	 DWORD PTR [ecx+120], edi
  00111	0f 8e fc 04 00
	00		 jle	 $LN51@BattleButt

; 1593 : 				int x = ((WINDOW_DISP*)pActWnd->pYobi)->mx;
; 1594 : 				int y = ((WINDOW_DISP*)pActWnd->pYobi)->my;

  00117	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]

; 1595 : 				int offsetX = 0, offsetY = 0;
; 1596 : 				int 召回offsetX = 0, 召回offsetY = 0;
; 1597 : #ifdef 战斗5宠
; 1598 : 				offsetX = 230;
; 1599 : 				offsetY = 80;
; 1600 : 				召回offsetY = offsetY + 35;
; 1601 : #endif // 战斗5宠
; 1602 : 
; 1603 : 				StockDispBuffer(x - offsetX, y - offsetY-36, DISP_PRIO_MENU, CG_BTL_PET_CHANGE_WND, 1);//画背景图

  0011a	6a 01		 push	 1
  0011c	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_BTL_PET_CHANGE_WND@@3HA ; CG_BTL_PET_CHANGE_WND
  00122	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00125	83 e8 74	 sub	 eax, 116		; 00000074H
  00128	6a 68		 push	 104			; 00000068H
  0012a	50		 push	 eax
  0012b	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]
  0012e	2d e6 00 00 00	 sub	 eax, 230		; 000000e6H
  00133	50		 push	 eax
  00134	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1604 : 				if( mouse.onceState & MOUSE_LEFT_CRICK ){

  00139	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  0013f	83 c4 14	 add	 esp, 20			; 00000014H
  00142	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00149	0f 84 93 01 00
	00		 je	 $LN29@BattleButt

; 1605 : 					for( i = 0 ; i < 5 ; i++ ){

  0014f	33 f6		 xor	 esi, esi
  00151	bf 08 00 00 00	 mov	 edi, OFFSET ?pet@@3PAUPET@@A+8
  00156	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL7@BattleButt:

; 1606 : 						if( pet[ i ].useFlag == TRUE /*&& pc.selectPetNo[ i ] == TRUE*/ ){

  00160	66 83 7f 6e 01	 cmp	 WORD PTR [edi+110], 1
  00165	0f 85 cb 00 00
	00		 jne	 $LN5@BattleButt

; 1607 : 					//	if (pet[i].useFlag == TRUE && pc.selectPetNo[ i ] == TRUE){
; 1608 : 							if( HitFontNo == battleMenuPetFontNo[ i ] ){

  0016b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00170	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?battleMenuPetFontNo@@3PAHA[esi*4]
  00177	0f 85 b9 00 00
	00		 jne	 $LN5@BattleButt

; 1609 : 								if( pet[ i ].hp > 0 && i != pc.battlePetNo ){

  0017d	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00180	0f 8e 93 00 00
	00		 jle	 $LN22@BattleButt
  00186	0f bf 05 aa 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+170
  0018d	3b f0		 cmp	 esi, eax
  0018f	0f 84 84 00 00
	00		 je	 $LN22@BattleButt

; 1610 : 									sprintf( moji, "S|%d", i );

  00195	56		 push	 esi
  00196	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0019c	68 00 00 00 00	 push	 OFFSET ??_C@_04FIJAIIHF@S?$HM?$CFd@
  001a1	50		 push	 eax
  001a2	e8 00 00 00 00	 call	 _sprintf
  001a7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1611 : 									if( bNewServer)

  001aa	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  001b0	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001b7	50		 push	 eax
  001b8	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001be	74 07		 je	 SHORT $LN24@BattleButt

; 1612 : 										lssproto_B_send( sockfd, moji );

  001c0	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  001c5	eb 05		 jmp	 SHORT $LN81@BattleButt
$LN24@BattleButt:

; 1613 : 									else
; 1614 : 										old_lssproto_B_send( sockfd, moji );

  001c7	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN81@BattleButt:

; 1615 : 
; 1616 : 									play_se( 203, 320, 240 );

  001cc	83 c4 08	 add	 esp, 8
  001cf	68 f0 00 00 00	 push	 240			; 000000f0H
  001d4	68 40 01 00 00	 push	 320			; 00000140H
  001d9	68 cb 00 00 00	 push	 203			; 000000cbH
  001de	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1617 : 
; 1618 : 									DeathAction( pActWnd );

  001e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  001e9	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001ee	83 c4 10	 add	 esp, 16			; 00000010H

; 1619 : 
; 1620 : 									pActWnd = NULL;
; 1621 : 
; 1622 : 									battleMenuReturn = TRUE;

  001f1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1
  001fb	33 c9		 xor	 ecx, ecx

; 1623 : 
; 1624 : 									battleButtonBak = -1;

  001fd	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak@@3HA, -1 ; battleButtonBak
  00207	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ecx

; 1625 : 
; 1626 : 									battleButtonBak2 = -1;

  0020d	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1

; 1627 : 								}else{

  00217	eb 1d		 jmp	 SHORT $LN5@BattleButt
$LN22@BattleButt:

; 1628 : 									play_se( 220, 320, 240 );

  00219	68 f0 00 00 00	 push	 240			; 000000f0H
  0021e	68 40 01 00 00	 push	 320			; 00000140H
  00223	68 dc 00 00 00	 push	 220			; 000000dcH
  00228	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0022d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00233	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@BattleButt:

; 1605 : 					for( i = 0 ; i < 5 ; i++ ){

  00236	46		 inc	 esi
  00237	81 c7 78 0b 00
	00		 add	 edi, 2936		; 00000b78H
  0023d	83 fe 05	 cmp	 esi, 5
  00240	0f 8c 1a ff ff
	ff		 jl	 $LL7@BattleButt

; 1629 : 								}
; 1630 : 							}
; 1631 : 						}
; 1632 : 					}
; 1633 : 
; 1634 : 					if( HitDispNo == battleMenuPetFontNo[ 5 ] && pc.battlePetNo != -1 ){

  00246	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0024b	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?battleMenuPetFontNo@@3PAHA+20
  00251	75 7a		 jne	 SHORT $LN77@BattleButt
  00253	66 83 3d aa 00
	00 00 ff	 cmp	 WORD PTR ?pc@@3UPC@@A+170, -1
  0025b	74 70		 je	 SHORT $LN77@BattleButt

; 1635 : 
; 1636 : 						if( bNewServer)

  0025d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00264	68 00 00 00 00	 push	 OFFSET ??_C@_04JBEPHANM@S?$HM?91@
  00269	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0026f	74 07		 je	 SHORT $LN27@BattleButt

; 1637 : 							lssproto_B_send( sockfd, "S|-1" );

  00271	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  00276	eb 05		 jmp	 SHORT $LN82@BattleButt
$LN27@BattleButt:

; 1638 : 						else
; 1639 : 							old_lssproto_B_send( sockfd, "S|-1" );

  00278	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN82@BattleButt:

; 1640 : 
; 1641 : 						play_se( 203, 320, 240 );

  0027d	83 c4 08	 add	 esp, 8
  00280	68 f0 00 00 00	 push	 240			; 000000f0H
  00285	68 40 01 00 00	 push	 320			; 00000140H
  0028a	68 cb 00 00 00	 push	 203			; 000000cbH
  0028f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1642 : 
; 1643 : 						DeathAction( pActWnd );

  00294	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  0029a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0029f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  002a4	83 c4 10	 add	 esp, 16			; 00000010H

; 1644 : 
; 1645 : 						pActWnd = NULL;

  002a7	33 c9		 xor	 ecx, ecx

; 1646 : 
; 1647 : 						battleMenuReturn = TRUE;

  002a9	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1
  002b3	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ecx

; 1648 : 
; 1649 : 						battleButtonBak = -1;

  002b9	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak@@3HA, -1 ; battleButtonBak

; 1650 : 
; 1651 : 						battleButtonBak2 = -1;

  002c3	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
$LN77@BattleButt:

; 1652 : 					}
; 1653 : 
; 1654 : 					if( HitDispNo == battleMenuPetFontNo[ 6 ] ){

  002cd	3b 05 18 00 00
	00		 cmp	 eax, DWORD PTR ?battleMenuPetFontNo@@3PAHA+24
  002d3	75 0b		 jne	 SHORT $LN80@BattleButt

; 1655 : 						BattleButtonOff();				

  002d5	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff
  002da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN80@BattleButt:

; 1656 : 					}
; 1657 : 				}
; 1658 : 
; 1659 : 				if( pActWnd != NULL ){

  002e0	33 ff		 xor	 edi, edi
$LN29@BattleButt:
  002e2	85 c9		 test	 ecx, ecx
  002e4	0f 84 29 03 00
	00		 je	 $LN51@BattleButt

; 1660 : 					x = pActWnd->x + 17, y = pActWnd->y + 33;

  002ea	8b 71 1c	 mov	 esi, DWORD PTR [ecx+28]
  002ed	33 d2		 xor	 edx, edx
  002ef	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  002f2	83 c6 21	 add	 esi, 33			; 00000021H
  002f5	53		 push	 ebx
  002f6	89 85 e8 fe ff
	ff		 mov	 DWORD PTR tv1544[ebp], eax
  002fc	33 db		 xor	 ebx, ebx
  002fe	89 b5 e4 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], esi
  00304	89 95 e0 fe ff
	ff		 mov	 DWORD PTR _i$2$[ebp], edx
  0030a	66 0f 1f 44 00
	00		 npad	 6
$LL10@BattleButt:

; 1663 : 						//JL 2017.7.12 pc.selectPetNo[ i ] == TRUE 加上后修复休息宠可以唤出的问题
; 1664 : 						if( pet[ i ].useFlag == TRUE && pc.selectPetNo[ i ] == TRUE  && pc.ridePetNo != i  && pc.battlePetNo != i ){

  00310	66 83 bb 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A[ebx+118], 1
  00318	0f 85 0f 02 00
	00		 jne	 $LN8@BattleButt
  0031e	66 83 3c 55 ac
	00 00 00 01	 cmp	 WORD PTR ?pc@@3UPC@@A[edx*2+172], 1
  00327	0f 85 00 02 00
	00		 jne	 $LN8@BattleButt
  0032d	39 15 18 51 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20760, edx
  00333	0f 84 f4 01 00
	00		 je	 $LN8@BattleButt
  00339	0f bf 05 aa 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+170
  00340	3b c2		 cmp	 eax, edx
  00342	0f 84 e5 01 00
	00		 je	 $LN8@BattleButt

; 1665 : 							atrFlag = FALSE;

  00348	33 ff		 xor	 edi, edi

; 1666 : 							color = FONT_PAL_AQUA;
; 1667 : 							if( pet[ i ].hp <= 0 ) color = FONT_PAL_RED;
; 1668 : 							if( i == pc.battlePetNo ) color = FONT_PAL_YELLOW;

  0034a	b9 01 00 00 00	 mov	 ecx, 1
  0034f	39 bb 08 00 00
	00		 cmp	 DWORD PTR ?pet@@3PAUPET@@A[ebx+8], edi
  00355	b8 06 00 00 00	 mov	 eax, 6

; 1669 : 
; 1670 : 							if( pet[ i ].freeName[ 0 ] != NULL )
; 1671 : 								CenteringStr( pet[ i ].freeName, moji, PET_NAME_LEN );
; 1672 : 							else
; 1673 : 								CenteringStr( pet[ i ].name, moji, PET_NAME_LEN );
; 1674 : #ifdef 战斗5宠
; 1675 : 							battleMenuPetFontNo[i] = StockFontBuffer(x - offsetX, y - offsetY - 35, FONT_PRIO_FRONT, color, moji, 2);//打印名字

  0035a	6a 10		 push	 16			; 00000010H
  0035c	0f 4f c1	 cmovg	 eax, ecx
  0035f	80 bb 65 00 00
	00 00		 cmp	 BYTE PTR ?pet@@3PAUPET@@A[ebx+101], 0
  00366	89 85 dc fe ff
	ff		 mov	 DWORD PTR _color$1$[ebp], eax
  0036c	b9 54 00 00 00	 mov	 ecx, OFFSET ?pet@@3PAUPET@@A+84
  00371	b8 65 00 00 00	 mov	 eax, OFFSET ?pet@@3PAUPET@@A+101
  00376	0f 44 c1	 cmove	 eax, ecx
  00379	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _moji$[ebp]
  0037f	51		 push	 ecx
  00380	03 c3		 add	 eax, ebx
  00382	50		 push	 eax
  00383	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  00388	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv1544[ebp]
  0038e	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _moji$[ebp]
  00394	6a 02		 push	 2
  00396	51		 push	 ecx
  00397	ff b5 dc fe ff
	ff		 push	 DWORD PTR _color$1$[ebp]
  0039d	83 c6 8d	 add	 esi, -115		; ffffff8dH
  003a0	05 2b ff ff ff	 add	 eax, -213		; ffffff2bH
  003a5	6a 01		 push	 1
  003a7	56		 push	 esi
  003a8	50		 push	 eax
  003a9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  003ae	8b 8d e0 fe ff
	ff		 mov	 ecx, DWORD PTR _i$2$[ebp]

; 1676 : #else
; 1677 : 							battleMenuPetFontNo[i] = StockFontBuffer(x - offsetX, y - offsetY - 35, FONT_PRIO_FRONT, color, moji, 2);
; 1678 : #endif // 战斗5宠
; 1679 : 
; 1680 : 							sprintf(moji,"충:%3d",pet[i].ai);

  003b4	ff b3 30 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[ebx+48]
  003ba	68 00 00 00 00	 push	 OFFSET ??_C@_06ELKFHEJ@?C?f?3?$CF3d@
  003bf	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA[ecx*4], eax
  003c6	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  003cc	50		 push	 eax
  003cd	e8 00 00 00 00	 call	 _sprintf

; 1681 : 						    StockFontBuffer(x - offsetX+140, y - offsetY - 35, FONT_PRIO_FRONT, 5, moji, 0);

  003d2	57		 push	 edi
  003d3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  003d9	50		 push	 eax
  003da	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv1544[ebp]
  003e0	6a 05		 push	 5
  003e2	6a 01		 push	 1
  003e4	83 c0 b7	 add	 eax, -73		; ffffffb7H
  003e7	56		 push	 esi
  003e8	50		 push	 eax
  003e9	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1682 : 
; 1683 : 
; 1684 : 							if( pet[ i ].earth > 0 ){

  003ee	8b 8b 34 00 00
	00		 mov	 ecx, DWORD PTR ?pet@@3PAUPET@@A[ebx+52]
  003f4	83 c4 48	 add	 esp, 72			; 00000048H
  003f7	85 c9		 test	 ecx, ecx
  003f9	7e 1a		 jle	 SHORT $LN36@BattleButt

; 1685 : 								if( pet[ i ].earth > 50 ) atrGraNo[ atrFlag ] = CG_ATR_ICON_EARTH_BIG;

  003fb	33 c0		 xor	 eax, eax

; 1686 : 								else atrGraNo[ atrFlag ] = CG_ATR_ICON_EARTH_SML;
; 1687 : 								atrFlag++; 

  003fd	bf 01 00 00 00	 mov	 edi, 1
  00402	83 f9 32	 cmp	 ecx, 50			; 00000032H
  00405	0f 9e c0	 setle	 al
  00408	8d 04 45 20 62
	00 00		 lea	 eax, DWORD PTR [eax*2+25120]
  0040f	89 85 ec fe ff
	ff		 mov	 DWORD PTR _atrGraNo$[ebp], eax
$LN36@BattleButt:

; 1688 : 							}
; 1689 : 							if( pet[ i ].water > 0 ){

  00415	8b 8b 38 00 00
	00		 mov	 ecx, DWORD PTR ?pet@@3PAUPET@@A[ebx+56]
  0041b	85 c9		 test	 ecx, ecx
  0041d	7e 17		 jle	 SHORT $LN39@BattleButt

; 1690 : 								if( pet[ i ].water > 50 ) atrGraNo[ atrFlag ] = CG_ATR_ICON_WATER_BIG;
; 1691 : 								else atrGraNo[ atrFlag ] = CG_ATR_ICON_WATER_SML;
; 1692 : 								atrFlag++;

  0041f	33 c0		 xor	 eax, eax
  00421	83 f9 32	 cmp	 ecx, 50			; 00000032H
  00424	0f 9e c0	 setle	 al
  00427	8d 04 45 23 62
	00 00		 lea	 eax, DWORD PTR [eax*2+25123]
  0042e	89 84 bd ec fe
	ff ff		 mov	 DWORD PTR _atrGraNo$[ebp+edi*4], eax
  00435	47		 inc	 edi
$LN39@BattleButt:

; 1693 : 							}
; 1694 : 							if( pet[ i ].fire > 0 ){

  00436	8b 8b 3c 00 00
	00		 mov	 ecx, DWORD PTR ?pet@@3PAUPET@@A[ebx+60]
  0043c	85 c9		 test	 ecx, ecx
  0043e	7e 17		 jle	 SHORT $LN42@BattleButt

; 1695 : 								if( pet[ i ].fire > 50 ) atrGraNo[ atrFlag ] = CG_ATR_ICON_FIRE_BIG;
; 1696 : 								else atrGraNo[ atrFlag ] = CG_ATR_ICON_FIRE_SML;
; 1697 : 								atrFlag++;

  00440	33 c0		 xor	 eax, eax
  00442	83 f9 32	 cmp	 ecx, 50			; 00000032H
  00445	0f 9e c0	 setle	 al
  00448	8d 04 45 26 62
	00 00		 lea	 eax, DWORD PTR [eax*2+25126]
  0044f	89 84 bd ec fe
	ff ff		 mov	 DWORD PTR _atrGraNo$[ebp+edi*4], eax
  00456	47		 inc	 edi
$LN42@BattleButt:

; 1698 : 							}
; 1699 : 							if( pet[ i ].wind > 0 ){

  00457	8b 8b 40 00 00
	00		 mov	 ecx, DWORD PTR ?pet@@3PAUPET@@A[ebx+64]
  0045d	85 c9		 test	 ecx, ecx
  0045f	7e 17		 jle	 SHORT $LN45@BattleButt

; 1700 : 								if( pet[ i ].wind > 50 ) atrGraNo[ atrFlag ] = CG_ATR_ICON_WIND_BIG;
; 1701 : 								else atrGraNo[ atrFlag ] = CG_ATR_ICON_WIND_SML;
; 1702 : 								atrFlag++; 

  00461	33 c0		 xor	 eax, eax
  00463	83 f9 32	 cmp	 ecx, 50			; 00000032H
  00466	0f 9e c0	 setle	 al
  00469	8d 04 45 29 62
	00 00		 lea	 eax, DWORD PTR [eax*2+25129]
  00470	89 84 bd ec fe
	ff ff		 mov	 DWORD PTR _atrGraNo$[ebp+edi*4], eax
  00477	47		 inc	 edi
$LN45@BattleButt:

; 1703 : 							}
; 1704 : 
; 1705 : 
; 1706 : #ifdef 战斗5宠
; 1707 : 							if (atrFlag > 0) StockDispBuffer(pActWnd->x + 214 - offsetX, y + 8 - offsetY - 35, DISP_PRIO_IME3, atrGraNo[0], 0);

  00478	8b b5 e4 fe ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  0047e	85 ff		 test	 edi, edi
  00480	74 22		 je	 SHORT $LN72@BattleButt
  00482	6a 00		 push	 0
  00484	ff b5 ec fe ff
	ff		 push	 DWORD PTR _atrGraNo$[ebp]
  0048a	8d 46 95	 lea	 eax, DWORD PTR [esi-107]
  0048d	6a 69		 push	 105			; 00000069H
  0048f	50		 push	 eax
  00490	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActWnd@@3PAUaction@@A
  00495	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00498	83 e8 10	 sub	 eax, 16			; 00000010H
  0049b	50		 push	 eax
  0049c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004a1	83 c4 14	 add	 esp, 20			; 00000014H
$LN72@BattleButt:

; 1708 : 
; 1709 : 							if (atrFlag > 1) StockDispBuffer(pActWnd->x + 214 + 16 - offsetX, y + 8 - offsetY - 35, DISP_PRIO_IME3, atrGraNo[1], 0);

  004a4	83 ff 01	 cmp	 edi, 1
  004a7	76 1e		 jbe	 SHORT $LN49@BattleButt
  004a9	6a 00		 push	 0
  004ab	ff b5 f0 fe ff
	ff		 push	 DWORD PTR _atrGraNo$[ebp+4]
  004b1	8d 46 95	 lea	 eax, DWORD PTR [esi-107]
  004b4	6a 69		 push	 105			; 00000069H
  004b6	50		 push	 eax
  004b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActWnd@@3PAUaction@@A
  004bc	ff 70 18	 push	 DWORD PTR [eax+24]
  004bf	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004c4	83 c4 14	 add	 esp, 20			; 00000014H
$LN49@BattleButt:

; 1710 : 							y += 25;
; 1711 : 
; 1712 : 							 sprintf(moji, "%-3d         %5d   %5d", pet[i].level, pet[i].hp, pet[i].maxHp);

  004c7	ff b3 0c 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[ebx+12]
  004cd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  004d3	ff b3 08 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[ebx+8]
  004d9	ff b3 20 00 00
	00		 push	 DWORD PTR ?pet@@3PAUPET@@A[ebx+32]
  004df	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KGEJIJPJ@?$CF?93d?5?5?5?5?5?5?5?5?5?$CF5d?5?5?5?$CF5d@
  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 _sprintf

; 1713 : 							 StockFontBuffer(x + 27 - offsetX, y - offsetY - 35, FONT_PRIO_FRONT, color, moji, 0); y += 41;

  004ea	6a 00		 push	 0
  004ec	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  004f2	50		 push	 eax
  004f3	ff b5 dc fe ff
	ff		 push	 DWORD PTR _color$1$[ebp]
  004f9	8d 46 a6	 lea	 eax, DWORD PTR [esi-90]
  004fc	6a 01		 push	 1
  004fe	50		 push	 eax
  004ff	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv1544[ebp]
  00505	05 46 ff ff ff	 add	 eax, -186		; ffffff46H
  0050a	50		 push	 eax
  0050b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1714 : 
; 1715 : #else
; 1716 : 							if (atrFlag > 0) StockDispBuffer(pActWnd->x + 214, y + 8, DISP_PRIO_IME3, atrGraNo[0], 0);
; 1717 : 
; 1718 : 							if (atrFlag > 1) StockDispBuffer(pActWnd->x + 214 + 16, y + 8, DISP_PRIO_IME3, atrGraNo[1], 0);
; 1719 : 							y += 26;
; 1720 : 
; 1721 : 							 sprintf(moji, "%3d          %4d   %4d", pet[i].level, pet[i].hp, pet[i].maxHp);
; 1722 : 							 StockFontBuffer(x + 27, y, FONT_PRIO_FRONT, color, moji, 0); y += 25;
; 1723 : 
; 1724 : 							 sprintf(moji, "%3d", pet[i].ai);
; 1725 : 							 StockFontBuffer(x + 60, y, FONT_PRIO_FRONT, color, moji, 0); y += 36;
; 1726 : #endif // 战斗5宠
; 1727 : 
; 1728 : 
; 1729 : 							flag = TRUE;

  00510	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00516	83 c4 2c	 add	 esp, 44			; 0000002cH
  00519	8b 95 e0 fe ff
	ff		 mov	 edx, DWORD PTR _i$2$[ebp]
  0051f	83 c6 42	 add	 esi, 66			; 00000042H
  00522	bf 01 00 00 00	 mov	 edi, 1
  00527	89 b5 e4 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], esi
$LN8@BattleButt:

; 1661 : 
; 1662 : 					for( i = 0 ; i < 5 ; i++ ){

  0052d	42		 inc	 edx
  0052e	81 c3 78 0b 00
	00		 add	 ebx, 2936		; 00000b78H
  00534	89 95 e0 fe ff
	ff		 mov	 DWORD PTR _i$2$[ebp], edx
  0053a	83 fa 05	 cmp	 edx, 5
  0053d	0f 8c cd fd ff
	ff		 jl	 $LL10@BattleButt

; 1730 : 						}
; 1731 : 					}
; 1732 : 
; 1733 : 					if( flag == TRUE ){ 

  00543	5b		 pop	 ebx
  00544	83 ff 01	 cmp	 edi, 1
  00547	75 76		 jne	 SHORT $LN50@BattleButt

; 1734 : 
; 1735 : 						if( pc.battlePetNo != -1 ){ 

  00549	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0054c	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  00551	66 83 3d aa 00
	00 00 ff	 cmp	 WORD PTR ?pc@@3UPC@@A+170, -1
  00559	6a 02		 push	 2
  0055b	74 44		 je	 SHORT $LN52@BattleButt

; 1736 : 							battleMenuPetFontNo[ 5 ] = StockDispBuffer( pActWnd->x + 70 - offsetX, pActWnd->y + 299 - 召回offsetY, DISP_PRIO_IME3, CG_BTL_PET_RETURN_BTN, 2 );

  0055d	68 b9 65 00 00	 push	 26041			; 000065b9H
  00562	6a 69		 push	 105			; 00000069H
  00564	50		 push	 eax
  00565	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00568	2d a0 00 00 00	 sub	 eax, 160		; 000000a0H
  0056d	50		 push	 eax
  0056e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1737 : 							battleMenuPetFontNo[ 6 ] = StockDispBuffer( pActWnd->x + 187- offsetX, pActWnd->y + 299 - 召回offsetY, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  00573	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00579	a3 14 00 00 00	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+20, eax
  0057e	6a 02		 push	 2
  00580	68 ba 65 00 00	 push	 26042			; 000065baH
  00585	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00588	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  0058d	6a 69		 push	 105			; 00000069H
  0058f	50		 push	 eax
  00590	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00593	83 e8 2b	 sub	 eax, 43			; 0000002bH
  00596	50		 push	 eax
  00597	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0059c	83 c4 28	 add	 esp, 40			; 00000028H

; 1738 : 						}else{

  0059f	eb 6d		 jmp	 SHORT $LN83@BattleButt
$LN52@BattleButt:

; 1739 : 							battleMenuPetFontNo[ 6 ] = StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx - offsetX, pActWnd->y + 299 - 召回offsetY, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  005a1	68 ba 65 00 00	 push	 26042			; 000065baH
  005a6	6a 69		 push	 105			; 00000069H
  005a8	50		 push	 eax
  005a9	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  005ac	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  005af	2d e6 00 00 00	 sub	 eax, 230		; 000000e6H
  005b4	50		 push	 eax
  005b5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  005ba	83 c4 14	 add	 esp, 20			; 00000014H

; 1740 : 						}
; 1741 : 					}else{

  005bd	eb 4f		 jmp	 SHORT $LN83@BattleButt
$LN50@BattleButt:

; 1742 : #ifdef 战斗5宠
; 1743 : 						StockFontBuffer(x + 11 - offsetX, y - 召回offsetY - 70, FONT_PRIO_FRONT, 0, "플레이어가 없는 페트", 0);

  005bf	6a 00		 push	 0
  005c1	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FCDGFJJJ@?G?C?$LH?$LJ?$MA?L?$LO?n?$LA?$KB?5?$LO?x?$LE?B?5?F?d?F?$KO@
  005c6	6a 00		 push	 0
  005c8	6a 01		 push	 1
  005ca	8d 86 47 ff ff
	ff		 lea	 eax, DWORD PTR [esi-185]
  005d0	50		 push	 eax
  005d1	8b 85 e8 fe ff
	ff		 mov	 eax, DWORD PTR tv1544[ebp]
  005d7	05 36 ff ff ff	 add	 eax, -202		; ffffff36H
  005dc	50		 push	 eax
  005dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1744 : #else
; 1745 : 						StockFontBuffer(x + 11, y , FONT_PRIO_FRONT, 0, "没有参战的宠物", 0);
; 1746 : #endif
; 1747 : 						
; 1748 : 						battleMenuPetFontNo[ 6 ] = StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx - offsetX, pActWnd->y + 299 - 召回offsetY, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  005e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  005e8	6a 02		 push	 2
  005ea	68 ba 65 00 00	 push	 26042			; 000065baH
  005ef	6a 69		 push	 105			; 00000069H
  005f1	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  005f4	05 b8 00 00 00	 add	 eax, 184		; 000000b8H
  005f9	50		 push	 eax
  005fa	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  005fd	8b 40 14	 mov	 eax, DWORD PTR [eax+20]
  00600	2d e6 00 00 00	 sub	 eax, 230		; 000000e6H
  00605	50		 push	 eax
  00606	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0060b	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN83@BattleButt:

; 1749 : 					}
; 1750 : 				}			
; 1751 : 			}
; 1752 : 		}
; 1753 : 	}
; 1754 : }

  0060e	a3 18 00 00 00	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+24, eax
$LN51@BattleButt:
  00613	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00616	5f		 pop	 edi
  00617	33 cd		 xor	 ecx, ebp
  00619	5e		 pop	 esi
  0061a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0061f	8b e5		 mov	 esp, ebp
  00621	5d		 pop	 ebp
  00622	c3		 ret	 0
?BattleButtonPet@@YAXXZ ENDP				; BattleButtonPet
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonItem@@YAXXZ
_TEXT	SEGMENT
tv4820 = -280						; size = 4
tv4819 = -276						; size = 4
?BattleItemNo@@3HA$1 = -272				; size = 4
_x$1$ = -268						; size = 4
_y$1$ = -264						; size = 4
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleButtonItem@@YAXXZ PROC				; BattleButtonItem, COMDAT

; 1225 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 18 01 00
	00		 sub	 esp, 280		; 00000118H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1226 : 	int i, bak;
; 1227 : 	char moji[ 256 ];
; 1228 : 	int x, y;
; 1229 : 
; 1230 : 	if( HitDispNo == battleButtonDispNo[ 5 ] || battleButtonBak2 == 5 ){

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00018	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+20
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak2@@3HA
  00023	56		 push	 esi
  00024	74 10		 je	 SHORT $LN37@BattleButt
  00026	83 f8 05	 cmp	 eax, 5
  00029	74 0b		 je	 SHORT $LN37@BattleButt
  0002b	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActWnd@@3PAUaction@@A
  00031	e9 bf 00 00 00	 jmp	 $LN36@BattleButt
$LN37@BattleButt:

; 1231 : 		if( mouse.onceState & MOUSE_LEFT_CRICK || battleButtonBak2 == 5 ){

  00036	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0003d	75 09		 jne	 SHORT $LN39@BattleButt
  0003f	83 f8 05	 cmp	 eax, 5
  00042	0f 85 8d 00 00
	00		 jne	 $LN289@BattleButt
$LN39@BattleButt:

; 1232 : 			bak = battleButtonFlag[ 5 ];

  00048	8b 35 14 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA+20

; 1233 : 			BattleButtonOff();

  0004e	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 1234 : 
; 1235 : 			if( bak == FALSE ){

  00053	85 f6		 test	 esi, esi
  00055	75 7e		 jne	 SHORT $LN289@BattleButt

; 1236 : 
; 1237 : 				battleButtonFlag[ 5 ] = TRUE;
; 1238 : 
; 1239 : 				BattleCmdNo = BATTLE_ITEM;
; 1240 : 
; 1241 : 				for( i = 0 ; i < BATTLE_MENU_ITEM_FONTS ; i++ ) battleMenuItemFontNo[ i ] = -2;

  00057	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 1242 : 
; 1243 : 				pActWnd = MakeWindowDisp( 361, 160, 271, 281, 0, -1 );

  0005e	6a ff		 push	 -1
  00060	56		 push	 esi
  00061	68 19 01 00 00	 push	 281			; 00000119H
  00066	68 0f 01 00 00	 push	 271			; 0000010fH
  0006b	68 a0 00 00 00	 push	 160			; 000000a0H
  00070	68 69 01 00 00	 push	 361			; 00000169H
  00075	c7 05 14 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+20, 1
  0007f	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 3 ; BattleCmdNo
  00089	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuItemFontNo@@3PAHA, xmm0
  00090	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+16, -2 ; fffffffeH
  0009a	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+20, -2 ; fffffffeH
  000a4	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000a9	8b f0		 mov	 esi, eax
  000ab	89 35 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, esi

; 1244 : 
; 1245 : 				InitItem2( pActWnd->x, pActWnd->y );

  000b1	ff 76 1c	 push	 DWORD PTR [esi+28]
  000b4	ff 76 18	 push	 DWORD PTR [esi+24]
  000b7	e8 00 00 00 00	 call	 ?InitItem2@@YAXHH@Z	; InitItem2
  000bc	83 c4 20	 add	 esp, 32			; 00000020H

; 1246 : 
; 1247 : 				battleButtonBak = 5;

  000bf	c7 05 00 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, 5 ; battleButtonBak

; 1248 : 
; 1249 : 				battleButtonBak2 = -1;

  000c9	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
  000d3	eb 06		 jmp	 SHORT $LN40@BattleButt
$LN289@BattleButt:

; 1234 : 
; 1235 : 			if( bak == FALSE ){

  000d5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN40@BattleButt:

; 1250 : 			}
; 1251 : 		}
; 1252 : 
; 1253 : 		strcpy( OneLineInfoStr, "아이템。");

  000db	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_08CJOHOOE@?$LO?F?$MA?L?E?$NL?$KB?$KD@
  000e3	a0 08 00 00 00	 mov	 al, BYTE PTR ??_C@_08CJOHOOE@?$LO?F?$MA?L?E?$NL?$KB?$KD@+8
  000e8	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  000f0	a2 08 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+8, al
$LN36@BattleButt:

; 1254 : 	}
; 1255 : 
; 1256 : 	if( battleButtonFlag[ 5 ] == TRUE ){

  000f5	83 3d 14 00 00
	00 01		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+20, 1
  000fc	0f 85 bc 08 00
	00		 jne	 $LN103@BattleButt

; 1257 : 
; 1258 : 		if( pActWnd != NULL ){

  00102	85 f6		 test	 esi, esi
  00104	0f 84 b4 08 00
	00		 je	 $LN103@BattleButt

; 1259 : 
; 1260 : 			if( pActWnd->hp > 0 ){

  0010a	83 7e 78 00	 cmp	 DWORD PTR [esi+120], 0
  0010e	0f 8e aa 08 00
	00		 jle	 $LN103@BattleButt

; 1261 : #ifdef _READ16BITBMP
; 1262 : 				if(g_bUseAlpha) StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my, DISP_PRIO_MENU, CG_ITEM_WND_1, 1 );
; 1263 : 				else
; 1264 : #endif
; 1265 : 				StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my, DISP_PRIO_MENU, CG_ITEM_WND_1, 1 );

  00114	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00117	6a 01		 push	 1
  00119	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_ITEM_WND_1@@3HA ; CG_ITEM_WND_1
  0011f	6a 68		 push	 104			; 00000068H
  00121	ff 70 18	 push	 DWORD PTR [eax+24]
  00124	ff 70 14	 push	 DWORD PTR [eax+20]
  00127	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1266 : 
; 1267 : 				StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my - 80, DISP_PRIO_MENU, CG_BTL_ITEM_WND_TITLE, 1 );

  0012c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActWnd@@3PAUaction@@A
  00131	6a 01		 push	 1
  00133	68 d8 65 00 00	 push	 26072			; 000065d8H
  00138	6a 68		 push	 104			; 00000068H
  0013a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0013d	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00140	83 e8 50	 sub	 eax, 80			; 00000050H
  00143	50		 push	 eax
  00144	ff 71 14	 push	 DWORD PTR [ecx+20]
  00147	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0014c	83 c4 28	 add	 esp, 40			; 00000028H

; 1268 : 
; 1269 : 				if( mouse.onceState & MOUSE_LEFT_CRICK ){

  0014f	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00156	74 12		 je	 SHORT $LN45@BattleButt

; 1270 : 
; 1271 : 					if( HitDispNo == battleMenuItemFontNo[ 0 ] ){

  00158	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  0015d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?battleMenuItemFontNo@@3PAHA
  00163	75 05		 jne	 SHORT $LN45@BattleButt

; 1272 : 						BattleButtonOff();				

  00165	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff
$LN45@BattleButt:

; 1273 : 					}
; 1274 : 				}
; 1275 : 
; 1276 : 				if( pActWnd != NULL ){

  0016a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActWnd@@3PAUaction@@A
  0016f	85 c0		 test	 eax, eax
  00171	0f 84 47 08 00
	00		 je	 $LN103@BattleButt

; 1277 : 
; 1278 : 					x = pActWnd->x + 16;

  00177	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]

; 1279 : 					y = pActWnd->y + 191 + 7;
; 1280 : 
; 1281 : 					for(  i = MAX_ITEMSTART + 15 -1 ; i >= MAX_ITEMSTART ; i-- ){

  0017a	be 17 00 00 00	 mov	 esi, 23			; 00000017H
  0017f	8b 40 1c	 mov	 eax, DWORD PTR [eax+28]
  00182	83 c1 10	 add	 ecx, 16			; 00000010H
  00185	53		 push	 ebx
  00186	57		 push	 edi
  00187	05 c6 00 00 00	 add	 eax, 198		; 000000c6H
  0018c	89 8d f4 fe ff
	ff		 mov	 DWORD PTR _x$1$[ebp], ecx
  00192	bf ec 02 00 00	 mov	 edi, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+748
  00197	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  0019d	bb fc 23 00 00	 mov	 ebx, OFFSET ?pc@@3UPC@@A+9212
  001a2	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR ?BattleItemNo@@3HA$1[ebp], esi
  001a8	89 bd e8 fe ff
	ff		 mov	 DWORD PTR tv4820[ebp], edi
  001ae	89 9d ec fe ff
	ff		 mov	 DWORD PTR tv4819[ebp], ebx
$LL7@BattleButt:

; 1282 : 
; 1283 : 						if( MakeHitBox( ItemBuffer[ i ].defX - 24, ItemBuffer[ i ].defY - 24, 
; 1284 : 										ItemBuffer[ i ].defX + 25, ItemBuffer[ i ].defY + 23, DISP_PRIO_IME3 ) == TRUE ){

  001b4	8b 0f		 mov	 ecx, DWORD PTR [edi]
  001b6	8b 57 fc	 mov	 edx, DWORD PTR [edi-4]
  001b9	6a 69		 push	 105			; 00000069H
  001bb	8d 41 17	 lea	 eax, DWORD PTR [ecx+23]
  001be	50		 push	 eax
  001bf	8d 42 19	 lea	 eax, DWORD PTR [edx+25]
  001c2	50		 push	 eax
  001c3	8d 41 e8	 lea	 eax, DWORD PTR [ecx-24]
  001c6	50		 push	 eax
  001c7	8d 42 e8	 lea	 eax, DWORD PTR [edx-24]
  001ca	50		 push	 eax
  001cb	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  001d0	83 c4 14	 add	 esp, 20			; 00000014H
  001d3	83 f8 01	 cmp	 eax, 1
  001d6	0f 85 48 01 00
	00		 jne	 $LN57@BattleButt

; 1285 : 
; 1286 : 							if( pc.item[ i ].useFlag == TRUE ){ 

  001dc	66 39 43 c8	 cmp	 WORD PTR [ebx-56], ax
  001e0	0f 85 2e 01 00
	00		 jne	 $LN9@BattleButt

; 1287 : 								int color = FONT_PAL_WHITE;

  001e6	33 c9		 xor	 ecx, ecx

; 1288 : 
; 1289 : 								char *splitPoint = pc.item[ i ].memo;

  001e8	8b fb		 mov	 edi, ebx

; 1290 : 
; 1291 : 								if( pc.transmigration == 0 && pc.level < pc.item[ i ].level ) color = FONT_PAL_RED;

  001ea	66 39 0d f4 50
	00 00		 cmp	 WORD PTR ?pc@@3UPC@@A+20724, cx
  001f1	75 13		 jne	 SHORT $LN49@BattleButt
  001f3	a1 38 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+56
  001f8	3b 83 f4 fe ff
	ff		 cmp	 eax, DWORD PTR [ebx-268]
  001fe	b8 06 00 00 00	 mov	 eax, 6
  00203	0f 4c c8	 cmovl	 ecx, eax
$LN49@BattleButt:

; 1292 : 
; 1293 : 								StockFontBuffer( pActWnd->x + 16, pActWnd->y + 332 - 160, FONT_PRIO_FRONT, color, pc.item[ i ].name, 0 );	

  00206	6a 00		 push	 0
  00208	8d 43 d2	 lea	 eax, DWORD PTR [ebx-46]
  0020b	50		 push	 eax
  0020c	51		 push	 ecx
  0020d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00213	6a 01		 push	 1
  00215	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00218	05 ac 00 00 00	 add	 eax, 172		; 000000acH
  0021d	50		 push	 eax
  0021e	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00221	83 c0 10	 add	 eax, 16			; 00000010H
  00224	50		 push	 eax
  00225	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1294 : 
; 1295 : 								while( 1 ){
; 1296 : 
; 1297 : 									if( strlen( splitPoint ) > 28 ){

  0022a	8b cb		 mov	 ecx, ebx
  0022c	83 c4 18	 add	 esp, 24			; 00000018H
  0022f	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL286@BattleButt:
  00232	8a 01		 mov	 al, BYTE PTR [ecx]
  00234	41		 inc	 ecx
  00235	84 c0		 test	 al, al
  00237	75 f9		 jne	 SHORT $LL286@BattleButt
  00239	2b ca		 sub	 ecx, edx
  0023b	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0023e	0f 86 91 00 00
	00		 jbe	 $LN50@BattleButt
  00244	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _y$1$[ebp]
  0024a	8b 9d f4 fe ff
	ff		 mov	 ebx, DWORD PTR _x$1$[ebp]
$LL8@BattleButt:

; 1298 : 										strncpy( moji, splitPoint, 28 );

  00250	6a 1c		 push	 28			; 0000001cH
  00252	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00258	57		 push	 edi
  00259	50		 push	 eax
  0025a	e8 00 00 00 00	 call	 _strncpy

; 1299 : 										moji[ 28 ] = NULL;
; 1300 : 
; 1301 : 										if( GetStrLastByte( moji ) == 3 ){

  0025f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00265	c6 85 18 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+28], 0
  0026c	50		 push	 eax
  0026d	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00272	83 c4 10	 add	 esp, 16			; 00000010H
  00275	83 f8 03	 cmp	 eax, 3
  00278	75 0e		 jne	 SHORT $LN52@BattleButt

; 1302 : 											moji[ 27 ] = NULL;

  0027a	c6 85 17 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+27], 0

; 1303 : 											splitPoint += 27;

  00281	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH

; 1304 : 										}else{

  00286	eb 0c		 jmp	 SHORT $LN53@BattleButt
$LN52@BattleButt:

; 1305 : 											moji[ 28 ] = NULL;

  00288	c6 85 18 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+28], 0

; 1306 : 											splitPoint += 28;

  0028f	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
$LN53@BattleButt:

; 1307 : 										}
; 1308 : 										StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 ); y += 24;

  00294	6a 00		 push	 0
  00296	03 f8		 add	 edi, eax
  00298	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0029e	50		 push	 eax
  0029f	6a 00		 push	 0
  002a1	6a 01		 push	 1
  002a3	56		 push	 esi
  002a4	53		 push	 ebx
  002a5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002aa	8b cf		 mov	 ecx, edi
  002ac	83 c4 18	 add	 esp, 24			; 00000018H
  002af	83 c6 18	 add	 esi, 24			; 00000018H
  002b2	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL287@BattleButt:

; 1294 : 
; 1295 : 								while( 1 ){
; 1296 : 
; 1297 : 									if( strlen( splitPoint ) > 28 ){

  002b5	8a 01		 mov	 al, BYTE PTR [ecx]
  002b7	41		 inc	 ecx
  002b8	84 c0		 test	 al, al
  002ba	75 f9		 jne	 SHORT $LL287@BattleButt
  002bc	2b ca		 sub	 ecx, edx
  002be	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  002c1	77 8d		 ja	 SHORT $LL8@BattleButt
  002c3	8b 9d ec fe ff
	ff		 mov	 ebx, DWORD PTR tv4819[ebp]
  002c9	89 b5 f8 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], esi
  002cf	8b b5 f0 fe ff
	ff		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA$1[ebp]
$LN50@BattleButt:

; 1309 : 									}else{
; 1310 : 										strcpy( moji, splitPoint );

  002d5	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _moji$[ebp]
  002db	2b cf		 sub	 ecx, edi
  002dd	0f 1f 00	 npad	 3
$LL111@BattleButt:
  002e0	8a 07		 mov	 al, BYTE PTR [edi]
  002e2	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  002e5	88 44 39 ff	 mov	 BYTE PTR [ecx+edi-1], al
  002e9	84 c0		 test	 al, al
  002eb	75 f3		 jne	 SHORT $LL111@BattleButt

; 1311 : 										StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 );

  002ed	6a 00		 push	 0
  002ef	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  002f5	50		 push	 eax
  002f6	6a 00		 push	 0
  002f8	6a 01		 push	 1
  002fa	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  00300	ff b5 f4 fe ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  00306	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0030b	8b bd e8 fe ff
	ff		 mov	 edi, DWORD PTR tv4820[ebp]
  00311	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@BattleButt:

; 1312 : 										break;
; 1313 : 									}
; 1314 : 								}
; 1315 : 							}
; 1316 : 
; 1317 : 							if( mouse.onceState & MOUSE_LEFT_DBL_CRICK ){

  00314	f6 05 2c 00 00
	00 10		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 16 ; 00000010H
  0031b	74 07		 je	 SHORT $LN57@BattleButt

; 1318 : 
; 1319 : 								if( pc.item[ i ].useFlag == TRUE ){

  0031d	66 83 7b c8 01	 cmp	 WORD PTR [ebx-56], 1
  00322	74 4e		 je	 SHORT $_aa$350
$LN57@BattleButt:

; 1535 : 											break;
; 1536 : #endif
; 1537 : 										}
; 1538 : 										break;
; 1539 : 									}
; 1540 : 								}
; 1541 : 							}
; 1542 : 						}
; 1543 : 						if( pc.item[ i ].useFlag == TRUE ){

  00324	66 83 7b c8 01	 cmp	 WORD PTR [ebx-56], 1
  00329	75 1a		 jne	 SHORT $LN5@BattleButt

; 1544 : 							StockDispBuffer( ItemBuffer[ i ].defX, ItemBuffer[ i ].defY, ItemBuffer[ i ].dispPrio, pc.item[ i ].graNo, 0 );

  0032b	0f b6 47 08	 movzx	 eax, BYTE PTR [edi+8]
  0032f	6a 00		 push	 0
  00331	ff b3 f0 fe ff
	ff		 push	 DWORD PTR [ebx-272]
  00337	50		 push	 eax
  00338	ff 37		 push	 DWORD PTR [edi]
  0033a	ff 77 fc	 push	 DWORD PTR [edi-4]
  0033d	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00342	83 c4 14	 add	 esp, 20			; 00000014H
$LN5@BattleButt:

; 1279 : 					y = pActWnd->y + 191 + 7;
; 1280 : 
; 1281 : 					for(  i = MAX_ITEMSTART + 15 -1 ; i >= MAX_ITEMSTART ; i-- ){

  00345	81 eb 7c 01 00
	00		 sub	 ebx, 380		; 0000017cH
  0034b	4e		 dec	 esi
  0034c	83 ef 20	 sub	 edi, 32			; 00000020H
  0034f	89 b5 f0 fe ff
	ff		 mov	 DWORD PTR ?BattleItemNo@@3HA$1[ebp], esi
  00355	89 9d ec fe ff
	ff		 mov	 DWORD PTR tv4819[ebp], ebx
  0035b	89 bd e8 fe ff
	ff		 mov	 DWORD PTR tv4820[ebp], edi
  00361	81 fb 34 0f 00
	00		 cmp	 ebx, OFFSET ?pc@@3UPC@@A+3892
  00367	0f 8d 47 fe ff
	ff		 jge	 $LL7@BattleButt
  0036d	e9 1b 06 00 00	 jmp	 $LN285@BattleButt
$_aa$350:

; 1320 : 
; 1321 : 									if( pc.item[ i ].useFlag != TRUE || pc.item[ i ].field == ITEM_FIELD_MAP ||  pc.transmigration == 0 && pc.level < pc.item[ i ].level ){
; 1322 : 										//JL fix 战斗换装备  服务端不支持，不修了
; 1323 : 										goto _aa;
; 1324 : 										play_se( 220, 320, 240 );
; 1325 : 									}else{
; 1326 : 										_aa:
; 1327 : 										BattleItemNo = i;
; 1328 : 
; 1329 : 										switch( pc.item[ i ].target ){

  00372	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00378	89 35 00 00 00
	00		 mov	 DWORD PTR ?BattleItemNo@@3HA, esi ; BattleItemNo
  0037e	0f bf 88 a4 01
	00 00		 movsx	 ecx, WORD PTR ?pc@@3UPC@@A[eax+420]
  00385	83 f9 08	 cmp	 ecx, 8
  00388	0f 87 ff 05 00
	00		 ja	 $LN285@BattleButt
  0038e	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN288@BattleButt[ecx*4]
$LN60@BattleButt:

; 1330 : 										case ITEM_TARGET_MYSELF:
; 1331 : 
; 1332 : 											p_party[ BattleMyNo ]->atr |= ACT_ATR_HIT_BOX;

  00395	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0039a	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  003a1	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN293@BattleButt:

; 1545 : 						}
; 1546 : 					}
; 1547 : 
; 1548 : 					if( pActWnd != NULL ){

  003a8	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  003ae	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 1
  003b8	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  003bd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  003c7	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
  003cc	68 f0 00 00 00	 push	 240			; 000000f0H
  003d1	68 40 01 00 00	 push	 320			; 00000140H
  003d6	68 d9 00 00 00	 push	 217			; 000000d9H
  003db	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 3 ; BattleCmdNo
  003e5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003ea	83 c4 10	 add	 esp, 16			; 00000010H
  003ed	e9 9b 05 00 00	 jmp	 $LN285@BattleButt
$LN61@BattleButt:

; 1333 : 
; 1334 : 											battleTargetSelectFlag = TRUE;
; 1335 : 
; 1336 : 											DeathAction( pActWnd );
; 1337 : 											pActWnd = NULL;
; 1338 : 
; 1339 : 											ClearBattleButton();
; 1340 : 
; 1341 : 											BattleCmdNo = BATTLE_ITEM;
; 1342 : 
; 1343 : 											play_se( 217, 320, 240 );
; 1344 : 											break;
; 1345 : 											
; 1346 : 										case ITEM_TARGET_OTHER:
; 1347 : 
; 1348 : 											for( i = 0 ; i < 20 ; i++ ){

  003f2	ba 00 00 00 00	 mov	 edx, OFFSET ?p_party@@3PAPAUaction@@A
$LL14@BattleButt:

; 1349 : 
; 1350 : 												if( p_party[ i ]->func == NULL ) continue;

  003f7	8b 0a		 mov	 ecx, DWORD PTR [edx]
  003f9	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  003fd	74 23		 je	 SHORT $LN12@BattleButt

; 1351 : 
; 1352 : 												if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  003ff	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00405	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0040d	75 06		 jne	 SHORT $LN64@BattleButt
  0040f	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00413	7e 0d		 jle	 SHORT $LN12@BattleButt
$LN64@BattleButt:

; 1353 : 
; 1354 : 												p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00415	83 89 a4 00 00
	00 08		 or	 DWORD PTR [ecx+164], 8
  0041c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN12@BattleButt:

; 1333 : 
; 1334 : 											battleTargetSelectFlag = TRUE;
; 1335 : 
; 1336 : 											DeathAction( pActWnd );
; 1337 : 											pActWnd = NULL;
; 1338 : 
; 1339 : 											ClearBattleButton();
; 1340 : 
; 1341 : 											BattleCmdNo = BATTLE_ITEM;
; 1342 : 
; 1343 : 											play_se( 217, 320, 240 );
; 1344 : 											break;
; 1345 : 											
; 1346 : 										case ITEM_TARGET_OTHER:
; 1347 : 
; 1348 : 											for( i = 0 ; i < 20 ; i++ ){

  00422	83 c2 04	 add	 edx, 4
  00425	81 fa 50 00 00
	00		 cmp	 edx, OFFSET ?p_party@@3PAPAUaction@@A+80
  0042b	7c ca		 jl	 SHORT $LL14@BattleButt

; 1355 : 											}
; 1356 : 
; 1357 : 											battleTargetSelectFlag = TRUE;
; 1358 : 
; 1359 : 											DeathAction( pActWnd );
; 1360 : 											pActWnd = NULL;
; 1361 : 
; 1362 : 											ClearBattleButton();
; 1363 : 
; 1364 : 											BattleCmdNo = BATTLE_ITEM;
; 1365 : 
; 1366 : 											play_se( 217, 320, 240 );
; 1367 : 											break;

  0042d	e9 76 ff ff ff	 jmp	 $LN293@BattleButt
$LN65@BattleButt:

; 1368 : 											
; 1369 : 										case ITEM_TARGET_ALLMYSIDE:
; 1370 : 
; 1371 : 											if( BattleMyNo < 10 ){

  00432	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  00439	0f 8d f5 01 00
	00		 jge	 $LN66@BattleButt
$LN321@BattleButt:

; 1545 : 						}
; 1546 : 					}
; 1547 : 
; 1548 : 					if( pActWnd != NULL ){

  0043f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A
  00445	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00449	74 20		 je	 SHORT $LN15@BattleButt
  0044b	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00453	75 06		 jne	 SHORT $LN70@BattleButt
  00455	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00459	7e 10		 jle	 SHORT $LN15@BattleButt
$LN70@BattleButt:
  0045b	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  00465	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN15@BattleButt:
  0046b	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00471	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00475	74 26		 je	 SHORT $LN160@BattleButt
  00477	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0047d	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00485	75 06		 jne	 SHORT $LN159@BattleButt
  00487	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0048b	7e 10		 jle	 SHORT $LN160@BattleButt
$LN159@BattleButt:
  0048d	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  00497	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN160@BattleButt:
  0049d	8b 0d 08 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  004a3	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  004a7	74 26		 je	 SHORT $LN163@BattleButt
  004a9	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  004af	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  004b7	75 06		 jne	 SHORT $LN162@BattleButt
  004b9	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  004bd	7e 10		 jle	 SHORT $LN163@BattleButt
$LN162@BattleButt:
  004bf	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  004c9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN163@BattleButt:
  004cf	8b 0d 0c 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  004d5	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  004d9	74 26		 je	 SHORT $LN166@BattleButt
  004db	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  004e1	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  004e9	75 06		 jne	 SHORT $LN165@BattleButt
  004eb	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  004ef	7e 10		 jle	 SHORT $LN166@BattleButt
$LN165@BattleButt:
  004f1	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  004fb	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN166@BattleButt:
  00501	8b 0d 10 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  00507	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0050b	74 26		 je	 SHORT $LN169@BattleButt
  0050d	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00513	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0051b	75 06		 jne	 SHORT $LN168@BattleButt
  0051d	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00521	7e 10		 jle	 SHORT $LN169@BattleButt
$LN168@BattleButt:
  00523	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  0052d	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN169@BattleButt:
  00533	8b 0d 14 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00539	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0053d	74 26		 je	 SHORT $LN172@BattleButt
  0053f	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00545	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0054d	75 06		 jne	 SHORT $LN171@BattleButt
  0054f	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00553	7e 10		 jle	 SHORT $LN172@BattleButt
$LN171@BattleButt:
  00555	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  0055f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN172@BattleButt:
  00565	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  0056b	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0056f	74 26		 je	 SHORT $LN175@BattleButt
  00571	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00577	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0057f	75 06		 jne	 SHORT $LN174@BattleButt
  00581	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00585	7e 10		 jle	 SHORT $LN175@BattleButt
$LN174@BattleButt:
  00587	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  00591	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN175@BattleButt:
  00597	8b 0d 1c 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  0059d	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  005a1	74 26		 je	 SHORT $LN178@BattleButt
  005a3	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  005a9	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  005b1	75 06		 jne	 SHORT $LN177@BattleButt
  005b3	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  005b7	7e 10		 jle	 SHORT $LN178@BattleButt
$LN177@BattleButt:
  005b9	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  005c3	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN178@BattleButt:
  005c9	8b 0d 20 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  005cf	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  005d3	74 26		 je	 SHORT $LN181@BattleButt
  005d5	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  005db	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  005e3	75 06		 jne	 SHORT $LN180@BattleButt
  005e5	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  005e9	7e 10		 jle	 SHORT $LN181@BattleButt
$LN180@BattleButt:
  005eb	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  005f5	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN181@BattleButt:
  005fb	8b 0d 24 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  00601	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00605	0f 84 9d fd ff
	ff		 je	 $LN293@BattleButt
  0060b	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00611	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00619	75 0a		 jne	 SHORT $LN183@BattleButt
  0061b	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0061f	0f 8e 83 fd ff
	ff		 jle	 $LN293@BattleButt
$LN183@BattleButt:
  00625	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  0062f	e9 74 fd ff ff	 jmp	 $LN293@BattleButt
$LN66@BattleButt:
  00634	8b 0d 28 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  0063a	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0063e	74 20		 je	 SHORT $LN18@BattleButt
  00640	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00648	75 06		 jne	 SHORT $LN73@BattleButt
  0064a	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0064e	7e 10		 jle	 SHORT $LN18@BattleButt
$LN73@BattleButt:
  00650	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  0065a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN18@BattleButt:
  00660	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00666	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0066a	74 26		 je	 SHORT $LN191@BattleButt
  0066c	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00672	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0067a	75 06		 jne	 SHORT $LN190@BattleButt
  0067c	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00680	7e 10		 jle	 SHORT $LN191@BattleButt
$LN190@BattleButt:
  00682	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  0068c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN191@BattleButt:
  00692	8b 0d 30 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00698	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0069c	74 26		 je	 SHORT $LN194@BattleButt
  0069e	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  006a4	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  006ac	75 06		 jne	 SHORT $LN193@BattleButt
  006ae	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  006b2	7e 10		 jle	 SHORT $LN194@BattleButt
$LN193@BattleButt:
  006b4	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  006be	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN194@BattleButt:
  006c4	8b 0d 34 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  006ca	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  006ce	74 26		 je	 SHORT $LN197@BattleButt
  006d0	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  006d6	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  006de	75 06		 jne	 SHORT $LN196@BattleButt
  006e0	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  006e4	7e 10		 jle	 SHORT $LN197@BattleButt
$LN196@BattleButt:
  006e6	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  006f0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN197@BattleButt:
  006f6	8b 0d 38 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  006fc	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00700	74 26		 je	 SHORT $LN200@BattleButt
  00702	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00708	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00710	75 06		 jne	 SHORT $LN199@BattleButt
  00712	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00716	7e 10		 jle	 SHORT $LN200@BattleButt
$LN199@BattleButt:
  00718	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  00722	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN200@BattleButt:
  00728	8b 0d 3c 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  0072e	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00732	74 26		 je	 SHORT $LN203@BattleButt
  00734	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0073a	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00742	75 06		 jne	 SHORT $LN202@BattleButt
  00744	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00748	7e 10		 jle	 SHORT $LN203@BattleButt
$LN202@BattleButt:
  0074a	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  00754	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN203@BattleButt:
  0075a	8b 0d 40 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00760	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00764	74 26		 je	 SHORT $LN206@BattleButt
  00766	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0076c	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00774	75 06		 jne	 SHORT $LN205@BattleButt
  00776	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0077a	7e 10		 jle	 SHORT $LN206@BattleButt
$LN205@BattleButt:
  0077c	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  00786	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN206@BattleButt:
  0078c	8b 0d 44 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00792	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00796	74 26		 je	 SHORT $LN209@BattleButt
  00798	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0079e	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  007a6	75 06		 jne	 SHORT $LN208@BattleButt
  007a8	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  007ac	7e 10		 jle	 SHORT $LN209@BattleButt
$LN208@BattleButt:
  007ae	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  007b8	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN209@BattleButt:
  007be	8b 0d 48 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  007c4	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  007c8	74 26		 je	 SHORT $LN212@BattleButt
  007ca	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  007d0	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  007d8	75 06		 jne	 SHORT $LN211@BattleButt
  007da	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  007de	7e 10		 jle	 SHORT $LN212@BattleButt
$LN211@BattleButt:
  007e0	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  007ea	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN212@BattleButt:
  007f0	8b 0d 4c 00 00
	00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  007f6	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  007fa	0f 84 a8 fb ff
	ff		 je	 $LN293@BattleButt
  00800	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00806	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  0080e	75 0a		 jne	 SHORT $LN214@BattleButt
  00810	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00814	0f 8e 8e fb ff
	ff		 jle	 $LN293@BattleButt
$LN214@BattleButt:
  0081a	81 89 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [ecx+164], 16384 ; 00004000H
  00824	e9 7f fb ff ff	 jmp	 $LN293@BattleButt
$LN74@BattleButt:

; 1372 : 
; 1373 : 												for( i = 0 ; i < 10 ; i++ ){
; 1374 : 
; 1375 : 													if( p_party[ i ]->func == NULL ) continue;
; 1376 : 
; 1377 : 													if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 1378 : 
; 1379 : 													p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 1380 : 												}
; 1381 : 											}
; 1382 : 
; 1383 : 											else{
; 1384 : 
; 1385 : 												for( i = 10 ; i < 20 ; i++ ){
; 1386 : 
; 1387 : 													if( p_party[ i ]->func == NULL ) continue;
; 1388 : 
; 1389 : 													if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 1390 : 
; 1391 : 													p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 1392 : 												}
; 1393 : 											}
; 1394 : 
; 1395 : 											battleTargetSelectFlag = TRUE;
; 1396 : 
; 1397 : 											DeathAction( pActWnd );
; 1398 : 											pActWnd = NULL;
; 1399 : 
; 1400 : 											ClearBattleButton();
; 1401 : 
; 1402 : 											BattleCmdNo = BATTLE_ITEM;
; 1403 : 
; 1404 : 											play_se( 217, 320, 240 );
; 1405 : 											break;
; 1406 : 											
; 1407 : 										case ITEM_TARGET_ALLOTHERSIDE:
; 1408 : 
; 1409 : 											if( BattleMyNo >= 10 ){

  00829	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  00830	0f 8d 09 fc ff
	ff		 jge	 $LN321@BattleButt

; 1410 : 
; 1411 : 												for( i = 0 ; i < 10 ; i++ ){
; 1412 : 
; 1413 : 													if( p_party[ i ]->func == NULL ) continue;
; 1414 : 
; 1415 : 													if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 1416 : 
; 1417 : 													p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 1418 : 												}
; 1419 : 											}else{
; 1420 : 
; 1421 : 												for( i = 10 ; i < 20 ; i++ ){
; 1422 : 
; 1423 : 													if( p_party[ i ]->func == NULL ) continue;
; 1424 : 
; 1425 : 													if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 1426 : 
; 1427 : 													p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 1428 : 												}
; 1429 : 											}
; 1430 : 
; 1431 : 											battleTargetSelectFlag = TRUE;
; 1432 : 
; 1433 : 											DeathAction( pActWnd );
; 1434 : 											pActWnd = NULL;
; 1435 : 
; 1436 : 											ClearBattleButton();
; 1437 : 
; 1438 : 											BattleCmdNo = BATTLE_ITEM;
; 1439 : 
; 1440 : 											play_se( 217, 320, 240 );
; 1441 : 											break;

  00836	e9 f9 fd ff ff	 jmp	 $LN66@BattleButt
$LN83@BattleButt:

; 1442 : 										
; 1443 : 										case ITEM_TARGET_ALL:
; 1444 : 
; 1445 : 											for( i = 0 ; i < 20 ; i++ ){

  0083b	ba 00 00 00 00	 mov	 edx, OFFSET ?p_party@@3PAPAUaction@@A
$LL29@BattleButt:

; 1446 : 
; 1447 : 												if( p_party[ i ]->func == NULL ) continue;

  00840	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00842	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00846	74 26		 je	 SHORT $LN27@BattleButt

; 1448 : 
; 1449 : 												if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  00848	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0084e	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00856	75 06		 jne	 SHORT $LN86@BattleButt
  00858	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  0085c	7e 10		 jle	 SHORT $LN27@BattleButt
$LN86@BattleButt:

; 1450 : 
; 1451 : 												p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0085e	81 89 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [ecx+164], 8192 ; 00002000H
  00868	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN27@BattleButt:

; 1442 : 										
; 1443 : 										case ITEM_TARGET_ALL:
; 1444 : 
; 1445 : 											for( i = 0 ; i < 20 ; i++ ){

  0086e	83 c2 04	 add	 edx, 4
  00871	81 fa 50 00 00
	00		 cmp	 edx, OFFSET ?p_party@@3PAPAUaction@@A+80
  00877	7c c7		 jl	 SHORT $LL29@BattleButt

; 1452 : 											}
; 1453 : 
; 1454 : 											battleTargetSelectFlag = TRUE;
; 1455 : 
; 1456 : 											DeathAction( pActWnd );
; 1457 : 											pActWnd = NULL;
; 1458 : 
; 1459 : 											ClearBattleButton();
; 1460 : 
; 1461 : 											BattleCmdNo = BATTLE_ITEM;
; 1462 : 
; 1463 : 											play_se( 217, 320, 240 );
; 1464 : 											break;

  00879	e9 2a fb ff ff	 jmp	 $LN293@BattleButt
$LN87@BattleButt:

; 1465 : 											
; 1466 : 										case ITEM_TARGET_NONE:
; 1467 : 
; 1468 : 											BattleButtonOff();

  0087e	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 1469 : 											battleMenuReturn = TRUE;
; 1470 : 
; 1471 : 											if( bNewServer)

  00883	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0088a	6a 00		 push	 0
  0088c	56		 push	 esi
  0088d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00893	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1
  0089d	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  008a3	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  008a9	74 07		 je	 SHORT $LN88@BattleButt

; 1472 : 												lssproto_ID_send( sockfd, nowGx, nowGy, i, 0 );

  008ab	e8 00 00 00 00	 call	 ?lssproto_ID_send@@YAXHHHHH@Z ; lssproto_ID_send
  008b0	eb 05		 jmp	 SHORT $LN291@BattleButt
$LN88@BattleButt:

; 1473 : 											else
; 1474 : 												old_lssproto_ID_send( sockfd, nowGx, nowGy, i, 0 );

  008b2	e8 00 00 00 00	 call	 ?old_lssproto_ID_send@@YAXHHHHH@Z ; old_lssproto_ID_send
$LN291@BattleButt:

; 1475 : 
; 1476 : 											play_se( 203, 320, 240 );

  008b7	83 c4 14	 add	 esp, 20			; 00000014H
  008ba	68 f0 00 00 00	 push	 240			; 000000f0H
  008bf	68 40 01 00 00	 push	 320			; 00000140H
  008c4	68 cb 00 00 00	 push	 203			; 000000cbH
  008c9	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 1477 : 
; 1478 : 											battleTargetSelectFlag = FALSE;

  008ce	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0

; 1479 : 											break;

  008d8	e9 ad 00 00 00	 jmp	 $LN292@BattleButt
$LN90@BattleButt:

; 1480 : 											
; 1481 : 										case ITEM_TARGET_OTHERWITHOUTMYSELF:
; 1482 : 
; 1483 : 											for( i = 0 ; i < 20 ; i++ ){

  008dd	33 c9		 xor	 ecx, ecx
  008df	90		 npad	 1
$LL32@BattleButt:

; 1484 : 
; 1485 : 												if( p_party[ i ]->func == NULL ) continue;

  008e0	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  008e7	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  008eb	74 2b		 je	 SHORT $LN30@BattleButt

; 1486 : 
; 1487 : 												if( i == BattleMyNo ) continue;

  008ed	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  008f3	74 23		 je	 SHORT $LN30@BattleButt

; 1488 : 
; 1489 : 												if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  008f5	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  008fb	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00903	75 06		 jne	 SHORT $LN94@BattleButt
  00905	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00909	7e 0d		 jle	 SHORT $LN30@BattleButt
$LN94@BattleButt:

; 1490 : 
; 1491 : 												p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0090b	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00912	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
$LN30@BattleButt:

; 1480 : 											
; 1481 : 										case ITEM_TARGET_OTHERWITHOUTMYSELF:
; 1482 : 
; 1483 : 											for( i = 0 ; i < 20 ; i++ ){

  00918	41		 inc	 ecx
  00919	83 f9 14	 cmp	 ecx, 20			; 00000014H
  0091c	7c c2		 jl	 SHORT $LL32@BattleButt

; 1492 : 											}
; 1493 : 
; 1494 : 											battleTargetSelectFlag = TRUE;
; 1495 : 
; 1496 : 											DeathAction( pActWnd );
; 1497 : 											pActWnd = NULL;
; 1498 : 	
; 1499 : 											ClearBattleButton();
; 1500 : 
; 1501 : 											BattleCmdNo = BATTLE_ITEM;
; 1502 : 
; 1503 : 											play_se( 217, 320, 240 );
; 1504 : 											break;

  0091e	e9 85 fa ff ff	 jmp	 $LN293@BattleButt
$LN95@BattleButt:

; 1505 : 											
; 1506 : 										case ITEM_TARGET_WITHOUTMYSELFANDPET:
; 1507 : 
; 1508 : 											for( i = 0 ; i < 20 ; i++ ){

  00923	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00929	33 c9		 xor	 ecx, ecx
  0092b	0f 1f 44 00 00	 npad	 5
$LL35@BattleButt:

; 1509 : 
; 1510 : 												if( p_party[ i ]->func == NULL ) continue;

  00930	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  00937	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0093b	74 34		 je	 SHORT $LN33@BattleButt

; 1511 : 
; 1512 : 												if( i == BattleMyNo + 5 ) continue;

  0093d	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  00940	3b c8		 cmp	 ecx, eax
  00942	74 2d		 je	 SHORT $LN33@BattleButt

; 1513 : 
; 1514 : 												if( i == BattleMyNo ) continue;

  00944	3b cf		 cmp	 ecx, edi
  00946	74 29		 je	 SHORT $LN33@BattleButt

; 1515 : 
; 1516 : 												if( pc.item[ BattleItemNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  00948	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  0094e	66 83 b8 a6 01
	00 00 00	 cmp	 WORD PTR ?pc@@3UPC@@A[eax+422], 0
  00956	75 06		 jne	 SHORT $LN100@BattleButt
  00958	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0095c	7e 13		 jle	 SHORT $LN33@BattleButt
$LN100@BattleButt:

; 1517 : 
; 1518 : 												p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0095e	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00965	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?BattleItemNo@@3HA ; BattleItemNo
  0096b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
$LN33@BattleButt:

; 1505 : 											
; 1506 : 										case ITEM_TARGET_WITHOUTMYSELFANDPET:
; 1507 : 
; 1508 : 											for( i = 0 ; i < 20 ; i++ ){

  00971	41		 inc	 ecx
  00972	83 f9 14	 cmp	 ecx, 20			; 00000014H
  00975	7c b9		 jl	 SHORT $LL35@BattleButt

; 1519 : 											}
; 1520 : 
; 1521 : 											battleTargetSelectFlag = TRUE;
; 1522 : 
; 1523 : 											DeathAction( pActWnd );
; 1524 : 											pActWnd = NULL;
; 1525 : 
; 1526 : 											ClearBattleButton();
; 1527 : 
; 1528 : 											BattleCmdNo = BATTLE_ITEM;
; 1529 : 
; 1530 : 											play_se( 217, 320, 240 );
; 1531 : 											break;

  00977	e9 2c fa ff ff	 jmp	 $LN293@BattleButt
$LN101@BattleButt:

; 1532 : #ifdef _PET_ITEM
; 1533 : 										case ITEM_TARGET_PET:	// 战斗中不可更换宠物装备
; 1534 : 											StockChatBufferLine("전투 중 애완동물 장비 교체 불가",FONT_PAL_RED);

  0097c	6a 00		 push	 0
  0097e	6a 06		 push	 6
  00980	68 00 00 00 00	 push	 OFFSET ??_C@_0CA@ELBOPCEK@?$MA?$PM?E?u?5?A?$NP?5?$LO?V?$LP?O?$LF?$LP?$LJ?$LA?5?$MA?e?$LK?q?5?$LB?$LD?C?$LM?5?$LK?R?$LA?$KB@
  00985	e8 00 00 00 00	 call	 ?StockChatBufferLine@@YAXPADEH@Z ; StockChatBufferLine
$LN292@BattleButt:

; 1545 : 						}
; 1546 : 					}
; 1547 : 
; 1548 : 					if( pActWnd != NULL ){

  0098a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN285@BattleButt:
  0098d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00993	5f		 pop	 edi
  00994	5b		 pop	 ebx
  00995	85 c9		 test	 ecx, ecx
  00997	74 25		 je	 SHORT $LN103@BattleButt

; 1549 : 						battleMenuItemFontNo[ 0 ] = StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, pActWnd->y + 262, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  00999	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0099c	6a 02		 push	 2
  0099e	68 ba 65 00 00	 push	 26042			; 000065baH
  009a3	05 06 01 00 00	 add	 eax, 262		; 00000106H
  009a8	6a 69		 push	 105			; 00000069H
  009aa	50		 push	 eax
  009ab	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  009ae	ff 70 14	 push	 DWORD PTR [eax+20]
  009b1	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  009b6	83 c4 14	 add	 esp, 20			; 00000014H
  009b9	a3 00 00 00 00	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA, eax
$LN103@BattleButt:

; 1550 : 					}
; 1551 : 				}
; 1552 : 			}  
; 1553 : 		} 
; 1554 : 	} 
; 1555 : }

  009be	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009c1	33 cd		 xor	 ecx, ebp
  009c3	5e		 pop	 esi
  009c4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009c9	8b e5		 mov	 esp, ebp
  009cb	5d		 pop	 ebp
  009cc	c3		 ret	 0
  009cd	0f 1f 00	 npad	 3
$LN288@BattleButt:
  009d0	00 00 00 00	 DD	 $LN60@BattleButt
  009d4	00 00 00 00	 DD	 $LN61@BattleButt
  009d8	00 00 00 00	 DD	 $LN65@BattleButt
  009dc	00 00 00 00	 DD	 $LN74@BattleButt
  009e0	00 00 00 00	 DD	 $LN83@BattleButt
  009e4	00 00 00 00	 DD	 $LN87@BattleButt
  009e8	00 00 00 00	 DD	 $LN90@BattleButt
  009ec	00 00 00 00	 DD	 $LN95@BattleButt
  009f0	00 00 00 00	 DD	 $LN101@BattleButt
?BattleButtonItem@@YAXXZ ENDP				; BattleButtonItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonGuard@@YAXXZ
_TEXT	SEGMENT
?BattleButtonGuard@@YAXXZ PROC				; BattleButtonGuard, COMDAT

; 1198 : 	if( HitDispNo == battleButtonDispNo[ 4 ] && battleButtonFlag[ 4 ] == FALSE ){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00005	3b 05 10 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+16
  0000b	0f 85 9d 00 00
	00		 jne	 $LN2@BattleButt
  00011	83 3d 10 00 00
	00 00		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+16, 0
  00018	0f 85 90 00 00
	00		 jne	 $LN2@BattleButt

; 1199 : 
; 1200 : 		if( mouse.onceState & MOUSE_LEFT_CRICK ){

  0001e	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00025	74 67		 je	 SHORT $LN3@BattleButt

; 1201 : 			BattleButtonOff();

  00027	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 1202 : 
; 1203 : 			battleButtonFlag[ 4 ] = TRUE;
; 1204 : 
; 1205 : 			if( bNewServer)

  0002c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00033	68 00 00 00 00	 push	 OFFSET ??_C@_01BBODEMC@G@
  00038	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0003e	c7 05 10 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+16, 1
  00048	74 07		 je	 SHORT $LN4@BattleButt

; 1206 : 				lssproto_B_send( sockfd, "G" );

  0004a	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  0004f	eb 05		 jmp	 SHORT $LN7@BattleButt
$LN4@BattleButt:

; 1207 : 			else
; 1208 : 				old_lssproto_B_send( sockfd, "G" );

  00051	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN7@BattleButt:

; 1209 : 
; 1210 : 			battleMenuReturn = TRUE;

  00056	83 c4 08	 add	 esp, 8
  00059	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1

; 1211 : 
; 1212 : 			battleButtonBak = -1;

  00063	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak@@3HA, -1 ; battleButtonBak

; 1213 : 
; 1214 : 			battleButtonBak2 = -1;

  0006d	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1

; 1215 : 
; 1216 : 			play_se( 203, 320, 240 );

  00077	68 f0 00 00 00	 push	 240			; 000000f0H
  0007c	68 40 01 00 00	 push	 320			; 00000140H
  00081	68 cb 00 00 00	 push	 203			; 000000cbH
  00086	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0008b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN3@BattleButt:

; 1217 : 		}
; 1218 : 
; 1219 : 		strcpy( OneLineInfoStr, "방어。");

  0008e	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@
  00093	a3 00 00 00 00	 mov	 DWORD PTR ?OneLineInfoStr@@3PADA, eax
  00098	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@+4
  0009e	66 a3 04 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+4, ax
  000a4	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06NDKEIKGO@?$LJ?f?$LO?n?$KB?$KD@+6
  000a9	a2 06 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+6, al
$LN2@BattleButt:

; 1220 : 	}
; 1221 : }

  000ae	c3		 ret	 0
?BattleButtonGuard@@YAXXZ ENDP				; BattleButtonGuard
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonHelp@@YAXXZ
_TEXT	SEGMENT
?BattleButtonHelp@@YAXXZ PROC				; BattleButtonHelp, COMDAT

; 1168 : 	if( HitDispNo == battleButtonDispNo[ 3 ] && battleButtonFlag[ 3 ] == FALSE ){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00005	3b 05 0c 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+12
  0000b	0f 85 a3 00 00
	00		 jne	 $LN5@BattleButt
  00011	83 3d 0c 00 00
	00 00		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+12, 0
  00018	0f 85 96 00 00
	00		 jne	 $LN5@BattleButt

; 1169 : 
; 1170 : 		strcpy( OneLineInfoStr, "HELP。");
; 1171 : 		if( mouse.onceState & MOUSE_LEFT_CRICK ){

  0001e	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_06EBHMOCNH@HELP?$KB?$KD@
  0002a	a3 00 00 00 00	 mov	 DWORD PTR ?OneLineInfoStr@@3PADA, eax
  0002f	66 a1 04 00 00
	00		 mov	 ax, WORD PTR ??_C@_06EBHMOCNH@HELP?$KB?$KD@+4
  00035	66 a3 04 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+4, ax
  0003b	a0 06 00 00 00	 mov	 al, BYTE PTR ??_C@_06EBHMOCNH@HELP?$KB?$KD@+6
  00040	a2 06 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+6, al
  00045	74 6d		 je	 SHORT $LN5@BattleButt

; 1172 : 
; 1173 : 			if( NoHelpFlag == TRUE ){

  00047	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?NoHelpFlag@@3HA, 1 ; NoHelpFlag
  0004e	75 18		 jne	 SHORT $LN4@BattleButt

; 1174 : 
; 1175 : 				play_se( 220, 320, 240 );

  00050	68 f0 00 00 00	 push	 240			; 000000f0H
  00055	68 40 01 00 00	 push	 320			; 00000140H
  0005a	68 dc 00 00 00	 push	 220			; 000000dcH

; 1190 : 			}
; 1191 : 		}
; 1192 : 	}
; 1193 : }

  0005f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	c3		 ret	 0
$LN4@BattleButt:

; 1176 : 			}else{
; 1177 : 
; 1178 : 				if( helpFlag == TRUE ){

  00068	33 c0		 xor	 eax, eax
  0006a	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?helpFlag@@3FA, 1 ; helpFlag
  00072	0f 95 c0	 setne	 al

; 1179 : 					helpFlag = FALSE;
; 1180 : 				}else{
; 1181 : 					helpFlag = TRUE;
; 1182 : 				}
; 1183 : 
; 1184 : 				if( bNewServer)

  00075	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  0007c	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpFlag@@3FA, ax ; helpFlag
  00082	0f b7 c0	 movzx	 eax, ax
  00085	50		 push	 eax
  00086	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0008c	74 07		 je	 SHORT $LN8@BattleButt

; 1185 : 					lssproto_HL_send( sockfd, helpFlag );

  0008e	e8 00 00 00 00	 call	 ?lssproto_HL_send@@YAXHH@Z ; lssproto_HL_send
  00093	eb 05		 jmp	 SHORT $LN12@BattleButt
$LN8@BattleButt:

; 1186 : 				else
; 1187 : 					old_lssproto_HL_send( sockfd, helpFlag );

  00095	e8 00 00 00 00	 call	 ?old_lssproto_HL_send@@YAXHH@Z ; old_lssproto_HL_send
$LN12@BattleButt:

; 1188 : 
; 1189 : 				play_se( 217, 320, 240 );

  0009a	83 c4 08	 add	 esp, 8
  0009d	68 f0 00 00 00	 push	 240			; 000000f0H
  000a2	68 40 01 00 00	 push	 320			; 00000140H
  000a7	68 d9 00 00 00	 push	 217			; 000000d9H

; 1190 : 			}
; 1191 : 		}
; 1192 : 	}
; 1193 : }

  000ac	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000b1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@BattleButt:
  000b4	c3		 ret	 0
?BattleButtonHelp@@YAXXZ ENDP				; BattleButtonHelp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonCapture@@YAXXZ
_TEXT	SEGMENT
?BattleButtonCapture@@YAXXZ PROC			; BattleButtonCapture, COMDAT

; 1114 : 	int i, bak;
; 1115 : 	if( HitDispNo == battleButtonDispNo[ 2 ] || battleButtonBak2 == 2 ){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00005	56		 push	 esi
  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonBak2@@3HA
  0000c	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+8
  00012	74 09		 je	 SHORT $LN6@BattleButt
  00014	83 fe 02	 cmp	 esi, 2
  00017	0f 85 34 01 00
	00		 jne	 $LN3@BattleButt
$LN6@BattleButt:

; 1116 : 		// ?????????
; 1117 : 		if( CheckPetSuu() >= 5 ){

  0001d	e8 00 00 00 00	 call	 ?CheckPetSuu@@YAHXZ	; CheckPetSuu
  00022	83 f8 05	 cmp	 eax, 5
  00025	7c 64		 jl	 SHORT $LN7@BattleButt

; 1118 : 			// ??????
; 1119 : 			strcpy( OneLineInfoStr, "페트창이 꽉 차서 더이상 포획할수 없어요。");
; 1120 : 			// ?????????
; 1121 : 			if( mouse.onceState & MOUSE_LEFT_CRICK ){

  00027	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0002e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@
  00035	66 a1 28 00 00
	00		 mov	 ax, WORD PTR ??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@+40
  0003b	66 a3 28 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+40, ax
  00041	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  00048	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@+16
  0004f	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA+16, xmm0
  00056	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CK@LMOADLH@?F?d?F?$KO?C?$KC?$MA?L?5?$LC?K?5?B?w?$LM?$KN?5?$LE?u?$MA?L?$LL?s?5?F?w?H?$LJ?G?R?$LM@+32
  0005e	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA+32, xmm0
  00066	74 17		 je	 SHORT $LN9@BattleButt

; 1122 : 				// ???
; 1123 : 				play_se( 220, 320, 240 );

  00068	68 f0 00 00 00	 push	 240			; 000000f0H
  0006d	68 40 01 00 00	 push	 320			; 00000140H
  00072	68 dc 00 00 00	 push	 220			; 000000dcH
  00077	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0007c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@BattleButt:

; 1124 : 			}
; 1125 : 			// ????????
; 1126 : 			battleButtonBak2 = -1;

  0007f	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
  00089	5e		 pop	 esi

; 1158 : 					}
; 1159 : 				}
; 1160 : 			}
; 1161 : 		}
; 1162 : 	}
; 1163 : }

  0008a	c3		 ret	 0
$LN7@BattleButt:

; 1127 : 		}else{
; 1128 : 			// ??????
; 1129 : 			strcpy( OneLineInfoStr, "포획하다。");
; 1130 : 			// ?????????
; 1131 : 			if( mouse.onceState & MOUSE_LEFT_CRICK || battleButtonBak2 == 2 ){

  0008b	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00092	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@+8
  00098	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@
  000a0	66 a3 08 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+8, ax
  000a6	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@OPNNNOMC@?F?w?H?$LJ?G?O?$LE?Y?$KB?$KD@+10
  000ab	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  000b3	a2 0a 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+10, al
  000b8	75 09		 jne	 SHORT $LN11@BattleButt
  000ba	83 fe 02	 cmp	 esi, 2
  000bd	0f 85 8e 00 00
	00		 jne	 $LN3@BattleButt
$LN11@BattleButt:

; 1132 : 				bak = battleButtonFlag[ 2 ];	// ??????

  000c3	8b 35 08 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA+8

; 1133 : 				BattleButtonOff();				// ????????????

  000c9	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 1134 : 				// ?????????
; 1135 : 				if( bak == FALSE ){

  000ce	85 f6		 test	 esi, esi
  000d0	0f 85 7b 00 00
	00		 jne	 $LN3@BattleButt

; 1136 : 					// ??????????????
; 1137 : 					battleTargetSelectFlag = TRUE;

  000d6	57		 push	 edi
  000d7	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000dd	33 d2		 xor	 edx, edx
  000df	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 1

; 1138 : 					// ?????
; 1139 : 					BattleCmdNo = BATTLE_CAPTURE;

  000e9	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 2 ; BattleCmdNo

; 1140 : 					// ?????????
; 1141 : 					battleButtonFlag[ 2 ] = TRUE;

  000f3	c7 05 08 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+8, 1

; 1142 : 					// ????????
; 1143 : 					battleButtonBak = 2;

  000fd	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, 2 ; battleButtonBak

; 1144 : 					// ????????
; 1145 : 					battleButtonBak2 = -1;

  00107	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
$LL4@BattleButt:

; 1148 : 						// ??????????
; 1149 : 						if( p_party[ i ]->func == NULL ) continue;

  00111	8b 34 95 00 00
	00 00		 mov	 esi, DWORD PTR ?p_party@@3PAPAUaction@@A[edx*4]
  00118	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  0011c	74 2c		 je	 SHORT $LN2@BattleButt

; 1150 : 						// ????
; 1151 : 						if( ( (ATR_EQU *)p_party[ i ]->pYobi )->group_flg == ( (ATR_EQU *)p_party[ BattleMyNo ]->pYobi )->group_flg ) continue;

  0011e	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[edi*4]
  00125	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00128	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0012b	8a 40 5e	 mov	 al, BYTE PTR [eax+94]
  0012e	3a 41 5e	 cmp	 al, BYTE PTR [ecx+94]
  00131	74 17		 je	 SHORT $LN2@BattleButt

; 1152 : 						// ????
; 1153 : 						if( i == BattleMyNo ) continue;

  00133	3b d7		 cmp	 edx, edi
  00135	74 13		 je	 SHORT $LN2@BattleButt

; 1154 : 						// ??????
; 1155 : 						if( p_party[ i ]->hp <= 0 ) continue;

  00137	83 7e 78 00	 cmp	 DWORD PTR [esi+120], 0
  0013b	7e 0d		 jle	 SHORT $LN2@BattleButt

; 1156 : 						// ????????????
; 1157 : 						p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0013d	83 8e a4 00 00
	00 08		 or	 DWORD PTR [esi+164], 8
  00144	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
$LN2@BattleButt:

; 1146 : 					// ???????
; 1147 : 					for( i = 0 ; i < 20 ; i++ ){

  0014a	42		 inc	 edx
  0014b	83 fa 14	 cmp	 edx, 20			; 00000014H
  0014e	7c c1		 jl	 SHORT $LL4@BattleButt
  00150	5f		 pop	 edi
$LN3@BattleButt:
  00151	5e		 pop	 esi

; 1158 : 					}
; 1159 : 				}
; 1160 : 			}
; 1161 : 		}
; 1162 : 	}
; 1163 : }

  00152	c3		 ret	 0
?BattleButtonCapture@@YAXXZ ENDP			; BattleButtonCapture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonJujutsu@@YAXXZ
_TEXT	SEGMENT
tv12264 = -276						; size = 4
_y$1$ = -272						; size = 4
_y$2$ = -268						; size = 4
_i$1$ = -268						; size = 4
_x$2$ = -264						; size = 4
_x$1$ = -264						; size = 4
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleButtonJujutsu@@YAXXZ PROC			; BattleButtonJujutsu, COMDAT

; 626  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 14 01 00
	00		 sub	 esp, 276		; 00000114H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 627  : 	int i, x, y, bak;
; 628  : 	char moji[ 256 ];
; 629  : 	if( HitDispNo == battleButtonDispNo[ 1 ] || battleButtonBak2 == 1 ){

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00018	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA+4
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak2@@3HA
  00023	56		 push	 esi
  00024	74 09		 je	 SHORT $LN64@BattleButt
  00026	83 f8 01	 cmp	 eax, 1
  00029	0f 85 f9 00 00
	00		 jne	 $LN635@BattleButt
$LN64@BattleButt:

; 630  : #ifdef _MAGIC_NOCAST
; 631  :       if( NoCastFlag == FALSE )

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?NoCastFlag@@3HA, 0 ; NoCastFlag
  00036	0f 85 b6 00 00
	00		 jne	 $LN65@BattleButt

; 632  : 	  {
; 633  : #endif
; 634  : 
; 635  : 		if( mouse.onceState & MOUSE_LEFT_CRICK || battleButtonBak2 == 1 ){

  0003c	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00043	75 09		 jne	 SHORT $LN68@BattleButt
  00045	83 f8 01	 cmp	 eax, 1
  00048	0f 85 82 00 00
	00		 jne	 $LN628@BattleButt
$LN68@BattleButt:

; 636  : 			bak = battleButtonFlag[ 1 ];

  0004e	8b 35 04 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA+4

; 637  : 			BattleButtonOff();

  00054	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 638  : 
; 639  : 			if( bak == FALSE ){

  00059	85 f6		 test	 esi, esi
  0005b	75 73		 jne	 SHORT $LN628@BattleButt

; 640  : 
; 641  : 				battleButtonFlag[ 1 ] = TRUE;
; 642  : 
; 643  : 				BattleCmdNo = BATTLE_JUJUTU;
; 644  : 
; 645  : 				for( i = 0 ; i < BATTLE_MENU_JUJUTSU_FONTS ; i++ ) battleMenuJujutsuFontNo[ i ] = -2;

  0005d	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 646  : 
; 647  : 				pActWnd = MakeWindowDisp( 361, 144, 271, 281, 0, -1 );

  00064	6a ff		 push	 -1
  00066	56		 push	 esi
  00067	68 19 01 00 00	 push	 281			; 00000119H
  0006c	68 0f 01 00 00	 push	 271			; 0000010fH
  00071	68 90 00 00 00	 push	 144			; 00000090H
  00076	68 69 01 00 00	 push	 361			; 00000169H
  0007b	c7 05 04 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+4, 1
  00085	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 1 ; BattleCmdNo
  0008f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuJujutsuFontNo@@3PAHA, xmm0
  00096	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+16, -2 ; fffffffeH
  000a0	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+20, -2 ; fffffffeH
  000aa	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  000af	8b c8		 mov	 ecx, eax

; 648  : 
; 649  : 				battleButtonBak = 1;

  000b1	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, 1 ; battleButtonBak
  000bb	83 c4 18	 add	 esp, 24			; 00000018H
  000be	89 0d 00 00 00
	00		 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, ecx

; 650  : 
; 651  : 				battleButtonBak2 = -1;

  000c4	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
  000ce	eb 06		 jmp	 SHORT $LN69@BattleButt
$LN628@BattleButt:

; 652  : 			}
; 653  : 		}
; 654  : 
; 655  : 		strcpy( OneLineInfoStr, "주술을 사용하다。");

  000d0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN69@BattleButt:
  000d6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BC@GBLBFMBP@?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@
  000dd	66 a1 10 00 00
	00		 mov	 ax, WORD PTR ??_C@_0BC@GBLBFMBP@?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?O?$LE?Y?$KB?$KD@+16
  000e3	66 a3 10 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+16, ax
  000e9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA, xmm0

; 656  : #ifdef _MAGIC_NOCAST
; 657  : 	  }

  000f0	eb 3c		 jmp	 SHORT $LN66@BattleButt
$LN65@BattleButt:

; 658  : 	  else
; 659  : 	  {
; 660  :         strcpy( OneLineInfoStr, "침묵상태에서는 주술을 사용할수없습니다。");

  000f2	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@
  000f9	a0 28 00 00 00	 mov	 al, BYTE PTR ??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@+40
  000fe	a2 28 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+40, al
  00103	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  0010a	0f 10 05 10 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@+16
  00111	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?OneLineInfoStr@@3PADA+16, xmm0
  00118	f3 0f 7e 05 20
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0CJ@HJBAPDHB@?D?$KH?$LJ?$KM?$LL?s?E?B?$LP?$KB?$LM?$KN?$LE?B?5?A?V?$LM?z?$MA?$LL?5?$LL?g?$LP?k?G?R?$LM?v?$LO@+32
  00120	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA+32, xmm0
$LN635@BattleButt:

; 661  : 	  }
; 662  : #endif
; 663  : 	}
; 664  : #ifdef _MAGIC_NOCAST
; 665  : 					if(!( NoCastFlag == FALSE )){

  00128	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
$LN66@BattleButt:
  0012e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?NoCastFlag@@3HA, 0 ; NoCastFlag
  00135	74 19		 je	 SHORT $LN70@BattleButt

; 666  : 			            battleButtonFlag[ 1 ] = FALSE;

  00137	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA+4, 0
  00141	5e		 pop	 esi

; 1105 : 				}
; 1106 : 			}
; 1107 : 		}
; 1108 : 	}
; 1109 : }

  00142	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00145	33 cd		 xor	 ecx, ebp
  00147	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014c	8b e5		 mov	 esp, ebp
  0014e	5d		 pop	 ebp
  0014f	c3		 ret	 0
$LN70@BattleButt:

; 667  : 					}
; 668  : #endif
; 669  : 
; 670  : 	if( battleButtonFlag[ 1 ] == TRUE ){

  00150	83 3d 04 00 00
	00 01		 cmp	 DWORD PTR ?battleButtonFlag@@3PAHA+4, 1
  00157	0f 85 43 1b 00
	00		 jne	 $LN163@BattleButt

; 671  : 
; 672  : 		if( pActWnd != NULL ){

  0015d	85 c9		 test	 ecx, ecx
  0015f	0f 84 3b 1b 00
	00		 je	 $LN163@BattleButt

; 673  : 
; 674  : 			if( pActWnd->hp > 0 ){

  00165	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  00169	0f 8e 31 1b 00
	00		 jle	 $LN163@BattleButt

; 675  : 				x = pActWnd->x + 74;

  0016f	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00172	83 c0 4a	 add	 eax, 74			; 0000004aH
  00175	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _x$1$[ebp], eax

; 676  : 				y = pActWnd->y + 208;

  0017b	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]

; 677  : 
; 678  : #ifdef _READ16BITBMP
; 679  : 				if(g_bUseAlpha) StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my + 7, DISP_PRIO_MENU, CG_JUJUTU_WND, 1 );
; 680  : 				else
; 681  : #endif
; 682  : 				StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, ( ( WINDOW_DISP *)pActWnd->pYobi )->my + 10, DISP_PRIO_MENU, CG_JUJUTU_WND, 1 );

  0017e	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00181	05 d0 00 00 00	 add	 eax, 208		; 000000d0H
  00186	6a 01		 push	 1
  00188	ff 35 00 00 00
	00		 push	 DWORD PTR ?CG_JUJUTU_WND@@3HA ; CG_JUJUTU_WND
  0018e	89 85 f0 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  00194	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00197	6a 68		 push	 104			; 00000068H
  00199	83 c0 0a	 add	 eax, 10			; 0000000aH
  0019c	50		 push	 eax
  0019d	ff 71 14	 push	 DWORD PTR [ecx+20]
  001a0	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  001a5	83 c4 14	 add	 esp, 20			; 00000014H

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  001a8	33 f6		 xor	 esi, esi
  001aa	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  001b0	53		 push	 ebx
  001b1	57		 push	 edi
$LL7@BattleButt:

; 685  : 
; 686  : 					if( HitFontNo == battleMenuJujutsuFontNo[ i ] && magic[ i ].useFlag == TRUE ){

  001b2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  001b7	3b 04 b5 00 00
	00 00		 cmp	 eax, DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA[esi*4]
  001be	0f 85 ec 0f 00
	00		 jne	 $LN5@BattleButt
  001c4	6b de 70	 imul	 ebx, esi, 112
  001c7	89 9d ec fe ff
	ff		 mov	 DWORD PTR tv12264[ebp], ebx
  001cd	66 83 bb 00 00
	00 00 01	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[ebx], 1
  001d5	0f 85 d5 0f 00
	00		 jne	 $LN5@BattleButt

; 687  : 
; 688  : 						char *splitPoint = magic[ i ].memo;
; 689  : 
; 690  : 						sprintf( moji,"%2d/%2d", magic[ i ].mp, p_party[ BattleMyNo ]->mp );

  001db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  001e0	8d bb 27 00 00
	00		 lea	 edi, DWORD PTR ?magic@@3PAUMAGIC@@A[ebx+39]
  001e6	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  001ed	ff b0 84 00 00
	00		 push	 DWORD PTR [eax+132]
  001f3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  001f9	ff b3 04 00 00
	00		 push	 DWORD PTR ?magic@@3PAUMAGIC@@A[ebx+4]
  001ff	68 00 00 00 00	 push	 OFFSET ??_C@_07HFNBMNBH@?$CF2d?1?$CF2d@
  00204	50		 push	 eax
  00205	e8 00 00 00 00	 call	 _sprintf

; 691  : 						StockFontBuffer( pActWnd->x + 74 + 81, pActWnd->y + 183, FONT_PRIO_FRONT, 0, moji, 0 );

  0020a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00210	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00216	6a 00		 push	 0
  00218	50		 push	 eax
  00219	6a 00		 push	 0
  0021b	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0021e	05 b7 00 00 00	 add	 eax, 183		; 000000b7H
  00223	6a 01		 push	 1
  00225	50		 push	 eax
  00226	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00229	05 9b 00 00 00	 add	 eax, 155		; 0000009bH
  0022e	50		 push	 eax
  0022f	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 692  : 
; 693  : 						while( 1 ){
; 694  : 
; 695  : 							if( strlen( splitPoint ) > 22 ){

  00234	8b cf		 mov	 ecx, edi
  00236	83 c4 28	 add	 esp, 40			; 00000028H
  00239	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
  0023c	0f 1f 40 00	 npad	 4
$LL625@BattleButt:
  00240	8a 01		 mov	 al, BYTE PTR [ecx]
  00242	41		 inc	 ecx
  00243	84 c0		 test	 al, al
  00245	75 f9		 jne	 SHORT $LL625@BattleButt
  00247	2b ca		 sub	 ecx, edx
  00249	83 f9 16	 cmp	 ecx, 22			; 00000016H
  0024c	0f 86 93 00 00
	00		 jbe	 $LN75@BattleButt
  00252	8b 9d f0 fe ff
	ff		 mov	 ebx, DWORD PTR _y$1$[ebp]
  00258	8b b5 f8 fe ff
	ff		 mov	 esi, DWORD PTR _x$1$[ebp]
  0025e	66 90		 npad	 2
$LL8@BattleButt:

; 696  : 								strncpy( moji, splitPoint, 22 );

  00260	6a 16		 push	 22			; 00000016H
  00262	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00268	57		 push	 edi
  00269	50		 push	 eax
  0026a	e8 00 00 00 00	 call	 _strncpy

; 697  : 								moji[ 22 ] = NULL;
; 698  : 
; 699  : 								if( GetStrLastByte( moji ) == 3 ){

  0026f	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00275	c6 85 12 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+22], 0
  0027c	50		 push	 eax
  0027d	e8 00 00 00 00	 call	 ?GetStrLastByte@@YAHPAD@Z ; GetStrLastByte
  00282	83 c4 10	 add	 esp, 16			; 00000010H
  00285	83 f8 03	 cmp	 eax, 3
  00288	75 0e		 jne	 SHORT $LN77@BattleButt

; 700  : 									moji[ 21 ] = NULL;

  0028a	c6 85 11 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+21], 0

; 701  : 									splitPoint += 21;

  00291	b8 15 00 00 00	 mov	 eax, 21			; 00000015H

; 702  : 								}else{

  00296	eb 0c		 jmp	 SHORT $LN78@BattleButt
$LN77@BattleButt:

; 703  : 									moji[ 22 ] = NULL;

  00298	c6 85 12 ff ff
	ff 00		 mov	 BYTE PTR _moji$[ebp+22], 0

; 704  : 									splitPoint += 22;

  0029f	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
$LN78@BattleButt:

; 705  : 								}
; 706  : 								StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 ); y += 24;

  002a4	6a 00		 push	 0
  002a6	03 f8		 add	 edi, eax
  002a8	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  002ae	50		 push	 eax
  002af	6a 00		 push	 0
  002b1	6a 01		 push	 1
  002b3	53		 push	 ebx
  002b4	56		 push	 esi
  002b5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002ba	8b cf		 mov	 ecx, edi
  002bc	83 c4 18	 add	 esp, 24			; 00000018H
  002bf	83 c3 18	 add	 ebx, 24			; 00000018H
  002c2	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL626@BattleButt:

; 692  : 
; 693  : 						while( 1 ){
; 694  : 
; 695  : 							if( strlen( splitPoint ) > 22 ){

  002c5	8a 01		 mov	 al, BYTE PTR [ecx]
  002c7	41		 inc	 ecx
  002c8	84 c0		 test	 al, al
  002ca	75 f9		 jne	 SHORT $LL626@BattleButt
  002cc	2b ca		 sub	 ecx, edx
  002ce	83 f9 16	 cmp	 ecx, 22			; 00000016H
  002d1	77 8d		 ja	 SHORT $LL8@BattleButt
  002d3	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _i$1$[ebp]
  002d9	89 9d f0 fe ff
	ff		 mov	 DWORD PTR _y$1$[ebp], ebx
  002df	8b 9d ec fe ff
	ff		 mov	 ebx, DWORD PTR tv12264[ebp]
$LN75@BattleButt:

; 707  : 							}else{
; 708  : 								strcpy( moji, splitPoint );

  002e5	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _moji$[ebp]
  002eb	2b cf		 sub	 ecx, edi
  002ed	0f 1f 00	 npad	 3
$LL175@BattleButt:
  002f0	8a 07		 mov	 al, BYTE PTR [edi]
  002f2	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  002f5	88 44 39 ff	 mov	 BYTE PTR [ecx+edi-1], al
  002f9	84 c0		 test	 al, al
  002fb	75 f3		 jne	 SHORT $LL175@BattleButt

; 709  : 								StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, moji, 0 );

  002fd	6a 00		 push	 0
  002ff	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00305	50		 push	 eax
  00306	6a 00		 push	 0
  00308	6a 01		 push	 1
  0030a	ff b5 f0 fe ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  00310	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  00316	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 710  : 								break;
; 711  : 							}
; 712  : 						}
; 713  : 
; 714  : 						StockDispBuffer( pActWnd->x + 37, pActWnd->y + 220, DISP_PRIO_ITEM, pc.item[ i ].graNo, 0 );

  0031b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  00321	69 c6 7c 01 00
	00		 imul	 eax, esi, 380
  00327	6a 00		 push	 0
  00329	ff b0 c8 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A[eax+200]
  0032f	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00332	05 dc 00 00 00	 add	 eax, 220		; 000000dcH
  00337	6a 6c		 push	 108			; 0000006cH
  00339	50		 push	 eax
  0033a	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  0033d	83 c0 25	 add	 eax, 37			; 00000025H
  00340	50		 push	 eax
  00341	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00346	83 c4 2c	 add	 esp, 44			; 0000002cH

; 715  : 
; 716  : 						if( mouse.onceState & MOUSE_LEFT_CRICK ){

  00349	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00350	0f 84 5a 0e 00
	00		 je	 $LN5@BattleButt

; 717  : 
; 718  : 							if( magic[ i ].field == MAGIC_FIELD_MAP || magic[ i ].mp > p_party[ BattleMyNo ]->mp ){

  00356	66 83 bb 08 00
	00 00 02	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[ebx+8], 2
  0035e	0f 84 35 0e 00
	00		 je	 $LN82@BattleButt
  00364	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00369	8b 14 85 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00370	8b 83 04 00 00
	00		 mov	 eax, DWORD PTR ?magic@@3PAUMAGIC@@A[ebx+4]
  00376	3b 82 84 00 00
	00		 cmp	 eax, DWORD PTR [edx+132]
  0037c	0f 8f 17 0e 00
	00		 jg	 $LN82@BattleButt

; 720  : 							}else{ 
; 721  : 								BattleJujutuNo = i;
; 722  : 
; 723  : 								battleTargetSelectFlag = TRUE;
; 724  : 
; 725  : 								switch( magic[ i ].target ){

  00382	0f bf 83 0a 00
	00 00		 movsx	 eax, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+10]
  00389	8b ce		 mov	 ecx, esi
  0038b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?BattleJujutuNo@@3HA, ecx ; BattleJujutuNo
  00391	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 1
  0039b	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0039e	0f 87 0c 0e 00
	00		 ja	 $LN5@BattleButt
  003a4	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN627@BattleButt[eax*4]
$LN83@BattleButt:

; 726  : 								case MAGIC_TARGET_MYSELF:
; 727  : 
; 728  : 									p_party[ BattleMyNo ]->atr |= ACT_ATR_HIT_BOX;

  003ab	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
$LN636@BattleButt:

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  003b2	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  003b8	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  003bd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  003c7	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
  003cc	68 f0 00 00 00	 push	 240			; 000000f0H
  003d1	68 40 01 00 00	 push	 320			; 00000140H
  003d6	68 d9 00 00 00	 push	 217			; 000000d9H
  003db	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 1 ; BattleCmdNo
  003e5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  003ea	83 c4 10	 add	 esp, 16			; 00000010H
  003ed	e9 be 0d 00 00	 jmp	 $LN5@BattleButt
$LN84@BattleButt:

; 729  : 
; 730  : 									battleTargetSelectFlag = TRUE;
; 731  : 									DeathAction( pActWnd );
; 732  : 									pActWnd = NULL;
; 733  : 
; 734  : 									ClearBattleButton();
; 735  : 
; 736  : 									BattleCmdNo = BATTLE_JUJUTU;
; 737  : 
; 738  : 									play_se( 217, 320, 240 );
; 739  : 									break;
; 740  : 									
; 741  : 								case MAGIC_TARGET_OTHER:
; 742  : 
; 743  : 									for( i = 0 ; i < 20 ; i++ ){

  003f2	33 f6		 xor	 esi, esi
  003f4	0f 1f 40 00 0f
	1f 84 00 00 00
	00 00		 npad	 12
$LL14@BattleButt:

; 744  : 
; 745  : 										if( p_party[ i ]->func == NULL ) continue;

  00400	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  00407	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0040b	74 20		 je	 SHORT $LN12@BattleButt

; 746  : 
; 747  : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE )

  0040d	6b c1 70	 imul	 eax, ecx, 112
  00410	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00418	75 06		 jne	 SHORT $LN87@BattleButt

; 748  : 											if( p_party[ i ]->hp <= 0 ) continue;

  0041a	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0041e	7e 0d		 jle	 SHORT $LN12@BattleButt
$LN87@BattleButt:

; 749  : 
; 750  : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00420	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00427	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN12@BattleButt:

; 729  : 
; 730  : 									battleTargetSelectFlag = TRUE;
; 731  : 									DeathAction( pActWnd );
; 732  : 									pActWnd = NULL;
; 733  : 
; 734  : 									ClearBattleButton();
; 735  : 
; 736  : 									BattleCmdNo = BATTLE_JUJUTU;
; 737  : 
; 738  : 									play_se( 217, 320, 240 );
; 739  : 									break;
; 740  : 									
; 741  : 								case MAGIC_TARGET_OTHER:
; 742  : 
; 743  : 									for( i = 0 ; i < 20 ; i++ ){

  0042d	46		 inc	 esi
  0042e	83 fe 14	 cmp	 esi, 20			; 00000014H
  00431	7c cd		 jl	 SHORT $LL14@BattleButt

; 751  : 									}
; 752  : 
; 753  : 									battleTargetSelectFlag = TRUE;
; 754  : 
; 755  : 									DeathAction( pActWnd );
; 756  : 									pActWnd = NULL;
; 757  : 
; 758  : 									ClearBattleButton();
; 759  : 
; 760  : 									BattleCmdNo = BATTLE_JUJUTU;
; 761  : 
; 762  : 									play_se( 217, 320, 240 );
; 763  : 									break;

  00433	e9 7a ff ff ff	 jmp	 $LN636@BattleButt
$LN88@BattleButt:

; 764  : 
; 765  : 								#ifdef  __ATTACK_MAGIC
; 766  : 
; 767  : 								case MAGIC_TARGET_SINGLE:
; 768  : 
; 769  : 									if( BattleMyNo < 10 )

  00438	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  0043f	0f 8d b8 01 00
	00		 jge	 $LN89@BattleButt

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  00445	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  0044a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0044e	74 1d		 je	 SHORT $LN15@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00450	33 d2		 xor	 edx, edx
  00452	66 3b 93 0c 00
	00 00		 cmp	 dx, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12]
  00459	75 05		 jne	 SHORT $LN93@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  0045b	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  0045e	7e 0d		 jle	 SHORT $LN15@BattleButt
$LN93@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00460	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
  00467	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN15@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  0046d	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00473	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00477	74 20		 je	 SHORT $LN250@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00479	6b c1 70	 imul	 eax, ecx, 112
  0047c	33 f6		 xor	 esi, esi
  0047e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00485	75 05		 jne	 SHORT $LN249@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  00487	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0048a	7e 0d		 jle	 SHORT $LN250@BattleButt
$LN249@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0048c	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00493	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN250@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  00499	8b 15 30 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  0049f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  004a3	74 20		 je	 SHORT $LN253@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  004a5	6b c1 70	 imul	 eax, ecx, 112
  004a8	33 f6		 xor	 esi, esi
  004aa	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  004b1	75 05		 jne	 SHORT $LN252@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  004b3	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  004b6	7e 0d		 jle	 SHORT $LN253@BattleButt
$LN252@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  004b8	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  004bf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN253@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  004c5	8b 15 34 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  004cb	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  004cf	74 20		 je	 SHORT $LN256@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  004d1	6b c1 70	 imul	 eax, ecx, 112
  004d4	33 f6		 xor	 esi, esi
  004d6	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  004dd	75 05		 jne	 SHORT $LN255@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  004df	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  004e2	7e 0d		 jle	 SHORT $LN256@BattleButt
$LN255@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  004e4	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  004eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN256@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  004f1	8b 15 38 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  004f7	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  004fb	74 20		 je	 SHORT $LN259@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  004fd	6b c1 70	 imul	 eax, ecx, 112
  00500	33 f6		 xor	 esi, esi
  00502	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00509	75 05		 jne	 SHORT $LN258@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  0050b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0050e	7e 0d		 jle	 SHORT $LN259@BattleButt
$LN258@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00510	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00517	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN259@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  0051d	8b 15 3c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00523	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00527	74 20		 je	 SHORT $LN262@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00529	6b c1 70	 imul	 eax, ecx, 112
  0052c	33 f6		 xor	 esi, esi
  0052e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00535	75 05		 jne	 SHORT $LN261@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  00537	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0053a	7e 0d		 jle	 SHORT $LN262@BattleButt
$LN261@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0053c	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00543	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN262@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  00549	8b 15 40 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  0054f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00553	74 20		 je	 SHORT $LN265@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00555	6b c1 70	 imul	 eax, ecx, 112
  00558	33 f6		 xor	 esi, esi
  0055a	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00561	75 05		 jne	 SHORT $LN264@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  00563	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00566	7e 0d		 jle	 SHORT $LN265@BattleButt
$LN264@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00568	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  0056f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN265@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  00575	8b 15 44 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  0057b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0057f	74 20		 je	 SHORT $LN268@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00581	6b c1 70	 imul	 eax, ecx, 112
  00584	33 f6		 xor	 esi, esi
  00586	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0058d	75 05		 jne	 SHORT $LN267@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  0058f	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00592	7e 0d		 jle	 SHORT $LN268@BattleButt
$LN267@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00594	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  0059b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN268@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  005a1	8b 15 48 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  005a7	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  005ab	74 20		 je	 SHORT $LN271@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  005ad	6b c1 70	 imul	 eax, ecx, 112
  005b0	33 f6		 xor	 esi, esi
  005b2	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  005b9	75 05		 jne	 SHORT $LN270@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  005bb	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  005be	7e 0d		 jle	 SHORT $LN271@BattleButt
$LN270@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  005c0	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  005c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN271@BattleButt:

; 770  : 									{
; 771  : 										for( i = 10 ; i < 20 ; i++ )
; 772  : 										{
; 773  : 											if( p_party[i]->func == NULL )

  005cd	8b 15 4c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  005d3	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  005d7	74 1a		 je	 SHORT $LN274@BattleButt

; 774  : 												continue;
; 775  : 
; 776  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  005d9	6b c1 70	 imul	 eax, ecx, 112
  005dc	33 c9		 xor	 ecx, ecx
  005de	66 3b 88 0c 00
	00 00		 cmp	 cx, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  005e5	75 05		 jne	 SHORT $LN273@BattleButt

; 777  : 												if( p_party[ i ]->hp <= 0 )

  005e7	39 4a 78	 cmp	 DWORD PTR [edx+120], ecx
  005ea	7e 07		 jle	 SHORT $LN274@BattleButt
$LN273@BattleButt:

; 778  : 													continue;
; 779  : 
; 780  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  005ec	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
$LN274@BattleButt:
  005f3	be 14 00 00 00	 mov	 esi, 20			; 00000014H

; 781  : 										}
; 782  : 									}

  005f8	e9 b5 fd ff ff	 jmp	 $LN636@BattleButt
$LN89@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  005fd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00602	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00606	74 1d		 je	 SHORT $LN18@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00608	33 d2		 xor	 edx, edx
  0060a	66 3b 93 0c 00
	00 00		 cmp	 dx, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12]
  00611	75 05		 jne	 SHORT $LN96@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  00613	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  00616	7e 0d		 jle	 SHORT $LN18@BattleButt
$LN96@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00618	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
  0061f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN18@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  00625	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  0062b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0062f	74 20		 je	 SHORT $LN281@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00631	6b c1 70	 imul	 eax, ecx, 112
  00634	33 f6		 xor	 esi, esi
  00636	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0063d	75 05		 jne	 SHORT $LN280@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  0063f	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00642	7e 0d		 jle	 SHORT $LN281@BattleButt
$LN280@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00644	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  0064b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN281@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  00651	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  00657	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0065b	74 20		 je	 SHORT $LN284@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  0065d	6b c1 70	 imul	 eax, ecx, 112
  00660	33 f6		 xor	 esi, esi
  00662	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00669	75 05		 jne	 SHORT $LN283@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  0066b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0066e	7e 0d		 jle	 SHORT $LN284@BattleButt
$LN283@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00670	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00677	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN284@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  0067d	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  00683	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00687	74 20		 je	 SHORT $LN287@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00689	6b c1 70	 imul	 eax, ecx, 112
  0068c	33 f6		 xor	 esi, esi
  0068e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00695	75 05		 jne	 SHORT $LN286@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  00697	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0069a	7e 0d		 jle	 SHORT $LN287@BattleButt
$LN286@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0069c	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  006a3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN287@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  006a9	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  006af	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  006b3	74 20		 je	 SHORT $LN290@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  006b5	6b c1 70	 imul	 eax, ecx, 112
  006b8	33 f6		 xor	 esi, esi
  006ba	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  006c1	75 05		 jne	 SHORT $LN289@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  006c3	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  006c6	7e 0d		 jle	 SHORT $LN290@BattleButt
$LN289@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  006c8	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  006cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN290@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  006d5	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  006db	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  006df	74 20		 je	 SHORT $LN293@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  006e1	6b c1 70	 imul	 eax, ecx, 112
  006e4	33 f6		 xor	 esi, esi
  006e6	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  006ed	75 05		 jne	 SHORT $LN292@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  006ef	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  006f2	7e 0d		 jle	 SHORT $LN293@BattleButt
$LN292@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  006f4	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  006fb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN293@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  00701	8b 15 18 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00707	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0070b	74 20		 je	 SHORT $LN296@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  0070d	6b c1 70	 imul	 eax, ecx, 112
  00710	33 f6		 xor	 esi, esi
  00712	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00719	75 05		 jne	 SHORT $LN295@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  0071b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0071e	7e 0d		 jle	 SHORT $LN296@BattleButt
$LN295@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00720	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00727	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN296@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  0072d	8b 15 1c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00733	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00737	74 20		 je	 SHORT $LN299@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00739	6b c1 70	 imul	 eax, ecx, 112
  0073c	33 f6		 xor	 esi, esi
  0073e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00745	75 05		 jne	 SHORT $LN298@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  00747	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0074a	7e 0d		 jle	 SHORT $LN299@BattleButt
$LN298@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0074c	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00753	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN299@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  00759	8b 15 20 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  0075f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00763	74 20		 je	 SHORT $LN302@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00765	6b c1 70	 imul	 eax, ecx, 112
  00768	33 f6		 xor	 esi, esi
  0076a	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00771	75 05		 jne	 SHORT $LN301@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  00773	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00776	7e 0d		 jle	 SHORT $LN302@BattleButt
$LN301@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  00778	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  0077f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN302@BattleButt:

; 783  : 									else
; 784  : 									{
; 785  : 										for( i = 0 ; i < 10 ; i++ )
; 786  : 										{
; 787  : 											if( p_party[i]->func == NULL )

  00785	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  0078b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0078f	74 1a		 je	 SHORT $LN305@BattleButt

; 788  : 												continue;
; 789  : 
; 790  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00791	6b c1 70	 imul	 eax, ecx, 112
  00794	33 c9		 xor	 ecx, ecx
  00796	66 3b 88 0c 00
	00 00		 cmp	 cx, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0079d	75 05		 jne	 SHORT $LN304@BattleButt

; 791  : 												if( p_party[ i ]->hp <= 0 )

  0079f	39 4a 78	 cmp	 DWORD PTR [edx+120], ecx
  007a2	7e 07		 jle	 SHORT $LN305@BattleButt
$LN304@BattleButt:

; 792  : 													continue;
; 793  : 
; 794  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  007a4	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
$LN305@BattleButt:
  007ab	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH

; 795  : 										}
; 796  : 									}
; 797  : 
; 798  : 									battleTargetSelectFlag = TRUE;
; 799  : 									DeathAction( pActWnd );
; 800  : 									pActWnd	= NULL;
; 801  : 									ClearBattleButton();
; 802  : 									BattleCmdNo = BATTLE_JUJUTU;
; 803  : 									play_se( 217 , 320 , 240 );
; 804  : 
; 805  : 									break;

  007b0	e9 fd fb ff ff	 jmp	 $LN636@BattleButt
$LN114@BattleButt:

; 881  : 								
; 882  : 								case MAGIC_TARGET_ALL_ROWS:
; 883  : 
; 884  : 									if( BattleMyNo >= 10 )

  007b5	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  007bc	0f 8c 64 02 00
	00		 jl	 $LN115@BattleButt

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  007c2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  007c7	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  007cb	74 30		 je	 SHORT $LN33@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  007cd	33 d2		 xor	 edx, edx
  007cf	66 3b 93 0c 00
	00 00		 cmp	 dx, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12]
  007d6	75 05		 jne	 SHORT $LN119@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  007d8	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  007db	7e 20		 jle	 SHORT $LN33@BattleButt
$LN119@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  007dd	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  007e3	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  007e9	75 12		 jne	 SHORT $LN33@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  007eb	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  007f1	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  007f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN33@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  007fd	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00803	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00807	74 31		 je	 SHORT $LN376@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00809	6b c1 70	 imul	 eax, ecx, 112
  0080c	33 f6		 xor	 esi, esi
  0080e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00815	75 05		 jne	 SHORT $LN375@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  00817	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0081a	7e 1e		 jle	 SHORT $LN376@BattleButt
$LN375@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  0081c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00822	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00827	75 11		 jne	 SHORT $LN376@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  00829	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0082e	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00834	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN376@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  0083a	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  00840	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00844	74 31		 je	 SHORT $LN379@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00846	6b c1 70	 imul	 eax, ecx, 112
  00849	33 f6		 xor	 esi, esi
  0084b	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00852	75 05		 jne	 SHORT $LN378@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  00854	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00857	7e 1e		 jle	 SHORT $LN379@BattleButt
$LN378@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00859	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0085f	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00864	75 11		 jne	 SHORT $LN379@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  00866	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0086b	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00871	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN379@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  00877	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  0087d	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00881	74 31		 je	 SHORT $LN382@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00883	6b c1 70	 imul	 eax, ecx, 112
  00886	33 f6		 xor	 esi, esi
  00888	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0088f	75 05		 jne	 SHORT $LN381@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  00891	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00894	7e 1e		 jle	 SHORT $LN382@BattleButt
$LN381@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00896	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0089c	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  008a1	75 11		 jne	 SHORT $LN382@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  008a3	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  008a8	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  008ae	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN382@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  008b4	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  008ba	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  008be	74 31		 je	 SHORT $LN385@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  008c0	6b c1 70	 imul	 eax, ecx, 112
  008c3	33 f6		 xor	 esi, esi
  008c5	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  008cc	75 05		 jne	 SHORT $LN384@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  008ce	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  008d1	7e 1e		 jle	 SHORT $LN385@BattleButt
$LN384@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  008d3	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  008d9	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  008de	75 11		 jne	 SHORT $LN385@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  008e0	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  008e5	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  008eb	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN385@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  008f1	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  008f7	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  008fb	74 31		 je	 SHORT $LN388@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  008fd	6b c1 70	 imul	 eax, ecx, 112
  00900	33 f6		 xor	 esi, esi
  00902	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00909	75 05		 jne	 SHORT $LN387@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  0090b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0090e	7e 1e		 jle	 SHORT $LN388@BattleButt
$LN387@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00910	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00916	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0091b	75 11		 jne	 SHORT $LN388@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0091d	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00922	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00928	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN388@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  0092e	8b 15 18 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00934	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00938	74 31		 je	 SHORT $LN391@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  0093a	6b c1 70	 imul	 eax, ecx, 112
  0093d	33 f6		 xor	 esi, esi
  0093f	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00946	75 05		 jne	 SHORT $LN390@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  00948	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0094b	7e 1e		 jle	 SHORT $LN391@BattleButt
$LN390@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  0094d	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00953	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00958	75 11		 jne	 SHORT $LN391@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0095a	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0095f	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00965	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN391@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  0096b	8b 15 1c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00971	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00975	74 31		 je	 SHORT $LN394@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00977	6b c1 70	 imul	 eax, ecx, 112
  0097a	33 f6		 xor	 esi, esi
  0097c	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00983	75 05		 jne	 SHORT $LN393@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  00985	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00988	7e 1e		 jle	 SHORT $LN394@BattleButt
$LN393@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  0098a	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00990	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00995	75 11		 jne	 SHORT $LN394@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  00997	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  0099c	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  009a2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN394@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  009a8	8b 15 20 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  009ae	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  009b2	74 31		 je	 SHORT $LN397@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  009b4	6b c1 70	 imul	 eax, ecx, 112
  009b7	33 f6		 xor	 esi, esi
  009b9	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  009c0	75 05		 jne	 SHORT $LN396@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  009c2	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  009c5	7e 1e		 jle	 SHORT $LN397@BattleButt
$LN396@BattleButt:

; 893  : 													continue;
; 894  : 
; 895  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  009c7	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  009cd	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  009d2	75 11		 jne	 SHORT $LN397@BattleButt

; 896  : 												continue;
; 897  : 
; 898  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  009d4	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  009d9	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  009df	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN397@BattleButt:

; 885  : 									{
; 886  : 										for( i = 0 ; i < 10 ; i++ )
; 887  : 										{
; 888  : 											if( p_party[ i ]->func == NULL )

  009e5	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  009eb	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  009ef	74 2b		 je	 SHORT $LN400@BattleButt

; 889  : 												continue;
; 890  : 
; 891  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  009f1	6b c1 70	 imul	 eax, ecx, 112
  009f4	33 c9		 xor	 ecx, ecx
  009f6	66 3b 88 0c 00
	00 00		 cmp	 cx, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  009fd	75 05		 jne	 SHORT $LN399@BattleButt

; 892  : 												if( p_party[ i ]->hp <= 0 )

  009ff	39 4a 78	 cmp	 DWORD PTR [edx+120], ecx
$LN638@BattleButt:

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  00a02	7e 18		 jle	 SHORT $LN400@BattleButt
$LN399@BattleButt:
  00a04	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00a0a	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00a0f	75 0b		 jne	 SHORT $LN400@BattleButt
  00a11	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00a16	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
$LN400@BattleButt:
  00a1c	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  00a21	e9 8c f9 ff ff	 jmp	 $LN636@BattleButt
$LN115@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00a26	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00a2b	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00a2f	74 30		 je	 SHORT $LN36@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00a31	33 d2		 xor	 edx, edx
  00a33	66 3b 93 0c 00
	00 00		 cmp	 dx, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12]
  00a3a	75 05		 jne	 SHORT $LN123@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00a3c	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  00a3f	7e 20		 jle	 SHORT $LN36@BattleButt
$LN123@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00a41	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  00a47	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  00a4d	75 12		 jne	 SHORT $LN36@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00a4f	81 ca 00 40 00
	00		 or	 edx, 16384		; 00004000H
  00a55	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  00a5b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN36@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00a61	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00a67	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00a6b	74 31		 je	 SHORT $LN407@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00a6d	6b c1 70	 imul	 eax, ecx, 112
  00a70	33 f6		 xor	 esi, esi
  00a72	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00a79	75 05		 jne	 SHORT $LN406@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00a7b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00a7e	7e 1e		 jle	 SHORT $LN407@BattleButt
$LN406@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00a80	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00a86	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00a8b	75 11		 jne	 SHORT $LN407@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00a8d	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00a92	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00a98	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN407@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00a9e	8b 15 30 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00aa4	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00aa8	74 31		 je	 SHORT $LN410@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00aaa	6b c1 70	 imul	 eax, ecx, 112
  00aad	33 f6		 xor	 esi, esi
  00aaf	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00ab6	75 05		 jne	 SHORT $LN409@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00ab8	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00abb	7e 1e		 jle	 SHORT $LN410@BattleButt
$LN409@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00abd	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00ac3	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00ac8	75 11		 jne	 SHORT $LN410@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00aca	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00acf	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00ad5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN410@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00adb	8b 15 34 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  00ae1	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00ae5	74 31		 je	 SHORT $LN413@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00ae7	6b c1 70	 imul	 eax, ecx, 112
  00aea	33 f6		 xor	 esi, esi
  00aec	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00af3	75 05		 jne	 SHORT $LN412@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00af5	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00af8	7e 1e		 jle	 SHORT $LN413@BattleButt
$LN412@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00afa	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00b00	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00b05	75 11		 jne	 SHORT $LN413@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00b07	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00b0c	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00b12	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN413@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00b18	8b 15 38 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  00b1e	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00b22	74 31		 je	 SHORT $LN416@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00b24	6b c1 70	 imul	 eax, ecx, 112
  00b27	33 f6		 xor	 esi, esi
  00b29	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00b30	75 05		 jne	 SHORT $LN415@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00b32	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00b35	7e 1e		 jle	 SHORT $LN416@BattleButt
$LN415@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00b37	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00b3d	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00b42	75 11		 jne	 SHORT $LN416@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00b44	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00b49	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00b4f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN416@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00b55	8b 15 3c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00b5b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00b5f	74 31		 je	 SHORT $LN419@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00b61	6b c1 70	 imul	 eax, ecx, 112
  00b64	33 f6		 xor	 esi, esi
  00b66	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00b6d	75 05		 jne	 SHORT $LN418@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00b6f	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00b72	7e 1e		 jle	 SHORT $LN419@BattleButt
$LN418@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00b74	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00b7a	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00b7f	75 11		 jne	 SHORT $LN419@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00b81	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00b86	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00b8c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN419@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00b92	8b 15 40 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00b98	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00b9c	74 31		 je	 SHORT $LN422@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00b9e	6b c1 70	 imul	 eax, ecx, 112
  00ba1	33 f6		 xor	 esi, esi
  00ba3	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00baa	75 05		 jne	 SHORT $LN421@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00bac	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00baf	7e 1e		 jle	 SHORT $LN422@BattleButt
$LN421@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00bb1	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00bb7	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00bbc	75 11		 jne	 SHORT $LN422@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00bbe	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00bc3	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00bc9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN422@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00bcf	8b 15 44 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00bd5	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00bd9	74 31		 je	 SHORT $LN425@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00bdb	6b c1 70	 imul	 eax, ecx, 112
  00bde	33 f6		 xor	 esi, esi
  00be0	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00be7	75 05		 jne	 SHORT $LN424@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00be9	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00bec	7e 1e		 jle	 SHORT $LN425@BattleButt
$LN424@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00bee	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00bf4	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00bf9	75 11		 jne	 SHORT $LN425@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00bfb	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00c00	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00c06	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN425@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00c0c	8b 15 48 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  00c12	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00c16	74 31		 je	 SHORT $LN428@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00c18	6b c1 70	 imul	 eax, ecx, 112
  00c1b	33 f6		 xor	 esi, esi
  00c1d	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00c24	75 05		 jne	 SHORT $LN427@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00c26	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  00c29	7e 1e		 jle	 SHORT $LN428@BattleButt
$LN427@BattleButt:

; 910  : 													continue;
; 911  : 
; 912  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL )

  00c2b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00c31	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00c36	75 11		 jne	 SHORT $LN428@BattleButt

; 913  : 												continue;
; 914  : 
; 915  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  00c38	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00c3d	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00c43	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN428@BattleButt:

; 899  : 										}
; 900  : 									}
; 901  : 									else
; 902  : 									{
; 903  : 										for( i = 10 ; i < 20 ; i++ )
; 904  : 										{
; 905  : 											if( p_party[ i ]->func == NULL )

  00c49	8b 15 4c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  00c4f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00c53	74 2b		 je	 SHORT $LN431@BattleButt

; 906  : 												continue;
; 907  : 
; 908  : 											if( FALSE == magic[ BattleJujutuNo ].deadTargetFlag )

  00c55	6b c1 70	 imul	 eax, ecx, 112
  00c58	33 c9		 xor	 ecx, ecx
  00c5a	66 3b 88 0c 00
	00 00		 cmp	 cx, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  00c61	75 05		 jne	 SHORT $LN430@BattleButt

; 909  : 												if( p_party[ i ]->hp <= 0 )

  00c63	39 4a 78	 cmp	 DWORD PTR [edx+120], ecx
$LN639@BattleButt:

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  00c66	7e 18		 jle	 SHORT $LN431@BattleButt
$LN430@BattleButt:
  00c68	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00c6e	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00c73	75 0b		 jne	 SHORT $LN431@BattleButt
  00c75	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00c7a	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
$LN431@BattleButt:
  00c80	be 14 00 00 00	 mov	 esi, 20			; 00000014H
  00c85	e9 28 f7 ff ff	 jmp	 $LN636@BattleButt
$LN125@BattleButt:

; 916  : 										}
; 917  : 									}
; 918  : 
; 919  : 									battleTargetSelectFlag = TRUE;
; 920  : 									DeathAction( pActWnd );
; 921  : 									pActWnd = NULL;
; 922  : 									ClearBattleButton();
; 923  : 									BattleCmdNo = BATTLE_JUJUTU;
; 924  : 									play_se( 217 , 320 , 240 );
; 925  : 
; 926  : 									break;
; 927  : 
; 928  : 								#endif
; 929  : 
; 930  : 								case MAGIC_TARGET_ALLMYSIDE:
; 931  : 
; 932  : 									if( BattleMyNo < 10 ){

  00c8a	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  00c91	0f 8d 4d 02 00
	00		 jge	 $LN126@BattleButt
$LN686@BattleButt:

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  00c97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00c9c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00ca0	74 30		 je	 SHORT $LN39@BattleButt
  00ca2	66 83 bb 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12], 0
  00caa	75 06		 jne	 SHORT $LN130@BattleButt
  00cac	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00cb0	7e 20		 jle	 SHORT $LN39@BattleButt
$LN130@BattleButt:
  00cb2	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  00cb8	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  00cbe	75 12		 jne	 SHORT $LN39@BattleButt
  00cc0	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  00cc6	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  00ccc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN39@BattleButt:
  00cd2	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00cd8	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00cdc	74 31		 je	 SHORT $LN438@BattleButt
  00cde	6b c1 70	 imul	 eax, ecx, 112
  00ce1	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00ce9	75 06		 jne	 SHORT $LN437@BattleButt
  00ceb	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00cef	7e 1e		 jle	 SHORT $LN438@BattleButt
$LN437@BattleButt:
  00cf1	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00cf7	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00cfc	75 11		 jne	 SHORT $LN438@BattleButt
  00cfe	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00d03	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00d09	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN438@BattleButt:
  00d0f	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  00d15	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00d19	74 31		 je	 SHORT $LN441@BattleButt
  00d1b	6b c1 70	 imul	 eax, ecx, 112
  00d1e	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00d26	75 06		 jne	 SHORT $LN440@BattleButt
  00d28	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00d2c	7e 1e		 jle	 SHORT $LN441@BattleButt
$LN440@BattleButt:
  00d2e	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00d34	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00d39	75 11		 jne	 SHORT $LN441@BattleButt
  00d3b	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00d40	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00d46	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN441@BattleButt:
  00d4c	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  00d52	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00d56	74 31		 je	 SHORT $LN444@BattleButt
  00d58	6b c1 70	 imul	 eax, ecx, 112
  00d5b	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00d63	75 06		 jne	 SHORT $LN443@BattleButt
  00d65	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00d69	7e 1e		 jle	 SHORT $LN444@BattleButt
$LN443@BattleButt:
  00d6b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00d71	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00d76	75 11		 jne	 SHORT $LN444@BattleButt
  00d78	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00d7d	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00d83	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN444@BattleButt:
  00d89	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  00d8f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00d93	74 31		 je	 SHORT $LN447@BattleButt
  00d95	6b c1 70	 imul	 eax, ecx, 112
  00d98	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00da0	75 06		 jne	 SHORT $LN446@BattleButt
  00da2	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00da6	7e 1e		 jle	 SHORT $LN447@BattleButt
$LN446@BattleButt:
  00da8	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00dae	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00db3	75 11		 jne	 SHORT $LN447@BattleButt
  00db5	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00dba	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00dc0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN447@BattleButt:
  00dc6	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00dcc	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00dd0	74 31		 je	 SHORT $LN450@BattleButt
  00dd2	6b c1 70	 imul	 eax, ecx, 112
  00dd5	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00ddd	75 06		 jne	 SHORT $LN449@BattleButt
  00ddf	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00de3	7e 1e		 jle	 SHORT $LN450@BattleButt
$LN449@BattleButt:
  00de5	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00deb	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00df0	75 11		 jne	 SHORT $LN450@BattleButt
  00df2	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00df7	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00dfd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN450@BattleButt:
  00e03	8b 15 18 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00e09	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00e0d	74 31		 je	 SHORT $LN453@BattleButt
  00e0f	6b c1 70	 imul	 eax, ecx, 112
  00e12	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00e1a	75 06		 jne	 SHORT $LN452@BattleButt
  00e1c	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00e20	7e 1e		 jle	 SHORT $LN453@BattleButt
$LN452@BattleButt:
  00e22	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00e28	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00e2d	75 11		 jne	 SHORT $LN453@BattleButt
  00e2f	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00e34	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00e3a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN453@BattleButt:
  00e40	8b 15 1c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00e46	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00e4a	74 31		 je	 SHORT $LN456@BattleButt
  00e4c	6b c1 70	 imul	 eax, ecx, 112
  00e4f	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00e57	75 06		 jne	 SHORT $LN455@BattleButt
  00e59	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00e5d	7e 1e		 jle	 SHORT $LN456@BattleButt
$LN455@BattleButt:
  00e5f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00e65	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00e6a	75 11		 jne	 SHORT $LN456@BattleButt
  00e6c	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00e71	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00e77	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN456@BattleButt:
  00e7d	8b 15 20 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  00e83	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00e87	74 31		 je	 SHORT $LN459@BattleButt
  00e89	6b c1 70	 imul	 eax, ecx, 112
  00e8c	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00e94	75 06		 jne	 SHORT $LN458@BattleButt
  00e96	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00e9a	7e 1e		 jle	 SHORT $LN459@BattleButt
$LN458@BattleButt:
  00e9c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00ea2	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00ea7	75 11		 jne	 SHORT $LN459@BattleButt
  00ea9	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  00eae	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00eb4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN459@BattleButt:
  00eba	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  00ec0	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00ec4	0f 84 52 fb ff
	ff		 je	 $LN400@BattleButt
  00eca	6b c1 70	 imul	 eax, ecx, 112
  00ecd	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00ed5	0f 85 29 fb ff
	ff		 jne	 $LN399@BattleButt
  00edb	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00edf	e9 1e fb ff ff	 jmp	 $LN638@BattleButt
$LN126@BattleButt:
  00ee4	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00ee9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00eed	74 30		 je	 SHORT $LN42@BattleButt
  00eef	66 83 bb 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12], 0
  00ef7	75 06		 jne	 SHORT $LN134@BattleButt
  00ef9	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00efd	7e 20		 jle	 SHORT $LN42@BattleButt
$LN134@BattleButt:
  00eff	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  00f05	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  00f0b	75 12		 jne	 SHORT $LN42@BattleButt
  00f0d	81 ca 00 40 00
	00		 or	 edx, 16384		; 00004000H
  00f13	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  00f19	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN42@BattleButt:
  00f1f	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00f25	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00f29	74 31		 je	 SHORT $LN469@BattleButt
  00f2b	6b c1 70	 imul	 eax, ecx, 112
  00f2e	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00f36	75 06		 jne	 SHORT $LN468@BattleButt
  00f38	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00f3c	7e 1e		 jle	 SHORT $LN469@BattleButt
$LN468@BattleButt:
  00f3e	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00f44	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00f49	75 11		 jne	 SHORT $LN469@BattleButt
  00f4b	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00f50	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00f56	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN469@BattleButt:
  00f5c	8b 15 30 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00f62	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00f66	74 31		 je	 SHORT $LN472@BattleButt
  00f68	6b c1 70	 imul	 eax, ecx, 112
  00f6b	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00f73	75 06		 jne	 SHORT $LN471@BattleButt
  00f75	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00f79	7e 1e		 jle	 SHORT $LN472@BattleButt
$LN471@BattleButt:
  00f7b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00f81	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00f86	75 11		 jne	 SHORT $LN472@BattleButt
  00f88	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00f8d	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00f93	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN472@BattleButt:
  00f99	8b 15 34 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  00f9f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00fa3	74 31		 je	 SHORT $LN475@BattleButt
  00fa5	6b c1 70	 imul	 eax, ecx, 112
  00fa8	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00fb0	75 06		 jne	 SHORT $LN474@BattleButt
  00fb2	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00fb6	7e 1e		 jle	 SHORT $LN475@BattleButt
$LN474@BattleButt:
  00fb8	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00fbe	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  00fc3	75 11		 jne	 SHORT $LN475@BattleButt
  00fc5	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  00fca	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  00fd0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN475@BattleButt:
  00fd6	8b 15 38 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  00fdc	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  00fe0	74 31		 je	 SHORT $LN478@BattleButt
  00fe2	6b c1 70	 imul	 eax, ecx, 112
  00fe5	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  00fed	75 06		 jne	 SHORT $LN477@BattleButt
  00fef	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  00ff3	7e 1e		 jle	 SHORT $LN478@BattleButt
$LN477@BattleButt:
  00ff5	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00ffb	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01000	75 11		 jne	 SHORT $LN478@BattleButt
  01002	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01007	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0100d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN478@BattleButt:
  01013	8b 15 3c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  01019	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0101d	74 31		 je	 SHORT $LN481@BattleButt
  0101f	6b c1 70	 imul	 eax, ecx, 112
  01022	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  0102a	75 06		 jne	 SHORT $LN480@BattleButt
  0102c	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01030	7e 1e		 jle	 SHORT $LN481@BattleButt
$LN480@BattleButt:
  01032	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01038	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0103d	75 11		 jne	 SHORT $LN481@BattleButt
  0103f	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01044	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0104a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN481@BattleButt:
  01050	8b 15 40 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  01056	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0105a	74 31		 je	 SHORT $LN484@BattleButt
  0105c	6b c1 70	 imul	 eax, ecx, 112
  0105f	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01067	75 06		 jne	 SHORT $LN483@BattleButt
  01069	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0106d	7e 1e		 jle	 SHORT $LN484@BattleButt
$LN483@BattleButt:
  0106f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01075	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0107a	75 11		 jne	 SHORT $LN484@BattleButt
  0107c	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01081	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01087	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN484@BattleButt:
  0108d	8b 15 44 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  01093	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01097	74 31		 je	 SHORT $LN487@BattleButt
  01099	6b c1 70	 imul	 eax, ecx, 112
  0109c	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  010a4	75 06		 jne	 SHORT $LN486@BattleButt
  010a6	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  010aa	7e 1e		 jle	 SHORT $LN487@BattleButt
$LN486@BattleButt:
  010ac	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  010b2	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  010b7	75 11		 jne	 SHORT $LN487@BattleButt
  010b9	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  010be	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  010c4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN487@BattleButt:
  010ca	8b 15 48 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  010d0	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  010d4	74 31		 je	 SHORT $LN490@BattleButt
  010d6	6b c1 70	 imul	 eax, ecx, 112
  010d9	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  010e1	75 06		 jne	 SHORT $LN489@BattleButt
  010e3	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  010e7	7e 1e		 jle	 SHORT $LN490@BattleButt
$LN489@BattleButt:
  010e9	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  010ef	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  010f4	75 11		 jne	 SHORT $LN490@BattleButt
  010f6	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  010fb	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01101	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN490@BattleButt:
  01107	8b 15 4c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  0110d	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01111	0f 84 69 fb ff
	ff		 je	 $LN431@BattleButt
  01117	6b c1 70	 imul	 eax, ecx, 112
  0111a	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01122	0f 85 40 fb ff
	ff		 jne	 $LN430@BattleButt
  01128	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0112c	e9 35 fb ff ff	 jmp	 $LN639@BattleButt
$LN136@BattleButt:

; 933  : 
; 934  : 										for( i = 0 ; i < 10 ; i++ ){
; 935  : 
; 936  : 											if( p_party[ i ]->func == NULL ) continue;
; 937  : 
; 938  : 											if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 939  : 
; 940  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;
; 941  : 
; 942  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 943  : 										}
; 944  : 									}else{
; 945  : 
; 946  : 										for( i = 10 ; i < 20 ; i++ ){
; 947  : 
; 948  : 											if( p_party[ i ]->func == NULL ) continue;
; 949  : 
; 950  : 											if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 951  : 
; 952  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;
; 953  : 
; 954  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 955  : 										}
; 956  : 									}
; 957  : 
; 958  : 									battleTargetSelectFlag = TRUE;
; 959  : 
; 960  : 									DeathAction( pActWnd );
; 961  : 									pActWnd = NULL;
; 962  : 
; 963  : 									ClearBattleButton();
; 964  : 
; 965  : 									BattleCmdNo = BATTLE_JUJUTU;
; 966  : 
; 967  : 									play_se( 217, 320, 240 );
; 968  : 									break;
; 969  : 									
; 970  : 								case MAGIC_TARGET_ALLOTHERSIDE:
; 971  : 
; 972  : 									if( BattleMyNo >= 10 ){

  01131	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  01138	0f 8d 59 fb ff
	ff		 jge	 $LN686@BattleButt

; 973  : 
; 974  : 										for( i = 0 ; i < 10 ; i++ ){
; 975  : 
; 976  : 											if( p_party[ i ]->func == NULL ) continue;
; 977  : 
; 978  : 											if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 979  : 
; 980  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;
; 981  : 
; 982  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 983  : 										}
; 984  : 									}else{
; 985  : 
; 986  : 										for( i = 10 ; i < 20 ; i++ ){
; 987  : 
; 988  : 											if( p_party[ i ]->func == NULL ) continue;
; 989  : 
; 990  : 											if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;
; 991  : 
; 992  : 											if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;
; 993  : 
; 994  : 											p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 995  : 										}
; 996  : 									}
; 997  : 
; 998  : 									battleTargetSelectFlag = TRUE;
; 999  : 
; 1000 : 									DeathAction( pActWnd );
; 1001 : 									pActWnd = NULL;
; 1002 : 
; 1003 : 									ClearBattleButton();
; 1004 : 
; 1005 : 									BattleCmdNo = BATTLE_JUJUTU;
; 1006 : 
; 1007 : 									play_se( 217, 320, 240 );
; 1008 : 									break;

  0113e	e9 a1 fd ff ff	 jmp	 $LN126@BattleButt
$LN147@BattleButt:

; 1009 : 									
; 1010 : 								case MAGIC_TARGET_ALL:
; 1011 : 
; 1012 : 									for( i = 0 ; i < 20 ; i++ ){

  01143	33 f6		 xor	 esi, esi
  01145	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL53@BattleButt:

; 1013 : 
; 1014 : 										if( p_party[ i ]->func == NULL ) continue;

  01150	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  01157	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0115b	74 31		 je	 SHORT $LN51@BattleButt

; 1015 : 
; 1016 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  0115d	6b c1 70	 imul	 eax, ecx, 112
  01160	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01168	75 06		 jne	 SHORT $LN150@BattleButt
  0116a	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0116e	7e 1e		 jle	 SHORT $LN51@BattleButt
$LN150@BattleButt:

; 1017 : 
; 1018 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01170	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01176	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0117b	75 11		 jne	 SHORT $LN51@BattleButt

; 1019 : 
; 1020 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0117d	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  01182	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01188	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN51@BattleButt:

; 1009 : 									
; 1010 : 								case MAGIC_TARGET_ALL:
; 1011 : 
; 1012 : 									for( i = 0 ; i < 20 ; i++ ){

  0118e	46		 inc	 esi
  0118f	83 fe 14	 cmp	 esi, 20			; 00000014H
  01192	7c bc		 jl	 SHORT $LL53@BattleButt

; 1021 : 									}
; 1022 : 
; 1023 : 									battleTargetSelectFlag = TRUE;
; 1024 : 
; 1025 : 									DeathAction( pActWnd );
; 1026 : 									pActWnd = NULL;
; 1027 : 
; 1028 : 									ClearBattleButton();
; 1029 : 
; 1030 : 									BattleCmdNo = BATTLE_JUJUTU;
; 1031 : 
; 1032 : 									play_se( 217, 320, 240 );
; 1033 : 									break;

  01194	e9 19 f2 ff ff	 jmp	 $LN636@BattleButt
$LN82@BattleButt:

; 719  : 								play_se( 220, 320, 240 );

  01199	68 f0 00 00 00	 push	 240			; 000000f0H
  0119e	68 40 01 00 00	 push	 320			; 00000140H
  011a3	68 dc 00 00 00	 push	 220			; 000000dcH
  011a8	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  011ad	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@BattleButt:

; 683  : 
; 684  : 				for( i = 0 ; i < 5 ; i++ ){

  011b0	46		 inc	 esi
  011b1	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _i$1$[ebp], esi
  011b7	83 fe 05	 cmp	 esi, 5
  011ba	0f 8c f2 ef ff
	ff		 jl	 $LL7@BattleButt
  011c0	e9 be 09 00 00	 jmp	 $LN624@BattleButt
$LN97@BattleButt:

; 806  : 
; 807  : 								case MAGIC_TARGET_ONE_ROW:
; 808  : 
; 809  : 									for( i = 0 ; i < 5 ; i++ )
; 810  : 									{
; 811  : 										if( p_party[i]->func == NULL )

  011c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  011ca	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  011ce	74 30		 je	 SHORT $LN21@BattleButt

; 812  : 											continue;
; 813  : 
; 814  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  011d0	33 d2		 xor	 edx, edx
  011d2	66 3b 93 0c 00
	00 00		 cmp	 dx, WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12]
  011d9	75 05		 jne	 SHORT $LN100@BattleButt

; 815  : 											if( p_party[i]->hp <= 0 )

  011db	39 50 78	 cmp	 DWORD PTR [eax+120], edx
  011de	7e 20		 jle	 SHORT $LN21@BattleButt
$LN100@BattleButt:

; 816  : 												continue;
; 817  : 
; 818  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  011e0	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  011e6	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  011ec	75 12		 jne	 SHORT $LN21@BattleButt

; 819  : 											continue;
; 820  : 
; 821  : 										// 右下第二列
; 822  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  011ee	81 ca 00 00 20
	00		 or	 edx, 2097152		; 00200000H
  011f4	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  011fa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN21@BattleButt:

; 806  : 
; 807  : 								case MAGIC_TARGET_ONE_ROW:
; 808  : 
; 809  : 									for( i = 0 ; i < 5 ; i++ )
; 810  : 									{
; 811  : 										if( p_party[i]->func == NULL )

  01200	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  01206	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0120a	74 31		 je	 SHORT $LN312@BattleButt

; 812  : 											continue;
; 813  : 
; 814  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0120c	6b c1 70	 imul	 eax, ecx, 112
  0120f	33 f6		 xor	 esi, esi
  01211	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01218	75 05		 jne	 SHORT $LN311@BattleButt

; 815  : 											if( p_party[i]->hp <= 0 )

  0121a	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0121d	7e 1e		 jle	 SHORT $LN312@BattleButt
$LN311@BattleButt:

; 816  : 												continue;
; 817  : 
; 818  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  0121f	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01225	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0122a	75 11		 jne	 SHORT $LN312@BattleButt

; 819  : 											continue;
; 820  : 
; 821  : 										// 右下第二列
; 822  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  0122c	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  01231	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01237	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN312@BattleButt:

; 806  : 
; 807  : 								case MAGIC_TARGET_ONE_ROW:
; 808  : 
; 809  : 									for( i = 0 ; i < 5 ; i++ )
; 810  : 									{
; 811  : 										if( p_party[i]->func == NULL )

  0123d	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  01243	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01247	74 31		 je	 SHORT $LN315@BattleButt

; 812  : 											continue;
; 813  : 
; 814  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01249	6b c1 70	 imul	 eax, ecx, 112
  0124c	33 f6		 xor	 esi, esi
  0124e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01255	75 05		 jne	 SHORT $LN314@BattleButt

; 815  : 											if( p_party[i]->hp <= 0 )

  01257	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0125a	7e 1e		 jle	 SHORT $LN315@BattleButt
$LN314@BattleButt:

; 816  : 												continue;
; 817  : 
; 818  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  0125c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01262	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01267	75 11		 jne	 SHORT $LN315@BattleButt

; 819  : 											continue;
; 820  : 
; 821  : 										// 右下第二列
; 822  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  01269	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  0126e	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01274	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN315@BattleButt:

; 806  : 
; 807  : 								case MAGIC_TARGET_ONE_ROW:
; 808  : 
; 809  : 									for( i = 0 ; i < 5 ; i++ )
; 810  : 									{
; 811  : 										if( p_party[i]->func == NULL )

  0127a	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  01280	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01284	74 31		 je	 SHORT $LN318@BattleButt

; 812  : 											continue;
; 813  : 
; 814  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01286	6b c1 70	 imul	 eax, ecx, 112
  01289	33 f6		 xor	 esi, esi
  0128b	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01292	75 05		 jne	 SHORT $LN317@BattleButt

; 815  : 											if( p_party[i]->hp <= 0 )

  01294	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01297	7e 1e		 jle	 SHORT $LN318@BattleButt
$LN317@BattleButt:

; 816  : 												continue;
; 817  : 
; 818  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01299	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0129f	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  012a4	75 11		 jne	 SHORT $LN318@BattleButt

; 819  : 											continue;
; 820  : 
; 821  : 										// 右下第二列
; 822  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  012a6	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  012ab	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  012b1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN318@BattleButt:

; 806  : 
; 807  : 								case MAGIC_TARGET_ONE_ROW:
; 808  : 
; 809  : 									for( i = 0 ; i < 5 ; i++ )
; 810  : 									{
; 811  : 										if( p_party[i]->func == NULL )

  012b7	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  012bd	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  012c1	74 31		 je	 SHORT $LN321@BattleButt

; 812  : 											continue;
; 813  : 
; 814  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  012c3	6b c1 70	 imul	 eax, ecx, 112
  012c6	33 f6		 xor	 esi, esi
  012c8	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  012cf	75 05		 jne	 SHORT $LN320@BattleButt

; 815  : 											if( p_party[i]->hp <= 0 )

  012d1	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  012d4	7e 1e		 jle	 SHORT $LN321@BattleButt
$LN320@BattleButt:

; 816  : 												continue;
; 817  : 
; 818  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  012d6	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  012dc	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  012e1	75 11		 jne	 SHORT $LN321@BattleButt

; 819  : 											continue;
; 820  : 
; 821  : 										// 右下第二列
; 822  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  012e3	0d 00 00 20 00	 or	 eax, 2097152		; 00200000H
  012e8	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  012ee	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN321@BattleButt:

; 823  : 									}
; 824  : 
; 825  : 									for( i = 5 ; i < 10 ; i++ )
; 826  : 									{
; 827  : 										if( p_party[i]->func == NULL )

  012f4	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  012fa	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  012fe	74 31		 je	 SHORT $LN24@BattleButt

; 828  : 											continue;
; 829  : 
; 830  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01300	6b c1 70	 imul	 eax, ecx, 112
  01303	33 f6		 xor	 esi, esi
  01305	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0130c	75 05		 jne	 SHORT $LN104@BattleButt

; 831  : 											if( p_party[i]->hp <= 0 )

  0130e	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01311	7e 1e		 jle	 SHORT $LN24@BattleButt
$LN104@BattleButt:

; 832  : 												continue;
; 833  : 
; 834  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01313	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01319	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0131e	75 11		 jne	 SHORT $LN24@BattleButt

; 835  : 											continue;
; 836  : 
; 837  : 										// 右下第一列
; 838  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  01320	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  01325	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0132b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN24@BattleButt:

; 823  : 									}
; 824  : 
; 825  : 									for( i = 5 ; i < 10 ; i++ )
; 826  : 									{
; 827  : 										if( p_party[i]->func == NULL )

  01331	8b 15 18 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  01337	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0133b	74 31		 je	 SHORT $LN328@BattleButt

; 828  : 											continue;
; 829  : 
; 830  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0133d	6b c1 70	 imul	 eax, ecx, 112
  01340	33 f6		 xor	 esi, esi
  01342	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01349	75 05		 jne	 SHORT $LN327@BattleButt

; 831  : 											if( p_party[i]->hp <= 0 )

  0134b	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0134e	7e 1e		 jle	 SHORT $LN328@BattleButt
$LN327@BattleButt:

; 832  : 												continue;
; 833  : 
; 834  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01350	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01356	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0135b	75 11		 jne	 SHORT $LN328@BattleButt

; 835  : 											continue;
; 836  : 
; 837  : 										// 右下第一列
; 838  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  0135d	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  01362	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01368	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN328@BattleButt:

; 823  : 									}
; 824  : 
; 825  : 									for( i = 5 ; i < 10 ; i++ )
; 826  : 									{
; 827  : 										if( p_party[i]->func == NULL )

  0136e	8b 15 1c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  01374	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01378	74 31		 je	 SHORT $LN331@BattleButt

; 828  : 											continue;
; 829  : 
; 830  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0137a	6b c1 70	 imul	 eax, ecx, 112
  0137d	33 f6		 xor	 esi, esi
  0137f	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01386	75 05		 jne	 SHORT $LN330@BattleButt

; 831  : 											if( p_party[i]->hp <= 0 )

  01388	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0138b	7e 1e		 jle	 SHORT $LN331@BattleButt
$LN330@BattleButt:

; 832  : 												continue;
; 833  : 
; 834  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  0138d	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01393	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01398	75 11		 jne	 SHORT $LN331@BattleButt

; 835  : 											continue;
; 836  : 
; 837  : 										// 右下第一列
; 838  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  0139a	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  0139f	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  013a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN331@BattleButt:

; 823  : 									}
; 824  : 
; 825  : 									for( i = 5 ; i < 10 ; i++ )
; 826  : 									{
; 827  : 										if( p_party[i]->func == NULL )

  013ab	8b 15 20 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  013b1	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  013b5	74 31		 je	 SHORT $LN334@BattleButt

; 828  : 											continue;
; 829  : 
; 830  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  013b7	6b c1 70	 imul	 eax, ecx, 112
  013ba	33 f6		 xor	 esi, esi
  013bc	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  013c3	75 05		 jne	 SHORT $LN333@BattleButt

; 831  : 											if( p_party[i]->hp <= 0 )

  013c5	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  013c8	7e 1e		 jle	 SHORT $LN334@BattleButt
$LN333@BattleButt:

; 832  : 												continue;
; 833  : 
; 834  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  013ca	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  013d0	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  013d5	75 11		 jne	 SHORT $LN334@BattleButt

; 835  : 											continue;
; 836  : 
; 837  : 										// 右下第一列
; 838  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  013d7	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  013dc	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  013e2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN334@BattleButt:

; 823  : 									}
; 824  : 
; 825  : 									for( i = 5 ; i < 10 ; i++ )
; 826  : 									{
; 827  : 										if( p_party[i]->func == NULL )

  013e8	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  013ee	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  013f2	74 31		 je	 SHORT $LN337@BattleButt

; 828  : 											continue;
; 829  : 
; 830  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  013f4	6b c1 70	 imul	 eax, ecx, 112
  013f7	33 f6		 xor	 esi, esi
  013f9	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01400	75 05		 jne	 SHORT $LN336@BattleButt

; 831  : 											if( p_party[i]->hp <= 0 )

  01402	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01405	7e 1e		 jle	 SHORT $LN337@BattleButt
$LN336@BattleButt:

; 832  : 												continue;
; 833  : 
; 834  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01407	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0140d	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01412	75 11		 jne	 SHORT $LN337@BattleButt

; 835  : 											continue;
; 836  : 
; 837  : 										// 右下第一列
; 838  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  01414	0d 00 00 10 00	 or	 eax, 1048576		; 00100000H
  01419	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0141f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN337@BattleButt:

; 839  : 									}
; 840  : 
; 841  : 									for( i = 10 ; i < 15 ; i++ )
; 842  : 									{
; 843  : 										if( p_party[i]->func == NULL )

  01425	8b 15 28 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  0142b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0142f	74 31		 je	 SHORT $LN27@BattleButt

; 844  : 											continue;
; 845  : 
; 846  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01431	6b c1 70	 imul	 eax, ecx, 112
  01434	33 f6		 xor	 esi, esi
  01436	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0143d	75 05		 jne	 SHORT $LN108@BattleButt

; 847  : 											if( p_party[i]->hp <= 0 )

  0143f	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01442	7e 1e		 jle	 SHORT $LN27@BattleButt
$LN108@BattleButt:

; 848  : 												continue;
; 849  : 
; 850  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01444	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0144a	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0144f	75 11		 jne	 SHORT $LN27@BattleButt

; 851  : 											continue;
; 852  : 
; 853  : 										// 左上第一列
; 854  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  01451	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  01456	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0145c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN27@BattleButt:

; 839  : 									}
; 840  : 
; 841  : 									for( i = 10 ; i < 15 ; i++ )
; 842  : 									{
; 843  : 										if( p_party[i]->func == NULL )

  01462	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  01468	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0146c	74 31		 je	 SHORT $LN344@BattleButt

; 844  : 											continue;
; 845  : 
; 846  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0146e	6b c1 70	 imul	 eax, ecx, 112
  01471	33 f6		 xor	 esi, esi
  01473	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0147a	75 05		 jne	 SHORT $LN343@BattleButt

; 847  : 											if( p_party[i]->hp <= 0 )

  0147c	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0147f	7e 1e		 jle	 SHORT $LN344@BattleButt
$LN343@BattleButt:

; 848  : 												continue;
; 849  : 
; 850  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01481	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01487	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0148c	75 11		 jne	 SHORT $LN344@BattleButt

; 851  : 											continue;
; 852  : 
; 853  : 										// 左上第一列
; 854  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  0148e	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  01493	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01499	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN344@BattleButt:

; 839  : 									}
; 840  : 
; 841  : 									for( i = 10 ; i < 15 ; i++ )
; 842  : 									{
; 843  : 										if( p_party[i]->func == NULL )

  0149f	8b 15 30 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  014a5	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  014a9	74 31		 je	 SHORT $LN347@BattleButt

; 844  : 											continue;
; 845  : 
; 846  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  014ab	6b c1 70	 imul	 eax, ecx, 112
  014ae	33 f6		 xor	 esi, esi
  014b0	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  014b7	75 05		 jne	 SHORT $LN346@BattleButt

; 847  : 											if( p_party[i]->hp <= 0 )

  014b9	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  014bc	7e 1e		 jle	 SHORT $LN347@BattleButt
$LN346@BattleButt:

; 848  : 												continue;
; 849  : 
; 850  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  014be	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  014c4	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  014c9	75 11		 jne	 SHORT $LN347@BattleButt

; 851  : 											continue;
; 852  : 
; 853  : 										// 左上第一列
; 854  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  014cb	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  014d0	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  014d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN347@BattleButt:

; 839  : 									}
; 840  : 
; 841  : 									for( i = 10 ; i < 15 ; i++ )
; 842  : 									{
; 843  : 										if( p_party[i]->func == NULL )

  014dc	8b 15 34 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  014e2	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  014e6	74 31		 je	 SHORT $LN350@BattleButt

; 844  : 											continue;
; 845  : 
; 846  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  014e8	6b c1 70	 imul	 eax, ecx, 112
  014eb	33 f6		 xor	 esi, esi
  014ed	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  014f4	75 05		 jne	 SHORT $LN349@BattleButt

; 847  : 											if( p_party[i]->hp <= 0 )

  014f6	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  014f9	7e 1e		 jle	 SHORT $LN350@BattleButt
$LN349@BattleButt:

; 848  : 												continue;
; 849  : 
; 850  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  014fb	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01501	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01506	75 11		 jne	 SHORT $LN350@BattleButt

; 851  : 											continue;
; 852  : 
; 853  : 										// 左上第一列
; 854  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  01508	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  0150d	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01513	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN350@BattleButt:

; 839  : 									}
; 840  : 
; 841  : 									for( i = 10 ; i < 15 ; i++ )
; 842  : 									{
; 843  : 										if( p_party[i]->func == NULL )

  01519	8b 15 38 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  0151f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01523	74 31		 je	 SHORT $LN353@BattleButt

; 844  : 											continue;
; 845  : 
; 846  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01525	6b c1 70	 imul	 eax, ecx, 112
  01528	33 f6		 xor	 esi, esi
  0152a	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01531	75 05		 jne	 SHORT $LN352@BattleButt

; 847  : 											if( p_party[i]->hp <= 0 )

  01533	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01536	7e 1e		 jle	 SHORT $LN353@BattleButt
$LN352@BattleButt:

; 848  : 												continue;
; 849  : 
; 850  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01538	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0153e	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01543	75 11		 jne	 SHORT $LN353@BattleButt

; 851  : 											continue;
; 852  : 
; 853  : 										// 左上第一列
; 854  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  01545	0d 00 00 04 00	 or	 eax, 262144		; 00040000H
  0154a	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01550	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN353@BattleButt:

; 855  : 									}
; 856  : 
; 857  : 									for( i = 15 ; i < 20 ; i++ )
; 858  : 									{
; 859  : 										if( p_party[i]->func == NULL )

  01556	8b 15 3c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  0155c	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01560	74 31		 je	 SHORT $LN30@BattleButt

; 860  : 											continue;
; 861  : 
; 862  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01562	6b c1 70	 imul	 eax, ecx, 112
  01565	33 f6		 xor	 esi, esi
  01567	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  0156e	75 05		 jne	 SHORT $LN112@BattleButt

; 863  : 											if( p_party[i]->hp <= 0 )

  01570	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  01573	7e 1e		 jle	 SHORT $LN30@BattleButt
$LN112@BattleButt:

; 864  : 												continue;
; 865  : 
; 866  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01575	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0157b	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01580	75 11		 jne	 SHORT $LN30@BattleButt

; 867  : 											continue;
; 868  : 
; 869  : 										// 左上第二列
; 870  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  01582	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  01587	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0158d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN30@BattleButt:

; 855  : 									}
; 856  : 
; 857  : 									for( i = 15 ; i < 20 ; i++ )
; 858  : 									{
; 859  : 										if( p_party[i]->func == NULL )

  01593	8b 15 40 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  01599	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0159d	74 31		 je	 SHORT $LN360@BattleButt

; 860  : 											continue;
; 861  : 
; 862  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0159f	6b c1 70	 imul	 eax, ecx, 112
  015a2	33 f6		 xor	 esi, esi
  015a4	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  015ab	75 05		 jne	 SHORT $LN359@BattleButt

; 863  : 											if( p_party[i]->hp <= 0 )

  015ad	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  015b0	7e 1e		 jle	 SHORT $LN360@BattleButt
$LN359@BattleButt:

; 864  : 												continue;
; 865  : 
; 866  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  015b2	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  015b8	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  015bd	75 11		 jne	 SHORT $LN360@BattleButt

; 867  : 											continue;
; 868  : 
; 869  : 										// 左上第二列
; 870  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  015bf	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  015c4	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  015ca	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN360@BattleButt:

; 855  : 									}
; 856  : 
; 857  : 									for( i = 15 ; i < 20 ; i++ )
; 858  : 									{
; 859  : 										if( p_party[i]->func == NULL )

  015d0	8b 15 44 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  015d6	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  015da	74 31		 je	 SHORT $LN363@BattleButt

; 860  : 											continue;
; 861  : 
; 862  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  015dc	6b c1 70	 imul	 eax, ecx, 112
  015df	33 f6		 xor	 esi, esi
  015e1	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  015e8	75 05		 jne	 SHORT $LN362@BattleButt

; 863  : 											if( p_party[i]->hp <= 0 )

  015ea	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  015ed	7e 1e		 jle	 SHORT $LN363@BattleButt
$LN362@BattleButt:

; 864  : 												continue;
; 865  : 
; 866  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  015ef	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  015f5	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  015fa	75 11		 jne	 SHORT $LN363@BattleButt

; 867  : 											continue;
; 868  : 
; 869  : 										// 左上第二列
; 870  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  015fc	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  01601	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01607	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN363@BattleButt:

; 855  : 									}
; 856  : 
; 857  : 									for( i = 15 ; i < 20 ; i++ )
; 858  : 									{
; 859  : 										if( p_party[i]->func == NULL )

  0160d	8b 15 48 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  01613	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01617	74 31		 je	 SHORT $LN366@BattleButt

; 860  : 											continue;
; 861  : 
; 862  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  01619	6b c1 70	 imul	 eax, ecx, 112
  0161c	33 f6		 xor	 esi, esi
  0161e	66 3b b0 0c 00
	00 00		 cmp	 si, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01625	75 05		 jne	 SHORT $LN365@BattleButt

; 863  : 											if( p_party[i]->hp <= 0 )

  01627	39 72 78	 cmp	 DWORD PTR [edx+120], esi
  0162a	7e 1e		 jle	 SHORT $LN366@BattleButt
$LN365@BattleButt:

; 864  : 												continue;
; 865  : 
; 866  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  0162c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01632	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01637	75 11		 jne	 SHORT $LN366@BattleButt

; 867  : 											continue;
; 868  : 
; 869  : 										// 左上第二列
; 870  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  01639	0d 00 00 08 00	 or	 eax, 524288		; 00080000H
  0163e	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01644	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN366@BattleButt:

; 855  : 									}
; 856  : 
; 857  : 									for( i = 15 ; i < 20 ; i++ )
; 858  : 									{
; 859  : 										if( p_party[i]->func == NULL )

  0164a	8b 15 4c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  01650	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01654	0f 84 ee 04 00
	00		 je	 $LN617@BattleButt

; 860  : 											continue;
; 861  : 
; 862  : 										if( FALSE == magic[BattleJujutuNo].deadTargetFlag )

  0165a	6b c1 70	 imul	 eax, ecx, 112
  0165d	33 c9		 xor	 ecx, ecx
  0165f	66 3b 88 0c 00
	00 00		 cmp	 cx, WORD PTR ?magic@@3PAUMAGIC@@A[eax+12]
  01666	75 09		 jne	 SHORT $LN368@BattleButt

; 863  : 											if( p_party[i]->hp <= 0 )

  01668	39 4a 78	 cmp	 DWORD PTR [edx+120], ecx
  0166b	0f 8e d7 04 00
	00		 jle	 $LN617@BattleButt
$LN368@BattleButt:

; 864  : 												continue;
; 865  : 
; 866  : 										if( p_party[i]->atr & ACT_ATR_TRAVEL )

  01671	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01677	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0167c	0f 85 c6 04 00
	00		 jne	 $LN617@BattleButt

; 867  : 											continue;
; 868  : 
; 869  : 										// 左上第二列
; 870  : 										p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  01682	0d 00 00 08 00	 or	 eax, 524288		; 00080000H

; 871  : 									}
; 872  : 
; 873  : 									battleTargetSelectFlag = TRUE;
; 874  : 									DeathAction( pActWnd );
; 875  : 									pActWnd = NULL;
; 876  : 									ClearBattleButton();
; 877  : 									BattleCmdNo = BATTLE_JUJUTU;
; 878  : 									play_se( 217 , 320 , 240 );
; 879  : 
; 880  : 									break;

  01687	e9 b6 04 00 00	 jmp	 $LN637@BattleButt
$LN152@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  0168c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  01691	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01695	74 30		 je	 SHORT $LN54@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01697	66 83 bb 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[ebx+12], 0
  0169f	75 06		 jne	 SHORT $LN155@BattleButt
  016a1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  016a5	7e 20		 jle	 SHORT $LN54@BattleButt
$LN155@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  016a7	8b 90 a4 00 00
	00		 mov	 edx, DWORD PTR [eax+164]
  016ad	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  016b3	75 12		 jne	 SHORT $LN54@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  016b5	81 ca 00 20 00
	00		 or	 edx, 8192		; 00002000H
  016bb	89 90 a4 00 00
	00		 mov	 DWORD PTR [eax+164], edx
  016c1	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN54@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  016c7	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  016cd	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  016d1	74 31		 je	 SHORT $LN562@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  016d3	6b c1 70	 imul	 eax, ecx, 112
  016d6	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  016de	75 06		 jne	 SHORT $LN561@BattleButt
  016e0	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  016e4	7e 1e		 jle	 SHORT $LN562@BattleButt
$LN561@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  016e6	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  016ec	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  016f1	75 11		 jne	 SHORT $LN562@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  016f3	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  016f8	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  016fe	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN562@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  01704	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  0170a	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0170e	74 31		 je	 SHORT $LN565@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01710	6b c1 70	 imul	 eax, ecx, 112
  01713	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  0171b	75 06		 jne	 SHORT $LN564@BattleButt
  0171d	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01721	7e 1e		 jle	 SHORT $LN565@BattleButt
$LN564@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01723	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01729	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0172e	75 11		 jne	 SHORT $LN565@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01730	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  01735	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0173b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN565@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  01741	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  01747	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0174b	74 31		 je	 SHORT $LN568@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  0174d	6b c1 70	 imul	 eax, ecx, 112
  01750	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01758	75 06		 jne	 SHORT $LN567@BattleButt
  0175a	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0175e	7e 1e		 jle	 SHORT $LN568@BattleButt
$LN567@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01760	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01766	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0176b	75 11		 jne	 SHORT $LN568@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0176d	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  01772	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01778	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN568@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  0177e	8b 15 10 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  01784	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01788	74 31		 je	 SHORT $LN571@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  0178a	6b c1 70	 imul	 eax, ecx, 112
  0178d	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01795	75 06		 jne	 SHORT $LN570@BattleButt
  01797	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0179b	7e 1e		 jle	 SHORT $LN571@BattleButt
$LN570@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  0179d	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  017a3	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  017a8	75 11		 jne	 SHORT $LN571@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  017aa	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  017af	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  017b5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN571@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  017bb	8b 15 14 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  017c1	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  017c5	74 31		 je	 SHORT $LN574@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  017c7	6b c1 70	 imul	 eax, ecx, 112
  017ca	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  017d2	75 06		 jne	 SHORT $LN573@BattleButt
  017d4	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  017d8	7e 1e		 jle	 SHORT $LN574@BattleButt
$LN573@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  017da	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  017e0	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  017e5	75 11		 jne	 SHORT $LN574@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  017e7	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  017ec	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  017f2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN574@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  017f8	8b 15 18 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  017fe	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01802	74 31		 je	 SHORT $LN577@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01804	6b c1 70	 imul	 eax, ecx, 112
  01807	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  0180f	75 06		 jne	 SHORT $LN576@BattleButt
  01811	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01815	7e 1e		 jle	 SHORT $LN577@BattleButt
$LN576@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01817	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0181d	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01822	75 11		 jne	 SHORT $LN577@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01824	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  01829	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0182f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN577@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  01835	8b 15 1c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  0183b	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0183f	74 31		 je	 SHORT $LN580@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01841	6b c1 70	 imul	 eax, ecx, 112
  01844	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  0184c	75 06		 jne	 SHORT $LN579@BattleButt
  0184e	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01852	7e 1e		 jle	 SHORT $LN580@BattleButt
$LN579@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01854	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0185a	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0185f	75 11		 jne	 SHORT $LN580@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01861	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  01866	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0186c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN580@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  01872	8b 15 20 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  01878	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0187c	74 31		 je	 SHORT $LN583@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  0187e	6b c1 70	 imul	 eax, ecx, 112
  01881	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01889	75 06		 jne	 SHORT $LN582@BattleButt
  0188b	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0188f	7e 1e		 jle	 SHORT $LN583@BattleButt
$LN582@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01891	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01897	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  0189c	75 11		 jne	 SHORT $LN583@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0189e	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  018a3	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  018a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN583@BattleButt:

; 1034 : 									
; 1035 : 								case MAGIC_TARGET_WHOLEOTHERSIDE:
; 1036 : 
; 1037 : 									for( i = 0 ; i < 10 ; i++ ){
; 1038 : 
; 1039 : 										if( p_party[ i ]->func == NULL ) continue;

  018af	8b 15 24 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  018b5	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  018b9	74 31		 je	 SHORT $LN586@BattleButt

; 1040 : 
; 1041 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  018bb	6b c1 70	 imul	 eax, ecx, 112
  018be	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  018c6	75 06		 jne	 SHORT $LN585@BattleButt
  018c8	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  018cc	7e 1e		 jle	 SHORT $LN586@BattleButt
$LN585@BattleButt:

; 1042 : 
; 1043 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  018ce	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  018d4	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  018d9	75 11		 jne	 SHORT $LN586@BattleButt

; 1044 : 
; 1045 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  018db	0d 00 20 00 00	 or	 eax, 8192		; 00002000H
  018e0	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  018e6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN586@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  018ec	8b 15 28 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  018f2	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  018f6	74 31		 je	 SHORT $LN57@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  018f8	6b c1 70	 imul	 eax, ecx, 112
  018fb	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01903	75 06		 jne	 SHORT $LN159@BattleButt
  01905	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01909	7e 1e		 jle	 SHORT $LN57@BattleButt
$LN159@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  0190b	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01911	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01916	75 11		 jne	 SHORT $LN57@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01918	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  0191d	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01923	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN57@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01929	8b 15 2c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  0192f	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01933	74 31		 je	 SHORT $LN593@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01935	6b c1 70	 imul	 eax, ecx, 112
  01938	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01940	75 06		 jne	 SHORT $LN592@BattleButt
  01942	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01946	7e 1e		 jle	 SHORT $LN593@BattleButt
$LN592@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01948	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0194e	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01953	75 11		 jne	 SHORT $LN593@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01955	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  0195a	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01960	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN593@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01966	8b 15 30 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  0196c	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01970	74 31		 je	 SHORT $LN596@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01972	6b c1 70	 imul	 eax, ecx, 112
  01975	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  0197d	75 06		 jne	 SHORT $LN595@BattleButt
  0197f	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01983	7e 1e		 jle	 SHORT $LN596@BattleButt
$LN595@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01985	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  0198b	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01990	75 11		 jne	 SHORT $LN596@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01992	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01997	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0199d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN596@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  019a3	8b 15 34 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  019a9	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  019ad	74 31		 je	 SHORT $LN599@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  019af	6b c1 70	 imul	 eax, ecx, 112
  019b2	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  019ba	75 06		 jne	 SHORT $LN598@BattleButt
  019bc	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  019c0	7e 1e		 jle	 SHORT $LN599@BattleButt
$LN598@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  019c2	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  019c8	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  019cd	75 11		 jne	 SHORT $LN599@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  019cf	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  019d4	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  019da	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN599@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  019e0	8b 15 38 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  019e6	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  019ea	74 31		 je	 SHORT $LN602@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  019ec	6b c1 70	 imul	 eax, ecx, 112
  019ef	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  019f7	75 06		 jne	 SHORT $LN601@BattleButt
  019f9	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  019fd	7e 1e		 jle	 SHORT $LN602@BattleButt
$LN601@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  019ff	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01a05	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01a0a	75 11		 jne	 SHORT $LN602@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01a0c	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01a11	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01a17	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN602@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01a1d	8b 15 3c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  01a23	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01a27	74 31		 je	 SHORT $LN605@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01a29	6b c1 70	 imul	 eax, ecx, 112
  01a2c	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01a34	75 06		 jne	 SHORT $LN604@BattleButt
  01a36	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01a3a	7e 1e		 jle	 SHORT $LN605@BattleButt
$LN604@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01a3c	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01a42	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01a47	75 11		 jne	 SHORT $LN605@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01a49	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01a4e	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01a54	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN605@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01a5a	8b 15 40 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  01a60	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01a64	74 31		 je	 SHORT $LN608@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01a66	6b c1 70	 imul	 eax, ecx, 112
  01a69	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01a71	75 06		 jne	 SHORT $LN607@BattleButt
  01a73	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01a77	7e 1e		 jle	 SHORT $LN608@BattleButt
$LN607@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01a79	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01a7f	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01a84	75 11		 jne	 SHORT $LN608@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01a86	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01a8b	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01a91	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN608@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01a97	8b 15 44 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  01a9d	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01aa1	74 31		 je	 SHORT $LN611@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01aa3	6b c1 70	 imul	 eax, ecx, 112
  01aa6	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01aae	75 06		 jne	 SHORT $LN610@BattleButt
  01ab0	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01ab4	7e 1e		 jle	 SHORT $LN611@BattleButt
$LN610@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01ab6	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01abc	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01ac1	75 11		 jne	 SHORT $LN611@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01ac3	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01ac8	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01ace	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN611@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01ad4	8b 15 48 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  01ada	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01ade	74 31		 je	 SHORT $LN614@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01ae0	6b c1 70	 imul	 eax, ecx, 112
  01ae3	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01aeb	75 06		 jne	 SHORT $LN613@BattleButt
  01aed	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01af1	7e 1e		 jle	 SHORT $LN614@BattleButt
$LN613@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01af3	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01af9	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01afe	75 11		 jne	 SHORT $LN614@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01b00	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
  01b05	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  01b0b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleJujutuNo@@3HA ; BattleJujutuNo
$LN614@BattleButt:

; 1046 : 									}
; 1047 : 
; 1048 : 									for( i = 10 ; i < 20 ; i++ ){
; 1049 : 
; 1050 : 										if( p_party[ i ]->func == NULL ) continue;

  01b11	8b 15 4c 00 00
	00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  01b17	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  01b1b	74 2b		 je	 SHORT $LN617@BattleButt

; 1051 : 
; 1052 : 										if( magic[ BattleJujutuNo ].deadTargetFlag == FALSE ) if( p_party[ i ]->hp <= 0 ) continue;

  01b1d	6b c1 70	 imul	 eax, ecx, 112
  01b20	66 83 b8 0c 00
	00 00 00	 cmp	 WORD PTR ?magic@@3PAUMAGIC@@A[eax+12], 0
  01b28	75 06		 jne	 SHORT $LN616@BattleButt
  01b2a	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  01b2e	7e 18		 jle	 SHORT $LN617@BattleButt
$LN616@BattleButt:

; 1053 : 
; 1054 : 										if( p_party[ i ]->atr & ACT_ATR_TRAVEL ) continue;

  01b30	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  01b36	a9 00 00 02 00	 test	 eax, 131072		; 00020000H
  01b3b	75 0b		 jne	 SHORT $LN617@BattleButt

; 1055 : 
; 1056 : 										p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01b3d	0d 00 40 00 00	 or	 eax, 16384		; 00004000H
$LN637@BattleButt:

; 1057 : 									}
; 1058 : 
; 1059 : 									battleTargetSelectFlag = TRUE;
; 1060 : 
; 1061 : 									DeathAction( pActWnd );
; 1062 : 									pActWnd = NULL;
; 1063 : 
; 1064 : 									ClearBattleButton();
; 1065 : 
; 1066 : 									BattleCmdNo = BATTLE_JUJUTU;
; 1067 : 
; 1068 : 									play_se( 217, 320, 240 );
; 1069 : 									break;
; 1070 : 								}
; 1071 : 							}
; 1072 : 						}
; 1073 : 					}
; 1074 : 				}
; 1075 : 
; 1076 : 				if( mouse.onceState & MOUSE_LEFT_CRICK ){

  01b42	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
$LN617@BattleButt:
  01b48	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  01b4e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  01b53	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  01b5d	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
  01b62	68 f0 00 00 00	 push	 240			; 000000f0H
  01b67	68 40 01 00 00	 push	 320			; 00000140H
  01b6c	68 d9 00 00 00	 push	 217			; 000000d9H
  01b71	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, 1 ; BattleCmdNo
  01b7b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  01b80	83 c4 10	 add	 esp, 16			; 00000010H
$LN624@BattleButt:
  01b83	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  01b8a	74 12		 je	 SHORT $LN162@BattleButt

; 1077 : 
; 1078 : 					if( HitDispNo == battleMenuJujutsuFontNo[ 5 ] ){

  01b8c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  01b91	3b 05 14 00 00
	00		 cmp	 eax, DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+20
  01b97	75 05		 jne	 SHORT $LN162@BattleButt

; 1079 : 						BattleButtonOff();				

  01b99	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff
$LN162@BattleButt:

; 1080 : 					}
; 1081 : 				}
; 1082 : 
; 1083 : 				if( pActWnd != NULL ){

  01b9e	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?pActWnd@@3PAUaction@@A
  01ba4	85 f6		 test	 esi, esi
  01ba6	0f 84 f2 00 00
	00		 je	 $LN633@BattleButt

; 1084 : 					int flag = FALSE;
; 1085 : 					int col;
; 1086 : 
; 1087 : 					x = pActWnd->x + 30;

  01bac	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  01baf	33 c9		 xor	 ecx, ecx

; 1088 : 					y = pActWnd->y + 35;

  01bb1	8b 76 1c	 mov	 esi, DWORD PTR [esi+28]
  01bb4	83 c0 1e	 add	 eax, 30			; 0000001eH
  01bb7	83 c6 23	 add	 esi, 35			; 00000023H
  01bba	89 85 f8 fe ff
	ff		 mov	 DWORD PTR _x$2$[ebp], eax
  01bc0	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _y$2$[ebp], esi
  01bc6	bb 00 00 00 00	 mov	 ebx, OFFSET ?battleMenuJujutsuFontNo@@3PAHA
  01bcb	bf 04 00 00 00	 mov	 edi, OFFSET ?magic@@3PAUMAGIC@@A+4
$LL62@BattleButt:

; 1091 : 
; 1092 : 						if( magic[ i ].useFlag == TRUE ){

  01bd0	66 83 7f fc 01	 cmp	 WORD PTR [edi-4], 1
  01bd5	75 6e		 jne	 SHORT $LN60@BattleButt

; 1093 : 							col = FONT_PAL_WHITE;
; 1094 : 							if( magic[ i ].mp > p_party[ BattleMyNo ]->mp ) col = FONT_PAL_RED;	// ????
; 1095 : 							if( magic[ i ].field == MAGIC_FIELD_MAP ) col = FONT_PAL_GRAY;	// ?????

  01bd7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  01bdc	33 d2		 xor	 edx, edx
  01bde	be 06 00 00 00	 mov	 esi, 6

; 1096 : 
; 1097 : 							CenteringStr( magic[ i ].name, moji, MAGIC_NAME_LEN );

  01be3	6a 18		 push	 24			; 00000018H
  01be5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  01bec	8b 07		 mov	 eax, DWORD PTR [edi]
  01bee	3b 81 84 00 00
	00		 cmp	 eax, DWORD PTR [ecx+132]
  01bf4	b8 07 00 00 00	 mov	 eax, 7
  01bf9	0f 4e f2	 cmovle	 esi, edx
  01bfc	66 83 7f 04 02	 cmp	 WORD PTR [edi+4], 2
  01c01	0f 44 f0	 cmove	 esi, eax
  01c04	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  01c0a	50		 push	 eax
  01c0b	8d 47 0a	 lea	 eax, DWORD PTR [edi+10]
  01c0e	50		 push	 eax
  01c0f	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr

; 1098 : 							battleMenuJujutsuFontNo[ i ] = StockFontBuffer( x, y, FONT_PRIO_FRONT, col, moji, 2 ); y += 28;

  01c14	6a 02		 push	 2
  01c16	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  01c1c	50		 push	 eax
  01c1d	56		 push	 esi
  01c1e	8b b5 f4 fe ff
	ff		 mov	 esi, DWORD PTR _y$2$[ebp]
  01c24	6a 01		 push	 1
  01c26	56		 push	 esi
  01c27	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _x$2$[ebp]
  01c2d	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  01c32	83 c4 24	 add	 esp, 36			; 00000024H
  01c35	89 03		 mov	 DWORD PTR [ebx], eax
  01c37	83 c6 1c	 add	 esi, 28			; 0000001cH

; 1099 : 							flag = TRUE;

  01c3a	b9 01 00 00 00	 mov	 ecx, 1
  01c3f	89 b5 f4 fe ff
	ff		 mov	 DWORD PTR _y$2$[ebp], esi
$LN60@BattleButt:

; 1089 : 
; 1090 : 					for( i = 0 ; i < 5 ; i++ ){

  01c45	83 c7 70	 add	 edi, 112		; 00000070H
  01c48	83 c3 04	 add	 ebx, 4
  01c4b	81 ff 34 02 00
	00		 cmp	 edi, OFFSET ?magic@@3PAUMAGIC@@A+564
  01c51	0f 8c 79 ff ff
	ff		 jl	 $LL62@BattleButt

; 1100 : 						}
; 1101 : 					}
; 1102 : 					if( flag == FALSE ) StockFontBuffer( x, y, FONT_PRIO_FRONT, 0, "주술이 없습니다", 0 );

  01c57	85 c9		 test	 ecx, ecx
  01c59	75 18		 jne	 SHORT $LN167@BattleButt
  01c5b	51		 push	 ecx
  01c5c	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BODGMCMN@?A?V?$LM?z?$MA?L?5?$LO?x?$LN?$MA?$LE?O?$LE?Y@
  01c61	51		 push	 ecx
  01c62	6a 01		 push	 1
  01c64	56		 push	 esi
  01c65	ff b5 f8 fe ff
	ff		 push	 DWORD PTR _x$2$[ebp]
  01c6b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  01c70	83 c4 18	 add	 esp, 24			; 00000018H
$LN167@BattleButt:

; 1103 : 
; 1104 : 					battleMenuJujutsuFontNo[ 5 ] = StockDispBuffer( ( ( WINDOW_DISP *)pActWnd->pYobi )->mx, pActWnd->y + 262 + 10, DISP_PRIO_IME3, CG_CLOSE_BTN, 2 );

  01c73	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pActWnd@@3PAUaction@@A
  01c79	6a 02		 push	 2
  01c7b	68 ba 65 00 00	 push	 26042			; 000065baH
  01c80	6a 69		 push	 105			; 00000069H
  01c82	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  01c85	05 10 01 00 00	 add	 eax, 272		; 00000110H
  01c8a	50		 push	 eax
  01c8b	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  01c8e	ff 70 14	 push	 DWORD PTR [eax+20]
  01c91	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  01c96	83 c4 14	 add	 esp, 20			; 00000014H
  01c99	a3 14 00 00 00	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+20, eax
$LN633@BattleButt:
  01c9e	5f		 pop	 edi
  01c9f	5b		 pop	 ebx
$LN163@BattleButt:

; 1105 : 				}
; 1106 : 			}
; 1107 : 		}
; 1108 : 	}
; 1109 : }

  01ca0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01ca3	33 cd		 xor	 ecx, ebp
  01ca5	5e		 pop	 esi
  01ca6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01cab	8b e5		 mov	 esp, ebp
  01cad	5d		 pop	 ebp
  01cae	c3		 ret	 0
  01caf	90		 npad	 1
$LN627@BattleButt:
  01cb0	00 00 00 00	 DD	 $LN83@BattleButt
  01cb4	00 00 00 00	 DD	 $LN84@BattleButt
  01cb8	00 00 00 00	 DD	 $LN125@BattleButt
  01cbc	00 00 00 00	 DD	 $LN136@BattleButt
  01cc0	00 00 00 00	 DD	 $LN147@BattleButt
  01cc4	00 00 00 00	 DD	 $LN5@BattleButt
  01cc8	00 00 00 00	 DD	 $LN5@BattleButt
  01ccc	00 00 00 00	 DD	 $LN5@BattleButt
  01cd0	00 00 00 00	 DD	 $LN152@BattleButt
  01cd4	00 00 00 00	 DD	 $LN88@BattleButt
  01cd8	00 00 00 00	 DD	 $LN97@BattleButt
  01cdc	00 00 00 00	 DD	 $LN114@BattleButt
?BattleButtonJujutsu@@YAXXZ ENDP			; BattleButtonJujutsu
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonAttack@@YAXXZ
_TEXT	SEGMENT
?BattleButtonAttack@@YAXXZ PROC				; BattleButtonAttack, COMDAT

; 562  : 	int i, j, k, bak, hitBoxAll;
; 563  : 	if( HitDispNo == battleButtonDispNo[ 0 ] || battleButtonBak2 == 0 ){

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00005	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?battleButtonDispNo@@3PAHA
  0000b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak2@@3HA
  00010	74 08		 je	 SHORT $LN12@BattleButt
  00012	85 c0		 test	 eax, eax
  00014	0f 85 16 01 00
	00		 jne	 $LN11@BattleButt
$LN12@BattleButt:

; 564  : 
; 565  : 		if( mouse.onceState & MOUSE_LEFT_CRICK || battleButtonBak2 == 0 ){

  0001a	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  00021	75 08		 jne	 SHORT $LN14@BattleButt
  00023	85 c0		 test	 eax, eax
  00025	0f 85 df 00 00
	00		 jne	 $LN9@BattleButt
$LN14@BattleButt:
  0002b	56		 push	 esi

; 566  : 			bak = battleButtonFlag[ 0 ];

  0002c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?battleButtonFlag@@3PAHA

; 567  : 			BattleButtonOff();

  00032	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 568  : 
; 569  : 			if( bak == FALSE ){

  00037	85 f6		 test	 esi, esi
  00039	0f 85 ca 00 00
	00		 jne	 $LN39@BattleButt

; 570  : 
; 571  : 				battleTargetSelectFlag = TRUE;
; 572  : 
; 573  : 				BattleCmdNo = BATTLE_ATTACK;
; 574  : 
; 575  : 				battleButtonFlag[ 0 ] = TRUE;
; 576  : 
; 577  : 				battleButtonBak = 0;
; 578  : 
; 579  : 				battleButtonBak2 = -1;
; 580  : 
; 581  : 				if( BattleBpFlag & BATTLE_BP_BOOMERANG ){

  0003f	33 c0		 xor	 eax, eax
  00041	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 1
  0004b	f6 05 00 00 00
	00 04		 test	 BYTE PTR ?BattleBpFlag@@3HA, 4
  00052	89 35 00 00 00
	00		 mov	 DWORD PTR ?BattleCmdNo@@3HA, esi ; BattleCmdNo
  00058	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleButtonFlag@@3PAHA, 1
  00062	89 35 00 00 00
	00		 mov	 DWORD PTR ?battleButtonBak@@3HA, esi ; battleButtonBak
  00068	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1
  00072	74 6d		 je	 SHORT $LL10@BattleButt

; 582  : 
; 583  : 					hitBoxAll = ACT_ATR_HIT_BOX_ALL1;
; 584  : 					j = 0;

  00074	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0007a	53		 push	 ebx
  0007b	57		 push	 edi
  0007c	bf 00 20 00 00	 mov	 edi, 8192		; 00002000H
  00081	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
$LL4@BattleButt:

; 585  : 
; 586  : 					for( i = 0 ; i < 4 ; i++ ){
; 587  : 
; 588  : 						if( !( j <= BattleMyNo && BattleMyNo < j + 5 ) ){

  00084	3b c1		 cmp	 eax, ecx
  00086	7f 07		 jg	 SHORT $LN19@BattleButt
  00088	8d 70 05	 lea	 esi, DWORD PTR [eax+5]
  0008b	3b ce		 cmp	 ecx, esi
  0008d	7c 47		 jl	 SHORT $LN18@BattleButt
$LN19@BattleButt:

; 589  : 
; 590  : 							for( k = j ; k < j + 5 ; k++ ){

  0008f	8d 70 05	 lea	 esi, DWORD PTR [eax+5]
  00092	3b c6		 cmp	 eax, esi
  00094	7d 3e		 jge	 SHORT $LN6@BattleButt
  00096	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL7@BattleButt:

; 591  : 
; 592  : 								if( p_party[ k ]->func == NULL ) continue;

  000a0	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  000a7	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  000ab	74 1c		 je	 SHORT $LN5@BattleButt

; 593  : 
; 594  : 								if( p_party[ k ]->hp <= 0 ) continue;

  000ad	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  000b1	7e 16		 jle	 SHORT $LN5@BattleButt

; 595  : 
; 596  : 								if( p_party[ k ]->atr & ACT_ATR_TRAVEL ) continue;

  000b3	8b 91 a4 00 00
	00		 mov	 edx, DWORD PTR [ecx+164]
  000b9	f7 c2 00 00 02
	00		 test	 edx, 131072		; 00020000H
  000bf	75 08		 jne	 SHORT $LN5@BattleButt

; 597  : 
; 598  : 								p_party[ k ]->atr |= hitBoxAll;

  000c1	0b d7		 or	 edx, edi
  000c3	89 91 a4 00 00
	00		 mov	 DWORD PTR [ecx+164], edx
$LN5@BattleButt:

; 589  : 
; 590  : 							for( k = j ; k < j + 5 ; k++ ){

  000c9	40		 inc	 eax
  000ca	3b c6		 cmp	 eax, esi
  000cc	7c d2		 jl	 SHORT $LL7@BattleButt
  000ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
$LN6@BattleButt:

; 599  : 							}
; 600  : 
; 601  : 							hitBoxAll <<= 1;

  000d4	03 ff		 add	 edi, edi
$LN18@BattleButt:

; 602  : 						}
; 603  : 						j += 5;

  000d6	8b c6		 mov	 eax, esi
  000d8	83 eb 01	 sub	 ebx, 1
  000db	75 a7		 jne	 SHORT $LL4@BattleButt

; 604  : 					}
; 605  : 				}else{

  000dd	5f		 pop	 edi
  000de	5b		 pop	 ebx
  000df	eb 28		 jmp	 SHORT $LN39@BattleButt
$LL10@BattleButt:

; 608  : 
; 609  : 						if( i == BattleMyNo ) continue;

  000e1	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000e7	74 1a		 je	 SHORT $LN8@BattleButt

; 610  : 
; 611  : 						if( p_party[ i ]->func == NULL ) continue;

  000e9	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  000f0	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  000f4	74 0d		 je	 SHORT $LN8@BattleButt

; 612  : 
; 613  : 						if( p_party[ i ]->hp <= 0 ) continue;

  000f6	83 79 78 00	 cmp	 DWORD PTR [ecx+120], 0
  000fa	7e 07		 jle	 SHORT $LN8@BattleButt

; 614  : 
; 615  : 						p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  000fc	83 89 a4 00 00
	00 08		 or	 DWORD PTR [ecx+164], 8
$LN8@BattleButt:

; 606  : 
; 607  : 					for( i = 0 ; i < 20 ; i++ ){

  00103	40		 inc	 eax
  00104	83 f8 14	 cmp	 eax, 20			; 00000014H
  00107	7c d8		 jl	 SHORT $LL10@BattleButt
$LN39@BattleButt:
  00109	5e		 pop	 esi
$LN9@BattleButt:

; 616  : 					}
; 617  : 				}
; 618  : 			}
; 619  : 		}
; 620  : 		strcpy( OneLineInfoStr,"공격하다。");

  0010a	66 a1 08 00 00
	00		 mov	 ax, WORD PTR ??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@+8
  00110	f3 0f 7e 05 00
	00 00 00	 movq	 xmm0, QWORD PTR ??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@
  00118	66 a3 08 00 00
	00		 mov	 WORD PTR ?OneLineInfoStr@@3PADA+8, ax
  0011e	a0 0a 00 00 00	 mov	 al, BYTE PTR ??_C@_0L@BHJLNCHD@?$LA?x?$LA?$NN?G?O?$LE?Y?$KB?$KD@+10
  00123	66 0f d6 05 00
	00 00 00	 movq	 QWORD PTR ?OneLineInfoStr@@3PADA, xmm0
  0012b	a2 0a 00 00 00	 mov	 BYTE PTR ?OneLineInfoStr@@3PADA+10, al
$LN11@BattleButt:

; 621  : 	}
; 622  : }

  00130	c3		 ret	 0
?BattleButtonAttack@@YAXXZ ENDP				; BattleButtonAttack
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ PROC		; sprintf_s<256>, COMDAT

; 1840 :         )

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1491 :         int const _Result = __stdio_common_vsprintf_s(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	68 00 01 00 00	 push	 256			; 00000100H
  00011	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00014	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00019	ff 70 04	 push	 DWORD PTR [eax+4]
  0001c	ff 30		 push	 DWORD PTR [eax]
  0001e	e8 00 00 00 00	 call	 ___stdio_common_vsprintf_s

; 1492 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1493 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1494 : 
; 1495 :         return _Result < 0 ? -1 : _Result;

  00023	83 c9 ff	 or	 ecx, -1
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH
  00029	85 c0		 test	 eax, eax
  0002b	0f 48 c1	 cmovs	 eax, ecx

; 1496 :     }
; 1497 :     #endif
; 1498 : 
; 1499 :     #if __STDC_WANT_SECURE_LIB__
; 1500 : 
; 1501 :         _Success_(return >= 0)
; 1502 :         _Check_return_opt_
; 1503 :         _CRT_STDIO_INLINE int __CRTDECL vsprintf_s(
; 1504 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1505 :             _In_                                          size_t      const _BufferCount,
; 1506 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1507 :                                                           va_list           _ArgList
; 1508 :             )
; 1509 :     #if defined _NO_CRT_STDIO_INLINE
; 1510 :     ;
; 1511 :     #else
; 1512 :         {
; 1513 :             return _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1514 :         }
; 1515 :     #endif
; 1516 : 
; 1517 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_2(
; 1518 :             _Success_(return >= 0)
; 1519 :             int, vsprintf_s,
; 1520 :             _Always_(_Post_z_)            char,        _Buffer,
; 1521 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1522 :                                           va_list,     _ArgList
; 1523 :             )
; 1524 : 
; 1525 :     #endif
; 1526 : 
; 1527 :     _Success_(return >= 0)
; 1528 :     _Check_return_opt_
; 1529 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p_l(
; 1530 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1531 :         _In_                                          size_t      const _BufferCount,
; 1532 :         _In_z_ _Printf_format_string_params_(2)       char const* const _Format,
; 1533 :         _In_opt_                                      _locale_t   const _Locale,
; 1534 :                                                       va_list           _ArgList
; 1535 :         )
; 1536 :     #if defined _NO_CRT_STDIO_INLINE
; 1537 :     ;
; 1538 :     #else
; 1539 :     {
; 1540 :         int const _Result = __stdio_common_vsprintf_p(
; 1541 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1542 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1543 : 
; 1544 :         return _Result < 0 ? -1 : _Result;
; 1545 :     }
; 1546 :     #endif
; 1547 : 
; 1548 :     _Success_(return >= 0)
; 1549 :     _Check_return_opt_
; 1550 :     _CRT_STDIO_INLINE int __CRTDECL _vsprintf_p(
; 1551 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1552 :         _In_                                          size_t      const _BufferCount,
; 1553 :         _In_z_ _Printf_format_string_                 char const* const _Format,
; 1554 :                                                       va_list           _ArgList
; 1555 :         )
; 1556 :     #if defined _NO_CRT_STDIO_INLINE
; 1557 :     ;
; 1558 :     #else
; 1559 :     {
; 1560 :         return _vsprintf_p_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1561 :     }
; 1562 :     #endif
; 1563 : 
; 1564 :     _Success_(return >= 0)
; 1565 :     _Check_return_opt_
; 1566 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s_l(
; 1567 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1568 :         _In_                                              size_t      const _BufferCount,
; 1569 :         _In_                                              size_t      const _MaxCount,
; 1570 :         _In_z_ _Printf_format_string_params_(2)           char const* const _Format,
; 1571 :         _In_opt_                                          _locale_t   const _Locale,
; 1572 :                                                           va_list          _ArgList
; 1573 :         )
; 1574 :     #if defined _NO_CRT_STDIO_INLINE
; 1575 :     ;
; 1576 :     #else
; 1577 :     {
; 1578 :         int const _Result = __stdio_common_vsnprintf_s(
; 1579 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1580 :             _Buffer, _BufferCount, _MaxCount, _Format, _Locale, _ArgList);
; 1581 : 
; 1582 :         return _Result < 0 ? -1 : _Result;
; 1583 :     }
; 1584 :     #endif
; 1585 : 
; 1586 :     _Success_(return >= 0)
; 1587 :     _Check_return_opt_
; 1588 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_s(
; 1589 :         _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1590 :         _In_                                              size_t      const _BufferCount,
; 1591 :         _In_                                              size_t      const _MaxCount,
; 1592 :         _In_z_ _Printf_format_string_                     char const* const _Format,
; 1593 :                                                           va_list           _ArgList
; 1594 :         )
; 1595 :     #if defined _NO_CRT_STDIO_INLINE
; 1596 :     ;
; 1597 :     #else
; 1598 :     {
; 1599 :         return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1600 :     }
; 1601 :     #endif
; 1602 : 
; 1603 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1604 :         _Success_(return >= 0)
; 1605 :         int, _vsnprintf_s,
; 1606 :         _Always_(_Post_z_)            char,        _Buffer,
; 1607 :         _In_                          size_t,      _BufferCount,
; 1608 :         _In_z_ _Printf_format_string_ char const*, _Format,
; 1609 :                                       va_list,     _ArgList
; 1610 :         )
; 1611 : 
; 1612 :     #if __STDC_WANT_SECURE_LIB__
; 1613 : 
; 1614 :         _Success_(return >= 0)
; 1615 :         _Check_return_opt_
; 1616 :         _CRT_STDIO_INLINE int __CRTDECL vsnprintf_s(
; 1617 :             _Out_writes_opt_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1618 :             _In_                                              size_t      const _BufferCount,
; 1619 :             _In_                                              size_t      const _MaxCount,
; 1620 :             _In_z_ _Printf_format_string_                     char const* const _Format,
; 1621 :                                                               va_list           _ArgList
; 1622 :             )
; 1623 :     #if defined _NO_CRT_STDIO_INLINE
; 1624 :     ;
; 1625 :     #else
; 1626 :         {
; 1627 :             return _vsnprintf_s_l(_Buffer, _BufferCount, _MaxCount, _Format, NULL, _ArgList);
; 1628 :         }
; 1629 :     #endif
; 1630 : 
; 1631 :         __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_3(
; 1632 :             _Success_(return >= 0)
; 1633 :             int, vsnprintf_s,
; 1634 :             _Always_(_Post_z_)            char,        _Buffer,
; 1635 :             _In_                          size_t,      _BufferCount,
; 1636 :             _In_z_ _Printf_format_string_ char const*, _Format,
; 1637 :                                           va_list,     _ArgList
; 1638 :             )
; 1639 : 
; 1640 :     #endif
; 1641 : 
; 1642 :     _Check_return_opt_
; 1643 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_l(
; 1644 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1645 :         _In_opt_                                _locale_t   const _Locale,
; 1646 :                                                 va_list           _ArgList
; 1647 :         )
; 1648 :     #if defined _NO_CRT_STDIO_INLINE
; 1649 :     ;
; 1650 :     #else
; 1651 :     {
; 1652 :         int const _Result = __stdio_common_vsprintf(
; 1653 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1654 :             NULL, 0, _Format, _Locale, _ArgList);
; 1655 : 
; 1656 :         return _Result < 0 ? -1 : _Result;
; 1657 :     }
; 1658 :     #endif
; 1659 : 
; 1660 :     _Check_return_
; 1661 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf(
; 1662 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1663 :                                       va_list           _ArgList
; 1664 :         )
; 1665 :     #if defined _NO_CRT_STDIO_INLINE
; 1666 :     ;
; 1667 :     #else
; 1668 :     {
; 1669 :         return _vscprintf_l(_Format, NULL, _ArgList);
; 1670 :     }
; 1671 :     #endif
; 1672 : 
; 1673 :     _Check_return_opt_
; 1674 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p_l(
; 1675 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1676 :         _In_opt_                                _locale_t   const _Locale,
; 1677 :                                                 va_list           _ArgList
; 1678 :         )
; 1679 :     #if defined _NO_CRT_STDIO_INLINE
; 1680 :     ;
; 1681 :     #else
; 1682 :     {
; 1683 :         int const _Result = __stdio_common_vsprintf_p(
; 1684 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1685 :             NULL, 0, _Format, _Locale, _ArgList);
; 1686 : 
; 1687 :         return _Result < 0 ? -1 : _Result;
; 1688 :     }
; 1689 :     #endif
; 1690 : 
; 1691 :     _Check_return_
; 1692 :     _CRT_STDIO_INLINE int __CRTDECL _vscprintf_p(
; 1693 :         _In_z_ _Printf_format_string_ char const* const _Format,
; 1694 :                                       va_list           _ArgList
; 1695 :         )
; 1696 :     #if defined _NO_CRT_STDIO_INLINE
; 1697 :     ;
; 1698 :     #else
; 1699 :     {
; 1700 :         return _vscprintf_p_l(_Format, NULL, _ArgList);
; 1701 :     }
; 1702 :     #endif
; 1703 : 
; 1704 :     _Check_return_opt_
; 1705 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c_l(
; 1706 :         _Out_writes_opt_(_BufferCount)          char*       const _Buffer,
; 1707 :         _In_                                    size_t      const _BufferCount,
; 1708 :         _In_z_ _Printf_format_string_params_(2) char const* const _Format,
; 1709 :         _In_opt_                                _locale_t   const _Locale,
; 1710 :                                                 va_list           _ArgList
; 1711 :         )
; 1712 :     #if defined _NO_CRT_STDIO_INLINE
; 1713 :     ;
; 1714 :     #else
; 1715 :     {
; 1716 :         int const _Result = __stdio_common_vsprintf(
; 1717 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS,
; 1718 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1719 : 
; 1720 :         return _Result < 0 ? -1 : _Result;
; 1721 :     }
; 1722 :     #endif
; 1723 : 
; 1724 :     _Success_(return >= 0)
; 1725 :     _Check_return_opt_
; 1726 :     _CRT_STDIO_INLINE int __CRTDECL _vsnprintf_c(
; 1727 :         _Out_writes_opt_(_BufferCount) char*       const _Buffer,
; 1728 :         _In_                           size_t      const _BufferCount,
; 1729 :         _In_z_ _Printf_format_string_  char const* const _Format,
; 1730 :                                        va_list           _ArgList
; 1731 :         )
; 1732 :     #if defined _NO_CRT_STDIO_INLINE
; 1733 :     ;
; 1734 :     #else
; 1735 :     {
; 1736 :         return _vsnprintf_c_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1737 :     }
; 1738 :     #endif
; 1739 : 
; 1740 :     _Success_(return >= 0)
; 1741 :     _Check_return_opt_ _CRT_INSECURE_DEPRECATE(_sprintf_s_l)
; 1742 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_l(
; 1743 :         _Pre_notnull_ _Always_(_Post_z_)        char*       const _Buffer,
; 1744 :         _In_z_ _Printf_format_string_params_(0) char const* const _Format,
; 1745 :         _In_opt_                                _locale_t   const _Locale,
; 1746 :         ...)
; 1747 :     #if defined _NO_CRT_STDIO_INLINE
; 1748 :     ;
; 1749 :     #else
; 1750 :     {
; 1751 :         int _Result;
; 1752 :         va_list _ArgList;
; 1753 :         __crt_va_start(_ArgList, _Locale);
; 1754 : 
; 1755 :         _Result = _vsprintf_l(_Buffer, _Format, _Locale, _ArgList);
; 1756 : 
; 1757 :         __crt_va_end(_ArgList);
; 1758 :         return _Result;
; 1759 :     }
; 1760 :     #endif
; 1761 : 
; 1762 :     _Success_(return >= 0)
; 1763 :     _Check_return_opt_
; 1764 :     _CRT_STDIO_INLINE int __CRTDECL sprintf(
; 1765 :         _Pre_notnull_ _Always_(_Post_z_) char*       const _Buffer,
; 1766 :         _In_z_ _Printf_format_string_    char const* const _Format,
; 1767 :         ...)
; 1768 :     #if defined _NO_CRT_STDIO_INLINE
; 1769 :     ;
; 1770 :     #else
; 1771 :     {
; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }
; 1781 :     #endif
; 1782 : 
; 1783 :     __DEFINE_CPP_OVERLOAD_STANDARD_FUNC_0_1_ARGLIST(
; 1784 :         _Success_(return >= 0)
; 1785 :         int, __RETURN_POLICY_SAME, __EMPTY_DECLSPEC, __CRTDECL, sprintf, vsprintf,
; 1786 :         _Pre_notnull_ _Always_(_Post_z_), char,        _Buffer,
; 1787 :         _In_z_ _Printf_format_string_     char const*, _Format
; 1788 :         )
; 1789 : 
; 1790 :     _Success_(return >= 0)
; 1791 :     _Check_return_opt_
; 1792 :     _CRT_STDIO_INLINE int __CRTDECL _sprintf_s_l(
; 1793 :         _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1794 :         _In_                                          size_t      const _BufferCount,
; 1795 :         _In_z_ _Printf_format_string_params_(0)       char const* const _Format,
; 1796 :         _In_opt_                                      _locale_t   const _Locale,
; 1797 :         ...)
; 1798 :     #if defined _NO_CRT_STDIO_INLINE
; 1799 :     ;
; 1800 :     #else
; 1801 :     {
; 1802 :         int _Result;
; 1803 :         va_list _ArgList;
; 1804 :         __crt_va_start(_ArgList, _Locale);
; 1805 :         _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1806 :         __crt_va_end(_ArgList);
; 1807 :         return _Result;
; 1808 :     }
; 1809 :     #endif
; 1810 : 
; 1811 :     #if __STDC_WANT_SECURE_LIB__
; 1812 : 
; 1813 :         _Success_(return >= 0)
; 1814 :         _Check_return_opt_
; 1815 :         _CRT_STDIO_INLINE int __CRTDECL sprintf_s(
; 1816 :             _Out_writes_(_BufferCount) _Always_(_Post_z_) char*       const _Buffer,
; 1817 :             _In_                                          size_t      const _BufferCount,
; 1818 :             _In_z_ _Printf_format_string_                 char const* const _Format,
; 1819 :             ...)
; 1820 :     #if defined _NO_CRT_STDIO_INLINE
; 1821 :     ;
; 1822 :     #else
; 1823 :         {
; 1824 :             int _Result;
; 1825 :             va_list _ArgList;
; 1826 :             __crt_va_start(_ArgList, _Format);
; 1827 :             _Result = _vsprintf_s_l(_Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1828 :             __crt_va_end(_ArgList);
; 1829 :             return _Result;
; 1830 :         }
; 1831 :     #endif
; 1832 : 
; 1833 :     #endif
; 1834 : 
; 1835 :     __DEFINE_CPP_OVERLOAD_SECURE_FUNC_0_1_ARGLIST(

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ENDP		; sprintf_s<256>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?InitItem2@@YAXHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?InitItem2@@YAXHH@Z PROC				; InitItem2, COMDAT

; 364  : void InitItem2( int x, int y ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 365  : 	int i, j = 0, k = 0;

  00004	8b 5d 0c	 mov	 ebx, DWORD PTR _y$[ebp]
  00007	b9 2c 01 00 00	 mov	 ecx, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+300
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	33 f6		 xor	 esi, esi
  00010	33 ff		 xor	 edi, edi
$LL9@InitItem2:

; 366  : 	for( i = MAX_ITEMSTART ; i < MAX_ITEM ; i++ ){
; 367  : 		ItemBuffer[ i ].defX = x + 32 + j;

  00012	8b 55 08	 mov	 edx, DWORD PTR _x$[ebp]

; 368  : 		ItemBuffer[ i ].defY = y + 56 + 48 + 48 + 48 -160 + k;

  00015	8d 43 28	 lea	 eax, DWORD PTR [ebx+40]
  00018	03 c7		 add	 eax, edi

; 369  : 		ItemBuffer[ i ].x = ItemBuffer[ i ].defX;
; 370  : 		ItemBuffer[ i ].y = ItemBuffer[ i ].defY;
; 371  : 		ItemBuffer[ i ].bmpNo = 20000 + j / 48;
; 372  : 		ItemBuffer[ i ].dispPrio = DISP_PRIO_ITEM;

  0001a	c7 41 08 6c 00
	00 00		 mov	 DWORD PTR [ecx+8], 108	; 0000006cH
  00021	83 c2 20	 add	 edx, 32			; 00000020H
  00024	89 01		 mov	 DWORD PTR [ecx], eax
  00026	03 d6		 add	 edx, esi
  00028	89 41 f8	 mov	 DWORD PTR [ecx-8], eax
  0002b	89 51 fc	 mov	 DWORD PTR [ecx-4], edx
  0002e	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00033	89 51 f4	 mov	 DWORD PTR [ecx-12], edx
  00036	f7 ee		 imul	 esi
  00038	c1 fa 03	 sar	 edx, 3
  0003b	8b c2		 mov	 eax, edx
  0003d	81 c2 20 4e 00
	00		 add	 edx, 20000		; 00004e20H
  00043	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00046	03 c2		 add	 eax, edx
  00048	8d 56 33	 lea	 edx, DWORD PTR [esi+51]
  0004b	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0004e	33 f6		 xor	 esi, esi
  00050	83 c1 20	 add	 ecx, 32			; 00000020H
  00053	8d 47 30	 lea	 eax, DWORD PTR [edi+48]
  00056	81 fa f0 00 00
	00		 cmp	 edx, 240		; 000000f0H
  0005c	0f 4c c7	 cmovl	 eax, edi
  0005f	0f 4c f2	 cmovl	 esi, edx
  00062	8b f8		 mov	 edi, eax
  00064	81 f9 cc 06 00
	00		 cmp	 ecx, OFFSET ?ItemBuffer@@3PAUITEM_BUFFER@@A+1740
  0006a	7c a6		 jl	 SHORT $LL9@InitItem2

; 373  : 		j += 51;
; 374  : 		if( j >= 48 * 5 ){
; 375  : 			j = 0;
; 376  : 			k += 48;
; 377  : 		}
; 378  : 	}
; 379  : }

  0006c	5f		 pop	 edi
  0006d	5e		 pop	 esi
  0006e	5b		 pop	 ebx
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
?InitItem2@@YAXHH@Z ENDP				; InitItem2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleButtonOff@@YAXXZ
_TEXT	SEGMENT
?BattleButtonOff@@YAXXZ PROC				; BattleButtonOff, COMDAT

; 350  : 	play_se( 217, 320, 240 );

  00000	68 f0 00 00 00	 push	 240			; 000000f0H
  00005	68 40 01 00 00	 push	 320			; 00000140H
  0000a	68 d9 00 00 00	 push	 217			; 000000d9H
  0000f	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 351  : 	DeathAction( pActWnd );

  00014	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  0001a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0001f	83 c4 10	 add	 esp, 16			; 00000010H

; 352  : 	pActWnd = NULL;

  00022	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0

; 353  : 	battleTargetSelectFlag = FALSE;

  0002c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0

; 354  : 	BattleCmdNo = -1;

  00036	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?BattleCmdNo@@3HA, -1 ; BattleCmdNo

; 355  : 
; 356  : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 357  : 	wonflag = 0 ; 

  00040	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?wonflag@@3HA, 0 ; wonflag

; 358  : #endif
; 359  : 	ClearBattleButton();

  0004a	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 360  : 	ClearBoxFlag();

  0004f	e9 00 00 00 00	 jmp	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag
?BattleButtonOff@@YAXXZ ENDP				; BattleButtonOff
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?CheckBattelTarget@@YAHXZ
_TEXT	SEGMENT
?CheckBattelTarget@@YAHXZ PROC				; CheckBattelTarget, COMDAT

; 291  : 	int i;
; 292  : 	// ?????????????
; 293  : 	for( i = 0 ; i < 20 ; i++ ){

  00000	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00006	33 c0		 xor	 eax, eax
  00008	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@CheckBatte:

; 294  : 		// ??????????
; 295  : 		if( p_party[ i ]->func == NULL ) continue;

  00010	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00017	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0001b	74 11		 je	 SHORT $LN2@CheckBatte

; 296  : 		// ??????
; 297  : 
; 298  : #ifdef __ATTACK_MAGIC
; 299  : #ifdef _SKILL_ADDBARRIER
; 300  : 		if( !( p_party[i]->atr & ACT_ATR_HIT_BOX ) &&
; 301  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL1 ) &&
; 302  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL2 ) &&
; 303  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL3 ) && 
; 304  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL1 ) &&
; 305  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL2 ) && 
; 306  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL3 ) &&
; 307  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL4 ) &&
; 308  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL5 ) &&
; 309  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL6 ) &&
; 310  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL7 ) &&

  0001d	f7 81 a4 00 00
	00 08 e0 fc 03	 test	 DWORD PTR [ecx+164], 66904072 ; 03fce008H
  00027	74 05		 je	 SHORT $LN2@CheckBatte

; 311  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL8 )) continue;
; 312  : #else
; 313  : 		if( !( p_party[i]->atr & ACT_ATR_HIT_BOX ) &&
; 314  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL1 ) &&
; 315  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL2 ) &&
; 316  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_ALL3 ) && 
; 317  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL1 ) &&
; 318  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL2 ) && 
; 319  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL3 ) &&
; 320  : 			!( p_party[i]->atr & ACT_ATR_HIT_BOX_COL4 ) ) continue;
; 321  : #endif
; 322  : #else
; 323  : 		if( !( p_party[ i ]->atr & ACT_ATR_HIT_BOX ) &&
; 324  : 			!( p_party[ i ]->atr & ACT_ATR_HIT_BOX_ALL1 ) &&
; 325  : 			!( p_party[ i ]->atr & ACT_ATR_HIT_BOX_ALL2 ) &&
; 326  : 			!( p_party[ i ]->atr & ACT_ATR_HIT_BOX_ALL3 ) ) continue;
; 327  : 
; 328  : #endif
; 329  : 
; 330  : #ifdef _CANT_ATK
; 331  : 		if( !((pc.sideNo*10) <= i && ((pc.sideNo+1)*10) > i) )
; 332  : #endif
; 333  : 		// ???????
; 334  : 		if( p_party[ i ]->hitDispNo == HitDispNo )

  00029	39 51 20	 cmp	 DWORD PTR [ecx+32], edx
  0002c	74 09		 je	 SHORT $LN1@CheckBatte
$LN2@CheckBatte:

; 291  : 	int i;
; 292  : 	// ?????????????
; 293  : 	for( i = 0 ; i < 20 ; i++ ){

  0002e	40		 inc	 eax
  0002f	83 f8 14	 cmp	 eax, 20			; 00000014H
  00032	7c dc		 jl	 SHORT $LL4@CheckBatte

; 335  : 			return i;
; 336  : 	}	
; 337  : 	// ????????
; 338  : 	return -1;

  00034	83 c8 ff	 or	 eax, -1
$LN1@CheckBatte:

; 339  : }

  00037	c3		 ret	 0
?CheckBattelTarget@@YAHXZ ENDP				; CheckBattelTarget
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?ClearBoxFlag@@YAXXZ
_TEXT	SEGMENT
?ClearBoxFlag@@YAXXZ PROC				; ClearBoxFlag, COMDAT

; 257  : 	int i;
; 258  : 	// ????????
; 259  : 	for( i = 0 ; i < 20 ; i++ ){

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?p_party@@3PAPAUaction@@A ; p_party
  00005	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@ClearBoxFl:

; 260  : 		// ??????????
; 261  : 		if( p_party[ i ]->func == NULL ) continue;

  00010	8b 08		 mov	 ecx, DWORD PTR [eax]
  00012	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00016	0f 84 9d 00 00
	00		 je	 $LN2@ClearBoxFl

; 262  : 		// ?????????????
; 263  : 
; 264  : #ifdef __ATTACK_MAGIC
; 265  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL1;

  0001c	81 a1 a4 00 00
	00 ff ff fb ff	 and	 DWORD PTR [ecx+164], -262145 ; fffbffffH

; 266  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL2;

  00026	8b 08		 mov	 ecx, DWORD PTR [eax]
  00028	81 a1 a4 00 00
	00 ff ff f7 ff	 and	 DWORD PTR [ecx+164], -524289 ; fff7ffffH

; 267  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL3;

  00032	8b 08		 mov	 ecx, DWORD PTR [eax]
  00034	81 a1 a4 00 00
	00 ff ff ef ff	 and	 DWORD PTR [ecx+164], -1048577 ; ffefffffH

; 268  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL4;

  0003e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00040	81 a1 a4 00 00
	00 ff ff df ff	 and	 DWORD PTR [ecx+164], -2097153 ; ffdfffffH

; 269  : #endif
; 270  : #ifdef _SKILL_ADDBARRIER
; 271  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL5;

  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	81 a1 a4 00 00
	00 ff ff bf ff	 and	 DWORD PTR [ecx+164], -4194305 ; ffbfffffH

; 272  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL6;

  00056	8b 08		 mov	 ecx, DWORD PTR [eax]
  00058	81 a1 a4 00 00
	00 ff ff 7f ff	 and	 DWORD PTR [ecx+164], -8388609 ; ff7fffffH

; 273  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL7;

  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	81 a1 a4 00 00
	00 ff ff ff fe	 and	 DWORD PTR [ecx+164], -16777217 ; feffffffH

; 274  : 		p_party[i]->atr &= ~ACT_ATR_HIT_BOX_COL8;

  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	81 a1 a4 00 00
	00 ff ff ff fd	 and	 DWORD PTR [ecx+164], -33554433 ; fdffffffH

; 275  : #endif
; 276  : 
; 277  : 
; 278  : 		p_party[ i ]->atr &= ~ACT_ATR_HIT_BOX;

  0007a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0007c	83 a1 a4 00 00
	00 f7		 and	 DWORD PTR [ecx+164], -9	; fffffff7H

; 279  : 		p_party[ i ]->atr &= ~ACT_ATR_HIT_BOX_ALL1;

  00083	8b 08		 mov	 ecx, DWORD PTR [eax]
  00085	81 a1 a4 00 00
	00 ff df ff ff	 and	 DWORD PTR [ecx+164], -8193 ; ffffdfffH

; 280  : 		p_party[ i ]->atr &= ~ACT_ATR_HIT_BOX_ALL2;

  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	81 a1 a4 00 00
	00 ff bf ff ff	 and	 DWORD PTR [ecx+164], -16385 ; ffffbfffH

; 281  : 		p_party[ i ]->atr &= ~ACT_ATR_HIT_BOX_ALL3;

  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	81 a1 a4 00 00
	00 ff 7f ff ff	 and	 DWORD PTR [ecx+164], -32769 ; ffff7fffH

; 282  : 		p_party[ i ]->atr |= ACT_ATR_HIT;

  000a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a9	83 89 a4 00 00
	00 04		 or	 DWORD PTR [ecx+164], 4

; 283  : 		// ???????
; 284  : 		p_party[ i ]->hitDispNo = -2;

  000b0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b2	c7 41 20 fe ff
	ff ff		 mov	 DWORD PTR [ecx+32], -2	; fffffffeH
$LN2@ClearBoxFl:

; 257  : 	int i;
; 258  : 	// ????????
; 259  : 	for( i = 0 ; i < 20 ; i++ ){

  000b9	83 c0 04	 add	 eax, 4
  000bc	3d 50 00 00 00	 cmp	 eax, OFFSET ?p_party@@3PAPAUaction@@A+80
  000c1	0f 8c 49 ff ff
	ff		 jl	 $LL4@ClearBoxFl

; 285  : 	}
; 286  : }

  000c7	c3		 ret	 0
?ClearBoxFlag@@YAXXZ ENDP				; ClearBoxFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?CheckPetSuu@@YAHXZ
_TEXT	SEGMENT
?CheckPetSuu@@YAHXZ PROC				; CheckPetSuu, COMDAT

; 247  : 	int i,cnt = 0;
; 248  : 	for( i = 0 ; i < 5 ; i++ ){
; 249  : 		if( pet[ i ].useFlag == TRUE ) cnt++;

  00000	33 c0		 xor	 eax, eax
  00002	66 83 3d 76 00
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A+118, 1
  0000a	0f 94 c0	 sete	 al
  0000d	66 83 3d ee 0b
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A+3054, 1
  00015	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00018	0f 45 c8	 cmovne	 ecx, eax
  0001b	66 83 3d 66 17
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A+5990, 1
  00023	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00026	0f 45 c1	 cmovne	 eax, ecx
  00029	66 83 3d de 22
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A+8926, 1
  00031	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00034	0f 45 c8	 cmovne	 ecx, eax
  00037	66 83 3d 56 2e
	00 00 01	 cmp	 WORD PTR ?pet@@3PAUPET@@A+11862, 1
  0003f	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00042	0f 45 c1	 cmovne	 eax, ecx

; 250  : 	}
; 251  : 	return cnt;
; 252  : }

  00045	c3		 ret	 0
?CheckPetSuu@@YAHXZ ENDP				; CheckPetSuu
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?InitBattleAnimFlag@@YAXXZ
_TEXT	SEGMENT
?InitBattleAnimFlag@@YAXXZ PROC				; InitBattleAnimFlag, COMDAT

; 236  : 	int i;
; 237  : 	// ?????
; 238  : 	for( i = 0 ; i < 20 ; i++ ){

  00000	b8 04 00 00 00	 mov	 eax, OFFSET ?p_party@@3PAPAUaction@@A+4
  00005	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL4@InitBattle:

; 239  : 		// ???????
; 240  : 		p_party[ i ]->atr &= ~ACT_ATR_BTL_CMD_END;

  00010	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00013	83 a1 a4 00 00
	00 bf		 and	 DWORD PTR [ecx+164], -65 ; ffffffbfH
  0001a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001c	83 a1 a4 00 00
	00 bf		 and	 DWORD PTR [ecx+164], -65 ; ffffffbfH
  00023	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00026	83 a1 a4 00 00
	00 bf		 and	 DWORD PTR [ecx+164], -65 ; ffffffbfH
  0002d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00030	83 a1 a4 00 00
	00 bf		 and	 DWORD PTR [ecx+164], -65 ; ffffffbfH
  00037	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0003a	83 c0 14	 add	 eax, 20			; 00000014H
  0003d	83 a1 a4 00 00
	00 bf		 and	 DWORD PTR [ecx+164], -65 ; ffffffbfH
  00044	3d 54 00 00 00	 cmp	 eax, OFFSET ?p_party@@3PAPAUaction@@A+84
  00049	7c c5		 jl	 SHORT $LL4@InitBattle

; 241  : 	}
; 242  : }

  0004b	c3		 ret	 0
?InitBattleAnimFlag@@YAXXZ ENDP				; InitBattleAnimFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleSetWazaHitBox@@YAXHH@Z
_TEXT	SEGMENT
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_no$ = 8						; size = 4
_typeflag$ = 12						; size = 4
?BattleSetWazaHitBox@@YAXHH@Z PROC			; BattleSetWazaHitBox, COMDAT

; 2051 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	8b 5d 08	 mov	 ebx, DWORD PTR _no$[ebp]
  00017	56		 push	 esi

; 2052 : 	char moji[ 256 ];
; 2053 : 	int i;
; 2054 : 
; 2055 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2056 : 	int switchnum = 0 ;
; 2057 : 
; 2058 : 	if ( typeflag == 0 ){

  00018	8b 75 0c	 mov	 esi, DWORD PTR _typeflag$[ebp]
  0001b	85 f6		 test	 esi, esi
  0001d	75 22		 jne	 SHORT $LN73@BattleSetW

; 2059 : 		BattleWazaNo = no;
; 2060 : 		switchnum = petSkill[ battlePetNoBak ][ no ].target;

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  00024	89 1d 00 00 00
	00		 mov	 DWORD PTR ?BattleWazaNo@@3HA, ebx ; BattleWazaNo
  0002a	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  00031	2b c8		 sub	 ecx, eax
  00033	03 cb		 add	 ecx, ebx
  00035	6b c1 6a	 imul	 eax, ecx, 106
  00038	0f bf 80 06 00
	00 00		 movsx	 eax, WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+6]

; 2061 : 	}else{

  0003f	eb 02		 jmp	 SHORT $LN74@BattleSetW
$LN73@BattleSetW:

; 2062 : 		switchnum = no ; 

  00041	8b c3		 mov	 eax, ebx
$LN74@BattleSetW:

; 2063 : 	}
; 2064 : 	battleTargetSelectFlag = TRUE;

  00043	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 1

; 2065 : 	switch( switchnum ) {

  0004d	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00050	0f 87 43 14 00
	00		 ja	 $LN188@BattleSetW
  00056	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN522@BattleSetW[eax*4]
$LN75@BattleSetW:

; 2066 : #else
; 2067 : 	BattleWazaNo = no;
; 2068 : 	battleTargetSelectFlag = TRUE;
; 2069 : 	switch( petSkill[ battlePetNoBak ][ no ].target ) {
; 2070 : #endif
; 2071 : 
; 2072 : 	case PETSKILL_TARGET_MYSELF:	// ?????
; 2073 : 		// ????????????
; 2074 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2075 : 		if ( typeflag == 1 ) 

  0005d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00062	83 fe 01	 cmp	 esi, 1
  00065	75 09		 jne	 SHORT $LN76@BattleSetW

; 2076 : 			p_party[ BattleMyNo ]->atr |= ACT_ATR_HIT_BOX;

  00067	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0006e	eb 07		 jmp	 SHORT $LN523@BattleSetW
$LN76@BattleSetW:

; 2077 : 		else
; 2078 : 			p_party[ BattleMyNo + 5 ]->atr |= ACT_ATR_HIT_BOX;

  00070	8b 04 85 14 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4+20]
$LN523@BattleSetW:

; 2079 : #else
; 2080 : 		p_party[ BattleMyNo + 5 ]->atr |= ACT_ATR_HIT_BOX;
; 2081 : #endif
; 2082 : //		if( typeflag == 0 )
; 2083 : 			battleTargetSelectFlag = TRUE;
; 2084 : 		DeathAction( pActWnd );

  00077	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN300@BattleSetW:

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  0007e	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  00084	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00089	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  00093	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
  00098	4e		 dec	 esi
  00099	f7 de		 neg	 esi
  0009b	68 f0 00 00 00	 push	 240			; 000000f0H
  000a0	1b f6		 sbb	 esi, esi
  000a2	68 40 01 00 00	 push	 320			; 00000140H
  000a7	83 c6 05	 add	 esi, 5
  000aa	68 d9 00 00 00	 push	 217			; 000000d9H
  000af	89 35 00 00 00
	00		 mov	 DWORD PTR ?BattleCmdNo@@3HA, esi ; BattleCmdNo
  000b5	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
$LN524@BattleSetW:
  000bd	5e		 pop	 esi
  000be	89 1d 00 00 00
	00		 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, ebx ; battleWazaTargetBak
  000c4	5b		 pop	 ebx
  000c5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000c8	33 cd		 xor	 ecx, ebp
  000ca	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
$LN80@BattleSetW:

; 2085 : 		pActWnd = NULL;
; 2086 : 		ClearBattleButton();
; 2087 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2088 : 		if ( typeflag == 1 )
; 2089 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2090 : 		else
; 2091 : #endif
; 2092 : 		BattleCmdNo = BATTLE_WAZA;
; 2093 : 		// ?????
; 2094 : 		play_se( 217, 320, 240 );
; 2095 : 		// ????????
; 2096 : 		battleWazaTargetBak = no;
; 2097 : 		break;
; 2098 : 		
; 2099 : 	case PETSKILL_TARGET_OTHER:	// ????)
; 2100 : 		for( i = 0 ; i < 20 ; i++ ){

  000d3	b9 00 00 00 00	 mov	 ecx, OFFSET ?p_party@@3PAPAUaction@@A
$LL6@BattleSetW:

; 2101 : 			if( p_party[ i ]->func == NULL ) continue;

  000d8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000da	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  000de	74 0d		 je	 SHORT $LN4@BattleSetW

; 2102 : 			if( p_party[ i ]->hp <= 0 ) continue;

  000e0	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  000e4	7e 07		 jle	 SHORT $LN4@BattleSetW

; 2103 : 			p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  000e6	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN4@BattleSetW:

; 2085 : 		pActWnd = NULL;
; 2086 : 		ClearBattleButton();
; 2087 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2088 : 		if ( typeflag == 1 )
; 2089 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2090 : 		else
; 2091 : #endif
; 2092 : 		BattleCmdNo = BATTLE_WAZA;
; 2093 : 		// ?????
; 2094 : 		play_se( 217, 320, 240 );
; 2095 : 		// ????????
; 2096 : 		battleWazaTargetBak = no;
; 2097 : 		break;
; 2098 : 		
; 2099 : 	case PETSKILL_TARGET_OTHER:	// ????)
; 2100 : 		for( i = 0 ; i < 20 ; i++ ){

  000ed	83 c1 04	 add	 ecx, 4
  000f0	81 f9 50 00 00
	00		 cmp	 ecx, OFFSET ?p_party@@3PAPAUaction@@A+80
  000f6	7c e0		 jl	 SHORT $LL6@BattleSetW

; 2104 : 		}
; 2105 : ///		if ( typeflag == 0 )
; 2106 : 			battleTargetSelectFlag = TRUE;
; 2107 : 		DeathAction( pActWnd );

  000f8	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  000fe	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 2108 : 		pActWnd = NULL;

  00103	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0

; 2109 : 		ClearBattleButton();

  0010d	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 2110 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2111 : 		if ( typeflag == 1 )
; 2112 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2113 : 		else
; 2114 : #endif
; 2115 : 		BattleCmdNo = BATTLE_WAZA;
; 2116 : 		play_se( 217, 320, 240 );

  00112	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00115	f7 d8		 neg	 eax
  00117	68 f0 00 00 00	 push	 240			; 000000f0H
  0011c	1b c0		 sbb	 eax, eax
  0011e	83 c0 05	 add	 eax, 5
  00121	68 40 01 00 00	 push	 320			; 00000140H
  00126	68 d9 00 00 00	 push	 217			; 000000d9H
  0012b	a3 00 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, eax ; BattleCmdNo
  00130	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00135	83 c4 10	 add	 esp, 16			; 00000010H

; 2117 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2118 : 		if ( typeflag != 1 )

  00138	83 fe 01	 cmp	 esi, 1
  0013b	0f 84 58 13 00
	00		 je	 $LN188@BattleSetW

; 2119 : #endif
; 2120 : 			battleWazaTargetBak = no;

  00141	5e		 pop	 esi
  00142	89 1d 00 00 00
	00		 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, ebx ; battleWazaTargetBak

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  00148	5b		 pop	 ebx
  00149	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0014c	33 cd		 xor	 ecx, ebp
  0014e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00153	8b e5		 mov	 esp, ebp
  00155	5d		 pop	 ebp
  00156	c3		 ret	 0
$LN86@BattleSetW:

; 2121 : 		break;
; 2122 : 		
; 2123 : 	case PETSKILL_TARGET_ALLMYSIDE:	// 
; 2124 : 		// ????????
; 2125 : 		if( BattleMyNo < 10 ){

  00157	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  0015e	0f 8d 1b 01 00
	00		 jge	 $LN87@BattleSetW
$LN554@BattleSetW:

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  00164	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00169	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0016d	74 10		 je	 SHORT $LN7@BattleSetW
  0016f	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00173	7e 0a		 jle	 SHORT $LN7@BattleSetW
  00175	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN7@BattleSetW:
  0017f	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00184	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00188	74 10		 je	 SHORT $LN263@BattleSetW
  0018a	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0018e	7e 0a		 jle	 SHORT $LN263@BattleSetW
  00190	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN263@BattleSetW:
  0019a	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  0019f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  001a3	74 10		 je	 SHORT $LN265@BattleSetW
  001a5	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001a9	7e 0a		 jle	 SHORT $LN265@BattleSetW
  001ab	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN265@BattleSetW:
  001b5	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  001ba	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  001be	74 10		 je	 SHORT $LN267@BattleSetW
  001c0	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001c4	7e 0a		 jle	 SHORT $LN267@BattleSetW
  001c6	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN267@BattleSetW:
  001d0	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  001d5	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  001d9	74 10		 je	 SHORT $LN269@BattleSetW
  001db	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001df	7e 0a		 jle	 SHORT $LN269@BattleSetW
  001e1	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN269@BattleSetW:
  001eb	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  001f0	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  001f4	74 10		 je	 SHORT $LN271@BattleSetW
  001f6	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  001fa	7e 0a		 jle	 SHORT $LN271@BattleSetW
  001fc	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN271@BattleSetW:
  00206	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  0020b	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0020f	74 10		 je	 SHORT $LN273@BattleSetW
  00211	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00215	7e 0a		 jle	 SHORT $LN273@BattleSetW
  00217	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN273@BattleSetW:
  00221	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00226	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0022a	74 10		 je	 SHORT $LN275@BattleSetW
  0022c	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00230	7e 0a		 jle	 SHORT $LN275@BattleSetW
  00232	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN275@BattleSetW:
  0023c	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  00241	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00245	74 10		 je	 SHORT $LN277@BattleSetW
  00247	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0024b	7e 0a		 jle	 SHORT $LN277@BattleSetW
  0024d	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN277@BattleSetW:
  00257	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  0025c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00260	0f 84 18 fe ff
	ff		 je	 $LN300@BattleSetW
  00266	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0026a	0f 8e 0e fe ff
	ff		 jle	 $LN300@BattleSetW
  00270	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
  0027a	e9 ff fd ff ff	 jmp	 $LN300@BattleSetW
$LN87@BattleSetW:
  0027f	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00284	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00288	74 10		 je	 SHORT $LN10@BattleSetW
  0028a	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0028e	7e 0a		 jle	 SHORT $LN10@BattleSetW
  00290	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN10@BattleSetW:
  0029a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  0029f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  002a3	74 10		 je	 SHORT $LN284@BattleSetW
  002a5	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  002a9	7e 0a		 jle	 SHORT $LN284@BattleSetW
  002ab	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN284@BattleSetW:
  002b5	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  002ba	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  002be	74 10		 je	 SHORT $LN286@BattleSetW
  002c0	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  002c4	7e 0a		 jle	 SHORT $LN286@BattleSetW
  002c6	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN286@BattleSetW:
  002d0	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  002d5	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  002d9	74 10		 je	 SHORT $LN288@BattleSetW
  002db	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  002df	7e 0a		 jle	 SHORT $LN288@BattleSetW
  002e1	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN288@BattleSetW:
  002eb	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  002f0	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  002f4	74 10		 je	 SHORT $LN290@BattleSetW
  002f6	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  002fa	7e 0a		 jle	 SHORT $LN290@BattleSetW
  002fc	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN290@BattleSetW:
  00306	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  0030b	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0030f	74 10		 je	 SHORT $LN292@BattleSetW
  00311	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00315	7e 0a		 jle	 SHORT $LN292@BattleSetW
  00317	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN292@BattleSetW:
  00321	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00326	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0032a	74 10		 je	 SHORT $LN294@BattleSetW
  0032c	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00330	7e 0a		 jle	 SHORT $LN294@BattleSetW
  00332	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN294@BattleSetW:
  0033c	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00341	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00345	74 10		 je	 SHORT $LN296@BattleSetW
  00347	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0034b	7e 0a		 jle	 SHORT $LN296@BattleSetW
  0034d	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN296@BattleSetW:
  00357	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  0035c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00360	74 10		 je	 SHORT $LN298@BattleSetW
  00362	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00366	7e 0a		 jle	 SHORT $LN298@BattleSetW
  00368	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
$LN298@BattleSetW:
  00372	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  00377	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0037b	0f 84 fd fc ff
	ff		 je	 $LN300@BattleSetW
  00381	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00385	0f 8e f3 fc ff
	ff		 jle	 $LN300@BattleSetW
  0038b	81 88 a4 00 00
	00 00 40 00 00	 or	 DWORD PTR [eax+164], 16384 ; 00004000H
  00395	e9 e4 fc ff ff	 jmp	 $LN300@BattleSetW
$LN95@BattleSetW:

; 2126 : 			// ???????
; 2127 : 			for( i = 0 ; i < 10 ; i++ ){
; 2128 : 				// ??????????
; 2129 : 				if( p_party[ i ]->func == NULL ) continue;
; 2130 : 				// ??????
; 2131 : 				if( p_party[ i ]->hp <= 0 ) continue;
; 2132 : 				// ?????????
; 2133 : 				p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 2134 : 			}
; 2135 : 		}
; 2136 : 		// ????????
; 2137 : 		else{
; 2138 : 			// ???????
; 2139 : 			for( i = 10 ; i < 20 ; i++ ){
; 2140 : 				// ??????????
; 2141 : 				if( p_party[ i ]->func == NULL ) continue;
; 2142 : 				// ??????
; 2143 : 				if( p_party[ i ]->hp <= 0 ) continue;
; 2144 : 				// ?????????
; 2145 : 				p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 2146 : 			}
; 2147 : 		}
; 2148 : //		if ( typeflag == 0 )
; 2149 : 			battleTargetSelectFlag = TRUE;
; 2150 : 		DeathAction( pActWnd );
; 2151 : 		pActWnd = NULL;
; 2152 : 		ClearBattleButton();
; 2153 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2154 : 		if ( typeflag == 1 )
; 2155 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2156 : 		else
; 2157 : #endif
; 2158 : 		BattleCmdNo = BATTLE_WAZA;
; 2159 : 		play_se( 217, 320, 240 );
; 2160 : 		battleWazaTargetBak = no;
; 2161 : 		break;
; 2162 : 		
; 2163 : 	case PETSKILL_TARGET_ALLOTHERSIDE:	// ?
; 2164 : 		// ????????
; 2165 : 		if( BattleMyNo >= 10 ){

  0039a	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  003a1	0f 8d bd fd ff
	ff		 jge	 $LN554@BattleSetW

; 2166 : 			// ???????
; 2167 : 			for( i = 0 ; i < 10 ; i++ ){
; 2168 : 				// ??????????
; 2169 : 				if( p_party[ i ]->func == NULL ) continue;
; 2170 : 				// ??????
; 2171 : 				if( p_party[ i ]->hp <= 0 ) continue;
; 2172 : 				// ?????????
; 2173 : 				p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;
; 2174 : 			}
; 2175 : 		}
; 2176 : 		// ????????
; 2177 : 		else{
; 2178 : 			// ???????
; 2179 : 			for( i = 10 ; i < 20 ; i++ ){
; 2180 : 				// ??????????
; 2181 : 				if( p_party[ i ]->func == NULL ) continue;
; 2182 : 				// ??????
; 2183 : 				if( p_party[ i ]->hp <= 0 ) continue;
; 2184 : 				// ?????????
; 2185 : 				p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL2;
; 2186 : 			}
; 2187 : 		}
; 2188 : //		if ( typeflag == 0 )
; 2189 : 			battleTargetSelectFlag = TRUE;
; 2190 : 		// ???????????
; 2191 : 		DeathAction( pActWnd );
; 2192 : 		pActWnd = NULL;
; 2193 : 		// ?????????
; 2194 : 		ClearBattleButton();
; 2195 : 		// ?????
; 2196 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2197 : 		if ( typeflag == 1 )
; 2198 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2199 : 		else
; 2200 : #endif
; 2201 : 
; 2202 : 		BattleCmdNo = BATTLE_WAZA;
; 2203 : 		// ?????
; 2204 : 		play_se( 217, 320, 240 );
; 2205 : 		// ????????
; 2206 : 		battleWazaTargetBak = no;
; 2207 : 		break;

  003a7	e9 d3 fe ff ff	 jmp	 $LN87@BattleSetW
$LN104@BattleSetW:

; 2208 : 		
; 2209 : 	case PETSKILL_TARGET_ALL:	// ?
; 2210 : 		// ???????
; 2211 : 		for( i = 0 ; i < 20 ; i++ ){

  003ac	b9 00 00 00 00	 mov	 ecx, OFFSET ?p_party@@3PAPAUaction@@A
$LL21@BattleSetW:

; 2212 : 			// ??????????
; 2213 : 			if( p_party[ i ]->func == NULL ) continue;

  003b1	8b 01		 mov	 eax, DWORD PTR [ecx]
  003b3	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  003b7	74 10		 je	 SHORT $LN19@BattleSetW

; 2214 : 			// ??????
; 2215 : 			if( p_party[ i ]->hp <= 0 ) continue;

  003b9	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  003bd	7e 0a		 jle	 SHORT $LN19@BattleSetW

; 2216 : 			// ?????????
; 2217 : 			p_party[ i ]->atr |= ACT_ATR_HIT_BOX_ALL1;

  003bf	81 88 a4 00 00
	00 00 20 00 00	 or	 DWORD PTR [eax+164], 8192 ; 00002000H
$LN19@BattleSetW:

; 2208 : 		
; 2209 : 	case PETSKILL_TARGET_ALL:	// ?
; 2210 : 		// ???????
; 2211 : 		for( i = 0 ; i < 20 ; i++ ){

  003c9	83 c1 04	 add	 ecx, 4
  003cc	81 f9 50 00 00
	00		 cmp	 ecx, OFFSET ?p_party@@3PAPAUaction@@A+80
  003d2	7c dd		 jl	 SHORT $LL21@BattleSetW

; 2218 : 		}
; 2219 : //		if ( typeflag == 0 )
; 2220 : 			battleTargetSelectFlag = TRUE;
; 2221 : 		DeathAction( pActWnd );
; 2222 : 		pActWnd = NULL;
; 2223 : 		// ?????????
; 2224 : 		ClearBattleButton();
; 2225 : 		// ?????
; 2226 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2227 : 		if ( typeflag == 1 )
; 2228 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2229 : 		else
; 2230 : #endif
; 2231 : 
; 2232 : 		BattleCmdNo = BATTLE_WAZA;
; 2233 : 		// ?????
; 2234 : 		play_se( 217, 320, 240 );
; 2235 : 		// ????????
; 2236 : 		battleWazaTargetBak = no;
; 2237 : 		break;

  003d4	e9 a5 fc ff ff	 jmp	 $LN300@BattleSetW
$LN109@BattleSetW:

; 2238 : 		
; 2239 : 	case PETSKILL_TARGET_NONE:	// ?????????
; 2240 : 		BattleButtonOff(); // ????????????

  003d9	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 2241 : 		battleMenuReturn = TRUE;

  003de	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1

; 2242 : 		// ???
; 2243 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2244 : 		if ( typeflag == 1 ) 

  003e8	83 fe 01	 cmp	 esi, 1
  003eb	75 56		 jne	 SHORT $LN110@BattleSetW

; 2245 : 			sprintf( moji,"P|%X|%X", prouseskill, BattleMyNo );

  003ed	ff 35 00 00 00
	00		 push	 DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  003f3	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  003f9	ff 35 00 00 00
	00		 push	 DWORD PTR ?prouseskill@@3HA ; prouseskill
  003ff	68 00 00 00 00	 push	 OFFSET ??_C@_07NGDMDFPD@P?$HM?$CFX?$HM?$CFX@
  00404	50		 push	 eax
  00405	e8 00 00 00 00	 call	 _sprintf
  0040a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00410	50		 push	 eax
  00411	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00417	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  0041c	68 f0 00 00 00	 push	 240			; 000000f0H
  00421	68 40 01 00 00	 push	 320			; 00000140H
  00426	68 cb 00 00 00	 push	 203			; 000000cbH
  0042b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00430	83 c4 24	 add	 esp, 36			; 00000024H
  00433	5e		 pop	 esi

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  00434	5b		 pop	 ebx
  00435	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00438	33 cd		 xor	 ecx, ebp
  0043a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0043f	8b e5		 mov	 esp, ebp
  00441	5d		 pop	 ebp
  00442	c3		 ret	 0
$LN110@BattleSetW:

; 2246 : 		else
; 2247 : #endif
; 2248 : 		sprintf( moji,"W|%X|%X", BattleWazaNo, BattleMyNo + 5 );

  00443	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00448	83 c0 05	 add	 eax, 5
  0044b	50		 push	 eax
  0044c	ff 35 00 00 00
	00		 push	 DWORD PTR ?BattleWazaNo@@3HA ; BattleWazaNo
  00452	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00458	68 00 00 00 00	 push	 OFFSET ??_C@_07NMPJDMOK@W?$HM?$CFX?$HM?$CFX@
  0045d	50		 push	 eax
  0045e	e8 00 00 00 00	 call	 _sprintf

; 2249 : 		// ??
; 2250 : 		lssproto_B_send( sockfd, moji );

  00463	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00469	50		 push	 eax
  0046a	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00470	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send

; 2251 : 
; 2252 : 		// ????????
; 2253 : 		play_se( 203, 320, 240 );

  00475	68 f0 00 00 00	 push	 240			; 000000f0H
  0047a	68 40 01 00 00	 push	 320			; 00000140H
  0047f	68 cb 00 00 00	 push	 203			; 000000cbH
  00484	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00489	83 c4 24	 add	 esp, 36			; 00000024H

; 2254 : 		//andy_add
; 2255 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2256 : 		if ( typeflag == 0 ){

  0048c	85 f6		 test	 esi, esi
  0048e	0f 85 05 10 00
	00		 jne	 $LN188@BattleSetW

; 2257 : 			battleWazaTargetBak = -1;
; 2258 : 			battleTargetSelectFlag = FALSE;

  00494	89 35 00 00 00
	00		 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, esi
  0049a	5e		 pop	 esi
  0049b	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  004a5	5b		 pop	 ebx
  004a6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  004a9	33 cd		 xor	 ecx, ebp
  004ab	e8 00 00 00 00	 call	 @__security_check_cookie@4
  004b0	8b e5		 mov	 esp, ebp
  004b2	5d		 pop	 ebp
  004b3	c3		 ret	 0
$LN113@BattleSetW:

; 2259 : 		}
; 2260 : #endif
; 2261 : 		break;
; 2262 : 		
; 2263 : 	case PETSKILL_TARGET_OTHERWITHOUTMYSELF:	// ??????) 
; 2264 : 		// ???????
; 2265 : 		for( i = 0 ; i < 20 ; i++ ){

  004b4	33 c9		 xor	 ecx, ecx
  004b6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL24@BattleSetW:

; 2266 : 			// ??????????
; 2267 : 			if( p_party[ i ]->func == NULL ) continue;

  004c0	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  004c7	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  004cb	74 19		 je	 SHORT $LN22@BattleSetW

; 2268 : 			// ????????
; 2269 : 			if( i == BattleMyNo + 5 ) continue;

  004cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  004d2	83 c0 05	 add	 eax, 5
  004d5	3b c8		 cmp	 ecx, eax
  004d7	74 0d		 je	 SHORT $LN22@BattleSetW

; 2270 : 			// ??????
; 2271 : 			if( p_party[ i ]->hp <= 0 ) continue;

  004d9	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  004dd	7e 07		 jle	 SHORT $LN22@BattleSetW

; 2272 : 			// ?????????
; 2273 : 			p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  004df	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
$LN22@BattleSetW:

; 2259 : 		}
; 2260 : #endif
; 2261 : 		break;
; 2262 : 		
; 2263 : 	case PETSKILL_TARGET_OTHERWITHOUTMYSELF:	// ??????) 
; 2264 : 		// ???????
; 2265 : 		for( i = 0 ; i < 20 ; i++ ){

  004e6	41		 inc	 ecx
  004e7	83 f9 14	 cmp	 ecx, 20			; 00000014H
  004ea	7c d4		 jl	 SHORT $LL24@BattleSetW

; 2274 : 		}
; 2275 : //		if ( typeflag == 0 )
; 2276 : 			battleTargetSelectFlag = TRUE;
; 2277 : 		DeathAction( pActWnd );
; 2278 : 		pActWnd = NULL;
; 2279 : 		ClearBattleButton();
; 2280 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2281 : 		if ( typeflag == 1 )
; 2282 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2283 : 		else
; 2284 : #endif
; 2285 : 
; 2286 : 		BattleCmdNo = BATTLE_WAZA;
; 2287 : 		// ?????
; 2288 : 		play_se( 217, 320, 240 );
; 2289 : 		// ????????
; 2290 : 		battleWazaTargetBak = no;
; 2291 : 		break;

  004ec	e9 8d fb ff ff	 jmp	 $LN300@BattleSetW
$LN119@BattleSetW:
  004f1	57		 push	 edi

; 2292 : 		
; 2293 : 	case PETSKILL_TARGET_WITHOUTMYSELFANDPET:	// ?????? 
; 2294 : 		// ???????
; 2295 : 		for( i = 0 ; i < 20 ; i++ ){

  004f2	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  004f8	33 c9		 xor	 ecx, ecx
  004fa	66 0f 1f 44 00
	00		 npad	 6
$LL27@BattleSetW:

; 2296 : 			// ??????????
; 2297 : 			if( p_party[ i ]->func == NULL ) continue;

  00500	8b 14 8d 00 00
	00 00		 mov	 edx, DWORD PTR ?p_party@@3PAPAUaction@@A[ecx*4]
  00507	83 7a 08 00	 cmp	 DWORD PTR [edx+8], 0
  0050b	74 1e		 je	 SHORT $LN25@BattleSetW

; 2298 : 			// ????????
; 2299 : 			if( i == BattleMyNo + 5 ) continue;

  0050d	8d 47 05	 lea	 eax, DWORD PTR [edi+5]
  00510	3b c8		 cmp	 ecx, eax
  00512	74 17		 je	 SHORT $LN25@BattleSetW

; 2300 : 			// ????
; 2301 : 			if( i == BattleMyNo ) continue;

  00514	3b cf		 cmp	 ecx, edi
  00516	74 13		 je	 SHORT $LN25@BattleSetW

; 2302 : 			// ??????
; 2303 : 			if( p_party[ i ]->hp <= 0 ) continue;

  00518	83 7a 78 00	 cmp	 DWORD PTR [edx+120], 0
  0051c	7e 0d		 jle	 SHORT $LN25@BattleSetW

; 2304 : 			// ?????????
; 2305 : 			p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  0051e	83 8a a4 00 00
	00 08		 or	 DWORD PTR [edx+164], 8
  00525	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
$LN25@BattleSetW:

; 2292 : 		
; 2293 : 	case PETSKILL_TARGET_WITHOUTMYSELFANDPET:	// ?????? 
; 2294 : 		// ???????
; 2295 : 		for( i = 0 ; i < 20 ; i++ ){

  0052b	41		 inc	 ecx
  0052c	83 f9 14	 cmp	 ecx, 20			; 00000014H
  0052f	7c cf		 jl	 SHORT $LL27@BattleSetW

; 2306 : 		}
; 2307 : //		if ( typeflag == 0 )
; 2308 : 			battleTargetSelectFlag = TRUE;
; 2309 : 		// ???????????
; 2310 : 		DeathAction( pActWnd );

  00531	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  00537	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 2311 : 		pActWnd = NULL;

  0053c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0

; 2312 : 		// ?????????
; 2313 : 		ClearBattleButton();

  00546	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 2314 : 		// ?????
; 2315 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2316 : 		if ( typeflag == 1 )
; 2317 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2318 : 		else
; 2319 : #endif
; 2320 : 		BattleCmdNo = BATTLE_WAZA;
; 2321 : 		// ?????
; 2322 : 		play_se( 217, 320, 240 );

  0054b	4e		 dec	 esi
  0054c	f7 de		 neg	 esi
  0054e	68 f0 00 00 00	 push	 240			; 000000f0H
  00553	1b f6		 sbb	 esi, esi
  00555	68 40 01 00 00	 push	 320			; 00000140H
  0055a	83 c6 05	 add	 esi, 5
  0055d	68 d9 00 00 00	 push	 217			; 000000d9H
  00562	89 35 00 00 00
	00		 mov	 DWORD PTR ?BattleCmdNo@@3HA, esi ; BattleCmdNo
  00568	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0056d	83 c4 10	 add	 esp, 16			; 00000010H

; 2323 : 		// ????????
; 2324 : 		battleWazaTargetBak = no;

  00570	89 1d 00 00 00
	00		 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, ebx ; battleWazaTargetBak
  00576	5f		 pop	 edi
  00577	5e		 pop	 esi

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  00578	5b		 pop	 ebx
  00579	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0057c	33 cd		 xor	 ecx, ebp
  0057e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00583	8b e5		 mov	 esp, ebp
  00585	5d		 pop	 ebp
  00586	c3		 ret	 0
$LN126@BattleSetW:

; 2325 : 		break;
; 2326 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2327 : 	case PETSKILL_TARGET_ONE_ROW:
; 2328 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2329 : 			if( p_party[i]->func == NULL )	continue;

  00587	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  0058c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00590	74 20		 je	 SHORT $LN28@BattleSetW

; 2330 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2331 : 			if( p_party[i]->hp <= 0 ) continue;

  00592	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00596	7e 1a		 jle	 SHORT $LN28@BattleSetW

; 2332 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00598	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0059e	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  005a4	75 0c		 jne	 SHORT $LN28@BattleSetW

; 2333 : 			// 右下第二列
; 2334 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  005a6	81 c9 00 00 20
	00		 or	 ecx, 2097152		; 00200000H
  005ac	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN28@BattleSetW:

; 2325 : 		break;
; 2326 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2327 : 	case PETSKILL_TARGET_ONE_ROW:
; 2328 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2329 : 			if( p_party[i]->func == NULL )	continue;

  005b2	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  005b7	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  005bb	74 20		 je	 SHORT $LN347@BattleSetW

; 2330 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2331 : 			if( p_party[i]->hp <= 0 ) continue;

  005bd	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  005c1	7e 1a		 jle	 SHORT $LN347@BattleSetW

; 2332 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  005c3	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  005c9	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  005cf	75 0c		 jne	 SHORT $LN347@BattleSetW

; 2333 : 			// 右下第二列
; 2334 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  005d1	81 c9 00 00 20
	00		 or	 ecx, 2097152		; 00200000H
  005d7	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN347@BattleSetW:

; 2325 : 		break;
; 2326 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2327 : 	case PETSKILL_TARGET_ONE_ROW:
; 2328 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2329 : 			if( p_party[i]->func == NULL )	continue;

  005dd	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  005e2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  005e6	74 20		 je	 SHORT $LN349@BattleSetW

; 2330 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2331 : 			if( p_party[i]->hp <= 0 ) continue;

  005e8	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  005ec	7e 1a		 jle	 SHORT $LN349@BattleSetW

; 2332 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  005ee	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  005f4	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  005fa	75 0c		 jne	 SHORT $LN349@BattleSetW

; 2333 : 			// 右下第二列
; 2334 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  005fc	81 c9 00 00 20
	00		 or	 ecx, 2097152		; 00200000H
  00602	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN349@BattleSetW:

; 2325 : 		break;
; 2326 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2327 : 	case PETSKILL_TARGET_ONE_ROW:
; 2328 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2329 : 			if( p_party[i]->func == NULL )	continue;

  00608	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  0060d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00611	74 20		 je	 SHORT $LN351@BattleSetW

; 2330 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2331 : 			if( p_party[i]->hp <= 0 ) continue;

  00613	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00617	7e 1a		 jle	 SHORT $LN351@BattleSetW

; 2332 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00619	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0061f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00625	75 0c		 jne	 SHORT $LN351@BattleSetW

; 2333 : 			// 右下第二列
; 2334 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  00627	81 c9 00 00 20
	00		 or	 ecx, 2097152		; 00200000H
  0062d	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN351@BattleSetW:

; 2325 : 		break;
; 2326 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 2327 : 	case PETSKILL_TARGET_ONE_ROW:
; 2328 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2329 : 			if( p_party[i]->func == NULL )	continue;

  00633	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  00638	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0063c	74 20		 je	 SHORT $LN353@BattleSetW

; 2330 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2331 : 			if( p_party[i]->hp <= 0 ) continue;

  0063e	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00642	7e 1a		 jle	 SHORT $LN353@BattleSetW

; 2332 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00644	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0064a	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00650	75 0c		 jne	 SHORT $LN353@BattleSetW

; 2333 : 			// 右下第二列
; 2334 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL4;

  00652	81 c9 00 00 20
	00		 or	 ecx, 2097152		; 00200000H
  00658	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN353@BattleSetW:

; 2335 : 		}
; 2336 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2337 : 			if( p_party[i]->func == NULL )	continue;

  0065e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00663	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00667	74 20		 je	 SHORT $LN31@BattleSetW

; 2338 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2339 : 			if( p_party[i]->hp <= 0 ) continue;

  00669	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0066d	7e 1a		 jle	 SHORT $LN31@BattleSetW

; 2340 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0066f	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00675	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0067b	75 0c		 jne	 SHORT $LN31@BattleSetW

; 2341 : 			// 右下第一列
; 2342 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  0067d	81 c9 00 00 10
	00		 or	 ecx, 1048576		; 00100000H
  00683	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN31@BattleSetW:

; 2335 : 		}
; 2336 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2337 : 			if( p_party[i]->func == NULL )	continue;

  00689	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  0068e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00692	74 20		 je	 SHORT $LN358@BattleSetW

; 2338 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2339 : 			if( p_party[i]->hp <= 0 ) continue;

  00694	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00698	7e 1a		 jle	 SHORT $LN358@BattleSetW

; 2340 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0069a	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  006a0	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  006a6	75 0c		 jne	 SHORT $LN358@BattleSetW

; 2341 : 			// 右下第一列
; 2342 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  006a8	81 c9 00 00 10
	00		 or	 ecx, 1048576		; 00100000H
  006ae	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN358@BattleSetW:

; 2335 : 		}
; 2336 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2337 : 			if( p_party[i]->func == NULL )	continue;

  006b4	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  006b9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  006bd	74 20		 je	 SHORT $LN360@BattleSetW

; 2338 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2339 : 			if( p_party[i]->hp <= 0 ) continue;

  006bf	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  006c3	7e 1a		 jle	 SHORT $LN360@BattleSetW

; 2340 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  006c5	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  006cb	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  006d1	75 0c		 jne	 SHORT $LN360@BattleSetW

; 2341 : 			// 右下第一列
; 2342 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  006d3	81 c9 00 00 10
	00		 or	 ecx, 1048576		; 00100000H
  006d9	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN360@BattleSetW:

; 2335 : 		}
; 2336 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2337 : 			if( p_party[i]->func == NULL )	continue;

  006df	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  006e4	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  006e8	74 20		 je	 SHORT $LN362@BattleSetW

; 2338 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2339 : 			if( p_party[i]->hp <= 0 ) continue;

  006ea	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  006ee	7e 1a		 jle	 SHORT $LN362@BattleSetW

; 2340 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  006f0	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  006f6	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  006fc	75 0c		 jne	 SHORT $LN362@BattleSetW

; 2341 : 			// 右下第一列
; 2342 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  006fe	81 c9 00 00 10
	00		 or	 ecx, 1048576		; 00100000H
  00704	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN362@BattleSetW:

; 2335 : 		}
; 2336 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2337 : 			if( p_party[i]->func == NULL )	continue;

  0070a	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  0070f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00713	74 20		 je	 SHORT $LN364@BattleSetW

; 2338 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2339 : 			if( p_party[i]->hp <= 0 ) continue;

  00715	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00719	7e 1a		 jle	 SHORT $LN364@BattleSetW

; 2340 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0071b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00721	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00727	75 0c		 jne	 SHORT $LN364@BattleSetW

; 2341 : 			// 右下第一列
; 2342 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL3;

  00729	81 c9 00 00 10
	00		 or	 ecx, 1048576		; 00100000H
  0072f	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN364@BattleSetW:

; 2343 : 		}
; 2344 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2345 : 			if( p_party[i]->func == NULL )	continue;

  00735	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  0073a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0073e	74 20		 je	 SHORT $LN34@BattleSetW

; 2346 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2347 : 			if( p_party[i]->hp <= 0 ) continue;

  00740	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00744	7e 1a		 jle	 SHORT $LN34@BattleSetW

; 2348 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00746	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0074c	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00752	75 0c		 jne	 SHORT $LN34@BattleSetW

; 2349 : 			// 左上第一列
; 2350 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  00754	81 c9 00 00 04
	00		 or	 ecx, 262144		; 00040000H
  0075a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN34@BattleSetW:

; 2343 : 		}
; 2344 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2345 : 			if( p_party[i]->func == NULL )	continue;

  00760	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00765	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00769	74 20		 je	 SHORT $LN369@BattleSetW

; 2346 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2347 : 			if( p_party[i]->hp <= 0 ) continue;

  0076b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0076f	7e 1a		 jle	 SHORT $LN369@BattleSetW

; 2348 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00771	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00777	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0077d	75 0c		 jne	 SHORT $LN369@BattleSetW

; 2349 : 			// 左上第一列
; 2350 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  0077f	81 c9 00 00 04
	00		 or	 ecx, 262144		; 00040000H
  00785	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN369@BattleSetW:

; 2343 : 		}
; 2344 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2345 : 			if( p_party[i]->func == NULL )	continue;

  0078b	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00790	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00794	74 20		 je	 SHORT $LN371@BattleSetW

; 2346 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2347 : 			if( p_party[i]->hp <= 0 ) continue;

  00796	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0079a	7e 1a		 jle	 SHORT $LN371@BattleSetW

; 2348 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  0079c	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007a2	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  007a8	75 0c		 jne	 SHORT $LN371@BattleSetW

; 2349 : 			// 左上第一列
; 2350 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  007aa	81 c9 00 00 04
	00		 or	 ecx, 262144		; 00040000H
  007b0	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN371@BattleSetW:

; 2343 : 		}
; 2344 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2345 : 			if( p_party[i]->func == NULL )	continue;

  007b6	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  007bb	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  007bf	74 20		 je	 SHORT $LN373@BattleSetW

; 2346 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2347 : 			if( p_party[i]->hp <= 0 ) continue;

  007c1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  007c5	7e 1a		 jle	 SHORT $LN373@BattleSetW

; 2348 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  007c7	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007cd	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  007d3	75 0c		 jne	 SHORT $LN373@BattleSetW

; 2349 : 			// 左上第一列
; 2350 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  007d5	81 c9 00 00 04
	00		 or	 ecx, 262144		; 00040000H
  007db	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN373@BattleSetW:

; 2343 : 		}
; 2344 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2345 : 			if( p_party[i]->func == NULL )	continue;

  007e1	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  007e6	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  007ea	74 20		 je	 SHORT $LN375@BattleSetW

; 2346 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2347 : 			if( p_party[i]->hp <= 0 ) continue;

  007ec	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  007f0	7e 1a		 jle	 SHORT $LN375@BattleSetW

; 2348 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  007f2	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  007f8	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  007fe	75 0c		 jne	 SHORT $LN375@BattleSetW

; 2349 : 			// 左上第一列
; 2350 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL1;

  00800	81 c9 00 00 04
	00		 or	 ecx, 262144		; 00040000H
  00806	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN375@BattleSetW:

; 2351 : 		}
; 2352 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2353 : 			if( p_party[i]->func == NULL ) continue;

  0080c	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00811	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00815	74 20		 je	 SHORT $LN37@BattleSetW

; 2354 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2355 : 			if( p_party[i]->hp <= 0 ) continue;

  00817	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0081b	7e 1a		 jle	 SHORT $LN37@BattleSetW

; 2356 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0081d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00823	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00829	75 0c		 jne	 SHORT $LN37@BattleSetW

; 2357 : 			// 左上第二列
; 2358 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  0082b	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
  00831	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN37@BattleSetW:

; 2351 : 		}
; 2352 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2353 : 			if( p_party[i]->func == NULL ) continue;

  00837	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  0083c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00840	74 20		 je	 SHORT $LN380@BattleSetW

; 2354 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2355 : 			if( p_party[i]->hp <= 0 ) continue;

  00842	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00846	7e 1a		 jle	 SHORT $LN380@BattleSetW

; 2356 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00848	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0084e	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00854	75 0c		 jne	 SHORT $LN380@BattleSetW

; 2357 : 			// 左上第二列
; 2358 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  00856	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
  0085c	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN380@BattleSetW:

; 2351 : 		}
; 2352 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2353 : 			if( p_party[i]->func == NULL ) continue;

  00862	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00867	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0086b	74 20		 je	 SHORT $LN382@BattleSetW

; 2354 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2355 : 			if( p_party[i]->hp <= 0 ) continue;

  0086d	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00871	7e 1a		 jle	 SHORT $LN382@BattleSetW

; 2356 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00873	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00879	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0087f	75 0c		 jne	 SHORT $LN382@BattleSetW

; 2357 : 			// 左上第二列
; 2358 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  00881	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
  00887	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN382@BattleSetW:

; 2351 : 		}
; 2352 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2353 : 			if( p_party[i]->func == NULL ) continue;

  0088d	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  00892	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00896	74 20		 je	 SHORT $LN384@BattleSetW

; 2354 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2355 : 			if( p_party[i]->hp <= 0 ) continue;

  00898	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0089c	7e 1a		 jle	 SHORT $LN384@BattleSetW

; 2356 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0089e	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  008a4	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  008aa	75 0c		 jne	 SHORT $LN384@BattleSetW

; 2357 : 			// 左上第二列
; 2358 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  008ac	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
  008b2	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN384@BattleSetW:

; 2351 : 		}
; 2352 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2353 : 			if( p_party[i]->func == NULL ) continue;

  008b8	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  008bd	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  008c1	74 20		 je	 SHORT $LN386@BattleSetW

; 2354 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2355 : 			if( p_party[i]->hp <= 0 ) continue;

  008c3	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  008c7	7e 1a		 jle	 SHORT $LN386@BattleSetW

; 2356 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  008c9	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  008cf	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  008d5	75 0c		 jne	 SHORT $LN386@BattleSetW

; 2357 : 			// 左上第二列
; 2358 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL2;

  008d7	81 c9 00 00 08
	00		 or	 ecx, 524288		; 00080000H
$LN527@BattleSetW:

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  008dd	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN386@BattleSetW:
  008e3	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  008e9	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  008ee	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  008f8	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
  008fd	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  00900	f7 d8		 neg	 eax
  00902	68 f0 00 00 00	 push	 240			; 000000f0H
  00907	1b c0		 sbb	 eax, eax
  00909	83 c0 05	 add	 eax, 5
  0090c	68 40 01 00 00	 push	 320			; 00000140H
  00911	68 d9 00 00 00	 push	 217			; 000000d9H
  00916	a3 00 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, eax ; BattleCmdNo
  0091b	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  00920	83 c4 10	 add	 esp, 16			; 00000010H
  00923	83 fe 01	 cmp	 esi, 1
  00926	0f 84 6d 0b 00
	00		 je	 $LN188@BattleSetW
  0092c	e9 8c f7 ff ff	 jmp	 $LN524@BattleSetW
$LN142@BattleSetW:

; 2359 : 		}
; 2360 : //		if ( typeflag == 0 )
; 2361 : 			battleTargetSelectFlag = TRUE;
; 2362 : 
; 2363 : 		DeathAction( pActWnd );
; 2364 : 		pActWnd = NULL;
; 2365 : 
; 2366 : 		ClearBattleButton();
; 2367 : 
; 2368 : 		if ( typeflag == 1 )
; 2369 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2370 : 		else
; 2371 : 			BattleCmdNo = BATTLE_WAZA;
; 2372 : 		
; 2373 : 		play_se( 217, 320, 240 );
; 2374 : 
; 2375 : 		if ( typeflag != 1 )
; 2376 : 			battleWazaTargetBak = no;
; 2377 : 
; 2378 : 		break;
; 2379 : #ifdef _SKILL_ADDBARRIER
; 2380 : 	case PETSKILL_TARGET_ONE_ROW_ALL:
; 2381 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2382 : 			if( p_party[i]->func == NULL )	continue;

  00931	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00936	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0093a	74 20		 je	 SHORT $LN40@BattleSetW

; 2383 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2384 : 			if( p_party[i]->hp <= 0 ) continue;

  0093c	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00940	7e 1a		 jle	 SHORT $LN40@BattleSetW

; 2385 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00942	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00948	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0094e	75 0c		 jne	 SHORT $LN40@BattleSetW

; 2386 : 			// 右下第二列
; 2387 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL8;

  00950	81 c9 00 00 00
	02		 or	 ecx, 33554432		; 02000000H
  00956	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN40@BattleSetW:

; 2359 : 		}
; 2360 : //		if ( typeflag == 0 )
; 2361 : 			battleTargetSelectFlag = TRUE;
; 2362 : 
; 2363 : 		DeathAction( pActWnd );
; 2364 : 		pActWnd = NULL;
; 2365 : 
; 2366 : 		ClearBattleButton();
; 2367 : 
; 2368 : 		if ( typeflag == 1 )
; 2369 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2370 : 		else
; 2371 : 			BattleCmdNo = BATTLE_WAZA;
; 2372 : 		
; 2373 : 		play_se( 217, 320, 240 );
; 2374 : 
; 2375 : 		if ( typeflag != 1 )
; 2376 : 			battleWazaTargetBak = no;
; 2377 : 
; 2378 : 		break;
; 2379 : #ifdef _SKILL_ADDBARRIER
; 2380 : 	case PETSKILL_TARGET_ONE_ROW_ALL:
; 2381 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2382 : 			if( p_party[i]->func == NULL )	continue;

  0095c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00961	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00965	74 20		 je	 SHORT $LN391@BattleSetW

; 2383 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2384 : 			if( p_party[i]->hp <= 0 ) continue;

  00967	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0096b	7e 1a		 jle	 SHORT $LN391@BattleSetW

; 2385 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  0096d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00973	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00979	75 0c		 jne	 SHORT $LN391@BattleSetW

; 2386 : 			// 右下第二列
; 2387 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL8;

  0097b	81 c9 00 00 00
	02		 or	 ecx, 33554432		; 02000000H
  00981	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN391@BattleSetW:

; 2359 : 		}
; 2360 : //		if ( typeflag == 0 )
; 2361 : 			battleTargetSelectFlag = TRUE;
; 2362 : 
; 2363 : 		DeathAction( pActWnd );
; 2364 : 		pActWnd = NULL;
; 2365 : 
; 2366 : 		ClearBattleButton();
; 2367 : 
; 2368 : 		if ( typeflag == 1 )
; 2369 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2370 : 		else
; 2371 : 			BattleCmdNo = BATTLE_WAZA;
; 2372 : 		
; 2373 : 		play_se( 217, 320, 240 );
; 2374 : 
; 2375 : 		if ( typeflag != 1 )
; 2376 : 			battleWazaTargetBak = no;
; 2377 : 
; 2378 : 		break;
; 2379 : #ifdef _SKILL_ADDBARRIER
; 2380 : 	case PETSKILL_TARGET_ONE_ROW_ALL:
; 2381 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2382 : 			if( p_party[i]->func == NULL )	continue;

  00987	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  0098c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00990	74 20		 je	 SHORT $LN393@BattleSetW

; 2383 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2384 : 			if( p_party[i]->hp <= 0 ) continue;

  00992	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00996	7e 1a		 jle	 SHORT $LN393@BattleSetW

; 2385 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00998	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0099e	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  009a4	75 0c		 jne	 SHORT $LN393@BattleSetW

; 2386 : 			// 右下第二列
; 2387 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL8;

  009a6	81 c9 00 00 00
	02		 or	 ecx, 33554432		; 02000000H
  009ac	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN393@BattleSetW:

; 2359 : 		}
; 2360 : //		if ( typeflag == 0 )
; 2361 : 			battleTargetSelectFlag = TRUE;
; 2362 : 
; 2363 : 		DeathAction( pActWnd );
; 2364 : 		pActWnd = NULL;
; 2365 : 
; 2366 : 		ClearBattleButton();
; 2367 : 
; 2368 : 		if ( typeflag == 1 )
; 2369 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2370 : 		else
; 2371 : 			BattleCmdNo = BATTLE_WAZA;
; 2372 : 		
; 2373 : 		play_se( 217, 320, 240 );
; 2374 : 
; 2375 : 		if ( typeflag != 1 )
; 2376 : 			battleWazaTargetBak = no;
; 2377 : 
; 2378 : 		break;
; 2379 : #ifdef _SKILL_ADDBARRIER
; 2380 : 	case PETSKILL_TARGET_ONE_ROW_ALL:
; 2381 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2382 : 			if( p_party[i]->func == NULL )	continue;

  009b2	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  009b7	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  009bb	74 20		 je	 SHORT $LN395@BattleSetW

; 2383 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2384 : 			if( p_party[i]->hp <= 0 ) continue;

  009bd	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  009c1	7e 1a		 jle	 SHORT $LN395@BattleSetW

; 2385 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  009c3	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  009c9	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  009cf	75 0c		 jne	 SHORT $LN395@BattleSetW

; 2386 : 			// 右下第二列
; 2387 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL8;

  009d1	81 c9 00 00 00
	02		 or	 ecx, 33554432		; 02000000H
  009d7	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN395@BattleSetW:

; 2359 : 		}
; 2360 : //		if ( typeflag == 0 )
; 2361 : 			battleTargetSelectFlag = TRUE;
; 2362 : 
; 2363 : 		DeathAction( pActWnd );
; 2364 : 		pActWnd = NULL;
; 2365 : 
; 2366 : 		ClearBattleButton();
; 2367 : 
; 2368 : 		if ( typeflag == 1 )
; 2369 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2370 : 		else
; 2371 : 			BattleCmdNo = BATTLE_WAZA;
; 2372 : 		
; 2373 : 		play_se( 217, 320, 240 );
; 2374 : 
; 2375 : 		if ( typeflag != 1 )
; 2376 : 			battleWazaTargetBak = no;
; 2377 : 
; 2378 : 		break;
; 2379 : #ifdef _SKILL_ADDBARRIER
; 2380 : 	case PETSKILL_TARGET_ONE_ROW_ALL:
; 2381 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2382 : 			if( p_party[i]->func == NULL )	continue;

  009dd	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  009e2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  009e6	74 20		 je	 SHORT $LN397@BattleSetW

; 2383 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2384 : 			if( p_party[i]->hp <= 0 ) continue;

  009e8	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  009ec	7e 1a		 jle	 SHORT $LN397@BattleSetW

; 2385 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  009ee	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  009f4	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  009fa	75 0c		 jne	 SHORT $LN397@BattleSetW

; 2386 : 			// 右下第二列
; 2387 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL8;

  009fc	81 c9 00 00 00
	02		 or	 ecx, 33554432		; 02000000H
  00a02	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN397@BattleSetW:

; 2388 : 		}
; 2389 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2390 : 			if( p_party[i]->func == NULL )	continue;

  00a08	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00a0d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00a11	74 20		 je	 SHORT $LN43@BattleSetW

; 2391 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2392 : 			if( p_party[i]->hp <= 0 ) continue;

  00a13	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00a17	7e 1a		 jle	 SHORT $LN43@BattleSetW

; 2393 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00a19	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00a1f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00a25	75 0c		 jne	 SHORT $LN43@BattleSetW

; 2394 : 			// 右下第一列
; 2395 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL7;

  00a27	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  00a2d	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN43@BattleSetW:

; 2388 : 		}
; 2389 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2390 : 			if( p_party[i]->func == NULL )	continue;

  00a33	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00a38	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00a3c	74 20		 je	 SHORT $LN402@BattleSetW

; 2391 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2392 : 			if( p_party[i]->hp <= 0 ) continue;

  00a3e	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00a42	7e 1a		 jle	 SHORT $LN402@BattleSetW

; 2393 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00a44	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00a4a	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00a50	75 0c		 jne	 SHORT $LN402@BattleSetW

; 2394 : 			// 右下第一列
; 2395 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL7;

  00a52	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  00a58	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN402@BattleSetW:

; 2388 : 		}
; 2389 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2390 : 			if( p_party[i]->func == NULL )	continue;

  00a5e	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00a63	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00a67	74 20		 je	 SHORT $LN404@BattleSetW

; 2391 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2392 : 			if( p_party[i]->hp <= 0 ) continue;

  00a69	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00a6d	7e 1a		 jle	 SHORT $LN404@BattleSetW

; 2393 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00a6f	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00a75	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00a7b	75 0c		 jne	 SHORT $LN404@BattleSetW

; 2394 : 			// 右下第一列
; 2395 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL7;

  00a7d	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  00a83	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN404@BattleSetW:

; 2388 : 		}
; 2389 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2390 : 			if( p_party[i]->func == NULL )	continue;

  00a89	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  00a8e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00a92	74 20		 je	 SHORT $LN406@BattleSetW

; 2391 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2392 : 			if( p_party[i]->hp <= 0 ) continue;

  00a94	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00a98	7e 1a		 jle	 SHORT $LN406@BattleSetW

; 2393 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00a9a	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00aa0	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00aa6	75 0c		 jne	 SHORT $LN406@BattleSetW

; 2394 : 			// 右下第一列
; 2395 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL7;

  00aa8	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  00aae	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN406@BattleSetW:

; 2388 : 		}
; 2389 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2390 : 			if( p_party[i]->func == NULL )	continue;

  00ab4	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  00ab9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00abd	74 20		 je	 SHORT $LN408@BattleSetW

; 2391 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2392 : 			if( p_party[i]->hp <= 0 ) continue;

  00abf	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00ac3	7e 1a		 jle	 SHORT $LN408@BattleSetW

; 2393 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00ac5	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00acb	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ad1	75 0c		 jne	 SHORT $LN408@BattleSetW

; 2394 : 			// 右下第一列
; 2395 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL7;

  00ad3	81 c9 00 00 00
	01		 or	 ecx, 16777216		; 01000000H
  00ad9	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN408@BattleSetW:

; 2396 : 		}
; 2397 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2398 : 			if( p_party[i]->func == NULL )	continue;

  00adf	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00ae4	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00ae8	74 20		 je	 SHORT $LN46@BattleSetW

; 2399 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2400 : 			if( p_party[i]->hp <= 0 ) continue;

  00aea	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00aee	7e 1a		 jle	 SHORT $LN46@BattleSetW

; 2401 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00af0	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00af6	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00afc	75 0c		 jne	 SHORT $LN46@BattleSetW

; 2402 : 			// 左上第一列
; 2403 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL5;

  00afe	81 c9 00 00 40
	00		 or	 ecx, 4194304		; 00400000H
  00b04	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN46@BattleSetW:

; 2396 : 		}
; 2397 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2398 : 			if( p_party[i]->func == NULL )	continue;

  00b0a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00b0f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00b13	74 20		 je	 SHORT $LN413@BattleSetW

; 2399 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2400 : 			if( p_party[i]->hp <= 0 ) continue;

  00b15	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00b19	7e 1a		 jle	 SHORT $LN413@BattleSetW

; 2401 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00b1b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00b21	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00b27	75 0c		 jne	 SHORT $LN413@BattleSetW

; 2402 : 			// 左上第一列
; 2403 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL5;

  00b29	81 c9 00 00 40
	00		 or	 ecx, 4194304		; 00400000H
  00b2f	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN413@BattleSetW:

; 2396 : 		}
; 2397 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2398 : 			if( p_party[i]->func == NULL )	continue;

  00b35	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00b3a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00b3e	74 20		 je	 SHORT $LN415@BattleSetW

; 2399 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2400 : 			if( p_party[i]->hp <= 0 ) continue;

  00b40	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00b44	7e 1a		 jle	 SHORT $LN415@BattleSetW

; 2401 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00b46	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00b4c	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00b52	75 0c		 jne	 SHORT $LN415@BattleSetW

; 2402 : 			// 左上第一列
; 2403 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL5;

  00b54	81 c9 00 00 40
	00		 or	 ecx, 4194304		; 00400000H
  00b5a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN415@BattleSetW:

; 2396 : 		}
; 2397 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2398 : 			if( p_party[i]->func == NULL )	continue;

  00b60	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  00b65	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00b69	74 20		 je	 SHORT $LN417@BattleSetW

; 2399 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2400 : 			if( p_party[i]->hp <= 0 ) continue;

  00b6b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00b6f	7e 1a		 jle	 SHORT $LN417@BattleSetW

; 2401 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00b71	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00b77	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00b7d	75 0c		 jne	 SHORT $LN417@BattleSetW

; 2402 : 			// 左上第一列
; 2403 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL5;

  00b7f	81 c9 00 00 40
	00		 or	 ecx, 4194304		; 00400000H
  00b85	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN417@BattleSetW:

; 2396 : 		}
; 2397 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2398 : 			if( p_party[i]->func == NULL )	continue;

  00b8b	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  00b90	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00b94	74 20		 je	 SHORT $LN419@BattleSetW

; 2399 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2400 : 			if( p_party[i]->hp <= 0 ) continue;

  00b96	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00b9a	7e 1a		 jle	 SHORT $LN419@BattleSetW

; 2401 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00b9c	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00ba2	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ba8	75 0c		 jne	 SHORT $LN419@BattleSetW

; 2402 : 			// 左上第一列
; 2403 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL5;

  00baa	81 c9 00 00 40
	00		 or	 ecx, 4194304		; 00400000H
  00bb0	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN419@BattleSetW:

; 2404 : 		}
; 2405 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2406 : 			if( p_party[i]->func == NULL ) continue;

  00bb6	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00bbb	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00bbf	74 20		 je	 SHORT $LN49@BattleSetW

; 2407 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2408 : 			if( p_party[i]->hp <= 0 ) continue;

  00bc1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00bc5	7e 1a		 jle	 SHORT $LN49@BattleSetW

; 2409 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00bc7	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00bcd	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00bd3	75 0c		 jne	 SHORT $LN49@BattleSetW

; 2410 : 			// 左上第二列
; 2411 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL6;

  00bd5	81 c9 00 00 80
	00		 or	 ecx, 8388608		; 00800000H
  00bdb	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN49@BattleSetW:

; 2404 : 		}
; 2405 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2406 : 			if( p_party[i]->func == NULL ) continue;

  00be1	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00be6	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00bea	74 20		 je	 SHORT $LN424@BattleSetW

; 2407 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2408 : 			if( p_party[i]->hp <= 0 ) continue;

  00bec	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00bf0	7e 1a		 jle	 SHORT $LN424@BattleSetW

; 2409 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00bf2	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00bf8	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00bfe	75 0c		 jne	 SHORT $LN424@BattleSetW

; 2410 : 			// 左上第二列
; 2411 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL6;

  00c00	81 c9 00 00 80
	00		 or	 ecx, 8388608		; 00800000H
  00c06	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN424@BattleSetW:

; 2404 : 		}
; 2405 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2406 : 			if( p_party[i]->func == NULL ) continue;

  00c0c	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00c11	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00c15	74 20		 je	 SHORT $LN426@BattleSetW

; 2407 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2408 : 			if( p_party[i]->hp <= 0 ) continue;

  00c17	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00c1b	7e 1a		 jle	 SHORT $LN426@BattleSetW

; 2409 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00c1d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00c23	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00c29	75 0c		 jne	 SHORT $LN426@BattleSetW

; 2410 : 			// 左上第二列
; 2411 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL6;

  00c2b	81 c9 00 00 80
	00		 or	 ecx, 8388608		; 00800000H
  00c31	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN426@BattleSetW:

; 2404 : 		}
; 2405 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2406 : 			if( p_party[i]->func == NULL ) continue;

  00c37	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  00c3c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00c40	74 20		 je	 SHORT $LN428@BattleSetW

; 2407 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2408 : 			if( p_party[i]->hp <= 0 ) continue;

  00c42	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00c46	7e 1a		 jle	 SHORT $LN428@BattleSetW

; 2409 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00c48	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00c4e	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00c54	75 0c		 jne	 SHORT $LN428@BattleSetW

; 2410 : 			// 左上第二列
; 2411 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL6;

  00c56	81 c9 00 00 80
	00		 or	 ecx, 8388608		; 00800000H
  00c5c	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN428@BattleSetW:

; 2404 : 		}
; 2405 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2406 : 			if( p_party[i]->func == NULL ) continue;

  00c62	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  00c67	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00c6b	0f 84 72 fc ff
	ff		 je	 $LN386@BattleSetW

; 2407 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2408 : 			if( p_party[i]->hp <= 0 ) continue;

  00c71	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00c75	0f 8e 68 fc ff
	ff		 jle	 $LN386@BattleSetW

; 2409 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00c7b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00c81	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00c87	0f 85 56 fc ff
	ff		 jne	 $LN386@BattleSetW

; 2410 : 			// 左上第二列
; 2411 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_COL6;

  00c8d	81 c9 00 00 80
	00		 or	 ecx, 8388608		; 00800000H

; 2412 : 		}
; 2413 : //		if ( typeflag == 0 )
; 2414 : 			battleTargetSelectFlag = TRUE;
; 2415 : 		DeathAction( pActWnd );
; 2416 : 		pActWnd = NULL;
; 2417 : 		ClearBattleButton();
; 2418 : 		if ( typeflag == 1 )
; 2419 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2420 : 		else
; 2421 : 			BattleCmdNo = BATTLE_WAZA;
; 2422 : 		play_se( 217, 320, 240 );
; 2423 : 		if ( typeflag != 1 )
; 2424 : 			battleWazaTargetBak = no;
; 2425 : 		break;

  00c93	e9 45 fc ff ff	 jmp	 $LN527@BattleSetW
$LN158@BattleSetW:

; 2426 : #endif
; 2427 : 	case PETSKILL_TARGET_ONE_LINE:
; 2428 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2429 : 			if( p_party[i]->func == NULL )	continue;

  00c98	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00c9d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00ca1	74 29		 je	 SHORT $LN52@BattleSetW

; 2430 : 			if( p_party[i]->hp <= 0 ) continue;

  00ca3	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00ca7	7e 23		 jle	 SHORT $LN52@BattleSetW

; 2431 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00ca9	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00caf	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00cb5	75 15		 jne	 SHORT $LN52@BattleSetW

; 2432 : 			// 右下第二列
; 2433 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00cb7	83 c9 08	 or	 ecx, 8
  00cba	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2434 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00cc0	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00cc5	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN52@BattleSetW:

; 2426 : #endif
; 2427 : 	case PETSKILL_TARGET_ONE_LINE:
; 2428 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2429 : 			if( p_party[i]->func == NULL )	continue;

  00ccc	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00cd1	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00cd5	74 29		 je	 SHORT $LN435@BattleSetW

; 2430 : 			if( p_party[i]->hp <= 0 ) continue;

  00cd7	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00cdb	7e 23		 jle	 SHORT $LN435@BattleSetW

; 2431 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00cdd	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00ce3	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ce9	75 15		 jne	 SHORT $LN435@BattleSetW

; 2432 : 			// 右下第二列
; 2433 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00ceb	83 c9 08	 or	 ecx, 8
  00cee	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2434 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00cf4	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00cf9	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN435@BattleSetW:

; 2426 : #endif
; 2427 : 	case PETSKILL_TARGET_ONE_LINE:
; 2428 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2429 : 			if( p_party[i]->func == NULL )	continue;

  00d00	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  00d05	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00d09	74 29		 je	 SHORT $LN437@BattleSetW

; 2430 : 			if( p_party[i]->hp <= 0 ) continue;

  00d0b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00d0f	7e 23		 jle	 SHORT $LN437@BattleSetW

; 2431 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00d11	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00d17	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00d1d	75 15		 jne	 SHORT $LN437@BattleSetW

; 2432 : 			// 右下第二列
; 2433 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00d1f	83 c9 08	 or	 ecx, 8
  00d22	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2434 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00d28	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00d2d	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN437@BattleSetW:

; 2426 : #endif
; 2427 : 	case PETSKILL_TARGET_ONE_LINE:
; 2428 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2429 : 			if( p_party[i]->func == NULL )	continue;

  00d34	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  00d39	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00d3d	74 29		 je	 SHORT $LN439@BattleSetW

; 2430 : 			if( p_party[i]->hp <= 0 ) continue;

  00d3f	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00d43	7e 23		 jle	 SHORT $LN439@BattleSetW

; 2431 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00d45	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00d4b	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00d51	75 15		 jne	 SHORT $LN439@BattleSetW

; 2432 : 			// 右下第二列
; 2433 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00d53	83 c9 08	 or	 ecx, 8
  00d56	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2434 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00d5c	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  00d61	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN439@BattleSetW:

; 2426 : #endif
; 2427 : 	case PETSKILL_TARGET_ONE_LINE:
; 2428 : 		for( i = 0 ; i < 5 ; i++ )	{
; 2429 : 			if( p_party[i]->func == NULL )	continue;

  00d68	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  00d6d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00d71	74 29		 je	 SHORT $LN441@BattleSetW

; 2430 : 			if( p_party[i]->hp <= 0 ) continue;

  00d73	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00d77	7e 23		 jle	 SHORT $LN441@BattleSetW

; 2431 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00d79	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00d7f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00d85	75 15		 jne	 SHORT $LN441@BattleSetW

; 2432 : 			// 右下第二列
; 2433 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00d87	83 c9 08	 or	 ecx, 8
  00d8a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2434 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00d90	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  00d95	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN441@BattleSetW:

; 2435 : 		}
; 2436 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2437 : 			if( p_party[i]->func == NULL )	continue;

  00d9c	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  00da1	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00da5	74 29		 je	 SHORT $LN55@BattleSetW

; 2438 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2439 : 			if( p_party[i]->hp <= 0 ) continue;

  00da7	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00dab	7e 23		 jle	 SHORT $LN55@BattleSetW

; 2440 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00dad	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00db3	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00db9	75 15		 jne	 SHORT $LN55@BattleSetW

; 2441 : 			// 右下第一列
; 2442 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00dbb	83 c9 08	 or	 ecx, 8
  00dbe	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2443 : 			p_party[i-5]->atr |= ACT_ATR_HIT_BOX;

  00dc4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  00dc9	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN55@BattleSetW:

; 2435 : 		}
; 2436 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2437 : 			if( p_party[i]->func == NULL )	continue;

  00dd0	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  00dd5	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00dd9	74 29		 je	 SHORT $LN446@BattleSetW

; 2438 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2439 : 			if( p_party[i]->hp <= 0 ) continue;

  00ddb	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00ddf	7e 23		 jle	 SHORT $LN446@BattleSetW

; 2440 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00de1	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00de7	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ded	75 15		 jne	 SHORT $LN446@BattleSetW

; 2441 : 			// 右下第一列
; 2442 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00def	83 c9 08	 or	 ecx, 8
  00df2	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2443 : 			p_party[i-5]->atr |= ACT_ATR_HIT_BOX;

  00df8	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  00dfd	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN446@BattleSetW:

; 2435 : 		}
; 2436 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2437 : 			if( p_party[i]->func == NULL )	continue;

  00e04	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  00e09	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00e0d	74 29		 je	 SHORT $LN448@BattleSetW

; 2438 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2439 : 			if( p_party[i]->hp <= 0 ) continue;

  00e0f	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00e13	7e 23		 jle	 SHORT $LN448@BattleSetW

; 2440 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00e15	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00e1b	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00e21	75 15		 jne	 SHORT $LN448@BattleSetW

; 2441 : 			// 右下第一列
; 2442 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00e23	83 c9 08	 or	 ecx, 8
  00e26	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2443 : 			p_party[i-5]->atr |= ACT_ATR_HIT_BOX;

  00e2c	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  00e31	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN448@BattleSetW:

; 2435 : 		}
; 2436 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2437 : 			if( p_party[i]->func == NULL )	continue;

  00e38	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  00e3d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00e41	74 29		 je	 SHORT $LN450@BattleSetW

; 2438 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2439 : 			if( p_party[i]->hp <= 0 ) continue;

  00e43	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00e47	7e 23		 jle	 SHORT $LN450@BattleSetW

; 2440 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00e49	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00e4f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00e55	75 15		 jne	 SHORT $LN450@BattleSetW

; 2441 : 			// 右下第一列
; 2442 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00e57	83 c9 08	 or	 ecx, 8
  00e5a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2443 : 			p_party[i-5]->atr |= ACT_ATR_HIT_BOX;

  00e60	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  00e65	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN450@BattleSetW:

; 2435 : 		}
; 2436 : 		for( i = 5 ; i < 10 ; i++ )	{
; 2437 : 			if( p_party[i]->func == NULL )	continue;

  00e6c	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  00e71	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00e75	74 29		 je	 SHORT $LN452@BattleSetW

; 2438 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2439 : 			if( p_party[i]->hp <= 0 ) continue;

  00e77	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00e7b	7e 23		 jle	 SHORT $LN452@BattleSetW

; 2440 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00e7d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00e83	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00e89	75 15		 jne	 SHORT $LN452@BattleSetW

; 2441 : 			// 右下第一列
; 2442 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00e8b	83 c9 08	 or	 ecx, 8
  00e8e	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2443 : 			p_party[i-5]->atr |= ACT_ATR_HIT_BOX;

  00e94	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  00e99	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN452@BattleSetW:

; 2444 : 
; 2445 : 		}
; 2446 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2447 : 			if( p_party[i]->func == NULL )	continue;

  00ea0	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00ea5	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00ea9	74 29		 je	 SHORT $LN58@BattleSetW

; 2448 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2449 : 			if( p_party[i]->hp <= 0 ) continue;

  00eab	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00eaf	7e 23		 jle	 SHORT $LN58@BattleSetW

; 2450 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00eb1	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00eb7	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ebd	75 15		 jne	 SHORT $LN58@BattleSetW

; 2451 : 			// 左上第一列
; 2452 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00ebf	83 c9 08	 or	 ecx, 8
  00ec2	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2453 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00ec8	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00ecd	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN58@BattleSetW:

; 2444 : 
; 2445 : 		}
; 2446 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2447 : 			if( p_party[i]->func == NULL )	continue;

  00ed4	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  00ed9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00edd	74 29		 je	 SHORT $LN457@BattleSetW

; 2448 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2449 : 			if( p_party[i]->hp <= 0 ) continue;

  00edf	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00ee3	7e 23		 jle	 SHORT $LN457@BattleSetW

; 2450 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00ee5	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00eeb	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00ef1	75 15		 jne	 SHORT $LN457@BattleSetW

; 2451 : 			// 左上第一列
; 2452 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00ef3	83 c9 08	 or	 ecx, 8
  00ef6	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2453 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00efc	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00f01	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN457@BattleSetW:

; 2444 : 
; 2445 : 		}
; 2446 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2447 : 			if( p_party[i]->func == NULL )	continue;

  00f08	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  00f0d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00f11	74 29		 je	 SHORT $LN459@BattleSetW

; 2448 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2449 : 			if( p_party[i]->hp <= 0 ) continue;

  00f13	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00f17	7e 23		 jle	 SHORT $LN459@BattleSetW

; 2450 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00f19	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00f1f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00f25	75 15		 jne	 SHORT $LN459@BattleSetW

; 2451 : 			// 左上第一列
; 2452 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00f27	83 c9 08	 or	 ecx, 8
  00f2a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2453 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00f30	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  00f35	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN459@BattleSetW:

; 2444 : 
; 2445 : 		}
; 2446 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2447 : 			if( p_party[i]->func == NULL )	continue;

  00f3c	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  00f41	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00f45	74 29		 je	 SHORT $LN461@BattleSetW

; 2448 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2449 : 			if( p_party[i]->hp <= 0 ) continue;

  00f47	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00f4b	7e 23		 jle	 SHORT $LN461@BattleSetW

; 2450 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00f4d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00f53	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00f59	75 15		 jne	 SHORT $LN461@BattleSetW

; 2451 : 			// 左上第一列
; 2452 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00f5b	83 c9 08	 or	 ecx, 8
  00f5e	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2453 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00f64	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  00f69	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN461@BattleSetW:

; 2444 : 
; 2445 : 		}
; 2446 : 		for( i = 10 ; i < 15 ; i++ ) {
; 2447 : 			if( p_party[i]->func == NULL )	continue;

  00f70	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  00f75	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00f79	74 29		 je	 SHORT $LN463@BattleSetW

; 2448 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2449 : 			if( p_party[i]->hp <= 0 ) continue;

  00f7b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00f7f	7e 23		 jle	 SHORT $LN463@BattleSetW

; 2450 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL ) continue;

  00f81	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  00f87	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  00f8d	75 15		 jne	 SHORT $LN463@BattleSetW

; 2451 : 			// 左上第一列
; 2452 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX;

  00f8f	83 c9 08	 or	 ecx, 8
  00f92	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx

; 2453 : 			p_party[i+5]->atr |= ACT_ATR_HIT_BOX;

  00f98	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  00f9d	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN463@BattleSetW:

; 2454 : 
; 2455 : 		}
; 2456 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2457 : 			if( p_party[i]->func == NULL ) continue;

  00fa4	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  00fa9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00fad	74 2b		 je	 SHORT $LN61@BattleSetW

; 2458 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2459 : 			if( p_party[i]->hp <= 0 ) continue;

  00faf	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00fb3	7e 25		 jle	 SHORT $LN61@BattleSetW

; 2460 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00fb5	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  00fbf	75 19		 jne	 SHORT $LN61@BattleSetW

; 2461 : 			// 左上第二列
; 2462 : 			p_party[i]->atr = ACT_ATR_HIT_BOX;

  00fc1	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2463 : 			p_party[i-5]->atr = ACT_ATR_HIT_BOX;

  00fcb	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  00fd0	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8
$LN61@BattleSetW:

; 2454 : 
; 2455 : 		}
; 2456 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2457 : 			if( p_party[i]->func == NULL ) continue;

  00fda	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  00fdf	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  00fe3	74 2b		 je	 SHORT $LN468@BattleSetW

; 2458 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2459 : 			if( p_party[i]->hp <= 0 ) continue;

  00fe5	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00fe9	7e 25		 jle	 SHORT $LN468@BattleSetW

; 2460 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  00feb	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  00ff5	75 19		 jne	 SHORT $LN468@BattleSetW

; 2461 : 			// 左上第二列
; 2462 : 			p_party[i]->atr = ACT_ATR_HIT_BOX;

  00ff7	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2463 : 			p_party[i-5]->atr = ACT_ATR_HIT_BOX;

  01001	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  01006	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8
$LN468@BattleSetW:

; 2454 : 
; 2455 : 		}
; 2456 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2457 : 			if( p_party[i]->func == NULL ) continue;

  01010	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  01015	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01019	74 2b		 je	 SHORT $LN470@BattleSetW

; 2458 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2459 : 			if( p_party[i]->hp <= 0 ) continue;

  0101b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0101f	7e 25		 jle	 SHORT $LN470@BattleSetW

; 2460 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  01021	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  0102b	75 19		 jne	 SHORT $LN470@BattleSetW

; 2461 : 			// 左上第二列
; 2462 : 			p_party[i]->atr = ACT_ATR_HIT_BOX;

  0102d	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2463 : 			p_party[i-5]->atr = ACT_ATR_HIT_BOX;

  01037	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  0103c	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8
$LN470@BattleSetW:

; 2454 : 
; 2455 : 		}
; 2456 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2457 : 			if( p_party[i]->func == NULL ) continue;

  01046	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  0104b	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0104f	74 2b		 je	 SHORT $LN472@BattleSetW

; 2458 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2459 : 			if( p_party[i]->hp <= 0 ) continue;

  01051	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01055	7e 25		 jle	 SHORT $LN472@BattleSetW

; 2460 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  01057	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  01061	75 19		 jne	 SHORT $LN472@BattleSetW

; 2461 : 			// 左上第二列
; 2462 : 			p_party[i]->atr = ACT_ATR_HIT_BOX;

  01063	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2463 : 			p_party[i-5]->atr = ACT_ATR_HIT_BOX;

  0106d	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  01072	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8
$LN472@BattleSetW:

; 2454 : 
; 2455 : 		}
; 2456 : 		for( i = 15 ; i < 20 ; i++ ) {
; 2457 : 			if( p_party[i]->func == NULL ) continue;

  0107c	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  01081	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01085	0f 84 f3 ef ff
	ff		 je	 $LN300@BattleSetW

; 2458 : 			//if( FALSE == magic[BattleJujutuNo].deadTargetFlag )
; 2459 : 			if( p_party[i]->hp <= 0 ) continue;

  0108b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0108f	0f 8e e9 ef ff
	ff		 jle	 $LN300@BattleSetW

; 2460 : 			if( p_party[i]->atr & ACT_ATR_TRAVEL )	continue;

  01095	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  0109f	0f 85 d9 ef ff
	ff		 jne	 $LN300@BattleSetW

; 2461 : 			// 左上第二列
; 2462 : 			p_party[i]->atr = ACT_ATR_HIT_BOX;

  010a5	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2463 : 			p_party[i-5]->atr = ACT_ATR_HIT_BOX;

  010af	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  010b4	c7 80 a4 00 00
	00 08 00 00 00	 mov	 DWORD PTR [eax+164], 8

; 2464 : 
; 2465 : 		}
; 2466 : //		if ( typeflag == 0 )
; 2467 : 			battleTargetSelectFlag = TRUE;
; 2468 : 		DeathAction( pActWnd );
; 2469 : 		pActWnd = NULL;
; 2470 : 		ClearBattleButton();
; 2471 : 		if ( typeflag == 1 )
; 2472 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2473 : 		else
; 2474 : 			BattleCmdNo = BATTLE_WAZA;
; 2475 : 		play_se( 217, 320, 240 );
; 2476 : 		battleWazaTargetBak = no;
; 2477 : 		break;

  010be	e9 bb ef ff ff	 jmp	 $LN300@BattleSetW
$LN173@BattleSetW:

; 2478 : 	case PETSKILL_TARGER_DEATH:
; 2479 : 		for( i = 0 ; i < 20 ; i++ ){

  010c3	b9 00 00 00 00	 mov	 ecx, OFFSET ?p_party@@3PAPAUaction@@A
$LL66@BattleSetW:

; 2480 : 			if( p_party[ i ]->func == NULL ) continue;

  010c8	8b 01		 mov	 eax, DWORD PTR [ecx]
  010ca	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  010ce	74 0d		 je	 SHORT $LN64@BattleSetW

; 2481 : 			if( p_party[ i ]->hp > 0 ) continue;

  010d0	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  010d4	7f 07		 jg	 SHORT $LN64@BattleSetW

; 2482 : 			p_party[ i ]->atr |= ACT_ATR_HIT_BOX;

  010d6	83 88 a4 00 00
	00 08		 or	 DWORD PTR [eax+164], 8
$LN64@BattleSetW:

; 2478 : 	case PETSKILL_TARGER_DEATH:
; 2479 : 		for( i = 0 ; i < 20 ; i++ ){

  010dd	83 c1 04	 add	 ecx, 4
  010e0	81 f9 50 00 00
	00		 cmp	 ecx, OFFSET ?p_party@@3PAPAUaction@@A+80
  010e6	7c e0		 jl	 SHORT $LL66@BattleSetW

; 2483 : 		}
; 2484 : //		if ( typeflag == 0 )
; 2485 : 			battleTargetSelectFlag = TRUE;
; 2486 : 
; 2487 : 		DeathAction( pActWnd );
; 2488 : 		pActWnd = NULL;
; 2489 : 
; 2490 : 		ClearBattleButton();
; 2491 : 
; 2492 : 		if ( typeflag == 1 )
; 2493 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2494 : 		else
; 2495 : 			BattleCmdNo = BATTLE_WAZA;
; 2496 : 
; 2497 : 		play_se( 217, 320, 240 );
; 2498 : 
; 2499 : 		if ( typeflag != 1 )
; 2500 : 			battleWazaTargetBak = no;
; 2501 : 
; 2502 : 		break;

  010e8	e9 f6 f7 ff ff	 jmp	 $LN386@BattleSetW
$LN179@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  010ed	a1 00 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A
  010f2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  010f6	74 20		 je	 SHORT $LN67@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  010f8	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  010fc	7e 1a		 jle	 SHORT $LN67@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  010fe	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01104	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0110a	75 0c		 jne	 SHORT $LN67@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0110c	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  01112	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN67@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  01118	a1 04 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+4
  0111d	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01121	74 20		 je	 SHORT $LN479@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  01123	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01127	7e 1a		 jle	 SHORT $LN479@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01129	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0112f	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01135	75 0c		 jne	 SHORT $LN479@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01137	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  0113d	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN479@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  01143	a1 08 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+8
  01148	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0114c	74 20		 je	 SHORT $LN481@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  0114e	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01152	7e 1a		 jle	 SHORT $LN481@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01154	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0115a	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01160	75 0c		 jne	 SHORT $LN481@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01162	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  01168	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN481@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  0116e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+12
  01173	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01177	74 20		 je	 SHORT $LN483@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  01179	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0117d	7e 1a		 jle	 SHORT $LN483@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  0117f	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01185	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0118b	75 0c		 jne	 SHORT $LN483@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0118d	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  01193	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN483@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  01199	a1 10 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+16
  0119e	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  011a2	74 20		 je	 SHORT $LN485@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  011a4	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  011a8	7e 1a		 jle	 SHORT $LN485@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  011aa	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  011b0	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  011b6	75 0c		 jne	 SHORT $LN485@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  011b8	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  011be	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN485@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  011c4	a1 14 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+20
  011c9	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  011cd	74 20		 je	 SHORT $LN487@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  011cf	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  011d3	7e 1a		 jle	 SHORT $LN487@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  011d5	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  011db	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  011e1	75 0c		 jne	 SHORT $LN487@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  011e3	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  011e9	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN487@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  011ef	a1 18 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+24
  011f4	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  011f8	74 20		 je	 SHORT $LN489@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  011fa	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  011fe	7e 1a		 jle	 SHORT $LN489@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01200	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01206	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0120c	75 0c		 jne	 SHORT $LN489@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0120e	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  01214	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN489@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  0121a	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+28
  0121f	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01223	74 20		 je	 SHORT $LN491@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  01225	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01229	7e 1a		 jle	 SHORT $LN491@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  0122b	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01231	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01237	75 0c		 jne	 SHORT $LN491@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01239	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  0123f	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN491@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  01245	a1 20 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+32
  0124a	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0124e	74 20		 je	 SHORT $LN493@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  01250	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01254	7e 1a		 jle	 SHORT $LN493@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01256	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0125c	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01262	75 0c		 jne	 SHORT $LN493@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  01264	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  0126a	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN493@BattleSetW:

; 2503 : 	case PETSKILL_TARGET_WHOLEOTHERSIDE:	//我方全部 或 对方全部
; 2504 : 		for (i = 0; i < 10; i++) {
; 2505 : 
; 2506 : 			if (p_party[i]->func == NULL) continue;

  01270	a1 24 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+36
  01275	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01279	74 20		 je	 SHORT $LN495@BattleSetW

; 2507 : 			if (p_party[i]->hp <= 0) continue;

  0127b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0127f	7e 1a		 jle	 SHORT $LN495@BattleSetW

; 2508 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01281	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01287	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0128d	75 0c		 jne	 SHORT $LN495@BattleSetW

; 2509 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL1;

  0128f	81 c9 00 20 00
	00		 or	 ecx, 8192		; 00002000H
  01295	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN495@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  0129b	a1 28 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+40
  012a0	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  012a4	74 20		 je	 SHORT $LN70@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  012a6	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  012aa	7e 1a		 jle	 SHORT $LN70@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  012ac	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  012b2	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  012b8	75 0c		 jne	 SHORT $LN70@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  012ba	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  012c0	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN70@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  012c6	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+44
  012cb	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  012cf	74 20		 je	 SHORT $LN500@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  012d1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  012d5	7e 1a		 jle	 SHORT $LN500@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  012d7	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  012dd	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  012e3	75 0c		 jne	 SHORT $LN500@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  012e5	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  012eb	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN500@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  012f1	a1 30 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+48
  012f6	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  012fa	74 20		 je	 SHORT $LN502@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  012fc	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01300	7e 1a		 jle	 SHORT $LN502@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01302	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01308	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0130e	75 0c		 jne	 SHORT $LN502@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01310	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  01316	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN502@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  0131c	a1 34 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+52
  01321	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01325	74 20		 je	 SHORT $LN504@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  01327	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0132b	7e 1a		 jle	 SHORT $LN504@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  0132d	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01333	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01339	75 0c		 jne	 SHORT $LN504@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  0133b	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  01341	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN504@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  01347	a1 38 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+56
  0134c	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01350	74 20		 je	 SHORT $LN506@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  01352	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01356	7e 1a		 jle	 SHORT $LN506@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01358	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0135e	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01364	75 0c		 jne	 SHORT $LN506@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01366	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  0136c	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN506@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  01372	a1 3c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+60
  01377	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0137b	74 20		 je	 SHORT $LN508@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  0137d	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01381	7e 1a		 jle	 SHORT $LN508@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01383	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01389	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0138f	75 0c		 jne	 SHORT $LN508@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01391	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  01397	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN508@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  0139d	a1 40 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+64
  013a2	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  013a6	74 20		 je	 SHORT $LN510@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  013a8	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  013ac	7e 1a		 jle	 SHORT $LN510@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  013ae	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  013b4	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  013ba	75 0c		 jne	 SHORT $LN510@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  013bc	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  013c2	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN510@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  013c8	a1 44 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+68
  013cd	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  013d1	74 20		 je	 SHORT $LN512@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  013d3	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  013d7	7e 1a		 jle	 SHORT $LN512@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  013d9	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  013df	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  013e5	75 0c		 jne	 SHORT $LN512@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  013e7	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  013ed	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN512@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  013f3	a1 48 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+72
  013f8	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  013fc	74 20		 je	 SHORT $LN514@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  013fe	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  01402	7e 1a		 jle	 SHORT $LN514@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  01404	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  0140a	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  01410	75 0c		 jne	 SHORT $LN514@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  01412	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  01418	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN514@BattleSetW:

; 2510 : 		}
; 2511 : 
; 2512 : 		for (i = 10; i < 20; i++) {
; 2513 : 
; 2514 : 			if (p_party[i]->func == NULL) continue;

  0141e	a1 4c 00 00 00	 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A+76
  01423	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  01427	74 20		 je	 SHORT $LN516@BattleSetW

; 2515 : 			if (p_party[i]->hp <= 0) continue;

  01429	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0142d	7e 1a		 jle	 SHORT $LN516@BattleSetW

; 2516 : 			if (p_party[i]->atr & ACT_ATR_TRAVEL) continue;

  0142f	8b 88 a4 00 00
	00		 mov	 ecx, DWORD PTR [eax+164]
  01435	f7 c1 00 00 02
	00		 test	 ecx, 131072		; 00020000H
  0143b	75 0c		 jne	 SHORT $LN516@BattleSetW

; 2517 : 			p_party[i]->atr |= ACT_ATR_HIT_BOX_ALL2;

  0143d	81 c9 00 40 00
	00		 or	 ecx, 16384		; 00004000H
  01443	89 88 a4 00 00
	00		 mov	 DWORD PTR [eax+164], ecx
$LN516@BattleSetW:

; 2518 : 		}
; 2519 : 
; 2520 : 		battleTargetSelectFlag = TRUE;
; 2521 : 		DeathAction(pActWnd);

  01449	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActWnd@@3PAUaction@@A
  0144f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 2522 : 		pActWnd = NULL;

  01454	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0

; 2523 : 		ClearBattleButton();

  0145e	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 2524 : 		if (typeflag == 1)
; 2525 : 			BattleCmdNo = BATTLE_PROWAZA;
; 2526 : 		else
; 2527 : 			BattleCmdNo = BATTLE_WAZA;
; 2528 : 		play_se(217, 320, 240);

  01463	8d 46 ff	 lea	 eax, DWORD PTR [esi-1]
  01466	f7 d8		 neg	 eax
  01468	68 f0 00 00 00	 push	 240			; 000000f0H
  0146d	1b c0		 sbb	 eax, eax
  0146f	83 c0 05	 add	 eax, 5
  01472	68 40 01 00 00	 push	 320			; 00000140H
  01477	68 d9 00 00 00	 push	 217			; 000000d9H
  0147c	a3 00 00 00 00	 mov	 DWORD PTR ?BattleCmdNo@@3HA, eax ; BattleCmdNo
  01481	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 2529 : 		if (typeflag != 1)

  01486	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleWazaTargetBak@@3HA ; battleWazaTargetBak
  0148b	83 c4 10	 add	 esp, 16			; 00000010H
  0148e	83 fe 01	 cmp	 esi, 1
  01491	0f 45 c3	 cmovne	 eax, ebx
  01494	a3 00 00 00 00	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, eax ; battleWazaTargetBak
$LN188@BattleSetW:

; 2530 : 			battleWazaTargetBak = no;
; 2531 : 		break;
; 2532 : #endif
; 2533 : 	}
; 2534 : }

  01499	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0149c	5e		 pop	 esi
  0149d	33 cd		 xor	 ecx, ebp
  0149f	5b		 pop	 ebx
  014a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  014a5	8b e5		 mov	 esp, ebp
  014a7	5d		 pop	 ebp
  014a8	c3		 ret	 0
  014a9	0f 1f 00	 npad	 3
$LN522@BattleSetW:
  014ac	00 00 00 00	 DD	 $LN75@BattleSetW
  014b0	00 00 00 00	 DD	 $LN80@BattleSetW
  014b4	00 00 00 00	 DD	 $LN86@BattleSetW
  014b8	00 00 00 00	 DD	 $LN95@BattleSetW
  014bc	00 00 00 00	 DD	 $LN104@BattleSetW
  014c0	00 00 00 00	 DD	 $LN109@BattleSetW
  014c4	00 00 00 00	 DD	 $LN113@BattleSetW
  014c8	00 00 00 00	 DD	 $LN119@BattleSetW
  014cc	00 00 00 00	 DD	 $LN126@BattleSetW
  014d0	00 00 00 00	 DD	 $LN158@BattleSetW
  014d4	00 00 00 00	 DD	 $LN173@BattleSetW
  014d8	00 00 00 00	 DD	 $LN142@BattleSetW
  014dc	00 00 00 00	 DD	 $LN179@BattleSetW
?BattleSetWazaHitBox@@YAXHH@Z ENDP			; BattleSetWazaHitBox
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleNameDisp@@YAXXZ
_TEXT	SEGMENT
_token$1 = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleNameDisp@@YAXXZ PROC				; BattleNameDisp, COMDAT

; 489  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 490  : 	int i;
; 491  : 	int color = FONT_PAL_WHITE;
; 492  : 	if( nameOverTheHeadFlag != TRUE ) return;

  00013	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?nameOverTheHeadFlag@@3FA, 1 ; nameOverTheHeadFlag
  0001b	0f 85 0f 01 00
	00		 jne	 $LN3@BattleName

; 493  : 	int myside = BattleMyNo >= 10 ? 0 : 1;
; 494  : 	for( i = 0 ; i < 20 ; i++ ){

  00021	56		 push	 esi
  00022	57		 push	 edi
  00023	33 f6		 xor	 esi, esi
$LL4@BattleName:

; 495  : 		if( p_party[ i ]->func == NULL ) continue;

  00025	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  0002c	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  00030	0f 84 ee 00 00
	00		 je	 $LN2@BattleName

; 496  : 		if( i == BattleMyNo || i == ( BattleMyNo + 5 ) )

  00036	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0003b	3b f0		 cmp	 esi, eax
  0003d	74 0b		 je	 SHORT $LN9@BattleName
  0003f	83 c0 05	 add	 eax, 5
  00042	3b f0		 cmp	 esi, eax
  00044	74 04		 je	 SHORT $LN9@BattleName

; 498  : 		else
; 499  : 			color = FONT_PAL_WHITE;

  00046	33 ff		 xor	 edi, edi
  00048	eb 05		 jmp	 SHORT $LN8@BattleName
$LN9@BattleName:

; 497  : 			color = FONT_PAL_YELLOW;

  0004a	bf 04 00 00 00	 mov	 edi, 4
$LN8@BattleName:

; 500  : 	
; 501  : //		StockFontBuffer( p_party[ i ]->x - GetStrWidth( p_party[ i ]->name )/2, p_party[ i ]->y - 10, FONT_PRIO_BACK, color, p_party[ i ]->name, 0 );
; 502  : 
; 503  : 
; 504  : 		char token[256];
; 505  : 		sprintf_s(token,"%s Lv:%d",p_party[ i ]->name,p_party[ i ]->level);

  0004f	ff b1 8c 00 00
	00		 push	 DWORD PTR [ecx+140]
  00055	8d 41 38	 lea	 eax, DWORD PTR [ecx+56]
  00058	50		 push	 eax
  00059	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  0005f	68 00 00 00 00	 push	 OFFSET ??_C@_08JCHLGOEH@?$CFs?5Lv?3?$CFd@
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>

; 506  : 		StockFontBuffer( p_party[ i ]->x - GetStrWidth( token )/2, p_party[ i ]->y - 10, FONT_PRIO_BACK, color, token, 0 );

  0006a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?GetStrWidth@@YAHPAD@Z	; GetStrWidth
  00076	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  0007d	99		 cdq
  0007e	2b c2		 sub	 eax, edx
  00080	8b d0		 mov	 edx, eax
  00082	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  00088	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  0008b	6a 00		 push	 0
  0008d	50		 push	 eax
  0008e	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  00095	83 e9 0a	 sub	 ecx, 10			; 0000000aH
  00098	57		 push	 edi
  00099	d1 fa		 sar	 edx, 1
  0009b	6a 00		 push	 0
  0009d	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  000a0	51		 push	 ecx
  000a1	2b c2		 sub	 eax, edx
  000a3	50		 push	 eax
  000a4	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  000a9	83 c4 2c	 add	 esp, 44			; 0000002cH

; 507  : 		
; 508  : 		if (BattleMyNo < 10 && i < 10)

  000ac	83 3d 00 00 00
	00 0a		 cmp	 DWORD PTR ?BattleMyNo@@3HA, 10 ; BattleMyNo, 0000000aH
  000b3	7d 07		 jge	 SHORT $LN18@BattleName
  000b5	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  000b8	73 6a		 jae	 SHORT $LN2@BattleName

; 509  : 		{
; 510  : 			sprintf_s(token, "HP:%d/%d", p_party[i]->hp, p_party[i]->maxHp);
; 511  : 			StockFontBuffer(p_party[i]->x - GetStrWidth(token) / 2, p_party[i]->y + 10, FONT_PRIO_BACK, color, token, 0);
; 512  : 		}

  000ba	eb 05		 jmp	 SHORT $LN19@BattleName
$LN18@BattleName:

; 513  : 		else if (BattleMyNo >= 10 && i >= 10)

  000bc	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  000bf	72 63		 jb	 SHORT $LN2@BattleName
$LN19@BattleName:

; 493  : 	int myside = BattleMyNo >= 10 ? 0 : 1;
; 494  : 	for( i = 0 ; i < 20 ; i++ ){

  000c1	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  000c8	ff b0 80 00 00
	00		 push	 DWORD PTR [eax+128]
  000ce	ff 70 78	 push	 DWORD PTR [eax+120]
  000d1	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  000d7	68 00 00 00 00	 push	 OFFSET ??_C@_08NJBMJDFM@HP?3?$CFd?1?$CFd@
  000dc	50		 push	 eax
  000dd	e8 00 00 00 00	 call	 ??$sprintf_s@$0BAA@@@YAHAAY0BAA@DPBDZZ ; sprintf_s<256>
  000e2	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?GetStrWidth@@YAHPAD@Z	; GetStrWidth
  000ee	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  000f5	99		 cdq
  000f6	2b c2		 sub	 eax, edx
  000f8	8b d0		 mov	 edx, eax
  000fa	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _token$1[ebp]
  00100	8b 49 1c	 mov	 ecx, DWORD PTR [ecx+28]
  00103	6a 00		 push	 0
  00105	50		 push	 eax
  00106	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  0010d	83 c1 0a	 add	 ecx, 10			; 0000000aH
  00110	57		 push	 edi
  00111	6a 00		 push	 0
  00113	d1 fa		 sar	 edx, 1
  00115	8b 40 18	 mov	 eax, DWORD PTR [eax+24]
  00118	51		 push	 ecx
  00119	2b c2		 sub	 eax, edx
  0011b	50		 push	 eax
  0011c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00121	83 c4 2c	 add	 esp, 44			; 0000002cH
$LN2@BattleName:
  00124	46		 inc	 esi
  00125	83 fe 14	 cmp	 esi, 20			; 00000014H
  00128	0f 8c f7 fe ff
	ff		 jl	 $LL4@BattleName
  0012e	5f		 pop	 edi
  0012f	5e		 pop	 esi
$LN3@BattleName:

; 514  : 		{
; 515  : 			sprintf_s(token, "HP:%d/%d", p_party[i]->hp, p_party[i]->maxHp);
; 516  : 			StockFontBuffer(p_party[i]->x - GetStrWidth(token) / 2, p_party[i]->y + 10, FONT_PRIO_BACK, color, token, 0);
; 517  : 		}
; 518  : 		
; 519  : 		/*
; 520  : 		char buf[100];
; 521  : 		wsprintfA(buf, "%d", p_party[i]->hp);
; 522  : 		int meterX = p_party[i]->x;
; 523  : 		int meterY = p_party[i]->y - 80;
; 524  : 		StockFontBuffer(meterX - 13, meterY - 17, FONT_PRIO_BACK, FONT_PAL_WHITE, buf, 0);
; 525  : 
; 526  : 		if (p_party[i]->onRide > 0){
; 527  : 			meterY += 25;
; 528  : 			meterX += 20;
; 529  : 			wsprintfA(buf, "%d", p_party[i]->hp);
; 530  : 			StockFontBuffer(meterX - 13, meterY - 17, FONT_PRIO_BACK, FONT_PAL_WHITE, buf, 0);
; 531  : 		}*/
; 532  : 
; 533  : 		//JL add 2017.10.5 战斗F11显血
; 534  : 		//char buf[100];
; 535  : 		//if (p_party[i]->onRide > 0)
; 536  : 		//{
; 537  : 		//	wsprintfA(buf, "HP:%d,骑:%d", p_party[i]->hp, p_party[i]->petHp);
; 538  : 		//	StockFontBuffer(p_party[i]->x - GetStrWidth(buf) / 2, p_party[i]->y + 4, FONT_PRIO_BACK, color, buf, 0);
; 539  : 		//}
; 540  : 		//else
; 541  : 		//{
; 542  : 		//	wsprintfA(buf, "HP:%d", p_party[i]->hp);
; 543  : 		//	StockFontBuffer(p_party[i]->x - GetStrWidth(buf) / 2, p_party[i]->y + 4, FONT_PRIO_BACK, color, buf, 0);
; 544  : 		//}
; 545  : 
; 546  : 		//char buf[100];
; 547  : 		//wsprintfA(buf, "%d/%d", p_party[i]->hp, p_party[i]->maxHp);
; 548  : 		//StockFontBuffer(p_party[i]->x - GetStrWidth(buf) / 2, p_party[i]->y+4, FONT_PRIO_BACK, color, buf, 0);
; 549  : 
; 550  : 		//if (p_party[i]->petHp)
; 551  : 		//{
; 552  : 		//	wsprintfA(buf, "%d/%d", p_party[i]->petHp, p_party[i]->petMaxHp);
; 553  : 		//	StockFontBuffer(p_party[i]->x - GetStrWidth(buf) / 2, p_party[i]->y + 18, FONT_PRIO_BACK, color, buf, 0);
; 554  : 		//}
; 555  : 
; 556  : 	}	
; 557  : }

  00130	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00133	33 cd		 xor	 ecx, ebp
  00135	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0013a	8b e5		 mov	 esp, ebp
  0013c	5d		 pop	 ebp
  0013d	c3		 ret	 0
?BattleNameDisp@@YAXXZ ENDP				; BattleNameDisp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?HpMeterDisp@@YAXH@Z
_TEXT	SEGMENT
_no$ = 8						; size = 4
?HpMeterDisp@@YAXH@Z PROC				; HpMeterDisp, COMDAT

; 382  : void HpMeterDisp( int no ){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 383  : 	int meterX = p_party[ no ]->x;

  00005	8b 75 08	 mov	 esi, DWORD PTR _no$[ebp]
  00008	57		 push	 edi
  00009	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]

; 384  : 	int meterY = p_party[ no ]->y - 80;

  00010	8b 58 1c	 mov	 ebx, DWORD PTR [eax+28]
  00013	8b 78 18	 mov	 edi, DWORD PTR [eax+24]
  00016	83 eb 50	 sub	 ebx, 80			; 00000050H

; 385  : 	int graNo;
; 386  : 	// ??????????????
; 387  : 	if( p_party[ no ]->func == NULL || p_party[ no ]->hp <= 0 ) return;

  00019	83 78 08 00	 cmp	 DWORD PTR [eax+8], 0
  0001d	0f 84 7f 03 00
	00		 je	 $LN3@HpMeterDis
  00023	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  00027	0f 8e 75 03 00
	00		 jle	 $LN3@HpMeterDis

; 388  : 	// ?????
; 389  : 	if( p_party[ no ]->atr & ACT_ATR_TRAVEL ) return;

  0002d	f7 80 a4 00 00
	00 00 00 02 00	 test	 DWORD PTR [eax+164], 131072 ; 00020000H
  00037	0f 85 65 03 00
	00		 jne	 $LN3@HpMeterDis

; 390  : 	// ??
; 391  : 	if( no == BattleMyNo ){

  0003d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00042	6a 00		 push	 0
  00044	3b f0		 cmp	 esi, eax
  00046	0f 85 dd 01 00
	00		 jne	 $LN5@HpMeterDis

; 392  : 		// ?
; 393  : 		StockDispBuffer( meterX, meterY, DISP_PRIO_IME1, CG_BATTLE_BAR_PLAYER_2, 0 );

  0004c	68 a3 65 00 00	 push	 26019			; 000065a3H
  00051	6a 66		 push	 102			; 00000066H
  00053	53		 push	 ebx
  00054	57		 push	 edi
  00055	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 394  : 		// ??
; 395  : 		StockBoxDispBuffer( meterX - 21,

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0005f	8d 53 fd	 lea	 edx, DWORD PTR [ebx-3]
  00062	6a 02		 push	 2
  00064	68 fa 00 00 00	 push	 250			; 000000faH
  00069	6a 67		 push	 103			; 00000067H
  0006b	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00072	8d 77 eb	 lea	 esi, DWORD PTR [edi-21]
  00075	8b cf		 mov	 ecx, edi
  00077	52		 push	 edx
  00078	66 0f 6e 48 78	 movd	 xmm1, DWORD PTR [eax+120]
  0007d	66 0f 6e 80 80
	00 00 00	 movd	 xmm0, DWORD PTR [eax+128]
  00085	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  00089	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0008d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00091	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  00099	f2 0f 2c c1	 cvttsd2si eax, xmm1
  0009d	2b c8		 sub	 ecx, eax
  0009f	83 e9 15	 sub	 ecx, 21			; 00000015H
  000a2	51		 push	 ecx
  000a3	52		 push	 edx
  000a4	56		 push	 esi
  000a5	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 396  : 							meterY - 3,
; 397  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->hp / (double)p_party[ BattleMyNo ]->maxHp ) * 40.0 ),
; 398  : 							meterY - 3,
; 399  : 							DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 400  : 		StockBoxDispBuffer( meterX - 21,

  000aa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000af	8d 53 fe	 lea	 edx, DWORD PTR [ebx-2]
  000b2	6a 02		 push	 2
  000b4	68 fa 00 00 00	 push	 250			; 000000faH
  000b9	6a 67		 push	 103			; 00000067H
  000bb	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  000c2	8b cf		 mov	 ecx, edi
  000c4	52		 push	 edx
  000c5	66 0f 6e 48 78	 movd	 xmm1, DWORD PTR [eax+120]
  000ca	66 0f 6e 80 80
	00 00 00	 movd	 xmm0, DWORD PTR [eax+128]
  000d2	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  000d6	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  000da	f2 0f 5e c8	 divsd	 xmm1, xmm0
  000de	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  000e6	f2 0f 2c c1	 cvttsd2si eax, xmm1
  000ea	2b c8		 sub	 ecx, eax
  000ec	83 e9 15	 sub	 ecx, 21			; 00000015H
  000ef	51		 push	 ecx
  000f0	52		 push	 edx
  000f1	56		 push	 esi
  000f2	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 401  : 							meterY - 2,
; 402  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->hp / (double)p_party[ BattleMyNo ]->maxHp ) * 40.0 ),
; 403  : 							meterY - 2,
; 404  : 							DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 405  : 		// ??
; 406  : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 407  : 		StockBoxDispBuffer( meterX - 21,

  000f7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000fc	8d 53 01	 lea	 edx, DWORD PTR [ebx+1]
  000ff	83 c4 4c	 add	 esp, 76			; 0000004cH
  00102	8b cf		 mov	 ecx, edi
  00104	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0010b	6a 02		 push	 2
  0010d	68 fb 00 00 00	 push	 251			; 000000fbH
  00112	6a 67		 push	 103			; 00000067H
  00114	66 0f 6e 88 84
	00 00 00	 movd	 xmm1, DWORD PTR [eax+132]
  0011c	66 0f 6e 80 88
	00 00 00	 movd	 xmm0, DWORD PTR [eax+136]
  00124	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  00128	52		 push	 edx
  00129	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0012d	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00131	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  00139	f2 0f 2c c1	 cvttsd2si eax, xmm1
  0013d	2b c8		 sub	 ecx, eax
  0013f	83 e9 15	 sub	 ecx, 21			; 00000015H
  00142	51		 push	 ecx
  00143	52		 push	 edx
  00144	56		 push	 esi
  00145	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 408  : 							meterY + 1,
; 409  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->mp / (double)p_party[ BattleMyNo ]->maxMp ) * 40.0 ),
; 410  : 							meterY + 1,
; 411  : 							DISP_PRIO_IME2, SYSTEM_PAL_YELLOW, 2 );
; 412  : 		StockBoxDispBuffer( meterX - 21,

  0014a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0014f	8d 53 02	 lea	 edx, DWORD PTR [ebx+2]
  00152	6a 02		 push	 2
  00154	68 fb 00 00 00	 push	 251			; 000000fbH
  00159	6a 67		 push	 103			; 00000067H
  0015b	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00162	52		 push	 edx
  00163	66 0f 6e 88 84
	00 00 00	 movd	 xmm1, DWORD PTR [eax+132]
  0016b	66 0f 6e 80 88
	00 00 00	 movd	 xmm0, DWORD PTR [eax+136]
  00173	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  00177	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  0017b	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0017f	8b cf		 mov	 ecx, edi
  00181	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  00189	f2 0f 2c c1	 cvttsd2si eax, xmm1
  0018d	2b c8		 sub	 ecx, eax
  0018f	83 e9 15	 sub	 ecx, 21			; 00000015H
  00192	51		 push	 ecx
  00193	52		 push	 edx
  00194	56		 push	 esi
  00195	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 413  : 							meterY + 2,
; 414  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->mp / (double)p_party[ BattleMyNo ]->maxMp ) * 40.0 ),
; 415  : 							meterY + 2,
; 416  : 							DISP_PRIO_IME2, SYSTEM_PAL_YELLOW, 2 );
; 417  : #else
; 418  : 		StockBoxDispBuffer( meterX - 21,
; 419  : 							meterY + 1,
; 420  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->mp / 100.0 ) * 40.0 ),
; 421  : 							meterY + 1,
; 422  : 							DISP_PRIO_IME2, SYSTEM_PAL_YELLOW, 2 );
; 423  : 		StockBoxDispBuffer( meterX - 21,
; 424  : 							meterY + 2,
; 425  : 							meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->mp / 100.0 ) * 40.0 ),
; 426  : 							meterY + 2,
; 427  : 							DISP_PRIO_IME2, SYSTEM_PAL_YELLOW, 2 );
; 428  : #endif
; 429  : 		//cary 秀出骑宠的宠物血量 
; 430  : 		if( p_party[ BattleMyNo ]->onRide > 0 ){

  0019a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  0019f	83 c4 38	 add	 esp, 56			; 00000038H
  001a2	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  001a9	83 b8 94 01 00
	00 00		 cmp	 DWORD PTR [eax+404], 0
  001b0	0f 8e ec 01 00
	00		 jle	 $LN3@HpMeterDis

; 431  : 			meterY += 25;
; 432  : 			meterX += 20;
; 433  : 			// ?
; 434  : 			StockDispBuffer( meterX , meterY, DISP_PRIO_IME1, CG_BATTLE_BAR_PET_2, 0 );

  001b6	6a 00		 push	 0
  001b8	68 a4 65 00 00	 push	 26020			; 000065a4H
  001bd	6a 66		 push	 102			; 00000066H
  001bf	83 c3 19	 add	 ebx, 25			; 00000019H
  001c2	83 c7 14	 add	 edi, 20			; 00000014H
  001c5	53		 push	 ebx
  001c6	57		 push	 edi
  001c7	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 435  : 			// ?????????
; 436  : 			StockBoxDispBuffer( meterX - 21,

  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  001d1	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
  001d4	6a 02		 push	 2
  001d6	68 fa 00 00 00	 push	 250			; 000000faH
  001db	6a 67		 push	 103			; 00000067H
  001dd	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  001e4	8d 77 eb	 lea	 esi, DWORD PTR [edi-21]
  001e7	8b cf		 mov	 ecx, edi
  001e9	52		 push	 edx
  001ea	66 0f 6e 88 b0
	01 00 00	 movd	 xmm1, DWORD PTR [eax+432]
  001f2	66 0f 6e 80 b4
	01 00 00	 movd	 xmm0, DWORD PTR [eax+436]
  001fa	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  001fe	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00202	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00206	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  0020e	f2 0f 2c c1	 cvttsd2si eax, xmm1
  00212	2b c8		 sub	 ecx, eax
  00214	83 e9 15	 sub	 ecx, 21			; 00000015H
  00217	51		 push	 ecx
  00218	52		 push	 edx
  00219	56		 push	 esi
  0021a	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 437  : 								meterY - 1,
; 438  : 								meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->petHp / (double)p_party[ BattleMyNo ]->petMaxHp ) * 40.0 ),
; 439  : 								meterY - 1,
; 440  : 								DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 441  : 			// ?????????
; 442  : 			StockBoxDispBuffer( meterX - 21,

  0021f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo

; 443  : 								meterY + 0,
; 444  : 								meterX - 21 + (int)( ( (double)p_party[ BattleMyNo ]->petHp / (double)p_party[ BattleMyNo ]->petMaxHp ) * 40.0 ),
; 445  : 								meterY + 0,
; 446  : 								DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 447  : 		}
; 448  : 	}else{	// ????

  00224	e9 30 01 00 00	 jmp	 $LN12@HpMeterDis
$LN5@HpMeterDis:

; 449  : 		if( no == BattleMyNo + 5 ) graNo = CG_BATTLE_BAR_PET_2;

  00229	83 c0 05	 add	 eax, 5

; 450  : 		else graNo = CG_BATTLE_BAR_PET;
; 451  : 		// ?
; 452  : 		StockDispBuffer( meterX , meterY, DISP_PRIO_IME1, graNo, 0 );

  0022c	ba 9e 65 00 00	 mov	 edx, 26014		; 0000659eH
  00231	3b f0		 cmp	 esi, eax
  00233	b9 a4 65 00 00	 mov	 ecx, 26020		; 000065a4H
  00238	0f 45 ca	 cmovne	 ecx, edx
  0023b	51		 push	 ecx
  0023c	6a 66		 push	 102			; 00000066H
  0023e	53		 push	 ebx
  0023f	57		 push	 edi
  00240	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 453  : 		// ?????????
; 454  : 		StockBoxDispBuffer( meterX - 21,

  00245	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  0024c	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
  0024f	6a 02		 push	 2
  00251	68 fa 00 00 00	 push	 250			; 000000faH
  00256	6a 67		 push	 103			; 00000067H
  00258	66 0f 6e 48 78	 movd	 xmm1, DWORD PTR [eax+120]
  0025d	8d 77 eb	 lea	 esi, DWORD PTR [edi-21]
  00260	66 0f 6e 80 80
	00 00 00	 movd	 xmm0, DWORD PTR [eax+128]
  00268	8b cf		 mov	 ecx, edi
  0026a	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  0026e	52		 push	 edx
  0026f	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00273	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00277	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  0027f	f2 0f 2c c1	 cvttsd2si eax, xmm1
  00283	2b c8		 sub	 ecx, eax
  00285	83 e9 15	 sub	 ecx, 21			; 00000015H
  00288	51		 push	 ecx
  00289	52		 push	 edx
  0028a	56		 push	 esi
  0028b	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 455  : 							meterY - 1,
; 456  : 							meterX - 21 + (int)( ( (double)p_party[ no ]->hp / (double)p_party[ no ]->maxHp ) * 40.0 ),
; 457  : 							meterY - 1,
; 458  : 							DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 459  : 
; 460  : 		StockBoxDispBuffer( meterX - 21,

  00290	8b 45 08	 mov	 eax, DWORD PTR _no$[ebp]
  00293	8b cf		 mov	 ecx, edi
  00295	6a 02		 push	 2
  00297	68 fa 00 00 00	 push	 250			; 000000faH
  0029c	6a 67		 push	 103			; 00000067H
  0029e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  002a5	53		 push	 ebx
  002a6	66 0f 6e 48 78	 movd	 xmm1, DWORD PTR [eax+120]
  002ab	66 0f 6e 80 80
	00 00 00	 movd	 xmm0, DWORD PTR [eax+128]
  002b3	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  002b7	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  002bb	f2 0f 5e c8	 divsd	 xmm1, xmm0
  002bf	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  002c7	f2 0f 2c c1	 cvttsd2si eax, xmm1
  002cb	2b c8		 sub	 ecx, eax
  002cd	83 e9 15	 sub	 ecx, 21			; 00000015H
  002d0	51		 push	 ecx
  002d1	53		 push	 ebx
  002d2	56		 push	 esi
  002d3	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 461  : 							meterY + 0,
; 462  : 							meterX - 21 + (int)( ( (double)p_party[ no ]->hp / (double)p_party[ no ]->maxHp ) * 40.0 ),
; 463  : 							meterY + 0,
; 464  : 							DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 465  : 		//cary 秀出骑宠的宠物血量 
; 466  : 		if( p_party[ no ]->onRide > 0 ){

  002d8	8b 75 08	 mov	 esi, DWORD PTR _no$[ebp]
  002db	83 c4 4c	 add	 esp, 76			; 0000004cH
  002de	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  002e5	83 b8 94 01 00
	00 00		 cmp	 DWORD PTR [eax+404], 0
  002ec	0f 8e b0 00 00
	00		 jle	 $LN3@HpMeterDis

; 467  : 			meterY += 25;
; 468  : 			meterX += 20;
; 469  : 			// ?
; 470  : 			StockDispBuffer( meterX , meterY, DISP_PRIO_IME1, CG_BATTLE_BAR_PET, 0 );

  002f2	6a 00		 push	 0
  002f4	68 9e 65 00 00	 push	 26014			; 0000659eH
  002f9	6a 66		 push	 102			; 00000066H
  002fb	83 c3 19	 add	 ebx, 25			; 00000019H
  002fe	83 c7 14	 add	 edi, 20			; 00000014H
  00301	53		 push	 ebx
  00302	57		 push	 edi
  00303	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 471  : 			// ?????????
; 472  : 			StockBoxDispBuffer( meterX - 21,

  00308	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[esi*4]
  0030f	8d 53 ff	 lea	 edx, DWORD PTR [ebx-1]
  00312	6a 02		 push	 2
  00314	68 fa 00 00 00	 push	 250			; 000000faH
  00319	6a 67		 push	 103			; 00000067H
  0031b	66 0f 6e 88 b0
	01 00 00	 movd	 xmm1, DWORD PTR [eax+432]
  00323	8d 77 eb	 lea	 esi, DWORD PTR [edi-21]
  00326	66 0f 6e 80 b4
	01 00 00	 movd	 xmm0, DWORD PTR [eax+436]
  0032e	8b cf		 mov	 ecx, edi
  00330	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  00334	52		 push	 edx
  00335	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00339	f2 0f 5e c8	 divsd	 xmm1, xmm0
  0033d	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  00345	f2 0f 2c c1	 cvttsd2si eax, xmm1
  00349	2b c8		 sub	 ecx, eax
  0034b	83 e9 15	 sub	 ecx, 21			; 00000015H
  0034e	51		 push	 ecx
  0034f	52		 push	 edx
  00350	56		 push	 esi
  00351	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer

; 473  : 								meterY - 1,
; 474  : 								meterX - 21 + (int)( ( (double)p_party[ no ]->petHp / (double)p_party[ no ]->petMaxHp ) * 40.0 ),
; 475  : 								meterY - 1,
; 476  : 								DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 477  : 			// ?????????
; 478  : 			StockBoxDispBuffer( meterX - 21,

  00356	8b 45 08	 mov	 eax, DWORD PTR _no$[ebp]
$LN12@HpMeterDis:

; 479  : 								meterY + 0,
; 480  : 								meterX - 21 + (int)( ( (double)p_party[ no ]->petHp / (double)p_party[ no ]->petMaxHp ) * 40.0 ),
; 481  : 								meterY + 0,
; 482  : 								DISP_PRIO_IME2, SYSTEM_PAL_GREEN, 2 );
; 483  : 		}
; 484  : 	}
; 485  : }

  00359	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  00360	6a 02		 push	 2
  00362	68 fa 00 00 00	 push	 250			; 000000faH
  00367	6a 67		 push	 103			; 00000067H
  00369	66 0f 6e 80 b4
	01 00 00	 movd	 xmm0, DWORD PTR [eax+436]
  00371	66 0f 6e 88 b0
	01 00 00	 movd	 xmm1, DWORD PTR [eax+432]
  00379	f3 0f e6 c9	 cvtdq2pd xmm1, xmm1
  0037d	53		 push	 ebx
  0037e	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00382	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00386	f2 0f 59 0d 00
	00 00 00	 mulsd	 xmm1, QWORD PTR __real@c044000000000000
  0038e	f2 0f 2c c1	 cvttsd2si eax, xmm1
  00392	2b f8		 sub	 edi, eax
  00394	83 ef 15	 sub	 edi, 21			; 00000015H
  00397	57		 push	 edi
  00398	53		 push	 ebx
  00399	56		 push	 esi
  0039a	e8 00 00 00 00	 call	 ?StockBoxDispBuffer@@YAXHHHHEHH@Z ; StockBoxDispBuffer
  0039f	83 c4 4c	 add	 esp, 76			; 0000004cH
$LN3@HpMeterDis:
  003a2	5f		 pop	 edi
  003a3	5e		 pop	 esi
  003a4	5b		 pop	 ebx
  003a5	5d		 pop	 ebp
  003a6	c3		 ret	 0
?HpMeterDisp@@YAXH@Z ENDP				; HpMeterDisp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?CheckBattle1P2P@@YAHXZ
_TEXT	SEGMENT
?CheckBattle1P2P@@YAHXZ PROC				; CheckBattle1P2P, COMDAT

; 200  : 	int i, cnt = 0;

  00000	33 d2		 xor	 edx, edx
  00002	b8 00 00 00 00	 mov	 eax, OFFSET ?p_party@@3PAPAUaction@@A ; p_party
$LL4@CheckBattl:

; 203  : 		// ??????????
; 204  : 		if( p_party[ i ]->func == NULL ) continue;

  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	83 79 08 00	 cmp	 DWORD PTR [ecx+8], 0
  0000d	74 0d		 je	 SHORT $LN2@CheckBattl

; 205  : 		// ???????
; 206  : 		if( ( (ATR_EQU *)p_party[ i ]->pYobi )->pet_ok == TRUE ) cnt++;

  0000f	8b 49 0c	 mov	 ecx, DWORD PTR [ecx+12]
  00012	80 b9 20 01 00
	00 01		 cmp	 BYTE PTR [ecx+288], 1
  00019	75 01		 jne	 SHORT $LN2@CheckBattl
  0001b	42		 inc	 edx
$LN2@CheckBattl:

; 201  : 	// ?????
; 202  : 	for( i = 0 ; i < 20 ; i++ ){

  0001c	83 c0 04	 add	 eax, 4
  0001f	3d 50 00 00 00	 cmp	 eax, OFFSET ?p_party@@3PAPAUaction@@A+80
  00024	7c e1		 jl	 SHORT $LL4@CheckBattl

; 207  : 	}
; 208  : 	if( cnt >= 2 ) return 2;

  00026	33 c0		 xor	 eax, eax
  00028	83 fa 02	 cmp	 edx, 2
  0002b	0f 9d c0	 setge	 al
  0002e	40		 inc	 eax

; 209  : 	else return 1;
; 210  : }

  0002f	c3		 ret	 0
?CheckBattle1P2P@@YAHXZ ENDP				; CheckBattle1P2P
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?CheckBattleAnimFlag@@YAXXZ
_TEXT	SEGMENT
?CheckBattleAnimFlag@@YAXXZ PROC			; CheckBattleAnimFlag, COMDAT

; 215  : 	int i;
; 216  : 	// ????????????????????????????
; 217  : 	if( BattleCliTurnNo != BattleSvTurnNo ){ 

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleCliTurnNo@@3HA ; BattleCliTurnNo
  00005	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?BattleSvTurnNo@@3HA ; BattleSvTurnNo
  0000b	74 42		 je	 SHORT $LN8@CheckBattl

; 218  : 		// ?????
; 219  : 		for( i = 0 ; i < 20 ; i++ ){

  0000d	b9 04 00 00 00	 mov	 ecx, OFFSET ?p_party@@3PAPAUaction@@A+4
$LL4@CheckBattl:

; 220  : 			// ???????
; 221  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  00012	8b 41 fc	 mov	 eax, DWORD PTR [ecx-4]
  00015	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
  0001c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0001e	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
  00025	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00028	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
  0002f	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00032	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
  00039	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0003c	83 c1 14	 add	 ecx, 20			; 00000014H
  0003f	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
  00046	81 f9 54 00 00
	00		 cmp	 ecx, OFFSET ?p_party@@3PAPAUaction@@A+84
  0004c	7c c4		 jl	 SHORT $LL4@CheckBattl

; 230  : 	}
; 231  : }

  0004e	c3		 ret	 0
$LN8@CheckBattl:
  0004f	56		 push	 esi

; 222  : 		}
; 223  : 		return;
; 224  : 	}
; 225  : 	// ?????
; 226  : 	for( i = 0 ; i < 20 ; i++ ){

  00050	b8 02 00 00 00	 mov	 eax, 2
  00055	be 04 00 00 00	 mov	 esi, OFFSET ?p_party@@3PAPAUaction@@A+4
  0005a	66 0f 1f 44 00
	00		 npad	 6
$LL7@CheckBattl:

; 227  : 		// ???????
; 228  : 		if( ( BattleAnimFlag >> i ) & 0x00000001 )

  00060	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleAnimFlag@@3HA ; BattleAnimFlag
  00066	8d 48 fe	 lea	 ecx, DWORD PTR [eax-2]
  00069	d3 fa		 sar	 edx, cl
  0006b	f6 c2 01	 test	 dl, 1
  0006e	74 0a		 je	 SHORT $LN5@CheckBattl

; 229  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  00070	8b 4e fc	 mov	 ecx, DWORD PTR [esi-4]
  00073	83 89 a4 00 00
	00 40		 or	 DWORD PTR [ecx+164], 64	; 00000040H
$LN5@CheckBattl:

; 227  : 		// ???????
; 228  : 		if( ( BattleAnimFlag >> i ) & 0x00000001 )

  0007a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleAnimFlag@@3HA ; BattleAnimFlag
  00080	8d 48 ff	 lea	 ecx, DWORD PTR [eax-1]
  00083	d3 fa		 sar	 edx, cl
  00085	f6 c2 01	 test	 dl, 1
  00088	74 09		 je	 SHORT $LN19@CheckBattl

; 229  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  0008a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0008c	83 89 a4 00 00
	00 40		 or	 DWORD PTR [ecx+164], 64	; 00000040H
$LN19@CheckBattl:

; 227  : 		// ???????
; 228  : 		if( ( BattleAnimFlag >> i ) & 0x00000001 )

  00093	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleAnimFlag@@3HA ; BattleAnimFlag
  00099	8b c8		 mov	 ecx, eax
  0009b	d3 fa		 sar	 edx, cl
  0009d	f6 c2 01	 test	 dl, 1
  000a0	74 0a		 je	 SHORT $LN20@CheckBattl

; 229  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  000a2	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000a5	83 89 a4 00 00
	00 40		 or	 DWORD PTR [ecx+164], 64	; 00000040H
$LN20@CheckBattl:

; 227  : 		// ???????
; 228  : 		if( ( BattleAnimFlag >> i ) & 0x00000001 )

  000ac	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleAnimFlag@@3HA ; BattleAnimFlag
  000b2	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  000b5	d3 fa		 sar	 edx, cl
  000b7	f6 c2 01	 test	 dl, 1
  000ba	74 0a		 je	 SHORT $LN21@CheckBattl

; 229  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  000bc	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  000bf	83 89 a4 00 00
	00 40		 or	 DWORD PTR [ecx+164], 64	; 00000040H
$LN21@CheckBattl:

; 227  : 		// ???????
; 228  : 		if( ( BattleAnimFlag >> i ) & 0x00000001 )

  000c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleAnimFlag@@3HA ; BattleAnimFlag
  000cc	8d 48 02	 lea	 ecx, DWORD PTR [eax+2]
  000cf	d3 fa		 sar	 edx, cl
  000d1	f6 c2 01	 test	 dl, 1
  000d4	74 0a		 je	 SHORT $LN22@CheckBattl

; 229  : 			p_party[ i ]->atr |= ACT_ATR_BTL_CMD_END;

  000d6	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000d9	83 89 a4 00 00
	00 40		 or	 DWORD PTR [ecx+164], 64	; 00000040H
$LN22@CheckBattl:

; 222  : 		}
; 223  : 		return;
; 224  : 	}
; 225  : 	// ?????
; 226  : 	for( i = 0 ; i < 20 ; i++ ){

  000e0	83 c0 05	 add	 eax, 5
  000e3	83 c6 14	 add	 esi, 20			; 00000014H
  000e6	8d 48 fe	 lea	 ecx, DWORD PTR [eax-2]
  000e9	83 f9 14	 cmp	 ecx, 20			; 00000014H
  000ec	0f 8c 6e ff ff
	ff		 jl	 $LL7@CheckBattl

; 230  : 	}
; 231  : }

  000f2	5e		 pop	 esi
  000f3	c3		 ret	 0
?CheckBattleAnimFlag@@YAXXZ ENDP			; CheckBattleAnimFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?InitBattleMenu@@YAXXZ
_TEXT	SEGMENT
?InitBattleMenu@@YAXXZ PROC				; InitBattleMenu, COMDAT

; 156  : 	int i;
; 157  : 	// ???
; 158  : 	for( i = 0 ; i < BATTLE_BUTTON_SUU ; i++ ) battleButtonDispNo[ i ] = -2;

  00000	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00007	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleButtonDispNo@@3PAHA, xmm0
  0000e	c7 05 20 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+32, -2 ; fffffffeH
  00018	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0001f	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?battleButtonDispNo@@3PAHA+16, xmm0
  00026	c7 05 24 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+36, -2 ; fffffffeH

; 159  : 	// 
; 160  : 	for( i = 0 ; i < BATTLE_MENU_JUJUTSU_FONTS ; i++ ) battleMenuJujutsuFontNo[ i ] = -2;
; 161  : 	// ????
; 162  : 	for( i = 0 ; i < BATTLE_MENU_ITEM_FONTS ; i++ ) battleMenuItemFontNo[ i ] = -2;
; 163  : 	// ???
; 164  : 	for( i = 0 ; i < BATTLE_MENU_PET_FONTS ; i++ ) battleMenuPetFontNo[ i ] = -2;

  00030	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00037	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuPetFontNo@@3PAHA, xmm0
  0003e	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA, -2 ; fffffffeH

; 165  : 	// ?
; 166  : 	for( i = 0 ; i < BATTLE_MENU_WAZA_FONTS ; i++ ) battleMenuWazaFontNo[ i ] = -2;

  00048	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  0004f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleMenuWazaFontNo@@3PAHA, xmm0
  00056	c7 05 00 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA, -2 ; fffffffeH
  00060	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  00067	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+4, -2 ; fffffffeH
  00071	c7 05 04 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+4, -2 ; fffffffeH
  0007b	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+8, -2 ; fffffffeH
  00085	c7 05 08 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+8, -2 ; fffffffeH
  0008f	c7 05 0c 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+12, -2 ; fffffffeH
  00099	c7 05 0c 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+12, -2 ; fffffffeH
  000a3	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+16, -2 ; fffffffeH
  000ad	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+16, -2 ; fffffffeH
  000b7	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuJujutsuFontNo@@3PAHA+20, -2 ; fffffffeH
  000c1	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuItemFontNo@@3PAHA+20, -2 ; fffffffeH
  000cb	c7 05 10 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+16, -2 ; fffffffeH
  000d5	c7 05 14 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+20, -2 ; fffffffeH
  000df	c7 05 18 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuPetFontNo@@3PAHA+24, -2 ; fffffffeH
  000e9	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?battleMenuWazaFontNo@@3PAHA+16, xmm0
  000f0	c7 05 20 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleMenuWazaFontNo@@3PAHA+32, -2 ; fffffffeH

; 167  : 
; 168  : 	battleMenuFlag = FALSE;				// ??????????

  000fa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuFlag@@3HA, 0 ; battleMenuFlag

; 169  : 	battleMenuReturn = TRUE;			// ????????????

  00104	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 1

; 170  : //	battleButtonBak = -1;				// ???????
; 171  : 	battleButtonBak2 = -1;				// ????????

  0010e	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleButtonBak2@@3HA, -1

; 172  : 	BattleEscFlag = FALSE;				// ????????

  00118	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleEscFlag@@3HA, 0 ; BattleEscFlag

; 173  : 	// ??????????
; 174  : 	BattleResultWndFlag = FALSE;

  00122	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleResultWndFlag@@3HA, 0 ; BattleResultWndFlag

; 175  : 	// ?????????
; 176  : 	ClearBattleButton();

  0012c	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton

; 177  : 	// ?????????????
; 178  : 	battleButtonBak = 0;
; 179  : #ifdef __AI
; 180  : 	extern int AI_First;
; 181  : 	AI_First = 1;
; 182  : #else
; 183  : 	if( AI != AI_NONE)
; 184  : 		battleButtonBak = -1;
; 185  : #endif
; 186  : 	pActWnd = NULL;				// ????????????
; 187  : 	pActInfoWnd = NULL;
; 188  : 	// ?????????????
; 189  : 	if( battlePetNoBak != -2 ){

  00131	33 c0		 xor	 eax, eax
  00133	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleButtonBak@@3HA, 0 ; battleButtonBak
  0013d	83 3d 00 00 00
	00 fe		 cmp	 DWORD PTR ?battlePetNoBak@@3HA, -2 ; battlePetNoBak, fffffffeH
  00144	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?AI_First@@3HA, 1 ; AI_First
  0014e	0f 94 c0	 sete	 al
  00151	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActWnd@@3PAUaction@@A, 0
  0015b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, 0

; 190  : 		battlePetButtonFlag = FALSE;			// ????????
; 191  : 	}else{
; 192  : 		battlePetButtonFlag = TRUE;			// ????????
; 193  : 	}
; 194  : 
; 195  : }

  00165	a3 00 00 00 00	 mov	 DWORD PTR ?battlePetButtonFlag@@3HA, eax ; battlePetButtonFlag
  0016a	c3		 ret	 0
?InitBattleMenu@@YAXXZ ENDP				; InitBattleMenu
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?ClearBattleButton@@YAXXZ
_TEXT	SEGMENT
?ClearBattleButton@@YAXXZ PROC				; ClearBattleButton, COMDAT

; 343  : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 344  : 	// ????
; 345  : 	memset( battleButtonFlag, 0, sizeof( battleButtonFlag ) );

  00003	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleButtonFlag@@3PAHA, xmm0
  0000a	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?battleButtonFlag@@3PAHA+16, xmm0
  00011	66 0f d6 05 20
	00 00 00	 movq	 QWORD PTR ?battleButtonFlag@@3PAHA+32, xmm0

; 346  : }

  00019	c3		 ret	 0
?ClearBattleButton@@YAXXZ ENDP				; ClearBattleButton
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\battleMenu.cpp
;	COMDAT ?BattleMenuProc@@YAXXZ
_TEXT	SEGMENT
_moji$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?BattleMenuProc@@YAXXZ PROC				; BattleMenuProc, COMDAT

; 3446 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3447 : 	char moji[ 256 ];
; 3448 : 	int i;
; 3449 : 
; 3450 : 	if( BattleMyNo >= 20 ){

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00018	83 f8 14	 cmp	 eax, 20			; 00000014H
  0001b	7c 56		 jl	 SHORT $LN11@BattleMenu

; 3451 : 
; 3452 : 		if( bNewServer)

  0001d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00024	68 00 00 00 00	 push	 OFFSET ??_C@_01NANMIPIL@N@
  00029	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0002f	74 21		 je	 SHORT $LN12@BattleMenu

; 3453 : 			lssproto_B_send( sockfd, "N" );

  00031	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send

; 3456 : 
; 3457 : 		InitBattleAnimFlag();

  00036	83 c4 08	 add	 esp, 8
  00039	e8 00 00 00 00	 call	 ?InitBattleAnimFlag@@YAXXZ ; InitBattleAnimFlag

; 3458 : 
; 3459 : 		SubProcNo++;

  0003e	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo

; 3784 : }

  00044	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00047	33 cd		 xor	 ecx, ebp
  00049	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
$LN12@BattleMenu:

; 3454 : 		else
; 3455 : 			old_lssproto_B_send( sockfd, "N" );

  00052	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send

; 3456 : 
; 3457 : 		InitBattleAnimFlag();

  00057	83 c4 08	 add	 esp, 8
  0005a	e8 00 00 00 00	 call	 ?InitBattleAnimFlag@@YAXXZ ; InitBattleAnimFlag

; 3458 : 
; 3459 : 		SubProcNo++;

  0005f	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo

; 3784 : }

  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
$LN11@BattleMenu:
  00073	56		 push	 esi

; 3460 : 		return;
; 3461 : 	}
; 3462 : 
; 3463 : 	if( BattleMyNo < 10 ){

  00074	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00077	7d 18		 jge	 SHORT $LN93@BattleMenu

; 3464 : 		//for( i  = 0 ; i < 10 ; i++ ) HpMeterDisp( i ); // ??????
; 3465 : 		for (i = 0; i < 10; i++) HpMeterDisp(i); // ??????

  00079	33 f6		 xor	 esi, esi
  0007b	0f 1f 44 00 00	 npad	 5
$LL4@BattleMenu:
  00080	56		 push	 esi
  00081	e8 00 00 00 00	 call	 ?HpMeterDisp@@YAXH@Z	; HpMeterDisp
  00086	46		 inc	 esi
  00087	83 c4 04	 add	 esp, 4
  0008a	83 fe 0a	 cmp	 esi, 10			; 0000000aH
  0008d	7c f1		 jl	 SHORT $LL4@BattleMenu

; 3466 : 	}

  0008f	eb 14		 jmp	 SHORT $LN6@BattleMenu
$LN93@BattleMenu:

; 3467 : 	else  if( BattleMyNo >= 10 ){ 
; 3468 : 		//for( i = 10 ; i < 20 ; i++ ) HpMeterDisp( i ); // ??????
; 3469 : 		for (i = 11; i < 20; i++) HpMeterDisp(i); // ??????

  00091	be 0b 00 00 00	 mov	 esi, 11			; 0000000bH
$LL7@BattleMenu:
  00096	56		 push	 esi
  00097	e8 00 00 00 00	 call	 ?HpMeterDisp@@YAXH@Z	; HpMeterDisp
  0009c	46		 inc	 esi
  0009d	83 c4 04	 add	 esp, 4
  000a0	83 fe 14	 cmp	 esi, 20			; 00000014H
  000a3	7c f1		 jl	 SHORT $LL7@BattleMenu
$LN6@BattleMenu:

; 3470 : 	}
; 3471 : 
; 3472 : 	if( p_party[ BattleMyNo ]->hp > 0 && 

  000a5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  000aa	5e		 pop	 esi
  000ab	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  000b2	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  000b6	7e 34		 jle	 SHORT $LN95@BattleMenu
  000b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleBpFlag@@3HA ; BattleBpFlag
  000bd	83 e0 0a	 and	 eax, 10			; 0000000aH
  000c0	3c 0a		 cmp	 al, 10			; 0000000aH
  000c2	74 28		 je	 SHORT $LN95@BattleMenu

; 3473 : 		!( BattleBpFlag & BATTLE_BP_PLAYER_MENU_NON && BattleBpFlag & BATTLE_BP_PET_MENU_NON ) ){
; 3474 : 
; 3475 : 		if( battleTargetSelectFlag ){ 

  000c4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0
  000cb	74 07		 je	 SHORT $LN19@BattleMenu

; 3476 : 			BattleTargetSelect();

  000cd	e8 00 00 00 00	 call	 ?BattleTargetSelect@@YAXXZ ; BattleTargetSelect

; 3477 : 		}else{

  000d2	eb 18		 jmp	 SHORT $LN95@BattleMenu
$LN19@BattleMenu:

; 3478 : 
; 3479 : 			DeathAction( pActInfoWnd );

  000d4	ff 35 00 00 00
	00		 push	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A
  000da	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000df	83 c4 04	 add	 esp, 4

; 3480 : 			pActInfoWnd = NULL;

  000e2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActInfoWnd@@3PAUaction@@A, 0
$LN95@BattleMenu:

; 3481 : 		}
; 3482 : 	}
; 3483 : 
; 3484 : 	if( battleMenuFlag2 == TRUE ){

  000ec	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?battleMenuFlag2@@3HA, 1 ; battleMenuFlag2
  000f3	0f 85 7a 01 00
	00		 jne	 $LN96@BattleMenu

; 3485 : 		buttonX = 815 + DISPLACEMENT_X;

  000f9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  000fe	05 2f 03 00 00	 add	 eax, 815		; 0000032fH

; 3486 : 		buttonY = 65 ;

  00103	c7 05 00 00 00
	00 41 00 00 00	 mov	 DWORD PTR ?buttonY@@3HA, 65 ; 00000041H
  0010d	a3 00 00 00 00	 mov	 DWORD PTR ?buttonX@@3HA, eax

; 3487 : 		buttonA = 25;

  00112	c7 05 00 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?buttonA@@3HA, 25 ; 00000019H

; 3488 : 
; 3489 : 		InitBattleAnimFlag();

  0011c	e8 00 00 00 00	 call	 ?InitBattleAnimFlag@@YAXXZ ; InitBattleAnimFlag

; 3490 : 
; 3491 : 		battlePlayerEscFlag = FALSE;

  00121	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battlePlayerEscFlag@@3HA, 0 ; battlePlayerEscFlag

; 3492 : 
; 3493 : 		BattleCntDownFlag = TRUE;

  0012b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?BattleCntDownFlag@@3HA, 1 ; BattleCntDownFlag

; 3494 : 
; 3495 : 		//JL 2016.9.16 战斗时间120秒
; 3496 : //		BattleCntDown = TimeGetTime() + 120999;
; 3497 : 		BattleCntDown = TimeGetTime() + 30999;

  00135	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0013a	05 17 79 00 00	 add	 eax, 30999		; 00007917H

; 3498 : 
; 3499 : 		BattleIntervalCnt = 0;

  0013f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleIntervalCnt@@3KA, 0 ; BattleIntervalCnt
  00149	a3 00 00 00 00	 mov	 DWORD PTR ?BattleCntDown@@3KA, eax ; BattleCntDown

; 3500 : 
; 3501 : 		if( pc.battlePetNo == battlePetNoBak ){

  0014e	0f bf 05 aa 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+170
  00155	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  0015b	75 0e		 jne	 SHORT $LN22@BattleMenu

; 3502 : 
; 3503 : 			if( battleWazaTargetBak != -1 ){

  0015d	33 c0		 xor	 eax, eax
  0015f	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak
  00166	0f 94 c0	 sete	 al

; 3504 : 				battlePetButtonFlag = FALSE;
; 3505 : 			}else{
; 3506 : 				battlePetButtonFlag = TRUE;
; 3507 : 			}
; 3508 : 		}else{

  00169	eb 0f		 jmp	 SHORT $LN23@BattleMenu
$LN22@BattleMenu:

; 3509 : 			battlePetButtonFlag = TRUE;
; 3510 : 			battleWazaTargetBak = -1;

  0016b	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak
  00175	b8 01 00 00 00	 mov	 eax, 1
$LN23@BattleMenu:

; 3511 : 		}
; 3512 : 
; 3513 : 		if( p_party[ BattleMyNo ]->hp <= 0 ||

  0017a	a3 00 00 00 00	 mov	 DWORD PTR ?battlePetButtonFlag@@3HA, eax ; battlePetButtonFlag
  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  00184	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0018b	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleBpFlag@@3HA ; BattleBpFlag
  00194	7e 77		 jle	 SHORT $LN28@BattleMenu
  00196	a8 02		 test	 al, 2
  00198	75 77		 jne	 SHORT $LN104@BattleMenu

; 3527 : 		}else{
; 3528 : 
; 3529 : 			battleMenuFlag |= BATTLE_MENU; 

  0019a	83 0d 00 00 00
	00 01		 or	 DWORD PTR ?battleMenuFlag@@3HA, 1 ; battleMenuFlag

; 3530 : 
; 3531 : 			battleMenuReturn = FALSE; 
; 3532 : 
; 3533 : 			battleTimeUpFlag = FALSE;
; 3534 : 
; 3535 : 			play_se( 202, 320, 240 );

  001a1	68 f0 00 00 00	 push	 240			; 000000f0H
  001a6	68 40 01 00 00	 push	 320			; 00000140H
  001ab	68 ca 00 00 00	 push	 202			; 000000caH
  001b0	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 0
  001ba	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTimeUpFlag@@3HA, 0
  001c4	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se

; 3536 : 
; 3537 : 			for( i = 0 ; i < BATTLE_BUTTON_SUU ; i++ ) battleButtonDispNo[ i ] = -2;

  001c9	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  001d0	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d3	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?battleButtonDispNo@@3PAHA, xmm0
  001da	c7 05 20 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+32, -2 ; fffffffeH
  001e4	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe
  001eb	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?battleButtonDispNo@@3PAHA+16, xmm0
  001f2	c7 05 24 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+36, -2 ; fffffffeH

; 3538 : 
; 3539 : 			ClearBoxFlag();

  001fc	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 3540 : 
; 3541 : 			battleButtonBak2 = battleButtonBak;

  00201	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonBak@@3HA ; battleButtonBak
  00206	a3 00 00 00 00	 mov	 DWORD PTR ?battleButtonBak2@@3HA, eax
  0020b	eb 44		 jmp	 SHORT $LN27@BattleMenu
$LN28@BattleMenu:

; 3514 : 
; 3515 : 			BattleBpFlag & BATTLE_BP_PLAYER_MENU_NON ){ 
; 3516 : 
; 3517 : 			if( BattleBpFlag & BATTLE_BP_PLAYER_MENU_NON ){ 

  0020d	a8 02		 test	 al, 2
  0020f	74 23		 je	 SHORT $LN31@BattleMenu
$LN104@BattleMenu:

; 3518 : 				if( bNewServer)

  00211	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00218	68 00 00 00 00	 push	 OFFSET ??_C@_01NANMIPIL@N@
  0021d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00223	74 07		 je	 SHORT $LN30@BattleMenu

; 3519 : 					lssproto_B_send( sockfd, "N" );

  00225	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  0022a	eb 05		 jmp	 SHORT $LN105@BattleMenu
$LN30@BattleMenu:

; 3520 : 				else
; 3521 : 					old_lssproto_B_send( sockfd, "N" );

  0022c	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN105@BattleMenu:

; 3522 : 			}
; 3523 : 
; 3524 : 			p_party[ BattleMyNo ]->atr |= ACT_ATR_BTL_CMD_END;

  00231	83 c4 08	 add	 esp, 8
$LN31@BattleMenu:
  00234	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo

; 3525 : 
; 3526 : 			battlePetMenuFlag = TRUE;

  00239	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battlePetMenuFlag@@3HA, 1
  00243	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4]
  0024a	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H
$LN27@BattleMenu:

; 3542 : 		}
; 3543 : 
; 3544 : 		battlePetNoBak = pc.battlePetNo;

  00251	0f bf 05 aa 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+170

; 3545 : 		battlePetNoBak2 = pc.battlePetNo;
; 3546 : 
; 3547 : 		battleMenuFlag2 = FALSE;
; 3548 : 
; 3549 : 		BattleBpFlag &= ~BATTLE_BP_PLAYER_MENU_NON;

  00258	83 25 00 00 00
	00 fd		 and	 DWORD PTR ?BattleBpFlag@@3HA, -3 ; BattleBpFlag, fffffffdH
  0025f	a3 00 00 00 00	 mov	 DWORD PTR ?battlePetNoBak@@3HA, eax ; battlePetNoBak
  00264	a3 00 00 00 00	 mov	 DWORD PTR ?battlePetNoBak2@@3HA, eax ; battlePetNoBak2
  00269	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuFlag2@@3HA, 0 ; battleMenuFlag2
$LN96@BattleMenu:

; 3550 : 	}
; 3551 : 
; 3552 : 	if( battleMenuFlag & BATTLE_MENU ){ 

  00273	f6 05 00 00 00
	00 01		 test	 BYTE PTR ?battleMenuFlag@@3HA, 1
  0027a	0f 84 08 03 00
	00		 je	 $LN98@BattleMenu

; 3553 : 
; 3554 : 		if( battleMenuReturn == FALSE ){

  00280	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?battleMenuReturn@@3HA, 0
  00287	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonA@@3HA
  0028c	75 4d		 jne	 SHORT $LN33@BattleMenu

; 3555 : 			if( buttonA > 0 ){

  0028e	85 c0		 test	 eax, eax
  00290	7e 0c		 jle	 SHORT $LN35@BattleMenu

; 3556 : 				buttonA--;

  00292	48		 dec	 eax

; 3557 : 				buttonX -= buttonA;

  00293	29 05 00 00 00
	00		 sub	 DWORD PTR ?buttonX@@3HA, eax
  00299	a3 00 00 00 00	 mov	 DWORD PTR ?buttonA@@3HA, eax
$LN35@BattleMenu:

; 3558 : 			}
; 3559 : /*
; 3560 : #ifndef __AI
; 3561 : 			if( !PauseAI && AI!=AI_NONE && battleButtonBak==-1 && (BattleCntDown-TimeGetTime())<=29500){
; 3562 : 				DWORD ai = AI;
; 3563 : 				if( ai == AI_SELECT){
; 3564 : 					if( p_party[ BattleMyNo ]->maxHp*3/10 < p_party[ BattleMyNo ]->hp)
; 3565 : 						ai = AI_ATTACK;
; 3566 : 					else if( p_party[ BattleMyNo ]->maxHp*15/100 < p_party[ BattleMyNo ]->hp)
; 3567 : 						ai = AI_GUARD;
; 3568 : 					else
; 3569 : 						ai = AI_ESCAPE;
; 3570 : 				}
; 3571 : 				BattleIntervalCnt = TimeGetTime() + 500;
; 3572 : 				if( ai==AI_ATTACK && battleButtonDispNo[ 0 ]!=-2){
; 3573 : 					mouse.onceState = MOUSE_LEFT_CRICK;
; 3574 : 					HitDispNo = battleButtonDispNo[ 0 ];
; 3575 : 				}else if( ai==AI_GUARD && battleButtonDispNo[ 4 ]!=-2){
; 3576 : 					mouse.onceState = MOUSE_LEFT_CRICK;
; 3577 : 					HitDispNo = battleButtonDispNo[ 4 ];
; 3578 : 				}else if( ai==AI_ESCAPE && battleButtonDispNo[ 7 ]!=-2){
; 3579 : 					mouse.onceState = MOUSE_LEFT_CRICK;
; 3580 : 					HitDispNo = battleButtonDispNo[ 7 ];
; 3581 : 				}
; 3582 : 			}
; 3583 : #endif
; 3584 : */
; 3585 : 
; 3586 : 			BattleButtonAttack();

  0029e	e8 00 00 00 00	 call	 ?BattleButtonAttack@@YAXXZ ; BattleButtonAttack

; 3587 : 			BattleButtonJujutsu();

  002a3	e8 00 00 00 00	 call	 ?BattleButtonJujutsu@@YAXXZ ; BattleButtonJujutsu

; 3588 : 			BattleButtonCapture();

  002a8	e8 00 00 00 00	 call	 ?BattleButtonCapture@@YAXXZ ; BattleButtonCapture

; 3589 : 			BattleButtonHelp();

  002ad	e8 00 00 00 00	 call	 ?BattleButtonHelp@@YAXXZ ; BattleButtonHelp

; 3590 : 			BattleButtonGuard();

  002b2	e8 00 00 00 00	 call	 ?BattleButtonGuard@@YAXXZ ; BattleButtonGuard

; 3591 : 			BattleButtonItem();

  002b7	e8 00 00 00 00	 call	 ?BattleButtonItem@@YAXXZ ; BattleButtonItem

; 3592 : 			BattleButtonPet();

  002bc	e8 00 00 00 00	 call	 ?BattleButtonPet@@YAXXZ	; BattleButtonPet

; 3593 : 			BattleButtonEscape();

  002c1	e8 00 00 00 00	 call	 ?BattleButtonEscape@@YAXXZ ; BattleButtonEscape

; 3594 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3595 : 			BattleButtonPPLSKILL();

  002c6	e8 00 00 00 00	 call	 ?BattleButtonPPLSKILL@@YAXXZ ; BattleButtonPPLSKILL

; 3596 : #endif
; 3597 : 
; 3598 : 			if( mouse.onceState & MOUSE_RIGHT_CRICK ) BattleButtonOff();

  002cb	f6 05 2c 00 00
	00 02		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 2
  002d2	74 5d		 je	 SHORT $LN38@BattleMenu
  002d4	e8 00 00 00 00	 call	 ?BattleButtonOff@@YAXXZ	; BattleButtonOff

; 3599 : 		}else{

  002d9	eb 56		 jmp	 SHORT $LN38@BattleMenu
$LN33@BattleMenu:

; 3600 : 			if( buttonA <= 25 ){

  002db	83 f8 19	 cmp	 eax, 25			; 00000019H
  002de	7f 0e		 jg	 SHORT $LN37@BattleMenu

; 3601 : 				buttonA++;

  002e0	40		 inc	 eax

; 3602 : 				buttonX += buttonA;

  002e1	01 05 00 00 00
	00		 add	 DWORD PTR ?buttonX@@3HA, eax
  002e7	a3 00 00 00 00	 mov	 DWORD PTR ?buttonA@@3HA, eax

; 3603 : 			}else{

  002ec	eb 43		 jmp	 SHORT $LN38@BattleMenu
$LN37@BattleMenu:

; 3604 : 
; 3605 : 				ClearBoxFlag();

  002ee	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 3606 : 
; 3607 : 				battleTargetSelectFlag = FALSE;
; 3608 : 				battleMenuFlag = FALSE;
; 3609 : 
; 3610 : 				if( BattleCntDownFlag == TRUE ){

  002f3	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?BattleCntDownFlag@@3HA, 1 ; BattleCntDownFlag
  002fa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0
  00304	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuFlag@@3HA, 0 ; battleMenuFlag
  0030e	75 0c		 jne	 SHORT $LN39@BattleMenu

; 3611 : 					battlePetMenuFlag = TRUE;

  00310	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battlePetMenuFlag@@3HA, 1

; 3612 : 				}else{

  0031a	eb 06		 jmp	 SHORT $LN40@BattleMenu
$LN39@BattleMenu:

; 3613 : 					SubProcNo++;

  0031c	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN40@BattleMenu:

; 3614 : 				}
; 3615 : 
; 3616 : 				BattleCmdNo = -1;

  00322	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?BattleCmdNo@@3HA, -1 ; BattleCmdNo

; 3617 : 
; 3618 : 				ClearBattleButton();

  0032c	e8 00 00 00 00	 call	 ?ClearBattleButton@@YAXXZ ; ClearBattleButton
$LN38@BattleMenu:

; 3619 : 			}
; 3620 : 		}
; 3621 : 
; 3622 : 			battleButtonDispNo[ 0 ] = StockDispBuffer( buttonX-74, buttonY-22, DISP_PRIO_IME3, CG_BTL_BUTTON_ATTACK_UP 	+ battleButtonFlag[ 0 ], 2 );

  00331	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA
  00336	05 0c 62 00 00	 add	 eax, 25100		; 0000620cH
  0033b	6a 02		 push	 2
  0033d	50		 push	 eax
  0033e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  00343	83 c0 ea	 add	 eax, -22		; ffffffeaH
  00346	6a 69		 push	 105			; 00000069H
  00348	50		 push	 eax
  00349	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  0034e	83 c0 b6	 add	 eax, -74		; ffffffb6H
  00351	50		 push	 eax
  00352	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00357	a3 00 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA, eax

; 3623 : 			battleButtonDispNo[ 1 ] = StockDispBuffer( buttonX-24, buttonY-22, DISP_PRIO_IME3, CG_BTL_BUTTON_JUJUTU_UP 	+ battleButtonFlag[ 1 ], 2 );

  0035c	a1 04 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+4
  00361	05 0e 62 00 00	 add	 eax, 25102		; 0000620eH
  00366	6a 02		 push	 2
  00368	50		 push	 eax
  00369	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0036e	83 c0 ea	 add	 eax, -22		; ffffffeaH
  00371	6a 69		 push	 105			; 00000069H
  00373	50		 push	 eax
  00374	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  00379	83 c0 e8	 add	 eax, -24		; ffffffe8H
  0037c	50		 push	 eax
  0037d	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00382	a3 04 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+4, eax

; 3624 : 			battleButtonDispNo[ 2 ] = StockDispBuffer( buttonX+26, buttonY-22, DISP_PRIO_IME3, CG_BTL_BUTTON_CAPTURE_UP 	+ battleButtonFlag[ 2 ], 2 );

  00387	a1 08 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+8
  0038c	05 10 62 00 00	 add	 eax, 25104		; 00006210H
  00391	6a 02		 push	 2
  00393	50		 push	 eax
  00394	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  00399	83 c0 ea	 add	 eax, -22		; ffffffeaH
  0039c	6a 69		 push	 105			; 00000069H
  0039e	50		 push	 eax
  0039f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  003a4	83 c0 1a	 add	 eax, 26			; 0000001aH
  003a7	50		 push	 eax
  003a8	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003ad	a3 08 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+8, eax

; 3625 : 			battleButtonDispNo[ 3 ] = StockDispBuffer( buttonX+76, buttonY-22, DISP_PRIO_IME3, CG_BTL_BUTTON_HELP_UP 		+ helpFlag, 2 );

  003b2	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?helpFlag@@3FA ; helpFlag
  003b9	05 12 62 00 00	 add	 eax, 25106		; 00006212H
  003be	6a 02		 push	 2
  003c0	50		 push	 eax
  003c1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  003c6	83 c0 ea	 add	 eax, -22		; ffffffeaH
  003c9	6a 69		 push	 105			; 00000069H
  003cb	50		 push	 eax
  003cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  003d1	83 c0 4c	 add	 eax, 76			; 0000004cH
  003d4	50		 push	 eax
  003d5	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  003da	83 c4 50	 add	 esp, 80			; 00000050H
  003dd	a3 0c 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+12, eax

; 3626 : 			battleButtonDispNo[ 4 ] = StockDispBuffer( buttonX-74, buttonY+28, DISP_PRIO_IME3, CG_BTL_BUTTON_GUARD_UP 	+ battleButtonFlag[ 4 ], 2 );

  003e2	a1 10 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+16
  003e7	05 14 62 00 00	 add	 eax, 25108		; 00006214H
  003ec	6a 02		 push	 2
  003ee	50		 push	 eax
  003ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  003f4	83 c0 1c	 add	 eax, 28			; 0000001cH
  003f7	6a 69		 push	 105			; 00000069H
  003f9	50		 push	 eax
  003fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  003ff	83 c0 b6	 add	 eax, -74		; ffffffb6H
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00408	a3 10 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+16, eax

; 3627 : 			battleButtonDispNo[ 5 ] = StockDispBuffer( buttonX-24, buttonY+28, DISP_PRIO_IME3, CG_BTL_BUTTON_ITEM_UP 		+ battleButtonFlag[ 5 ], 2 );

  0040d	a1 14 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+20
  00412	05 16 62 00 00	 add	 eax, 25110		; 00006216H
  00417	6a 02		 push	 2
  00419	50		 push	 eax
  0041a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0041f	83 c0 1c	 add	 eax, 28			; 0000001cH
  00422	6a 69		 push	 105			; 00000069H
  00424	50		 push	 eax
  00425	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  0042a	83 c0 e8	 add	 eax, -24		; ffffffe8H
  0042d	50		 push	 eax
  0042e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00433	a3 14 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+20, eax

; 3628 : 			battleButtonDispNo[ 6 ] = StockDispBuffer( buttonX+26, buttonY+28, DISP_PRIO_IME3, CG_BTL_BUTTON_PET_UP 		+ battleButtonFlag[ 6 ], 2 );

  00438	a1 18 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+24
  0043d	6a 02		 push	 2
  0043f	05 18 62 00 00	 add	 eax, 25112		; 00006218H
  00444	50		 push	 eax
  00445	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0044a	83 c0 1c	 add	 eax, 28			; 0000001cH
  0044d	6a 69		 push	 105			; 00000069H
  0044f	50		 push	 eax
  00450	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  00455	83 c0 1a	 add	 eax, 26			; 0000001aH
  00458	50		 push	 eax
  00459	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0045e	a3 18 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+24, eax

; 3629 : 			battleButtonDispNo[ 7 ] = StockDispBuffer( buttonX+76, buttonY+28, DISP_PRIO_IME3, CG_BTL_BUTTON_ESCAPE_UP 	+ battleButtonFlag[ 7 ], 2 );

  00463	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+28
  00468	05 1a 62 00 00	 add	 eax, 25114		; 0000621aH
  0046d	6a 02		 push	 2
  0046f	50		 push	 eax
  00470	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  00475	83 c0 1c	 add	 eax, 28			; 0000001cH
  00478	6a 69		 push	 105			; 00000069H
  0047a	50		 push	 eax
  0047b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  00480	83 c0 4c	 add	 eax, 76			; 0000004cH
  00483	50		 push	 eax
  00484	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00489	83 c4 50	 add	 esp, 80			; 00000050H
  0048c	a3 1c 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+28, eax

; 3630 : 			StockDispBuffer( buttonX, buttonY, DISP_PRIO_MENU, CG_BTL_BUTTON_BASE, 0 );

  00491	6a 00		 push	 0
  00493	68 1c 62 00 00	 push	 25116			; 0000621cH
  00498	6a 68		 push	 104			; 00000068H
  0049a	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonY@@3HA
  004a0	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonX@@3HA
  004a6	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004ab	83 c4 14	 add	 esp, 20			; 00000014H

; 3631 : 
; 3632 : 
; 3633 : 
; 3634 : 
; 3635 : 		if( CheckPetSuu() >= 5 ){//抓宠物的X

  004ae	e8 00 00 00 00	 call	 ?CheckPetSuu@@YAHXZ	; CheckPetSuu
  004b3	83 f8 05	 cmp	 eax, 5
  004b6	7c 23		 jl	 SHORT $LN41@BattleMenu

; 3636 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3637 : 
; 3638 : 			StockDispBuffer( buttonX + 26, buttonY - 20, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );

  004b8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  004bd	6a 00		 push	 0
  004bf	68 1d 62 00 00	 push	 25117			; 0000621dH
  004c4	83 c0 ec	 add	 eax, -20		; ffffffecH
  004c7	6a 6a		 push	 106			; 0000006aH
  004c9	50		 push	 eax
  004ca	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  004cf	83 c0 1a	 add	 eax, 26			; 0000001aH
  004d2	50		 push	 eax
  004d3	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  004d8	83 c4 14	 add	 esp, 20			; 00000014H
$LN41@BattleMenu:

; 3639 : 
; 3640 : #else
; 3641 : 			StockDispBuffer( buttonX + 28, buttonY - 18, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );
; 3642 : #endif
; 3643 : 		}
; 3644 : #ifdef _LOCKHELP_OK				// (不可开) Syu ADD 锁定不可加入战斗
; 3645 : 		extern int nowFloor;
; 3646 : 		if((nowFloor <= 8213 && nowFloor >= 8200) ||

  004db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowFloor@@3HA ; nowFloor
  004e0	3d 15 20 00 00	 cmp	 eax, 8213		; 00002015H
  004e5	7f 07		 jg	 SHORT $LN44@BattleMenu
  004e7	3d 08 20 00 00	 cmp	 eax, 8200		; 00002008H
  004ec	7d 0a		 jge	 SHORT $LN43@BattleMenu
$LN44@BattleMenu:
  004ee	05 bf 8a ff ff	 add	 eax, -30017		; ffff8abfH
  004f3	83 f8 04	 cmp	 eax, 4
  004f6	77 0c		 ja	 SHORT $LN42@BattleMenu
$LN43@BattleMenu:

; 3647 : 			 (nowFloor >= 30017 && nowFloor <= 30021)
; 3648 : 		)	NoHelpFlag = TRUE ; 

  004f8	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?NoHelpFlag@@3HA, 1 ; NoHelpFlag

; 3649 : #endif
; 3650 : 
; 3651 : 
; 3652 : 		if( NoHelpFlag == TRUE ){//不可帮助

  00502	eb 09		 jmp	 SHORT $LN94@BattleMenu
$LN42@BattleMenu:
  00504	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?NoHelpFlag@@3HA, 1 ; NoHelpFlag
  0050b	75 23		 jne	 SHORT $LN45@BattleMenu
$LN94@BattleMenu:

; 3653 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3654 : 
; 3655 : 			
; 3656 : 				StockDispBuffer( buttonX + 26 + 54, buttonY - 20 , DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );

  0050d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  00512	6a 00		 push	 0
  00514	68 1d 62 00 00	 push	 25117			; 0000621dH
  00519	83 c0 ec	 add	 eax, -20		; ffffffecH
  0051c	6a 6a		 push	 106			; 0000006aH
  0051e	50		 push	 eax
  0051f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  00524	83 c0 50	 add	 eax, 80			; 00000050H
  00527	50		 push	 eax
  00528	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0052d	83 c4 14	 add	 esp, 20			; 00000014H
$LN45@BattleMenu:

; 3657 : 
; 3658 : 
; 3659 : #else
; 3660 : 			StockDispBuffer( buttonX + 28 + 54, buttonY - 18, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );
; 3661 : #endif
; 3662 : 		}
; 3663 : 
; 3664 : 		if (NoEscFlag == TRUE)

  00530	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?NoEscFlag@@3HA, 1 ; NoEscFlag
  00537	75 23		 jne	 SHORT $LN46@BattleMenu

; 3665 : 		{
; 3666 : 			StockDispBuffer(buttonX + 76, buttonY + 28, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0);

  00539	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0053e	6a 00		 push	 0
  00540	68 1d 62 00 00	 push	 25117			; 0000621dH
  00545	83 c0 1c	 add	 eax, 28			; 0000001cH
  00548	6a 6a		 push	 106			; 0000006aH
  0054a	50		 push	 eax
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  00550	83 c0 4c	 add	 eax, 76			; 0000004cH
  00553	50		 push	 eax
  00554	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00559	83 c4 14	 add	 esp, 20			; 00000014H
$LN46@BattleMenu:

; 3667 : 		}
; 3668 : #ifdef _MAGIC_NOCAST
; 3669 : 		if( NoCastFlag == TRUE ){

  0055c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?NoCastFlag@@3HA, 1 ; NoCastFlag
  00563	75 23		 jne	 SHORT $LN98@BattleMenu

; 3670 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3671 : 
; 3672 : 
; 3673 : 				StockDispBuffer( buttonX + 26 -54 - 14, buttonY - 20, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );

  00565	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0056a	6a 00		 push	 0
  0056c	68 1d 62 00 00	 push	 25117			; 0000621dH
  00571	83 c0 ec	 add	 eax, -20		; ffffffecH
  00574	6a 6a		 push	 106			; 0000006aH
  00576	50		 push	 eax
  00577	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  0057c	83 c0 d6	 add	 eax, -42		; ffffffd6H
  0057f	50		 push	 eax
  00580	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00585	83 c4 14	 add	 esp, 20			; 00000014H
$LN98@BattleMenu:

; 3674 : 			
; 3675 : 
; 3676 : #else
; 3677 : 			StockDispBuffer( buttonX + 28 -54, buttonY - 18, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );
; 3678 : #endif
; 3679 : 		}
; 3680 : #endif
; 3681 : 	}
; 3682 : 
; 3683 : 	if( battlePetMenuFlag == TRUE ){

  00588	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?battlePetMenuFlag@@3HA, 1
  0058f	0f 85 5a 01 00
	00		 jne	 $LN100@BattleMenu

; 3684 : 		buttonX = 815 + DISPLACEMENT_X;

  00595	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X

; 3685 : 		buttonY = 48;
; 3686 : 		buttonA = 25;

  0059a	b9 19 00 00 00	 mov	 ecx, 25			; 00000019H
  0059f	05 2f 03 00 00	 add	 eax, 815		; 0000032fH
  005a4	c7 05 00 00 00
	00 30 00 00 00	 mov	 DWORD PTR ?buttonY@@3HA, 48 ; 00000030H

; 3687 : 
; 3688 : 		if( battlePetNoBak <= -1 || p_party[ BattleMyNo + 5 ]->hp <= 0 ){

  005ae	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?battlePetNoBak@@3HA, -1 ; battlePetNoBak
  005b5	a3 00 00 00 00	 mov	 DWORD PTR ?buttonX@@3HA, eax
  005ba	89 0d 00 00 00
	00		 mov	 DWORD PTR ?buttonA@@3HA, ecx
  005c0	0f 8e 06 01 00
	00		 jle	 $LN51@BattleMenu
  005c6	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  005cc	8b 04 95 14 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[edx*4+20]
  005d3	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  005d7	0f 8e ef 00 00
	00		 jle	 $LN51@BattleMenu

; 3689 : 			BattleCntDownFlag = FALSE;
; 3690 : 			SubProcNo++;
; 3691 : 		}else if( BattleBpFlag & BATTLE_BP_PET_MENU_NON || p_party[ BattleMyNo ]->hp <= 0 || battlePlayerEscFlag == TRUE ){

  005dd	f6 05 00 00 00
	00 08		 test	 BYTE PTR ?BattleBpFlag@@3HA, 8
  005e4	0f 85 b9 00 00
	00		 jne	 $LN54@BattleMenu
  005ea	8b 04 95 00 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[edx*4]
  005f1	83 78 78 00	 cmp	 DWORD PTR [eax+120], 0
  005f5	0f 8e a8 00 00
	00		 jle	 $LN54@BattleMenu
  005fb	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?battlePlayerEscFlag@@3HA, 1 ; battlePlayerEscFlag
  00602	0f 84 9b 00 00
	00		 je	 $LN54@BattleMenu

; 3700 : 			battleMenuFlag |= BATTLE_MENU_PET;

  00608	83 0d 00 00 00
	00 02		 or	 DWORD PTR ?battleMenuFlag@@3HA, 2 ; battleMenuFlag

; 3701 : 
; 3702 : 			battleMenuReturn = FALSE; 
; 3703 : 
; 3704 : 			play_se( 202, 320, 240 );

  0060f	68 f0 00 00 00	 push	 240			; 000000f0H
  00614	68 40 01 00 00	 push	 320			; 00000140H
  00619	68 ca 00 00 00	 push	 202			; 000000caH
  0061e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuReturn@@3HA, 0
  00628	e8 00 00 00 00	 call	 ?play_se@@YAHHHH@Z	; play_se
  0062d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3705 : 
; 3706 : 			ClearBoxFlag();

  00630	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 3707 : 
; 3708 : #ifdef _PETSKILL_DAMAGETOHP	  // 宠技:浴血狂狼(嗜血技的变体) 
; 3709 : 			if( battleWazaTargetBak != -1 ){//上一回合的技能编号

  00635	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?battleWazaTargetBak@@3HA ; battleWazaTargetBak
  0063b	83 fa ff	 cmp	 edx, -1
  0063e	74 5b		 je	 SHORT $LN99@BattleMenu

; 3710 : 				//为了避免当这个技能不可使用时,却被当成已选择,所以再让使用者再选一次
; 3711 : 				if( petSkill[battlePetNoBak][battleWazaTargetBak].field == 2 //被标示为不可选
; 3712 : 					|| petSkill[battlePetNoBak][battleWazaTargetBak].skillId == 0 //Change fix 人物使用针针相对或暴风雨时,若宠接着选防守或待机,则接下来宠物的选单不会出来,这里强制让选单出现
; 3713 : 					|| petSkill[battlePetNoBak][battleWazaTargetBak].skillId == 2 ){ 

  00640	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  00645	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0064c	2b c8		 sub	 ecx, eax
  0064e	03 ca		 add	 ecx, edx
  00650	6b c1 6a	 imul	 eax, ecx, 106
  00653	66 83 b8 04 00
	00 00 02	 cmp	 WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+4], 2
  0065b	74 2a		 je	 SHORT $LN60@BattleMenu
  0065d	0f b7 80 02 00
	00 00		 movzx	 eax, WORD PTR ?petSkill@@3PAY06UPET_SKILL@@A[eax+2]
  00664	66 85 c0	 test	 ax, ax
  00667	74 1e		 je	 SHORT $LN60@BattleMenu
  00669	66 83 f8 02	 cmp	 ax, 2
  0066d	74 18		 je	 SHORT $LN60@BattleMenu

; 3717 : 				}
; 3718 : 				else{
; 3719 : 					
; 3720 : #ifdef _BATTLESKILL              // (不可开) Syu ADD 战斗技能介面
; 3721 : //					BattleWazaNo = battlePetNoBak;
; 3722 : 					BattleSetWazaHitBox( BattleWazaNo , 0 );

  0066f	6a 00		 push	 0
  00671	ff 35 00 00 00
	00		 push	 DWORD PTR ?BattleWazaNo@@3HA ; BattleWazaNo
  00677	e8 00 00 00 00	 call	 ?BattleSetWazaHitBox@@YAXHH@Z ; BattleSetWazaHitBox
  0067c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buttonA@@3HA
  00682	83 c4 08	 add	 esp, 8
  00685	eb 55		 jmp	 SHORT $LN59@BattleMenu
$LN60@BattleMenu:

; 3714 : 				//if( petSkill[battlePetNoBak][battleWazaTargetBak].skillId == 623 ){ //623:在petskill2.txt内的技能编号
; 3715 : 				    battleWazaTargetBak = -1;

  00687	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak

; 3716 : 				    battlePetButtonFlag = TRUE;

  00691	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battlePetButtonFlag@@3HA, 1 ; battlePetButtonFlag
$LN99@BattleMenu:

; 3723 : #else
; 3724 : 					BattleSetWazaHitBox( BattleWazaNo );
; 3725 : #endif
; 3726 : 				}
; 3727 : 			}
; 3728 : #else
; 3729 : 			if( battleWazaTargetBak != -1  ){ //上一回合的技能编号
; 3730 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3731 : //				BattleWazaNo = battlePetNoBak;
; 3732 : 				BattleSetWazaHitBox( BattleWazaNo , 0 );
; 3733 : #else
; 3734 : 				BattleSetWazaHitBox( BattleWazaNo );
; 3735 : #endif
; 3736 : 			}
; 3737 : #endif
; 3738 : 
; 3739 : 		}
; 3740 : 		BattleBpFlag &= ~BATTLE_BP_PET_MENU_NON;

  0069b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buttonA@@3HA
  006a1	eb 39		 jmp	 SHORT $LN59@BattleMenu
$LN54@BattleMenu:

; 3692 : 			if( bNewServer)

  006a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  006aa	68 00 00 00 00	 push	 OFFSET ??_C@_07BDJJCCFL@W?$HMFF?$HMFF@
  006af	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  006b5	74 07		 je	 SHORT $LN55@BattleMenu

; 3693 : 				lssproto_B_send( sockfd, "W|FF|FF" );

  006b7	e8 00 00 00 00	 call	 ?lssproto_B_send@@YAXHPAD@Z ; lssproto_B_send
  006bc	eb 05		 jmp	 SHORT $LN106@BattleMenu
$LN55@BattleMenu:

; 3694 : 			else
; 3695 : 				old_lssproto_B_send( sockfd, "W|FF|FF" );

  006be	e8 00 00 00 00	 call	 ?old_lssproto_B_send@@YAXHPAD@Z ; old_lssproto_B_send
$LN106@BattleMenu:

; 3696 : 
; 3697 : 			BattleCntDownFlag = FALSE;
; 3698 : 			SubProcNo++;
; 3699 : 		}else{

  006c3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buttonA@@3HA
  006c9	83 c4 08	 add	 esp, 8
$LN51@BattleMenu:

; 3723 : #else
; 3724 : 					BattleSetWazaHitBox( BattleWazaNo );
; 3725 : #endif
; 3726 : 				}
; 3727 : 			}
; 3728 : #else
; 3729 : 			if( battleWazaTargetBak != -1  ){ //上一回合的技能编号
; 3730 : #ifdef _BATTLESKILL				// (不可开) Syu ADD 战斗技能介面
; 3731 : //				BattleWazaNo = battlePetNoBak;
; 3732 : 				BattleSetWazaHitBox( BattleWazaNo , 0 );
; 3733 : #else
; 3734 : 				BattleSetWazaHitBox( BattleWazaNo );
; 3735 : #endif
; 3736 : 			}
; 3737 : #endif
; 3738 : 
; 3739 : 		}
; 3740 : 		BattleBpFlag &= ~BATTLE_BP_PET_MENU_NON;

  006cc	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
  006d2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?BattleCntDownFlag@@3HA, 0 ; BattleCntDownFlag
$LN59@BattleMenu:
  006dc	83 25 00 00 00
	00 f7		 and	 DWORD PTR ?BattleBpFlag@@3HA, -9 ; BattleBpFlag, fffffff7H

; 3741 : 		battlePetMenuFlag = FALSE;

  006e3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battlePetMenuFlag@@3HA, 0
  006ed	eb 06		 jmp	 SHORT $LN48@BattleMenu
$LN100@BattleMenu:

; 3674 : 			
; 3675 : 
; 3676 : #else
; 3677 : 			StockDispBuffer( buttonX + 28 -54, buttonY - 18, DISP_PRIO_IME4, CG_BTL_BUTTON_CROSS, 0 );
; 3678 : #endif
; 3679 : 		}
; 3680 : #endif
; 3681 : 	}
; 3682 : 
; 3683 : 	if( battlePetMenuFlag == TRUE ){

  006ef	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?buttonA@@3HA
$LN48@BattleMenu:

; 3742 : 	}
; 3743 : 	
; 3744 : 	if( battleMenuFlag & BATTLE_MENU_PET ){ 

  006f5	f6 05 00 00 00
	00 02		 test	 BYTE PTR ?battleMenuFlag@@3HA, 2
  006fc	0f 84 89 00 00
	00		 je	 $LN61@BattleMenu

; 3745 : 		
; 3746 : 		if( battleMenuReturn == FALSE ){

  00702	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?battleMenuReturn@@3HA, 0
  00709	0f 85 8f 00 00
	00		 jne	 $LN62@BattleMenu

; 3747 : 			
; 3748 : 			if( buttonA > 0 ){

  0070f	85 c9		 test	 ecx, ecx
  00711	7e 0d		 jle	 SHORT $LN64@BattleMenu

; 3749 : 				buttonA--;

  00713	49		 dec	 ecx

; 3750 : 				buttonX -= buttonA;

  00714	29 0d 00 00 00
	00		 sub	 DWORD PTR ?buttonX@@3HA, ecx
  0071a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?buttonA@@3HA, ecx
$LN64@BattleMenu:

; 3751 : 			}
; 3752 : 			
; 3753 : 			BattleButtonWaza();

  00720	e8 00 00 00 00	 call	 ?BattleButtonWaza@@YAXXZ ; BattleButtonWaza

; 3754 : 			
; 3755 : 			if( mouse.onceState & MOUSE_RIGHT_CRICK ){ 

  00725	f6 05 2c 00 00
	00 02		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 2
  0072c	0f 84 b2 00 00
	00		 je	 $LN67@BattleMenu

; 3756 : 				battlePetButtonFlag = TRUE;

  00732	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?battlePetButtonFlag@@3HA, 1 ; battlePetButtonFlag

; 3757 : 				battleWazaTargetBak = -1;

  0073c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak
$LN68@BattleMenu:

; 3778 : 			battleButtonDispNo[ 8 ] = StockDispBuffer( buttonX, buttonY, DISP_PRIO_IME3, CG_PET_BTL_BUTTON_WAZA_UP + battleButtonFlag[ 8 ], 2 );

  00746	a1 20 00 00 00	 mov	 eax, DWORD PTR ?battleButtonFlag@@3PAHA+32
  0074b	6a 02		 push	 2
  0074d	05 35 62 00 00	 add	 eax, 25141		; 00006235H
  00752	50		 push	 eax
  00753	6a 69		 push	 105			; 00000069H
  00755	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonY@@3HA
  0075b	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonX@@3HA
  00761	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00766	83 c4 14	 add	 esp, 20			; 00000014H
$LN107@BattleMenu:

; 3779 : 		}
; 3780 : 		StockDispBuffer( buttonX, buttonY, DISP_PRIO_MENU, CG_PET_BTL_BUTTON_BASE, 0 );

  00769	6a 00		 push	 0
  0076b	68 34 62 00 00	 push	 25140			; 00006234H
  00770	6a 68		 push	 104			; 00000068H
  00772	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonY@@3HA
  00778	a3 20 00 00 00	 mov	 DWORD PTR ?battleButtonDispNo@@3PAHA+32, eax
  0077d	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonX@@3HA
  00783	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00788	83 c4 14	 add	 esp, 20			; 00000014H
$LN61@BattleMenu:

; 3781 : 	}
; 3782 : 
; 3783 : 	BattleCntDownDisp();

  0078b	e8 00 00 00 00	 call	 ?BattleCntDownDisp@@YAXXZ ; BattleCntDownDisp

; 3784 : }

  00790	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00793	33 cd		 xor	 ecx, ebp
  00795	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0079a	8b e5		 mov	 esp, ebp
  0079c	5d		 pop	 ebp
  0079d	c3		 ret	 0
$LN62@BattleMenu:

; 3758 : 			}
; 3759 : 		}else{
; 3760 : 			if( buttonA <= 25 ){

  0079e	83 f9 19	 cmp	 ecx, 25			; 00000019H
  007a1	7f 0f		 jg	 SHORT $LN66@BattleMenu

; 3761 : 				buttonA++;

  007a3	41		 inc	 ecx

; 3762 : 				buttonX += buttonA;

  007a4	01 0d 00 00 00
	00		 add	 DWORD PTR ?buttonX@@3HA, ecx
  007aa	89 0d 00 00 00
	00		 mov	 DWORD PTR ?buttonA@@3HA, ecx

; 3763 : 			}else{

  007b0	eb 32		 jmp	 SHORT $LN67@BattleMenu
$LN66@BattleMenu:

; 3764 : 				ClearBoxFlag();

  007b2	e8 00 00 00 00	 call	 ?ClearBoxFlag@@YAXXZ	; ClearBoxFlag

; 3765 : 				battleTargetSelectFlag = FALSE;
; 3766 : 				battleMenuFlag = FALSE;
; 3767 : 				p_party[ BattleMyNo + 5 ]->atr |= ACT_ATR_BTL_CMD_END;

  007b7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?BattleMyNo@@3HA ; BattleMyNo
  007bc	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleMenuFlag@@3HA, 0 ; battleMenuFlag
  007c6	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?battleTargetSelectFlag@@3HA, 0
  007d0	8b 04 85 14 00
	00 00		 mov	 eax, DWORD PTR ?p_party@@3PAPAUaction@@A[eax*4+20]
  007d7	83 88 a4 00 00
	00 40		 or	 DWORD PTR [eax+164], 64	; 00000040H

; 3768 : 				SubProcNo++;

  007de	ff 05 00 00 00
	00		 inc	 DWORD PTR ?SubProcNo@@3IA ; SubProcNo
$LN67@BattleMenu:

; 3769 : 			}
; 3770 : 		}
; 3771 : 		
; 3772 : 		if( battleWazaTargetBak != -1 ){

  007e4	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?battleWazaTargetBak@@3HA, -1 ; battleWazaTargetBak
  007eb	0f 84 55 ff ff
	ff		 je	 $LN68@BattleMenu

; 3773 : 			sprintf( moji,"%-24s",petSkill[ battlePetNoBak ][ BattleWazaNo ].name );

  007f1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?battlePetNoBak@@3HA ; battlePetNoBak
  007f6	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  007fd	2b c8		 sub	 ecx, eax
  007ff	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?BattleWazaNo@@3HA ; BattleWazaNo
  00805	6b c1 6a	 imul	 eax, ecx, 106
  00808	05 08 00 00 00	 add	 eax, OFFSET ?petSkill@@3PAY06UPET_SKILL@@A+8
  0080d	50		 push	 eax
  0080e	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00814	68 00 00 00 00	 push	 OFFSET ??_C@_05FNFPHGDP@?$CF?924s@
  00819	50		 push	 eax
  0081a	e8 00 00 00 00	 call	 _sprintf

; 3774 : 			StockFontBuffer( buttonX - 100, buttonY - 7, FONT_PRIO_FRONT, 0, moji, 0 );

  0081f	6a 00		 push	 0
  00821	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00827	50		 push	 eax
  00828	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonY@@3HA
  0082d	6a 00		 push	 0
  0082f	83 c0 f9	 add	 eax, -7			; fffffff9H
  00832	6a 01		 push	 1
  00834	50		 push	 eax
  00835	a1 00 00 00 00	 mov	 eax, DWORD PTR ?buttonX@@3HA
  0083a	83 c0 9c	 add	 eax, -100		; ffffff9cH
  0083d	50		 push	 eax
  0083e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 3775 : 			battleButtonDispNo[ 8 ] = StockDispBuffer( buttonX, buttonY, DISP_PRIO_IME3, CG_PET_BTL_BUTTON_CANCEL_UP, 2 );

  00843	6a 02		 push	 2
  00845	68 37 62 00 00	 push	 25143			; 00006237H
  0084a	6a 69		 push	 105			; 00000069H
  0084c	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonY@@3HA
  00852	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonX@@3HA
  00858	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0085d	83 c4 38	 add	 esp, 56			; 00000038H

; 3776 : 
; 3777 : 		}else{

  00860	e9 04 ff ff ff	 jmp	 $LN107@BattleMenu
?BattleMenuProc@@YAXXZ ENDP				; BattleMenuProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1771 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1392 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1393 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1394 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1395 : 
; 1396 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1772 :         int _Result;
; 1773 :         va_list _ArgList;
; 1774 :         __crt_va_start(_ArgList, _Format);
; 1775 : 
; 1776 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1777 : 
; 1778 :         __crt_va_end(_ArgList);
; 1779 :         return _Result;
; 1780 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.19041.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 91   :         static unsigned __int64 _OptionsStorage;
; 92   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 93   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
