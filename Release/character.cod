; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?charObj@@3PAUCHAROBJ@@A			; charObj
PUBLIC	?maxCharObj@@3HA				; maxCharObj
PUBLIC	?tailCharObj@@3HA				; tailCharObj
PUBLIC	?freeCharObj@@3HA				; freeCharObj
PUBLIC	?searchCharObj@@3HA				; searchCharObj
PUBLIC	?popflag@@3_NA					; popflag
PUBLIC	?waittimeflag@@3_NA				; waittimeflag
PUBLIC	?waittime@@3HA					; waittime
PUBLIC	?charIconOffsetY@@3PAHA				; charIconOffsetY
PUBLIC	?battleIconTbl@@3PAY01HA			; battleIconTbl
PUBLIC	?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A	; itemOverlapTbl
PUBLIC	?itemOverlapCheckCnt@@3HA			; itemOverlapCheckCnt
PUBLIC	?nameOverTheHeadFlag@@3FA			; nameOverTheHeadFlag
_BSS	SEGMENT
?charObj@@3PAUCHAROBJ@@A DB 062250H DUP (?)		; charObj
?maxCharObj@@3HA DD 01H DUP (?)				; maxCharObj
?tailCharObj@@3HA DD 01H DUP (?)			; tailCharObj
?freeCharObj@@3HA DD 01H DUP (?)			; freeCharObj
?searchCharObj@@3HA DD 01H DUP (?)			; searchCharObj
?popflag@@3_NA DB 01H DUP (?)				; popflag
	ALIGN	4

?waittimeflag@@3_NA DB 01H DUP (?)			; waittimeflag
	ALIGN	4

?waittime@@3HA DD 01H DUP (?)				; waittime
?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A DB 04b0H DUP (?) ; itemOverlapTbl
?itemOverlapCheckCnt@@3HA DD 01H DUP (?)		; itemOverlapCheckCnt
_BSS	ENDS
_DATA	SEGMENT
?charIconOffsetY@@3PAHA DD 0ffffffb9H			; charIconOffsetY
	DD	0ffffffa8H
	DD	0ffffffacH
	DD	0ffffffa8H
	DD	0ffffffa0H
	DD	0ffffff9aH
	DD	0ffffffa8H
	DD	0ffffffa8H
	DD	0ffffffa8H
	DD	0ffffffabH
	DD	0ffffffabH
	DD	0ffffffa8H
?battleIconTbl@@3PAY01HA DD 0640aH			; battleIconTbl
	DD	0640bH
	DD	0640cH
	DD	0640dH
	DD	0640eH
	DD	0640fH
	DD	06410H
	DD	06411H
	DD	06412H
	DD	06413H
	DD	06414H
	DD	06415H
	DD	06416H
	DD	06417H
	DD	06418H
	DD	06419H
	DD	0641aH
	DD	0641bH
	DD	0641cH
	DD	0641dH
?nameOverTheHeadFlag@@3FA DW 01H			; nameOverTheHeadFlag
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?setCharmManor@@YAXPAUaction@@H@Z		; setCharmManor
PUBLIC	?delCharmManor@@YAXPAUaction@@@Z		; delCharmManor
PUBLIC	?setCharmTitle@@YAXPAUaction@@H@Z		; setCharmTitle
PUBLIC	?delCharmTitle@@YAXPAUaction@@@Z		; delCharmTitle
PUBLIC	?setNpcNotice@@YAXPAUaction@@H@Z		; setNpcNotice
PUBLIC	?delNpcNotice@@YAXPAUaction@@@Z			; delNpcNotice
PUBLIC	?charMove@@YAXPAUaction@@@Z			; charMove
PUBLIC	?charMove2@@YAXPAUaction@@@Z			; charMove2
PUBLIC	?_charMove@@YAXPAUaction@@@Z			; _charMove
PUBLIC	?shiftBufCount@@YAXPAUaction@@@Z		; shiftBufCount
PUBLIC	?createCharAction@@YAPAUaction@@HHHH@Z		; createCharAction
PUBLIC	?createWaterAnimation@@YAPAUaction@@HHHH@Z	; createWaterAnimation
PUBLIC	?stockCharMovePoint@@YAXPAUaction@@HH@Z		; stockCharMovePoint
PUBLIC	?correctCharMovePoint@@YAXPAUaction@@HH@Z	; correctCharMovePoint
PUBLIC	?setCharMovePoint@@YAXPAUaction@@HH@Z		; setCharMovePoint
PUBLIC	?_setCharMovePoint@@YAXPAUaction@@HH@Z		; _setCharMovePoint
PUBLIC	?setCharWarpPoint@@YAXPAUaction@@HH@Z		; setCharWarpPoint
PUBLIC	?setCharStatus@@YAXPAGPAD@Z			; setCharStatus
PUBLIC	?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
PUBLIC	?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
PUBLIC	?drawCharStatus@@YAXPAUaction@@@Z		; drawCharStatus
PUBLIC	?changeCharAct@@YAXPAUaction@@HHHHHHH@Z		; changeCharAct
PUBLIC	?setCharLeader@@YAXPAUaction@@@Z		; setCharLeader
PUBLIC	?delCharLeader@@YAXPAUaction@@@Z		; delCharLeader
PUBLIC	?setCharParty@@YAXPAUaction@@@Z			; setCharParty
PUBLIC	?delCharParty@@YAXPAUaction@@@Z			; delCharParty
PUBLIC	?setCharWatch@@YAXPAUaction@@@Z			; setCharWatch
PUBLIC	?delCharWatch@@YAXPAUaction@@@Z			; delCharWatch
PUBLIC	?setCharBattle@@YAXPAUaction@@HFF@Z		; setCharBattle
PUBLIC	?delCharBattle@@YAXPAUaction@@@Z		; delCharBattle
PUBLIC	?setCharTrade@@YAXPAUaction@@H@Z		; setCharTrade
PUBLIC	?delCharTrade@@YAXPAUaction@@@Z			; delCharTrade
PUBLIC	?setCharUseMagic@@YAXPAUaction@@@Z		; setCharUseMagic
PUBLIC	?delCharUseMagic@@YAXPAUaction@@@Z		; delCharUseMagic
PUBLIC	?setCharAngel@@YAXPAUaction@@@Z			; setCharAngel
PUBLIC	?delCharAngel@@YAXPAUaction@@@Z			; delCharAngel
PUBLIC	?setCharMind@@YAXPAUaction@@H@Z			; setCharMind
PUBLIC	?delCharMind@@YAXPAUaction@@@Z			; delCharMind
PUBLIC	?setCharFukidashi@@YAXPAUaction@@I@Z		; setCharFukidashi
PUBLIC	?setCharNameColor@@YAXPAUaction@@H@Z		; setCharNameColor
PUBLIC	?checkCharObjPoint@@YAHHHF@Z			; checkCharObjPoint
PUBLIC	?checkCharObjPointStatus@@YAHHHFI@Z		; checkCharObjPointStatus
PUBLIC	?checkCharObjPointNotStatus@@YAHHHFI@Z		; checkCharObjPointNotStatus
PUBLIC	?setNpcCharObj@@YAXHHHHHPAD00H0HHHHHHHH@Z	; setNpcCharObj
PUBLIC	?setReturnPetObj@@YAHHHHHHPAD0HHHHH@Z		; setReturnPetObj
PUBLIC	?setItemCharObj@@YAXHHHHHHPAD@Z			; setItemCharObj
PUBLIC	?setMoneyCharObj@@YAXHHHHHHPAD@Z		; setMoneyCharObj
PUBLIC	?getAtrCharType@@YAHH@Z				; getAtrCharType
PUBLIC	?getAtrCharObjType@@YAHH@Z			; getAtrCharObjType
PUBLIC	?delCharObj@@YAXH@Z				; delCharObj
PUBLIC	?initCharObj@@YAXXZ				; initCharObj
PUBLIC	?resetCharObj@@YAXXZ				; resetCharObj
PUBLIC	?clearPtActCharObj@@YAXXZ			; clearPtActCharObj
PUBLIC	?restorePtActCharObjAll@@YAXXZ			; restorePtActCharObjAll
PUBLIC	?restorePtActCharObj@@YAXH@Z			; restorePtActCharObj
PUBLIC	?setMovePointCharObj@@YAXHHH@Z			; setMovePointCharObj
PUBLIC	?getCharObjAct@@YAPAUaction@@H@Z		; getCharObjAct
PUBLIC	?getCharObjBuf@@YAHXZ				; getCharObjBuf
PUBLIC	?initItemOverlapCheck@@YAXXZ			; initItemOverlapCheck
PUBLIC	?itemOverlapCheck@@YAHIHH@Z			; itemOverlapCheck
PUBLIC	?createPetAction@@YAPAUaction@@HHHHHHH@Z	; createPetAction
PUBLIC	?ajustClientDir@@YAXPAF@Z			; ajustClientDir
PUBLIC	?charProc@@YAXPAUaction@@@Z			; charProc
PUBLIC	?waterAniProc@@YAXPAUaction@@@Z			; waterAniProc
PUBLIC	?CharbubbleRelease@@YAXXZ			; CharbubbleRelease
PUBLIC	?commmonEffectNoLoop@@YAXPAUaction@@@Z		; commmonEffectNoLoop
PUBLIC	?searchCharObjId@@YAHH@Z			; searchCharObjId
PUBLIC	?limitCantClientDir@@YAXPAF@Z			; limitCantClientDir
PUBLIC	?getPetRoute@@YAXPAUaction@@@Z			; getPetRoute
PUBLIC	?petMoveProc@@YAHPAUaction@@@Z			; petMoveProc
PUBLIC	?uprisePetProc@@YAHPAUaction@@@Z		; uprisePetProc
PUBLIC	?petCircleOutProc@@YAHPAUaction@@@Z		; petCircleOutProc
PUBLIC	?petCircleInProc@@YAHPAUaction@@@Z		; petCircleInProc
PUBLIC	?petProc@@YAXPAUaction@@@Z			; petProc
PUBLIC	?getCharType@@YAHPAUaction@@@Z			; getCharType
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_01EJNLAFE@P@				; `string'
PUBLIC	??_C@_01NANMIPIL@N@				; `string'
PUBLIC	??_C@_01BNIGIBBF@Q@				; `string'
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D@				; `string'
PUBLIC	??_C@_01GFHCPBMG@C@				; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_08BFELEGJK@?$NL?$NM?U?I?i?$LI?$NO?M@	; `string'
PUBLIC	??_C@_06HDNHFODD@?d?a?$DP?$NL?v?$DP@		; `string'
PUBLIC	??_C@_05NPHPFMDI@?u?Z?$DP?m?$LK@		; `string'
PUBLIC	__real@3c800000
PUBLIC	__real@3f00000000000000
PUBLIC	__real@3f800000
PUBLIC	__real@3f99999a
PUBLIC	__real@3fcccccd
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@40000000
PUBLIC	__real@40800000
PUBLIC	__real@40c00000
PUBLIC	__real@41b40000
PUBLIC	__real@42340000
PUBLIC	__real@42800000
PUBLIC	__real@42f00000
PUBLIC	__real@c000000000000000
PUBLIC	__xmm@0000000200000002fffffffd00000003
PUBLIC	__xmm@000189f600018b3a000189e900018824
PUBLIC	__xmm@00018c3000018d7f0001880100018cc2
PUBLIC	__xmm@fffffffefffffffe00000003fffffffd
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	_rand:PROC
EXTRN	_strstr:PROC
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	?GetAction@@YAPAUaction@@EI@Z:PROC		; GetAction
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBuffer2@@YAHHHEHH@Z:PROC		; StockDispBuffer2
EXTRN	??ö¢??ô©õ»@@YAHPAUaction@@PAF1@Z:PROC		; ?ö¢??ô©õ»
EXTRN	?AdjustDir@@YAXPAM@Z:PROC			; AdjustDir
EXTRN	?SinT@@YAMM@Z:PROC				; SinT
EXTRN	?CosT@@YAMM@Z:PROC				; CosT
EXTRN	?Atan@@YAMMM@Z:PROC				; Atan
EXTRN	?pointLen2@@YAMMMMM@Z:PROC			; pointLen2
EXTRN	?GetStrWidth@@YAHPAD@Z:PROC			; GetStrWidth
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?pattern@@YAHPAUaction@@HH@Z:PROC		; pattern
EXTRN	?getRouteData@@YAXHPAH0@Z:PROC			; getRouteData
EXTRN	?setPartsPrio@@YAXHHHHHMMH@Z:PROC		; setPartsPrio
EXTRN	?setCharPrio@@YAXHHHHHMM@Z:PROC			; setCharPrio
EXTRN	?checkHitMap@@YAHHH@Z:PROC			; checkHitMap
EXTRN	?camMapToGamen@@YAXMMPAM0@Z:PROC		; camMapToGamen
EXTRN	?realGetPos@@YAHKPAF0@Z:PROC			; realGetPos
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	?resetPc@@YAXXZ:PROC				; resetPc
EXTRN	?setPcWarpPoint@@YAXHH@Z:PROC			; setPcWarpPoint
EXTRN	?delPcUseMagic@@YAXXZ:PROC			; delPcUseMagic
EXTRN	?CheckNewPet@@YAXH@Z:PROC			; CheckNewPet
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	?SpriteInfo@@3PAUSPRITE_INFO@@A:BYTE		; SpriteInfo
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?ProcNo@@3IA:DWORD				; ProcNo
EXTRN	?MyChatBuffer@@3USTR_BUFFER@@A:BYTE		; MyChatBuffer
EXTRN	?nowFloor@@3HA:DWORD				; nowFloor
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?nowSpdRate@@3MA:DWORD				; nowSpdRate
EXTRN	?oldGx@@3HA:DWORD				; oldGx
EXTRN	?oldGy@@3HA:DWORD				; oldGy
EXTRN	?warpEffectStart@@3HA:DWORD			; warpEffectStart
EXTRN	?SpriteData@@3PAUSPRITEDATA@@A:BYTE		; SpriteData
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?party@@3PAUPARTY@@A:BYTE			; party
EXTRN	?g_bUseAlpha@@3HA:DWORD				; g_bUseAlpha
EXTRN	?ìÑÚª?øÌ??@@3HA:DWORD				; ìÑÚª?øÌ??
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?popAct@@3PAUaction@@A DD 01H DUP (?)			; popAct
_BSS	ENDS
;	COMDAT __xmm@fffffffefffffffe00000003fffffffd
CONST	SEGMENT
__xmm@fffffffefffffffe00000003fffffffd DB 0fdH, 0ffH, 0ffH, 0ffH, 03H, 00H
	DB	00H, 00H, 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00018c3000018d7f0001880100018cc2
CONST	SEGMENT
__xmm@00018c3000018d7f0001880100018cc2 DB 0c2H, 08cH, 01H, 00H, 01H, 088H
	DB	01H, 00H, 07fH, 08dH, 01H, 00H, '0', 08cH, 01H, 00H
CONST	ENDS
;	COMDAT __xmm@000189f600018b3a000189e900018824
CONST	SEGMENT
__xmm@000189f600018b3a000189e900018824 DB '$', 088H, 01H, 00H, 0e9H, 089H
	DB	01H, 00H, ':', 08bH, 01H, 00H, 0f6H, 089H, 01H, 00H
CONST	ENDS
;	COMDAT __xmm@0000000200000002fffffffd00000003
CONST	SEGMENT
__xmm@0000000200000002fffffffd00000003 DB 03H, 00H, 00H, 00H, 0fdH, 0ffH, 0ffH
	DB	0ffH, 02H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@42f00000
CONST	SEGMENT
__real@42f00000 DD 042f00000r			; 120
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@41b40000
CONST	SEGMENT
__real@41b40000 DD 041b40000r			; 22.5
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fcccccd
CONST	SEGMENT
__real@3fcccccd DD 03fcccccdr			; 1.6
CONST	ENDS
;	COMDAT __real@3f99999a
CONST	SEGMENT
__real@3f99999a DD 03f99999ar			; 1.2
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f00000000000000
CONST	SEGMENT
__real@3f00000000000000 DQ 03f00000000000000r	; 3.05176e-05
CONST	ENDS
;	COMDAT __real@3c800000
CONST	SEGMENT
__real@3c800000 DD 03c800000r			; 0.015625
CONST	ENDS
;	COMDAT ??_C@_05NPHPFMDI@?u?Z?$DP?m?$LK@
CONST	SEGMENT
??_C@_05NPHPFMDI@?u?Z?$DP?m?$LK@ DB 0f5H, 0daH, '?', 0edH, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06HDNHFODD@?d?a?$DP?$NL?v?$DP@
CONST	SEGMENT
??_C@_06HDNHFODD@?d?a?$DP?$NL?v?$DP@ DB 0e4H, 0e1H, '?', 0dbH, 0f6H, '?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BFELEGJK@?$NL?$NM?U?I?i?$LI?$NO?M@
CONST	SEGMENT
??_C@_08BFELEGJK@?$NL?$NM?U?I?i?$LI?$NO?M@ DB 0dbH, 0dcH, 0d5H, 0c9H, 0e9H
	DB	0b8H, 0deH, 0cdH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C@
CONST	SEGMENT
??_C@_01GFHCPBMG@C@ DB 'C', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D@
CONST	SEGMENT
??_C@_01CKDDGHAB@D@ DB 'D', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01BNIGIBBF@Q@
CONST	SEGMENT
??_C@_01BNIGIBBF@Q@ DB 'Q', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01NANMIPIL@N@
CONST	SEGMENT
??_C@_01NANMIPIL@N@ DB 'N', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01EJNLAFE@P@
CONST	SEGMENT
??_C@_01EJNLAFE@P@ DB 'P', 00H				; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getCharType@@YAHPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?getCharType@@YAHPAUaction@@@Z PROC			; getCharType, COMDAT

; 3421 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3422 : 	extern int äººç©å±è½å¼å³;
; 3423 : 	if (ProcNo != PROC_GAME) return 0;

  00003	83 3d 00 00 00
	00 09		 cmp	 DWORD PTR ?ProcNo@@3IA, 9 ; ProcNo
  0000a	56		 push	 esi
  0000b	75 70		 jne	 SHORT $LN8@getCharTyp

; 3424 : 	if (!äººç©å±è½å¼å³) return 0;

  0000d	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ìÑÚª?øÌ??@@3HA, 0 ; ìÑÚª?øÌ??
  00014	74 67		 je	 SHORT $LN8@getCharTyp

; 3425 : 	CHAREXTRA *ext;
; 3426 : 	int no;
; 3427 : 	if (ptAct == NULL)

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _ptAct$[ebp]
  00019	85 c9		 test	 ecx, ecx
  0001b	74 60		 je	 SHORT $LN8@getCharTyp

; 3428 : 		return 0;
; 3429 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0001d	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]

; 3430 : 	if (ext) {

  00020	85 c0		 test	 eax, eax
  00022	74 59		 je	 SHORT $LN8@getCharTyp

; 3431 : 		no = ext->charObjTblId;

  00024	8b 00		 mov	 eax, DWORD PTR [eax]

; 3432 : 		if (no >= 1500) return 0;

  00026	3d dc 05 00 00	 cmp	 eax, 1500		; 000005dcH
  0002b	7d 50		 jge	 SHORT $LN8@getCharTyp

; 3433 : 		if (strcmp(ptAct->name, charObj[no].name) == 0)

  0002d	69 f0 0c 01 00
	00		 imul	 esi, eax, 268
  00033	83 c1 38	 add	 ecx, 56			; 00000038H
  00036	8d 86 38 00 00
	00		 lea	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+56]
  0003c	0f 1f 40 00	 npad	 4
$LL10@getCharTyp:
  00040	8a 11		 mov	 dl, BYTE PTR [ecx]
  00042	3a 10		 cmp	 dl, BYTE PTR [eax]
  00044	75 1a		 jne	 SHORT $LN11@getCharTyp
  00046	84 d2		 test	 dl, dl
  00048	74 12		 je	 SHORT $LN12@getCharTyp
  0004a	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  0004d	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00050	75 0e		 jne	 SHORT $LN11@getCharTyp
  00052	83 c1 02	 add	 ecx, 2
  00055	83 c0 02	 add	 eax, 2
  00058	84 d2		 test	 dl, dl
  0005a	75 e4		 jne	 SHORT $LL10@getCharTyp
$LN12@getCharTyp:
  0005c	33 c0		 xor	 eax, eax
  0005e	eb 05		 jmp	 SHORT $LN13@getCharTyp
$LN11@getCharTyp:
  00060	1b c0		 sbb	 eax, eax
  00062	83 c8 01	 or	 eax, 1
$LN13@getCharTyp:
  00065	85 c0		 test	 eax, eax
  00067	75 14		 jne	 SHORT $LN8@getCharTyp

; 3434 : 			if (charObj[no].charType == 256) {

  00069	81 be b4 00 00
	00 00 01 00 00	 cmp	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+180], 256 ; 00000100H
  00073	75 08		 jne	 SHORT $LN8@getCharTyp

; 3435 : 				return 1;

  00075	b8 01 00 00 00	 mov	 eax, 1
  0007a	5e		 pop	 esi

; 3439 : }

  0007b	5d		 pop	 ebp
  0007c	c3		 ret	 0
$LN8@getCharTyp:

; 3436 : 			}
; 3437 : 	}
; 3438 : 	return 0;

  0007d	33 c0		 xor	 eax, eax
  0007f	5e		 pop	 esi

; 3439 : }

  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
?getCharType@@YAHPAUaction@@@Z ENDP			; getCharType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?petProc@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -4						; size = 4
_mx$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?petProc@@YAXPAUaction@@@Z PROC				; petProc, COMDAT

; 3220 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 3221 : 	float mx, my;
; 3222 : 	int animLoop;
; 3223 : 	PETEXTRA *pe = (PETEXTRA *)ptAct->pYobi;
; 3224 : 
; 3225 : 	switch( pe->mode )

  00005	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00008	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0000b	0f bf 00	 movsx	 eax, WORD PTR [eax]
  0000e	83 f8 03	 cmp	 eax, 3
  00011	77 30		 ja	 SHORT $LN11@petProc
  00013	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN16@petProc[eax*4]
$LN4@petProc:

; 3226 : 	{
; 3227 : 		// ????î?ï¼î???î??
; 3228 : 		case 0:
; 3229 : 			if( !petMoveProc( ptAct ) )

  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?petMoveProc@@YAHPAUaction@@@Z ; petMoveProc

; 3230 : 			{
; 3231 : 				return;
; 3232 : 			}
; 3233 : 			break;

  00020	eb 16		 jmp	 SHORT $LN18@petProc
$LN6@petProc:

; 3234 : 
; 3235 : 		// ????î?ï¼
; 3236 : 		// ???????????ï¼î?
; 3237 : 		case 1:
; 3238 : 			if( !uprisePetProc( ptAct ) )

  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 ?uprisePetProc@@YAHPAUaction@@@Z ; uprisePetProc

; 3239 : 			{
; 3240 : 				return;
; 3241 : 			}
; 3242 : 			break;

  00028	eb 0e		 jmp	 SHORT $LN18@petProc
$LN8@petProc:

; 3243 : 
; 3244 : 		// ????î?ï¼î¤î²?î¿??î??
; 3245 : 		case 2:
; 3246 : 			if( !petCircleOutProc( ptAct ) )

  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ?petCircleOutProc@@YAHPAUaction@@@Z ; petCircleOutProc

; 3247 : 			{
; 3248 : 				return;
; 3249 : 			}
; 3250 : 			break;

  00030	eb 06		 jmp	 SHORT $LN18@petProc
$LN10@petProc:

; 3251 : 
; 3252 : 		// ???î¢î?ï¼î¤î²?î¿?????
; 3253 : 		case 3:
; 3254 : 			if( !petCircleInProc( ptAct ) )

  00032	56		 push	 esi
  00033	e8 00 00 00 00	 call	 ?petCircleInProc@@YAHPAUaction@@@Z ; petCircleInProc
$LN18@petProc:

; 3255 : 			{
; 3256 : 				return;
; 3257 : 			}
; 3258 : 			break;
; 3259 : 	}
; 3260 : 
; 3261 : 	// ?î¡¡î¸î?îº
; 3262 : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00038	83 c4 04	 add	 esp, 4
  0003b	85 c0		 test	 eax, eax
  0003d	0f 84 cd 00 00
	00		 je	 $LN1@petProc
$LN11@petProc:
  00043	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  0004b	8d 45 fc	 lea	 eax, DWORD PTR _my$[ebp]
  0004e	50		 push	 eax
  0004f	8d 45 08	 lea	 eax, DWORD PTR _mx$[ebp]
  00052	50		 push	 eax
  00053	83 ec 08	 sub	 esp, 8
  00056	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0005c	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  00064	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00069	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  0006e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _mx$[ebp]
  00073	83 c4 10	 add	 esp, 16			; 00000010H

; 3263 : 	ptAct->x = (int)(mx+.5);

  00076	0f 5a c0	 cvtps2pd xmm0, xmm0
  00079	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00081	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00085	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _my$[ebp]

; 3264 : 	ptAct->y = (int)(my+.5);

  0008a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0008d	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00090	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00098	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0009c	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 3265 : 
; 3266 : 	// ?????????
; 3267 : 	if( ptAct->anim_no == ANIM_HAND
; 3268 : 	 || ptAct->anim_no == ANIM_HAPPY
; 3269 : 	 || ptAct->anim_no == ANIM_ANGRY
; 3270 : 	 || ptAct->anim_no == ANIM_SAD
; 3271 : 	 || ptAct->anim_no == ANIM_WALK
; 3272 : 	 || ptAct->anim_no == ANIM_STAND
; 3273 : 	 || ptAct->anim_no == ANIM_NOD )

  0009f	8b 86 4c 01 00
	00		 mov	 eax, DWORD PTR [esi+332]
  000a5	83 f8 06	 cmp	 eax, 6
  000a8	74 25		 je	 SHORT $LN14@petProc
  000aa	83 f8 07	 cmp	 eax, 7
  000ad	74 20		 je	 SHORT $LN14@petProc
  000af	83 f8 08	 cmp	 eax, 8
  000b2	74 1b		 je	 SHORT $LN14@petProc
  000b4	83 f8 09	 cmp	 eax, 9
  000b7	74 16		 je	 SHORT $LN14@petProc
  000b9	83 f8 04	 cmp	 eax, 4
  000bc	74 11		 je	 SHORT $LN14@petProc
  000be	83 f8 03	 cmp	 eax, 3
  000c1	74 0c		 je	 SHORT $LN14@petProc
  000c3	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  000c6	74 07		 je	 SHORT $LN14@petProc

; 3276 : 	}
; 3277 : 	else
; 3278 : 	{
; 3279 : 		animLoop = ANM_NO_LOOP;

  000c8	b8 01 00 00 00	 mov	 eax, 1
  000cd	eb 02		 jmp	 SHORT $LN13@petProc
$LN14@petProc:

; 3274 : 	{
; 3275 : 		animLoop = ANM_LOOP;

  000cf	33 c0		 xor	 eax, eax
$LN13@petProc:

; 3280 : 	}
; 3281 : 	pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  000d1	50		 push	 eax
  000d2	6a 00		 push	 0
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 3282 : 
; 3283 : 	// ??????????????
; 3284 : 	setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );

  000da	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  000e2	83 c4 04	 add	 esp, 4
  000e5	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000eb	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  000f3	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000f8	6a 00		 push	 0
  000fa	6a 00		 push	 0
  000fc	ff 76 1c	 push	 DWORD PTR [esi+28]
  000ff	ff 76 18	 push	 DWORD PTR [esi+24]
  00102	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00108	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  0010d	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN1@petProc:
  00110	5e		 pop	 esi

; 3285 : }

  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c3		 ret	 0
  00115	0f 1f 00	 npad	 3
$LN16@petProc:
  00118	00 00 00 00	 DD	 $LN4@petProc
  0011c	00 00 00 00	 DD	 $LN6@petProc
  00120	00 00 00 00	 DD	 $LN8@petProc
  00124	00 00 00 00	 DD	 $LN10@petProc
?petProc@@YAXPAUaction@@@Z ENDP				; petProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?petCircleInProc@@YAHPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -16						; size = 4
_mx$ = -12						; size = 4
tv358 = -8						; size = 4
_dx$ = -8						; size = 4
tv351 = -4						; size = 4
_dy$ = -4						; size = 4
_angle$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?petCircleInProc@@YAHPAUaction@@@Z PROC			; petCircleInProc, COMDAT

; 3157 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 3158 : 	PETEXTRA *pe = (PETEXTRA *)ptAct->pYobi;

  00008	8b 7d 08	 mov	 edi, DWORD PTR _ptAct$[ebp]
  0000b	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]

; 3159 : 	float mx, my;
; 3160 : 	float dx, dy;
; 3161 : 	float angle;
; 3162 : 	int i;
; 3163 : 
; 3164 : 	if( pe->ptAct == NULL )

  0000e	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00012	0f 85 94 01 00
	00		 jne	 $LN5@petCircleI

; 3165 : 	{
; 3166 : 		pe->ptAct  = (ACTION *)1;

  00018	c7 46 18 01 00
	00 00		 mov	 DWORD PTR [esi+24], 1

; 3167 : 		pe->ptAct2 = (ACTION *)NULL;

  0001f	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0

; 3168 : 		pe->angle = 0.0F;

  00026	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 3169 : 		pe->r = 800;

  0002d	c7 46 24 20 03
	00 00		 mov	 DWORD PTR [esi+36], 800	; 00000320H
$LN17@petCircleI:

; 3179 : 		}
; 3180 : 	}
; 3181 : 
; 3182 : 	if( pe->ptAct != NULL )
; 3183 : 	{
; 3184 : 		if( pe->ptAct2 == NULL && pe->createTime+2300 < TimeGetTime() )

  00034	83 7e 1c 00	 cmp	 DWORD PTR [esi+28], 0
  00038	75 37		 jne	 SHORT $LN9@petCircleI
  0003a	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0003f	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00042	81 c1 fc 08 00
	00		 add	 ecx, 2300		; 000008fcH
  00048	3b c8		 cmp	 ecx, eax
  0004a	73 25		 jae	 SHORT $LN9@petCircleI

; 3185 : 		{
; 3186 : 			pe->ptAct2 = createCommmonEffectNoLoop( SPR_hoshi, ptAct->gx, ptAct->gy,

  0004c	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  00050	50		 push	 eax
  00051	6a 00		 push	 0
  00053	6a 00		 push	 0
  00055	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  0005b	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  00061	68 fd 88 01 00	 push	 100605			; 000188fdH
  00066	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  0006b	83 c4 18	 add	 esp, 24			; 00000018H
  0006e	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN9@petCircleI:

; 3187 : 				0, 0, ptAct->dispPrio );
; 3188 : 		}
; 3189 : 
; 3190 : 		pe->r -= 4;
; 3191 : 		pe->angle += 6.0F;

  00071	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  00076	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c00000
  0007e	83 46 24 fc	 add	 DWORD PTR [esi+36], -4	; fffffffcH
  00082	53		 push	 ebx
  00083	bb 03 00 00 00	 mov	 ebx, 3
  00088	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0

; 3192 : 
; 3193 : 		angle = pe->angle;

  0008d	f3 0f 11 45 08	 movss	 DWORD PTR _angle$[ebp], xmm0
$LL4@petCircleI:

; 3195 : 		{
; 3196 : 			dx = (float)pe->r * CosT( angle );

  00092	51		 push	 ecx
  00093	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00098	e8 00 00 00 00	 call	 ?CosT@@YAMM@Z		; CosT
  0009d	66 0f 6e 46 24	 movd	 xmm0, DWORD PTR [esi+36]
  000a2	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000a5	f3 0f 11 45 f8	 movss	 DWORD PTR tv358[ebp], xmm0
  000aa	d8 4d f8	 fmul	 DWORD PTR tv358[ebp]

; 3197 : 			dy = (float)pe->r * SinT( angle );

  000ad	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]
  000b2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b7	d9 5d f8	 fstp	 DWORD PTR _dx$[ebp]
  000ba	e8 00 00 00 00	 call	 ?SinT@@YAMM@Z		; SinT
  000bf	66 0f 6e 46 24	 movd	 xmm0, DWORD PTR [esi+36]

; 3198 : 
; 3199 : 			// ?î¡¡î¸î?îº
; 3200 : 			camMapToGamen( ptAct->mx+dx, ptAct->my+dy, &mx, &my );

  000c4	8d 45 f0	 lea	 eax, DWORD PTR _my$[ebp]
  000c7	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000ca	83 c4 04	 add	 esp, 4
  000cd	50		 push	 eax
  000ce	f3 0f 11 45 fc	 movss	 DWORD PTR tv351[ebp], xmm0
  000d3	8d 45 f4	 lea	 eax, DWORD PTR _mx$[ebp]
  000d6	d8 4d fc	 fmul	 DWORD PTR tv351[ebp]
  000d9	50		 push	 eax
  000da	83 ec 08	 sub	 esp, 8
  000dd	d9 5d fc	 fstp	 DWORD PTR _dy$[ebp]
  000e0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _dy$[ebp]
  000e5	f3 0f 58 87 1c
	01 00 00	 addss	 xmm0, DWORD PTR [edi+284]
  000ed	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000f3	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  000f8	f3 0f 58 87 18
	01 00 00	 addss	 xmm0, DWORD PTR [edi+280]
  00100	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00105	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  0010a	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 3201 : 			ptAct->x = (int)(mx+.5);

  0010f	0f 5a c0	 cvtps2pd xmm0, xmm0

; 3202 : 			ptAct->y = (int)(my+.5);
; 3203 : 
; 3204 : 			// ?????????
; 3205 : 			pattern( ptAct, ANM_NOMAL_SPD, ANM_LOOP );

  00112	6a 00		 push	 0
  00114	6a 00		 push	 0
  00116	57		 push	 edi
  00117	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0011f	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00123	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _my$[ebp]
  00128	0f 5a c0	 cvtps2pd xmm0, xmm0
  0012b	89 47 18	 mov	 DWORD PTR [edi+24], eax
  0012e	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00136	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0013a	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  0013d	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 3206 : 
; 3207 : 			// ??????????????
; 3208 : 			setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx+dx, ptAct->my+dy );

  00142	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _dy$[ebp]
  00147	83 c4 14	 add	 esp, 20			; 00000014H
  0014a	f3 0f 58 87 1c
	01 00 00	 addss	 xmm0, DWORD PTR [edi+284]
  00152	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00158	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _dx$[ebp]
  0015d	f3 0f 58 87 18
	01 00 00	 addss	 xmm0, DWORD PTR [edi+280]
  00165	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0016a	6a 00		 push	 0
  0016c	6a 00		 push	 0
  0016e	ff 77 1c	 push	 DWORD PTR [edi+28]
  00171	ff 77 18	 push	 DWORD PTR [edi+24]
  00174	ff b7 9c 00 00
	00		 push	 DWORD PTR [edi+156]
  0017a	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio

; 3209 : 			angle += 120;

  0017f	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]

; 3210 : 			AdjustDir( &angle );

  00184	8d 45 08	 lea	 eax, DWORD PTR _angle$[ebp]
  00187	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42f00000
  0018f	50		 push	 eax
  00190	f3 0f 11 45 08	 movss	 DWORD PTR _angle$[ebp], xmm0
  00195	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir
  0019a	83 c4 20	 add	 esp, 32			; 00000020H
  0019d	83 eb 01	 sub	 ebx, 1
  001a0	74 30		 je	 SHORT $LN21@petCircleI

; 3194 : 		for( i = 0; i < 3; i++ )

  001a2	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]
  001a7	e9 e6 fe ff ff	 jmp	 $LL4@petCircleI
$LN5@petCircleI:

; 3170 : 	}
; 3171 : 	else
; 3172 : 	{
; 3173 : 		if( pe->r <= 0 )

  001ac	83 7e 24 00	 cmp	 DWORD PTR [esi+36], 0
  001b0	0f 8f 7e fe ff
	ff		 jg	 $LN17@petCircleI

; 3174 : 		{
; 3175 : 			restorePtActCharObj( pe->id );

  001b6	ff 76 28	 push	 DWORD PTR [esi+40]
  001b9	e8 00 00 00 00	 call	 ?restorePtActCharObj@@YAXH@Z ; restorePtActCharObj

; 3176 : 			DeathAction( ptAct );

  001be	57		 push	 edi
  001bf	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  001c4	83 c4 08	 add	 esp, 8

; 3177 : 			ptAct = NULL;
; 3178 : 			return TRUE;

  001c7	b8 01 00 00 00	 mov	 eax, 1
  001cc	5f		 pop	 edi

; 3215 : }

  001cd	5e		 pop	 esi
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c3		 ret	 0
$LN21@petCircleI:

; 3211 : 		}
; 3212 : 	}
; 3213 : 
; 3214 : 	return FALSE;

  001d2	5b		 pop	 ebx
  001d3	5f		 pop	 edi
  001d4	33 c0		 xor	 eax, eax

; 3215 : }

  001d6	5e		 pop	 esi
  001d7	8b e5		 mov	 esp, ebp
  001d9	5d		 pop	 ebp
  001da	c3		 ret	 0
?petCircleInProc@@YAHPAUaction@@@Z ENDP			; petCircleInProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?petCircleOutProc@@YAHPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -16						; size = 4
_mx$ = -12						; size = 4
tv319 = -8						; size = 4
_dx$ = -8						; size = 4
tv310 = -4						; size = 4
_dy$ = -4						; size = 4
_angle$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?petCircleOutProc@@YAHPAUaction@@@Z PROC		; petCircleOutProc, COMDAT

; 3101 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi
  00007	57		 push	 edi

; 3102 : 	PETEXTRA *pe = (PETEXTRA *)ptAct->pYobi;

  00008	8b 7d 08	 mov	 edi, DWORD PTR _ptAct$[ebp]
  0000b	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]

; 3103 : 	float mx, my;
; 3104 : 	float dx, dy;
; 3105 : 	float angle;
; 3106 : 	int i;
; 3107 : 
; 3108 : 	if( pe->ptAct == NULL )

  0000e	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00012	75 37		 jne	 SHORT $LN5@petCircleO

; 3109 : 	{
; 3110 : 		pe->ptAct = (ACTION *)1;

  00014	c7 46 18 01 00
	00 00		 mov	 DWORD PTR [esi+24], 1

; 3111 : 		pe->angle = 0.0F;

  0001b	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0

; 3112 : 		pe->r = 0;

  00022	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0

; 3113 : 		createCommmonEffectNoLoop( SPR_hoshi, ptAct->gx, ptAct->gy,

  00029	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  0002d	50		 push	 eax
  0002e	6a 00		 push	 0
  00030	6a 00		 push	 0
  00032	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  00038	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  0003e	68 fd 88 01 00	 push	 100605			; 000188fdH
  00043	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  00048	83 c4 18	 add	 esp, 24			; 00000018H
$LN5@petCircleO:

; 3114 : 			0, 0, ptAct->dispPrio );
; 3115 : 	}
; 3116 : 
; 3117 : 	if( pe->r > 800 )

  0004b	81 7e 24 20 03
	00 00		 cmp	 DWORD PTR [esi+36], 800	; 00000320H
  00052	7e 19		 jle	 SHORT $LN6@petCircleO

; 3118 : 	{
; 3119 : 		restorePtActCharObj( pe->id );

  00054	ff 76 28	 push	 DWORD PTR [esi+40]
  00057	e8 00 00 00 00	 call	 ?restorePtActCharObj@@YAXH@Z ; restorePtActCharObj

; 3120 : 		DeathAction( ptAct );

  0005c	57		 push	 edi
  0005d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00062	83 c4 08	 add	 esp, 8

; 3152 : }

  00065	33 c0		 xor	 eax, eax
  00067	5f		 pop	 edi
  00068	5e		 pop	 esi
  00069	8b e5		 mov	 esp, ebp
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
$LN6@petCircleO:

; 3121 : 		ptAct = NULL;
; 3122 : 		return FALSE;
; 3123 : 	}
; 3124 : 
; 3125 : 	if( pe->ptAct != NULL && pe->createTime+1000 < TimeGetTime() )

  0006d	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  00071	74 28		 je	 SHORT $LN7@petCircleO
  00073	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00078	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0007b	81 c1 e8 03 00
	00		 add	 ecx, 1000		; 000003e8H
  00081	3b c8		 cmp	 ecx, eax
  00083	73 16		 jae	 SHORT $LN7@petCircleO

; 3126 : 	{
; 3127 : 		pe->r += 4;
; 3128 : 		pe->angle += 6.0F;

  00085	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  0008a	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@40c00000
  00092	83 46 24 04	 add	 DWORD PTR [esi+36], 4
  00096	f3 0f 11 46 20	 movss	 DWORD PTR [esi+32], xmm0
$LN7@petCircleO:

; 3129 : 	}
; 3130 : 
; 3131 : 	angle = pe->angle;

  0009b	f3 0f 10 46 20	 movss	 xmm0, DWORD PTR [esi+32]
  000a0	53		 push	 ebx
  000a1	f3 0f 11 45 08	 movss	 DWORD PTR _angle$[ebp], xmm0
  000a6	bb 03 00 00 00	 mov	 ebx, 3
  000ab	0f 1f 44 00 00	 npad	 5
$LL4@petCircleO:

; 3133 : 	{
; 3134 : 		dx = (float)pe->r * CosT( angle );

  000b0	51		 push	 ecx
  000b1	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000b6	e8 00 00 00 00	 call	 ?CosT@@YAMM@Z		; CosT
  000bb	66 0f 6e 46 24	 movd	 xmm0, DWORD PTR [esi+36]
  000c0	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000c3	f3 0f 11 45 f8	 movss	 DWORD PTR tv319[ebp], xmm0
  000c8	d8 4d f8	 fmul	 DWORD PTR tv319[ebp]

; 3135 : 		dy = (float)pe->r * SinT( angle );

  000cb	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]
  000d0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000d5	d9 5d f8	 fstp	 DWORD PTR _dx$[ebp]
  000d8	e8 00 00 00 00	 call	 ?SinT@@YAMM@Z		; SinT
  000dd	66 0f 6e 46 24	 movd	 xmm0, DWORD PTR [esi+36]

; 3136 : 
; 3137 : 		// ?î¡¡î¸î?îº
; 3138 : 		camMapToGamen( ptAct->mx+dx, ptAct->my+dy, &mx, &my );

  000e2	8d 45 f0	 lea	 eax, DWORD PTR _my$[ebp]
  000e5	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000e8	83 c4 04	 add	 esp, 4
  000eb	50		 push	 eax
  000ec	f3 0f 11 45 fc	 movss	 DWORD PTR tv310[ebp], xmm0
  000f1	8d 45 f4	 lea	 eax, DWORD PTR _mx$[ebp]
  000f4	d8 4d fc	 fmul	 DWORD PTR tv310[ebp]
  000f7	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  000ff	50		 push	 eax
  00100	83 ec 08	 sub	 esp, 8
  00103	d9 5d fc	 fstp	 DWORD PTR _dy$[ebp]
  00106	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _dy$[ebp]
  0010b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00111	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  00119	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _dx$[ebp]
  0011e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00123	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  00128	f3 0f 10 45 f4	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 3139 : 		ptAct->x = (int)(mx+.5);

  0012d	0f 5a c0	 cvtps2pd xmm0, xmm0

; 3140 : 		ptAct->y = (int)(my+.5);
; 3141 : 
; 3142 : 		// ?????????
; 3143 : 		pattern( ptAct, ANM_NOMAL_SPD, ANM_LOOP );

  00130	6a 00		 push	 0
  00132	6a 00		 push	 0
  00134	57		 push	 edi
  00135	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0013d	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00141	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _my$[ebp]
  00146	0f 5a c0	 cvtps2pd xmm0, xmm0
  00149	89 47 18	 mov	 DWORD PTR [edi+24], eax
  0014c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00154	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00158	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  0015b	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 3144 : 
; 3145 : 		// ??????????????
; 3146 : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx+dx, ptAct->my+dy );

  00160	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  00168	83 c4 14	 add	 esp, 20			; 00000014H
  0016b	f3 0f 58 45 fc	 addss	 xmm0, DWORD PTR _dy$[ebp]
  00170	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00176	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  0017e	f3 0f 58 45 f8	 addss	 xmm0, DWORD PTR _dx$[ebp]
  00183	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00188	6a 00		 push	 0
  0018a	6a 00		 push	 0
  0018c	ff 77 1c	 push	 DWORD PTR [edi+28]
  0018f	ff 77 18	 push	 DWORD PTR [edi+24]
  00192	ff b7 9c 00 00
	00		 push	 DWORD PTR [edi+156]
  00198	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio

; 3147 : 		angle += 120;

  0019d	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]

; 3148 : 		AdjustDir( &angle );

  001a2	8d 45 08	 lea	 eax, DWORD PTR _angle$[ebp]
  001a5	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42f00000
  001ad	50		 push	 eax
  001ae	f3 0f 11 45 08	 movss	 DWORD PTR _angle$[ebp], xmm0
  001b3	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir
  001b8	83 c4 20	 add	 esp, 32			; 00000020H
  001bb	83 eb 01	 sub	 ebx, 1
  001be	74 0a		 je	 SHORT $LN16@petCircleO

; 3132 : 	for( i = 0; i < 3; i++ )

  001c0	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _angle$[ebp]
  001c5	e9 e6 fe ff ff	 jmp	 $LL4@petCircleO
$LN16@petCircleO:

; 3149 : 	}
; 3150 : 
; 3151 : 	return FALSE;

  001ca	5b		 pop	 ebx
  001cb	5f		 pop	 edi

; 3152 : }

  001cc	33 c0		 xor	 eax, eax
  001ce	5e		 pop	 esi
  001cf	8b e5		 mov	 esp, ebp
  001d1	5d		 pop	 ebp
  001d2	c3		 ret	 0
?petCircleOutProc@@YAHPAUaction@@@Z ENDP		; petCircleOutProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?uprisePetProc@@YAHPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?uprisePetProc@@YAHPAUaction@@@Z PROC			; uprisePetProc, COMDAT

; 3073 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 3074 : 	PETEXTRA *pe = (PETEXTRA *)ptAct->pYobi;

  00005	8b 7d 08	 mov	 edi, DWORD PTR _ptAct$[ebp]
  00008	8b 77 0c	 mov	 esi, DWORD PTR [edi+12]

; 3075 : 
; 3076 : 	if( pe->ptAct == NULL && pe->createTime < TimeGetTime() )

  0000b	83 7e 18 00	 cmp	 DWORD PTR [esi+24], 0
  0000f	75 2f		 jne	 SHORT $LN2@uprisePetP
  00011	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00016	39 46 14	 cmp	 DWORD PTR [esi+20], eax
  00019	73 25		 jae	 SHORT $LN2@uprisePetP

; 3077 : 	{
; 3078 : 		pe->ptAct = createCommmonEffectNoLoop( SPR_difence, ptAct->gx, ptAct->gy,

  0001b	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  0001f	50		 push	 eax
  00020	6a 00		 push	 0
  00022	6a 00		 push	 0
  00024	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  0002a	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  00030	68 02 89 01 00	 push	 100610			; 00018902H
  00035	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  0003a	83 c4 18	 add	 esp, 24			; 00000018H
  0003d	89 46 18	 mov	 DWORD PTR [esi+24], eax
$LN2@uprisePetP:

; 3079 : 			0, 0, ptAct->dispPrio );
; 3080 : 	}
; 3081 : 	if( pe->ptAct2 == NULL && pe->createTime+500 < TimeGetTime() )

  00040	83 7e 1c 00	 cmp	 DWORD PTR [esi+28], 0
  00044	75 37		 jne	 SHORT $LN3@uprisePetP
  00046	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0004b	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  0004e	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00054	3b c8		 cmp	 ecx, eax
  00056	73 25		 jae	 SHORT $LN3@uprisePetP

; 3082 : 	{
; 3083 : 		pe->ptAct2 = createCommmonEffectNoLoop( SPR_difence, ptAct->gx, ptAct->gy,

  00058	0f b6 47 15	 movzx	 eax, BYTE PTR [edi+21]
  0005c	50		 push	 eax
  0005d	6a 00		 push	 0
  0005f	6a 00		 push	 0
  00061	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  00067	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  0006d	68 02 89 01 00	 push	 100610			; 00018902H
  00072	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  00077	83 c4 18	 add	 esp, 24			; 00000018H
  0007a	89 46 1c	 mov	 DWORD PTR [esi+28], eax
$LN3@uprisePetP:

; 3084 : 			0, 0, ptAct->dispPrio );
; 3085 : 	}
; 3086 : 
; 3087 : 	// ?î¾??????î????
; 3088 : 	if( pe->createTime+1200 < TimeGetTime() )

  0007d	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00082	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00085	81 c1 b0 04 00
	00		 add	 ecx, 1200		; 000004b0H
  0008b	3b c8		 cmp	 ecx, eax
  0008d	73 11		 jae	 SHORT $LN6@uprisePetP

; 3089 : 	{
; 3090 : 		restorePtActCharObj( pe->id );

  0008f	ff 76 28	 push	 DWORD PTR [esi+40]
  00092	e8 00 00 00 00	 call	 ?restorePtActCharObj@@YAXH@Z ; restorePtActCharObj

; 3091 : 		DeathAction( ptAct );

  00097	57		 push	 edi
  00098	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0009d	83 c4 08	 add	 esp, 8
$LN6@uprisePetP:

; 3092 : 		ptAct = NULL;
; 3093 : 	}
; 3094 : 
; 3095 : 	return FALSE;
; 3096 : }

  000a0	5f		 pop	 edi
  000a1	33 c0		 xor	 eax, eax
  000a3	5e		 pop	 esi
  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?uprisePetProc@@YAHPAUaction@@@Z ENDP			; uprisePetProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?petMoveProc@@YAHPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?petMoveProc@@YAHPAUaction@@@Z PROC			; petMoveProc, COMDAT

; 3022 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3023 : 	PETEXTRA *pe = (PETEXTRA *)ptAct->pYobi;
; 3024 : 
; 3025 : 	// îª???î??????î?
; 3026 : 	// ?î??8î¾?î¯????î?
; 3027 : 	if( ABS( ptAct->gx - nowGx ) >= 13
; 3028 : 	 || ABS( ptAct->gy - nowGy ) >= 13
; 3029 : 	 || (pe->createTime+8000 < TimeGetTime() && ptAct->vx == 0 && ptAct->vy == 0) )

  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00008	56		 push	 esi
  00009	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000c	57		 push	 edi
  0000d	8b 96 b4 00 00
	00		 mov	 edx, DWORD PTR [esi+180]
  00013	8b ca		 mov	 ecx, edx
  00015	2b c8		 sub	 ecx, eax
  00017	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  0001a	79 04		 jns	 SHORT $LN10@petMovePro
  0001c	2b c2		 sub	 eax, edx
  0001e	eb 02		 jmp	 SHORT $LN11@petMovePro
$LN10@petMovePro:
  00020	8b c1		 mov	 eax, ecx
$LN11@petMovePro:
  00022	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00025	0f 8d 59 01 00
	00		 jge	 $LN3@petMovePro
  0002b	8b 96 b8 00 00
	00		 mov	 edx, DWORD PTR [esi+184]
  00031	8b ca		 mov	 ecx, edx
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00038	2b c8		 sub	 ecx, eax
  0003a	79 04		 jns	 SHORT $LN12@petMovePro
  0003c	2b c2		 sub	 eax, edx
  0003e	eb 02		 jmp	 SHORT $LN13@petMovePro
$LN12@petMovePro:
  00040	8b c1		 mov	 eax, ecx
$LN13@petMovePro:
  00042	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00045	0f 8d 39 01 00
	00		 jge	 $LN3@petMovePro
  0004b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00050	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00053	0f 57 c9	 xorps	 xmm1, xmm1
  00056	81 c1 40 1f 00
	00		 add	 ecx, 8000		; 00001f40H
  0005c	3b c8		 cmp	 ecx, eax
  0005e	73 26		 jae	 SHORT $LN2@petMovePro
  00060	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  00068	0f 2e c1	 ucomiss xmm0, xmm1
  0006b	9f		 lahf
  0006c	f6 c4 44	 test	 ah, 68			; 00000044H
  0006f	7a 15		 jp	 SHORT $LN2@petMovePro
  00071	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  00079	0f 2e c1	 ucomiss xmm0, xmm1
  0007c	9f		 lahf
  0007d	f6 c4 44	 test	 ah, 68			; 00000044H
  00080	0f 8b fe 00 00
	00		 jnp	 $LN3@petMovePro
$LN2@petMovePro:

; 3035 : 	}
; 3036 : 
; 3037 : 	if( pe->ptAct == NULL && pe->createTime+7200 < TimeGetTime() )

  00086	83 7f 18 00	 cmp	 DWORD PTR [edi+24], 0
  0008a	75 37		 jne	 SHORT $LN4@petMovePro
  0008c	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00091	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  00094	81 c1 20 1c 00
	00		 add	 ecx, 7200		; 00001c20H
  0009a	3b c8		 cmp	 ecx, eax
  0009c	73 25		 jae	 SHORT $LN4@petMovePro

; 3038 : 	{
; 3039 : 		pe->ptAct = createCommmonEffectNoLoop( SPR_difence, ptAct->gx, ptAct->gy,

  0009e	0f b6 46 15	 movzx	 eax, BYTE PTR [esi+21]
  000a2	50		 push	 eax
  000a3	6a 00		 push	 0
  000a5	6a 00		 push	 0
  000a7	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  000ad	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  000b3	68 02 89 01 00	 push	 100610			; 00018902H
  000b8	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  000bd	83 c4 18	 add	 esp, 24			; 00000018H
  000c0	89 47 18	 mov	 DWORD PTR [edi+24], eax
$LN4@petMovePro:

; 3040 : 			0, 0, ptAct->dispPrio );
; 3041 : 	}
; 3042 : 	if( pe->ptAct2 == NULL && pe->createTime+7500 < TimeGetTime() )

  000c3	83 7f 1c 00	 cmp	 DWORD PTR [edi+28], 0
  000c7	75 37		 jne	 SHORT $LN5@petMovePro
  000c9	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  000ce	8b 4f 14	 mov	 ecx, DWORD PTR [edi+20]
  000d1	81 c1 4c 1d 00
	00		 add	 ecx, 7500		; 00001d4cH
  000d7	3b c8		 cmp	 ecx, eax
  000d9	73 25		 jae	 SHORT $LN5@petMovePro

; 3043 : 	{
; 3044 : 		pe->ptAct2 = createCommmonEffectNoLoop( SPR_difence, ptAct->gx, ptAct->gy,

  000db	0f b6 46 15	 movzx	 eax, BYTE PTR [esi+21]
  000df	50		 push	 eax
  000e0	6a 00		 push	 0
  000e2	6a 00		 push	 0
  000e4	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  000ea	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  000f0	68 02 89 01 00	 push	 100610			; 00018902H
  000f5	e8 00 00 00 00	 call	 ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectNoLoop
  000fa	83 c4 18	 add	 esp, 24			; 00000018H
  000fd	89 47 1c	 mov	 DWORD PTR [edi+28], eax
$LN5@petMovePro:

; 3045 : 			0, 0, ptAct->dispPrio );
; 3046 : 	}
; 3047 : 
; 3048 : 
; 3049 : 	if( ptAct->vx == 0 && ptAct->vy == 0 )

  00100	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  00108	0f 57 c9	 xorps	 xmm1, xmm1
  0010b	0f 2e c1	 ucomiss xmm0, xmm1
  0010e	9f		 lahf
  0010f	f6 c4 44	 test	 ah, 68			; 00000044H
  00112	7a 1a		 jp	 SHORT $LN6@petMovePro
  00114	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  0011c	0f 2e c1	 ucomiss xmm0, xmm1
  0011f	9f		 lahf
  00120	f6 c4 44	 test	 ah, 68			; 00000044H
  00123	7a 09		 jp	 SHORT $LN6@petMovePro

; 3050 : 	{
; 3051 : 		// ?î®?î·???????îº???
; 3052 : 		getPetRoute( ptAct );

  00125	56		 push	 esi
  00126	e8 00 00 00 00	 call	 ?getPetRoute@@YAXPAUaction@@@Z ; getPetRoute
  0012b	83 c4 04	 add	 esp, 4
$LN6@petMovePro:

; 3053 : 	}
; 3054 : 	charMove( ptAct );

  0012e	56		 push	 esi
  0012f	e8 00 00 00 00	 call	 ?charMove@@YAXPAUaction@@@Z ; charMove

; 3055 : 
; 3056 : 	if( pe->ptAct != NULL )

  00134	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00137	83 c4 04	 add	 esp, 4
  0013a	85 c9		 test	 ecx, ecx
  0013c	74 1b		 je	 SHORT $LN7@petMovePro

; 3057 : 	{
; 3058 : 		pe->ptAct->mx = ptAct->mx;

  0013e	8b 86 18 01 00
	00		 mov	 eax, DWORD PTR [esi+280]
  00144	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax

; 3059 : 		pe->ptAct->my = ptAct->my;

  0014a	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  0014d	8b 86 1c 01 00
	00		 mov	 eax, DWORD PTR [esi+284]
  00153	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
$LN7@petMovePro:

; 3060 : 	}
; 3061 : 	if( pe->ptAct2 != NULL )

  00159	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0015c	85 c9		 test	 ecx, ecx
  0015e	74 1b		 je	 SHORT $LN8@petMovePro

; 3062 : 	{
; 3063 : 		pe->ptAct2->mx = ptAct->mx;

  00160	8b 86 18 01 00
	00		 mov	 eax, DWORD PTR [esi+280]
  00166	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax

; 3064 : 		pe->ptAct2->my = ptAct->my;

  0016c	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0016f	8b 86 1c 01 00
	00		 mov	 eax, DWORD PTR [esi+284]
  00175	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
$LN8@petMovePro:

; 3065 : 	}
; 3066 : 
; 3067 : 	return TRUE;

  0017b	5f		 pop	 edi
  0017c	b8 01 00 00 00	 mov	 eax, 1

; 3068 : }

  00181	5e		 pop	 esi
  00182	5d		 pop	 ebp
  00183	c3		 ret	 0
$LN3@petMovePro:

; 3030 : 	{
; 3031 : 		restorePtActCharObj( pe->id );

  00184	ff 77 28	 push	 DWORD PTR [edi+40]
  00187	e8 00 00 00 00	 call	 ?restorePtActCharObj@@YAXH@Z ; restorePtActCharObj

; 3032 : 		DeathAction( ptAct );

  0018c	56		 push	 esi
  0018d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00192	83 c4 08	 add	 esp, 8

; 3033 : 		ptAct = NULL;
; 3034 : 		return FALSE;

  00195	33 c0		 xor	 eax, eax
  00197	5f		 pop	 edi

; 3068 : }

  00198	5e		 pop	 esi
  00199	5d		 pop	 ebp
  0019a	c3		 ret	 0
?petMoveProc@@YAHPAUaction@@@Z ENDP			; petMoveProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getPetRoute@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_gx$1$ = -16						; size = 4
_dy$ = -12						; size = 4
_dx$ = -8						; size = 4
_dir$1$ = -4						; size = 4
_dir$ = -4						; size = 2
_ptAct$ = 8						; size = 4
?getPetRoute@@YAXPAUaction@@@Z PROC			; getPetRoute, COMDAT

; 2950 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx

; 2951 : 	short dir;
; 2952 : 	int i;
; 2953 : 	int dx, dy;
; 2954 : 	int gx, gy;
; 2955 : 	PETEXTRA *pe;
; 2956 : 
; 2957 : 	if( ptAct->bufCount > 0 )

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _ptAct$[ebp]
  0000a	66 83 bb 14 01
	00 00 00	 cmp	 WORD PTR [ebx+276], 0
  00012	0f 8f 2f 01 00
	00		 jg	 $LN7@getPetRout

; 2958 : 		return;
; 2959 : 
; 2960 : 	// ???îî?????????
; 2961 : 	if( nowGx != oldGx || nowGy != oldGy )

  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0001d	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?oldGx@@3HA ; oldGx
  00023	0f 85 1e 01 00
	00		 jne	 $LN7@getPetRout
  00029	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  0002e	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?oldGy@@3HA ; oldGy
  00034	0f 85 0d 01 00
	00		 jne	 $LN7@getPetRout

; 2962 : 		return;
; 2963 : 
; 2964 : 	pe = (PETEXTRA *)ptAct->pYobi;

  0003a	56		 push	 esi
  0003b	8b 73 0c	 mov	 esi, DWORD PTR [ebx+12]
  0003e	57		 push	 edi

; 2965 : 
; 2966 : 	dir = pe->moveDir;
; 2967 : 
; 2968 : 	for( i = 0; i < 4; i++ )

  0003f	33 ff		 xor	 edi, edi
  00041	0f b7 46 02	 movzx	 eax, WORD PTR [esi+2]
$LN27@getPetRout:

; 2969 : 	{
; 2970 : 		getRouteData( dir, &dx, &dy );

  00045	8d 4d f4	 lea	 ecx, DWORD PTR _dy$[ebp]
  00048	89 45 fc	 mov	 DWORD PTR _dir$1$[ebp], eax
  0004b	51		 push	 ecx
  0004c	8d 4d f8	 lea	 ecx, DWORD PTR _dx$[ebp]
  0004f	98		 cwde
  00050	51		 push	 ecx
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?getRouteData@@YAXHPAH0@Z ; getRouteData

; 2971 : 		gx = ptAct->gx+dx;

  00057	8b 83 b4 00 00
	00		 mov	 eax, DWORD PTR [ebx+180]
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	03 45 f8	 add	 eax, DWORD PTR _dx$[ebp]

; 2972 : 		gy = ptAct->gy+dy;

  00063	8b 9b b8 00 00
	00		 mov	 ebx, DWORD PTR [ebx+184]
  00069	03 5d f4	 add	 ebx, DWORD PTR _dy$[ebp]
  0006c	89 45 f0	 mov	 DWORD PTR _gx$1$[ebp], eax

; 2973 : 		if( (gx != pe->preGx || gy != pe->preGy)
; 2974 : 		 && checkHitMap( gx, gy ) == FALSE )

  0006f	3b 46 08	 cmp	 eax, DWORD PTR [esi+8]
  00072	75 05		 jne	 SHORT $LN9@getPetRout
  00074	3b 5e 0c	 cmp	 ebx, DWORD PTR [esi+12]
  00077	74 0e		 je	 SHORT $LN8@getPetRout
$LN9@getPetRout:
  00079	53		 push	 ebx
  0007a	50		 push	 eax
  0007b	e8 00 00 00 00	 call	 ?checkHitMap@@YAHHH@Z	; checkHitMap
  00080	83 c4 08	 add	 esp, 8
  00083	85 c0		 test	 eax, eax
  00085	74 4c		 je	 SHORT $LN10@getPetRout
$LN8@getPetRout:

; 2975 : 		{
; 2976 : 			break;
; 2977 : 		}
; 2978 : 		dir += (2*(i+1));

  00087	8b 45 fc	 mov	 eax, DWORD PTR _dir$1$[ebp]
  0008a	8d 04 78	 lea	 eax, DWORD PTR [eax+edi*2]
  0008d	83 c0 02	 add	 eax, 2
  00090	89 45 fc	 mov	 DWORD PTR _dir$[ebp], eax

; 2979 : 		ajustClientDir( &dir );

  00093	8d 45 fc	 lea	 eax, DWORD PTR _dir$[ebp]
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 ?ajustClientDir@@YAXPAF@Z ; ajustClientDir
  0009c	47		 inc	 edi
  0009d	83 c4 04	 add	 esp, 4
  000a0	83 ff 04	 cmp	 edi, 4
  000a3	7d 08		 jge	 SHORT $LN24@getPetRout

; 2965 : 
; 2966 : 	dir = pe->moveDir;
; 2967 : 
; 2968 : 	for( i = 0; i < 4; i++ )

  000a5	8b 45 fc	 mov	 eax, DWORD PTR _dir$[ebp]
  000a8	8b 5d 08	 mov	 ebx, DWORD PTR _ptAct$[ebp]
  000ab	eb 98		 jmp	 SHORT $LN27@getPetRout
$LN24@getPetRout:

; 2980 : 	}
; 2981 : 
; 2982 : 	if( i >= 4 )
; 2983 : 	{
; 2984 : 		pe->preGx = -1;
; 2985 : 		pe->preGy = -1;
; 2986 : 		pe->moveDir -= 2;

  000ad	66 83 46 02 fe	 add	 WORD PTR [esi+2], -2	; fffffffeH
  000b2	8d 46 02	 lea	 eax, DWORD PTR [esi+2]

; 2987 : 		ajustClientDir( &pe->moveDir );

  000b5	50		 push	 eax
  000b6	c7 46 08 ff ff
	ff ff		 mov	 DWORD PTR [esi+8], -1
  000bd	c7 46 0c ff ff
	ff ff		 mov	 DWORD PTR [esi+12], -1
  000c4	e8 00 00 00 00	 call	 ?ajustClientDir@@YAXPAF@Z ; ajustClientDir
  000c9	83 c4 04	 add	 esp, 4
  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx

; 3015 : 
; 3016 : 	return;
; 3017 : }

  000cf	8b e5		 mov	 esp, ebp
  000d1	5d		 pop	 ebp
  000d2	c3		 ret	 0
$LN10@getPetRout:

; 2988 : 		return;
; 2989 : 	}
; 2990 : 
; 2991 : 	if( pe->dirCnt >= 2 )

  000d3	66 83 7e 06 02	 cmp	 WORD PTR [esi+6], 2
  000d8	7c 17		 jl	 SHORT $LN11@getPetRout

; 2992 : 	{
; 2993 : 		pe->dirCnt = 0;
; 2994 : 		pe->moveDir -= 6;

  000da	66 83 46 02 fa	 add	 WORD PTR [esi+2], -6	; fffffffaH
  000df	33 c0		 xor	 eax, eax
  000e1	66 89 46 06	 mov	 WORD PTR [esi+6], ax
  000e5	8d 46 02	 lea	 eax, DWORD PTR [esi+2]

; 2995 : 		ajustClientDir( &pe->moveDir );

  000e8	50		 push	 eax
  000e9	e8 00 00 00 00	 call	 ?ajustClientDir@@YAXPAF@Z ; ajustClientDir
  000ee	83 c4 04	 add	 esp, 4
$LN11@getPetRout:

; 2996 : 	}
; 2997 : 
; 2998 : 	if( dir != pe->preDir )

  000f1	8b 45 fc	 mov	 eax, DWORD PTR _dir$1$[ebp]
  000f4	66 3b 46 04	 cmp	 ax, WORD PTR [esi+4]
  000f8	74 06		 je	 SHORT $LN12@getPetRout

; 2999 : 	{
; 3000 : 		pe->dirCnt++;

  000fa	66 ff 46 06	 inc	 WORD PTR [esi+6]

; 3001 : 	}

  000fe	eb 06		 jmp	 SHORT $LN13@getPetRout
$LN12@getPetRout:

; 3002 : 	else
; 3003 : 	{
; 3004 : 		pe->dirCnt = 0;

  00100	33 c9		 xor	 ecx, ecx
  00102	66 89 4e 06	 mov	 WORD PTR [esi+6], cx
$LN13@getPetRout:

; 3005 : 	}
; 3006 : 
; 3007 : 	pe->preDir = dir;
; 3008 : 
; 3009 : 	ptAct->bufGx[ptAct->bufCount] = gx;

  00106	8b 4d 08	 mov	 ecx, DWORD PTR _ptAct$[ebp]
  00109	8b 55 f0	 mov	 edx, DWORD PTR _gx$1$[ebp]
  0010c	66 89 46 04	 mov	 WORD PTR [esi+4], ax
  00110	5f		 pop	 edi
  00111	0f bf 81 14 01
	00 00		 movsx	 eax, WORD PTR [ecx+276]
  00118	89 94 81 c4 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+196], edx

; 3010 : 	ptAct->bufGy[ptAct->bufCount] = gy;

  0011f	0f bf 81 14 01
	00 00		 movsx	 eax, WORD PTR [ecx+276]
  00126	89 9c 81 ec 00
	00 00		 mov	 DWORD PTR [ecx+eax*4+236], ebx

; 3011 : 	ptAct->bufCount++;
; 3012 : 
; 3013 : 	pe->preGx = ptAct->gx;

  0012d	8b 81 b4 00 00
	00		 mov	 eax, DWORD PTR [ecx+180]
  00133	66 ff 81 14 01
	00 00		 inc	 WORD PTR [ecx+276]
  0013a	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 3014 : 	pe->preGy = ptAct->gy;

  0013d	8b 81 b8 00 00
	00		 mov	 eax, DWORD PTR [ecx+184]
  00143	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  00146	5e		 pop	 esi
$LN7@getPetRout:
  00147	5b		 pop	 ebx

; 3015 : 
; 3016 : 	return;
; 3017 : }

  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
?getPetRoute@@YAXPAUaction@@@Z ENDP			; getPetRoute
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?limitCantClientDir@@YAXPAF@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?limitCantClientDir@@YAXPAF@Z PROC			; limitCantClientDir, COMDAT

; 2920 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2921 : 	// dir?????î½?????????
; 2922 : 	if( ((*dir) % 2) == 0 )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _dir$[ebp]
  00006	0f b7 01	 movzx	 eax, WORD PTR [ecx]
  00009	a8 01		 test	 al, 1
  0000b	75 04		 jne	 SHORT $LN2@limitCantC

; 2923 : 	{
; 2924 : 		(*dir)++;

  0000d	40		 inc	 eax
  0000e	66 89 01	 mov	 WORD PTR [ecx], ax
$LN2@limitCantC:

; 2925 : 	}
; 2926 : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?limitCantClientDir@@YAXPAF@Z ENDP			; limitCantClientDir
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?searchCharObjId@@YAHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?searchCharObjId@@YAHH@Z PROC				; searchCharObjId, COMDAT

; 2039 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2040 : 	int i;
; 2041 : 	int no = -1;
; 2042 : 	for( i = searchCharObj; i < tailCharObj; i++ ){

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?searchCharObj@@3HA ; searchCharObj
  00009	8b ca		 mov	 ecx, edx
  0000b	53		 push	 ebx
  0000c	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  00012	56		 push	 esi
  00013	8b 75 08	 mov	 esi, DWORD PTR _id$[ebp]
  00016	57		 push	 edi
  00017	83 cf ff	 or	 edi, -1
  0001a	3b cb		 cmp	 ecx, ebx
  0001c	7d 37		 jge	 SHORT $LN23@searchChar
  0001e	69 c1 0c 01 00
	00		 imul	 eax, ecx, 268
  00024	05 04 00 00 00	 add	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+4
  00029	0f 1f 80 00 00
	00 00		 npad	 7
$LL4@searchChar:

; 2043 : 		if( charObj[i].use != CHAROBJ_USE_FREE && charObj[i].id == id ){

  00030	66 83 78 fc 00	 cmp	 WORD PTR [eax-4], 0
  00035	74 04		 je	 SHORT $LN2@searchChar
  00037	39 30		 cmp	 DWORD PTR [eax], esi
  00039	74 0c		 je	 SHORT $LN14@searchChar
$LN2@searchChar:

; 2040 : 	int i;
; 2041 : 	int no = -1;
; 2042 : 	for( i = searchCharObj; i < tailCharObj; i++ ){

  0003b	41		 inc	 ecx
  0003c	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00041	3b cb		 cmp	 ecx, ebx
  00043	7c eb		 jl	 SHORT $LL4@searchChar
  00045	eb 0e		 jmp	 SHORT $LN23@searchChar
$LN14@searchChar:

; 2044 : 			no = i;
; 2045 : 			searchCharObj = i;

  00047	8b d1		 mov	 edx, ecx
  00049	8b f9		 mov	 edi, ecx
  0004b	89 15 00 00 00
	00		 mov	 DWORD PTR ?searchCharObj@@3HA, edx ; searchCharObj

; 2046 : 			break;
; 2047 : 		}
; 2048 : 	}
; 2049 : 	if( no < 0 && searchCharObj > 0 ){

  00051	85 c9		 test	 ecx, ecx
  00053	79 24		 jns	 SHORT $LN28@searchChar
$LN23@searchChar:
  00055	85 d2		 test	 edx, edx
  00057	7e 20		 jle	 SHORT $LN28@searchChar

; 2050 : 		for( i = 0; i < searchCharObj; i++ ){

  00059	33 c9		 xor	 ecx, ecx
  0005b	85 d2		 test	 edx, edx
  0005d	7e 1a		 jle	 SHORT $LN28@searchChar
  0005f	b8 04 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+4
$LL7@searchChar:

; 2051 : 			if( charObj[i].use != CHAROBJ_USE_FREE && charObj[i].id == id ){

  00064	66 83 78 fc 00	 cmp	 WORD PTR [eax-4], 0
  00069	74 04		 je	 SHORT $LN5@searchChar
  0006b	39 30		 cmp	 DWORD PTR [eax], esi
  0006d	74 11		 je	 SHORT $LN15@searchChar
$LN5@searchChar:

; 2050 : 		for( i = 0; i < searchCharObj; i++ ){

  0006f	41		 inc	 ecx
  00070	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00075	3b ca		 cmp	 ecx, edx
  00077	7c eb		 jl	 SHORT $LL7@searchChar
$LN28@searchChar:

; 2052 : 				no = i;
; 2053 : 				searchCharObj = i;
; 2054 : 				break;
; 2055 : 			}
; 2056 : 		}
; 2057 : 	}
; 2058 : 	return no;
; 2059 : }

  00079	8b c7		 mov	 eax, edi
  0007b	5f		 pop	 edi
  0007c	5e		 pop	 esi
  0007d	5b		 pop	 ebx
  0007e	5d		 pop	 ebp
  0007f	c3		 ret	 0
$LN15@searchChar:
  00080	5f		 pop	 edi
  00081	5e		 pop	 esi
  00082	89 0d 00 00 00
	00		 mov	 DWORD PTR ?searchCharObj@@3HA, ecx ; searchCharObj
  00088	8b c1		 mov	 eax, ecx
  0008a	5b		 pop	 ebx
  0008b	5d		 pop	 ebp
  0008c	c3		 ret	 0
?searchCharObjId@@YAHH@Z ENDP				; searchCharObjId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?commmonEffectNoLoop@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -4						; size = 4
_mx$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?commmonEffectNoLoop@@YAXPAUaction@@@Z PROC		; commmonEffectNoLoop, COMDAT

; 1637 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 1638 : 	float mx, my;
; 1639 : 	// ?î¡¡î¸î?îº
; 1640 : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00005	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00008	8d 45 fc	 lea	 eax, DWORD PTR _my$[ebp]
  0000b	50		 push	 eax
  0000c	8d 45 08	 lea	 eax, DWORD PTR _mx$[ebp]
  0000f	50		 push	 eax
  00010	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  00018	83 ec 08	 sub	 esp, 8
  0001b	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00021	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  00029	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0002e	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  00033	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 1641 : 	ptAct->x = (int)(mx+.5);

  00038	0f 5a c0	 cvtps2pd xmm0, xmm0

; 1642 : 	ptAct->y = (int)(my+.5);
; 1643 : 	// ?????????
; 1644 : 	if( pattern( ptAct, ANM_NOMAL_SPD, ANM_NO_LOOP ) == 0 )

  0003b	6a 01		 push	 1
  0003d	6a 00		 push	 0
  0003f	56		 push	 esi
  00040	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00048	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0004c	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _my$[ebp]
  00051	0f 5a c0	 cvtps2pd xmm0, xmm0
  00054	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00057	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0005f	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00063	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00066	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  0006b	83 c4 1c	 add	 esp, 28			; 0000001cH
  0006e	85 c0		 test	 eax, eax
  00070	75 3b		 jne	 SHORT $LN2@commmonEff

; 1645 : 		// ??????????????
; 1646 : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y+1, 0, 0, ptAct->mx, ptAct->my );

  00072	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  0007a	83 ec 08	 sub	 esp, 8
  0007d	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00083	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  0008b	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00090	50		 push	 eax
  00091	50		 push	 eax
  00092	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00095	40		 inc	 eax
  00096	50		 push	 eax
  00097	ff 76 18	 push	 DWORD PTR [esi+24]
  0009a	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  000a0	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  000a5	83 c4 1c	 add	 esp, 28			; 0000001cH
  000a8	5e		 pop	 esi

; 1650 : 		ptAct = NULL;
; 1651 : 	}
; 1652 : }

  000a9	8b e5		 mov	 esp, ebp
  000ab	5d		 pop	 ebp
  000ac	c3		 ret	 0
$LN2@commmonEff:

; 1647 : 	else{
; 1648 : 		// ???????î·??????????î·??
; 1649 : 		DeathAction( ptAct );

  000ad	56		 push	 esi
  000ae	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000b3	83 c4 04	 add	 esp, 4
  000b6	5e		 pop	 esi

; 1650 : 		ptAct = NULL;
; 1651 : 	}
; 1652 : }

  000b7	8b e5		 mov	 esp, ebp
  000b9	5d		 pop	 ebp
  000ba	c3		 ret	 0
?commmonEffectNoLoop@@YAXPAUaction@@@Z ENDP		; commmonEffectNoLoop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?CharbubbleRelease@@YAXXZ
_TEXT	SEGMENT
?CharbubbleRelease@@YAXXZ PROC				; CharbubbleRelease, COMDAT

; 1577 : 	if ( popAct != NULL )

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?popAct@@3PAUaction@@A
  00005	85 c0		 test	 eax, eax
  00007	74 13		 je	 SHORT $LN4@Charbubble

; 1578 : 	{
; 1579 : 		DeathAction(popAct);

  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0000f	83 c4 04	 add	 esp, 4

; 1580 : 		popAct = NULL;

  00012	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?popAct@@3PAUaction@@A, 0
$LN4@Charbubble:

; 1581 : 	}
; 1582 : 	popflag = false;
; 1583 : 	waittimeflag = false;  
; 1584 : }

  0001c	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?waittimeflag@@3_NA, 0 ; waittimeflag
  00023	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?popflag@@3_NA, 0 ; popflag
  0002a	c3		 ret	 0
?CharbubbleRelease@@YAXXZ ENDP				; CharbubbleRelease
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?waterAniProc@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -20						; size = 4
_mx$ = -16						; size = 4
_yy$1 = -12						; size = 2
_xx$2 = -8						; size = 2
_hh$3 = -4						; size = 2
_no$1$ = 8						; size = 4
_ww$4 = 8						; size = 2
_no$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?waterAniProc@@YAXPAUaction@@@Z PROC			; waterAniProc, COMDAT

; 202  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 203  : 	float mx, my;
; 204  : 	int animLoop;
; 205  : 	int no;
; 206  : 	CHAREXTRA *ext;
; 207  : 	int pFlag = 0;
; 208  : 	// ?î®??
; 209  : 	// PC???????îî·??î®??
; 210  : 	// PC?????î®????î¼???????î®??
; 211  : 	if( pc.ptAct != ptAct ){

  00008	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000b	33 db		 xor	 ebx, ebx
  0000d	57		 push	 edi
  0000e	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  00014	0f 84 9c 00 00
	00		 je	 $LN28@waterAniPr

; 212  : 		ext = (CHAREXTRA *)ptAct->pYobi;
; 213  : 		no = ext->charObjTblId;

  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]

; 214  : 		// ?????î¼??????????????
; 215  : 		if( (charObj[no].status & CHR_STATUS_PARTY) == 0 ){

  0001f	69 f8 0c 01 00
	00		 imul	 edi, eax, 268
  00025	89 45 08	 mov	 DWORD PTR _no$1$[ebp], eax
  00028	f7 87 2c 00 00
	00 00 02 00 00	 test	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+44], 512 ; 00000200H
  00032	75 0b		 jne	 SHORT $LN3@waterAniPr

; 216  : 			charMove( ptAct );

  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 ?charMove@@YAXPAUaction@@@Z ; charMove
  0003a	83 c4 04	 add	 esp, 4

; 217  : 			pFlag = 0;
; 218  : 		}else

  0003d	eb 05		 jmp	 SHORT $LN4@waterAniPr
$LN3@waterAniPr:

; 219  : 			pFlag = 1;

  0003f	bb 01 00 00 00	 mov	 ebx, 1
$LN4@waterAniPr:

; 220  : 		if( ptAct->vx == 0 && ptAct->vy == 0 && charObj[no].stockDir != -1
; 221  : 		 && charObj[no].stockDirX == ptAct->gx && charObj[no].stockDirY == ptAct->gy ){

  00044	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  0004c	0f 57 c9	 xorps	 xmm1, xmm1
  0004f	0f 2e c1	 ucomiss xmm0, xmm1
  00052	9f		 lahf
  00053	f6 c4 44	 test	 ah, 68			; 00000044H
  00056	7a 64		 jp	 SHORT $LN5@waterAniPr
  00058	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  00060	0f 2e c1	 ucomiss xmm0, xmm1
  00063	9f		 lahf
  00064	f6 c4 44	 test	 ah, 68			; 00000044H
  00067	7a 53		 jp	 SHORT $LN5@waterAniPr
  00069	8b 8f 1c 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+28]
  0006f	83 f9 ff	 cmp	 ecx, -1
  00072	74 48		 je	 SHORT $LN5@waterAniPr
  00074	8b 87 20 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+32]
  0007a	3b 86 b4 00 00
	00		 cmp	 eax, DWORD PTR [esi+180]
  00080	75 3a		 jne	 SHORT $LN5@waterAniPr
  00082	8b 87 24 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+36]
  00088	3b 86 b8 00 00
	00		 cmp	 eax, DWORD PTR [esi+184]
  0008e	75 2c		 jne	 SHORT $LN5@waterAniPr

; 222  : 			ptAct->anim_ang = charObj[no].stockDir;

  00090	89 8e 54 01 00
	00		 mov	 DWORD PTR [esi+340], ecx

; 223  : 			charObj[no].stockDir = -1;

  00096	c7 87 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+28], -1

; 224  : 			charObj[no].stockDirX = 0;

  000a0	c7 87 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+32], 0

; 225  : 			charObj[no].stockDirY = 0;

  000aa	c7 87 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+36], 0
  000b4	eb 06		 jmp	 SHORT $LN5@waterAniPr
$LN28@waterAniPr:

; 203  : 	float mx, my;
; 204  : 	int animLoop;
; 205  : 	int no;
; 206  : 	CHAREXTRA *ext;
; 207  : 	int pFlag = 0;
; 208  : 	// ?î®??
; 209  : 	// PC???????îî·??î®??
; 210  : 	// PC?????î®????î¼???????î®??
; 211  : 	if( pc.ptAct != ptAct ){

  000b6	8b 45 08	 mov	 eax, DWORD PTR _no$[ebp]
  000b9	89 45 08	 mov	 DWORD PTR _no$1$[ebp], eax
$LN5@waterAniPr:

; 226  : 		}
; 227  : 	}
; 228  : 	// ?î¡¡î¸î?îº
; 229  : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  000bc	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  000c4	8d 45 ec	 lea	 eax, DWORD PTR _my$[ebp]
  000c7	50		 push	 eax
  000c8	8d 45 f0	 lea	 eax, DWORD PTR _mx$[ebp]
  000cb	50		 push	 eax
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d5	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000e7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _mx$[ebp]
  000ec	83 c4 10	 add	 esp, 16			; 00000010H

; 230  : 	ptAct->x = (int)(mx+.5);

  000ef	0f 5a c0	 cvtps2pd xmm0, xmm0
  000f2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000fa	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000fe	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _my$[ebp]

; 231  : 	ptAct->y = (int)(my+.5);

  00103	0f 5a c0	 cvtps2pd xmm0, xmm0
  00106	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00109	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00111	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00115	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 232  : 	// ??????????î¸î
; 233  : 	//  ä¸??æäººç©ç¶æä¼è¢«å¤å¶å°å¶ä»ACTION
; 234  : 	//	drawCharStatus( ptAct );
; 235  : 	// ?????????
; 236  : 	if( ptAct->anim_no == ANIM_HAND
; 237  : 	 || ptAct->anim_no == ANIM_HAPPY
; 238  : 	 || ptAct->anim_no == ANIM_ANGRY
; 239  : 	 || ptAct->anim_no == ANIM_SAD
; 240  : 	 || ptAct->anim_no == ANIM_WALK
; 241  : 	 || ptAct->anim_no == ANIM_STAND
; 242  : 	 || ptAct->anim_no == ANIM_NOD )

  00118	8b 86 4c 01 00
	00		 mov	 eax, DWORD PTR [esi+332]
  0011e	83 f8 06	 cmp	 eax, 6
  00121	74 25		 je	 SHORT $LN8@waterAniPr
  00123	83 f8 07	 cmp	 eax, 7
  00126	74 20		 je	 SHORT $LN8@waterAniPr
  00128	83 f8 08	 cmp	 eax, 8
  0012b	74 1b		 je	 SHORT $LN8@waterAniPr
  0012d	83 f8 09	 cmp	 eax, 9
  00130	74 16		 je	 SHORT $LN8@waterAniPr
  00132	83 f8 04	 cmp	 eax, 4
  00135	74 11		 je	 SHORT $LN8@waterAniPr
  00137	83 f8 03	 cmp	 eax, 3
  0013a	74 0c		 je	 SHORT $LN8@waterAniPr
  0013c	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  0013f	74 07		 je	 SHORT $LN8@waterAniPr

; 244  : 	else
; 245  : 		animLoop = ANM_NO_LOOP;

  00141	bf 01 00 00 00	 mov	 edi, 1
  00146	eb 02		 jmp	 SHORT $LN7@waterAniPr
$LN8@waterAniPr:

; 243  : 		animLoop = ANM_LOOP;

  00148	33 ff		 xor	 edi, edi
$LN7@waterAniPr:

; 246  : 	pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  0014a	57		 push	 edi
  0014b	6a 00		 push	 0
  0014d	56		 push	 esi
  0014e	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00153	83 c4 0c	 add	 esp, 12			; 0000000cH

; 247  : 	if( pFlag ){

  00156	85 db		 test	 ebx, ebx
  00158	74 30		 je	 SHORT $LN9@waterAniPr

; 248  : 		if( nowSpdRate >= 1.2F )

  0015a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowSpdRate@@3MA
  00162	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f99999a
  00169	72 14		 jb	 SHORT $LN11@waterAniPr

; 249  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  0016b	57		 push	 edi
  0016c	6a 00		 push	 0
  0016e	56		 push	 esi
  0016f	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00174	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowSpdRate@@3MA
  0017c	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@waterAniPr:

; 250  : 		if( nowSpdRate >= 1.6F )

  0017f	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3fcccccd
  00186	72 36		 jb	 SHORT $LN14@waterAniPr

; 251  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );
; 252  : 	}else{

  00188	eb 28		 jmp	 SHORT $LN31@waterAniPr
$LN9@waterAniPr:

; 253  : 		if( ptAct->bufCount >= 2 )

  0018a	0f b7 86 14 01
	00 00		 movzx	 eax, WORD PTR [esi+276]
  00191	8b c8		 mov	 ecx, eax
  00193	66 83 f8 02	 cmp	 ax, 2
  00197	7c 13		 jl	 SHORT $LN13@waterAniPr

; 254  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  00199	57		 push	 edi
  0019a	6a 00		 push	 0
  0019c	56		 push	 esi
  0019d	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  001a2	0f b7 8e 14 01
	00 00		 movzx	 ecx, WORD PTR [esi+276]
  001a9	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@waterAniPr:

; 255  : 		if( ptAct->bufCount >= 4 )

  001ac	66 83 f9 04	 cmp	 cx, 4
  001b0	7c 0c		 jl	 SHORT $LN14@waterAniPr
$LN31@waterAniPr:

; 256  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );
; 257  : 	}
; 258  : 	if( pc.ptAct != ptAct ){

  001b2	57		 push	 edi
  001b3	6a 00		 push	 0
  001b5	56		 push	 esi
  001b6	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  001bb	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@waterAniPr:
  001be	8b 7d 08	 mov	 edi, DWORD PTR _no$1$[ebp]
  001c1	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  001c7	0f 84 a6 00 00
	00		 je	 $LN29@waterAniPr

; 259  : 		if( charObj[no].newFoundFlag ){

  001cd	69 df 0c 01 00
	00		 imul	 ebx, edi, 268
  001d3	66 83 bb b8 00
	00 00 00	 cmp	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+184], 0
  001db	0f 84 92 00 00
	00		 je	 $LN29@waterAniPr

; 260  : 			S2 xx, yy, ww, hh;
; 261  : 			// ?î¡¡î ??????
; 262  : 			realGetPos( ptAct->bmpNo, &xx, &yy );

  001e1	8d 45 f4	 lea	 eax, DWORD PTR _yy$1[ebp]
  001e4	50		 push	 eax
  001e5	8d 45 f8	 lea	 eax, DWORD PTR _xx$2[ebp]
  001e8	50		 push	 eax
  001e9	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  001ef	e8 00 00 00 00	 call	 ?realGetPos@@YAHKPAF0@Z	; realGetPos

; 263  : 			realGetWH( ptAct->bmpNo, &ww, &hh );

  001f4	8d 45 fc	 lea	 eax, DWORD PTR _hh$3[ebp]
  001f7	50		 push	 eax
  001f8	8d 45 08	 lea	 eax, DWORD PTR _ww$4[ebp]
  001fb	50		 push	 eax
  001fc	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00202	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH

; 264  : 			xx += ptAct->x;

  00207	66 8b 46 18	 mov	 ax, WORD PTR [esi+24]
  0020b	83 c4 18	 add	 esp, 24			; 00000018H
  0020e	66 03 45 f8	 add	 ax, WORD PTR _xx$2[ebp]
  00212	0f b7 c8	 movzx	 ecx, ax
  00215	0f b7 c0	 movzx	 eax, ax
  00218	89 45 f8	 mov	 DWORD PTR _xx$2[ebp], eax

; 265  : 			yy += ptAct->y;

  0021b	66 8b 46 1c	 mov	 ax, WORD PTR [esi+28]
  0021f	66 03 45 f4	 add	 ax, WORD PTR _yy$1[ebp]
  00223	0f b7 d0	 movzx	 edx, ax
  00226	0f b7 c0	 movzx	 eax, ax
  00229	89 45 f4	 mov	 DWORD PTR _yy$1[ebp], eax
  0022c	33 c0		 xor	 eax, eax
  0022e	66 3b c1	 cmp	 ax, cx

; 266  : 			if( 0 <= xx && xx+ww <= DEF_APPSIZEX
; 267  : 			 && 0 <= yy && yy+hh <= DEF_APPSIZEY ){

  00231	7f 40		 jg	 SHORT $LN29@waterAniPr
  00233	0f bf 45 08	 movsx	 eax, WORD PTR _ww$4[ebp]
  00237	0f bf c9	 movsx	 ecx, cx
  0023a	03 c8		 add	 ecx, eax
  0023c	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00242	7f 2f		 jg	 SHORT $LN29@waterAniPr
  00244	33 c0		 xor	 eax, eax
  00246	66 3b c2	 cmp	 ax, dx
  00249	7f 28		 jg	 SHORT $LN29@waterAniPr
  0024b	0f bf 45 fc	 movsx	 eax, WORD PTR _hh$3[ebp]
  0024f	0f bf ca	 movsx	 ecx, dx
  00252	03 c8		 add	 ecx, eax
  00254	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  0025a	7f 17		 jg	 SHORT $LN29@waterAniPr

; 268  : 				CheckNewPet( ptAct->anim_chr_no );

  0025c	ff b6 44 01 00
	00		 push	 DWORD PTR [esi+324]
  00262	e8 00 00 00 00	 call	 ?CheckNewPet@@YAXH@Z	; CheckNewPet
  00267	83 c4 04	 add	 esp, 4

; 269  : 				charObj[no].newFoundFlag = 0;

  0026a	33 c0		 xor	 eax, eax
  0026c	66 89 83 b8 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+184], ax
$LN29@waterAniPr:

; 270  : 			}
; 271  : 		}
; 272  : 	}
; 273  : 	if( 20000 <= ptAct->anim_chr_no && ptAct->anim_chr_no <= 24999 ){

  00273	8b 86 44 01 00
	00		 mov	 eax, DWORD PTR [esi+324]
  00279	2d 20 4e 00 00	 sub	 eax, 20000		; 00004e20H
  0027e	3d 87 13 00 00	 cmp	 eax, 4999		; 00001387H
  00283	0f 87 cc 00 00
	00		 ja	 $LN18@waterAniPr

; 274  : 		// ????
; 275  : 		if( pc.ptAct != ptAct ){

  00289	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  0028f	74 4f		 je	 SHORT $LN27@waterAniPr

; 276  : 			// îª???î??????î?
; 277  : 			if( ptAct->gx < nowGx-16 || nowGx+16 < ptAct->gx
; 278  : 			 || ptAct->gy < nowGy-16 || nowGy+16 < ptAct->gy ){

  00291	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowGx@@3HA ; nowGx
  00297	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0029d	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  002a0	3b c8		 cmp	 ecx, eax
  002a2	7c 21		 jl	 SHORT $LN22@waterAniPr
  002a4	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  002a7	3b c1		 cmp	 eax, ecx
  002a9	7c 1a		 jl	 SHORT $LN22@waterAniPr
  002ab	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowGy@@3HA ; nowGy
  002b1	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  002b7	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  002ba	3b c8		 cmp	 ecx, eax
  002bc	7c 07		 jl	 SHORT $LN22@waterAniPr
  002be	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  002c1	3b c1		 cmp	 eax, ecx
  002c3	7d 1b		 jge	 SHORT $LN27@waterAniPr
$LN22@waterAniPr:

; 279  : 				delCharObj( charObj[no].id );

  002c5	69 c7 0c 01 00
	00		 imul	 eax, edi, 268
  002cb	ff b0 04 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+4]
  002d1	e8 00 00 00 00	 call	 ?delCharObj@@YAXH@Z	; delCharObj
  002d6	83 c4 04	 add	 esp, 4
  002d9	5f		 pop	 edi

; 299  : #else
; 300  : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );
; 301  : #endif
; 302  : 	}
; 303  : }

  002da	5e		 pop	 esi
  002db	5b		 pop	 ebx
  002dc	8b e5		 mov	 esp, ebp
  002de	5d		 pop	 ebp
  002df	c3		 ret	 0
$LN27@waterAniPr:

; 280  : 				return;
; 281  : 			}
; 282  : 		}
; 283  : 		// î¯??îº?????î¸î???
; 284  : 		if( !itemOverlapCheck( ptAct->bmpNo, ptAct->gx, ptAct->gy ) ){

  002e0	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  002e6	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  002ec	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  002f2	e8 00 00 00 00	 call	 ?itemOverlapCheck@@YAHIHH@Z ; itemOverlapCheck
  002f7	83 c4 0c	 add	 esp, 12			; 0000000cH
  002fa	85 c0		 test	 eax, eax
  002fc	75 49		 jne	 SHORT $LN23@waterAniPr

; 285  : 			// ??????????????
; 286  : #ifdef _SPECIALSPACEANIM_FIX  //ROG ADD ä¿®æ¹å¾å±
; 287  : 			setPartsPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my,ptAct->dispPrio);

  002fe	0f b6 46 15	 movzx	 eax, BYTE PTR [esi+21]
  00302	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  0030a	50		 push	 eax
  0030b	83 ec 08	 sub	 esp, 8
  0030e	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00314	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  0031c	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00321	6a 00		 push	 0
  00323	6a 00		 push	 0
  00325	ff 76 1c	 push	 DWORD PTR [esi+28]
  00328	ff 76 18	 push	 DWORD PTR [esi+24]
  0032b	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00331	e8 00 00 00 00	 call	 ?setPartsPrio@@YAXHHHHHMMH@Z ; setPartsPrio
  00336	83 c4 20	 add	 esp, 32			; 00000020H

; 288  : #else
; 289  : 			setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );
; 290  : #endif
; 291  : 			ptAct->atr &= (~ACT_ATR_HIDE);

  00339	83 a6 a4 00 00
	00 fd		 and	 DWORD PTR [esi+164], -3	; fffffffdH
  00340	5f		 pop	 edi

; 299  : #else
; 300  : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );
; 301  : #endif
; 302  : 	}
; 303  : }

  00341	5e		 pop	 esi
  00342	5b		 pop	 ebx
  00343	8b e5		 mov	 esp, ebp
  00345	5d		 pop	 ebp
  00346	c3		 ret	 0
$LN23@waterAniPr:

; 292  : 		}else
; 293  : 			ptAct->atr |= ACT_ATR_HIDE;

  00347	83 8e a4 00 00
	00 02		 or	 DWORD PTR [esi+164], 2
  0034e	5f		 pop	 edi

; 299  : #else
; 300  : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );
; 301  : #endif
; 302  : 	}
; 303  : }

  0034f	5e		 pop	 esi
  00350	5b		 pop	 ebx
  00351	8b e5		 mov	 esp, ebp
  00353	5d		 pop	 ebp
  00354	c3		 ret	 0
$LN18@waterAniPr:

; 294  : 	}else{
; 295  : 		// ????????
; 296  : 		// ??????????????
; 297  : #ifdef _SPECIALSPACEANIM_FIX  //ROG ADD ä¿®æ¹å¾å±
; 298  : 		setPartsPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my,ptAct->dispPrio);

  00355	0f b6 46 15	 movzx	 eax, BYTE PTR [esi+21]
  00359	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  00361	50		 push	 eax
  00362	83 ec 08	 sub	 esp, 8
  00365	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0036b	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  00373	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00378	6a 00		 push	 0
  0037a	6a 00		 push	 0
  0037c	ff 76 1c	 push	 DWORD PTR [esi+28]
  0037f	ff 76 18	 push	 DWORD PTR [esi+24]
  00382	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00388	e8 00 00 00 00	 call	 ?setPartsPrio@@YAXHHHHHMMH@Z ; setPartsPrio
  0038d	83 c4 20	 add	 esp, 32			; 00000020H
  00390	5f		 pop	 edi

; 299  : #else
; 300  : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );
; 301  : #endif
; 302  : 	}
; 303  : }

  00391	5e		 pop	 esi
  00392	5b		 pop	 ebx
  00393	8b e5		 mov	 esp, ebp
  00395	5d		 pop	 ebp
  00396	c3		 ret	 0
?waterAniProc@@YAXPAUaction@@@Z ENDP			; waterAniProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?charProc@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_my$ = -20						; size = 4
_mx$ = -16						; size = 4
_yy$1 = -12						; size = 2
_xx$2 = -8						; size = 2
_hh$3 = -4						; size = 2
_no$1$ = 8						; size = 4
_ww$4 = 8						; size = 2
_no$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?charProc@@YAXPAUaction@@@Z PROC			; charProc, COMDAT

; 93   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]

; 94   : #ifdef _SHOW_ALL_ID
; 95   : 	char *lssproto_cnv10to62(int a, char *out, int outlen);
; 96   : 	char c62[20];
; 97   : 	char buf[20];
; 98   : 	lssproto_cnv10to62(ptAct->objIndex, c62, 20);
; 99   : 	wsprintfA(buf, "%s(%d)", c62, ptAct->objIndex);
; 100  : 	StockFontBuffer(ptAct->x-5, ptAct->y+10, 0, 4, buf, 0);
; 101  : #endif // _SHOW_ALL_ID
; 102  : 
; 103  : 
; 104  : 
; 105  : 	float mx, my;
; 106  : 	int animLoop;
; 107  : 	int no;
; 108  : 	CHAREXTRA *ext;
; 109  : 	int pFlag = 0;

  0000b	33 db		 xor	 ebx, ebx
  0000d	57		 push	 edi

; 110  : 	// ?î®??
; 111  : 	// PC???????îî·??î®??
; 112  : 	// PC?????î®????î¼???????î®??
; 113  : 	if( pc.ptAct != ptAct ){

  0000e	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  00014	0f 84 9c 00 00
	00		 je	 $LN28@charProc

; 114  : 		ext = (CHAREXTRA *)ptAct->pYobi;
; 115  : 		no = ext->charObjTblId;

  0001a	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]

; 116  : 		// ?????î¼??????????????
; 117  : 		if( (charObj[no].status & CHR_STATUS_PARTY) == 0 ){

  0001f	69 f8 0c 01 00
	00		 imul	 edi, eax, 268
  00025	89 45 08	 mov	 DWORD PTR _no$1$[ebp], eax
  00028	f7 87 2c 00 00
	00 00 02 00 00	 test	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+44], 512 ; 00000200H
  00032	75 0b		 jne	 SHORT $LN3@charProc

; 118  : 			charMove( ptAct );

  00034	56		 push	 esi
  00035	e8 00 00 00 00	 call	 ?charMove@@YAXPAUaction@@@Z ; charMove
  0003a	83 c4 04	 add	 esp, 4

; 119  : 			pFlag = 0;
; 120  : 		}else

  0003d	eb 05		 jmp	 SHORT $LN4@charProc
$LN3@charProc:

; 121  : 			pFlag = 1;

  0003f	bb 01 00 00 00	 mov	 ebx, 1
$LN4@charProc:

; 122  : 		if( ptAct->vx == 0 && ptAct->vy == 0 && charObj[no].stockDir != -1
; 123  : 		 && charObj[no].stockDirX == ptAct->gx && charObj[no].stockDirY == ptAct->gy ){

  00044	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  0004c	0f 57 c9	 xorps	 xmm1, xmm1
  0004f	0f 2e c1	 ucomiss xmm0, xmm1
  00052	9f		 lahf
  00053	f6 c4 44	 test	 ah, 68			; 00000044H
  00056	7a 64		 jp	 SHORT $LN5@charProc
  00058	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  00060	0f 2e c1	 ucomiss xmm0, xmm1
  00063	9f		 lahf
  00064	f6 c4 44	 test	 ah, 68			; 00000044H
  00067	7a 53		 jp	 SHORT $LN5@charProc
  00069	8b 8f 1c 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+28]
  0006f	83 f9 ff	 cmp	 ecx, -1
  00072	74 48		 je	 SHORT $LN5@charProc
  00074	8b 87 20 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+32]
  0007a	3b 86 b4 00 00
	00		 cmp	 eax, DWORD PTR [esi+180]
  00080	75 3a		 jne	 SHORT $LN5@charProc
  00082	8b 87 24 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+36]
  00088	3b 86 b8 00 00
	00		 cmp	 eax, DWORD PTR [esi+184]
  0008e	75 2c		 jne	 SHORT $LN5@charProc

; 124  : 			ptAct->anim_ang = charObj[no].stockDir;

  00090	89 8e 54 01 00
	00		 mov	 DWORD PTR [esi+340], ecx

; 125  : 			charObj[no].stockDir = -1;

  00096	c7 87 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+28], -1

; 126  : 			charObj[no].stockDirX = 0;

  000a0	c7 87 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+32], 0

; 127  : 			charObj[no].stockDirY = 0;

  000aa	c7 87 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+36], 0
  000b4	eb 06		 jmp	 SHORT $LN5@charProc
$LN28@charProc:

; 110  : 	// ?î®??
; 111  : 	// PC???????îî·??î®??
; 112  : 	// PC?????î®????î¼???????î®??
; 113  : 	if( pc.ptAct != ptAct ){

  000b6	8b 45 08	 mov	 eax, DWORD PTR _no$[ebp]
  000b9	89 45 08	 mov	 DWORD PTR _no$1$[ebp], eax
$LN5@charProc:

; 128  : 		}
; 129  : 	}
; 130  : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  000bc	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  000c4	8d 45 ec	 lea	 eax, DWORD PTR _my$[ebp]
  000c7	50		 push	 eax
  000c8	8d 45 f0	 lea	 eax, DWORD PTR _mx$[ebp]
  000cb	50		 push	 eax
  000cc	83 ec 08	 sub	 esp, 8
  000cf	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d5	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  000dd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e2	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000e7	f3 0f 10 45 f0	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 131  : 	
; 132  : 	ptAct->x = (int)(mx+.5);

  000ec	0f 5a c0	 cvtps2pd xmm0, xmm0

; 133  : 	ptAct->y = (int)(my+.5);
; 134  : 
; 135  : #ifdef _NPC_PICTURE
; 136  : #endif
; 137  : 	drawCharStatus( ptAct );

  000ef	56		 push	 esi
  000f0	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000f8	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000fc	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _my$[ebp]
  00101	0f 5a c0	 cvtps2pd xmm0, xmm0
  00104	89 46 18	 mov	 DWORD PTR [esi+24], eax
  00107	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  0010f	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00113	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  00116	e8 00 00 00 00	 call	 ?drawCharStatus@@YAXPAUaction@@@Z ; drawCharStatus

; 138  : 	// ?????????
; 139  : 	if( ptAct->anim_no == ANIM_HAND
; 140  : 	 || ptAct->anim_no == ANIM_HAPPY
; 141  : 	 || ptAct->anim_no == ANIM_ANGRY
; 142  : 	 || ptAct->anim_no == ANIM_SAD
; 143  : 	 || ptAct->anim_no == ANIM_WALK
; 144  : 	 || ptAct->anim_no == ANIM_STAND
; 145  : 	 || ptAct->anim_no == ANIM_NOD )

  0011b	8b 86 4c 01 00
	00		 mov	 eax, DWORD PTR [esi+332]
  00121	83 c4 14	 add	 esp, 20			; 00000014H
  00124	83 f8 06	 cmp	 eax, 6
  00127	74 25		 je	 SHORT $LN8@charProc
  00129	83 f8 07	 cmp	 eax, 7
  0012c	74 20		 je	 SHORT $LN8@charProc
  0012e	83 f8 08	 cmp	 eax, 8
  00131	74 1b		 je	 SHORT $LN8@charProc
  00133	83 f8 09	 cmp	 eax, 9
  00136	74 16		 je	 SHORT $LN8@charProc
  00138	83 f8 04	 cmp	 eax, 4
  0013b	74 11		 je	 SHORT $LN8@charProc
  0013d	83 f8 03	 cmp	 eax, 3
  00140	74 0c		 je	 SHORT $LN8@charProc
  00142	83 f8 0b	 cmp	 eax, 11			; 0000000bH
  00145	74 07		 je	 SHORT $LN8@charProc

; 147  : 	else
; 148  : 		animLoop = ANM_NO_LOOP;

  00147	bf 01 00 00 00	 mov	 edi, 1
  0014c	eb 02		 jmp	 SHORT $LN7@charProc
$LN8@charProc:

; 146  : 		animLoop = ANM_LOOP;

  0014e	33 ff		 xor	 edi, edi
$LN7@charProc:

; 149  : 	pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  00150	57		 push	 edi
  00151	6a 00		 push	 0
  00153	56		 push	 esi
  00154	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00159	83 c4 0c	 add	 esp, 12			; 0000000cH

; 150  : 	if( pFlag ){

  0015c	85 db		 test	 ebx, ebx
  0015e	74 30		 je	 SHORT $LN9@charProc

; 151  : 		if( nowSpdRate >= 1.2F )

  00160	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowSpdRate@@3MA
  00168	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3f99999a
  0016f	72 14		 jb	 SHORT $LN11@charProc

; 152  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  00171	57		 push	 edi
  00172	6a 00		 push	 0
  00174	56		 push	 esi
  00175	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  0017a	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowSpdRate@@3MA
  00182	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@charProc:

; 153  : 		if( nowSpdRate >= 1.6F )

  00185	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@3fcccccd
  0018c	72 36		 jb	 SHORT $LN14@charProc

; 154  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );
; 155  : 	}else{

  0018e	eb 28		 jmp	 SHORT $LN31@charProc
$LN9@charProc:

; 156  : 		if( ptAct->bufCount >= 2 )

  00190	0f b7 86 14 01
	00 00		 movzx	 eax, WORD PTR [esi+276]
  00197	8b c8		 mov	 ecx, eax
  00199	66 83 f8 02	 cmp	 ax, 2
  0019d	7c 13		 jl	 SHORT $LN13@charProc

; 157  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );

  0019f	57		 push	 edi
  001a0	6a 00		 push	 0
  001a2	56		 push	 esi
  001a3	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  001a8	0f b7 8e 14 01
	00 00		 movzx	 ecx, WORD PTR [esi+276]
  001af	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN13@charProc:

; 158  : 		if( ptAct->bufCount >= 4 )

  001b2	66 83 f9 04	 cmp	 cx, 4
  001b6	7c 0c		 jl	 SHORT $LN14@charProc
$LN31@charProc:

; 159  : 			pattern( ptAct, ANM_NOMAL_SPD, animLoop );
; 160  : 	}
; 161  : 	if( pc.ptAct != ptAct ){

  001b8	57		 push	 edi
  001b9	6a 00		 push	 0
  001bb	56		 push	 esi
  001bc	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  001c1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN14@charProc:
  001c4	8b 7d 08	 mov	 edi, DWORD PTR _no$1$[ebp]
  001c7	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  001cd	0f 84 a6 00 00
	00		 je	 $LN29@charProc

; 162  : 		if( charObj[no].newFoundFlag ){

  001d3	69 df 0c 01 00
	00		 imul	 ebx, edi, 268
  001d9	66 83 bb b8 00
	00 00 00	 cmp	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+184], 0
  001e1	0f 84 92 00 00
	00		 je	 $LN29@charProc

; 163  : 			S2 xx, yy, ww, hh;
; 164  : 			// ?î¡¡î ??????
; 165  : 			realGetPos( ptAct->bmpNo, &xx, &yy );

  001e7	8d 45 f4	 lea	 eax, DWORD PTR _yy$1[ebp]
  001ea	50		 push	 eax
  001eb	8d 45 f8	 lea	 eax, DWORD PTR _xx$2[ebp]
  001ee	50		 push	 eax
  001ef	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  001f5	e8 00 00 00 00	 call	 ?realGetPos@@YAHKPAF0@Z	; realGetPos

; 166  : 			realGetWH( ptAct->bmpNo, &ww, &hh );

  001fa	8d 45 fc	 lea	 eax, DWORD PTR _hh$3[ebp]
  001fd	50		 push	 eax
  001fe	8d 45 08	 lea	 eax, DWORD PTR _ww$4[ebp]
  00201	50		 push	 eax
  00202	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00208	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH

; 167  : 			xx += ptAct->x;

  0020d	66 8b 46 18	 mov	 ax, WORD PTR [esi+24]
  00211	83 c4 18	 add	 esp, 24			; 00000018H
  00214	66 03 45 f8	 add	 ax, WORD PTR _xx$2[ebp]
  00218	0f b7 c8	 movzx	 ecx, ax
  0021b	0f b7 c0	 movzx	 eax, ax
  0021e	89 45 f8	 mov	 DWORD PTR _xx$2[ebp], eax

; 168  : 			yy += ptAct->y;

  00221	66 8b 46 1c	 mov	 ax, WORD PTR [esi+28]
  00225	66 03 45 f4	 add	 ax, WORD PTR _yy$1[ebp]
  00229	0f b7 d0	 movzx	 edx, ax
  0022c	0f b7 c0	 movzx	 eax, ax
  0022f	89 45 f4	 mov	 DWORD PTR _yy$1[ebp], eax
  00232	33 c0		 xor	 eax, eax
  00234	66 3b c1	 cmp	 ax, cx

; 169  : 			if( 0 <= xx && xx+ww <= DEF_APPSIZEX
; 170  : 			 && 0 <= yy && yy+hh <= DEF_APPSIZEY ){

  00237	7f 40		 jg	 SHORT $LN29@charProc
  00239	0f bf 45 08	 movsx	 eax, WORD PTR _ww$4[ebp]
  0023d	0f bf c9	 movsx	 ecx, cx
  00240	03 c8		 add	 ecx, eax
  00242	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00248	7f 2f		 jg	 SHORT $LN29@charProc
  0024a	33 c0		 xor	 eax, eax
  0024c	66 3b c2	 cmp	 ax, dx
  0024f	7f 28		 jg	 SHORT $LN29@charProc
  00251	0f bf 45 fc	 movsx	 eax, WORD PTR _hh$3[ebp]
  00255	0f bf ca	 movsx	 ecx, dx
  00258	03 c8		 add	 ecx, eax
  0025a	3b 0d 00 00 00
	00		 cmp	 ecx, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00260	7f 17		 jg	 SHORT $LN29@charProc

; 171  : 				CheckNewPet( ptAct->anim_chr_no );

  00262	ff b6 44 01 00
	00		 push	 DWORD PTR [esi+324]
  00268	e8 00 00 00 00	 call	 ?CheckNewPet@@YAXH@Z	; CheckNewPet
  0026d	83 c4 04	 add	 esp, 4

; 172  : 				charObj[no].newFoundFlag = 0;

  00270	33 c0		 xor	 eax, eax
  00272	66 89 83 b8 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+184], ax
$LN29@charProc:

; 173  : 			}
; 174  : 		}
; 175  : 	}
; 176  : 	if( 20000 <= ptAct->anim_chr_no && ptAct->anim_chr_no <= 24999 ){

  00279	8b 86 44 01 00
	00		 mov	 eax, DWORD PTR [esi+324]
  0027f	2d 20 4e 00 00	 sub	 eax, 20000		; 00004e20H
  00284	3d 87 13 00 00	 cmp	 eax, 4999		; 00001387H
  00289	0f 87 c5 00 00
	00		 ja	 $LN18@charProc

; 177  : 		// ????
; 178  : 		if( pc.ptAct != ptAct ){

  0028f	39 35 ec 50 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, esi
  00295	74 4f		 je	 SHORT $LN27@charProc

; 179  : 			// îª???î??????î?
; 180  : 			if( ptAct->gx < nowGx-16 || nowGx+16 < ptAct->gx
; 181  : 			 || ptAct->gy < nowGy-16 || nowGy+16 < ptAct->gy ){

  00297	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowGx@@3HA ; nowGx
  0029d	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  002a3	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  002a6	3b c8		 cmp	 ecx, eax
  002a8	7c 21		 jl	 SHORT $LN22@charProc
  002aa	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  002ad	3b c1		 cmp	 eax, ecx
  002af	7c 1a		 jl	 SHORT $LN22@charProc
  002b1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowGy@@3HA ; nowGy
  002b7	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  002bd	8d 42 f0	 lea	 eax, DWORD PTR [edx-16]
  002c0	3b c8		 cmp	 ecx, eax
  002c2	7c 07		 jl	 SHORT $LN22@charProc
  002c4	8d 42 10	 lea	 eax, DWORD PTR [edx+16]
  002c7	3b c1		 cmp	 eax, ecx
  002c9	7d 1b		 jge	 SHORT $LN27@charProc
$LN22@charProc:

; 182  : 				delCharObj( charObj[no].id );

  002cb	69 c7 0c 01 00
	00		 imul	 eax, edi, 268
  002d1	ff b0 04 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+4]
  002d7	e8 00 00 00 00	 call	 ?delCharObj@@YAXH@Z	; delCharObj
  002dc	83 c4 04	 add	 esp, 4
  002df	5f		 pop	 edi

; 197  : 	}
; 198  : }

  002e0	5e		 pop	 esi
  002e1	5b		 pop	 ebx
  002e2	8b e5		 mov	 esp, ebp
  002e4	5d		 pop	 ebp
  002e5	c3		 ret	 0
$LN27@charProc:

; 183  : 				return;
; 184  : 			}
; 185  : 		}
; 186  : 		// î¯??îº?????î¸î???
; 187  : 		if( !itemOverlapCheck( ptAct->bmpNo, ptAct->gx, ptAct->gy ) ){

  002e6	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  002ec	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  002f2	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  002f8	e8 00 00 00 00	 call	 ?itemOverlapCheck@@YAHIHH@Z ; itemOverlapCheck
  002fd	83 c4 0c	 add	 esp, 12			; 0000000cH
  00300	85 c0		 test	 eax, eax
  00302	75 42		 jne	 SHORT $LN23@charProc

; 188  : 			// ??????????????
; 189  : 			setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );

  00304	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  0030c	83 ec 08	 sub	 esp, 8
  0030f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00315	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  0031d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00322	50		 push	 eax
  00323	50		 push	 eax
  00324	ff 76 1c	 push	 DWORD PTR [esi+28]
  00327	ff 76 18	 push	 DWORD PTR [esi+24]
  0032a	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00330	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00335	83 c4 1c	 add	 esp, 28			; 0000001cH

; 190  : 			ptAct->atr &= (~ACT_ATR_HIDE);

  00338	83 a6 a4 00 00
	00 fd		 and	 DWORD PTR [esi+164], -3	; fffffffdH
  0033f	5f		 pop	 edi

; 197  : 	}
; 198  : }

  00340	5e		 pop	 esi
  00341	5b		 pop	 ebx
  00342	8b e5		 mov	 esp, ebp
  00344	5d		 pop	 ebp
  00345	c3		 ret	 0
$LN23@charProc:

; 191  : 		}else
; 192  : 			ptAct->atr |= ACT_ATR_HIDE;

  00346	83 8e a4 00 00
	00 02		 or	 DWORD PTR [esi+164], 2
  0034d	5f		 pop	 edi

; 197  : 	}
; 198  : }

  0034e	5e		 pop	 esi
  0034f	5b		 pop	 ebx
  00350	8b e5		 mov	 esp, ebp
  00352	5d		 pop	 ebp
  00353	c3		 ret	 0
$LN18@charProc:

; 193  : 	}else{
; 194  : 		// ????????
; 195  : 		// ??????????????
; 196  : 		setCharPrio( ptAct->bmpNo, ptAct->x, ptAct->y, 0, 0, ptAct->mx, ptAct->my );

  00354	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  0035c	83 ec 08	 sub	 esp, 8
  0035f	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00365	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  0036d	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00372	6a 00		 push	 0
  00374	6a 00		 push	 0
  00376	ff 76 1c	 push	 DWORD PTR [esi+28]
  00379	ff 76 18	 push	 DWORD PTR [esi+24]
  0037c	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00382	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00387	83 c4 1c	 add	 esp, 28			; 0000001cH
  0038a	5f		 pop	 edi

; 197  : 	}
; 198  : }

  0038b	5e		 pop	 esi
  0038c	5b		 pop	 ebx
  0038d	8b e5		 mov	 esp, ebp
  0038f	5d		 pop	 ebp
  00390	c3		 ret	 0
?charProc@@YAXPAUaction@@@Z ENDP			; charProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?ajustClientDir@@YAXPAF@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?ajustClientDir@@YAXPAF@Z PROC				; ajustClientDir, COMDAT

; 2930 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2931 : 	if( *dir < 0 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _dir$[ebp]
  00006	0f b7 08	 movzx	 ecx, WORD PTR [eax]
  00009	66 85 c9	 test	 cx, cx
  0000c	79 0a		 jns	 SHORT $LN8@ajustClien
  0000e	66 90		 npad	 2
$LL4@ajustClien:

; 2932 : 	{
; 2933 : 		do
; 2934 : 		{
; 2935 : 			(*dir) += 8;

  00010	66 83 00 08	 add	 WORD PTR [eax], 8

; 2936 : 		} while( *dir < 0 );

  00014	78 fa		 js	 SHORT $LL4@ajustClien

; 2945 : 	}
; 2946 : }

  00016	5d		 pop	 ebp
  00017	c3		 ret	 0
$LN8@ajustClien:

; 2937 : 	}
; 2938 : 	else
; 2939 : 	if( *dir > 7 )

  00018	66 83 f9 07	 cmp	 cx, 7
  0001c	7e 0c		 jle	 SHORT $LN6@ajustClien
  0001e	66 90		 npad	 2
$LL7@ajustClien:

; 2940 : 	{
; 2941 : 		do
; 2942 : 		{
; 2943 : 			(*dir) -= 8;

  00020	66 83 00 f8	 add	 WORD PTR [eax], -8	; fffffff8H

; 2944 : 		} while( *dir > 7 );

  00024	66 83 38 07	 cmp	 WORD PTR [eax], 7
  00028	7f f6		 jg	 SHORT $LL7@ajustClien
$LN6@ajustClien:

; 2945 : 	}
; 2946 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?ajustClientDir@@YAXPAF@Z ENDP				; ajustClientDir
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?createPetAction@@YAPAUaction@@HHHHHHH@Z
_TEXT	SEGMENT
_ptAct$1$ = -12						; size = 4
_my$ = -8						; size = 4
_mx$ = -4						; size = 4
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_dir$ = 20						; size = 4
_mode$ = 24						; size = 4
_moveDir$ = 28						; size = 4
_id$ = 32						; size = 4
?createPetAction@@YAPAUaction@@HHHHHHH@Z PROC		; createPetAction, COMDAT

; 3291 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	56		 push	 esi

; 3292 : 	ACTION *ptAct;
; 3293 : 	float mx, my;
; 3294 : 	PETEXTRA *pe;
; 3295 : 
; 3296 : 	/* ?????????î? */
; 3297 : 	ptAct = GetAction( PRIO_CHR, sizeof( PETEXTRA ) );

  00007	6a 2c		 push	 44			; 0000002cH
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 08	 add	 esp, 8
  00015	89 75 f4	 mov	 DWORD PTR _ptAct$1$[ebp], esi

; 3298 : 	if( ptAct == NULL )

  00018	85 f6		 test	 esi, esi
  0001a	75 05		 jne	 SHORT $LN2@createPetA
  0001c	5e		 pop	 esi

; 3347 : }

  0001d	8b e5		 mov	 esp, ebp
  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
$LN2@createPetA:

; 3299 : 		return NULL;
; 3300 : 
; 3301 : 	// î¯???
; 3302 : 	ptAct->func = petProc;
; 3303 : 	// ???????î±?
; 3304 : 	ptAct->anim_chr_no = graNo;

  00021	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]

; 3305 : 	// î®?î±?
; 3306 : 	ptAct->anim_no = ANIM_STAND;
; 3307 : 	// ?????????( ??? )( ??????? )
; 3308 : 	ptAct->anim_ang = dir;
; 3309 : 	// î¸î?îî
; 3310 : 	ptAct->dispPrio = DISP_PRIO_CHAR;
; 3311 : 	// 1?????î¸î???
; 3312 : 	ptAct->atr = ACT_ATR_INFO |	ACT_ATR_HIT | ACT_ATR_HIDE2;
; 3313 : 	// ???îº
; 3314 : 	ptAct->nextGx = gx;					// ????????î³??î®î?
; 3315 : 	ptAct->nextGy = gy;
; 3316 : 	ptAct->bufCount = 0;

  00024	33 c9		 xor	 ecx, ecx
  00026	89 86 44 01 00
	00		 mov	 DWORD PTR [esi+324], eax
  0002c	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  0002f	53		 push	 ebx
  00030	8b 5d 10	 mov	 ebx, DWORD PTR _gy$[ebp]
  00033	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00039	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  0003c	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax

; 3317 : 	ptAct->gx = gx;						// ????????î³???ä½?

  00042	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00048	66 0f 6e cb	 movd	 xmm1, ebx
  0004c	66 0f 6e d0	 movd	 xmm2, eax

; 3318 : 	ptAct->gy = gy;
; 3319 : 	ptAct->mx = (float)gx * GRID_SIZE;	// ????î³
; 3320 : 	ptAct->my = (float)gy * GRID_SIZE;
; 3321 : 	ptAct->vx = 0;						// ?î®?î¤
; 3322 : 	ptAct->vy = 0;
; 3323 : 
; 3324 : 	// ?î¡¡î¸î?îº
; 3325 : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00050	8d 45 f8	 lea	 eax, DWORD PTR _my$[ebp]
  00053	57		 push	 edi
  00054	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00057	50		 push	 eax
  00058	8d 45 fc	 lea	 eax, DWORD PTR _mx$[ebp]
  0005b	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ?petProc@@YAXPAUaction@@@Z ; petProc
  00062	50		 push	 eax
  00063	83 ec 08	 sub	 esp, 8
  00066	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  00070	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00073	c6 46 15 0a	 mov	 BYTE PTR [esi+21], 10	; 0000000aH
  00077	c7 86 a4 00 00
	00 34 00 00 00	 mov	 DWORD PTR [esi+164], 52	; 00000034H
  00081	89 9e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ebx
  00087	66 89 8e 14 01
	00 00		 mov	 WORD PTR [esi+276], cx
  0008e	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  00096	89 9e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ebx
  0009c	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  000a4	89 8e 20 01 00
	00		 mov	 DWORD PTR [esi+288], ecx
  000aa	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000b0	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  000b8	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  000c0	89 8e 24 01 00
	00		 mov	 DWORD PTR [esi+292], ecx
  000c6	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000cb	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000d0	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 3326 : 	ptAct->x = (int)(mx+.5);

  000d5	0f 5a c0	 cvtps2pd xmm0, xmm0

; 3327 : 	ptAct->y = (int)(my+.5);
; 3328 : 
; 3329 : 	pe = (PETEXTRA *)ptAct->pYobi;

  000d8	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  000db	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000e3	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000e7	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000ea	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$[ebp]
  000ef	0f 5a c0	 cvtps2pd xmm0, xmm0
  000f2	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000fa	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000fe	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 3330 : 	pe->mode = mode;
; 3331 : 	pe->moveDir = moveDir;

  00101	8d 77 02	 lea	 esi, DWORD PTR [edi+2]
  00104	66 8b 45 18	 mov	 ax, WORD PTR _mode$[ebp]
  00108	66 89 07	 mov	 WORD PTR [edi], ax
  0010b	66 8b 45 1c	 mov	 ax, WORD PTR _moveDir$[ebp]

; 3332 : 	limitCantClientDir( &pe->moveDir );

  0010f	56		 push	 esi
  00110	66 89 06	 mov	 WORD PTR [esi], ax
  00113	e8 00 00 00 00	 call	 ?limitCantClientDir@@YAXPAF@Z ; limitCantClientDir

; 3333 : 	pe->preDir = pe->moveDir;

  00118	0f b7 06	 movzx	 eax, WORD PTR [esi]
  0011b	83 c4 14	 add	 esp, 20			; 00000014H
  0011e	66 89 47 04	 mov	 WORD PTR [edi+4], ax

; 3334 : 	pe->dirCnt = 0;

  00122	33 c0		 xor	 eax, eax
  00124	66 89 47 06	 mov	 WORD PTR [edi+6], ax

; 3335 : 	pe->preGx = gx;

  00128	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  0012b	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 3336 : 	pe->preGy = gy;

  0012e	89 5f 0c	 mov	 DWORD PTR [edi+12], ebx

; 3337 : 	pe->walkCnt = 0;

  00131	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0

; 3338 : 	pe->createTime = TimeGetTime();

  00138	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0013d	89 47 14	 mov	 DWORD PTR [edi+20], eax

; 3339 : 	pe->ptAct  = NULL;
; 3340 : 	pe->ptAct2 = NULL;
; 3341 : 	pe->angle = 0.0F;
; 3342 : 	pe->r = 0;
; 3343 : 
; 3344 : 	pe->id = id;

  00140	8b 45 20	 mov	 eax, DWORD PTR _id$[ebp]
  00143	89 47 28	 mov	 DWORD PTR [edi+40], eax

; 3345 : 
; 3346 : 	return ptAct;

  00146	8b 45 f4	 mov	 eax, DWORD PTR _ptAct$1$[ebp]
  00149	c7 47 18 00 00
	00 00		 mov	 DWORD PTR [edi+24], 0
  00150	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
  00157	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
  0015e	c7 47 24 00 00
	00 00		 mov	 DWORD PTR [edi+36], 0
  00165	5f		 pop	 edi
  00166	5b		 pop	 ebx
  00167	5e		 pop	 esi

; 3347 : }

  00168	8b e5		 mov	 esp, ebp
  0016a	5d		 pop	 ebp
  0016b	c3		 ret	 0
?createPetAction@@YAPAUaction@@HHHHHHH@Z ENDP		; createPetAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?itemOverlapCheck@@YAHIHH@Z
_TEXT	SEGMENT
_bmpNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
?itemOverlapCheck@@YAHIHH@Z PROC			; itemOverlapCheck, COMDAT

; 2887 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2888 : 	int i;
; 2889 : 	BOOL flag = FALSE;
; 2890 : 	for( i = 0; i < itemOverlapCheckCnt; i++ ){

  00003	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?itemOverlapCheckCnt@@3HA ; itemOverlapCheckCnt
  00009	33 c9		 xor	 ecx, ecx
  0000b	53		 push	 ebx
  0000c	8b 5d 08	 mov	 ebx, DWORD PTR _bmpNo$[ebp]
  0000f	56		 push	 esi
  00010	8b 75 10	 mov	 esi, DWORD PTR _gy$[ebp]
  00013	57		 push	 edi
  00014	8b 7d 0c	 mov	 edi, DWORD PTR _gx$[ebp]
  00017	85 d2		 test	 edx, edx
  00019	7e 1b		 jle	 SHORT $LN15@itemOverla
  0001b	b8 04 00 00 00	 mov	 eax, OFFSET ?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A+4
$LL4@itemOverla:

; 2891 : 		if( itemOverlapTbl[i].bmpNo == bmpNo
; 2892 : 		 && itemOverlapTbl[i].gx == gx
; 2893 : 		 && itemOverlapTbl[i].gy == gy ){

  00020	39 58 fc	 cmp	 DWORD PTR [eax-4], ebx
  00023	75 09		 jne	 SHORT $LN2@itemOverla
  00025	39 38		 cmp	 DWORD PTR [eax], edi
  00027	75 05		 jne	 SHORT $LN2@itemOverla
  00029	39 70 04	 cmp	 DWORD PTR [eax+4], esi
  0002c	74 33		 je	 SHORT $LN10@itemOverla
$LN2@itemOverla:

; 2888 : 	int i;
; 2889 : 	BOOL flag = FALSE;
; 2890 : 	for( i = 0; i < itemOverlapCheckCnt; i++ ){

  0002e	41		 inc	 ecx
  0002f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00032	3b ca		 cmp	 ecx, edx
  00034	7c ea		 jl	 SHORT $LL4@itemOverla
$LN15@itemOverla:

; 2894 : 			flag = TRUE;
; 2895 : 			break;
; 2896 : 		}
; 2897 : 	}
; 2898 : 	if( !flag ){
; 2899 : 		if( itemOverlapCheckCnt < MAX_ITEM_OVERLAP ){

  00036	83 fa 64	 cmp	 edx, 100		; 00000064H
  00039	7d 1f		 jge	 SHORT $LN16@itemOverla

; 2900 : 			itemOverlapTbl[itemOverlapCheckCnt].bmpNo = bmpNo;

  0003b	8d 0c 52	 lea	 ecx, DWORD PTR [edx+edx*2]

; 2901 : 			itemOverlapTbl[itemOverlapCheckCnt].gx    = gx;
; 2902 : 			itemOverlapTbl[itemOverlapCheckCnt].gy    = gy;
; 2903 : 			itemOverlapCheckCnt++;

  0003e	42		 inc	 edx
  0003f	89 1c 8d 00 00
	00 00		 mov	 DWORD PTR ?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A[ecx*4], ebx
  00046	89 3c 8d 04 00
	00 00		 mov	 DWORD PTR ?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A[ecx*4+4], edi
  0004d	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?itemOverlapTbl@@3PAUITEM_OVERLAP_CHECK@@A[ecx*4+8], esi
  00054	89 15 00 00 00
	00		 mov	 DWORD PTR ?itemOverlapCheckCnt@@3HA, edx ; itemOverlapCheckCnt
$LN16@itemOverla:

; 2904 : 		}
; 2905 : 	}
; 2906 : 	return flag;
; 2907 : }

  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	33 c0		 xor	 eax, eax
  0005e	5b		 pop	 ebx
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN10@itemOverla:
  00061	5f		 pop	 edi
  00062	5e		 pop	 esi
  00063	b8 01 00 00 00	 mov	 eax, 1
  00068	5b		 pop	 ebx
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?itemOverlapCheck@@YAHIHH@Z ENDP			; itemOverlapCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?initItemOverlapCheck@@YAXXZ
_TEXT	SEGMENT
?initItemOverlapCheck@@YAXXZ PROC			; initItemOverlapCheck, COMDAT

; 2880 : 	itemOverlapCheckCnt = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?itemOverlapCheckCnt@@3HA, 0 ; itemOverlapCheckCnt

; 2881 : }

  0000a	c3		 ret	 0
?initItemOverlapCheck@@YAXXZ ENDP			; initItemOverlapCheck
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getCharObjBuf@@YAHXZ
_TEXT	SEGMENT
?getCharObjBuf@@YAHXZ PROC				; getCharObjBuf, COMDAT

; 2414 : 	int i;
; 2415 : 	int ret;
; 2416 : 	// ??????????î·??
; 2417 : 	if( maxCharObj >= MAX_CHAROBJ )

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?maxCharObj@@3HA ; maxCharObj
  00005	3d dc 05 00 00	 cmp	 eax, 1500		; 000005dcH
  0000a	7c 04		 jl	 SHORT $LN8@getCharObj

; 2418 : 		return -1;

  0000c	83 c8 ff	 or	 eax, -1

; 2441 : }

  0000f	c3		 ret	 0
$LN8@getCharObj:

; 2419 : 	ret = freeCharObj;
; 2420 : 	// îª?????î«î±?î¡
; 2421 : 	maxCharObj++;
; 2422 : 	// ??î?î??îº
; 2423 : 	if( freeCharObj+1 > tailCharObj )

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  00016	40		 inc	 eax
  00017	56		 push	 esi
  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?freeCharObj@@3HA ; freeCharObj
  0001e	57		 push	 edi
  0001f	8b fe		 mov	 edi, esi
  00021	a3 00 00 00 00	 mov	 DWORD PTR ?maxCharObj@@3HA, eax ; maxCharObj
  00026	8d 47 01	 lea	 eax, DWORD PTR [edi+1]
  00029	3b c1		 cmp	 eax, ecx
  0002b	8d 57 01	 lea	 edx, DWORD PTR [edi+1]
  0002e	0f 4f ca	 cmovg	 ecx, edx
  00031	89 0d 00 00 00
	00		 mov	 DWORD PTR ?tailCharObj@@3HA, ecx ; tailCharObj

; 2424 : 		tailCharObj = freeCharObj+1;
; 2425 : 	// ???????????
; 2426 : 	for( i = freeCharObj+1; i < MAX_CHAROBJ; i++ ){

  00037	81 fa dc 05 00
	00		 cmp	 edx, 1500		; 000005dcH
  0003d	7d 2e		 jge	 SHORT $LN3@getCharObj
  0003f	69 c2 0c 01 00
	00		 imul	 eax, edx, 268
  00045	05 00 00 00 00	 add	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A ; charObj
  0004a	66 0f 1f 44 00
	00		 npad	 6
$LL4@getCharObj:

; 2427 : 		if( charObj[i].use == CHAROBJ_USE_FREE ){

  00050	66 83 38 00	 cmp	 WORD PTR [eax], 0
  00054	74 0f		 je	 SHORT $LN16@getCharObj

; 2424 : 		tailCharObj = freeCharObj+1;
; 2425 : 	// ???????????
; 2426 : 	for( i = freeCharObj+1; i < MAX_CHAROBJ; i++ ){

  00056	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  0005b	42		 inc	 edx
  0005c	3d 50 22 06 00	 cmp	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+402000
  00061	7c ed		 jl	 SHORT $LL4@getCharObj

; 2434 : 			if( charObj[i].use == CHAROBJ_USE_FREE ){

  00063	eb 08		 jmp	 SHORT $LN3@getCharObj
$LN16@getCharObj:

; 2428 : 			freeCharObj = i;

  00065	8b f2		 mov	 esi, edx
  00067	89 35 00 00 00
	00		 mov	 DWORD PTR ?freeCharObj@@3HA, esi ; freeCharObj
$LN3@getCharObj:

; 2429 : 			break;
; 2430 : 		}
; 2431 : 	}
; 2432 : 	if( freeCharObj > 0 && i >= MAX_CHAROBJ ){

  0006d	85 f6		 test	 esi, esi
  0006f	7e 2e		 jle	 SHORT $LN6@getCharObj
  00071	81 fa dc 05 00
	00		 cmp	 edx, 1500		; 000005dcH
  00077	7c 26		 jl	 SHORT $LN6@getCharObj

; 2433 : 		for( i = 0; i < freeCharObj; i++ ){

  00079	33 c0		 xor	 eax, eax
  0007b	85 f6		 test	 esi, esi
  0007d	7e 20		 jle	 SHORT $LN6@getCharObj
  0007f	b9 00 00 00 00	 mov	 ecx, OFFSET ?charObj@@3PAUCHAROBJ@@A ; charObj
$LL7@getCharObj:

; 2434 : 			if( charObj[i].use == CHAROBJ_USE_FREE ){

  00084	66 83 39 00	 cmp	 WORD PTR [ecx], 0
  00088	74 10		 je	 SHORT $LN17@getCharObj

; 2433 : 		for( i = 0; i < freeCharObj; i++ ){

  0008a	40		 inc	 eax
  0008b	81 c1 0c 01 00
	00		 add	 ecx, 268		; 0000010cH
  00091	3b c6		 cmp	 eax, esi
  00093	7c ef		 jl	 SHORT $LL7@getCharObj

; 2436 : 				break;
; 2437 : 			}
; 2438 : 		}
; 2439 : 	}
; 2440 : 	return ret;

  00095	8b c7		 mov	 eax, edi
  00097	5f		 pop	 edi
  00098	5e		 pop	 esi

; 2441 : }

  00099	c3		 ret	 0
$LN17@getCharObj:

; 2435 : 				freeCharObj = i;

  0009a	a3 00 00 00 00	 mov	 DWORD PTR ?freeCharObj@@3HA, eax ; freeCharObj
$LN6@getCharObj:

; 2436 : 				break;
; 2437 : 			}
; 2438 : 		}
; 2439 : 	}
; 2440 : 	return ret;

  0009f	8b c7		 mov	 eax, edi
  000a1	5f		 pop	 edi
  000a2	5e		 pop	 esi

; 2441 : }

  000a3	c3		 ret	 0
?getCharObjBuf@@YAHXZ ENDP				; getCharObjBuf
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getCharObjAct@@YAPAUaction@@H@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?getCharObjAct@@YAPAUaction@@H@Z PROC			; getCharObjAct, COMDAT

; 2491 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2492 : 	int no;
; 2493 : 	if( (no = searchCharObjId( id )) < 0 )

  00003	ff 75 08	 push	 DWORD PTR _id$[ebp]
  00006	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0000b	83 c4 04	 add	 esp, 4
  0000e	85 c0		 test	 eax, eax
  00010	78 10		 js	 SHORT $LN5@getCharObj

; 2494 : 		return NULL;
; 2495 : 	if( charObj[no].ptAct == NULL )

  00012	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00018	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+188]
  0001e	85 c0		 test	 eax, eax
  00020	75 02		 jne	 SHORT $LN1@getCharObj
$LN5@getCharObj:

; 2496 : 		return NULL;

  00022	33 c0		 xor	 eax, eax
$LN1@getCharObj:

; 2497 : 	return charObj[no].ptAct;
; 2498 : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?getCharObjAct@@YAPAUaction@@H@Z ENDP			; getCharObjAct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setMovePointCharObj@@YAXHHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_nextGx$ = 12						; size = 4
_nextGy$ = 16						; size = 4
?setMovePointCharObj@@YAXHHH@Z PROC			; setMovePointCharObj, COMDAT

; 2851 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2852 : 	int no;
; 2853 : 
; 2854 : 	no = searchCharObjId( id );

  00003	ff 75 08	 push	 DWORD PTR _id$[ebp]
  00006	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0000b	83 c4 04	 add	 esp, 4

; 2855 : 	if( no >= 0 )

  0000e	85 c0		 test	 eax, eax
  00010	78 1a		 js	 SHORT $LN2@setMovePoi

; 2856 : 	{
; 2857 : 		stockCharMovePoint( charObj[no].ptAct, nextGx, nextGy );

  00012	ff 75 10	 push	 DWORD PTR _nextGy$[ebp]
  00015	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  0001b	ff 75 0c	 push	 DWORD PTR _nextGx$[ebp]
  0001e	ff b0 bc 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+188]
  00024	e8 00 00 00 00	 call	 ?stockCharMovePoint@@YAXPAUaction@@HH@Z ; stockCharMovePoint
  00029	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@setMovePoi:

; 2858 : 	}
; 2859 : }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
?setMovePointCharObj@@YAXHHH@Z ENDP			; setMovePointCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?restorePtActCharObj@@YAXH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?restorePtActCharObj@@YAXH@Z PROC			; restorePtActCharObj, COMDAT

; 2812 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2813 : 	int no;
; 2814 : 	CHAREXTRA *ext;
; 2815 : 
; 2816 : 	if( id < 0 )

  00003	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	0f 88 b4 00 00
	00		 js	 $LN4@restorePtA

; 2817 : 		return;
; 2818 : 
; 2819 : 	// î???????????
; 2820 : 	if( (no = searchCharObjId( id )) < 0 )

  0000e	57		 push	 edi
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  00015	8b f8		 mov	 edi, eax
  00017	83 c4 04	 add	 esp, 4
  0001a	85 ff		 test	 edi, edi
  0001c	0f 88 9f 00 00
	00		 js	 $LN11@restorePtA

; 2821 : 	{
; 2822 : 		// î¡????î·??
; 2823 : 		return;
; 2824 : 	}
; 2825 : 
; 2826 : 	if( charObj[no].use != CHAROBJ_USE_FREE
; 2827 : 	 && charObj[no].ptAct == NULL )

  00022	56		 push	 esi
  00023	69 f7 0c 01 00
	00		 imul	 esi, edi, 268
  00029	66 83 be 00 00
	00 00 00	 cmp	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi], 0
  00031	0f 84 89 00 00
	00		 je	 $LN12@restorePtA
  00037	83 be bc 00 00
	00 00		 cmp	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188], 0
  0003e	0f 85 7c 00 00
	00		 jne	 $LN12@restorePtA

; 2828 : 	{
; 2829 : 		charObj[no].ptAct =

  00044	ff b6 18 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+24]
  0004a	ff b6 10 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+16]
  00050	ff b6 0c 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+12]
  00056	ff b6 08 00 00
	00		 push	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+8]
  0005c	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	89 86 bc 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188], eax

; 2830 : 			createCharAction( charObj[no].graNo, charObj[no].gx, charObj[no].gy, charObj[no].dir );
; 2831 : 		if( charObj[no].ptAct == NULL )

  0006a	85 c0		 test	 eax, eax
  0006c	74 52		 je	 SHORT $LN12@restorePtA

; 2832 : 		{
; 2833 : 			// ?????????????î·??
; 2834 : 			return;
; 2835 : 		}
; 2836 : 
; 2837 : 		charObj[no].use = CHAROBJ_USE_VIEW;

  0006e	b9 02 00 00 00	 mov	 ecx, 2

; 2838 : 
; 2839 : 		ext = (CHAREXTRA *)charObj[no].ptAct->pYobi;
; 2840 : 		ext->charObjTblId = no;
; 2841 : 
; 2842 : 		charObj[no].ptAct->level = charObj[no].level;
; 2843 : 		strcpy( charObj[no].ptAct->name, charObj[no].name );

  00073	8d 96 38 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+56]
  00079	66 89 8e 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi], cx
  00080	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00083	89 38		 mov	 DWORD PTR [eax], edi
  00085	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  0008b	8b 86 14 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+20]
  00091	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax
  00097	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  0009d	83 c0 38	 add	 eax, 56			; 00000038H
$LL7@restorePtA:
  000a0	8a 0a		 mov	 cl, BYTE PTR [edx]
  000a2	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  000a5	88 08		 mov	 BYTE PTR [eax], cl
  000a7	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  000aa	84 c9		 test	 cl, cl
  000ac	75 f2		 jne	 SHORT $LL7@restorePtA

; 2844 : 		charObj[no].ptAct->atr |= charObj[no].charType;

  000ae	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  000b4	8b 86 b4 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+180]
  000ba	09 81 a4 00 00
	00		 or	 DWORD PTR [ecx+164], eax
$LN12@restorePtA:
  000c0	5e		 pop	 esi
$LN11@restorePtA:
  000c1	5f		 pop	 edi
$LN4@restorePtA:

; 2845 : 	}
; 2846 : }

  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?restorePtActCharObj@@YAXH@Z ENDP			; restorePtActCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?restorePtActCharObjAll@@YAXXZ
_TEXT	SEGMENT
?restorePtActCharObjAll@@YAXXZ PROC			; restorePtActCharObjAll, COMDAT

; 2744 : {

  00000	53		 push	 ebx

; 2745 : 	int i;
; 2746 : 	CHAREXTRA *ext;
; 2747 : 
; 2748 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  00001	33 db		 xor	 ebx, ebx
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	be 10 00 00 00	 mov	 esi, OFFSET ?charObj@@3PAUCHAROBJ@@A+16
  0000a	8d 7b 02	 lea	 edi, DWORD PTR [ebx+2]
  0000d	0f 1f 00	 npad	 3
$LL4@restorePtA:

; 2749 : 	{
; 2750 : 		if( charObj[i].use != CHAROBJ_USE_FREE
; 2751 : 		 && charObj[i].ptAct == NULL )

  00010	66 83 7e f0 00	 cmp	 WORD PTR [esi-16], 0
  00015	0f 84 0d 01 00
	00		 je	 $LN2@restorePtA
  0001b	83 be ac 00 00
	00 00		 cmp	 DWORD PTR [esi+172], 0
  00022	0f 85 00 01 00
	00		 jne	 $LN2@restorePtA

; 2752 : 		{
; 2753 : 			charObj[i].ptAct =

  00028	ff 76 08	 push	 DWORD PTR [esi+8]
  0002b	ff 36		 push	 DWORD PTR [esi]
  0002d	ff 76 fc	 push	 DWORD PTR [esi-4]
  00030	ff 76 f8	 push	 DWORD PTR [esi-8]
  00033	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  00038	83 c4 10	 add	 esp, 16			; 00000010H
  0003b	89 86 ac 00 00
	00		 mov	 DWORD PTR [esi+172], eax

; 2754 : 				createCharAction( charObj[i].graNo, charObj[i].gx, charObj[i].gy, charObj[i].dir );
; 2755 : 			if( charObj[i].ptAct == NULL )

  00041	85 c0		 test	 eax, eax
  00043	0f 84 df 00 00
	00		 je	 $LN2@restorePtA

; 2756 : 			{
; 2757 : 				continue;
; 2758 : 			}
; 2759 : 
; 2760 : 			charObj[i].use = CHAROBJ_USE_VIEW;

  00049	66 89 7e f0	 mov	 WORD PTR [esi-16], di

; 2761 : 
; 2762 : 			ext = (CHAREXTRA *)charObj[i].ptAct->pYobi;
; 2763 : 			ext->charObjTblId = i;

  0004d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00050	89 18		 mov	 DWORD PTR [eax], ebx

; 2764 : 
; 2765 : 			// NPC????????
; 2766 : 			// î?PC????????
; 2767 : 			// î?î
; 2768 : 			if( charObj[i].type == CHAROBJ_TYPE_NPC
; 2769 : 			 || charObj[i].type == CHAROBJ_TYPE_USER_NPC )

  00052	0f b7 46 f2	 movzx	 eax, WORD PTR [esi-14]
  00056	66 83 f8 01	 cmp	 ax, 1
  0005a	0f 84 8d 00 00
	00		 je	 $LN9@restorePtA
  00060	66 83 f8 08	 cmp	 ax, 8
  00064	0f 84 83 00 00
	00		 je	 $LN9@restorePtA

; 2773 : 				charObj[i].ptAct->atr |= charObj[i].charType;
; 2774 : 			}
; 2775 : 			else
; 2776 : 			// Item????????
; 2777 : 			if( charObj[i].type == CHAROBJ_TYPE_ITEM )

  0006a	66 83 f8 02	 cmp	 ax, 2
  0006e	75 43		 jne	 SHORT $LN10@restorePtA

; 2778 : 			{
; 2779 : 				// 1??????î????name?î¼??
; 2780 : 				if( strlen( charObj[i].info ) <= ITEM_NAME_LEN )

  00070	8d 56 5a	 lea	 edx, DWORD PTR [esi+90]
  00073	8b ca		 mov	 ecx, edx
  00075	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL34@restorePtA:
  00078	8a 01		 mov	 al, BYTE PTR [ecx]
  0007a	41		 inc	 ecx
  0007b	84 c0		 test	 al, al
  0007d	75 f9		 jne	 SHORT $LL34@restorePtA
  0007f	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00085	2b cf		 sub	 ecx, edi
  00087	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0008a	77 19		 ja	 SHORT $LN12@restorePtA

; 2781 : 				{
; 2782 : 					strcpy( charObj[i].ptAct->name, charObj[i].info );

  0008c	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  0008f	90		 npad	 1
$LL19@restorePtA:
  00090	8a 02		 mov	 al, BYTE PTR [edx]
  00092	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00095	88 01		 mov	 BYTE PTR [ecx], al
  00097	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0009a	84 c0		 test	 al, al
  0009c	75 f2		 jne	 SHORT $LL19@restorePtA

; 2745 : 	int i;
; 2746 : 	CHAREXTRA *ext;
; 2747 : 
; 2748 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  0009e	bf 02 00 00 00	 mov	 edi, 2
  000a3	eb 71		 jmp	 SHORT $LN36@restorePtA
$LN12@restorePtA:
  000a5	c7 40 38 3f 3f
	3f 00		 mov	 DWORD PTR [eax+56], 4144959 ; 003f3f3fH
  000ac	bf 02 00 00 00	 mov	 edi, 2
  000b1	eb 63		 jmp	 SHORT $LN36@restorePtA
$LN10@restorePtA:

; 2783 : 				}
; 2784 : 				else
; 2785 : 				{
; 2786 : 					strcpy( charObj[i].ptAct->name, "???" );
; 2787 : 				}
; 2788 : 				charObj[i].ptAct->atr |= charObj[i].charType;
; 2789 : 			}
; 2790 : 			else
; 2791 : 			// ??????????
; 2792 : 			if( charObj[i].type == CHAROBJ_TYPE_MONEY )

  000b3	66 83 f8 04	 cmp	 ax, 4
  000b7	75 6f		 jne	 SHORT $LN2@restorePtA

; 2793 : 			{
; 2794 : 				// 1??????î????name?î¼??
; 2795 : 				if( strlen( charObj[i].info ) <= CHAR_NAME_LEN )

  000b9	8d 56 5a	 lea	 edx, DWORD PTR [esi+90]
  000bc	8b ca		 mov	 ecx, edx
  000be	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL35@restorePtA:
  000c1	8a 01		 mov	 al, BYTE PTR [ecx]
  000c3	41		 inc	 ecx
  000c4	84 c0		 test	 al, al
  000c6	75 f9		 jne	 SHORT $LL35@restorePtA
  000c8	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  000ce	2b cf		 sub	 ecx, edi
  000d0	83 f9 10	 cmp	 ecx, 16			; 00000010H
  000d3	77 d0		 ja	 SHORT $LN12@restorePtA

; 2796 : 				{
; 2797 : 					strcpy( charObj[i].ptAct->name, charObj[i].info );

  000d5	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
$LL20@restorePtA:
  000d8	8a 02		 mov	 al, BYTE PTR [edx]
  000da	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  000dd	88 01		 mov	 BYTE PTR [ecx], al
  000df	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000e2	84 c0		 test	 al, al
  000e4	75 f2		 jne	 SHORT $LL20@restorePtA

; 2745 : 	int i;
; 2746 : 	CHAREXTRA *ext;
; 2747 : 
; 2748 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  000e6	bf 02 00 00 00	 mov	 edi, 2
  000eb	eb 29		 jmp	 SHORT $LN36@restorePtA
$LN9@restorePtA:

; 2770 : 			{
; 2771 : 				charObj[i].ptAct->level = charObj[i].level;

  000ed	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]

; 2772 : 				strcpy( charObj[i].ptAct->name, charObj[i].name );

  000f3	8d 56 28	 lea	 edx, DWORD PTR [esi+40]
  000f6	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000f9	89 81 8c 00 00
	00		 mov	 DWORD PTR [ecx+140], eax
  000ff	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  00105	83 c1 38	 add	 ecx, 56			; 00000038H
$LL18@restorePtA:
  00108	8a 02		 mov	 al, BYTE PTR [edx]
  0010a	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  0010d	88 01		 mov	 BYTE PTR [ecx], al
  0010f	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00112	84 c0		 test	 al, al
  00114	75 f2		 jne	 SHORT $LL18@restorePtA
$LN36@restorePtA:

; 2745 : 	int i;
; 2746 : 	CHAREXTRA *ext;
; 2747 : 
; 2748 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  00116	8b 8e ac 00 00
	00		 mov	 ecx, DWORD PTR [esi+172]
  0011c	8b 86 a4 00 00
	00		 mov	 eax, DWORD PTR [esi+164]
  00122	09 81 a4 00 00
	00		 or	 DWORD PTR [ecx+164], eax
$LN2@restorePtA:
  00128	81 c6 0c 01 00
	00		 add	 esi, 268		; 0000010cH
  0012e	43		 inc	 ebx
  0012f	81 fe 60 22 06
	00		 cmp	 esi, OFFSET ?charObj@@3PAUCHAROBJ@@A+402016
  00135	0f 8c d5 fe ff
	ff		 jl	 $LL4@restorePtA

; 2798 : 				}
; 2799 : 				else
; 2800 : 				{
; 2801 : 					strcpy( charObj[i].ptAct->name, "???" );
; 2802 : 				}
; 2803 : 				charObj[i].ptAct->atr |= charObj[i].charType;
; 2804 : 			}
; 2805 : 		}
; 2806 : 	}
; 2807 : }

  0013b	5f		 pop	 edi
  0013c	5e		 pop	 esi
  0013d	5b		 pop	 ebx
  0013e	c3		 ret	 0
?restorePtActCharObjAll@@YAXXZ ENDP			; restorePtActCharObjAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?clearPtActCharObj@@YAXXZ
_TEXT	SEGMENT
?clearPtActCharObj@@YAXXZ PROC				; clearPtActCharObj, COMDAT

; 2729 : 	int i;
; 2730 : 
; 2731 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  00000	b8 bc 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
$LL4@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00005	66 83 b8 44 ff
	ff ff 00	 cmp	 WORD PTR [eax-188], 0
  0000d	74 10		 je	 SHORT $LN2@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  0000f	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 2736 : 			charObj[i].stockDir = -1;

  00015	c7 80 60 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR [eax-160], -1
$LN2@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  0001f	66 83 78 50 00	 cmp	 WORD PTR [eax+80], 0
  00024	74 11		 je	 SHORT $LN11@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  00026	c7 80 0c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+268], 0

; 2736 : 			charObj[i].stockDir = -1;

  00030	c7 40 6c ff ff
	ff ff		 mov	 DWORD PTR [eax+108], -1
$LN11@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00037	66 83 b8 5c 01
	00 00 00	 cmp	 WORD PTR [eax+348], 0
  0003f	74 14		 je	 SHORT $LN12@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  00041	c7 80 18 02 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+536], 0

; 2736 : 			charObj[i].stockDir = -1;

  0004b	c7 80 78 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+376], -1
$LN12@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00055	66 83 b8 68 02
	00 00 00	 cmp	 WORD PTR [eax+616], 0
  0005d	74 14		 je	 SHORT $LN13@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  0005f	c7 80 24 03 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+804], 0

; 2736 : 			charObj[i].stockDir = -1;

  00069	c7 80 84 02 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+644], -1
$LN13@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00073	66 83 b8 74 03
	00 00 00	 cmp	 WORD PTR [eax+884], 0
  0007b	74 14		 je	 SHORT $LN14@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  0007d	c7 80 30 04 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1072], 0

; 2736 : 			charObj[i].stockDir = -1;

  00087	c7 80 90 03 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+912], -1
$LN14@clearPtAct:

; 2732 : 	{
; 2733 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00091	66 83 b8 80 04
	00 00 00	 cmp	 WORD PTR [eax+1152], 0
  00099	74 14		 je	 SHORT $LN15@clearPtAct

; 2734 : 		{
; 2735 : 			charObj[i].ptAct = NULL;

  0009b	c7 80 3c 05 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+1340], 0

; 2736 : 			charObj[i].stockDir = -1;

  000a5	c7 80 9c 04 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+1180], -1
$LN15@clearPtAct:

; 2729 : 	int i;
; 2730 : 
; 2731 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  000af	05 48 06 00 00	 add	 eax, 1608		; 00000648H
  000b4	3d 0c 23 06 00	 cmp	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+402188
  000b9	0f 8c 46 ff ff
	ff		 jl	 $LL4@clearPtAct

; 2737 : 		}
; 2738 : 	}
; 2739 : }

  000bf	c3		 ret	 0
?clearPtActCharObj@@YAXXZ ENDP				; clearPtActCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?resetCharObj@@YAXXZ
_TEXT	SEGMENT
?resetCharObj@@YAXXZ PROC				; resetCharObj, COMDAT

; 2631 : {

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2632 : 	int i;
; 2633 : 	CHAREXTRA *ext;
; 2634 : 
; 2635 : 	maxCharObj = 0;

  00003	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?maxCharObj@@3HA, 0 ; maxCharObj

; 2636 : 	tailCharObj = 0;
; 2637 : 	freeCharObj = 0;
; 2638 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  0000d	33 db		 xor	 ebx, ebx
  0000f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?tailCharObj@@3HA, 0 ; tailCharObj
  00019	bf bc 00 00 00	 mov	 edi, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
  0001e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?freeCharObj@@3HA, 0 ; freeCharObj
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@resetCharO:

; 2639 : 	{
; 2640 : 		if( charObj[i].use != CHAROBJ_USE_FREE )

  00030	66 83 bf 44 ff
	ff ff 00	 cmp	 WORD PTR [edi-188], 0
  00038	0f 84 37 01 00
	00		 je	 $LN2@resetCharO

; 2641 : 		{
; 2642 : 			if( charObj[i].ptAct != NULL )

  0003e	8b 07		 mov	 eax, DWORD PTR [edi]
  00040	85 c0		 test	 eax, eax
  00042	0f 84 0e 01 00
	00		 je	 $LN28@resetCharO

; 2643 : 			{
; 2644 : 				ext = (CHAREXTRA *)charObj[i].ptAct->pYobi;

  00048	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 2645 : 				if ((int)ext==0xdddddddd)

  0004b	81 fe dd dd dd
	dd		 cmp	 esi, -572662307		; ddddddddH
  00051	0f 84 3f 01 00
	00		 je	 $LN21@resetCharO

; 2648 : 					return;
; 2649 : 				}
; 2650 : 
; 2651 : 				if( ext != NULL )

  00057	85 f6		 test	 esi, esi
  00059	0f 84 e8 00 00
	00		 je	 $LN8@resetCharO

; 2652 : 				{
; 2653 : 					if( ext->ptActLeaderMark != NULL )

  0005f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00062	85 c0		 test	 eax, eax
  00064	74 10		 je	 SHORT $LN9@resetCharO

; 2654 : 					{
; 2655 : 						DeathAction( ext->ptActLeaderMark );

  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0006c	83 c4 04	 add	 esp, 4

; 2656 : 						ext->ptActLeaderMark = NULL;

  0006f	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN9@resetCharO:

; 2657 : 					}
; 2658 : 					if( ext->ptActMagicEffect != NULL )

  00076	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00079	85 c0		 test	 eax, eax
  0007b	74 10		 je	 SHORT $LN10@resetCharO

; 2659 : 					{
; 2660 : 						DeathAction( ext->ptActMagicEffect );

  0007d	50		 push	 eax
  0007e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00083	83 c4 04	 add	 esp, 4

; 2661 : 						ext->ptActMagicEffect = NULL;

  00086	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN10@resetCharO:

; 2662 : 					}
; 2663 : #ifdef __EMOTION
; 2664 : 					if( ext->ptActEmotion != NULL ){
; 2665 : 						DeathAction( ext->ptActEmotion );
; 2666 : 						ext->ptActEmotion = NULL;
; 2667 : 					}
; 2668 : #endif
; 2669 : #ifdef _STREET_VENDOR
; 2670 : 					if(ext->ptStreetVendor != NULL){

  0008d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00090	85 c0		 test	 eax, eax
  00092	74 10		 je	 SHORT $LN11@resetCharO

; 2671 : 						DeathAction(ext->ptStreetVendor);

  00094	50		 push	 eax
  00095	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0009a	83 c4 04	 add	 esp, 4

; 2672 : 						ext->ptStreetVendor = NULL;

  0009d	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN11@resetCharO:

; 2673 : 					}
; 2674 : #endif
; 2675 : #ifdef _MIND_ICON
; 2676 :     				if( ext->ptMindIcon != NULL ){

  000a4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000a7	85 c0		 test	 eax, eax
  000a9	74 10		 je	 SHORT $LN12@resetCharO

; 2677 : 	    				DeathAction( ext->ptMindIcon );

  000ab	50		 push	 eax
  000ac	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000b1	83 c4 04	 add	 esp, 4

; 2678 : 		   			    ext->ptMindIcon = NULL;

  000b4	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN12@resetCharO:

; 2679 : 					}
; 2680 : #endif
; 2681 : #ifdef äººç©åç¯
; 2682 : 					if (ext->ptmManorIcon != NULL) {

  000bb	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000be	85 c0		 test	 eax, eax
  000c0	74 10		 je	 SHORT $LN13@resetCharO

; 2683 : 						DeathAction(ext->ptmManorIcon);

  000c2	50		 push	 eax
  000c3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000c8	83 c4 04	 add	 esp, 4

; 2684 : 						ext->ptmManorIcon = NULL;

  000cb	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN13@resetCharO:

; 2685 : 					}
; 2686 : #endif
; 2687 : #ifdef äººç©ç§°å·
; 2688 : 					if (ext->ptTitleIcon != NULL) {

  000d2	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000d5	85 c0		 test	 eax, eax
  000d7	74 10		 je	 SHORT $LN14@resetCharO

; 2689 : 						DeathAction(ext->ptTitleIcon);

  000d9	50		 push	 eax
  000da	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000df	83 c4 04	 add	 esp, 4

; 2690 : 						ext->ptTitleIcon = NULL;

  000e2	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN14@resetCharO:

; 2691 : 					}
; 2692 : #endif
; 2693 : #ifdef _ITEM_FIREWORK
; 2694 : 					if (ext->pActFirework[0] != NULL)

  000e9	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  000ec	85 c0		 test	 eax, eax
  000ee	74 09		 je	 SHORT $LN15@resetCharO

; 2695 : 						DeathAction(ext->pActFirework[0]);

  000f0	50		 push	 eax
  000f1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000f6	83 c4 04	 add	 esp, 4
$LN15@resetCharO:

; 2696 : 					if (ext->pActFirework[1] != NULL)

  000f9	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  000fc	85 c0		 test	 eax, eax
  000fe	74 09		 je	 SHORT $LN16@resetCharO

; 2697 : 						DeathAction(ext->pActFirework[1]);

  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00106	83 c4 04	 add	 esp, 4
$LN16@resetCharO:

; 2698 : 					ext->pActFirework[0] = NULL;

  00109	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 2699 : 					ext->pActFirework[1] = NULL;

  00110	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 2700 : 
; 2701 : #endif
; 2702 : #ifdef ITEM_AURA_
; 2703 : 					if (ext->ptActAura1 != nullptr)

  00117	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  0011a	85 c0		 test	 eax, eax
  0011c	74 09		 je	 SHORT $LN17@resetCharO

; 2704 : 						DeathAction(ext->ptActAura1);

  0011e	50		 push	 eax
  0011f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00124	83 c4 04	 add	 esp, 4
$LN17@resetCharO:

; 2705 : 					if (ext->ptActAura2 != nullptr)

  00127	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  0012a	85 c0		 test	 eax, eax
  0012c	74 09		 je	 SHORT $LN18@resetCharO

; 2706 : 						DeathAction(ext->ptActAura2);

  0012e	50		 push	 eax
  0012f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00134	83 c4 04	 add	 esp, 4
$LN18@resetCharO:

; 2707 : 					ext->ptActAura1 = nullptr;

  00137	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 2708 : 					ext->ptActAura2 = nullptr;

  0013e	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  00145	8b 07		 mov	 eax, DWORD PTR [edi]
$LN8@resetCharO:

; 2709 : 
; 2710 : #endif
; 2711 : 				}
; 2712 : 				DeathAction( charObj[i].ptAct );

  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0014d	83 c4 04	 add	 esp, 4

; 2713 : 				charObj[i].ptAct = NULL;

  00150	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN28@resetCharO:

; 2714 : 			}
; 2715 : 			charObj[i].use = CHAROBJ_USE_FREE;

  00156	33 c0		 xor	 eax, eax

; 2716 : 			charObj[i].status = 0;
; 2717 : 			charObj[i].id = 0;
; 2718 : 			charObj[i].stockDir = -1;

  00158	c7 87 60 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR [edi-160], -1
  00162	66 89 87 44 ff
	ff ff		 mov	 WORD PTR [edi-188], ax
  00169	89 87 70 ff ff
	ff		 mov	 DWORD PTR [edi-144], eax
  0016f	89 87 48 ff ff
	ff		 mov	 DWORD PTR [edi-184], eax
$LN2@resetCharO:

; 2636 : 	tailCharObj = 0;
; 2637 : 	freeCharObj = 0;
; 2638 : 	for( i = 0; i < MAX_CHAROBJ; i++ )

  00175	81 c7 0c 01 00
	00		 add	 edi, 268		; 0000010cH
  0017b	43		 inc	 ebx
  0017c	81 ff 0c 23 06
	00		 cmp	 edi, OFFSET ?charObj@@3PAUCHAROBJ@@A+402188
  00182	0f 8c a8 fe ff
	ff		 jl	 $LL4@resetCharO

; 2719 : 		}
; 2720 : 	}
; 2721 : 
; 2722 : 	searchCharObj = 0;
; 2723 : }

  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?searchCharObj@@3HA, 0 ; searchCharObj
  00194	5b		 pop	 ebx
  00195	c3		 ret	 0
$LN21@resetCharO:

; 2646 : 				{
; 2647 : 					charObj[i].ptAct = NULL;

  00196	69 c3 0c 01 00
	00		 imul	 eax, ebx, 268
  0019c	5f		 pop	 edi

; 2719 : 		}
; 2720 : 	}
; 2721 : 
; 2722 : 	searchCharObj = 0;
; 2723 : }

  0019d	5e		 pop	 esi
  0019e	5b		 pop	 ebx
  0019f	c7 80 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+188], 0
  001a9	c3		 ret	 0
?resetCharObj@@YAXXZ ENDP				; resetCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?initCharObj@@YAXXZ
_TEXT	SEGMENT
?initCharObj@@YAXXZ PROC				; initCharObj, COMDAT

; 2610 : 	int i;
; 2611 : 
; 2612 : 	maxCharObj = 0;

  00000	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?maxCharObj@@3HA, 0 ; maxCharObj

; 2613 : 	tailCharObj = 0;

  0000a	b8 bc 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
  0000f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?tailCharObj@@3HA, 0 ; tailCharObj

; 2614 : 	freeCharObj = 0;

  00019	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?freeCharObj@@3HA, 0 ; freeCharObj
$LL4@initCharOb:

; 2615 : 	for( i = 0; i < MAX_CHAROBJ; i++ )
; 2616 : 	{
; 2617 : 		charObj[i].use = CHAROBJ_USE_FREE;

  00023	33 c9		 xor	 ecx, ecx

; 2618 : 		charObj[i].ptAct = NULL;
; 2619 : 		charObj[i].status = 0;
; 2620 : 		charObj[i].id = 0;
; 2621 : 		charObj[i].stockDir = -1;

  00025	c7 80 60 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR [eax-160], -1
  0002f	66 89 88 44 ff
	ff ff		 mov	 WORD PTR [eax-188], cx
  00036	89 08		 mov	 DWORD PTR [eax], ecx
  00038	89 88 70 ff ff
	ff		 mov	 DWORD PTR [eax-144], ecx
  0003e	89 88 48 ff ff
	ff		 mov	 DWORD PTR [eax-184], ecx

; 2622 : 		charObj[i].name[0] = '\0';

  00044	88 88 7c ff ff
	ff		 mov	 BYTE PTR [eax-132], cl
  0004a	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  0004f	3d 0c 23 06 00	 cmp	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+402188
  00054	7c cd		 jl	 SHORT $LL4@initCharOb

; 2623 : 	}
; 2624 : 
; 2625 : 	searchCharObj = 0;

  00056	89 0d 00 00 00
	00		 mov	 DWORD PTR ?searchCharObj@@3HA, ecx ; searchCharObj

; 2626 : }

  0005c	c3		 ret	 0
?initCharObj@@YAXXZ ENDP				; initCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharObj@@YAXH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?delCharObj@@YAXH@Z PROC				; delCharObj, COMDAT

; 2503 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2504 : 	int i;
; 2505 : 	int no;
; 2506 : 	CHAREXTRA *ext;
; 2507 : 
; 2508 : 	if( pc.id == id ){

  00003	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00006	39 05 08 00 00
	00		 cmp	 DWORD PTR ?pc@@3UPC@@A+8, eax
  0000c	75 06		 jne	 SHORT $LN5@delCharObj

; 2600 : 				break;
; 2601 : 			}
; 2602 : 		}
; 2603 : 	}
; 2604 : }

  0000e	5d		 pop	 ebp

; 2509 : 		resetPc();

  0000f	e9 00 00 00 00	 jmp	 ?resetPc@@YAXXZ		; resetPc
$LN5@delCharObj:
  00014	53		 push	 ebx

; 2510 : 		return;
; 2511 : 	}
; 2512 : 	no = searchCharObjId( id );

  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0001b	8b d8		 mov	 ebx, eax
  0001d	83 c4 04	 add	 esp, 4

; 2513 : 	// ID???????î
; 2514 : 	if( no >= 0 ){

  00020	85 db		 test	 ebx, ebx
  00022	0f 88 b8 01 00
	00		 js	 $LN30@delCharObj

; 2515 : 		if( charObj[no].ptAct != NULL ){

  00028	56		 push	 esi
  00029	57		 push	 edi
  0002a	69 fb 0c 01 00
	00		 imul	 edi, ebx, 268
  00030	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+188]
  00036	85 c9		 test	 ecx, ecx
  00038	0f 84 38 01 00
	00		 je	 $LN7@delCharObj

; 2516 : 			ext = (CHAREXTRA *)charObj[no].ptAct->pYobi;

  0003e	8b 71 0c	 mov	 esi, DWORD PTR [ecx+12]

; 2517 : 			if ((int)ext == 0xdddddddd)

  00041	81 fe dd dd dd
	dd		 cmp	 esi, -572662307		; ddddddddH
  00047	75 0f		 jne	 SHORT $LN8@delCharObj

; 2518 : 			{
; 2519 : 				charObj[no].ptAct = NULL;

  00049	c7 87 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+188], 0
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx

; 2600 : 				break;
; 2601 : 			}
; 2602 : 		}
; 2603 : 	}
; 2604 : }

  00056	5d		 pop	 ebp
  00057	c3		 ret	 0
$LN8@delCharObj:

; 2520 : 				return;
; 2521 : 			}
; 2522 : 			if( ext != NULL ){

  00058	85 f6		 test	 esi, esi
  0005a	0f 84 03 01 00
	00		 je	 $LN9@delCharObj

; 2523 : 				if( ext->ptActLeaderMark != NULL ){

  00060	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00063	85 c0		 test	 eax, eax
  00065	74 10		 je	 SHORT $LN10@delCharObj

; 2524 : 					DeathAction( ext->ptActLeaderMark );

  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0006d	83 c4 04	 add	 esp, 4

; 2525 : 					ext->ptActLeaderMark = NULL;

  00070	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN10@delCharObj:

; 2526 : 				}
; 2527 : 				if( ext->ptActMagicEffect != NULL ){

  00077	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0007a	85 c0		 test	 eax, eax
  0007c	74 10		 je	 SHORT $LN11@delCharObj

; 2528 : 					DeathAction( ext->ptActMagicEffect );

  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00084	83 c4 04	 add	 esp, 4

; 2529 : 					ext->ptActMagicEffect = NULL;

  00087	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$LN11@delCharObj:

; 2530 : 				}
; 2531 : #ifdef __EMOTION
; 2532 : 				if( ext->ptActEmotion != NULL ){
; 2533 : 					DeathAction( ext->ptActEmotion );
; 2534 : 					ext->ptActEmotion = NULL;
; 2535 : 				}
; 2536 : #endif
; 2537 : #ifdef _STREET_VENDOR
; 2538 : 				if(ext->ptStreetVendor != NULL){

  0008e	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00091	85 c0		 test	 eax, eax
  00093	74 10		 je	 SHORT $LN12@delCharObj

; 2539 : 					DeathAction(ext->ptStreetVendor);

  00095	50		 push	 eax
  00096	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0009b	83 c4 04	 add	 esp, 4

; 2540 : 					ext->ptStreetVendor = NULL;

  0009e	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN12@delCharObj:

; 2541 : 				}
; 2542 : #endif
; 2543 : #ifdef _MIND_ICON
; 2544 : 				if( ext->ptMindIcon != NULL ){

  000a5	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000a8	85 c0		 test	 eax, eax
  000aa	74 10		 je	 SHORT $LN13@delCharObj

; 2545 : 					DeathAction( ext->ptMindIcon );

  000ac	50		 push	 eax
  000ad	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000b2	83 c4 04	 add	 esp, 4

; 2546 : 					ext->ptMindIcon = NULL;

  000b5	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
$LN13@delCharObj:

; 2547 : 				}
; 2548 : #endif
; 2549 : #ifdef äººç©åç¯
; 2550 : 				if (ext->ptmManorIcon != NULL) {

  000bc	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000bf	85 c0		 test	 eax, eax
  000c1	74 10		 je	 SHORT $LN14@delCharObj

; 2551 : 					DeathAction(ext->ptmManorIcon);

  000c3	50		 push	 eax
  000c4	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000c9	83 c4 04	 add	 esp, 4

; 2552 : 					ext->ptmManorIcon = NULL;

  000cc	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN14@delCharObj:

; 2553 : 				}
; 2554 : #endif
; 2555 : #ifdef äººç©ç§°å·
; 2556 : 				if (ext->ptTitleIcon != NULL) {

  000d3	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000d6	85 c0		 test	 eax, eax
  000d8	74 10		 je	 SHORT $LN15@delCharObj

; 2557 : 					DeathAction(ext->ptTitleIcon);

  000da	50		 push	 eax
  000db	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000e0	83 c4 04	 add	 esp, 4

; 2558 : 					ext->ptTitleIcon = NULL;

  000e3	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN15@delCharObj:

; 2559 : 				}
; 2560 : #endif
; 2561 : #ifdef _NB_ä»»å¡æå¼
; 2562 : 				if( ext->ptNoticeIcon != NULL ){

  000ea	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  000ed	85 c0		 test	 eax, eax
  000ef	74 10		 je	 SHORT $LN16@delCharObj

; 2563 : 					DeathAction( ext->ptNoticeIcon );

  000f1	50		 push	 eax
  000f2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000f7	83 c4 04	 add	 esp, 4

; 2564 : 					ext->ptNoticeIcon = NULL;

  000fa	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
$LN16@delCharObj:

; 2565 : 				}
; 2566 : #endif
; 2567 : #ifdef _ITEM_FIREWORK
; 2568 : 				if (ext->pActFirework[0] != NULL)

  00101	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00104	85 c0		 test	 eax, eax
  00106	74 09		 je	 SHORT $LN17@delCharObj

; 2569 : 					DeathAction(ext->pActFirework[0]);

  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0010e	83 c4 04	 add	 esp, 4
$LN17@delCharObj:

; 2570 : 				if (ext->pActFirework[1] != NULL)

  00111	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00114	85 c0		 test	 eax, eax
  00116	74 09		 je	 SHORT $LN18@delCharObj

; 2571 : 					DeathAction(ext->pActFirework[1]);

  00118	50		 push	 eax
  00119	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0011e	83 c4 04	 add	 esp, 4
$LN18@delCharObj:

; 2572 : 				ext->pActFirework[0] = NULL;

  00121	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0

; 2573 : 				ext->pActFirework[1] = NULL;

  00128	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0

; 2574 : #endif
; 2575 : #ifdef ITEM_AURA_
; 2576 : 				if (ext->ptActAura1 != nullptr)

  0012f	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00132	85 c0		 test	 eax, eax
  00134	74 09		 je	 SHORT $LN19@delCharObj

; 2577 : 					DeathAction(ext->ptActAura1);

  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0013c	83 c4 04	 add	 esp, 4
$LN19@delCharObj:

; 2578 : 				if (ext->ptActAura2 != nullptr)

  0013f	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00142	85 c0		 test	 eax, eax
  00144	74 09		 je	 SHORT $LN20@delCharObj

; 2579 : 					DeathAction(ext->ptActAura2);

  00146	50		 push	 eax
  00147	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0014c	83 c4 04	 add	 esp, 4
$LN20@delCharObj:

; 2580 : 				ext->ptActAura1 = nullptr;

  0014f	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0

; 2581 : 				ext->ptActAura2 = nullptr;

  00156	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  0015d	8b 8f bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+188]
$LN9@delCharObj:

; 2582 : #endif
; 2583 : 			}
; 2584 : 			DeathAction( charObj[no].ptAct );

  00163	51		 push	 ecx
  00164	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00169	83 c4 04	 add	 esp, 4

; 2585 : 			charObj[no].ptAct = NULL;

  0016c	c7 87 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+188], 0
$LN7@delCharObj:

; 2586 : 		}
; 2587 : 		charObj[no].use = CHAROBJ_USE_FREE;

  00176	33 c0		 xor	 eax, eax

; 2588 : 		charObj[no].status = 0;
; 2589 : 		charObj[no].stockDir = -1;

  00178	c7 87 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+28], -1
  00182	66 89 87 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[edi], ax
  00189	89 87 2c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edi+44], eax

; 2590 : 		// î???î¡
; 2591 : 		if( maxCharObj > 0 )

  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?maxCharObj@@3HA ; maxCharObj
  00194	85 c0		 test	 eax, eax
  00196	7e 06		 jle	 SHORT $LN21@delCharObj

; 2592 : 			maxCharObj--;

  00198	48		 dec	 eax
  00199	a3 00 00 00 00	 mov	 DWORD PTR ?maxCharObj@@3HA, eax ; maxCharObj
$LN21@delCharObj:

; 2593 : 		// ?????îº??î·??????????îº???
; 2594 : 		if( freeCharObj > no )

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?freeCharObj@@3HA ; freeCharObj
  001a3	3b c3		 cmp	 eax, ebx

; 2595 : 			freeCharObj = no;
; 2596 : 		// î?????????î?
; 2597 : 		for( i = tailCharObj; i > 0; i-- ){

  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  001ab	0f 4f c3	 cmovg	 eax, ebx
  001ae	a3 00 00 00 00	 mov	 DWORD PTR ?freeCharObj@@3HA, eax ; freeCharObj
  001b3	85 c9		 test	 ecx, ecx
  001b5	7e 27		 jle	 SHORT $LN31@delCharObj
  001b7	69 c1 0c 01 00
	00		 imul	 eax, ecx, 268
  001bd	8d 80 f4 fe ff
	ff		 lea	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax-268]
$LL4@delCharObj:

; 2598 : 			if( charObj[i-1].use != CHAROBJ_USE_FREE ){

  001c3	66 83 38 00	 cmp	 WORD PTR [eax], 0
  001c7	75 0f		 jne	 SHORT $LN26@delCharObj

; 2595 : 			freeCharObj = no;
; 2596 : 		// î?????????î?
; 2597 : 		for( i = tailCharObj; i > 0; i-- ){

  001c9	49		 dec	 ecx
  001ca	2d 0c 01 00 00	 sub	 eax, 268		; 0000010cH
  001cf	85 c9		 test	 ecx, ecx
  001d1	7f f0		 jg	 SHORT $LL4@delCharObj
  001d3	5f		 pop	 edi
  001d4	5e		 pop	 esi
  001d5	5b		 pop	 ebx

; 2600 : 				break;
; 2601 : 			}
; 2602 : 		}
; 2603 : 	}
; 2604 : }

  001d6	5d		 pop	 ebp
  001d7	c3		 ret	 0
$LN26@delCharObj:

; 2599 : 				tailCharObj = i;

  001d8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?tailCharObj@@3HA, ecx ; tailCharObj
$LN31@delCharObj:
  001de	5f		 pop	 edi
  001df	5e		 pop	 esi
$LN30@delCharObj:
  001e0	5b		 pop	 ebx

; 2600 : 				break;
; 2601 : 			}
; 2602 : 		}
; 2603 : 	}
; 2604 : }

  001e1	5d		 pop	 ebp
  001e2	c3		 ret	 0
?delCharObj@@YAXH@Z ENDP				; delCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getAtrCharObjType@@YAHH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?getAtrCharObjType@@YAHH@Z PROC				; getAtrCharObjType, COMDAT

; 2467 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2468 : 	int ret;
; 2469 : 	switch( type ){

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	48		 dec	 eax
  00007	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0000a	77 23		 ja	 SHORT $LN7@getAtrChar
  0000c	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN9@getAtrChar[eax]
  00013	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN10@getAtrChar[eax*4]
$LN4@getAtrChar:

; 2470 : 		case CHAR_TYPEPLAYER:
; 2471 : 			ret = CHAROBJ_TYPE_USER_NPC;
; 2472 : 			break;
; 2473 : 		case CHAR_TYPEDENGON:
; 2474 : 		case CHAR_TYPEDUELRANKING:
; 2475 : 		case CHAR_TYPEMSG:
; 2476 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_LOOKAT;
; 2477 : 			break;
; 2478 : 		case CHAR_TYPEBUS:
; 2479 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_PARTY_OK;
; 2480 : 			break;
; 2481 : 		default:
; 2482 : 			ret = CHAROBJ_TYPE_NPC;
; 2483 : 			break;
; 2484 : 	}
; 2485 : 	return ret;

  0001a	b8 08 00 00 00	 mov	 eax, 8

; 2486 : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
$LN5@getAtrChar:

; 2470 : 		case CHAR_TYPEPLAYER:
; 2471 : 			ret = CHAROBJ_TYPE_USER_NPC;
; 2472 : 			break;
; 2473 : 		case CHAR_TYPEDENGON:
; 2474 : 		case CHAR_TYPEDUELRANKING:
; 2475 : 		case CHAR_TYPEMSG:
; 2476 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_LOOKAT;
; 2477 : 			break;
; 2478 : 		case CHAR_TYPEBUS:
; 2479 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_PARTY_OK;
; 2480 : 			break;
; 2481 : 		default:
; 2482 : 			ret = CHAROBJ_TYPE_NPC;
; 2483 : 			break;
; 2484 : 	}
; 2485 : 	return ret;

  00021	b8 11 00 00 00	 mov	 eax, 17			; 00000011H

; 2486 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
$LN6@getAtrChar:

; 2470 : 		case CHAR_TYPEPLAYER:
; 2471 : 			ret = CHAROBJ_TYPE_USER_NPC;
; 2472 : 			break;
; 2473 : 		case CHAR_TYPEDENGON:
; 2474 : 		case CHAR_TYPEDUELRANKING:
; 2475 : 		case CHAR_TYPEMSG:
; 2476 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_LOOKAT;
; 2477 : 			break;
; 2478 : 		case CHAR_TYPEBUS:
; 2479 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_PARTY_OK;
; 2480 : 			break;
; 2481 : 		default:
; 2482 : 			ret = CHAROBJ_TYPE_NPC;
; 2483 : 			break;
; 2484 : 	}
; 2485 : 	return ret;

  00028	b8 21 00 00 00	 mov	 eax, 33			; 00000021H

; 2486 : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
$LN7@getAtrChar:

; 2470 : 		case CHAR_TYPEPLAYER:
; 2471 : 			ret = CHAROBJ_TYPE_USER_NPC;
; 2472 : 			break;
; 2473 : 		case CHAR_TYPEDENGON:
; 2474 : 		case CHAR_TYPEDUELRANKING:
; 2475 : 		case CHAR_TYPEMSG:
; 2476 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_LOOKAT;
; 2477 : 			break;
; 2478 : 		case CHAR_TYPEBUS:
; 2479 : 			ret = CHAROBJ_TYPE_NPC | CHAROBJ_TYPE_PARTY_OK;
; 2480 : 			break;
; 2481 : 		default:
; 2482 : 			ret = CHAROBJ_TYPE_NPC;
; 2483 : 			break;
; 2484 : 	}
; 2485 : 	return ret;

  0002f	b8 01 00 00 00	 mov	 eax, 1

; 2486 : }

  00034	5d		 pop	 ebp
  00035	c3		 ret	 0
  00036	66 90		 npad	 2
$LN10@getAtrChar:
  00038	00 00 00 00	 DD	 $LN4@getAtrChar
  0003c	00 00 00 00	 DD	 $LN5@getAtrChar
  00040	00 00 00 00	 DD	 $LN6@getAtrChar
  00044	00 00 00 00	 DD	 $LN7@getAtrChar
$LN9@getAtrChar:
  00048	00		 DB	 0
  00049	03		 DB	 3
  0004a	03		 DB	 3
  0004b	03		 DB	 3
  0004c	03		 DB	 3
  0004d	01		 DB	 1
  0004e	03		 DB	 3
  0004f	03		 DB	 3
  00050	03		 DB	 3
  00051	03		 DB	 3
  00052	03		 DB	 3
  00053	03		 DB	 3
  00054	01		 DB	 1
  00055	03		 DB	 3
  00056	03		 DB	 3
  00057	03		 DB	 3
  00058	03		 DB	 3
  00059	03		 DB	 3
  0005a	03		 DB	 3
  0005b	03		 DB	 3
  0005c	03		 DB	 3
  0005d	03		 DB	 3
  0005e	03		 DB	 3
  0005f	03		 DB	 3
  00060	03		 DB	 3
  00061	03		 DB	 3
  00062	01		 DB	 1
  00063	03		 DB	 3
  00064	03		 DB	 3
  00065	03		 DB	 3
  00066	03		 DB	 3
  00067	02		 DB	 2
?getAtrCharObjType@@YAHH@Z ENDP				; getAtrCharObjType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?getAtrCharType@@YAHH@Z
_TEXT	SEGMENT
_type$ = 8						; size = 4
?getAtrCharType@@YAHH@Z PROC				; getAtrCharType, COMDAT

; 2447 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2448 : 	switch( type ){

  00003	8b 45 08	 mov	 eax, DWORD PTR _type$[ebp]
  00006	83 e8 01	 sub	 eax, 1
  00009	74 18		 je	 SHORT $LN4@getAtrChar
  0000b	83 e8 02	 sub	 eax, 2
  0000e	74 0c		 je	 SHORT $LN5@getAtrChar
  00010	83 e8 1d	 sub	 eax, 29			; 0000001dH
  00013	74 0e		 je	 SHORT $LN4@getAtrChar

; 2456 : 		// ??î
; 2457 : 		default:
; 2458 : 			return ACT_ATR_TYPE_OTHER;

  00015	b8 00 10 00 00	 mov	 eax, 4096		; 00001000H

; 2459 : 	}
; 2460 : 	return 0;
; 2461 : }

  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
$LN5@getAtrChar:

; 2453 : 		// ???
; 2454 : 		case CHAR_TYPEPET:
; 2455 : 			return ACT_ATR_TYPE_PET;

  0001c	b8 00 02 00 00	 mov	 eax, 512		; 00000200H

; 2459 : 	}
; 2460 : 	return 0;
; 2461 : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
$LN4@getAtrChar:

; 2449 : 		// ???
; 2450 : 		case CHAR_TYPEPLAYER:
; 2451 : 		case CHAR_TYPEBUS:
; 2452 : 			return ACT_ATR_TYPE_OTHER_PC;

  00023	b8 00 01 00 00	 mov	 eax, 256		; 00000100H

; 2459 : 	}
; 2460 : 	return 0;
; 2461 : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
?getAtrCharType@@YAHH@Z ENDP				; getAtrCharType
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setMoneyCharObj@@YAXHHHHHHPAD@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_graNo$ = 12						; size = 4
_gx$ = 16						; size = 4
_gy$ = 20						; size = 4
_dir$ = 24						; size = 4
_money$ = 28						; size = 4
_info$ = 32						; size = 4
?setMoneyCharObj@@YAXHHHHHHPAD@Z PROC			; setMoneyCharObj, COMDAT

; 2365 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2366 : 	int no;
; 2367 : 	BOOL existFlag = FALSE;
; 2368 : 	CHAREXTRA *ext;
; 2369 : 	// î???????????
; 2370 : 	if( (no = searchCharObjId( id )) >= 0 )

  00006	8b 7d 08	 mov	 edi, DWORD PTR _id$[ebp]
  00009	57		 push	 edi
  0000a	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0000f	8b 5d 18	 mov	 ebx, DWORD PTR _dir$[ebp]
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	85 f6		 test	 esi, esi
  00019	79 62		 jns	 SHORT $LN3@setMoneyCh

; 2371 : 		existFlag = TRUE;
; 2372 : 	// ??î?????????î?
; 2373 : 	if( !existFlag ){
; 2374 : 		no = getCharObjBuf();

  0001b	e8 00 00 00 00	 call	 ?getCharObjBuf@@YAHXZ	; getCharObjBuf
  00020	8b f0		 mov	 esi, eax

; 2375 : 		if( no < 0 )

  00022	85 f6		 test	 esi, esi
  00024	0f 88 1d 01 00
	00		 js	 $LN1@setMoneyCh

; 2376 : 			return;	// ??????????î·??
; 2377 : 		charObj[no].ptAct = createCharAction( graNo, gx, gy, dir );

  0002a	53		 push	 ebx
  0002b	ff 75 14	 push	 DWORD PTR _gy$[ebp]
  0002e	ff 75 10	 push	 DWORD PTR _gx$[ebp]
  00031	ff 75 0c	 push	 DWORD PTR _graNo$[ebp]
  00034	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  00039	69 ce 0c 01 00
	00		 imul	 ecx, esi, 268
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	89 81 bc 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+188], eax

; 2378 : 		if( charObj[no].ptAct == NULL )

  00048	85 c0		 test	 eax, eax
  0004a	0f 84 f7 00 00
	00		 je	 $LN1@setMoneyCh

; 2379 : 			// î???????î·???î ´???????????
; 2380 : 			return;
; 2381 : 		charObj[no].use = CHAROBJ_USE_VIEW;

  00050	ba 02 00 00 00	 mov	 edx, 2
  00055	66 89 91 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx], dx

; 2382 : 		ext = (CHAREXTRA *)charObj[no].ptAct->pYobi;
; 2383 : 		ext->charObjTblId = no;

  0005c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0005f	89 30		 mov	 DWORD PTR [eax], esi

; 2384 : 		charObj[no].type      = CHAROBJ_TYPE_MONEY;

  00061	b8 04 00 00 00	 mov	 eax, 4
  00066	66 89 81 02 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+2], ax

; 2385 : 		charObj[no].id        = id;

  0006d	89 b9 04 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+4], edi

; 2386 : 		charObj[no].stockDir  = -1;

  00073	c7 81 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+28], -1
$LN3@setMoneyCh:

; 2387 : 	}
; 2388 : 	charObj[no].graNo = graNo;
; 2389 : 	charObj[no].money = money;

  0007d	8b 45 1c	 mov	 eax, DWORD PTR _money$[ebp]

; 2390 : 	charObj[no].gx = gx;
; 2391 : 	charObj[no].gy = gy;
; 2392 : 	charObj[no].dir = dir;
; 2393 : 	if( strlen( info ) <= 60 )

  00080	8b 55 20	 mov	 edx, DWORD PTR _info$[ebp]
  00083	8b ca		 mov	 ecx, edx
  00085	8b 7d 0c	 mov	 edi, DWORD PTR _graNo$[ebp]
  00088	69 f6 0c 01 00
	00		 imul	 esi, esi, 268
  0008e	89 86 34 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+52], eax
  00094	8b 45 10	 mov	 eax, DWORD PTR _gx$[ebp]
  00097	89 86 0c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+12], eax
  0009d	8b 45 14	 mov	 eax, DWORD PTR _gy$[ebp]
  000a0	89 9e 18 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+24], ebx
  000a6	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
  000a9	89 be 08 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+8], edi
  000af	89 86 10 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+16], eax
$LL20@setMoneyCh:
  000b5	8a 01		 mov	 al, BYTE PTR [ecx]
  000b7	41		 inc	 ecx
  000b8	84 c0		 test	 al, al
  000ba	75 f9		 jne	 SHORT $LL20@setMoneyCh
  000bc	2b cb		 sub	 ecx, ebx
  000be	83 f9 3c	 cmp	 ecx, 60			; 0000003cH
  000c1	77 1d		 ja	 SHORT $LN6@setMoneyCh

; 2394 : 		strcpy( charObj[no].info, info );

  000c3	8b c6		 mov	 eax, esi
  000c5	8b ca		 mov	 ecx, edx
  000c7	2b c2		 sub	 eax, edx
  000c9	8d b8 6a 00 00
	00		 lea	 edi, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+106]
  000cf	90		 npad	 1
$LL11@setMoneyCh:
  000d0	8a 01		 mov	 al, BYTE PTR [ecx]
  000d2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000d5	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  000d9	84 c0		 test	 al, al
  000db	75 f3		 jne	 SHORT $LL11@setMoneyCh
  000dd	8b 7d 0c	 mov	 edi, DWORD PTR _graNo$[ebp]
$LN6@setMoneyCh:

; 2395 : 	charObj[no].charType = ACT_ATR_TYPE_GOLD;
; 2396 : 	charObj[no].newFoundFlag = 0;	// î¡î?????????

  000e0	33 c0		 xor	 eax, eax
  000e2	c7 86 b4 00 00
	00 00 08 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+180], 2048 ; 00000800H
  000ec	66 89 86 b8 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+184], ax

; 2397 : 	// ???????????î±?î¼??
; 2398 : 	if( charObj[no].ptAct == NULL )

  000f3	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  000f9	85 c0		 test	 eax, eax
  000fb	74 4a		 je	 SHORT $LN1@setMoneyCh

; 2399 : 		return;
; 2400 : 	charObj[no].ptAct->anim_chr_no = graNo;
; 2401 : 	// 1??????î????name?î¼??
; 2402 : 	if( strlen( info ) <= CHAR_NAME_LEN )

  000fd	8b ca		 mov	 ecx, edx
  000ff	89 b8 44 01 00
	00		 mov	 DWORD PTR [eax+324], edi
  00105	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL21@setMoneyCh:
  00108	8a 01		 mov	 al, BYTE PTR [ecx]
  0010a	41		 inc	 ecx
  0010b	84 c0		 test	 al, al
  0010d	75 f9		 jne	 SHORT $LL21@setMoneyCh
  0010f	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  00115	2b cf		 sub	 ecx, edi
  00117	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0011a	77 14		 ja	 SHORT $LN8@setMoneyCh

; 2403 : 		strcpy( charObj[no].ptAct->name, info );

  0011c	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  0011f	90		 npad	 1
$LL12@setMoneyCh:
  00120	8a 02		 mov	 al, BYTE PTR [edx]
  00122	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00125	88 01		 mov	 BYTE PTR [ecx], al
  00127	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0012a	84 c0		 test	 al, al
  0012c	75 f2		 jne	 SHORT $LL12@setMoneyCh
  0012e	eb 07		 jmp	 SHORT $LN9@setMoneyCh
$LN8@setMoneyCh:

; 2404 : 	else
; 2405 : 		strcpy( charObj[no].ptAct->name, "???" );

  00130	c7 40 38 3f 3f
	3f 00		 mov	 DWORD PTR [eax+56], 4144959 ; 003f3f3fH
$LN9@setMoneyCh:

; 2406 : 	charObj[no].ptAct->atr |= ACT_ATR_TYPE_GOLD;

  00137	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  0013d	81 88 a4 00 00
	00 00 08 00 00	 or	 DWORD PTR [eax+164], 2048 ; 00000800H
$LN1@setMoneyCh:

; 2407 : }

  00147	5f		 pop	 edi
  00148	5e		 pop	 esi
  00149	5b		 pop	 ebx
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
?setMoneyCharObj@@YAXHHHHHHPAD@Z ENDP			; setMoneyCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setItemCharObj@@YAXHHHHHHPAD@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_graNo$ = 12						; size = 4
_gx$ = 16						; size = 4
_gy$ = 20						; size = 4
_dir$ = 24						; size = 4
_classNo$ = 28						; size = 4
_info$ = 32						; size = 4
?setItemCharObj@@YAXHHHHHHPAD@Z PROC			; setItemCharObj, COMDAT

; 2316 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 2317 : 	int no;
; 2318 : 	BOOL existFlag = FALSE;
; 2319 : 	CHAREXTRA *ext;
; 2320 : 	// î???????????
; 2321 : 	if( (no = searchCharObjId( id )) >= 0 )

  00006	8b 7d 08	 mov	 edi, DWORD PTR _id$[ebp]
  00009	57		 push	 edi
  0000a	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0000f	8b 5d 18	 mov	 ebx, DWORD PTR _dir$[ebp]
  00012	8b f0		 mov	 esi, eax
  00014	83 c4 04	 add	 esp, 4
  00017	85 f6		 test	 esi, esi
  00019	79 5d		 jns	 SHORT $LN3@setItemCha

; 2322 : 		existFlag = TRUE;
; 2323 : 	// ??î?????????î?
; 2324 : 	if( !existFlag ){
; 2325 : 		no = getCharObjBuf();

  0001b	e8 00 00 00 00	 call	 ?getCharObjBuf@@YAHXZ	; getCharObjBuf
  00020	8b f0		 mov	 esi, eax

; 2326 : 		if( no < 0 )

  00022	85 f6		 test	 esi, esi
  00024	0f 88 2c 01 00
	00		 js	 $LN1@setItemCha

; 2327 : 			return;	// ??????????î·??
; 2328 : 		charObj[no].ptAct = createCharAction( graNo, gx, gy, dir );

  0002a	53		 push	 ebx
  0002b	ff 75 14	 push	 DWORD PTR _gy$[ebp]
  0002e	ff 75 10	 push	 DWORD PTR _gx$[ebp]
  00031	ff 75 0c	 push	 DWORD PTR _graNo$[ebp]
  00034	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  00039	69 ce 0c 01 00
	00		 imul	 ecx, esi, 268
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	89 81 bc 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+188], eax

; 2329 : 		if( charObj[no].ptAct == NULL )

  00048	85 c0		 test	 eax, eax
  0004a	0f 84 06 01 00
	00		 je	 $LN1@setItemCha

; 2330 : 			// î???????î·???î ´???????????
; 2331 : 			return;
; 2332 : 		charObj[no].use = CHAROBJ_USE_VIEW;

  00050	ba 02 00 00 00	 mov	 edx, 2
  00055	66 89 91 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx], dx

; 2333 : 		ext = (CHAREXTRA *)charObj[no].ptAct->pYobi;
; 2334 : 		ext->charObjTblId = no;

  0005c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0005f	89 30		 mov	 DWORD PTR [eax], esi

; 2335 : 		charObj[no].type      = CHAROBJ_TYPE_ITEM;

  00061	66 89 91 02 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+2], dx

; 2336 : 		charObj[no].id        = id;

  00068	89 b9 04 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+4], edi

; 2337 : 		charObj[no].stockDir  = -1;

  0006e	c7 81 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+28], -1
$LN3@setItemCha:

; 2338 : 	}
; 2339 : 	charObj[no].graNo   = graNo;
; 2340 : 	charObj[no].classNo = classNo;

  00078	8b 45 1c	 mov	 eax, DWORD PTR _classNo$[ebp]

; 2341 : 	charObj[no].gx = gx;
; 2342 : 	charObj[no].gy = gy;
; 2343 : 	charObj[no].dir = dir;
; 2344 : 	if( strlen( info ) <= 60 )

  0007b	8b 55 20	 mov	 edx, DWORD PTR _info$[ebp]
  0007e	8b ca		 mov	 ecx, edx
  00080	8b 7d 0c	 mov	 edi, DWORD PTR _graNo$[ebp]
  00083	69 f6 0c 01 00
	00		 imul	 esi, esi, 268
  00089	89 86 30 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+48], eax
  0008f	8b 45 10	 mov	 eax, DWORD PTR _gx$[ebp]
  00092	89 86 0c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+12], eax
  00098	8b 45 14	 mov	 eax, DWORD PTR _gy$[ebp]
  0009b	89 9e 18 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+24], ebx
  000a1	8d 59 01	 lea	 ebx, DWORD PTR [ecx+1]
  000a4	89 be 08 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+8], edi
  000aa	89 86 10 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+16], eax
$LL20@setItemCha:
  000b0	8a 01		 mov	 al, BYTE PTR [ecx]
  000b2	41		 inc	 ecx
  000b3	84 c0		 test	 al, al
  000b5	75 f9		 jne	 SHORT $LL20@setItemCha
  000b7	2b cb		 sub	 ecx, ebx
  000b9	83 f9 3c	 cmp	 ecx, 60			; 0000003cH
  000bc	77 22		 ja	 SHORT $LN6@setItemCha

; 2345 : 		strcpy( charObj[no].info, info );

  000be	8b c6		 mov	 eax, esi
  000c0	8b ca		 mov	 ecx, edx
  000c2	2b c2		 sub	 eax, edx
  000c4	8d b8 6a 00 00
	00		 lea	 edi, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+106]
  000ca	66 0f 1f 44 00
	00		 npad	 6
$LL11@setItemCha:
  000d0	8a 01		 mov	 al, BYTE PTR [ecx]
  000d2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000d5	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  000d9	84 c0		 test	 al, al
  000db	75 f3		 jne	 SHORT $LL11@setItemCha
  000dd	8b 7d 0c	 mov	 edi, DWORD PTR _graNo$[ebp]
$LN6@setItemCha:

; 2346 : 	charObj[no].charType = ACT_ATR_TYPE_ITEM;
; 2347 : 	charObj[no].newFoundFlag = 0;	// î¡î?????????

  000e0	33 c0		 xor	 eax, eax
  000e2	c7 86 b4 00 00
	00 00 04 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+180], 1024 ; 00000400H
  000ec	66 89 86 b8 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+184], ax

; 2348 : 	// ???????????î±?î¼??
; 2349 : 	if( charObj[no].ptAct == NULL )

  000f3	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  000f9	85 c0		 test	 eax, eax
  000fb	74 59		 je	 SHORT $LN1@setItemCha

; 2350 : 		return;
; 2351 : 	charObj[no].ptAct->anim_chr_no = graNo;
; 2352 : 	// 1??????î????name?î¼??
; 2353 : 	if( strlen( info ) <= ITEM_NAME_LEN )

  000fd	8b ca		 mov	 ecx, edx
  000ff	89 b8 44 01 00
	00		 mov	 DWORD PTR [eax+324], edi
  00105	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL21@setItemCha:
  00108	8a 01		 mov	 al, BYTE PTR [ecx]
  0010a	41		 inc	 ecx
  0010b	84 c0		 test	 al, al
  0010d	75 f9		 jne	 SHORT $LL21@setItemCha
  0010f	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  00115	2b cf		 sub	 ecx, edi
  00117	83 f9 1c	 cmp	 ecx, 28			; 0000001cH
  0011a	77 14		 ja	 SHORT $LN8@setItemCha

; 2354 : 		strcpy( charObj[no].ptAct->name, info );

  0011c	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  0011f	90		 npad	 1
$LL12@setItemCha:
  00120	8a 02		 mov	 al, BYTE PTR [edx]
  00122	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00125	88 01		 mov	 BYTE PTR [ecx], al
  00127	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0012a	84 c0		 test	 al, al
  0012c	75 f2		 jne	 SHORT $LL12@setItemCha
  0012e	eb 07		 jmp	 SHORT $LN9@setItemCha
$LN8@setItemCha:

; 2355 : 	else
; 2356 : 		strcpy( charObj[no].ptAct->name, "???" );

  00130	c7 40 38 3f 3f
	3f 00		 mov	 DWORD PTR [eax+56], 4144959 ; 003f3f3fH
$LN9@setItemCha:

; 2357 : 	charObj[no].ptAct->atr |= ACT_ATR_TYPE_ITEM;

  00137	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]

; 2358 : 	charObj[no].ptAct->itemNameColor = classNo;

  0013d	8b 4d 1c	 mov	 ecx, DWORD PTR _classNo$[ebp]
  00140	81 88 a4 00 00
	00 00 04 00 00	 or	 DWORD PTR [eax+164], 1024 ; 00000400H
  0014a	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188]
  00150	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx
$LN1@setItemCha:

; 2359 : }

  00156	5f		 pop	 edi
  00157	5e		 pop	 esi
  00158	5b		 pop	 ebx
  00159	5d		 pop	 ebp
  0015a	c3		 ret	 0
?setItemCharObj@@YAXHHHHHHPAD@Z ENDP			; setItemCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setReturnPetObj@@YAHHHHHHPAD0HHHHH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
_graNo$ = 12						; size = 4
_gx$ = 16						; size = 4
_gy$ = 20						; size = 4
_dir$ = 24						; size = 4
_name$ = 28						; size = 4
_freeName$ = 32						; size = 4
_level$ = 36						; size = 4
_nameColor$ = 40					; size = 4
_walk$ = 44						; size = 4
_height$ = 48						; size = 4
_charType$ = 52						; size = 4
?setReturnPetObj@@YAHHHHHHPAD0HHHHH@Z PROC		; setReturnPetObj, COMDAT

; 2280 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 2281 : 	int no;
; 2282 : 	// î???????????
; 2283 : 	if( (no = searchCharObjId( id )) >= 0 )

  00004	8b 7d 08	 mov	 edi, DWORD PTR _id$[ebp]
  00007	57		 push	 edi
  00008	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0000d	83 c4 04	 add	 esp, 4
  00010	85 c0		 test	 eax, eax
  00012	0f 89 0f 01 00
	00		 jns	 $LN19@setReturnP

; 2284 : 		// ???î·??
; 2285 : 		return FALSE;
; 2286 : 	// ??î?????????î?
; 2287 : 	no = getCharObjBuf();

  00018	e8 00 00 00 00	 call	 ?getCharObjBuf@@YAHXZ	; getCharObjBuf

; 2288 : 	if( no < 0 )

  0001d	85 c0		 test	 eax, eax
  0001f	0f 88 02 01 00
	00		 js	 $LN19@setReturnP

; 2290 : 	charObj[no].ptAct = NULL;

  00025	56		 push	 esi

; 2291 : 	charObj[no].use = CHAROBJ_USE_VIEW;
; 2292 : 	charObj[no].type      = getAtrCharObjType( charType );

  00026	ff 75 34	 push	 DWORD PTR _charType$[ebp]
  00029	69 f0 0c 01 00
	00		 imul	 esi, eax, 268
  0002f	b8 02 00 00 00	 mov	 eax, 2
  00034	c7 86 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+188], 0
  0003e	66 89 86 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi], ax
  00045	e8 00 00 00 00	 call	 ?getAtrCharObjType@@YAHH@Z ; getAtrCharObjType
  0004a	66 89 86 02 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+2], ax
  00051	83 c4 04	 add	 esp, 4

; 2293 : 	charObj[no].id        = id;
; 2294 : 	charObj[no].graNo     = graNo;
; 2295 : 	charObj[no].nameColor = nameColor;
; 2296 : 	charObj[no].level     = level;
; 2297 : 	charObj[no].gx = gx;
; 2298 : 	charObj[no].gy = gy;
; 2299 : 	charObj[no].dir = dir;
; 2300 : 	if( walk != 0 )

  00054	83 7d 2c 00	 cmp	 DWORD PTR _walk$[ebp], 0
  00058	8b 45 0c	 mov	 eax, DWORD PTR _graNo$[ebp]
  0005b	89 86 08 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+8], eax
  00061	66 8b 45 28	 mov	 ax, WORD PTR _nameColor$[ebp]
  00065	66 89 86 28 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+40], ax
  0006c	8b 45 24	 mov	 eax, DWORD PTR _level$[ebp]
  0006f	89 86 14 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+20], eax
  00075	8b 45 10	 mov	 eax, DWORD PTR _gx$[ebp]
  00078	89 86 0c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+12], eax
  0007e	8b 45 14	 mov	 eax, DWORD PTR _gy$[ebp]
  00081	89 86 10 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+16], eax
  00087	8b 45 18	 mov	 eax, DWORD PTR _dir$[ebp]
  0008a	89 be 04 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+4], edi
  00090	89 86 18 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+24], eax
  00096	74 07		 je	 SHORT $LN18@setReturnP

; 2301 : 		charObj[no].status |= CHR_STATUS_W;

  00098	83 8e 2c 00 00
	00 40		 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+44], 64 ; 00000040H
$LN18@setReturnP:

; 2302 : 	if( height != 0 )

  0009f	83 7d 30 00	 cmp	 DWORD PTR _height$[ebp], 0
  000a3	74 0a		 je	 SHORT $LN5@setReturnP

; 2303 : 		charObj[no].status |= CHR_STATUS_H;

  000a5	81 8e 2c 00 00
	00 80 00 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+44], 128 ; 00000080H
$LN5@setReturnP:

; 2304 : 	if( strlen( name ) <= CHAR_NAME_LEN )

  000af	8b 4d 1c	 mov	 ecx, DWORD PTR _name$[ebp]
  000b2	8b d1		 mov	 edx, ecx
  000b4	8d 7a 01	 lea	 edi, DWORD PTR [edx+1]
$LL20@setReturnP:
  000b7	8a 02		 mov	 al, BYTE PTR [edx]
  000b9	42		 inc	 edx
  000ba	84 c0		 test	 al, al
  000bc	75 f9		 jne	 SHORT $LL20@setReturnP
  000be	2b d7		 sub	 edx, edi
  000c0	83 fa 10	 cmp	 edx, 16			; 00000010H
  000c3	77 18		 ja	 SHORT $LN6@setReturnP

; 2305 : 		strcpy( charObj[no].name, name );

  000c5	8b c6		 mov	 eax, esi
  000c7	2b c1		 sub	 eax, ecx
  000c9	8d 90 38 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+56]
  000cf	90		 npad	 1
$LL9@setReturnP:
  000d0	8a 01		 mov	 al, BYTE PTR [ecx]
  000d2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000d5	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  000d9	84 c0		 test	 al, al
  000db	75 f3		 jne	 SHORT $LL9@setReturnP
$LN6@setReturnP:

; 2306 : 	if( strlen( freeName ) <= PET_FREENAME_LEN )

  000dd	8b 4d 20	 mov	 ecx, DWORD PTR _freeName$[ebp]
  000e0	8b d1		 mov	 edx, ecx
  000e2	8d 7a 01	 lea	 edi, DWORD PTR [edx+1]
$LL21@setReturnP:
  000e5	8a 02		 mov	 al, BYTE PTR [edx]
  000e7	42		 inc	 edx
  000e8	84 c0		 test	 al, al
  000ea	75 f9		 jne	 SHORT $LL21@setReturnP
  000ec	2b d7		 sub	 edx, edi
  000ee	83 fa 20	 cmp	 edx, 32			; 00000020H
  000f1	77 1a		 ja	 SHORT $LN7@setReturnP

; 2307 : 		strcpy( charObj[no].freeName, freeName );

  000f3	8b c6		 mov	 eax, esi
  000f5	2b c1		 sub	 eax, ecx
  000f7	8d 90 49 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+73]
  000fd	0f 1f 00	 npad	 3
$LL10@setReturnP:
  00100	8a 01		 mov	 al, BYTE PTR [ecx]
  00102	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00105	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00109	84 c0		 test	 al, al
  0010b	75 f3		 jne	 SHORT $LL10@setReturnP
$LN7@setReturnP:

; 2308 : 	charObj[no].charType = getAtrCharType( charType );

  0010d	ff 75 34	 push	 DWORD PTR _charType$[ebp]
  00110	e8 00 00 00 00	 call	 ?getAtrCharType@@YAHH@Z	; getAtrCharType
  00115	83 c4 04	 add	 esp, 4
  00118	89 86 b4 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[esi+180], eax

; 2309 : 	return TRUE;

  0011e	b8 01 00 00 00	 mov	 eax, 1
  00123	5e		 pop	 esi
  00124	5f		 pop	 edi

; 2310 : }

  00125	5d		 pop	 ebp
  00126	c3		 ret	 0
$LN19@setReturnP:

; 2289 : 		return FALSE;	// ??????????î·??

  00127	33 c0		 xor	 eax, eax
  00129	5f		 pop	 edi

; 2310 : }

  0012a	5d		 pop	 ebp
  0012b	c3		 ret	 0
?setReturnPetObj@@YAHHHHHHPAD0HHHHH@Z ENDP		; setReturnPetObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setNpcCharObj@@YAXHHHHHPAD00H0HHHHHHHH@Z
_TEXT	SEGMENT
_no$2$ = -16						; size = 4
tv933 = -16						; size = 4
tv930 = -16						; size = 4
_ê«êó??$1$ = -12					; size = 4
_ê«êóÎÃ?$1$ = -8					; size = 4
_angelMode$1$ = -4					; size = 4
_id$ = 8						; size = 4
_graNo$ = 12						; size = 4
_gx$ = 16						; size = 4
_gy$ = 20						; size = 4
_dir$ = 24						; size = 4
_fmname$ = 28						; size = 4
_name$ = 32						; size = 4
_freeName$ = 36						; size = 4
_level$ = 40						; size = 4
_petname$ = 44						; size = 4
_petlevel$ = 48						; size = 4
_nameColor$ = 52					; size = 4
_walk$ = 56						; size = 4
_height$ = 60						; size = 4
_charType$ = 64						; size = 4
_profession_class$ = 68					; size = 4
_picture$ = 72						; size = 4
_noticeNo$ = 76						; size = 4
?setNpcCharObj@@YAXHHHHHPAD00H0HHHHHHHH@Z PROC		; setNpcCharObj, COMDAT

; 2133 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	8b 75 24	 mov	 esi, DWORD PTR _freeName$[ebp]
  0000b	57		 push	 edi

; 2134 : 	int no;
; 2135 : 	BOOL existFlag = FALSE;
; 2136 : 	CHAREXTRA *ext;
; 2137 : #ifdef _ANGEL_SUMMON
; 2138 : 	unsigned angelMode =0;
; 2139 : #endif
; 2140 : 
; 2141 : 	int åæåç¯ = 0;
; 2142 : 	int åæç§°å· = 0;
; 2143 : 
; 2144 : 
; 2145 : 	//TODO è¦ä¿®åç¯æ¶å¤±
; 2146 : 	if( (no = searchCharObjId( id )) >= 0 ) {

  0000c	8b 7d 08	 mov	 edi, DWORD PTR _id$[ebp]
  0000f	57		 push	 edi
  00010	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _angelMode$1$[ebp], 0
  00017	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _ê«êóÎÃ?$1$[ebp], 0
  0001e	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _ê«êó??$1$[ebp], 0
  00025	e8 00 00 00 00	 call	 ?searchCharObjId@@YAHH@Z ; searchCharObjId
  0002a	83 c4 04	 add	 esp, 4
  0002d	85 c0		 test	 eax, eax
  0002f	78 3a		 js	 SHORT $__out1$84

; 2147 : #ifdef _ANGEL_SUMMON
; 2148 : 		angelMode = charObj[no].status & CHR_STATUS_ANGEL;

  00031	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00037	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44]

; 2149 : #endif
; 2150 : 
; 2151 : 		////JL fix ä¸å idçåå­
; 2152 : 		//existFlag = true;
; 2153 : 		//goto __out1;
; 2154 : 		if (charObj[no].ptAct != NULL)

  0003d	8b 80 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+188]
  00043	81 e1 00 00 01
	00		 and	 ecx, 65536		; 00010000H
  00049	89 4d fc	 mov	 DWORD PTR _angelMode$1$[ebp], ecx
  0004c	85 c0		 test	 eax, eax
  0004e	74 12		 je	 SHORT $LN3@setNpcChar

; 2155 : 		{
; 2156 : 			åæåç¯ = charObj[no].ptAct->åç¯å¾æ¡£ç¼å·;

  00050	8b 88 c8 01 00
	00		 mov	 ecx, DWORD PTR [eax+456]

; 2157 : 			åæç§°å· = charObj[no].ptAct->ç§°å·å¾æ¡£ç¼å·;

  00056	8b 80 cc 01 00
	00		 mov	 eax, DWORD PTR [eax+460]
  0005c	89 4d f8	 mov	 DWORD PTR _ê«êóÎÃ?$1$[ebp], ecx
  0005f	89 45 f4	 mov	 DWORD PTR _ê«êó??$1$[ebp], eax
$LN3@setNpcChar:

; 2158 : 		}
; 2159 : 
; 2160 : 		delCharObj( id);

  00062	57		 push	 edi
  00063	e8 00 00 00 00	 call	 ?delCharObj@@YAXH@Z	; delCharObj
  00068	83 c4 04	 add	 esp, 4
$__out1$84:

; 2161 : 	}
; 2162 : __out1:;
; 2163 : 
; 2164 : 	if( !existFlag ){
; 2165 : 		no = getCharObjBuf();

  0006b	e8 00 00 00 00	 call	 ?getCharObjBuf@@YAHXZ	; getCharObjBuf
  00070	8b d8		 mov	 ebx, eax
  00072	89 5d f0	 mov	 DWORD PTR _no$2$[ebp], ebx

; 2166 : 		if( no < 0 )

  00075	85 db		 test	 ebx, ebx
  00077	0f 88 7e 03 00
	00		 js	 $LN1@setNpcChar

; 2167 : 			return;
; 2168 : 		charObj[no].ptAct = createCharAction( graNo, gx, gy, dir );

  0007d	ff 75 18	 push	 DWORD PTR _dir$[ebp]
  00080	8b 4d 0c	 mov	 ecx, DWORD PTR _graNo$[ebp]
  00083	ff 75 14	 push	 DWORD PTR _gy$[ebp]
  00086	ff 75 10	 push	 DWORD PTR _gx$[ebp]
  00089	51		 push	 ecx
  0008a	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  0008f	69 db 0c 01 00
	00		 imul	 ebx, ebx, 268
  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	89 83 bc 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188], eax

; 2169 : 		if( charObj[no].ptAct == NULL )

  0009e	85 c0		 test	 eax, eax
  000a0	0f 84 55 03 00
	00		 je	 $LN1@setNpcChar

; 2170 : 			return;
; 2171 : 
; 2172 : 		charObj[no].use = CHAROBJ_USE_VIEW;
; 2173 : 		ext = (CHAREXTRA *)charObj[no].ptAct->pYobi;
; 2174 : 		ext->charObjTblId = no;
; 2175 : 		charObj[no].type      = getAtrCharObjType( charType );

  000a6	ff 75 40	 push	 DWORD PTR _charType$[ebp]
  000a9	b9 02 00 00 00	 mov	 ecx, 2
  000ae	66 89 8b 00 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx], cx
  000b5	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000b8	8b 4d f0	 mov	 ecx, DWORD PTR _no$2$[ebp]
  000bb	89 08		 mov	 DWORD PTR [eax], ecx
  000bd	e8 00 00 00 00	 call	 ?getAtrCharObjType@@YAHH@Z ; getAtrCharObjType
  000c2	66 89 83 02 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+2], ax
  000c9	83 c4 04	 add	 esp, 4

; 2176 : 		charObj[no].id        = id;
; 2177 : 		charObj[no].stockDir  = -1;
; 2178 : 	}
; 2179 : 	charObj[no].graNo     = graNo;
; 2180 : 	charObj[no].nameColor = nameColor;
; 2181 : 	charObj[no].level     = level;
; 2182 : 	charObj[no].gx = gx;
; 2183 : 	charObj[no].gy = gy;
; 2184 : 	charObj[no].dir = dir;
; 2185 : 	if( walk != 0 )

  000cc	83 7d 38 00	 cmp	 DWORD PTR _walk$[ebp], 0
  000d0	8b 45 0c	 mov	 eax, DWORD PTR _graNo$[ebp]
  000d3	89 bb 04 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+4], edi
  000d9	c7 83 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+28], -1
  000e3	89 83 08 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+8], eax
  000e9	8b 45 34	 mov	 eax, DWORD PTR _nameColor$[ebp]
  000ec	66 89 83 28 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+40], ax
  000f3	8b 45 28	 mov	 eax, DWORD PTR _level$[ebp]
  000f6	89 83 14 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+20], eax
  000fc	8b 45 10	 mov	 eax, DWORD PTR _gx$[ebp]
  000ff	89 83 0c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+12], eax
  00105	8b 45 14	 mov	 eax, DWORD PTR _gy$[ebp]
  00108	89 83 10 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+16], eax
  0010e	8b 45 18	 mov	 eax, DWORD PTR _dir$[ebp]
  00111	89 83 18 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+24], eax
  00117	74 07		 je	 SHORT $LN71@setNpcChar

; 2186 : 		charObj[no].status |= CHR_STATUS_W;

  00119	83 8b 2c 00 00
	00 40		 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+44], 64 ; 00000040H
$LN71@setNpcChar:

; 2187 : 	if( height != 0 )

  00120	83 7d 3c 00	 cmp	 DWORD PTR _height$[ebp], 0
  00124	74 0a		 je	 SHORT $LN72@setNpcChar

; 2188 : 		charObj[no].status |= CHR_STATUS_H;

  00126	81 8b 2c 00 00
	00 80 00 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+44], 128 ; 00000080H
$LN72@setNpcChar:

; 2189 : 	if( strlen( name ) <= CHAR_NAME_LEN )

  00130	8b 55 20	 mov	 edx, DWORD PTR _name$[ebp]
  00133	8b ca		 mov	 ecx, edx
  00135	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL74@setNpcChar:
  00138	8a 01		 mov	 al, BYTE PTR [ecx]
  0013a	41		 inc	 ecx
  0013b	84 c0		 test	 al, al
  0013d	75 f9		 jne	 SHORT $LL74@setNpcChar
  0013f	2b cf		 sub	 ecx, edi
  00141	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00144	77 19		 ja	 SHORT $LN9@setNpcChar

; 2190 : 		strcpy( charObj[no].name, name );		

  00146	8b c3		 mov	 eax, ebx
  00148	8b ca		 mov	 ecx, edx
  0014a	2b c2		 sub	 eax, edx
  0014c	8d 90 38 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+56]
$LL29@setNpcChar:
  00152	8a 01		 mov	 al, BYTE PTR [ecx]
  00154	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00157	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  0015b	84 c0		 test	 al, al
  0015d	75 f3		 jne	 SHORT $LL29@setNpcChar
$LN9@setNpcChar:

; 2191 : 	// shan add code
; 2192 :     if( strlen( fmname ) <= CHAR_FMNAME_LEN )

  0015f	8b 55 1c	 mov	 edx, DWORD PTR _fmname$[ebp]
  00162	8b ca		 mov	 ecx, edx
  00164	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL75@setNpcChar:
  00167	8a 01		 mov	 al, BYTE PTR [ecx]
  00169	41		 inc	 ecx
  0016a	84 c0		 test	 al, al
  0016c	75 f9		 jne	 SHORT $LL75@setNpcChar
  0016e	2b cf		 sub	 ecx, edi
  00170	83 f9 21	 cmp	 ecx, 33			; 00000021H
  00173	77 19		 ja	 SHORT $LN10@setNpcChar

; 2193 : 	    strcpy( charObj[no].fmname, fmname );	

  00175	8b c3		 mov	 eax, ebx
  00177	8b ca		 mov	 ecx, edx
  00179	2b c2		 sub	 eax, edx
  0017b	8d 90 c4 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+196]
$LL30@setNpcChar:
  00181	8a 01		 mov	 al, BYTE PTR [ecx]
  00183	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00186	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  0018a	84 c0		 test	 al, al
  0018c	75 f3		 jne	 SHORT $LL30@setNpcChar
$LN10@setNpcChar:

; 2194 : 	if( charType != CHAR_TYPEPET ){

  0018e	8b ce		 mov	 ecx, esi
  00190	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL76@setNpcChar:
  00193	8a 01		 mov	 al, BYTE PTR [ecx]
  00195	41		 inc	 ecx
  00196	84 c0		 test	 al, al
  00198	75 f9		 jne	 SHORT $LL76@setNpcChar
  0019a	2b ca		 sub	 ecx, edx

; 2195 : 		if( strlen( freeName ) <= CHAR_FREENAME_LEN )

  0019c	83 f9 20	 cmp	 ecx, 32			; 00000020H
  0019f	77 2e		 ja	 SHORT $LN14@setNpcChar

; 2194 : 	if( charType != CHAR_TYPEPET ){

  001a1	8b c3		 mov	 eax, ebx
  001a3	8b ce		 mov	 ecx, esi
  001a5	2b c6		 sub	 eax, esi
  001a7	83 7d 40 03	 cmp	 DWORD PTR _charType$[ebp], 3
  001ab	8d 90 49 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+73]
  001b1	74 0f		 je	 SHORT $LL32@setNpcChar
$LL31@setNpcChar:

; 2196 : 			strcpy( charObj[no].freeName, freeName );		

  001b3	8a 01		 mov	 al, BYTE PTR [ecx]
  001b5	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001b8	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  001bc	84 c0		 test	 al, al
  001be	75 f3		 jne	 SHORT $LL31@setNpcChar

; 2197 : 	}else{

  001c0	eb 0d		 jmp	 SHORT $LN14@setNpcChar
$LL32@setNpcChar:

; 2198 : 		if( strlen( freeName ) <= PET_FREENAME_LEN )
; 2199 : 			strcpy( charObj[no].freeName, freeName );        		    

  001c2	8a 01		 mov	 al, BYTE PTR [ecx]
  001c4	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001c7	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  001cb	84 c0		 test	 al, al
  001cd	75 f3		 jne	 SHORT $LL32@setNpcChar
$LN14@setNpcChar:

; 2200 : 	}
; 2201 : 	// Robin 0730
; 2202 :     if( strlen( petname ) <= CHAR_FREENAME_LEN )

  001cf	8b 7d 2c	 mov	 edi, DWORD PTR _petname$[ebp]
  001d2	8b cf		 mov	 ecx, edi
  001d4	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL77@setNpcChar:
  001d7	8a 01		 mov	 al, BYTE PTR [ecx]
  001d9	41		 inc	 ecx
  001da	84 c0		 test	 al, al
  001dc	75 f9		 jne	 SHORT $LL77@setNpcChar
  001de	2b ca		 sub	 ecx, edx
  001e0	83 f9 20	 cmp	 ecx, 32			; 00000020H
  001e3	77 19		 ja	 SHORT $LN15@setNpcChar

; 2203 : 	    strcpy( charObj[no].petName, petname );	

  001e5	8b c3		 mov	 eax, ebx
  001e7	8b cf		 mov	 ecx, edi
  001e9	2b c7		 sub	 eax, edi
  001eb	8d 90 e6 00 00
	00		 lea	 edx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+230]
$LL33@setNpcChar:
  001f1	8a 01		 mov	 al, BYTE PTR [ecx]
  001f3	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  001f6	88 44 11 ff	 mov	 BYTE PTR [ecx+edx-1], al
  001fa	84 c0		 test	 al, al
  001fc	75 f3		 jne	 SHORT $LL33@setNpcChar
$LN15@setNpcChar:

; 2204 : 	charObj[no].petLevel = petlevel;

  001fe	8b 45 30	 mov	 eax, DWORD PTR _petlevel$[ebp]

; 2205 : 
; 2206 : 	charObj[no].charType = getAtrCharType( charType );

  00201	ff 75 40	 push	 DWORD PTR _charType$[ebp]
  00204	89 83 08 01 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+264], eax
  0020a	e8 00 00 00 00	 call	 ?getAtrCharType@@YAHH@Z	; getAtrCharType
  0020f	89 83 b4 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+180], eax
  00215	83 c4 04	 add	 esp, 4

; 2207 : 	charObj[no].newFoundFlag = 1;

  00218	b8 01 00 00 00	 mov	 eax, 1
  0021d	66 89 83 b8 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+184], ax

; 2208 : 
; 2209 : #ifdef _ANGEL_SUMMON
; 2210 : 	charObj[no].status |= angelMode;

  00224	8b 45 fc	 mov	 eax, DWORD PTR _angelMode$1$[ebp]
  00227	09 83 2c 00 00
	00		 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+44], eax

; 2211 : #endif
; 2212 : 
; 2213 : 	if( charObj[no].ptAct == NULL )

  0022d	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  00233	85 c0		 test	 eax, eax
  00235	0f 84 c0 01 00
	00		 je	 $LN1@setNpcChar

; 2214 : 		return;
; 2215 : //#define ææåç¯
; 2216 : //#define äººç©åç¯   
; 2217 : 	if (åæåç¯){

  0023b	8b 4d f8	 mov	 ecx, DWORD PTR _ê«êóÎÃ?$1$[ebp]
  0023e	85 c9		 test	 ecx, ecx
  00240	74 10		 je	 SHORT $LN17@setNpcChar

; 2218 : 		setCharmManor(charObj[no].ptAct, åæåç¯);

  00242	51		 push	 ecx
  00243	50		 push	 eax
  00244	e8 00 00 00 00	 call	 ?setCharmManor@@YAXPAUaction@@H@Z ; setCharmManor
  00249	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  0024f	83 c4 08	 add	 esp, 8
$LN17@setNpcChar:

; 2219 : 	}
; 2220 : 	if (åæç§°å·){

  00252	8b 4d f4	 mov	 ecx, DWORD PTR _ê«êó??$1$[ebp]
  00255	85 c9		 test	 ecx, ecx
  00257	74 10		 je	 SHORT $LN18@setNpcChar

; 2221 : 		setCharmTitle(charObj[no].ptAct, åæç§°å·);

  00259	51		 push	 ecx
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?setCharmTitle@@YAXPAUaction@@H@Z ; setCharmTitle
  00260	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  00266	83 c4 08	 add	 esp, 8
$LN18@setNpcChar:

; 2222 : 	}
; 2223 : 
; 2224 : 
; 2225 : 	charObj[no].ptAct->anim_chr_no = graNo;

  00269	8b 4d 0c	 mov	 ecx, DWORD PTR _graNo$[ebp]

; 2226 : 	charObj[no].ptAct->level = level;
; 2227 : 	charObj[no].ptAct->atr |= charObj[no].charType;
; 2228 : 	if( strlen( name ) <= CHAR_NAME_LEN )

  0026c	8b 55 20	 mov	 edx, DWORD PTR _name$[ebp]
  0026f	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx
  00275	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  0027b	8b 4d 28	 mov	 ecx, DWORD PTR _level$[ebp]
  0027e	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx
  00284	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  0028a	8b 83 b4 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+180]
  00290	09 81 a4 00 00
	00		 or	 DWORD PTR [ecx+164], eax
  00296	8b ca		 mov	 ecx, edx
  00298	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0029b	89 45 f0	 mov	 DWORD PTR tv930[ebp], eax
  0029e	66 90		 npad	 2
$LL78@setNpcChar:
  002a0	8a 01		 mov	 al, BYTE PTR [ecx]
  002a2	41		 inc	 ecx
  002a3	84 c0		 test	 al, al
  002a5	75 f9		 jne	 SHORT $LL78@setNpcChar
  002a7	2b 4d f0	 sub	 ecx, DWORD PTR tv930[ebp]
  002aa	83 f9 10	 cmp	 ecx, 16			; 00000010H
  002ad	77 17		 ja	 SHORT $LN19@setNpcChar

; 2229 : 		strcpy( charObj[no].ptAct->name, name );

  002af	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  002b5	83 c1 38	 add	 ecx, 56			; 00000038H
$LL34@setNpcChar:
  002b8	8a 02		 mov	 al, BYTE PTR [edx]
  002ba	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  002bd	88 01		 mov	 BYTE PTR [ecx], al
  002bf	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002c2	84 c0		 test	 al, al
  002c4	75 f2		 jne	 SHORT $LL34@setNpcChar
$LN19@setNpcChar:

; 2230 : 	// shan add
; 2231 : 	if( charType == CHAR_TYPEPLAYER){

  002c6	83 7d 40 01	 cmp	 DWORD PTR _charType$[ebp], 1
  002ca	75 44		 jne	 SHORT $LN20@setNpcChar

; 2232 : 		if( strlen( fmname ) <= CHAR_FMNAME_LEN )

  002cc	8b 55 1c	 mov	 edx, DWORD PTR _fmname$[ebp]
  002cf	8b ca		 mov	 ecx, edx
  002d1	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  002d4	89 45 f0	 mov	 DWORD PTR tv933[ebp], eax
$LL79@setNpcChar:
  002d7	8a 01		 mov	 al, BYTE PTR [ecx]
  002d9	41		 inc	 ecx
  002da	84 c0		 test	 al, al
  002dc	75 f9		 jne	 SHORT $LL79@setNpcChar
  002de	2b 4d f0	 sub	 ecx, DWORD PTR tv933[ebp]
  002e1	83 f9 21	 cmp	 ecx, 33			; 00000021H
  002e4	77 1a		 ja	 SHORT $LN22@setNpcChar

; 2233 : 			strcpy( charObj[no].ptAct->fmname, fmname );

  002e6	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  002ec	81 c1 70 01 00
	00		 add	 ecx, 368		; 00000170H
$LL35@setNpcChar:
  002f2	8a 02		 mov	 al, BYTE PTR [edx]
  002f4	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  002f7	88 01		 mov	 BYTE PTR [ecx], al
  002f9	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  002fc	84 c0		 test	 al, al
  002fe	75 f2		 jne	 SHORT $LL35@setNpcChar
$LN22@setNpcChar:

; 2234 : 	}

  00300	8b ce		 mov	 ecx, esi
  00302	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL80@setNpcChar:
  00305	8a 01		 mov	 al, BYTE PTR [ecx]
  00307	41		 inc	 ecx
  00308	84 c0		 test	 al, al
  0030a	75 f9		 jne	 SHORT $LL80@setNpcChar
  0030c	2b ca		 sub	 ecx, edx
  0030e	eb 26		 jmp	 SHORT $LN73@setNpcChar
$LN20@setNpcChar:

; 2235 : 	else{
; 2236 : 		strcpy( charObj[no].ptAct->fmname, " " );

  00310	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  00316	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  0031b	66 89 88 70 01
	00 00		 mov	 WORD PTR [eax+368], cx

; 2237 : 	}
; 2238 : 
; 2239 : 	if( charType != CHAR_TYPEPET ){

  00322	8b ce		 mov	 ecx, esi
  00324	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL81@setNpcChar:
  00327	8a 01		 mov	 al, BYTE PTR [ecx]
  00329	41		 inc	 ecx
  0032a	84 c0		 test	 al, al
  0032c	75 f9		 jne	 SHORT $LL81@setNpcChar
  0032e	2b ca		 sub	 ecx, edx
  00330	83 7d 40 03	 cmp	 DWORD PTR _charType$[ebp], 3
  00334	74 1e		 je	 SHORT $LN23@setNpcChar
$LN73@setNpcChar:

; 2240 : 		if( strlen( freeName ) <= CHAR_FREENAME_LEN )

  00336	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00339	77 35		 ja	 SHORT $LN26@setNpcChar

; 2241 : 			strcpy( charObj[no].ptAct->freeName, freeName );

  0033b	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  00341	83 c1 55	 add	 ecx, 85			; 00000055H
$LL36@setNpcChar:
  00344	8a 06		 mov	 al, BYTE PTR [esi]
  00346	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  00349	88 01		 mov	 BYTE PTR [ecx], al
  0034b	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0034e	84 c0		 test	 al, al
  00350	75 f2		 jne	 SHORT $LL36@setNpcChar

; 2242 : 	}else{

  00352	eb 1c		 jmp	 SHORT $LN26@setNpcChar
$LN23@setNpcChar:

; 2243 : 		if( strlen( freeName ) <= PET_FREENAME_LEN )

  00354	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00357	77 17		 ja	 SHORT $LN26@setNpcChar

; 2244 : 			strcpy( charObj[no].ptAct->freeName, freeName );

  00359	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  0035f	83 c1 55	 add	 ecx, 85			; 00000055H
$LL37@setNpcChar:
  00362	8a 06		 mov	 al, BYTE PTR [esi]
  00364	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  00367	88 01		 mov	 BYTE PTR [ecx], al
  00369	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0036c	84 c0		 test	 al, al
  0036e	75 f2		 jne	 SHORT $LL37@setNpcChar
$LN26@setNpcChar:

; 2245 : 	}
; 2246 : 	// Robin 0730
; 2247 : 	if( strlen( petname ) <= CHAR_FREENAME_LEN )

  00370	8b cf		 mov	 ecx, edi
  00372	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL82@setNpcChar:
  00375	8a 01		 mov	 al, BYTE PTR [ecx]
  00377	41		 inc	 ecx
  00378	84 c0		 test	 al, al
  0037a	75 f9		 jne	 SHORT $LL82@setNpcChar
  0037c	2b ca		 sub	 ecx, edx
  0037e	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00381	77 1b		 ja	 SHORT $LN27@setNpcChar

; 2248 : 		strcpy( charObj[no].ptAct->petName, petname );

  00383	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  00389	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  0038f	90		 npad	 1
$LL38@setNpcChar:
  00390	8a 07		 mov	 al, BYTE PTR [edi]
  00392	8d 7f 01	 lea	 edi, DWORD PTR [edi+1]
  00395	88 01		 mov	 BYTE PTR [ecx], al
  00397	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0039a	84 c0		 test	 al, al
  0039c	75 f2		 jne	 SHORT $LL38@setNpcChar
$LN27@setNpcChar:

; 2249 : 	charObj[no].ptAct->petLevel = petlevel;

  0039e	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003a4	8b 4d 30	 mov	 ecx, DWORD PTR _petlevel$[ebp]
  003a7	89 88 ac 01 00
	00		 mov	 DWORD PTR [eax+428], ecx

; 2250 : 
; 2251 : 	charObj[no].ptAct->itemNameColor = nameColor;

  003ad	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003b3	8b 4d 34	 mov	 ecx, DWORD PTR _nameColor$[ebp]
  003b6	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx

; 2252 : 
; 2253 : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸
; 2254 : 	charObj[no].ptAct->profession_class = profession_class;

  003bc	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003c2	8b 45 44	 mov	 eax, DWORD PTR _profession_class$[ebp]
  003c5	89 81 e0 01 00
	00		 mov	 DWORD PTR [ecx+480], eax

; 2255 : #endif
; 2256 : #ifdef _NPC_PICTURE
; 2257 : 	charObj[no].ptAct->picture = picture;

  003cb	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003d1	8b 4d 48	 mov	 ecx, DWORD PTR _picture$[ebp]
  003d4	89 88 28 02 00
	00		 mov	 DWORD PTR [eax+552], ecx

; 2258 : 	charObj[no].ptAct->picturetemp = ((((picture)&0x00ff0000)>>16)&0x000000ff);//(picture&0x0000ffff);

  003da	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003e0	c1 f9 10	 sar	 ecx, 16			; 00000010H
  003e3	0f b6 c9	 movzx	 ecx, cl
  003e6	89 88 2c 02 00
	00		 mov	 DWORD PTR [eax+556], ecx

; 2259 : 	//charObj[no].ptAct->anim_no = ((((picture)&0x0000ff00)>>8 )&0x000000ff);
; 2260 : #endif
; 2261 : #ifdef _GM_IDENTIFY		// Rog ADD GMè¯å«
; 2262 :     if( strlen( gm_name ) <= GM_NAME_LEN )
; 2263 : 	    strcpy( charObj[no].ptAct->gm_name, gm_name );	
; 2264 : #endif
; 2265 : #ifdef _NB_æå­ç§°å·
; 2266 : 	if( strlen( newname ) <= CHAR_NAME_LEN )
; 2267 : 	    strcpy( charObj[no].ptAct->nb_name, newname );
; 2268 : 
; 2269 : 	charObj[no].ptAct->nb_namecolor = newnamecolor;
; 2270 : #endif
; 2271 : #ifdef _NB_ä»»å¡æå¼
; 2272 : 	charObj[no].ptAct->noticeNo = noticeNo;

  003ec	8b 8b bc 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ebx+188]
  003f2	8b 45 4c	 mov	 eax, DWORD PTR _noticeNo$[ebp]
  003f5	89 81 d0 01 00
	00		 mov	 DWORD PTR [ecx+464], eax
$LN1@setNpcChar:

; 2273 : #endif
; 2274 : }

  003fb	5f		 pop	 edi
  003fc	5e		 pop	 esi
  003fd	5b		 pop	 ebx
  003fe	8b e5		 mov	 esp, ebp
  00400	5d		 pop	 ebp
  00401	c3		 ret	 0
?setNpcCharObj@@YAXHHHHHPAD00H0HHHHHHHH@Z ENDP		; setNpcCharObj
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?checkCharObjPointNotStatus@@YAHHHFI@Z
_TEXT	SEGMENT
_gx$ = 8						; size = 4
_gy$ = 12						; size = 4
_type$ = 16						; size = 2
_status$ = 20						; size = 4
?checkCharObjPointNotStatus@@YAHHHFI@Z PROC		; checkCharObjPointNotStatus, COMDAT

; 2106 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 2107 : 	int i;
; 2108 : 	int no = -1;
; 2109 : 	for( i = 0; i < tailCharObj; i++ ){

  00005	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0000b	33 d2		 xor	 edx, edx
  0000d	57		 push	 edi
  0000e	85 f6		 test	 esi, esi
  00010	7e 58		 jle	 SHORT $LN14@checkCharO
  00012	66 8b 5d 10	 mov	 bx, WORD PTR _type$[ebp]
  00016	b8 bc 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
  0001b	0f 1f 44 00 00	 npad	 5
$LL4@checkCharO:

; 2110 : 		if( charObj[i].use != CHAROBJ_USE_FREE && charObj[i].ptAct != NULL ){

  00020	66 83 b8 44 ff
	ff ff 00	 cmp	 WORD PTR [eax-188], 0
  00028	74 36		 je	 SHORT $LN2@checkCharO
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 30		 je	 SHORT $LN2@checkCharO

; 2111 : 			if( charObj[i].ptAct->gx == gx && charObj[i].ptAct->gy == gy && (charObj[i].type & type) != 0 ){

  00030	8b 7d 08	 mov	 edi, DWORD PTR _gx$[ebp]
  00033	39 b9 b4 00 00
	00		 cmp	 DWORD PTR [ecx+180], edi
  00039	8b 7d 14	 mov	 edi, DWORD PTR _status$[ebp]
  0003c	75 22		 jne	 SHORT $LN2@checkCharO
  0003e	8b 75 0c	 mov	 esi, DWORD PTR _gy$[ebp]
  00041	39 b1 b8 00 00
	00		 cmp	 DWORD PTR [ecx+184], esi
  00047	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0004d	75 11		 jne	 SHORT $LN2@checkCharO
  0004f	66 85 98 46 ff
	ff ff		 test	 WORD PTR [eax-186], bx
  00056	74 08		 je	 SHORT $LN2@checkCharO

; 2112 : 				if( (charObj[i].status & status ) == 0 )

  00058	85 b8 70 ff ff
	ff		 test	 DWORD PTR [eax-144], edi
  0005e	74 11		 je	 SHORT $LN10@checkCharO
$LN2@checkCharO:

; 2107 : 	int i;
; 2108 : 	int no = -1;
; 2109 : 	for( i = 0; i < tailCharObj; i++ ){

  00060	42		 inc	 edx
  00061	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00066	3b d6		 cmp	 edx, esi
  00068	7c b6		 jl	 SHORT $LL4@checkCharO
$LN14@checkCharO:
  0006a	5f		 pop	 edi

; 2113 : 					return 1;
; 2114 : 			}
; 2115 : 		}
; 2116 : 	}
; 2117 : 	return 0;
; 2118 : }

  0006b	5e		 pop	 esi
  0006c	33 c0		 xor	 eax, eax
  0006e	5b		 pop	 ebx
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
$LN10@checkCharO:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	b8 01 00 00 00	 mov	 eax, 1
  00078	5b		 pop	 ebx
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?checkCharObjPointNotStatus@@YAHHHFI@Z ENDP		; checkCharObjPointNotStatus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?checkCharObjPointStatus@@YAHHHFI@Z
_TEXT	SEGMENT
_gx$ = 8						; size = 4
_gy$ = 12						; size = 4
_type$ = 16						; size = 2
_status$ = 20						; size = 4
?checkCharObjPointStatus@@YAHHHFI@Z PROC		; checkCharObjPointStatus, COMDAT

; 2084 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 2085 : 	int i;
; 2086 : 	int no = -1;
; 2087 : 	for( i = 0; i < tailCharObj; i++ ){

  00005	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0000b	33 d2		 xor	 edx, edx
  0000d	57		 push	 edi
  0000e	85 f6		 test	 esi, esi
  00010	7e 58		 jle	 SHORT $LN14@checkCharO
  00012	66 8b 5d 10	 mov	 bx, WORD PTR _type$[ebp]
  00016	b8 bc 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
  0001b	0f 1f 44 00 00	 npad	 5
$LL4@checkCharO:

; 2088 : 		if( charObj[i].use != CHAROBJ_USE_FREE && charObj[i].ptAct != NULL ){

  00020	66 83 b8 44 ff
	ff ff 00	 cmp	 WORD PTR [eax-188], 0
  00028	74 36		 je	 SHORT $LN2@checkCharO
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 30		 je	 SHORT $LN2@checkCharO

; 2089 : 			if( charObj[i].ptAct->gx == gx && charObj[i].ptAct->gy == gy && (charObj[i].type & type) != 0 ){

  00030	8b 7d 08	 mov	 edi, DWORD PTR _gx$[ebp]
  00033	39 b9 b4 00 00
	00		 cmp	 DWORD PTR [ecx+180], edi
  00039	8b 7d 14	 mov	 edi, DWORD PTR _status$[ebp]
  0003c	75 22		 jne	 SHORT $LN2@checkCharO
  0003e	8b 75 0c	 mov	 esi, DWORD PTR _gy$[ebp]
  00041	39 b1 b8 00 00
	00		 cmp	 DWORD PTR [ecx+184], esi
  00047	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0004d	75 11		 jne	 SHORT $LN2@checkCharO
  0004f	66 85 98 46 ff
	ff ff		 test	 WORD PTR [eax-186], bx
  00056	74 08		 je	 SHORT $LN2@checkCharO

; 2090 : 				if( (charObj[i].status & status ) != 0 )

  00058	85 b8 70 ff ff
	ff		 test	 DWORD PTR [eax-144], edi
  0005e	75 11		 jne	 SHORT $LN10@checkCharO
$LN2@checkCharO:

; 2085 : 	int i;
; 2086 : 	int no = -1;
; 2087 : 	for( i = 0; i < tailCharObj; i++ ){

  00060	42		 inc	 edx
  00061	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00066	3b d6		 cmp	 edx, esi
  00068	7c b6		 jl	 SHORT $LL4@checkCharO
$LN14@checkCharO:
  0006a	5f		 pop	 edi

; 2091 : 					return 1;
; 2092 : 			}
; 2093 : 		}
; 2094 : 	}
; 2095 : 	return 0;
; 2096 : }

  0006b	5e		 pop	 esi
  0006c	33 c0		 xor	 eax, eax
  0006e	5b		 pop	 ebx
  0006f	5d		 pop	 ebp
  00070	c3		 ret	 0
$LN10@checkCharO:
  00071	5f		 pop	 edi
  00072	5e		 pop	 esi
  00073	b8 01 00 00 00	 mov	 eax, 1
  00078	5b		 pop	 ebx
  00079	5d		 pop	 ebp
  0007a	c3		 ret	 0
?checkCharObjPointStatus@@YAHHHFI@Z ENDP		; checkCharObjPointStatus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?checkCharObjPoint@@YAHHHF@Z
_TEXT	SEGMENT
_gx$ = 8						; size = 4
_gy$ = 12						; size = 4
_type$ = 16						; size = 2
?checkCharObjPoint@@YAHHHF@Z PROC			; checkCharObjPoint, COMDAT

; 2064 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 2065 : 	int i;
; 2066 : 	int no = -1;
; 2067 : 	for( i = 0; i < tailCharObj; i++ ){

  00005	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0000b	33 d2		 xor	 edx, edx
  0000d	57		 push	 edi
  0000e	85 f6		 test	 esi, esi
  00010	7e 4a		 jle	 SHORT $LN13@checkCharO
  00012	66 8b 7d 10	 mov	 di, WORD PTR _type$[ebp]
  00016	b8 bc 00 00 00	 mov	 eax, OFFSET ?charObj@@3PAUCHAROBJ@@A+188
  0001b	8b 5d 0c	 mov	 ebx, DWORD PTR _gy$[ebp]
  0001e	66 90		 npad	 2
$LL4@checkCharO:

; 2068 : 		if( charObj[i].use != CHAROBJ_USE_FREE && charObj[i].ptAct != NULL ){

  00020	66 83 b8 44 ff
	ff ff 00	 cmp	 WORD PTR [eax-188], 0
  00028	74 28		 je	 SHORT $LN2@checkCharO
  0002a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002c	85 c9		 test	 ecx, ecx
  0002e	74 22		 je	 SHORT $LN2@checkCharO

; 2069 : 			if( charObj[i].ptAct->gx == gx && charObj[i].ptAct->gy == gy && (charObj[i].type & type) != 0 )

  00030	8b 75 08	 mov	 esi, DWORD PTR _gx$[ebp]
  00033	39 b1 b4 00 00
	00		 cmp	 DWORD PTR [ecx+180], esi
  00039	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?tailCharObj@@3HA ; tailCharObj
  0003f	75 11		 jne	 SHORT $LN2@checkCharO
  00041	39 99 b8 00 00
	00		 cmp	 DWORD PTR [ecx+184], ebx
  00047	75 09		 jne	 SHORT $LN2@checkCharO
  00049	66 85 b8 46 ff
	ff ff		 test	 WORD PTR [eax-186], di
  00050	75 11		 jne	 SHORT $LN9@checkCharO
$LN2@checkCharO:

; 2065 : 	int i;
; 2066 : 	int no = -1;
; 2067 : 	for( i = 0; i < tailCharObj; i++ ){

  00052	42		 inc	 edx
  00053	05 0c 01 00 00	 add	 eax, 268		; 0000010cH
  00058	3b d6		 cmp	 edx, esi
  0005a	7c c4		 jl	 SHORT $LL4@checkCharO
$LN13@checkCharO:
  0005c	5f		 pop	 edi

; 2070 : 				return TRUE;
; 2071 : 		}
; 2072 : 	}
; 2073 : 	return FALSE;
; 2074 : }

  0005d	5e		 pop	 esi
  0005e	33 c0		 xor	 eax, eax
  00060	5b		 pop	 ebx
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
$LN9@checkCharO:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	b8 01 00 00 00	 mov	 eax, 1
  0006a	5b		 pop	 ebx
  0006b	5d		 pop	 ebp
  0006c	c3		 ret	 0
?checkCharObjPoint@@YAHHHF@Z ENDP			; checkCharObjPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharNameColor@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_color$ = 12						; size = 4
?setCharNameColor@@YAXPAUaction@@H@Z PROC		; setCharNameColor, COMDAT

; 1588 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1589 : 	CHAREXTRA *ext;
; 1590 : 	int no;
; 1591 : 	if( ptAct == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _ptAct$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 1a		 je	 SHORT $LN1@setCharNam

; 1592 : 		return;
; 1593 : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 1594 : 	no = ext->charObjTblId;

  0000a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]

; 1595 : 	ptAct->charNameColor = color;

  0000d	8b 4d 0c	 mov	 ecx, DWORD PTR _color$[ebp]
  00010	8b 00		 mov	 eax, DWORD PTR [eax]

; 1596 : 	charObj[no].charNameColor = color;

  00012	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00018	89 8a 98 00 00
	00		 mov	 DWORD PTR [edx+152], ecx
  0001e	89 88 c0 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+192], ecx
$LN1@setCharNam:

; 1597 : }

  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
?setCharNameColor@@YAXPAUaction@@H@Z ENDP		; setCharNameColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharFukidashi@@YAXPAUaction@@I@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_offTime$ = 12						; size = 4
?setCharFukidashi@@YAXPAUaction@@I@Z PROC		; setCharFukidashi, COMDAT

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 913  : 	CHAREXTRA *ext;
; 914  : 	int no;
; 915  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 28		 je	 SHORT $LN1@setCharFuk

; 916  : 		return;
; 917  : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000a	56		 push	 esi
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 918  : 
; 919  : 	//JL fix å¯è½åºç°0xdddddddd
; 920  : 	if ((int)ext == 0xdddddddd)

  0000e	81 fe dd dd dd
	dd		 cmp	 esi, -572662307		; ddddddddH
  00014	74 1b		 je	 SHORT $LN5@setCharFuk

; 921  : 	{
; 922  : 		return;
; 923  : 	}
; 924  : 
; 925  : 	no = ext->charObjTblId;
; 926  : 	charObj[no].status |= CHR_STATUS_FUKIDASHI;

  00016	69 06 0c 01 00
	00		 imul	 eax, DWORD PTR [esi], 268
  0001c	81 88 2c 00 00
	00 00 20 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 8192 ; 00002000H

; 927  : 	ext->drawFukidashiTime = offTime + TimeGetTime();

  00026	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  0002b	03 45 0c	 add	 eax, DWORD PTR _offTime$[ebp]
  0002e	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN5@setCharFuk:
  00031	5e		 pop	 esi
$LN1@setCharFuk:

; 928  : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
?setCharFukidashi@@YAXPAUaction@@I@Z ENDP		; setCharFukidashi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharMind@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharMind@@YAXPAUaction@@@Z PROC			; delCharMind, COMDAT

; 798  : 	CHAREXTRA *ext;	
; 799  : 	if( ptAct == NULL )
; 800  : 		return;
; 801  : 	ext = (CHAREXTRA *)ptAct->pYobi;	
; 802  : }

  00000	c2 00 00	 ret	 0
?delCharMind@@YAXPAUaction@@@Z ENDP			; delCharMind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharMind@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_MindNo$ = 12						; size = 4
?setCharMind@@YAXPAUaction@@H@Z PROC			; setCharMind, COMDAT

; 784  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 785  : 	CHAREXTRA *ext;
; 786  : 	if( ptAct == NULL )

  00004	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 45		 je	 SHORT $LN1@setCharMin

; 787  : 		return;
; 788  : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000b	53		 push	 ebx

; 789  : 	ptAct->sMindIcon = MindNo;

  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _MindNo$[ebp]
  0000f	57		 push	 edi
  00010	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00013	89 9e c0 01 00
	00		 mov	 DWORD PTR [esi+448], ebx

; 790  : 	if(ext->ptMindIcon){

  00019	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN3@setCharMin

; 791  : 		DeathAction( ext->ptMindIcon);

  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00026	83 c4 04	 add	 esp, 4

; 792  : 		ext->ptMindIcon = NULL;

  00029	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
$LN3@setCharMin:

; 793  : 	}
; 794  : 	ext->ptMindIcon = createCommmonEffectAction( MindNo, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR);

  00030	6a 0a		 push	 10			; 0000000aH
  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  0003c	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  00042	53		 push	 ebx
  00043	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  00048	83 c4 18	 add	 esp, 24			; 00000018H
  0004b	89 47 10	 mov	 DWORD PTR [edi+16], eax
  0004e	5f		 pop	 edi
  0004f	5b		 pop	 ebx
$LN1@setCharMin:
  00050	5e		 pop	 esi

; 795  : }

  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?setCharMind@@YAXPAUaction@@H@Z ENDP			; setCharMind
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharAngel@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharAngel@@YAXPAUaction@@@Z PROC			; delCharAngel, COMDAT

; 874  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 875  : 	CHAREXTRA *ext;
; 876  : 	int no;
; 877  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharAng

; 878  : 		return;
; 879  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 880  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 881  : 	charObj[no].status &= ~CHR_STATUS_ANGEL;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff ff fe ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -65537 ; fffeffffH
$LN1@delCharAng:

; 882  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharAngel@@YAXPAUaction@@@Z ENDP			; delCharAngel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharAngel@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?setCharAngel@@YAXPAUaction@@@Z PROC			; setCharAngel, COMDAT

; 863  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 864  : 	CHAREXTRA *ext;
; 865  : 	int no;
; 866  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharAng

; 867  : 		return;
; 868  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 869  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 870  : 	charObj[no].status |= CHR_STATUS_ANGEL;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 00 01 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 65536 ; 00010000H
$LN1@setCharAng:

; 871  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharAngel@@YAXPAUaction@@@Z ENDP			; setCharAngel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharUseMagic@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharUseMagic@@YAXPAUaction@@@Z PROC			; delCharUseMagic, COMDAT

; 900  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 901  : 	CHAREXTRA *ext;
; 902  : 	int no;
; 903  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharUse

; 904  : 		return;
; 905  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 906  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 907  : 	charObj[no].status &= (~CHR_STATUS_USE_MAGIC);

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff f7 ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -2049 ; fffff7ffH
$LN1@delCharUse:

; 908  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharUseMagic@@YAXPAUaction@@@Z ENDP			; delCharUseMagic
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharUseMagic@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?setCharUseMagic@@YAXPAUaction@@@Z PROC			; setCharUseMagic, COMDAT

; 887  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 888  : 	CHAREXTRA *ext;
; 889  : 	int no;
; 890  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharUse

; 891  : 		return;
; 892  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 893  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 894  : 	charObj[no].status |= CHR_STATUS_USE_MAGIC;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 08 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 2048 ; 00000800H
$LN1@setCharUse:

; 895  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharUseMagic@@YAXPAUaction@@@Z ENDP			; setCharUseMagic
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharTrade@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharTrade@@YAXPAUaction@@@Z PROC			; delCharTrade, COMDAT

; 851  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 852  : 	CHAREXTRA *ext;
; 853  : 	int no;
; 854  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharTra

; 855  : 		return;
; 856  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 857  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 858  : 	charObj[no].status &= (~CHR_STATUS_TRADE|CHR_STATUS_LEADER);

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff 7f ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -32769 ; ffff7fffH
$LN1@delCharTra:

; 859  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharTrade@@YAXPAUaction@@@Z ENDP			; delCharTrade
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharTrade@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_battleNo$ = 12						; size = 4
?setCharTrade@@YAXPAUaction@@H@Z PROC			; setCharTrade, COMDAT

; 838  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 839  : 	CHAREXTRA *ext;
; 840  : 	int no;
; 841  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharTra

; 842  : 		return;
; 843  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 844  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 845  : 	charObj[no].status |= CHR_STATUS_TRADE;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 80 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 32768 ; 00008000H
$LN1@setCharTra:

; 846  : 	//charObj[no].battleNo = battleNo;
; 847  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharTrade@@YAXPAUaction@@H@Z ENDP			; setCharTrade
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharBattle@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharBattle@@YAXPAUaction@@@Z PROC			; delCharBattle, COMDAT

; 825  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 826  : 	CHAREXTRA *ext;
; 827  : 	int no;
; 828  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharBat

; 829  : 		return;
; 830  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 831  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 832  : 	charObj[no].status &= (~(CHR_STATUS_BATTLE | CHR_STATUS_HELP));

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff eb ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -5121 ; ffffebffH
$LN1@delCharBat:

; 833  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharBattle@@YAXPAUaction@@@Z ENDP			; delCharBattle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharBattle@@YAXPAUaction@@HFF@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_battleNo$ = 12						; size = 4
_sideNo$ = 16						; size = 2
_helpMode$ = 20						; size = 2
?setCharBattle@@YAXPAUaction@@HFF@Z PROC		; setCharBattle, COMDAT

; 806  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 807  : 	CHAREXTRA *ext;
; 808  : 	int no;
; 809  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 55		 je	 SHORT $LN4@setCharBat

; 810  : 		return;
; 811  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 812  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 813  : 	charObj[no].status |= CHR_STATUS_BATTLE;

  0000f	69 d0 0c 01 00
	00		 imul	 edx, eax, 268

; 814  : 	charObj[no].battleNo = battleNo;

  00015	8b 45 0c	 mov	 eax, DWORD PTR _battleNo$[ebp]
  00018	8b 8a 2c 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+44]
  0001e	89 82 ac 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+172], eax
  00024	81 c9 00 04 00
	00		 or	 ecx, 1024		; 00000400H

; 815  : 	charObj[no].sideNo = sideNo;

  0002a	66 8b 45 10	 mov	 ax, WORD PTR _sideNo$[ebp]
  0002e	66 89 82 b0 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+176], ax

; 816  : 	charObj[no].helpMode = helpMode;

  00035	66 8b 45 14	 mov	 ax, WORD PTR _helpMode$[ebp]
  00039	66 89 82 b2 00
	00 00		 mov	 WORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+178], ax

; 817  : 	if( helpMode )

  00040	66 85 c0	 test	 ax, ax
  00043	74 0e		 je	 SHORT $LN3@setCharBat

; 818  : 		charObj[no].status |= CHR_STATUS_HELP;

  00045	81 c9 00 10 00
	00		 or	 ecx, 4096		; 00001000H

; 821  : }

  0004b	89 8a 2c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+44], ecx
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
$LN3@setCharBat:

; 819  : 	else
; 820  : 		charObj[no].status &= ~CHR_STATUS_HELP;

  00053	81 e1 ff ef ff
	ff		 and	 ecx, -4097		; ffffefffH

; 821  : }

  00059	89 8a 2c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[edx+44], ecx
$LN4@setCharBat:
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
?setCharBattle@@YAXPAUaction@@HFF@Z ENDP		; setCharBattle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharWatch@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharWatch@@YAXPAUaction@@@Z PROC			; delCharWatch, COMDAT

; 773  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 774  : 	CHAREXTRA *ext;
; 775  : 	int no;
; 776  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharWat

; 777  : 		return;
; 778  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 779  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 780  : 	charObj[no].status &= (~CHR_STATUS_WATCH);

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff bf ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -16385 ; ffffbfffH
$LN1@delCharWat:

; 781  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharWatch@@YAXPAUaction@@@Z ENDP			; delCharWatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharWatch@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?setCharWatch@@YAXPAUaction@@@Z PROC			; setCharWatch, COMDAT

; 761  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 762  : 	CHAREXTRA *ext;
; 763  : 	int no;
; 764  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharWat

; 765  : 		return;
; 766  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 767  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 768  : 	charObj[no].status |= CHR_STATUS_WATCH;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 40 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 16384 ; 00004000H
$LN1@setCharWat:

; 769  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharWatch@@YAXPAUaction@@@Z ENDP			; setCharWatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharParty@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharParty@@YAXPAUaction@@@Z PROC			; delCharParty, COMDAT

; 749  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 750  : 	CHAREXTRA *ext;
; 751  : 	int no;
; 752  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharPar

; 753  : 		return;
; 754  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 755  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 756  : 	charObj[no].status &= (~CHR_STATUS_PARTY);

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff fd ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -513 ; fffffdffH
$LN1@delCharPar:

; 757  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharParty@@YAXPAUaction@@@Z ENDP			; delCharParty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharParty@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?setCharParty@@YAXPAUaction@@@Z PROC			; setCharParty, COMDAT

; 737  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 738  : 	CHAREXTRA *ext;
; 739  : 	int no;
; 740  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharPar

; 741  : 		return;
; 742  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 743  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 744  : 	charObj[no].status |= CHR_STATUS_PARTY;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 02 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 512 ; 00000200H
$LN1@setCharPar:

; 745  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharParty@@YAXPAUaction@@@Z ENDP			; setCharParty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharLeader@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharLeader@@YAXPAUaction@@@Z PROC			; delCharLeader, COMDAT

; 725  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 726  : 	CHAREXTRA *ext;
; 727  : 	int no;
; 728  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@delCharLea

; 729  : 		return;
; 730  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 731  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 732  : 	charObj[no].status &= (~CHR_STATUS_LEADER);

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 a0 2c 00 00
	00 ff fe ff ff	 and	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], -257 ; fffffeffH
$LN1@delCharLea:

; 733  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?delCharLeader@@YAXPAUaction@@@Z ENDP			; delCharLeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharLeader@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?setCharLeader@@YAXPAUaction@@@Z PROC			; setCharLeader, COMDAT

; 713  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 714  : 	CHAREXTRA *ext;
; 715  : 	int no;
; 716  : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 15		 je	 SHORT $LN1@setCharLea

; 717  : 		return;
; 718  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 719  : 	no = ext->charObjTblId;

  0000a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]

; 720  : 	charObj[no].status |= CHR_STATUS_LEADER;

  0000f	69 c0 0c 01 00
	00		 imul	 eax, eax, 268
  00015	81 88 2c 00 00
	00 00 01 00 00	 or	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44], 256 ; 00000100H
$LN1@setCharLea:

; 721  : }

  0001f	5d		 pop	 ebp
  00020	c3		 ret	 0
?setCharLeader@@YAXPAUaction@@@Z ENDP			; setCharLeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?changeCharAct@@YAXPAUaction@@HHHHHHH@Z
_TEXT	SEGMENT
tv1404 = -8						; size = 4
tv1383 = -8						; size = 4
_no$1$ = -4						; size = 4
_ptAct$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_dir$ = 20						; size = 4
_action$ = 24						; size = 4
_effectno$ = 28						; size = 4
_effectparam1$ = 32					; size = 4
_effectparam2$ = 36					; size = 4
?changeCharAct@@YAXPAUaction@@HHHHHHH@Z PROC		; changeCharAct, COMDAT

; 1692 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1693 : 	CHAREXTRA *ext;
; 1694 : 	int no;
; 1695 : 	int i;
; 1696 : 	if( ptAct == NULL )

  00007	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	0f 84 9c 06 00
	00		 je	 $LN91@changeChar

; 1697 : 		return;
; 1698 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  00012	57		 push	 edi
  00013	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]

; 1699 : 	if ((int)ext == 0xdddddddd)

  00016	81 ff dd dd dd
	dd		 cmp	 edi, -572662307		; ddddddddH
  0001c	0f 84 8b 06 00
	00		 je	 $LN117@changeChar

; 1700 : 	{
; 1701 : 		return;
; 1702 : 	}
; 1703 : 	no = ext->charObjTblId;
; 1704 : 	switch( action ){

  00022	8b 45 18	 mov	 eax, DWORD PTR _action$[ebp]
  00025	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00027	89 4d fc	 mov	 DWORD PTR _no$1$[ebp], ecx
  0002a	83 f8 3d	 cmp	 eax, 61			; 0000003dH
  0002d	0f 87 7a 06 00
	00		 ja	 $LN117@changeChar
  00033	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN113@changeChar[eax]
  0003a	53		 push	 ebx
  0003b	8b 5d 10	 mov	 ebx, DWORD PTR _y$[ebp]
  0003e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN114@changeChar[eax*4]
$LN9@changeChar:

; 1705 : 		case 0:
; 1706 : 			ptAct->bufCount = 0;

  00045	33 c0		 xor	 eax, eax
  00047	66 89 86 14 01
	00 00		 mov	 WORD PTR [esi+276], ax
$LN50@changeChar:

; 1707 : 			ptAct->anim_no = ANIM_STAND;

  0004e	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
$LN127@changeChar:

; 1708 : 			ptAct->anim_no_bak = -1;
; 1709 : 			ptAct->anim_ang = dir;

  00058	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  0005b	5b		 pop	 ebx
  0005c	5f		 pop	 edi
  0005d	c7 86 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+336], -1
  00067	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  0006d	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0006e	8b e5		 mov	 esp, ebp
  00070	5d		 pop	 ebp
  00071	c3		 ret	 0
$LN10@changeChar:

; 1710 : 			break;
; 1711 : #ifdef _SHOWFAMILYBADGE_
; 1712 : 		case 43:
; 1713 : 			if (effectno > 0) {

  00072	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  00075	85 c0		 test	 eax, eax
  00077	7e 18		 jle	 SHORT $LN14@changeChar
$LN128@changeChar:

; 1714 : 				setCharmTitle(ptAct, effectno);

  00079	50		 push	 eax
  0007a	56		 push	 esi
  0007b	e8 00 00 00 00	 call	 ?setCharmTitle@@YAXPAUaction@@H@Z ; setCharmTitle
  00080	83 c4 08	 add	 esp, 8
  00083	5b		 pop	 ebx
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00086	8b e5		 mov	 esp, ebp
  00088	5d		 pop	 ebp
  00089	c3		 ret	 0
$LN13@changeChar:

; 1715 : 			}
; 1716 : 			else
; 1717 : 				delCharmTitle(ptAct);
; 1718 : 			break;
; 1719 : #endif
; 1720 : #ifdef FAMILY_MANOR_
; 1721 : 		case 44:
; 1722 : 			if (effectno >= 0) {
; 1723 : 				if (pc.familyName[0])
; 1724 : 					setCharmFamily(ptAct, effectno);
; 1725 : 			}
; 1726 : 			else
; 1727 : 				delCharmFamily(ptAct);
; 1728 : 			break;
; 1729 : #endif
; 1730 : #ifdef äººç©ç§°å·
; 1731 : 		case 45:
; 1732 : 			if (effectno >= 0) {

  0008a	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  0008d	85 c0		 test	 eax, eax
  0008f	79 e8		 jns	 SHORT $LN128@changeChar
$LN14@changeChar:

; 1733 : 				setCharmTitle(ptAct, effectno);
; 1734 : 			}
; 1735 : 			else
; 1736 : 				delCharmTitle(ptAct);

  00091	56		 push	 esi
  00092	e8 00 00 00 00	 call	 ?delCharmTitle@@YAXPAUaction@@@Z ; delCharmTitle
  00097	83 c4 04	 add	 esp, 4
  0009a	5b		 pop	 ebx
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0009d	8b e5		 mov	 esp, ebp
  0009f	5d		 pop	 ebp
  000a0	c3		 ret	 0
$LN16@changeChar:

; 1737 : 			break;
; 1738 : #endif
; 1739 : #ifdef äººç©åç¯
; 1740 : 		case 46:
; 1741 : 			if (effectno > 0) {

  000a1	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  000a4	85 c0		 test	 eax, eax
  000a6	7e 11		 jle	 SHORT $LN17@changeChar

; 1742 : 				setCharmManor(ptAct, effectno);

  000a8	50		 push	 eax
  000a9	56		 push	 esi
  000aa	e8 00 00 00 00	 call	 ?setCharmManor@@YAXPAUaction@@H@Z ; setCharmManor
  000af	83 c4 08	 add	 esp, 8
  000b2	5b		 pop	 ebx
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  000b5	8b e5		 mov	 esp, ebp
  000b7	5d		 pop	 ebp
  000b8	c3		 ret	 0
$LN17@changeChar:

; 1743 : 			}
; 1744 : 			else
; 1745 : 				delCharmManor(ptAct);

  000b9	56		 push	 esi
  000ba	e8 00 00 00 00	 call	 ?delCharmManor@@YAXPAUaction@@@Z ; delCharmManor
  000bf	83 c4 04	 add	 esp, 4
  000c2	5b		 pop	 ebx
  000c3	5f		 pop	 edi
  000c4	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  000c5	8b e5		 mov	 esp, ebp
  000c7	5d		 pop	 ebp
  000c8	c3		 ret	 0
$LN19@changeChar:

; 1746 : 			break;
; 1747 : #endif
; 1748 : 
; 1749 : 		case 31:
; 1750 : 			setCharWarpPoint( ptAct, x, y );

  000c9	53		 push	 ebx
  000ca	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  000cd	56		 push	 esi
  000ce	e8 00 00 00 00	 call	 ?setCharWarpPoint@@YAXPAUaction@@HH@Z ; setCharWarpPoint

; 1751 : 			ptAct->bufCount = 0;

  000d3	33 c0		 xor	 eax, eax

; 1752 : 			ptAct->anim_no = ANIM_STAND;

  000d5	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  000df	66 89 86 14 01
	00 00		 mov	 WORD PTR [esi+276], ax
  000e6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1753 : 			ptAct->anim_no_bak = -1;
; 1754 : 			ptAct->anim_ang = dir;

  000e9	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  000ec	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax

; 1755 : 			charObj[no].stockDir = -1;

  000f2	69 45 fc 0c 01
	00 00		 imul	 eax, DWORD PTR _no$1$[ebp], 268
  000f9	5b		 pop	 ebx
  000fa	c7 86 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+336], -1
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	c7 80 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+28], -1

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00110	8b e5		 mov	 esp, ebp
  00112	5d		 pop	 ebp
  00113	c3		 ret	 0
$LN20@changeChar:

; 1756 : 			break;
; 1757 : 		case 30:
; 1758 : 			charObj[no].stockDir = dir;

  00114	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]

; 1759 : 			charObj[no].stockDirX = x;

  00117	8b 7d 0c	 mov	 edi, DWORD PTR _x$[ebp]
  0011a	69 c9 0c 01 00
	00		 imul	 ecx, ecx, 268
  00120	89 81 1c 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+28], eax
  00126	89 b9 20 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+32], edi

; 1760 : 			charObj[no].stockDirY = y;

  0012c	89 99 24 00 00
	00		 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[ecx+36], ebx

; 1761 : 			if( (x == ptAct->nextGx && y == ptAct->nextGy) || ABS( ABS( x - ptAct->nextGx ) - ABS( y - ptAct->nextGy ) ) > 1 )

  00132	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR [esi+188]
  00138	3b f8		 cmp	 edi, eax
  0013a	75 0c		 jne	 SHORT $LN112@changeChar
  0013c	3b 9e c0 00 00
	00		 cmp	 ebx, DWORD PTR [esi+192]
  00142	0f 84 64 05 00
	00		 je	 $LN118@changeChar
$LN112@changeChar:
  00148	8b 96 c0 00 00
	00		 mov	 edx, DWORD PTR [esi+192]
  0014e	8b cf		 mov	 ecx, edi
  00150	2b c8		 sub	 ecx, eax
  00152	8b c3		 mov	 eax, ebx
  00154	2b c2		 sub	 eax, edx
  00156	2b d3		 sub	 edx, ebx
  00158	85 c0		 test	 eax, eax
  0015a	0f 49 d0	 cmovns	 edx, eax
  0015d	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR [esi+188]
  00163	2b c7		 sub	 eax, edi
  00165	85 c9		 test	 ecx, ecx
  00167	0f 49 c1	 cmovns	 eax, ecx
  0016a	89 45 f8	 mov	 DWORD PTR tv1383[ebp], eax
  0016d	2b c2		 sub	 eax, edx
  0016f	2b 55 f8	 sub	 edx, DWORD PTR tv1383[ebp]
  00172	85 c0		 test	 eax, eax
  00174	0f 49 d0	 cmovns	 edx, eax
  00177	83 fa 01	 cmp	 edx, 1
  0017a	0f 8f 2c 05 00
	00		 jg	 $LN118@changeChar

; 1700 : 	{
; 1701 : 		return;
; 1702 : 	}
; 1703 : 	no = ext->charObjTblId;
; 1704 : 	switch( action ){

  00180	8b 4d fc	 mov	 ecx, DWORD PTR _no$1$[ebp]
$LN21@changeChar:

; 1762 : 				break;
; 1763 : 		case 1:
; 1764 : 			if( (charObj[no].status & CHR_STATUS_PARTY) != 0 && (charObj[no].status & CHR_STATUS_LEADER) != 0 ){

  00183	69 c1 0c 01 00
	00		 imul	 eax, ecx, 268
  00189	53		 push	 ebx
  0018a	57		 push	 edi
  0018b	56		 push	 esi
  0018c	89 45 f8	 mov	 DWORD PTR tv1404[ebp], eax
  0018f	8b 80 2c 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44]
  00195	25 00 03 00 00	 and	 eax, 768		; 00000300H
  0019a	3d 00 03 00 00	 cmp	 eax, 768		; 00000300H
  0019f	0f 85 b5 00 00
	00		 jne	 $LN25@changeChar

; 1765 : 				if( ptAct->bufCount < sizeof( ptAct->bufGx )/sizeof( int ) )

  001a5	66 83 be 14 01
	00 00 0a	 cmp	 WORD PTR [esi+276], 10	; 0000000aH
  001ad	73 1e		 jae	 SHORT $LN27@changeChar

; 1766 : 					correctCharMovePoint( ptAct, x, y );

  001af	e8 00 00 00 00	 call	 ?correctCharMovePoint@@YAXPAUaction@@HH@Z ; correctCharMovePoint

; 1788 : 			ptAct->anim_no = ANIM_WALK;

  001b4	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b7	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
  001c1	5b		 pop	 ebx
  001c2	5f		 pop	 edi
  001c3	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  001c4	8b e5		 mov	 esp, ebp
  001c6	5d		 pop	 ebp
  001c7	c3		 ret	 0
$LN115@changeChar:

; 1700 : 	{
; 1701 : 		return;
; 1702 : 	}
; 1703 : 	no = ext->charObjTblId;
; 1704 : 	switch( action ){

  001c8	8b 7d 0c	 mov	 edi, DWORD PTR _x$[ebp]
  001cb	eb b6		 jmp	 SHORT $LN21@changeChar
$LN27@changeChar:

; 1767 : 				else{
; 1768 : 					stockCharMovePoint( ptAct, x, y );

  001cd	e8 00 00 00 00	 call	 ?stockCharMovePoint@@YAXPAUaction@@HH@Z ; stockCharMovePoint

; 1769 : 					charObj[no].stockDir = -1;

  001d2	8b 45 f8	 mov	 eax, DWORD PTR tv1404[ebp]
  001d5	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d8	8b 75 0c	 mov	 esi, DWORD PTR _x$[ebp]
  001db	bf 5c 00 00 00	 mov	 edi, OFFSET ?party@@3PAUPARTY@@A+92
  001e0	c7 80 1c 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+28], -1
  001ea	66 0f 1f 44 00
	00		 npad	 6
$LL6@changeChar:

; 1771 : 						if( party[i].useFlag != 0 ){

  001f0	66 83 7f d4 00	 cmp	 WORD PTR [edi-44], 0
  001f5	74 44		 je	 SHORT $LN4@changeChar

; 1772 : 							if( party[i].id != pc.id ){

  001f7	8b 47 d8	 mov	 eax, DWORD PTR [edi-40]
  001fa	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+8
  00200	74 1d		 je	 SHORT $LN30@changeChar

; 1773 : 								//JL fix 2018/08/28 ç¹pkæ¶è¿éå´©ç«¯,å ä¸ªptActä¸ä¸º0çéªè¯
; 1774 : 								if (party[i].ptAct){

  00202	8b 07		 mov	 eax, DWORD PTR [edi]
  00204	85 c0		 test	 eax, eax
  00206	74 33		 je	 SHORT $LN4@changeChar

; 1775 : 									party[i].ptAct->bufCount = 0;
; 1776 : 									setCharWarpPoint(party[i].ptAct, x, y);

  00208	53		 push	 ebx
  00209	33 c9		 xor	 ecx, ecx
  0020b	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx
  00212	56		 push	 esi
  00213	ff 37		 push	 DWORD PTR [edi]
  00215	e8 00 00 00 00	 call	 ?setCharWarpPoint@@YAXPAUaction@@HH@Z ; setCharWarpPoint
  0021a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1777 : 								}
; 1778 : 							}else{

  0021d	eb 1c		 jmp	 SHORT $LN4@changeChar
$LN30@changeChar:

; 1779 : 								if( pc.ptAct != NULL )

  0021f	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00224	85 c0		 test	 eax, eax
  00226	74 09		 je	 SHORT $LN33@changeChar

; 1780 : 									pc.ptAct->bufCount = 0;

  00228	33 c9		 xor	 ecx, ecx
  0022a	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx
$LN33@changeChar:

; 1781 : 								setPcWarpPoint( x, y );

  00231	53		 push	 ebx
  00232	56		 push	 esi
  00233	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint
  00238	83 c4 08	 add	 esp, 8
$LN4@changeChar:

; 1770 : 					for( i = 1; i < MAX_PARTY; i++ ){

  0023b	83 c7 30	 add	 edi, 48			; 00000030H
  0023e	81 ff 1c 01 00
	00		 cmp	 edi, OFFSET ?party@@3PAUPARTY@@A+284
  00244	7c aa		 jl	 SHORT $LL6@changeChar

; 1782 : 							}
; 1783 : 						}
; 1784 : 					}
; 1785 : 				}
; 1786 : 			}else

  00246	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00249	5b		 pop	 ebx
  0024a	5f		 pop	 edi

; 1788 : 			ptAct->anim_no = ANIM_WALK;

  0024b	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
  00255	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00256	8b e5		 mov	 esp, ebp
  00258	5d		 pop	 ebp
  00259	c3		 ret	 0
$LN25@changeChar:

; 1787 : 				stockCharMovePoint( ptAct, x, y );

  0025a	e8 00 00 00 00	 call	 ?stockCharMovePoint@@YAXPAUaction@@HH@Z ; stockCharMovePoint

; 1788 : 			ptAct->anim_no = ANIM_WALK;

  0025f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00262	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
  0026c	5b		 pop	 ebx
  0026d	5f		 pop	 edi
  0026e	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0026f	8b e5		 mov	 esp, ebp
  00271	5d		 pop	 ebp
  00272	c3		 ret	 0
$LN34@changeChar:

; 1789 : 			break;
; 1790 : 		case 2:
; 1791 : 			ptAct->anim_no = ANIM_ATTACK;

  00273	c7 86 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+332], 0

; 1792 : 			ptAct->anim_no_bak = -1;
; 1793 : 			ptAct->anim_ang = dir;
; 1794 : 			break;

  0027d	e9 d6 fd ff ff	 jmp	 $LN127@changeChar
$LN35@changeChar:

; 1795 : 		case 3:
; 1796 : 			ptAct->anim_no = ANIM_THROW;

  00282	c7 86 4c 01 00
	00 0c 00 00 00	 mov	 DWORD PTR [esi+332], 12	; 0000000cH

; 1797 : 			ptAct->anim_no_bak = -1;
; 1798 : 			ptAct->anim_ang = dir;
; 1799 : 			break;

  0028c	e9 c7 fd ff ff	 jmp	 $LN127@changeChar
$LN36@changeChar:

; 1800 : 		case 4:
; 1801 : 			ptAct->anim_no = ANIM_DAMAGE;

  00291	c7 86 4c 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+332], 1

; 1802 : 			ptAct->anim_no_bak = -1;
; 1803 : 			ptAct->anim_ang = dir;
; 1804 : 			break;

  0029b	e9 b8 fd ff ff	 jmp	 $LN127@changeChar
$LN41@changeChar:

; 1805 : 		case 5:
; 1806 : 			ptAct->anim_no = ANIM_DEAD;
; 1807 : 			ptAct->anim_no_bak = -1;
; 1808 : 			ptAct->anim_ang = dir;
; 1809 : 			break;
; 1810 : 		case 6:
; 1811 : 			break;
; 1812 : 		case 7:
; 1813 : 			break;
; 1814 : 		case 8:		/* UsedMagic */
; 1815 : 			break;
; 1816 : 		case 10:
; 1817 : 			ptAct->anim_no = ANIM_DEAD;

  002a0	c7 86 4c 01 00
	00 02 00 00 00	 mov	 DWORD PTR [esi+332], 2

; 1818 : 			ptAct->anim_no_bak = -1;
; 1819 : 			ptAct->anim_ang = dir;
; 1820 : 			break;

  002aa	e9 a9 fd ff ff	 jmp	 $LN127@changeChar
$LN42@changeChar:

; 1821 : 		case 11:
; 1822 : 			ptAct->anim_no = ANIM_SIT;

  002af	c7 86 4c 01 00
	00 05 00 00 00	 mov	 DWORD PTR [esi+332], 5

; 1823 : 			ptAct->anim_no_bak = -1;
; 1824 : 			ptAct->anim_ang = dir;
; 1825 : 			break;

  002b9	e9 9a fd ff ff	 jmp	 $LN127@changeChar
$LN43@changeChar:

; 1826 : 		case 12:
; 1827 : 			ptAct->anim_no = ANIM_HAND;

  002be	c7 86 4c 01 00
	00 06 00 00 00	 mov	 DWORD PTR [esi+332], 6

; 1828 : 			ptAct->anim_no_bak = -1;
; 1829 : 			ptAct->anim_ang = dir;
; 1830 : 			break;

  002c8	e9 8b fd ff ff	 jmp	 $LN127@changeChar
$LN44@changeChar:

; 1831 : 		case 13:
; 1832 : 			ptAct->anim_no = ANIM_HAPPY;

  002cd	c7 86 4c 01 00
	00 07 00 00 00	 mov	 DWORD PTR [esi+332], 7

; 1833 : 			ptAct->anim_no_bak = -1;
; 1834 : 			ptAct->anim_ang = dir;
; 1835 : 			break;

  002d7	e9 7c fd ff ff	 jmp	 $LN127@changeChar
$LN45@changeChar:

; 1836 : 		case 14:
; 1837 : 			ptAct->anim_no = ANIM_ANGRY;

  002dc	c7 86 4c 01 00
	00 08 00 00 00	 mov	 DWORD PTR [esi+332], 8

; 1838 : 			ptAct->anim_no_bak = -1;
; 1839 : 			ptAct->anim_ang = dir;
; 1840 : 			break;

  002e6	e9 6d fd ff ff	 jmp	 $LN127@changeChar
$LN46@changeChar:

; 1841 : 		case 15:
; 1842 : 			ptAct->anim_no = ANIM_SAD;

  002eb	c7 86 4c 01 00
	00 09 00 00 00	 mov	 DWORD PTR [esi+332], 9

; 1843 : 			ptAct->anim_no_bak = -1;
; 1844 : 			ptAct->anim_ang = dir;
; 1845 : 			break;

  002f5	e9 5e fd ff ff	 jmp	 $LN127@changeChar
$LN47@changeChar:

; 1846 : 		case 16:
; 1847 : 			ptAct->anim_no = ANIM_GUARD;

  002fa	c7 86 4c 01 00
	00 0a 00 00 00	 mov	 DWORD PTR [esi+332], 10	; 0000000aH

; 1848 : 			ptAct->anim_no_bak = -1;
; 1849 : 			ptAct->anim_ang = dir;
; 1850 : 			break;

  00304	e9 4f fd ff ff	 jmp	 $LN127@changeChar
$LN48@changeChar:

; 1851 : 		case 17:
; 1852 : 			ptAct->anim_no = ANIM_WALK;

  00309	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4

; 1853 : 			ptAct->anim_no_bak = -1;
; 1854 : 			ptAct->anim_ang = dir;
; 1855 : 			break;

  00313	e9 40 fd ff ff	 jmp	 $LN127@changeChar
$LN49@changeChar:

; 1856 : 		case 18:
; 1857 : 			ptAct->anim_no = ANIM_NOD;

  00318	c7 86 4c 01 00
	00 0b 00 00 00	 mov	 DWORD PTR [esi+332], 11	; 0000000bH

; 1858 : 			ptAct->anim_no_bak = -1;
; 1859 : 			ptAct->anim_ang = dir;
; 1860 : 			break;

  00322	e9 31 fd ff ff	 jmp	 $LN127@changeChar
$LN51@changeChar:

; 1861 : 		case 19:
; 1862 : 			ptAct->anim_no = ANIM_STAND;
; 1863 : 			ptAct->anim_no_bak = -1;
; 1864 : 			ptAct->anim_ang = dir;
; 1865 : 			break;
; 1866 : 		case 20:
; 1867 : 			if( effectno >= 0 ){

  00327	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  0032a	85 c0		 test	 eax, eax
  0032c	78 26		 js	 SHORT $LN52@changeChar

; 1868 : 				setCharBattle( ptAct, effectno, effectparam1, effectparam2 );

  0032e	ff 75 24	 push	 DWORD PTR _effectparam2$[ebp]
  00331	ff 75 20	 push	 DWORD PTR _effectparam1$[ebp]
  00334	50		 push	 eax
  00335	56		 push	 esi
  00336	e8 00 00 00 00	 call	 ?setCharBattle@@YAXPAUaction@@HFF@Z ; setCharBattle
  0033b	83 c4 10	 add	 esp, 16			; 00000010H

; 1869 : 				ptAct->anim_no = ANIM_STAND;

  0033e	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3

; 1870 : 				ptAct->anim_no_bak = -1;

  00348	c7 86 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+336], -1

; 1871 : 			}else

  00352	eb 55		 jmp	 SHORT $LN59@changeChar
$LN52@changeChar:

; 1872 : 				delCharBattle( ptAct );

  00354	56		 push	 esi
  00355	e8 00 00 00 00	 call	 ?delCharBattle@@YAXPAUaction@@@Z ; delCharBattle
  0035a	eb 4a		 jmp	 SHORT $LN120@changeChar
$LN54@changeChar:

; 1873 : 			setCharWarpPoint( ptAct, x, y );
; 1874 : 			ptAct->anim_ang = dir;
; 1875 : 			break;
; 1876 : 		case 21:
; 1877 : 			if( effectno == 1 )

  0035c	83 7d 1c 01	 cmp	 DWORD PTR _effectno$[ebp], 1
  00360	56		 push	 esi
  00361	75 18		 jne	 SHORT $LN55@changeChar

; 1878 : 				setCharLeader( ptAct );

  00363	e8 00 00 00 00	 call	 ?setCharLeader@@YAXPAUaction@@@Z ; setCharLeader

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  00368	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  0036b	83 c4 04	 add	 esp, 4
  0036e	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00374	5b		 pop	 ebx
  00375	5f		 pop	 edi
  00376	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00377	8b e5		 mov	 esp, ebp
  00379	5d		 pop	 ebp
  0037a	c3		 ret	 0
$LN55@changeChar:

; 1879 : 			else
; 1880 : 				delCharLeader( ptAct );

  0037b	e8 00 00 00 00	 call	 ?delCharLeader@@YAXPAUaction@@@Z ; delCharLeader

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  00380	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  00383	83 c4 04	 add	 esp, 4
  00386	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  0038c	5b		 pop	 ebx
  0038d	5f		 pop	 edi
  0038e	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0038f	8b e5		 mov	 esp, ebp
  00391	5d		 pop	 ebp
  00392	c3		 ret	 0
$LN57@changeChar:

; 1881 : 			ptAct->anim_ang = dir;
; 1882 : 			break;
; 1883 : 		case 22:
; 1884 : 			if( effectno == 1 )

  00393	83 7d 1c 01	 cmp	 DWORD PTR _effectno$[ebp], 1
  00397	56		 push	 esi
  00398	75 07		 jne	 SHORT $LN58@changeChar

; 1885 : 				setCharWatch( ptAct );

  0039a	e8 00 00 00 00	 call	 ?setCharWatch@@YAXPAUaction@@@Z ; setCharWatch
  0039f	eb 05		 jmp	 SHORT $LN120@changeChar
$LN58@changeChar:

; 1886 : 			else
; 1887 : 				delCharWatch( ptAct );

  003a1	e8 00 00 00 00	 call	 ?delCharWatch@@YAXPAUaction@@@Z ; delCharWatch
$LN120@changeChar:

; 1888 : 			setCharWarpPoint( ptAct, x, y );

  003a6	83 c4 04	 add	 esp, 4
$LN59@changeChar:
  003a9	53		 push	 ebx
  003aa	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  003ad	56		 push	 esi
  003ae	e8 00 00 00 00	 call	 ?setCharWarpPoint@@YAXPAUaction@@HH@Z ; setCharWarpPoint

; 1889 : 			ptAct->anim_ang = dir;

  003b3	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  003b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  003b9	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  003bf	5b		 pop	 ebx
  003c0	5f		 pop	 edi
  003c1	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  003c2	8b e5		 mov	 esp, ebp
  003c4	5d		 pop	 ebp
  003c5	c3		 ret	 0
$LN60@changeChar:

; 1890 : 			break;
; 1891 : 		case 23:
; 1892 : 			setCharNameColor( ptAct, effectno );

  003c6	ff 75 1c	 push	 DWORD PTR _effectno$[ebp]
  003c9	56		 push	 esi
  003ca	e8 00 00 00 00	 call	 ?setCharNameColor@@YAXPAUaction@@H@Z ; setCharNameColor
  003cf	83 c4 08	 add	 esp, 8
  003d2	5b		 pop	 ebx
  003d3	5f		 pop	 edi
  003d4	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  003d5	8b e5		 mov	 esp, ebp
  003d7	5d		 pop	 ebp
  003d8	c3		 ret	 0
$LN61@changeChar:

; 1893 : 			break;
; 1894 : 
; 1895 : 		// äº¤æä¸­
; 1896 : 		case 32:
; 1897 : 			if( effectno >= 0 ){

  003d9	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  003dc	85 c0		 test	 eax, eax
  003de	78 2e		 js	 SHORT $LN62@changeChar

; 1898 : 				setCharTrade( ptAct, effectno );

  003e0	50		 push	 eax
  003e1	56		 push	 esi
  003e2	e8 00 00 00 00	 call	 ?setCharTrade@@YAXPAUaction@@H@Z ; setCharTrade

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  003e7	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  003ea	83 c4 08	 add	 esp, 8
  003ed	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  003f7	c7 86 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+336], -1
  00401	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00407	5b		 pop	 ebx
  00408	5f		 pop	 edi
  00409	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0040a	8b e5		 mov	 esp, ebp
  0040c	5d		 pop	 ebp
  0040d	c3		 ret	 0
$LN62@changeChar:

; 1899 : 				ptAct->anim_no = ANIM_STAND;
; 1900 : 				ptAct->anim_no_bak = -1;
; 1901 : 			}else
; 1902 : 				delCharTrade( ptAct );

  0040e	56		 push	 esi
  0040f	e8 00 00 00 00	 call	 ?delCharTrade@@YAXPAUaction@@@Z ; delCharTrade

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  00414	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  00417	83 c4 04	 add	 esp, 4
  0041a	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00420	5b		 pop	 ebx
  00421	5f		 pop	 edi
  00422	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00423	8b e5		 mov	 esp, ebp
  00425	5d		 pop	 ebp
  00426	c3		 ret	 0
$LN64@changeChar:

; 1903 : 			//setCharWarpPoint( ptAct, x, y );
; 1904 : 			ptAct->anim_ang = dir;
; 1905 : 			break;
; 1906 : 
; 1907 : #ifdef _ANGEL_SUMMON
; 1908 : 		case 34:
; 1909 : 			if( effectno > 0 ){

  00427	83 7d 1c 00	 cmp	 DWORD PTR _effectno$[ebp], 0
  0042b	56		 push	 esi
  0042c	7e 2c		 jle	 SHORT $LN65@changeChar

; 1910 : 				setCharAngel( ptAct );

  0042e	e8 00 00 00 00	 call	 ?setCharAngel@@YAXPAUaction@@@Z ; setCharAngel

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  00433	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  00436	83 c4 04	 add	 esp, 4
  00439	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  00443	c7 86 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [esi+336], -1
  0044d	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00453	5b		 pop	 ebx
  00454	5f		 pop	 edi
  00455	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00456	8b e5		 mov	 esp, ebp
  00458	5d		 pop	 ebp
  00459	c3		 ret	 0
$LN65@changeChar:

; 1911 : 				// ?????????
; 1912 : 				ptAct->anim_no = ANIM_STAND;
; 1913 : 				ptAct->anim_no_bak = -1;
; 1914 : 			}else
; 1915 : 				delCharAngel( ptAct );

  0045a	e8 00 00 00 00	 call	 ?delCharAngel@@YAXPAUaction@@@Z ; delCharAngel

; 1916 : 			//setCharWarpPoint( ptAct, x, y );
; 1917 : 			ptAct->anim_ang = dir;

  0045f	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  00462	83 c4 04	 add	 esp, 4
  00465	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  0046b	5b		 pop	 ebx
  0046c	5f		 pop	 edi
  0046d	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0046e	8b e5		 mov	 esp, ebp
  00470	5d		 pop	 ebp
  00471	c3		 ret	 0
$LN67@changeChar:

; 1918 : 			break;
; 1919 : #endif
; 1920 : 
; 1921 : #ifdef _STREET_VENDOR
; 1922 : 		case 41:
; 1923 : 			if(ext->ptStreetVendor){

  00472	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00475	85 c0		 test	 eax, eax
  00477	74 10		 je	 SHORT $LN68@changeChar

; 1924 : 				DeathAction(ext->ptStreetVendor);

  00479	50		 push	 eax
  0047a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0047f	83 c4 04	 add	 esp, 4

; 1925 : 				ext->ptStreetVendor = NULL;

  00482	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
$LN68@changeChar:

; 1926 : 			}
; 1927 : 			ext->ptStreetVendor = GetAction(PRIO_CHR,0);

  00489	6a 00		 push	 0
  0048b	6a 01		 push	 1
  0048d	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00492	83 c4 08	 add	 esp, 8
  00495	89 47 20	 mov	 DWORD PTR [edi+32], eax
  00498	5b		 pop	 ebx
  00499	5f		 pop	 edi
  0049a	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0049b	8b e5		 mov	 esp, ebp
  0049d	5d		 pop	 ebp
  0049e	c3		 ret	 0
$LN69@changeChar:

; 1928 : 			break;
; 1929 : 		case 42:
; 1930 : 			if(ext->ptStreetVendor){

  0049f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  004a2	85 c0		 test	 eax, eax
  004a4	0f 84 02 02 00
	00		 je	 $LN118@changeChar

; 1931 : 				DeathAction(ext->ptStreetVendor);

  004aa	50		 push	 eax
  004ab	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004b0	83 c4 04	 add	 esp, 4

; 1932 : 				ext->ptStreetVendor = NULL;

  004b3	c7 47 20 00 00
	00 00		 mov	 DWORD PTR [edi+32], 0
  004ba	5b		 pop	 ebx
  004bb	5f		 pop	 edi
  004bc	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  004bd	8b e5		 mov	 esp, ebp
  004bf	5d		 pop	 ebp
  004c0	c3		 ret	 0
$LN74@changeChar:

; 1933 : 			}
; 1934 : 			break;
; 1935 : #endif
; 1936 : #ifdef _MIND_ICON
; 1937 : 		case 40:
; 1938 : 			if(effectno >= 0)
; 1939 : 				setCharMind( ptAct, effectno);				
; 1940 : 			else
; 1941 : 				delCharMind( ptAct);
; 1942 : 			break;
; 1943 : #endif
; 1944 : #ifdef _ITEM_CRACKER
; 1945 : 		case 50:
; 1946 : 			if(effectno >= 0)

  004c1	8b 45 1c	 mov	 eax, DWORD PTR _effectno$[ebp]
  004c4	85 c0		 test	 eax, eax
  004c6	0f 88 e0 01 00
	00		 js	 $LN118@changeChar

; 1947 : 				setCharMind( ptAct, effectno);				

  004cc	50		 push	 eax
  004cd	56		 push	 esi
  004ce	e8 00 00 00 00	 call	 ?setCharMind@@YAXPAUaction@@H@Z ; setCharMind
  004d3	83 c4 08	 add	 esp, 8
  004d6	5b		 pop	 ebx
  004d7	5f		 pop	 edi
  004d8	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  004d9	8b e5		 mov	 esp, ebp
  004db	5d		 pop	 ebp
  004dc	c3		 ret	 0
$LN77@changeChar:

; 1948 : 			else
; 1949 : 				delCharMind( ptAct);
; 1950 : 			break;
; 1951 : #endif
; 1952 : #ifdef _ITEM_FIREWORK
; 1953 : 		case 51:
; 1954 : 			if (ext->pActFirework[0])

  004dd	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  004e0	85 c0		 test	 eax, eax
  004e2	74 10		 je	 SHORT $LN78@changeChar

; 1955 : 			{
; 1956 : 				DeathAction(ext->pActFirework[0]);

  004e4	50		 push	 eax
  004e5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004ea	83 c4 04	 add	 esp, 4

; 1957 : 				ext->pActFirework[0] = NULL;

  004ed	c7 47 28 00 00
	00 00		 mov	 DWORD PTR [edi+40], 0
$LN78@changeChar:

; 1958 : 			}
; 1959 : 			if (ext->pActFirework[1])

  004f4	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  004f7	85 c0		 test	 eax, eax
  004f9	74 10		 je	 SHORT $LN79@changeChar

; 1960 : 			{
; 1961 : 				DeathAction(ext->pActFirework[1]);

  004fb	50		 push	 eax
  004fc	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00501	83 c4 04	 add	 esp, 4

; 1962 : 				ext->pActFirework[1] = NULL;

  00504	c7 47 2c 00 00
	00 00		 mov	 DWORD PTR [edi+44], 0
$LN79@changeChar:

; 1963 : 			}
; 1964 : 			ext->pActFirework[0] = GetAction(PRIO_CHR, 0);

  0050b	6a 00		 push	 0
  0050d	6a 01		 push	 1
  0050f	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction

; 1965 : 			ext->pActFirework[0]->damage		= effectno;	// åç¨ damage æ¥å¨å­ type (effectno = type)

  00514	8b 55 1c	 mov	 edx, DWORD PTR _effectno$[ebp]
  00517	83 c4 08	 add	 esp, 8
  0051a	89 47 28	 mov	 DWORD PTR [edi+40], eax
  0051d	89 90 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edx

; 1966 : 			ext->pActFirework[0]->anim_chr_no	= effectparam1;

  00523	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00526	8b 45 20	 mov	 eax, DWORD PTR _effectparam1$[ebp]
  00529	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax

; 1967 : 			ext->pActFirework[0]->anim_no		= ANIM_STAND;

  0052f	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00532	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3

; 1968 : 			ext->pActFirework[0]->anim_ang		= 1;

  0053c	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0053f	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1

; 1969 : 			ext->pActFirework[0]->dispPrio		= DISP_PRIO_RESERVE;

  00549	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0054c	c6 40 15 14	 mov	 BYTE PTR [eax+21], 20	; 00000014H

; 1970 : 			if (effectno == 3)

  00550	83 fa 03	 cmp	 edx, 3
  00553	75 5e		 jne	 SHORT $LN80@changeChar

; 1971 : 			{
; 1972 : 				ext->pActFirework[0]->gx		= ptAct->gx + 3;

  00555	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  00558	8b 8e b4 00 00
	00		 mov	 ecx, DWORD PTR [esi+180]
  0055e	03 ca		 add	 ecx, edx
  00560	5b		 pop	 ebx
  00561	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 1973 : 				ext->pActFirework[0]->gy		= ptAct->gy - 3;

  00567	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0056a	8b 8e b8 00 00
	00		 mov	 ecx, DWORD PTR [esi+184]
  00570	2b ca		 sub	 ecx, edx
  00572	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx

; 1974 : 				ext->pActFirework[0]->bufGx[0]	= pc.ptAct->gx;

  00578	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  0057b	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00580	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]
  00586	89 81 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], eax

; 1975 : 				ext->pActFirework[0]->bufGy[0]	= pc.ptAct->gy;

  0058c	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00591	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  00594	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]
  0059a	89 81 ec 00 00
	00		 mov	 DWORD PTR [ecx+236], eax

; 1981 : 			}
; 1982 : 			ext->pActFirework[0]->actNo			= 0;

  005a0	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  005a3	5f		 pop	 edi
  005a4	5e		 pop	 esi
  005a5	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  005af	8b e5		 mov	 esp, ebp
  005b1	5d		 pop	 ebp
  005b2	c3		 ret	 0
$LN80@changeChar:

; 1976 : 			}
; 1977 : 			else
; 1978 : 			{
; 1979 : 				ext->pActFirework[0]->gx		= ptAct->gx;

  005b3	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  005b6	8b 86 b4 00 00
	00		 mov	 eax, DWORD PTR [esi+180]
  005bc	5b		 pop	 ebx
  005bd	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 1980 : 				ext->pActFirework[0]->gy		= ptAct->gy;

  005c3	8b 4f 28	 mov	 ecx, DWORD PTR [edi+40]
  005c6	8b 86 b8 00 00
	00		 mov	 eax, DWORD PTR [esi+184]
  005cc	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1981 : 			}
; 1982 : 			ext->pActFirework[0]->actNo			= 0;

  005d2	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  005d5	5f		 pop	 edi
  005d6	5e		 pop	 esi
  005d7	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  005e1	8b e5		 mov	 esp, ebp
  005e3	5d		 pop	 ebp
  005e4	c3		 ret	 0
$LN82@changeChar:

; 1983 : 			break;
; 1984 : #endif
; 1985 : #ifdef ITEM_AURA_
; 1986 : 		case 60:
; 1987 : 			if (ext->ptActAura1 == nullptr )

  005e5	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  005e8	85 c0		 test	 eax, eax
  005ea	75 16		 jne	 SHORT $LN123@changeChar

; 1988 : 			{
; 1989 : 				ext->ptActAura1 = GetAction(PRIO_CHR, 0);

  005ec	50		 push	 eax
  005ed	6a 01		 push	 1
  005ef	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  005f4	83 c4 08	 add	 esp, 8
  005f7	89 47 38	 mov	 DWORD PTR [edi+56], eax

; 1990 : 			}
; 1991 : 
; 1992 : 			if (ext->ptActAura1 != nullptr)

  005fa	85 c0		 test	 eax, eax
  005fc	0f 84 aa 00 00
	00		 je	 $LN118@changeChar
$LN123@changeChar:

; 1993 : 			{
; 1994 : 				if (effectno == 0)

  00602	8b 4d 1c	 mov	 ecx, DWORD PTR _effectno$[ebp]
  00605	85 c9		 test	 ecx, ecx
  00607	75 17		 jne	 SHORT $LN85@changeChar

; 1995 : 				{
; 1996 : 					DeathAction(ext->ptActAura1);

  00609	50		 push	 eax
  0060a	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0060f	83 c4 04	 add	 esp, 4

; 1997 : 					ext->ptActAura1 = nullptr;

  00612	c7 47 38 00 00
	00 00		 mov	 DWORD PTR [edi+56], 0
  00619	5b		 pop	 ebx
  0061a	5f		 pop	 edi
  0061b	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0061c	8b e5		 mov	 esp, ebp
  0061e	5d		 pop	 ebp
  0061f	c3		 ret	 0
$LN85@changeChar:

; 1998 : 				}
; 1999 : 				else
; 2000 : 				{
; 2001 : 					ext->ptActAura1->anim_chr_no = effectno;

  00620	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 2002 : 					ext->ptActAura1->dispPrio = DISP_PRIO_CHAR - 1;

  00626	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00629	5b		 pop	 ebx
  0062a	c6 40 15 09	 mov	 BYTE PTR [eax+21], 9

; 2003 : 					ext->ptActAura1->anim_ang = 0;

  0062e	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00631	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 2004 : 					ext->ptActAura1->anim_no = 0;

  0063b	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  0063e	5f		 pop	 edi
  0063f	5e		 pop	 esi

; 2026 : 					ext->ptActAura2->anim_no = 0;

  00640	c7 80 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+332], 0

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  0064a	8b e5		 mov	 esp, ebp
  0064c	5d		 pop	 ebp
  0064d	c3		 ret	 0
$LN87@changeChar:

; 2005 : 				}
; 2006 : 			}
; 2007 : 			break;
; 2008 : 		case 61:
; 2009 : 			if (ext->ptActAura2 == nullptr)

  0064e	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  00651	85 c0		 test	 eax, eax
  00653	75 12		 jne	 SHORT $LN126@changeChar

; 2010 : 			{
; 2011 : 				ext->ptActAura2 = GetAction(PRIO_CHR, 0);

  00655	50		 push	 eax
  00656	6a 01		 push	 1
  00658	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  0065d	83 c4 08	 add	 esp, 8
  00660	89 47 3c	 mov	 DWORD PTR [edi+60], eax

; 2012 : 			}
; 2013 : 
; 2014 : 			if (ext->ptActAura2 != nullptr)

  00663	85 c0		 test	 eax, eax
  00665	74 45		 je	 SHORT $LN118@changeChar
$LN126@changeChar:

; 2015 : 			{
; 2016 : 				if (effectno == 0)

  00667	8b 4d 1c	 mov	 ecx, DWORD PTR _effectno$[ebp]
  0066a	85 c9		 test	 ecx, ecx
  0066c	75 17		 jne	 SHORT $LN90@changeChar

; 2017 : 				{
; 2018 : 					DeathAction(ext->ptActAura2);

  0066e	50		 push	 eax
  0066f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00674	83 c4 04	 add	 esp, 4

; 2019 : 					ext->ptActAura2 = nullptr;

  00677	c7 47 3c 00 00
	00 00		 mov	 DWORD PTR [edi+60], 0
  0067e	5b		 pop	 ebx
  0067f	5f		 pop	 edi
  00680	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  00681	8b e5		 mov	 esp, ebp
  00683	5d		 pop	 ebp
  00684	c3		 ret	 0
$LN90@changeChar:

; 2020 : 				}
; 2021 : 				else
; 2022 : 				{
; 2023 : 					ext->ptActAura2->anim_chr_no = effectno;

  00685	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 2024 : 					ext->ptActAura2->dispPrio = DISP_PRIO_CHAR;

  0068b	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  0068e	c6 40 15 0a	 mov	 BYTE PTR [eax+21], 10	; 0000000aH

; 2025 : 					ext->ptActAura2->anim_ang = 0;

  00692	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  00695	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 2026 : 					ext->ptActAura2->anim_no = 0;

  0069f	8b 47 3c	 mov	 eax, DWORD PTR [edi+60]
  006a2	c7 80 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+332], 0
$LN118@changeChar:
  006ac	5b		 pop	 ebx
$LN117@changeChar:
  006ad	5f		 pop	 edi
$LN91@changeChar:
  006ae	5e		 pop	 esi

; 2027 : 				}
; 2028 : 			}
; 2029 : 			break;
; 2030 : #endif
; 2031 : 
; 2032 : 
; 2033 : 	}//ITEM_AURA_
; 2034 : }

  006af	8b e5		 mov	 esp, ebp
  006b1	5d		 pop	 ebp
  006b2	c3		 ret	 0
  006b3	90		 npad	 1
$LN114@changeChar:
  006b4	00 00 00 00	 DD	 $LN9@changeChar
  006b8	00 00 00 00	 DD	 $LN115@changeChar
  006bc	00 00 00 00	 DD	 $LN34@changeChar
  006c0	00 00 00 00	 DD	 $LN35@changeChar
  006c4	00 00 00 00	 DD	 $LN36@changeChar
  006c8	00 00 00 00	 DD	 $LN41@changeChar
  006cc	00 00 00 00	 DD	 $LN42@changeChar
  006d0	00 00 00 00	 DD	 $LN43@changeChar
  006d4	00 00 00 00	 DD	 $LN44@changeChar
  006d8	00 00 00 00	 DD	 $LN45@changeChar
  006dc	00 00 00 00	 DD	 $LN46@changeChar
  006e0	00 00 00 00	 DD	 $LN47@changeChar
  006e4	00 00 00 00	 DD	 $LN48@changeChar
  006e8	00 00 00 00	 DD	 $LN49@changeChar
  006ec	00 00 00 00	 DD	 $LN50@changeChar
  006f0	00 00 00 00	 DD	 $LN51@changeChar
  006f4	00 00 00 00	 DD	 $LN54@changeChar
  006f8	00 00 00 00	 DD	 $LN57@changeChar
  006fc	00 00 00 00	 DD	 $LN60@changeChar
  00700	00 00 00 00	 DD	 $LN20@changeChar
  00704	00 00 00 00	 DD	 $LN19@changeChar
  00708	00 00 00 00	 DD	 $LN61@changeChar
  0070c	00 00 00 00	 DD	 $LN64@changeChar
  00710	00 00 00 00	 DD	 $LN74@changeChar
  00714	00 00 00 00	 DD	 $LN67@changeChar
  00718	00 00 00 00	 DD	 $LN69@changeChar
  0071c	00 00 00 00	 DD	 $LN10@changeChar
  00720	00 00 00 00	 DD	 $LN13@changeChar
  00724	00 00 00 00	 DD	 $LN16@changeChar
  00728	00 00 00 00	 DD	 $LN77@changeChar
  0072c	00 00 00 00	 DD	 $LN82@changeChar
  00730	00 00 00 00	 DD	 $LN87@changeChar
  00734	00 00 00 00	 DD	 $LN118@changeChar
$LN113@changeChar:
  00738	00		 DB	 0
  00739	01		 DB	 1
  0073a	02		 DB	 2
  0073b	03		 DB	 3
  0073c	04		 DB	 4
  0073d	05		 DB	 5
  0073e	20		 DB	 32			; 00000020H
  0073f	20		 DB	 32			; 00000020H
  00740	20		 DB	 32			; 00000020H
  00741	20		 DB	 32			; 00000020H
  00742	05		 DB	 5
  00743	06		 DB	 6
  00744	07		 DB	 7
  00745	08		 DB	 8
  00746	09		 DB	 9
  00747	0a		 DB	 10			; 0000000aH
  00748	0b		 DB	 11			; 0000000bH
  00749	0c		 DB	 12			; 0000000cH
  0074a	0d		 DB	 13			; 0000000dH
  0074b	0e		 DB	 14			; 0000000eH
  0074c	0f		 DB	 15			; 0000000fH
  0074d	10		 DB	 16			; 00000010H
  0074e	11		 DB	 17			; 00000011H
  0074f	12		 DB	 18			; 00000012H
  00750	20		 DB	 32			; 00000020H
  00751	20		 DB	 32			; 00000020H
  00752	20		 DB	 32			; 00000020H
  00753	20		 DB	 32			; 00000020H
  00754	20		 DB	 32			; 00000020H
  00755	20		 DB	 32			; 00000020H
  00756	13		 DB	 19			; 00000013H
  00757	14		 DB	 20			; 00000014H
  00758	15		 DB	 21			; 00000015H
  00759	20		 DB	 32			; 00000020H
  0075a	16		 DB	 22			; 00000016H
  0075b	20		 DB	 32			; 00000020H
  0075c	20		 DB	 32			; 00000020H
  0075d	20		 DB	 32			; 00000020H
  0075e	20		 DB	 32			; 00000020H
  0075f	20		 DB	 32			; 00000020H
  00760	17		 DB	 23			; 00000017H
  00761	18		 DB	 24			; 00000018H
  00762	19		 DB	 25			; 00000019H
  00763	1a		 DB	 26			; 0000001aH
  00764	20		 DB	 32			; 00000020H
  00765	1b		 DB	 27			; 0000001bH
  00766	1c		 DB	 28			; 0000001cH
  00767	20		 DB	 32			; 00000020H
  00768	20		 DB	 32			; 00000020H
  00769	20		 DB	 32			; 00000020H
  0076a	17		 DB	 23			; 00000017H
  0076b	1d		 DB	 29			; 0000001dH
  0076c	20		 DB	 32			; 00000020H
  0076d	20		 DB	 32			; 00000020H
  0076e	20		 DB	 32			; 00000020H
  0076f	20		 DB	 32			; 00000020H
  00770	20		 DB	 32			; 00000020H
  00771	20		 DB	 32			; 00000020H
  00772	20		 DB	 32			; 00000020H
  00773	20		 DB	 32			; 00000020H
  00774	1e		 DB	 30			; 0000001eH
  00775	1f		 DB	 31			; 0000001fH
?changeCharAct@@YAXPAUaction@@HHHHHHH@Z ENDP		; changeCharAct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?drawCharStatus@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_x1$1 = -328						; size = 2
_bmpNo$2 = -328						; size = 4
_x1$3 = -328						; size = 2
_x1$4 = -328						; size = 2
_ptAct$GSCopy$1$ = -324					; size = 4
tv3170 = -324						; size = 4
_fX$5 = -324						; size = 4
_y1$6 = -320						; size = 2
_y1$7 = -320						; size = 2
_y1$8 = -320						; size = 2
_status$1$ = -316					; size = 4
_fY$9 = -316						; size = 4
tv3243 = -312						; size = 4
tv3211 = -312						; size = 4
_battleNo$1$ = -312					; size = 4
_fY$10 = -312						; size = 4
_fX$11 = -312						; size = 4
tv589 = -312						; size = 4
_bmpNo$12 = -312					; size = 4
_bmpNo$13 = -312					; size = 4
_bmpNo$14 = -312					; size = 4
_bmpNo$15 = -312					; size = 4
_pictable$16 = -308					; size = 36
_nXY$17 = -304						; size = 32
_msg$ = -272						; size = 256
_msg$18 = -16						; size = 10
__$ArrayPad$ = -4					; size = 4
_ptAct$ = 8						; size = 4
?drawCharStatus@@YAXPAUaction@@@Z PROC			; drawCharStatus, COMDAT

; 932  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 48 01 00
	00		 sub	 esp, 328		; 00000148H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	57		 push	 edi
  00014	8b 7d 08	 mov	 edi, DWORD PTR _ptAct$[ebp]
  00017	89 bd bc fe ff
	ff		 mov	 DWORD PTR _ptAct$GSCopy$1$[ebp], edi

; 933  : 	CHAREXTRA *ext;
; 934  : 	int no;
; 935  : #ifdef _ANGEL_SUMMON
; 936  : 	unsigned status;
; 937  : #else
; 938  : 	unsigned short status;
; 939  : #endif
; 940  : 	int battleNo;
; 941  : 	int sideNo;
; 942  : 	int helpMode;
; 943  : 	char msg[256];
; 944  : #ifdef _AniCharBubble	   // Syu ADD å¨ç»å±äººç©ååºæ°æ³¡
; 945  : 	int RandAnimate;
; 946  : #endif
; 947  : 	if( ptAct == NULL )

  0001d	85 ff		 test	 edi, edi
  0001f	0f 84 02 14 00
	00		 je	 $LN103@drawCharSt

; 948  : 		return;
; 949  : 	ext = (CHAREXTRA *)ptAct->pYobi;
; 950  : 	no = ext->charObjTblId;
; 951  : 	if( pc.ptAct != NULL && pc.ptAct == ptAct ){

  00025	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0002a	53		 push	 ebx
  0002b	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]
  0002e	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00030	85 c0		 test	 eax, eax
  00032	74 0e		 je	 SHORT $LN5@drawCharSt
  00034	3b c7		 cmp	 eax, edi
  00036	75 0a		 jne	 SHORT $LN5@drawCharSt

; 952  : 		// ???????
; 953  : 		status = pc.status;

  00038	8b 0d a4 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+164

; 954  : 		battleNo = 0;

  0003e	33 c0		 xor	 eax, eax

; 955  : 		sideNo = 0;
; 956  : 		helpMode = 0;
; 957  : 	}else{

  00040	eb 12		 jmp	 SHORT $LN132@drawCharSt
$LN5@drawCharSt:

; 958  : 		status = charObj[no].status;

  00042	69 c1 0c 01 00
	00		 imul	 eax, ecx, 268
  00048	8b 88 2c 00 00
	00		 mov	 ecx, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+44]

; 959  : 		battleNo = charObj[no].battleNo;

  0004e	8b 80 ac 00 00
	00		 mov	 eax, DWORD PTR ?charObj@@3PAUCHAROBJ@@A[eax+172]
$LN132@drawCharSt:

; 960  : 		sideNo = charObj[no].sideNo;
; 961  : 		helpMode = charObj[no].helpMode;
; 962  : 	}
; 963  : 
; 964  : #ifdef äººç©åç¯
; 965  : 	if (ext->ptmManorIcon) {

  00054	89 85 c8 fe ff
	ff		 mov	 DWORD PTR _battleNo$1$[ebp], eax
  0005a	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0005d	89 8d c4 fe ff
	ff		 mov	 DWORD PTR _status$1$[ebp], ecx
  00063	85 c0		 test	 eax, eax
  00065	0f 84 a4 00 00
	00		 je	 $LN121@drawCharSt

; 966  : 		{
; 967  : 			int äººç©å±è½å¼å³ = 0;
; 968  : 			if (äººç©å±è½å¼å³ && ProcNo == PROC_GAME && pc.ptAct != ptAct) {
; 969  : 				if (ATR_PAT_NO(ext->ptmManorIcon)) {
; 970  : 					ATR_PAT_BAK_NO(ext->ptmManorIcon) = ATR_PAT_NO(ext->ptmManorIcon);
; 971  : 					ATR_PAT_NO(ext->ptmManorIcon) = 0;
; 972  : 				}
; 973  : 
; 974  : 			}
; 975  : 			else {
; 976  : 				if (!ATR_PAT_NO(ext->ptmManorIcon)) {

  0006b	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  00072	75 10		 jne	 SHORT $LN12@drawCharSt

; 977  : 					if (ATR_PAT_BAK_NO(ext->ptmManorIcon)) {

  00074	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  0007a	85 c9		 test	 ecx, ecx
  0007c	74 06		 je	 SHORT $LN12@drawCharSt

; 978  : 						ATR_PAT_NO(ext->ptmManorIcon) = ATR_PAT_BAK_NO(ext->ptmManorIcon);

  0007e	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
$LN12@drawCharSt:

; 979  : 					}
; 980  : 				}
; 981  : 				short x1, y1;
; 982  : 				if (è·åå¨ç»å°ºå¯¸(ptAct, &x1, &y1)) {

  00084	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _y1$8[ebp]
  0008a	50		 push	 eax
  0008b	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _x1$4[ebp]
  00091	50		 push	 eax
  00092	57		 push	 edi
  00093	e8 00 00 00 00	 call	 ??ö¢??ô©õ»@@YAHPAUaction@@PAF1@Z ; ?ö¢??ô©õ»
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	85 c0		 test	 eax, eax
  0009d	74 70		 je	 SHORT $LN121@drawCharSt

; 983  : 					int y = SpriteInfo[ptAct->bmpNo].height;

  0009f	8b 87 9c 00 00
	00		 mov	 eax, DWORD PTR [edi+156]

; 984  : 					ext->ptmManorIcon->x = ptAct->x;

  000a5	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]

; 985  : 					ext->ptmManorIcon->y = ptAct->y - y - 20;
; 986  : 					ext->ptmManorIcon->mx = ptAct->mx;
; 987  : 					ext->ptmManorIcon->my = ptAct->my;
; 988  : 					pattern(ext->ptmManorIcon, ANM_NOMAL_SPD, ANM_LOOP);

  000a8	6a 00		 push	 0
  000aa	6a 00		 push	 0
  000ac	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  000af	0f bf 14 85 06
	00 00 00	 movsx	 edx, WORD PTR ?SpriteInfo@@3PAUSPRITE_INFO@@A[eax*4+6]
  000b7	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  000ba	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  000bd	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  000c0	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  000c3	2b ca		 sub	 ecx, edx
  000c5	83 e9 14	 sub	 ecx, 20			; 00000014H
  000c8	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  000cb	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  000ce	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  000d4	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  000da	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  000dd	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  000e3	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  000e9	ff 73 18	 push	 DWORD PTR [ebx+24]
  000ec	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 989  : #ifdef _CAX_STOP_TEXIAO
; 990  : 					extern int stoptxkk;
; 991  : 					if (stoptxkk == 0) {
; 992  : #endif
; 993  : 						StockDispBuffer2(ext->ptmManorIcon->x, ext->ptmManorIcon->y, ext->ptmManorIcon->dispPrio, ext->ptmManorIcon->bmpNo, 0);

  000f1	8b 4b 18	 mov	 ecx, DWORD PTR [ebx+24]
  000f4	6a 00		 push	 0
  000f6	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  000fc	0f b6 41 15	 movzx	 eax, BYTE PTR [ecx+21]
  00100	50		 push	 eax
  00101	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00104	ff 71 18	 push	 DWORD PTR [ecx+24]
  00107	e8 00 00 00 00	 call	 ?StockDispBuffer2@@YAHHHEHH@Z ; StockDispBuffer2
  0010c	83 c4 20	 add	 esp, 32			; 00000020H
$LN121@drawCharSt:

; 994  : #ifdef _CAX_STOP_TEXIAO
; 995  : 					}
; 996  : #endif
; 997  : 				}
; 998  : 			}
; 999  : 		}
; 1000 : 	}
; 1001 : #endif
; 1002 : 
; 1003 : #ifdef äººç©ç§°å·
; 1004 : 	if (ext->ptTitleIcon) {//è¿éå é¤æå°±å¯ä»¥èµ°å¨æ¾ç¤º

  0010f	8b 43 1c	 mov	 eax, DWORD PTR [ebx+28]
  00112	56		 push	 esi
  00113	85 c0		 test	 eax, eax
  00115	0f 84 bf 00 00
	00		 je	 $LN122@drawCharSt

; 1005 : 		{
; 1006 : 			int äººç©å±è½å¼å³ = 0;
; 1007 : 			if (äººç©å±è½å¼å³ && ProcNo == PROC_GAME && pc.ptAct != ptAct) {
; 1008 : 				if (ATR_PAT_NO(ext->ptTitleIcon)) {
; 1009 : 					ATR_PAT_BAK_NO(ext->ptTitleIcon) = ATR_PAT_NO(ext->ptTitleIcon);
; 1010 : 					ATR_PAT_NO(ext->ptTitleIcon) = 0;
; 1011 : 				}
; 1012 : 			}else{
; 1013 : 				if (!ATR_PAT_NO(ext->ptTitleIcon)) {

  0011b	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  00122	75 10		 jne	 SHORT $LN19@drawCharSt

; 1014 : 					if (ATR_PAT_BAK_NO(ext->ptTitleIcon)) {

  00124	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  0012a	85 c9		 test	 ecx, ecx
  0012c	74 06		 je	 SHORT $LN19@drawCharSt

; 1015 : 						ATR_PAT_NO(ext->ptTitleIcon) = ATR_PAT_BAK_NO(ext->ptTitleIcon);

  0012e	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
$LN19@drawCharSt:

; 1016 : 					}
; 1017 : 				}
; 1018 : 				short x1, y1, x2, y2;
; 1019 : 				y2 = x2 = 0;
; 1020 : 				if (è·åå¨ç»å°ºå¯¸(ptAct, &x1, &y1)) {

  00134	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _y1$7[ebp]
  0013a	50		 push	 eax
  0013b	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _x1$3[ebp]
  00141	50		 push	 eax
  00142	57		 push	 edi
  00143	e8 00 00 00 00	 call	 ??ö¢??ô©õ»@@YAHPAUaction@@PAF1@Z ; ?ö¢??ô©õ»
  00148	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014b	85 c0		 test	 eax, eax
  0014d	0f 84 87 00 00
	00		 je	 $LN122@drawCharSt

; 1021 : 					ext->ptTitleIcon->x = ptAct->x;

  00153	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  00156	8b 47 18	 mov	 eax, DWORD PTR [edi+24]

; 1022 : 					ext->ptTitleIcon->y = ptAct->y;
; 1023 : 					ext->ptTitleIcon->mx = ptAct->mx;
; 1024 : 					ext->ptTitleIcon->my = ptAct->my;
; 1025 : 					pattern(ext->ptTitleIcon, ANM_NOMAL_SPD, ANM_LOOP);

  00159	6a 00		 push	 0
  0015b	6a 00		 push	 0
  0015d	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00160	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  00163	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00166	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00169	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  0016c	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00172	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  00178	8b 4b 1c	 mov	 ecx, DWORD PTR [ebx+28]
  0017b	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00181	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  00187	ff 73 1c	 push	 DWORD PTR [ebx+28]
  0018a	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1026 : 					//if (ext->ptFamilyIcon) {  //å®¶æå¾½ç« 
; 1027 : 					//	x2 = 10;
; 1028 : 					//}
; 1029 : #ifdef _CAX_STOP_TEXIAO
; 1030 : 					extern int stoptxkk;
; 1031 : 					if (stoptxkk == 0) {
; 1032 : #endif
; 1033 : 						setCharPrio(ext->ptTitleIcon->bmpNo,

  0018f	8b 73 1c	 mov	 esi, DWORD PTR [ebx+28]
  00192	83 c4 04	 add	 esp, 4
  00195	0f bf 85 c0 fe
	ff ff		 movsx	 eax, WORD PTR _y1$7[ebp]
  0019c	b9 d3 ff ff ff	 mov	 ecx, -45		; ffffffd3H
  001a1	99		 cdq
  001a2	2b c2		 sub	 eax, edx
  001a4	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  001ac	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  001b2	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  001ba	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001bf	d1 f8		 sar	 eax, 1
  001c1	2b c8		 sub	 ecx, eax
  001c3	51		 push	 ecx
  001c4	6a 00		 push	 0
  001c6	ff 76 1c	 push	 DWORD PTR [esi+28]
  001c9	ff 76 18	 push	 DWORD PTR [esi+24]
  001cc	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  001d2	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  001d7	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN122@drawCharSt:

; 1034 : 							ext->ptTitleIcon->x + x2, ext->ptTitleIcon->y, 0, -(y1 / 2 +45),
; 1035 : 							ext->ptTitleIcon->mx, ext->ptTitleIcon->my
; 1036 : #ifdef _SFUMATO
; 1037 : 							, ptAct->sfumato
; 1038 : #endif
; 1039 : 						);
; 1040 : 
; 1041 : 
; 1042 : 					}
; 1043 : #ifdef _CAX_STOP_TEXIAO
; 1044 : 				}
; 1045 : #endif
; 1046 : 			}
; 1047 : 		}
; 1048 : 	}
; 1049 : #endif
; 1050 : 
; 1051 : 
; 1052 : 	if( (status & CHR_STATUS_BATTLE) != 0 ){

  001da	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  001e0	f7 c6 00 04 00
	00		 test	 esi, 1024		; 00000400H
  001e6	0f 84 a4 00 00
	00		 je	 $LN21@drawCharSt

; 1053 : 		int no;
; 1054 : 		U4 bmpNo;
; 1055 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  001ec	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  001f2	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  001f7	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  001fd	f7 e9		 imul	 ecx

; 1056 : 		no %= 12;
; 1057 : 		realGetNo( battleIconTbl[(battleNo%10)][(sideNo%1)], &bmpNo );

  001ff	8b 8d c8 fe ff
	ff		 mov	 ecx, DWORD PTR _battleNo$1$[ebp]
  00205	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _bmpNo$2[ebp]
  0020b	c1 fa 03	 sar	 edx, 3
  0020e	50		 push	 eax
  0020f	8b f2		 mov	 esi, edx
  00211	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00216	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00219	03 f2		 add	 esi, edx
  0021b	f7 e9		 imul	 ecx
  0021d	c1 fa 02	 sar	 edx, 2
  00220	8b c2		 mov	 eax, edx
  00222	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00225	03 c2		 add	 eax, edx
  00227	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0022a	03 c0		 add	 eax, eax
  0022c	2b c8		 sub	 ecx, eax
  0022e	ff 34 cd 00 00
	00 00		 push	 DWORD PTR ?battleIconTbl@@3PAY01HA[ecx*8]
  00235	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1058 : 		setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );

  0023a	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  00242	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00247	f7 ee		 imul	 esi
  00249	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0024f	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  00257	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0025c	d1 fa		 sar	 edx, 1
  0025e	8b c2		 mov	 eax, edx
  00260	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00263	03 c2		 add	 eax, edx
  00265	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00268	c1 e0 02	 shl	 eax, 2
  0026b	2b f0		 sub	 esi, eax
  0026d	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  00274	6a 00		 push	 0
  00276	ff 77 1c	 push	 DWORD PTR [edi+28]
  00279	ff 77 18	 push	 DWORD PTR [edi+24]
  0027c	ff b5 b8 fe ff
	ff		 push	 DWORD PTR _bmpNo$2[ebp]
  00282	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00287	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  0028d	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN21@drawCharSt:

; 1059 : 	}
; 1060 : 	// Trade Mark
; 1061 : 	if( (status & CHR_STATUS_TRADE) != 0 ){

  00290	f7 c6 00 80 00
	00		 test	 esi, 32768		; 00008000H
  00296	0f 84 84 00 00
	00		 je	 $LN22@drawCharSt

; 1062 : 		int no;
; 1063 : 		U4 bmpNo;
; 1064 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  0029c	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  002a2	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  002a7	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  002ad	f7 e9		 imul	 ecx

; 1065 : 		no %= 12;
; 1066 : 		realGetNo( CG_TRADE_MARK, &bmpNo );		

  002af	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _bmpNo$15[ebp]
  002b5	c1 fa 03	 sar	 edx, 3
  002b8	8b f2		 mov	 esi, edx
  002ba	50		 push	 eax
  002bb	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  002be	68 86 66 00 00	 push	 26246			; 00006686H
  002c3	03 f2		 add	 esi, edx
  002c5	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1067 : 		setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );

  002ca	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  002d2	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  002d7	f7 ee		 imul	 esi
  002d9	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  002df	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  002e7	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  002ec	d1 fa		 sar	 edx, 1
  002ee	8b c2		 mov	 eax, edx
  002f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  002f3	03 c2		 add	 eax, edx
  002f5	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  002f8	c1 e0 02	 shl	 eax, 2
  002fb	2b f0		 sub	 esi, eax
  002fd	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  00304	6a 00		 push	 0
  00306	ff 77 1c	 push	 DWORD PTR [edi+28]
  00309	ff 77 18	 push	 DWORD PTR [edi+24]
  0030c	ff b5 c8 fe ff
	ff		 push	 DWORD PTR _bmpNo$15[ebp]
  00312	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00317	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  0031d	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN22@drawCharSt:

; 1068 : 	}
; 1069 : 
; 1070 : #ifdef _ANGEL_SUMMON
; 1071 : 	if( (status & CHR_STATUS_ANGEL) != 0  && ext->ptActAngelMark == NULL ) {

  00320	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00323	f7 c6 00 00 01
	00		 test	 esi, 65536		; 00010000H
  00329	0f 84 ed 00 00
	00		 je	 $LN111@drawCharSt
  0032f	85 c0		 test	 eax, eax
  00331	75 25		 jne	 SHORT $LN106@drawCharSt

; 1072 : 		//if( g_bUseAlpha )
; 1073 : 		//	ext->ptActAngelMark =createCommmonEffectAction( 101812, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR );  // JL fixå¾æ¡£å¯è½æéè¯¯
; 1074 : 		//else
; 1075 : 			ext->ptActAngelMark =createCommmonEffectAction( 101865, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR );

  00333	6a 0a		 push	 10			; 0000000aH
  00335	50		 push	 eax
  00336	50		 push	 eax
  00337	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  0033d	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  00343	68 e9 8d 01 00	 push	 101865			; 00018de9H
  00348	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  0034d	83 c4 18	 add	 esp, 24			; 00000018H
  00350	89 43 24	 mov	 DWORD PTR [ebx+36], eax
  00353	e9 d8 00 00 00	 jmp	 $LN27@drawCharSt
$LN106@drawCharSt:

; 1081 : 	}else if( (status & CHR_STATUS_ANGEL) != 0 && ext->ptActAngelMark != NULL ) {
; 1082 : 		int no;
; 1083 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  00358	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  0035e	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00363	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  00369	f7 e9		 imul	 ecx

; 1084 : 		no %= 12;	// î ??????î???
; 1085 : 		// ???????????????
; 1086 : 		ext->ptActAngelMark->x  = ptAct->x;

  0036b	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  0036e	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00371	c1 fa 03	 sar	 edx, 3

; 1087 : 		ext->ptActAngelMark->y  = ptAct->y + ptAct->anim_y + 140;
; 1088 : 		ext->ptActAngelMark->mx = ptAct->mx;
; 1089 : 		ext->ptActAngelMark->my = ptAct->my;
; 1090 : 		// ?????????
; 1091 : 		pattern( ext->ptActAngelMark, ANM_NOMAL_SPD, ANM_LOOP );

  00374	6a 00		 push	 0
  00376	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00379	8b f2		 mov	 esi, edx
  0037b	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  0037e	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  00384	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  00389	03 c8		 add	 ecx, eax
  0038b	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0038e	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00391	03 f2		 add	 esi, edx
  00393	6a 00		 push	 0
  00395	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  00398	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  0039b	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  003a1	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  003a7	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  003aa	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  003b0	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  003b6	ff 73 24	 push	 DWORD PTR [ebx+36]
  003b9	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1092 : 		// ??????????????
; 1093 : 		setCharPrio( ext->ptActAngelMark->bmpNo,

  003be	8b 4b 24	 mov	 ecx, DWORD PTR [ebx+36]
  003c1	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  003c6	f7 ee		 imul	 esi
  003c8	f3 0f 10 81 1c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+284]
  003d0	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  003d6	f3 0f 10 81 18
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+280]
  003de	83 c4 04	 add	 esp, 4
  003e1	d1 fa		 sar	 edx, 1
  003e3	8b c2		 mov	 eax, edx
  003e5	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  003e8	03 c2		 add	 eax, edx
  003ea	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  003ef	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  003f2	c1 e0 02	 shl	 eax, 2
  003f5	2b f0		 sub	 esi, eax
  003f7	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  003fe	6a 00		 push	 0
  00400	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00403	ff 71 18	 push	 DWORD PTR [ecx+24]
  00406	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  0040c	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00411	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  00417	83 c4 1c	 add	 esp, 28			; 0000001cH
  0041a	eb 14		 jmp	 SHORT $LN27@drawCharSt
$LN111@drawCharSt:

; 1076 : 
; 1077 : 	}else if( (status & CHR_STATUS_ANGEL) == 0 && ext->ptActAngelMark != NULL ) {

  0041c	85 c0		 test	 eax, eax
  0041e	74 10		 je	 SHORT $LN27@drawCharSt

; 1078 : 		// ???????î¸î???????î
; 1079 : 		DeathAction( ext->ptActAngelMark );

  00420	50		 push	 eax
  00421	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00426	83 c4 04	 add	 esp, 4

; 1080 : 		ext->ptActAngelMark = NULL;

  00429	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
$LN27@drawCharSt:

; 1094 : 			ext->ptActAngelMark->x, ext->ptActAngelMark->y, 0, charIconOffsetY[no],
; 1095 : 				ext->ptActAngelMark->mx, ext->ptActAngelMark->my );
; 1096 : 	}
; 1097 : #endif
; 1098 : 	if( (status & CHR_STATUS_WATCH) != 0 ){

  00430	f7 c6 00 40 00
	00		 test	 esi, 16384		; 00004000H
  00436	0f 84 84 00 00
	00		 je	 $LN28@drawCharSt

; 1099 : 		int no;
; 1100 : 		U4 bmpNo;
; 1101 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  0043c	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  00442	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00447	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  0044d	f7 e9		 imul	 ecx

; 1102 : 		no %= 12;
; 1103 : 		realGetNo( CG_ICON_WATCHING, &bmpNo );

  0044f	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _bmpNo$14[ebp]
  00455	c1 fa 03	 sar	 edx, 3
  00458	8b f2		 mov	 esi, edx
  0045a	50		 push	 eax
  0045b	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  0045e	68 87 67 00 00	 push	 26503			; 00006787H
  00463	03 f2		 add	 esi, edx
  00465	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1104 : 		setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );

  0046a	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  00472	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00477	f7 ee		 imul	 esi
  00479	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0047f	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  00487	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0048c	d1 fa		 sar	 edx, 1
  0048e	8b c2		 mov	 eax, edx
  00490	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00493	03 c2		 add	 eax, edx
  00495	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00498	c1 e0 02	 shl	 eax, 2
  0049b	2b f0		 sub	 esi, eax
  0049d	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  004a4	6a 00		 push	 0
  004a6	ff 77 1c	 push	 DWORD PTR [edi+28]
  004a9	ff 77 18	 push	 DWORD PTR [edi+24]
  004ac	ff b5 c8 fe ff
	ff		 push	 DWORD PTR _bmpNo$14[ebp]
  004b2	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  004b7	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  004bd	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN28@drawCharSt:

; 1105 : 	}
; 1106 : 	if( (status & CHR_STATUS_HELP) != 0 ){

  004c0	f7 c6 00 10 00
	00		 test	 esi, 4096		; 00001000H
  004c6	0f 84 88 00 00
	00		 je	 $LN29@drawCharSt

; 1107 : 		int no;
; 1108 : 		U4 bmpNo;
; 1109 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  004cc	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  004d2	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  004d7	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  004dd	f7 e9		 imul	 ecx

; 1110 : 		no %= 12;
; 1111 : 		realGetNo( CG_SPEECH_HELP, &bmpNo );

  004df	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _bmpNo$13[ebp]
  004e5	c1 fa 03	 sar	 edx, 3
  004e8	8b f2		 mov	 esi, edx
  004ea	50		 push	 eax
  004eb	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  004ee	68 b5 63 00 00	 push	 25525			; 000063b5H
  004f3	03 f2		 add	 esi, edx
  004f5	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1112 : 		setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no]-20, ptAct->mx, ptAct->my );

  004fa	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  00502	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00507	f7 ee		 imul	 esi
  00509	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0050f	f3 0f 10 87 18
	01 00 00	 movss	 xmm0, DWORD PTR [edi+280]
  00517	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0051c	d1 fa		 sar	 edx, 1
  0051e	8b c2		 mov	 eax, edx
  00520	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00523	03 c2		 add	 eax, edx
  00525	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00528	c1 e0 02	 shl	 eax, 2
  0052b	2b f0		 sub	 esi, eax
  0052d	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  00534	83 e8 14	 sub	 eax, 20			; 00000014H
  00537	50		 push	 eax
  00538	6a 00		 push	 0
  0053a	ff 77 1c	 push	 DWORD PTR [edi+28]
  0053d	ff 77 18	 push	 DWORD PTR [edi+24]
  00540	ff b5 c8 fe ff
	ff		 push	 DWORD PTR _bmpNo$13[ebp]
  00546	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  0054b	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  00551	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN29@drawCharSt:

; 1113 : 	}
; 1114 : 	if( (status & CHR_STATUS_LEADER) != 0
; 1115 : 	 && ext->ptActLeaderMark == NULL
; 1116 : 	 && ((status & CHR_STATUS_BATTLE) == 0 || (status & CHR_STATUS_WATCH) == 0) ){

  00554	8b ce		 mov	 ecx, esi
  00556	81 e1 00 01 00
	00		 and	 ecx, 256		; 00000100H
  0055c	74 3b		 je	 SHORT $LN30@drawCharSt
  0055e	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  00562	75 35		 jne	 SHORT $LN30@drawCharSt
  00564	8b c6		 mov	 eax, esi
  00566	25 00 44 00 00	 and	 eax, 17408		; 00004400H
  0056b	3d 00 44 00 00	 cmp	 eax, 17408		; 00004400H
  00570	74 27		 je	 SHORT $LN30@drawCharSt

; 1117 : 		ext->ptActLeaderMark =

  00572	6a 0a		 push	 10			; 0000000aH
  00574	6a 00		 push	 0
  00576	6a 00		 push	 0
  00578	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  0057e	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  00584	68 94 88 01 00	 push	 100500			; 00018894H
  00589	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  0058e	83 c4 18	 add	 esp, 24			; 00000018H
  00591	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 1118 : 			createCommmonEffectAction( SPR_leader, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR );
; 1119 : 	}else if( ((status & CHR_STATUS_LEADER) == 0 || (status & CHR_STATUS_BATTLE) != 0)

  00594	e9 f1 00 00 00	 jmp	 $LN36@drawCharSt
$LN30@drawCharSt:
  00599	8b c6		 mov	 eax, esi
  0059b	25 00 05 00 00	 and	 eax, 1280		; 00000500H
  005a0	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H

; 1120 : 	 && ext->ptActLeaderMark != NULL ){

  005a5	74 1c		 je	 SHORT $LN113@drawCharSt
  005a7	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  005aa	85 c0		 test	 eax, eax
  005ac	74 15		 je	 SHORT $LN113@drawCharSt

; 1121 : 		DeathAction( ext->ptActLeaderMark );

  005ae	50		 push	 eax
  005af	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  005b4	83 c4 04	 add	 esp, 4

; 1122 : 		ext->ptActLeaderMark = NULL;

  005b7	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  005be	e9 c7 00 00 00	 jmp	 $LN36@drawCharSt
$LN113@drawCharSt:

; 1123 : 	}else if( (status & CHR_STATUS_LEADER) != 0 && ext->ptActLeaderMark != NULL ){

  005c3	85 c9		 test	 ecx, ecx
  005c5	0f 84 bf 00 00
	00		 je	 $LN36@drawCharSt
  005cb	83 7b 08 00	 cmp	 DWORD PTR [ebx+8], 0
  005cf	0f 84 b5 00 00
	00		 je	 $LN36@drawCharSt

; 1124 : 		int no;
; 1125 : 		no = (ptAct->anim_chr_no - SPR_001em) / 20;

  005d5	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  005db	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  005e0	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  005e6	f7 e9		 imul	 ecx

; 1126 : 		no %= 12;
; 1127 : 		ext->ptActLeaderMark->x  = ptAct->x;

  005e8	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  005eb	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  005ee	c1 fa 03	 sar	 edx, 3

; 1128 : 		ext->ptActLeaderMark->y  = ptAct->y;
; 1129 : 		ext->ptActLeaderMark->mx = ptAct->mx;
; 1130 : 		ext->ptActLeaderMark->my = ptAct->my;
; 1131 : 		pattern( ext->ptActLeaderMark, ANM_NOMAL_SPD, ANM_LOOP );

  005f1	6a 00		 push	 0
  005f3	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  005f6	8b f2		 mov	 esi, edx
  005f8	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  005fb	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  005fe	6a 00		 push	 0
  00600	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00603	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00606	03 f2		 add	 esi, edx
  00608	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0060b	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00611	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  00617	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  0061a	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00620	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  00626	ff 73 08	 push	 DWORD PTR [ebx+8]
  00629	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1132 : 		setCharPrio( ext->ptActLeaderMark->bmpNo,

  0062e	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00631	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00636	f7 ee		 imul	 esi
  00638	f3 0f 10 81 1c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+284]
  00640	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00646	f3 0f 10 81 18
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+280]
  0064e	83 c4 04	 add	 esp, 4
  00651	d1 fa		 sar	 edx, 1
  00653	8b c2		 mov	 eax, edx
  00655	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00658	03 c2		 add	 eax, edx
  0065a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0065f	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00662	c1 e0 02	 shl	 eax, 2
  00665	2b f0		 sub	 esi, eax
  00667	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  0066e	6a 00		 push	 0
  00670	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00673	ff 71 18	 push	 DWORD PTR [ecx+24]
  00676	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  0067c	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00681	8b b5 c4 fe ff
	ff		 mov	 esi, DWORD PTR _status$1$[ebp]
  00687	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN36@drawCharSt:

; 1133 : 			ext->ptActLeaderMark->x, ext->ptActLeaderMark->y, 0, charIconOffsetY[no],
; 1134 : 				ext->ptActLeaderMark->mx, ext->ptActLeaderMark->my );
; 1135 : 	}
; 1136 : 	if( (status & CHR_STATUS_USE_MAGIC) != 0 && ext->ptActMagicEffect == NULL ){

  0068a	f7 c6 00 08 00
	00		 test	 esi, 2048		; 00000800H
  00690	74 4c		 je	 SHORT $LN114@drawCharSt
  00692	83 7b 0c 00	 cmp	 DWORD PTR [ebx+12], 0
  00696	75 46		 jne	 SHORT $LN114@drawCharSt

; 1137 : 		ext->ptActMagicEffect =

  00698	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  0069e	6a 0a		 push	 10			; 0000000aH
  006a0	6a 00		 push	 0
  006a2	6a 00		 push	 0
  006a4	40		 inc	 eax
  006a5	50		 push	 eax
  006a6	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  006ac	68 f8 88 01 00	 push	 100600			; 000188f8H
  006b1	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  006b6	89 43 0c	 mov	 DWORD PTR [ebx+12], eax
  006b9	83 c4 18	 add	 esp, 24			; 00000018H

; 1138 : 			createCommmonEffectAction( SPR_effect01, ptAct->gx, ptAct->gy+1, 0, 0, DISP_PRIO_CHAR );
; 1139 : 		if( pc.ptAct != NULL && pc.ptAct == ptAct )

  006bc	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  006c1	85 c0		 test	 eax, eax
  006c3	74 0e		 je	 SHORT $LN39@drawCharSt
  006c5	3b c7		 cmp	 eax, edi
  006c7	75 0a		 jne	 SHORT $LN39@drawCharSt

; 1140 : 			delPcUseMagic();

  006c9	e8 00 00 00 00	 call	 ?delPcUseMagic@@YAXXZ	; delPcUseMagic
  006ce	e9 a1 00 00 00	 jmp	 $LN43@drawCharSt
$LN39@drawCharSt:

; 1141 : 		else
; 1142 : 			delCharUseMagic( ptAct );

  006d3	57		 push	 edi
  006d4	e8 00 00 00 00	 call	 ?delCharUseMagic@@YAXPAUaction@@@Z ; delCharUseMagic
  006d9	e9 93 00 00 00	 jmp	 $LN133@drawCharSt
$LN114@drawCharSt:

; 1143 : 	}else if( ext->ptActMagicEffect != NULL ){

  006de	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  006e1	85 c9		 test	 ecx, ecx
  006e3	0f 84 8b 00 00
	00		 je	 $LN43@drawCharSt

; 1144 : 		ext->ptActMagicEffect->x  = ptAct->x;

  006e9	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  006ec	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1145 : 		ext->ptActMagicEffect->y  = ptAct->y;

  006ef	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  006f2	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]

; 1146 : 		ext->ptActMagicEffect->mx = ptAct->mx;
; 1147 : 		ext->ptActMagicEffect->my = ptAct->my;
; 1148 : 		if( pattern( ext->ptActMagicEffect, ANM_NOMAL_SPD, ANM_NO_LOOP ) == 0 ){

  006f5	6a 01		 push	 1
  006f7	6a 00		 push	 0
  006f9	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  006fc	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  006ff	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00705	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  0070b	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  0070e	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00714	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  0071a	ff 73 0c	 push	 DWORD PTR [ebx+12]
  0071d	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00722	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00725	83 c4 0c	 add	 esp, 12			; 0000000cH
  00728	85 c0		 test	 eax, eax
  0072a	75 38		 jne	 SHORT $LN42@drawCharSt

; 1149 : 			setCharPrio( ext->ptActMagicEffect->bmpNo,

  0072c	f3 0f 10 81 1c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+284]
  00734	83 ec 08	 sub	 esp, 8
  00737	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0073d	f3 0f 10 81 18
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+280]
  00745	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0074a	50		 push	 eax
  0074b	50		 push	 eax
  0074c	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0074f	40		 inc	 eax
  00750	50		 push	 eax
  00751	ff 71 18	 push	 DWORD PTR [ecx+24]
  00754	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  0075a	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  0075f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1150 : 				ext->ptActMagicEffect->x, ext->ptActMagicEffect->y+1, 0, 0,
; 1151 : 				ext->ptActMagicEffect->mx, ext->ptActMagicEffect->my );
; 1152 : 		}else{

  00762	eb 10		 jmp	 SHORT $LN43@drawCharSt
$LN42@drawCharSt:

; 1153 : 			DeathAction( ext->ptActMagicEffect );

  00764	51		 push	 ecx
  00765	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1154 : 			ext->ptActMagicEffect = NULL;

  0076a	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
$LN133@drawCharSt:

; 1155 : 		}
; 1156 : 	}
; 1157 : 	if( (status & CHR_STATUS_FUKIDASHI) != 0 ){

  00771	83 c4 04	 add	 esp, 4
$LN43@drawCharSt:
  00774	f7 c6 00 20 00
	00		 test	 esi, 8192		; 00002000H
  0077a	0f 84 9e 00 00
	00		 je	 $LN123@drawCharSt

; 1158 : 		if( ext->drawFukidashiTime > TimeGetTime() ){

  00780	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00785	39 43 04	 cmp	 DWORD PTR [ebx+4], eax
  00788	0f 86 90 00 00
	00		 jbe	 $LN123@drawCharSt

; 1159 : 			int no;
; 1160 : 			U4 bmpNo;
; 1161 : 			realGetNo( CG_ICON_FUKIDASI, &bmpNo );

  0078e	8d 85 c8 fe ff
	ff		 lea	 eax, DWORD PTR _bmpNo$12[ebp]
  00794	50		 push	 eax
  00795	68 84 67 00 00	 push	 26500			; 00006784H
  0079a	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1162 : 			if( SPR_001em <= ptAct->anim_chr_no && ptAct->anim_chr_no <= SPR_114bw ){

  0079f	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  007a5	83 c4 08	 add	 esp, 8
  007a8	f3 0f 10 87 1c
	01 00 00	 movss	 xmm0, DWORD PTR [edi+284]
  007b0	83 ec 08	 sub	 esp, 8
  007b3	f3 0f 10 8f 18
	01 00 00	 movss	 xmm1, DWORD PTR [edi+280]
  007bb	81 c1 60 79 fe
	ff		 add	 ecx, -100000		; fffe7960H
  007c1	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  007c7	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  007cc	81 f9 ef 00 00
	00		 cmp	 ecx, 239		; 000000efH
  007d2	77 32		 ja	 SHORT $LN47@drawCharSt

; 1163 : 				no = (ptAct->anim_chr_no - SPR_001em) / 20;

  007d4	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  007d9	f7 e9		 imul	 ecx

; 1164 : 				no %= 12;

  007db	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  007e0	c1 fa 03	 sar	 edx, 3
  007e3	8b ca		 mov	 ecx, edx
  007e5	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  007e8	03 ca		 add	 ecx, edx
  007ea	f7 e9		 imul	 ecx
  007ec	d1 fa		 sar	 edx, 1
  007ee	8b c2		 mov	 eax, edx
  007f0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  007f3	03 c2		 add	 eax, edx
  007f5	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  007f8	c1 e0 02	 shl	 eax, 2

; 1165 : 				setCharPrio( bmpNo, ptAct->x, ptAct->y, 20, charIconOffsetY[no], ptAct->mx, ptAct->my );

  007fb	2b c8		 sub	 ecx, eax
  007fd	ff 34 8d 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[ecx*4]

; 1166 : 			}else{

  00804	eb 02		 jmp	 SHORT $LN134@drawCharSt
$LN47@drawCharSt:

; 1167 : 				setCharPrio( bmpNo, ptAct->x, ptAct->y, 20, -84, ptAct->mx, ptAct->my );

  00806	6a ac		 push	 -84			; ffffffacH
$LN134@drawCharSt:

; 1168 : 			}
; 1169 : 		}else
; 1170 : 			status &= (~CHR_STATUS_FUKIDASHI);
; 1171 : 	}
; 1172 : #ifdef _NB_æå­ç§°å·
; 1173 : 	extern void PutTitleText(int x,int y,char fontPrio,TITLE_STR str,BOOL hitFlag);
; 1174 : 	CHAREXTRA *ext1 = (CHAREXTRA *)ptAct->pYobi;
; 1175 : 	if(ext1){
; 1176 : 		if(!ext1->ptStreetVendor){
; 1177 : 			if(strlen(ptAct->nb_name)>0){
; 1178 : 				short x1,y1;
; 1179 : 				if(è·åå¨ç»å°ºå¯¸(ptAct,&x1,&y1)){
; 1180 : 					StockFontBuffer( ptAct->x-GetStrWidth( ptAct->nb_name )/2, ptAct->y - (y1/2+45), FONT_PRIO_BACK, ptAct->nb_namecolor, ptAct->nb_name, 0 );
; 1181 : 				}
; 1182 : 			}	
; 1183 : 		}
; 1184 : 	}
; 1185 : #endif
; 1186 : 	if( nameOverTheHeadFlag
; 1187 : 	 && ptAct != pc.ptAct
; 1188 : 	 && (ptAct->atr & (ACT_ATR_TYPE_PC | ACT_ATR_TYPE_OTHER_PC | ACT_ATR_TYPE_PET | ACT_ATR_TYPE_OTHER))
; 1189 : 	 && ptAct->anim_chr_no != 999 ){

  00808	6a 14		 push	 20			; 00000014H
  0080a	ff 77 1c	 push	 DWORD PTR [edi+28]
  0080d	ff 77 18	 push	 DWORD PTR [edi+24]
  00810	ff b5 c8 fe ff
	ff		 push	 DWORD PTR _bmpNo$12[ebp]
  00816	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  0081b	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN123@drawCharSt:
  0081e	66 83 3d 00 00
	00 00 00	 cmp	 WORD PTR ?nameOverTheHeadFlag@@3FA, 0 ; nameOverTheHeadFlag
  00826	0f 84 e6 00 00
	00		 je	 $LN49@drawCharSt
  0082c	3b 3d ec 50 00
	00		 cmp	 edi, DWORD PTR ?pc@@3UPC@@A+20716
  00832	0f 84 da 00 00
	00		 je	 $LN49@drawCharSt
  00838	8b 87 a4 00 00
	00		 mov	 eax, DWORD PTR [edi+164]
  0083e	a9 80 13 00 00	 test	 eax, 4992		; 00001380H
  00843	0f 84 c9 00 00
	00		 je	 $LN49@drawCharSt
  00849	81 bf 44 01 00
	00 e7 03 00 00	 cmp	 DWORD PTR [edi+324], 999 ; 000003e7H
  00853	0f 84 b9 00 00
	00		 je	 $LN49@drawCharSt

; 1190 : 		if( (ptAct->atr & ACT_ATR_TYPE_PET) && strlen( ptAct->freeName ) > 0 )

  00859	a9 00 02 00 00	 test	 eax, 512		; 00000200H
  0085e	74 13		 je	 SHORT $LN50@drawCharSt
  00860	8d 57 55	 lea	 edx, DWORD PTR [edi+85]
  00863	8b ca		 mov	 ecx, edx
  00865	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL119@drawCharSt:
  00868	8a 01		 mov	 al, BYTE PTR [ecx]
  0086a	41		 inc	 ecx
  0086b	84 c0		 test	 al, al
  0086d	75 f9		 jne	 SHORT $LL119@drawCharSt
  0086f	2b ce		 sub	 ecx, esi
  00871	75 54		 jne	 SHORT $LN51@drawCharSt
$LN50@drawCharSt:

; 1191 : 			sprintf( msg, "%s", ptAct->freeName );
; 1192 : 		else{
; 1193 : 				sprintf( msg, "%s", ptAct->fmname);

  00873	8d 87 70 01 00
	00		 lea	 eax, DWORD PTR [edi+368]
  00879	50		 push	 eax
  0087a	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00880	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00885	50		 push	 eax
  00886	e8 00 00 00 00	 call	 _sprintf

; 1194 : 				StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-23, FONT_PRIO_BACK, ptAct->charNameColor, msg, 0 );

  0088b	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00891	50		 push	 eax
  00892	e8 00 00 00 00	 call	 ?GetStrWidth@@YAHPAD@Z	; GetStrWidth
  00897	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  0089a	99		 cdq
  0089b	83 e9 17	 sub	 ecx, 23			; 00000017H
  0089e	2b c2		 sub	 eax, edx
  008a0	8b d0		 mov	 edx, eax
  008a2	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  008a8	6a 00		 push	 0
  008aa	50		 push	 eax
  008ab	ff b7 98 00 00
	00		 push	 DWORD PTR [edi+152]
  008b1	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  008b4	d1 fa		 sar	 edx, 1
  008b6	6a 00		 push	 0
  008b8	51		 push	 ecx
  008b9	2b c2		 sub	 eax, edx
  008bb	50		 push	 eax
  008bc	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  008c1	83 c4 28	 add	 esp, 40			; 00000028H

; 1195 : 
; 1196 : #ifdef _F11_SHOW_ID
; 1197 : 				char *lssproto_cnv10to62(int a, char *out, int outlen);
; 1198 : 				char c62[20];
; 1199 : 				lssproto_cnv10to62(ptAct->objIndex, c62, 20);
; 1200 : 				sprintf(msg, "%s %s(%d)", ptAct->name, c62, ptAct->objIndex);
; 1201 : #else
; 1202 : 				sprintf(msg, "%s", ptAct->name);

  008c4	8d 57 38	 lea	 edx, DWORD PTR [edi+56]
$LN51@drawCharSt:

; 1203 : #endif // _F11_SHOW_ID
; 1204 : 		}
; 1205 : 		StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-10, FONT_PRIO_BACK, ptAct->charNameColor, msg, 0 );

  008c7	52		 push	 edx
  008c8	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  008ce	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  008d3	50		 push	 eax
  008d4	e8 00 00 00 00	 call	 _sprintf
  008d9	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  008df	50		 push	 eax
  008e0	e8 00 00 00 00	 call	 ?GetStrWidth@@YAHPAD@Z	; GetStrWidth
  008e5	8b 4f 1c	 mov	 ecx, DWORD PTR [edi+28]
  008e8	99		 cdq
  008e9	83 e9 0a	 sub	 ecx, 10			; 0000000aH
  008ec	2b c2		 sub	 eax, edx
  008ee	8b d0		 mov	 edx, eax
  008f0	8d 85 f0 fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  008f6	6a 00		 push	 0
  008f8	50		 push	 eax
  008f9	ff b7 98 00 00
	00		 push	 DWORD PTR [edi+152]
  008ff	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00902	d1 fa		 sar	 edx, 1
  00904	6a 00		 push	 0
  00906	51		 push	 ecx
  00907	2b c2		 sub	 eax, edx
  00909	50		 push	 eax
  0090a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0090f	83 c4 28	 add	 esp, 40			; 00000028H
$LN49@drawCharSt:

; 1206 : 	}
; 1207 : 
; 1208 : #ifdef _GM_MARK				   // WON ADD GM è¯å«
; 1209 : 	{
; 1210 : 		int graNo = ptAct->anim_chr_no ;
; 1211 : 
; 1212 : 		//ä¸ç§ï¼§ï¼­é å½¢
; 1213 : 		if( (graNo == 100420) || (graNo == 100425) || (graNo == 100445) ){
; 1214 : 			static count1=1, count2=0;
; 1215 : 			char msg[256];
; 1216 : 
; 1217 : 			if(count1 >10 ) count1=1;
; 1218 : 			if(count2 >15 ){				
; 1219 : 				count1++;
; 1220 : 				count2=0;
; 1221 : 			}
; 1222 : 
; 1223 : 			count2++;
; 1224 : 			sprintf( msg , "ï¼§ï¼­");
; 1225 : 			StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110, FONT_PRIO_BACK, count1, msg, 1);	
; 1226 : 		}
; 1227 : 	}
; 1228 : #endif
; 1229 : 
; 1230 : #ifdef _GM_IDENTIFY		// Rog ADD GMè¯å«
; 1231 : 		int i;
; 1232 : 		sprintf( msg , ptAct->gm_name);
; 1233 :         for(i=2;i>0;i--)
; 1234 : 	        StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110-i, FONT_PRIO_BACK, i , msg, 1);
; 1235 : #endif
; 1236 : 
; 1237 : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸
; 1238 : 
; 1239 : //	if( ptAct->profession_class != 0 ){
; 1240 : 	{
; 1241 : 		char msg[10];
; 1242 : 
; 1243 : 		switch(pc.profession_class){

  00912	a1 84 a1 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+41348
  00917	83 f8 03	 cmp	 eax, 3
  0091a	77 2d		 ja	 SHORT $LN2@drawCharSt
  0091c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN120@drawCharSt[eax*4]
$LN52@drawCharSt:

; 1244 : 		case 0:		sprintf( msg , "");	break;

  00923	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  00928	eb 13		 jmp	 SHORT $LN135@drawCharSt
$LN53@drawCharSt:

; 1245 : 		case 1:		sprintf( msg , "ç½ç¼åå£«");	break;

  0092a	68 00 00 00 00	 push	 OFFSET ??_C@_08BFELEGJK@?$NL?$NM?U?I?i?$LI?$NO?M@
  0092f	eb 0c		 jmp	 SHORT $LN135@drawCharSt
$LN54@drawCharSt:

; 1246 : 		case 2:		sprintf( msg , "éçµæ³å¸");	break;

  00931	68 00 00 00 00	 push	 OFFSET ??_C@_06HDNHFODD@?d?a?$DP?$NL?v?$DP@
  00936	eb 05		 jmp	 SHORT $LN135@drawCharSt
$LN55@drawCharSt:

; 1247 : 		case 3:		sprintf( msg , "è¿½çè");	break;

  00938	68 00 00 00 00	 push	 OFFSET ??_C@_05NPHPFMDI@?u?Z?$DP?m?$LK@
$LN135@drawCharSt:

; 1248 : 		}
; 1249 : 		sprintf( pc.profession_class_name , "%s" , msg ) ; 

  0093d	8d 45 f0	 lea	 eax, DWORD PTR _msg$18[ebp]
  00940	50		 push	 eax
  00941	e8 00 00 00 00	 call	 _sprintf
  00946	83 c4 08	 add	 esp, 8
$LN2@drawCharSt:
  00949	8d 45 f0	 lea	 eax, DWORD PTR _msg$18[ebp]
  0094c	50		 push	 eax
  0094d	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00952	68 90 a1 00 00	 push	 OFFSET ?pc@@3UPC@@A+41360
  00957	e8 00 00 00 00	 call	 _sprintf

; 1250 : 		//StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110, FONT_PRIO_BACK, FONT_PAL_YELLOW, msg, 1);
; 1251 : 		//StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110, FONT_PRIO_BACK, FONT_PAL_YELLOW, msg, 1);
; 1252 : 		//StockDispBuffer( ptAct->x-GetStrWidth( msg )/2 + 30, ptAct->y-90 , DISP_PRIO_IME3, CG_WAR_ICON_SMALL + pc.profession_class - 1, 0 );
; 1253 : 						
; 1254 : 	}
; 1255 : 
; 1256 : #endif
; 1257 : 
; 1258 : #ifdef _AniCharBubble	   // Syu ADD å¨ç»å±äººç©ååºæ°æ³¡
; 1259 : 	if ( ( (nowFloor == 817) || (nowFloor == 8007) || (nowFloor == 8101) || (nowFloor == 8100) ||
; 1260 : 		(nowFloor == 8027) || (nowFloor == 8028) || (nowFloor == 8029) || nowFloor == 8113 || nowFloor == 8114 ||
; 1261 : 		(nowFloor == 8015) ) && (popflag == false) && (waittimeflag == false))

  0095c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
  00962	83 c4 0c	 add	 esp, 12			; 0000000cH
  00965	81 f9 31 03 00
	00		 cmp	 ecx, 817		; 00000331H
  0096b	74 4c		 je	 SHORT $LN57@drawCharSt
  0096d	81 f9 47 1f 00
	00		 cmp	 ecx, 8007		; 00001f47H
  00973	74 44		 je	 SHORT $LN57@drawCharSt
  00975	81 f9 a5 1f 00
	00		 cmp	 ecx, 8101		; 00001fa5H
  0097b	74 3c		 je	 SHORT $LN57@drawCharSt
  0097d	81 f9 a4 1f 00
	00		 cmp	 ecx, 8100		; 00001fa4H
  00983	74 34		 je	 SHORT $LN57@drawCharSt
  00985	81 f9 5b 1f 00
	00		 cmp	 ecx, 8027		; 00001f5bH
  0098b	74 2c		 je	 SHORT $LN57@drawCharSt
  0098d	81 f9 5c 1f 00
	00		 cmp	 ecx, 8028		; 00001f5cH
  00993	74 24		 je	 SHORT $LN57@drawCharSt
  00995	81 f9 5d 1f 00
	00		 cmp	 ecx, 8029		; 00001f5dH
  0099b	74 1c		 je	 SHORT $LN57@drawCharSt
  0099d	81 f9 b1 1f 00
	00		 cmp	 ecx, 8113		; 00001fb1H
  009a3	74 14		 je	 SHORT $LN57@drawCharSt
  009a5	81 f9 b2 1f 00
	00		 cmp	 ecx, 8114		; 00001fb2H
  009ab	74 0c		 je	 SHORT $LN57@drawCharSt
  009ad	81 f9 4f 1f 00
	00		 cmp	 ecx, 8015		; 00001f4fH
  009b3	0f 85 5a 02 00
	00		 jne	 $LN126@drawCharSt
$LN57@drawCharSt:
  009b9	80 3d 00 00 00
	00 00		 cmp	 BYTE PTR ?popflag@@3_NA, 0 ; popflag
  009c0	0f 85 4d 02 00
	00		 jne	 $LN126@drawCharSt
  009c6	a0 00 00 00 00	 mov	 al, BYTE PTR ?waittimeflag@@3_NA ; waittimeflag
  009cb	84 c0		 test	 al, al
  009cd	0f 85 86 00 00
	00		 jne	 $LN127@drawCharSt

; 1262 : 	{
; 1263 : 		RandAnimate = RAND ( 101508 , 101509 );  //éæºéåå·¦æ°æ³¡æå³æ°æ³¡

  009d3	e8 00 00 00 00	 call	 _rand

; 1264 : 		if ( popAct == NULL )  

  009d8	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?popAct@@3PAUaction@@A
  009de	66 0f 6e c0	 movd	 xmm0, eax
  009e2	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  009e6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@c000000000000000
  009ee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3f00000000000000
  009f6	f2 0f 2c c0	 cvttsd2si eax, xmm0
  009fa	85 d2		 test	 edx, edx
  009fc	75 50		 jne	 SHORT $LN124@drawCharSt

; 1265 : 		{
; 1266 : 			//åå·¦ãå³æ°æ³¡äº§çæ¶éè¦çåç§»å¼
; 1267 : 			if( RandAnimate == 101508 )  

  009fe	85 c0		 test	 eax, eax
  00a00	75 19		 jne	 SHORT $LN59@drawCharSt

; 1268 : 				popAct = createWaterAnimation( RandAnimate , nowGx + 2 , nowGy - 1 , 30 );

  00a02	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00a07	6a 1e		 push	 30			; 0000001eH
  00a09	48		 dec	 eax
  00a0a	50		 push	 eax
  00a0b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00a10	83 c0 02	 add	 eax, 2
  00a13	50		 push	 eax
  00a14	68 84 8c 01 00	 push	 101508			; 00018c84H

; 1269 : 			if( RandAnimate == 101509 )

  00a19	eb 1c		 jmp	 SHORT $LN136@drawCharSt
$LN59@drawCharSt:
  00a1b	83 f8 ff	 cmp	 eax, -1
  00a1e	75 27		 jne	 SHORT $LN60@drawCharSt

; 1270 : 				popAct = createWaterAnimation( RandAnimate , nowGx + 1 , nowGy - 2 , 30 );

  00a20	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00a25	6a 1e		 push	 30			; 0000001eH
  00a27	83 c0 fe	 add	 eax, -2			; fffffffeH
  00a2a	50		 push	 eax
  00a2b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00a30	40		 inc	 eax
  00a31	50		 push	 eax
  00a32	68 85 8c 01 00	 push	 101509			; 00018c85H
$LN136@drawCharSt:

; 1271 : 			popflag = true;

  00a37	e8 00 00 00 00	 call	 ?createWaterAnimation@@YAPAUaction@@HHHH@Z ; createWaterAnimation
  00a3c	8b d0		 mov	 edx, eax
  00a3e	83 c4 10	 add	 esp, 16			; 00000010H
  00a41	89 15 00 00 00
	00		 mov	 DWORD PTR ?popAct@@3PAUaction@@A, edx
$LN60@drawCharSt:
  00a47	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?popflag@@3_NA, 1 ; popflag
$LN124@drawCharSt:

; 1272 : 		}
; 1273 : 	}
; 1274 : 	if ( waittimeflag == false && popAct != NULL)

  00a4e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
  00a54	e9 c0 01 00 00	 jmp	 $LN58@drawCharSt
$LN127@drawCharSt:

; 1250 : 		//StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110, FONT_PRIO_BACK, FONT_PAL_YELLOW, msg, 1);
; 1251 : 		//StockFontBuffer( ptAct->x-GetStrWidth( msg )/2, ptAct->y-110, FONT_PRIO_BACK, FONT_PAL_YELLOW, msg, 1);
; 1252 : 		//StockDispBuffer( ptAct->x-GetStrWidth( msg )/2 + 30, ptAct->y-90 , DISP_PRIO_IME3, CG_WAR_ICON_SMALL + pc.profession_class - 1, 0 );
; 1253 : 						
; 1254 : 	}
; 1255 : 
; 1256 : #endif
; 1257 : 
; 1258 : #ifdef _AniCharBubble	   // Syu ADD å¨ç»å±äººç©ååºæ°æ³¡
; 1259 : 	if ( ( (nowFloor == 817) || (nowFloor == 8007) || (nowFloor == 8101) || (nowFloor == 8100) ||
; 1260 : 		(nowFloor == 8027) || (nowFloor == 8028) || (nowFloor == 8029) || nowFloor == 8113 || nowFloor == 8114 ||
; 1261 : 		(nowFloor == 8015) ) && (popflag == false) && (waittimeflag == false))

  00a59	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?popAct@@3PAUaction@@A
$LN62@drawCharSt:

; 1280 : 			popAct = NULL;
; 1281 : 		}
; 1282 : 		popflag = false;
; 1283 : 		waittimeflag = true;
; 1284 : 	}
; 1285 : 	if ( waittimeflag == true ) //è®¡æ¶ç­å¾ä¸ä¸æ¬¡äº§çæ¶é´

  00a5f	3c 01		 cmp	 al, 1
  00a61	75 23		 jne	 SHORT $LN65@drawCharSt
$LN112@drawCharSt:

; 1286 : 	{
; 1287 : 		waittime ++ ;

  00a63	a1 00 00 00 00	 mov	 eax, DWORD PTR ?waittime@@3HA ; waittime
  00a68	40		 inc	 eax
  00a69	a3 00 00 00 00	 mov	 DWORD PTR ?waittime@@3HA, eax ; waittime
  00a6e	3d 5e 01 00 00	 cmp	 eax, 350		; 0000015eH

; 1288 : 		if (waittime > 350 ) 

  00a73	7e 11		 jle	 SHORT $LN65@drawCharSt

; 1289 : 		{
; 1290 : 			waittime = 0;

  00a75	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?waittime@@3HA, 0 ; waittime

; 1291 : 			waittimeflag = false;

  00a7f	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?waittimeflag@@3_NA, 0 ; waittimeflag
$LN65@drawCharSt:

; 1292 : 		}
; 1293 : 	}
; 1294 : 	if ( ( (nowFloor != 817) && (nowFloor != 8007) && (nowFloor != 8101) && (nowFloor != 8100) && (nowFloor != 8113) && (nowFloor != 8114) &&
; 1295 : 		(nowFloor != 8027) && (nowFloor != 8028) && (nowFloor != 8029) && (nowFloor != 8015)) && (popflag == true))

  00a86	81 f9 31 03 00
	00		 cmp	 ecx, 817		; 00000331H
  00a8c	74 76		 je	 SHORT $LN67@drawCharSt
  00a8e	81 f9 47 1f 00
	00		 cmp	 ecx, 8007		; 00001f47H
  00a94	74 6e		 je	 SHORT $LN67@drawCharSt
  00a96	81 f9 a5 1f 00
	00		 cmp	 ecx, 8101		; 00001fa5H
  00a9c	74 66		 je	 SHORT $LN67@drawCharSt
  00a9e	81 f9 a4 1f 00
	00		 cmp	 ecx, 8100		; 00001fa4H
  00aa4	74 5e		 je	 SHORT $LN67@drawCharSt
  00aa6	81 f9 b1 1f 00
	00		 cmp	 ecx, 8113		; 00001fb1H
  00aac	74 56		 je	 SHORT $LN67@drawCharSt
  00aae	81 f9 b2 1f 00
	00		 cmp	 ecx, 8114		; 00001fb2H
  00ab4	74 4e		 je	 SHORT $LN67@drawCharSt
  00ab6	81 f9 5b 1f 00
	00		 cmp	 ecx, 8027		; 00001f5bH
  00abc	74 46		 je	 SHORT $LN67@drawCharSt
  00abe	81 f9 5c 1f 00
	00		 cmp	 ecx, 8028		; 00001f5cH
  00ac4	74 3e		 je	 SHORT $LN67@drawCharSt
  00ac6	81 f9 5d 1f 00
	00		 cmp	 ecx, 8029		; 00001f5dH
  00acc	74 36		 je	 SHORT $LN67@drawCharSt
  00ace	81 f9 4f 1f 00
	00		 cmp	 ecx, 8015		; 00001f4fH
  00ad4	74 2e		 je	 SHORT $LN67@drawCharSt
  00ad6	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?popflag@@3_NA, 1 ; popflag
  00add	75 25		 jne	 SHORT $LN67@drawCharSt

; 1296 : 	{
; 1297 : 		popflag = false;

  00adf	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?popflag@@3_NA, 0 ; popflag

; 1298 : 		waittimeflag = false;  

  00ae6	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?waittimeflag@@3_NA, 0 ; waittimeflag

; 1299 : 		if ( popAct != NULL)

  00aed	85 d2		 test	 edx, edx
  00aef	74 13		 je	 SHORT $LN67@drawCharSt

; 1300 : 		{
; 1301 : 			DeathAction ( popAct ) ;

  00af1	52		 push	 edx
  00af2	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00af7	83 c4 04	 add	 esp, 4

; 1302 : 			popAct = NULL;

  00afa	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?popAct@@3PAUaction@@A, 0
$LN67@drawCharSt:

; 1303 : 		}
; 1304 : 	}
; 1305 : 
; 1306 : #endif
; 1307 : #ifdef __EMOTION
; 1308 : 	if( ext->ptActEmotion){
; 1309 : 		if( ext->ptActEmotion->mx != ptAct->mx ||
; 1310 : 			ext->ptActEmotion->my != ptAct->my ||
; 1311 : 			ext->ptActEmotion->x != ptAct->x ||
; 1312 : 			ext->ptActEmotion->y != ptAct->y ){
; 1313 : 			DeathAction( ext->ptActEmotion);
; 1314 : 			ext->ptActEmotion = NULL;
; 1315 : 		}else{
; 1316 : 			int no;
; 1317 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;
; 1318 : 			no %= 12;	// î ??????î???
; 1319 : 			// ?????????
; 1320 : 			pattern( ext->ptActEmotion, ANM_NOMAL_SPD, ANM_LOOP );
; 1321 : 			// ??????????????
; 1322 : 			setCharPrio( ext->ptActEmotion->bmpNo,
; 1323 : 				ext->ptActEmotion->x, ext->ptActEmotion->y, 0, charIconOffsetY[no],
; 1324 : 					ext->ptActEmotion->mx, ext->ptActEmotion->my );
; 1325 : 		}
; 1326 : 	}
; 1327 : #endif
; 1328 : #ifdef _STREET_VENDOR
; 1329 : 	if(ext->ptStreetVendor){

  00b04	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b07	85 c9		 test	 ecx, ecx
  00b09	0f 84 ae 00 00
	00		 je	 $LN68@drawCharSt

; 1330 : 		ext->ptStreetVendor->x  = ptAct->x;

  00b0f	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00b12	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1331 : 		ext->ptStreetVendor->y  = ptAct->y;

  00b15	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b18	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]

; 1332 : 		ext->ptStreetVendor->mx = ptAct->mx;
; 1333 : 		ext->ptStreetVendor->my = ptAct->my;
; 1334 : #ifdef _STREET_VENDOR_CHANGE_ICON
; 1335 : 		StockDispBuffer(ext->ptStreetVendor->x,ext->ptStreetVendor->y + 35,DISP_PRIO_TILE+1,35343,0);

  00b1b	6a 00		 push	 0
  00b1d	68 0f 8a 00 00	 push	 35343			; 00008a0fH
  00b22	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00b25	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b28	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00b2e	6a 02		 push	 2
  00b30	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  00b36	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b39	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00b3f	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  00b45	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b48	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00b4b	83 c0 23	 add	 eax, 35			; 00000023H
  00b4e	50		 push	 eax
  00b4f	ff 71 18	 push	 DWORD PTR [ecx+24]
  00b52	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1336 : 		StockDispBuffer(ext->ptStreetVendor->x - 10,ext->ptStreetVendor->y + 10,DISP_PRIO_CHAR-1,35344,0);

  00b57	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b5a	6a 00		 push	 0
  00b5c	68 10 8a 00 00	 push	 35344			; 00008a10H
  00b61	6a 09		 push	 9
  00b63	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00b66	83 c0 0a	 add	 eax, 10			; 0000000aH
  00b69	50		 push	 eax
  00b6a	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00b6d	83 e8 0a	 sub	 eax, 10			; 0000000aH
  00b70	50		 push	 eax
  00b71	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1337 : 		StockDispBuffer(ext->ptStreetVendor->x,ext->ptStreetVendor->y - 15,DISP_PRIO_CHAR+1,35345,0);

  00b76	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b79	6a 00		 push	 0
  00b7b	68 11 8a 00 00	 push	 35345			; 00008a11H
  00b80	6a 0b		 push	 11			; 0000000bH
  00b82	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00b85	83 e8 0f	 sub	 eax, 15			; 0000000fH
  00b88	50		 push	 eax
  00b89	ff 71 18	 push	 DWORD PTR [ecx+24]
  00b8c	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer

; 1338 : #else
; 1339 : 	#ifdef _READ16BITBMP
; 1340 : 		StockDispBuffer(ext->ptStreetVendor->x,ext->ptStreetVendor->y - 80,DISP_PRIO_CHAR,OLD_GRAPHICS_START+58,10);
; 1341 : 	#endif
; 1342 : #endif
; 1343 : 			StockFontBuffer(ext->ptStreetVendor->x - 65,ext->ptStreetVendor->y - 92,

  00b91	8b 4b 20	 mov	 ecx, DWORD PTR [ebx+32]
  00b94	8d 87 e8 01 00
	00		 lea	 eax, DWORD PTR [edi+488]
  00b9a	6a 00		 push	 0
  00b9c	50		 push	 eax
  00b9d	0f b6 05 08 01
	00 00		 movzx	 eax, BYTE PTR ?MyChatBuffer@@3USTR_BUFFER@@A+264
  00ba4	50		 push	 eax
  00ba5	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  00ba8	83 e8 5c	 sub	 eax, 92			; 0000005cH
  00bab	6a 00		 push	 0
  00bad	50		 push	 eax
  00bae	8b 41 18	 mov	 eax, DWORD PTR [ecx+24]
  00bb1	83 e8 41	 sub	 eax, 65			; 00000041H
  00bb4	50		 push	 eax
  00bb5	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00bba	83 c4 54	 add	 esp, 84			; 00000054H
$LN68@drawCharSt:

; 1344 : 										FONT_PRIO_BACK,MyChatBuffer.color,ptAct->szStreetVendorTitle,0);
; 1345 : 	}
; 1346 : #endif
; 1347 : #ifdef _MIND_ICON
; 1348 : 	if( ext->ptMindIcon){		

  00bbd	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00bc0	85 c9		 test	 ecx, ecx
  00bc2	0f 84 4b 01 00
	00		 je	 $LN71@drawCharSt

; 1349 : 		if( ((ptAct->sMindIcon != SPR_asleep) &&
; 1350 : 		     (ptAct->sMindIcon != SPR_cafe) &&
; 1351 : 		     (ptAct->sMindIcon != SPR_accent) ) &&

  00bc8	8b 87 c0 01 00
	00		 mov	 eax, DWORD PTR [edi+448]
  00bce	3d aa 8b 01 00	 cmp	 eax, 101290		; 00018baaH
  00bd3	0f 84 8b 00 00
	00		 je	 $LN70@drawCharSt
  00bd9	3d ae 8b 01 00	 cmp	 eax, 101294		; 00018baeH
  00bde	0f 84 80 00 00
	00		 je	 $LN70@drawCharSt
  00be4	3d a8 8b 01 00	 cmp	 eax, 101288		; 00018ba8H
  00be9	74 79		 je	 SHORT $LN70@drawCharSt
  00beb	6a 01		 push	 1
  00bed	6a 00		 push	 0
  00bef	51		 push	 ecx
  00bf0	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00bf5	83 c4 0c	 add	 esp, 12			; 0000000cH
  00bf8	85 c0		 test	 eax, eax
  00bfa	74 68		 je	 SHORT $LN70@drawCharSt

; 1352 : 			 pattern( ext->ptMindIcon, ANM_NOMAL_SPD, ANM_NO_LOOP)
; 1353 : 		    ){
; 1354 : 			DeathAction( ext->ptMindIcon);

  00bfc	ff 73 10	 push	 DWORD PTR [ebx+16]
  00bff	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00c04	83 c4 04	 add	 esp, 4

; 1355 : 			ext->ptMindIcon = NULL;

  00c07	c7 43 10 00 00
	00 00		 mov	 DWORD PTR [ebx+16], 0

; 1356 : 		}else{

  00c0e	e9 00 01 00 00	 jmp	 $LN71@drawCharSt
$LN126@drawCharSt:

; 1272 : 		}
; 1273 : 	}
; 1274 : 	if ( waittimeflag == false && popAct != NULL)

  00c13	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?popAct@@3PAUaction@@A
$LN58@drawCharSt:
  00c19	a0 00 00 00 00	 mov	 al, BYTE PTR ?waittimeflag@@3_NA ; waittimeflag
  00c1e	84 c0		 test	 al, al
  00c20	0f 85 39 fe ff
	ff		 jne	 $LN62@drawCharSt
  00c26	85 d2		 test	 edx, edx
  00c28	0f 84 58 fe ff
	ff		 je	 $LN65@drawCharSt

; 1275 : 	if ( popAct->anim_cnt == 6 ) //æ¨æ¾å°æåä¸å¼ 

  00c2e	83 ba 5c 01 00
	00 06		 cmp	 DWORD PTR [edx+348], 6
  00c35	0f 85 4b fe ff
	ff		 jne	 $LN65@drawCharSt

; 1276 : 	{
; 1277 : 		if ( popAct != NULL)
; 1278 : 		{
; 1279 : 			DeathAction( popAct );

  00c3b	52		 push	 edx
  00c3c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction

; 1280 : 			popAct = NULL;
; 1281 : 		}
; 1282 : 		popflag = false;
; 1283 : 		waittimeflag = true;
; 1284 : 	}
; 1285 : 	if ( waittimeflag == true ) //è®¡æ¶ç­å¾ä¸ä¸æ¬¡äº§çæ¶é´

  00c41	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowFloor@@3HA ; nowFloor
  00c47	83 c4 04	 add	 esp, 4
  00c4a	33 d2		 xor	 edx, edx
  00c4c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?waittimeflag@@3_NA, 1 ; waittimeflag
  00c53	89 15 00 00 00
	00		 mov	 DWORD PTR ?popAct@@3PAUaction@@A, edx
  00c59	88 15 00 00 00
	00		 mov	 BYTE PTR ?popflag@@3_NA, dl ; popflag
  00c5f	e9 ff fd ff ff	 jmp	 $LN112@drawCharSt
$LN70@drawCharSt:

; 1357 : 			int no;
; 1358 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;

  00c64	8b 8f 44 01 00
	00		 mov	 ecx, DWORD PTR [edi+324]
  00c6a	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00c6f	81 e9 a0 86 01
	00		 sub	 ecx, 100000		; 000186a0H
  00c75	f7 e9		 imul	 ecx

; 1359 : 			no %= 12;
; 1360 : 			
; 1361 : 			ext->ptMindIcon->x  = ptAct->x;

  00c77	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00c7a	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  00c7d	c1 fa 03	 sar	 edx, 3

; 1362 : 			ext->ptMindIcon->y  = ptAct->y;
; 1363 : 			ext->ptMindIcon->mx = ptAct->mx;
; 1364 : 			ext->ptMindIcon->my = ptAct->my;
; 1365 : 			
; 1366 : 			pattern( ext->ptMindIcon, ANM_NOMAL_SPD, ANM_LOOP );

  00c80	6a 00		 push	 0
  00c82	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00c85	8b f2		 mov	 esi, edx
  00c87	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00c8a	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00c8d	6a 00		 push	 0
  00c8f	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  00c92	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00c95	03 f2		 add	 esi, edx
  00c97	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00c9a	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00ca0	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  00ca6	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00ca9	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00caf	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  00cb5	ff 73 10	 push	 DWORD PTR [ebx+16]
  00cb8	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1367 : 			
; 1368 : 			setCharPrio( ext->ptMindIcon->bmpNo,

  00cbd	8b 4b 10	 mov	 ecx, DWORD PTR [ebx+16]
  00cc0	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00cc5	f7 ee		 imul	 esi
  00cc7	f3 0f 10 81 1c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+284]
  00ccf	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  00cd5	f3 0f 10 81 18
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+280]
  00cdd	83 c4 04	 add	 esp, 4
  00ce0	d1 fa		 sar	 edx, 1
  00ce2	8b c2		 mov	 eax, edx
  00ce4	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00ce7	03 c2		 add	 eax, edx
  00ce9	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00cee	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00cf1	c1 e0 02	 shl	 eax, 2
  00cf4	2b f0		 sub	 esi, eax
  00cf6	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  00cfd	6a 00		 push	 0
  00cff	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00d02	ff 71 18	 push	 DWORD PTR [ecx+24]
  00d05	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  00d0b	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00d10	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN71@drawCharSt:

; 1369 : 				ext->ptMindIcon->x, ext->ptMindIcon->y, 0, charIconOffsetY[no],
; 1370 : 				ext->ptMindIcon->mx, ext->ptMindIcon->my );			
; 1371 : 		}
; 1372 : 	}
; 1373 : #endif
; 1374 : 
; 1375 : #ifdef _NB_ä»»å¡æå¼
; 1376 : 	if( ext->ptNoticeIcon){//è¿éå é¤æå°±å¯ä»¥èµ°å¨æ¾ç¤º

  00d13	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  00d16	85 c0		 test	 eax, eax
  00d18	0f 84 bf 00 00
	00		 je	 $LN75@drawCharSt

; 1377 : 		if(!ATR_PAT_NO(ext->ptNoticeIcon) ){

  00d1e	83 b8 9c 00 00
	00 00		 cmp	 DWORD PTR [eax+156], 0
  00d25	75 10		 jne	 SHORT $LN74@drawCharSt

; 1378 : 			if(ATR_PAT_BAK_NO(ext->ptNoticeIcon)){

  00d27	8b 88 a0 00 00
	00		 mov	 ecx, DWORD PTR [eax+160]
  00d2d	85 c9		 test	 ecx, ecx
  00d2f	74 06		 je	 SHORT $LN74@drawCharSt

; 1379 : 				ATR_PAT_NO(ext->ptNoticeIcon) = ATR_PAT_BAK_NO(ext->ptNoticeIcon);

  00d31	89 88 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ecx
$LN74@drawCharSt:

; 1380 : 			}
; 1381 : 		}
; 1382 : 		short x1,y1,x2,y2;
; 1383 : 		y2=x2=0;
; 1384 : 		if(è·åå¨ç»å°ºå¯¸(ptAct,&x1,&y1)){

  00d37	8d 85 c0 fe ff
	ff		 lea	 eax, DWORD PTR _y1$6[ebp]
  00d3d	50		 push	 eax
  00d3e	8d 85 b8 fe ff
	ff		 lea	 eax, DWORD PTR _x1$1[ebp]
  00d44	50		 push	 eax
  00d45	57		 push	 edi
  00d46	e8 00 00 00 00	 call	 ??ö¢??ô©õ»@@YAHPAUaction@@PAF1@Z ; ?ö¢??ô©õ»
  00d4b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00d4e	85 c0		 test	 eax, eax
  00d50	0f 84 87 00 00
	00		 je	 $LN75@drawCharSt

; 1385 : 			ext->ptNoticeIcon->x  = ptAct->x;

  00d56	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  00d59	8b 47 18	 mov	 eax, DWORD PTR [edi+24]

; 1386 : 			ext->ptNoticeIcon->y  = ptAct->y;
; 1387 : 			ext->ptNoticeIcon->mx = ptAct->mx;
; 1388 : 			ext->ptNoticeIcon->my = ptAct->my;
; 1389 : 			pattern( ext->ptNoticeIcon, ANM_NOMAL_SPD, ANM_LOOP );

  00d5c	6a 00		 push	 0
  00d5e	6a 00		 push	 0
  00d60	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  00d63	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  00d66	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  00d69	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  00d6c	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  00d6f	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  00d75	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  00d7b	8b 4b 34	 mov	 ecx, DWORD PTR [ebx+52]
  00d7e	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  00d84	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  00d8a	ff 73 34	 push	 DWORD PTR [ebx+52]
  00d8d	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1390 : 			setCharPrio( ext->ptNoticeIcon->bmpNo,

  00d92	8b 73 34	 mov	 esi, DWORD PTR [ebx+52]
  00d95	83 c4 04	 add	 esp, 4
  00d98	0f bf 85 c0 fe
	ff ff		 movsx	 eax, WORD PTR _y1$6[ebp]
  00d9f	b9 c9 ff ff ff	 mov	 ecx, -55		; ffffffc9H
  00da4	99		 cdq
  00da5	2b c2		 sub	 eax, edx
  00da7	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  00daf	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00db5	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  00dbd	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00dc2	d1 f8		 sar	 eax, 1
  00dc4	2b c8		 sub	 ecx, eax
  00dc6	51		 push	 ecx
  00dc7	6a 00		 push	 0
  00dc9	ff 76 1c	 push	 DWORD PTR [esi+28]
  00dcc	ff 76 18	 push	 DWORD PTR [esi+24]
  00dcf	ff b6 9c 00 00
	00		 push	 DWORD PTR [esi+156]
  00dd5	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  00dda	83 c4 1c	 add	 esp, 28			; 0000001cH
$LN75@drawCharSt:

; 1391 : 				ext->ptNoticeIcon->x-x2, ext->ptNoticeIcon->y, 0,-(y1/2+55),
; 1392 : 				ext->ptNoticeIcon->mx, ext->ptNoticeIcon->my
; 1393 : #ifdef _SFUMATO
; 1394 : 				, ptAct->sfumato
; 1395 : #endif
; 1396 : 				);
; 1397 : 		}
; 1398 : 	}
; 1399 : #endif
; 1400 : 
; 1401 : #ifdef _ITEM_FIREWORK
; 1402 : 	if (ext->pActFirework[0])	// æè¦æ¾çç«

  00ddd	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00de0	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42800000
  00de8	85 c0		 test	 eax, eax
  00dea	0f 84 fa 02 00
	00		 je	 $LN86@drawCharSt

; 1403 : 	{
; 1404 : 		float	fX, fY;
; 1405 : 
; 1406 : 		camMapToGamen((float)ext->pActFirework[0]->gx * GRID_SIZE, (float)ext->pActFirework[0]->gy * GRID_SIZE, &fX, &fY);

  00df0	66 0f 6e 80 b8
	00 00 00	 movd	 xmm0, DWORD PTR [eax+184]
  00df8	8d 8d c4 fe ff
	ff		 lea	 ecx, DWORD PTR _fY$9[ebp]
  00dfe	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00e01	51		 push	 ecx
  00e02	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _fX$11[ebp]
  00e08	51		 push	 ecx
  00e09	83 ec 08	 sub	 esp, 8
  00e0c	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00e10	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  00e16	66 0f 6e 80 b4
	00 00 00	 movd	 xmm0, DWORD PTR [eax+180]
  00e1e	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00e21	f3 0f 59 c1	 mulss	 xmm0, xmm1
  00e25	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00e2a	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen

; 1407 : 		ext->pActFirework[0]->x	= (int)fX;

  00e2f	f3 0f 2c 8d c8
	fe ff ff	 cvttss2si ecx, DWORD PTR _fX$11[ebp]
  00e37	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]

; 1408 : 		ext->pActFirework[0]->y	= (int)fY;
; 1409 : 		// å¦æç¬¬ä¸ä¸ªçç«æ¾å®äº,åæ¥ä»¥typeæ¥??æ¥ä¸æ¥è¦æä¹æ¾
; 1410 : 		if (pattern(ext->pActFirework[0], ANM_NOMAL_SPD, ANM_NO_LOOP))

  00e3a	6a 01		 push	 1
  00e3c	6a 00		 push	 0
  00e3e	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  00e41	f3 0f 2c 8d c4
	fe ff ff	 cvttss2si ecx, DWORD PTR _fY$9[ebp]
  00e49	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00e4c	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  00e4f	ff 73 28	 push	 DWORD PTR [ebx+40]
  00e52	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00e57	83 c4 1c	 add	 esp, 28			; 0000001cH
  00e5a	85 c0		 test	 eax, eax
  00e5c	0f 84 5b 02 00
	00		 je	 $LN85@drawCharSt

; 1411 : 		{
; 1412 : 			if (ext->pActFirework[0]->damage == 0)	// ä¸ä¸ªæ¾ä¸­é´äºä¸ªå·¦å³

  00e62	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00e65	8b 81 b0 00 00
	00		 mov	 eax, DWORD PTR [ecx+176]
  00e6b	85 c0		 test	 eax, eax
  00e6d	0f 85 c6 00 00
	00		 jne	 $LN78@drawCharSt

; 1413 : 			{
; 1414 : 				int nGX, nGY;
; 1415 : 				
; 1416 : 				nGX = ext->pActFirework[0]->gx;

  00e73	8b b1 b4 00 00
	00		 mov	 esi, DWORD PTR [ecx+180]

; 1417 : 				nGY = ext->pActFirework[0]->gy;

  00e79	8b b9 b8 00 00
	00		 mov	 edi, DWORD PTR [ecx+184]

; 1418 : 				ext->pActFirework[1] = GetAction(PRIO_CHR, 0);

  00e7f	50		 push	 eax
  00e80	6a 01		 push	 1
  00e82	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00e87	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
  00e8a	83 c4 08	 add	 esp, 8

; 1419 : 				ext->pActFirework[1]->damage			= 1;

  00e8d	c7 80 b0 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+176], 1

; 1420 : 				ext->pActFirework[1]->anim_chr_no		= ext->pActFirework[0]->anim_chr_no;

  00e97	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00e9a	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00e9d	8b 80 44 01 00
	00		 mov	 eax, DWORD PTR [eax+324]
  00ea3	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax

; 1421 : 				ext->pActFirework[1]->anim_no			= ANIM_STAND;
; 1422 : 				ext->pActFirework[1]->anim_ang			= 1;
; 1423 : 				ext->pActFirework[1]->actNo				= 0;
; 1424 : 				ext->pActFirework[1]->dispPrio			= DISP_PRIO_RESERVE;
; 1425 : 				ext->pActFirework[0]->gx				= nGX - 2;

  00ea9	8d 4e fe	 lea	 ecx, DWORD PTR [esi-2]
  00eac	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00eaf	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3
  00eb9	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00ebc	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1
  00ec6	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00ec9	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0
  00ed3	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00ed6	c6 40 15 14	 mov	 BYTE PTR [eax+21], 20	; 00000014H
  00eda	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00edd	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 1426 : 				ext->pActFirework[0]->gy				= nGY - 2;

  00ee3	8d 4f fe	 lea	 ecx, DWORD PTR [edi-2]
  00ee6	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00ee9	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx

; 1427 : 				ext->pActFirework[0]->anim_frame_cnt	= 0;
; 1428 : 				ext->pActFirework[0]->anim_cnt			= 0;
; 1429 : 				ext->pActFirework[1]->gx				= nGX + 2;

  00eef	8d 4e 02	 lea	 ecx, DWORD PTR [esi+2]
  00ef2	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00ef5	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0
  00eff	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00f02	c7 80 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+348], 0
  00f0c	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f0f	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 1430 : 				ext->pActFirework[1]->gy				= nGY + 2;

  00f15	8d 4f 02	 lea	 ecx, DWORD PTR [edi+2]
  00f18	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]

; 1431 : 				ext->pActFirework[0]->damage			= -1;
; 1432 : 			}

  00f1b	8b bd bc fe ff
	ff		 mov	 edi, DWORD PTR _ptAct$GSCopy$1$[ebp]
  00f21	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx
  00f27	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00f2a	c7 80 b0 00 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+176], -1
  00f34	e9 84 01 00 00	 jmp	 $LN85@drawCharSt
$LN78@drawCharSt:

; 1433 : 			else if (ext->pActFirework[0]->damage == 1)	// ä¸­é´ä¸æ¬¡

  00f39	83 f8 01	 cmp	 eax, 1
  00f3c	0f 85 8e 00 00
	00		 jne	 $LN80@drawCharSt

; 1434 : 			{
; 1435 : 				ext->pActFirework[1] = GetAction(PRIO_CHR, 0);

  00f42	6a 00		 push	 0
  00f44	50		 push	 eax
  00f45	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction

; 1436 : 				ext->pActFirework[1]->anim_chr_no	= ext->pActFirework[0]->anim_chr_no;

  00f4a	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00f4d	83 c4 08	 add	 esp, 8
  00f50	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
  00f53	8b 89 44 01 00
	00		 mov	 ecx, DWORD PTR [ecx+324]
  00f59	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 1437 : 				ext->pActFirework[1]->anim_no		= ANIM_STAND;

  00f5f	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f62	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3

; 1438 : 				ext->pActFirework[1]->anim_ang		= 1;

  00f6c	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f6f	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1

; 1439 : 				ext->pActFirework[1]->actNo			= 0;

  00f79	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f7c	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1440 : 				ext->pActFirework[1]->dispPrio		= DISP_PRIO_RESERVE;

  00f86	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f89	c6 40 15 14	 mov	 BYTE PTR [eax+21], 20	; 00000014H

; 1441 : 				ext->pActFirework[1]->level			= 1;					// level æ¿æ¥å½è®¡æ°ç¨

  00f8d	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  00f90	c7 80 8c 00 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+140], 1

; 1442 : 				ext->pActFirework[1]->gx			= ext->pActFirework[0]->gx;

  00f9a	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00f9d	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00fa0	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]
  00fa6	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 1443 : 				ext->pActFirework[1]->gy			= ext->pActFirework[0]->gy;

  00fac	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00faf	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  00fb2	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]
  00fb8	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1444 : 				ext->pActFirework[0]->damage		= -2;

  00fbe	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  00fc1	c7 80 b0 00 00
	00 fe ff ff ff	 mov	 DWORD PTR [eax+176], -2	; fffffffeH

; 1445 : 			}

  00fcb	e9 ed 00 00 00	 jmp	 $LN85@drawCharSt
$LN80@drawCharSt:

; 1446 : 			else if (ext->pActFirework[0]->damage == 2 || ext->pActFirework[0]->damage == -1)

  00fd0	83 f8 02	 cmp	 eax, 2
  00fd3	0f 84 da 00 00
	00		 je	 $LN84@drawCharSt
  00fd9	83 f8 ff	 cmp	 eax, -1
  00fdc	0f 84 d1 00 00
	00		 je	 $LN84@drawCharSt

; 1448 : 			else if (ext->pActFirework[0]->damage == 3)	// ç»äººç©åå¨ä¸å, å±ä¸æ¬¡

  00fe2	83 f8 03	 cmp	 eax, 3
  00fe5	0f 85 d2 00 00
	00		 jne	 $LN85@drawCharSt

; 1449 : 			{
; 1450 : 				ext->pActFirework[1] = GetAction(PRIO_CHR, 0);

  00feb	6a 00		 push	 0
  00fed	6a 01		 push	 1
  00fef	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction

; 1451 : 				ext->pActFirework[1]->anim_chr_no	= ext->pActFirework[0]->anim_chr_no;

  00ff4	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00ff7	83 c4 08	 add	 esp, 8
  00ffa	89 43 2c	 mov	 DWORD PTR [ebx+44], eax
  00ffd	8b 89 44 01 00
	00		 mov	 ecx, DWORD PTR [ecx+324]
  01003	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 1452 : 				ext->pActFirework[1]->anim_no		= ANIM_STAND;

  01009	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0100c	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3

; 1453 : 				ext->pActFirework[1]->anim_ang		= 1;

  01016	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01019	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1

; 1454 : 				ext->pActFirework[1]->actNo			= 0;

  01023	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01026	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1455 : 				ext->pActFirework[1]->dispPrio		= DISP_PRIO_RESERVE;

  01030	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01033	c6 40 15 14	 mov	 BYTE PTR [eax+21], 20	; 00000014H

; 1456 : 				ext->pActFirework[1]->level			= 10;					// level æ¿æ¥å½è®¡æ°ç¨

  01037	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0103a	c7 80 8c 00 00
	00 0a 00 00 00	 mov	 DWORD PTR [eax+140], 10	; 0000000aH

; 1457 : 				ext->pActFirework[1]->damage		= ext->pActFirework[0]->damage;

  01044	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  01047	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  0104a	8b 80 b0 00 00
	00		 mov	 eax, DWORD PTR [eax+176]
  01050	89 81 b0 00 00
	00		 mov	 DWORD PTR [ecx+176], eax

; 1458 : 				ext->pActFirework[1]->gx			= ext->pActFirework[0]->bufGx[0] - 2;

  01056	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  01059	8b 88 c4 00 00
	00		 mov	 ecx, DWORD PTR [eax+196]
  0105f	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01062	83 e9 02	 sub	 ecx, 2
  01065	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 1459 : 				ext->pActFirework[1]->gy			= ext->pActFirework[0]->bufGy[0] - 2;

  0106b	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  0106e	8b 88 ec 00 00
	00		 mov	 ecx, DWORD PTR [eax+236]
  01074	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01077	83 e9 02	 sub	 ecx, 2
  0107a	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx

; 1460 : 				ext->pActFirework[1]->bufGx[0]		= ext->pActFirework[0]->bufGx[0];

  01080	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  01083	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  01086	8b 80 c4 00 00
	00		 mov	 eax, DWORD PTR [eax+196]
  0108c	89 81 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], eax

; 1461 : 				ext->pActFirework[1]->bufGy[0]		= ext->pActFirework[0]->bufGy[0];

  01092	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  01095	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  01098	8b 80 ec 00 00
	00		 mov	 eax, DWORD PTR [eax+236]
  0109e	89 81 ec 00 00
	00		 mov	 DWORD PTR [ecx+236], eax

; 1462 : 				ext->pActFirework[0]->damage		= -2;

  010a4	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  010a7	c7 80 b0 00 00
	00 fe ff ff ff	 mov	 DWORD PTR [eax+176], -2	; fffffffeH
  010b1	eb 0a		 jmp	 SHORT $LN85@drawCharSt
$LN84@drawCharSt:

; 1447 : 				ext->pActFirework[0]->damage = -2;

  010b3	c7 81 b0 00 00
	00 fe ff ff ff	 mov	 DWORD PTR [ecx+176], -2	; fffffffeH
$LN85@drawCharSt:

; 1463 : 			}
; 1464 : 		}
; 1465 : 		if (ext->pActFirework[0]->damage == -2 || warpEffectStart)

  010bd	8b 43 28	 mov	 eax, DWORD PTR [ebx+40]
  010c0	83 b8 b0 00 00
	00 fe		 cmp	 DWORD PTR [eax+176], -2	; fffffffeH
  010c7	74 09		 je	 SHORT $LN87@drawCharSt
  010c9	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?warpEffectStart@@3HA, 0 ; warpEffectStart
  010d0	74 10		 je	 SHORT $LN128@drawCharSt
$LN87@drawCharSt:

; 1466 : 		{
; 1467 : 			DeathAction(ext->pActFirework[0]);

  010d2	50		 push	 eax
  010d3	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  010d8	83 c4 04	 add	 esp, 4

; 1468 : 			ext->pActFirework[0] = NULL;

  010db	c7 43 28 00 00
	00 00		 mov	 DWORD PTR [ebx+40], 0
$LN128@drawCharSt:

; 1469 : 		}
; 1470 : 	}
; 1471 : 	if (ext->pActFirework[1])

  010e2	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42800000
$LN86@drawCharSt:
  010ea	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  010ed	85 c0		 test	 eax, eax
  010ef	0f 84 29 01 00
	00		 je	 $LN93@drawCharSt

; 1472 : 	{
; 1473 : 		float	fX, fY;
; 1474 : 
; 1475 : 		camMapToGamen((float)ext->pActFirework[1]->gx * GRID_SIZE, (float)ext->pActFirework[1]->gy * GRID_SIZE, &fX, &fY);

  010f5	66 0f 6e 80 b8
	00 00 00	 movd	 xmm0, DWORD PTR [eax+184]
  010fd	8d 8d c8 fe ff
	ff		 lea	 ecx, DWORD PTR _fY$10[ebp]
  01103	0f 5b c0	 cvtdq2ps xmm0, xmm0
  01106	51		 push	 ecx
  01107	8d 8d bc fe ff
	ff		 lea	 ecx, DWORD PTR _fX$5[ebp]
  0110d	51		 push	 ecx
  0110e	83 ec 08	 sub	 esp, 8
  01111	f3 0f 59 c1	 mulss	 xmm0, xmm1
  01115	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0111b	66 0f 6e 80 b4
	00 00 00	 movd	 xmm0, DWORD PTR [eax+180]
  01123	0f 5b c0	 cvtdq2ps xmm0, xmm0
  01126	f3 0f 59 c1	 mulss	 xmm0, xmm1
  0112a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0112f	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen

; 1476 : 		ext->pActFirework[1]->x	= (int)fX;

  01134	f3 0f 2c 8d bc
	fe ff ff	 cvttss2si ecx, DWORD PTR _fX$5[ebp]
  0113c	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]

; 1477 : 		ext->pActFirework[1]->y	= (int)fY;
; 1478 : 		if (pattern(ext->pActFirework[1], ANM_NOMAL_SPD, ANM_NO_LOOP))

  0113f	6a 01		 push	 1
  01141	6a 00		 push	 0
  01143	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  01146	f3 0f 2c 8d c8
	fe ff ff	 cvttss2si ecx, DWORD PTR _fY$10[ebp]
  0114e	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01151	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  01154	ff 73 2c	 push	 DWORD PTR [ebx+44]
  01157	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  0115c	83 c4 1c	 add	 esp, 28			; 0000001cH
  0115f	85 c0		 test	 eax, eax
  01161	0f 84 9c 00 00
	00		 je	 $LN91@drawCharSt

; 1479 : 		{
; 1480 : 			if (--ext->pActFirework[1]->level >= 0)	// è®¡ç®è¿è¦è·å æ¬¡

  01167	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  0116a	83 80 8c 00 00
	00 ff		 add	 DWORD PTR [eax+140], -1
  01171	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01174	78 7d		 js	 SHORT $LN90@drawCharSt

; 1481 : 			{
; 1482 : 				ext->pActFirework[1]->anim_frame_cnt	= 0;

  01176	c7 80 60 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+352], 0

; 1483 : 				ext->pActFirework[1]->anim_cnt			= 0;

  01180	8b 43 2c	 mov	 eax, DWORD PTR [ebx+44]
  01183	c7 80 5c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+348], 0

; 1484 : 				if (ext->pActFirework[1]->damage == 3)

  0118d	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  01190	83 b9 b0 00 00
	00 03		 cmp	 DWORD PTR [ecx+176], 3
  01197	75 6a		 jne	 SHORT $LN91@drawCharSt

; 1485 : 				{
; 1486 : 					int nXY[4][2] = { {3,-3}, {2,2}, {-3,3}, {-2,-2}};

  01199	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@0000000200000002fffffffd00000003

; 1487 : 					int nDir = ext->pActFirework[1]->level % 4;

  011a0	8b 91 8c 00 00
	00		 mov	 edx, DWORD PTR [ecx+140]
  011a6	0f 11 85 d0 fe
	ff ff		 movups	 XMMWORD PTR _nXY$17[ebp], xmm0
  011ad	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffe00000003fffffffd
  011b4	0f 11 85 e0 fe
	ff ff		 movups	 XMMWORD PTR _nXY$17[ebp+16], xmm0
  011bb	81 e2 03 00 00
	80		 and	 edx, -2147483645	; 80000003H
  011c1	79 05		 jns	 SHORT $LN131@drawCharSt
  011c3	4a		 dec	 edx
  011c4	83 ca fc	 or	 edx, -4			; fffffffcH
  011c7	42		 inc	 edx
$LN131@drawCharSt:

; 1488 : 
; 1489 : 					ext->pActFirework[1]->gx	= ext->pActFirework[1]->bufGx[0] + nXY[nDir][0];

  011c8	8b 84 d5 d0 fe
	ff ff		 mov	 eax, DWORD PTR _nXY$17[ebp+edx*8]
  011cf	03 81 c4 00 00
	00		 add	 eax, DWORD PTR [ecx+196]
  011d5	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 1490 : 					ext->pActFirework[1]->gy	= ext->pActFirework[1]->bufGy[0] + nXY[nDir][1];

  011db	8b 4b 2c	 mov	 ecx, DWORD PTR [ebx+44]
  011de	8b 84 d5 d4 fe
	ff ff		 mov	 eax, DWORD PTR _nXY$17[ebp+edx*8+4]
  011e5	03 81 ec 00 00
	00		 add	 eax, DWORD PTR [ecx+236]
  011eb	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 1491 : 				}
; 1492 : 			}

  011f1	eb 10		 jmp	 SHORT $LN91@drawCharSt
$LN90@drawCharSt:

; 1493 : 			else
; 1494 : 			{
; 1495 : 				DeathAction(ext->pActFirework[1]);

  011f3	50		 push	 eax
  011f4	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  011f9	83 c4 04	 add	 esp, 4

; 1496 : 				ext->pActFirework[1] = NULL;

  011fc	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
$LN91@drawCharSt:

; 1497 : 			}
; 1498 : 		}
; 1499 : 		if (warpEffectStart)

  01203	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?warpEffectStart@@3HA, 0 ; warpEffectStart
  0120a	74 12		 je	 SHORT $LN93@drawCharSt

; 1500 : 		{
; 1501 : 			DeathAction(ext->pActFirework[1]);

  0120c	ff 73 2c	 push	 DWORD PTR [ebx+44]
  0120f	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  01214	83 c4 04	 add	 esp, 4

; 1502 : 			ext->pActFirework[1] = NULL;

  01217	c7 43 2c 00 00
	00 00		 mov	 DWORD PTR [ebx+44], 0
$LN93@drawCharSt:

; 1503 : 		}
; 1504 : 	}
; 1505 : #endif
; 1506 : 
; 1507 : #ifdef ITEM_AURA_
; 1508 : 	if (ext->ptActAura1)

  0121e	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  01221	85 c9		 test	 ecx, ecx
  01223	74 3c		 je	 SHORT $LN94@drawCharSt

; 1509 : 	{
; 1510 : 		ext->ptActAura1->x = ptAct->x;

  01225	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  01228	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1511 : 		ext->ptActAura1->y = ptAct->y;

  0122b	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  0122e	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]

; 1512 : 		ext->ptActAura1->mx = ptAct->mx;
; 1513 : 		ext->ptActAura1->my = ptAct->my;
; 1514 : 		pattern(ext->ptActAura1, ANM_NOMAL_SPD, ANM_LOOP);

  01231	6a 00		 push	 0
  01233	6a 00		 push	 0
  01235	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  01238	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  0123b	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  01241	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  01247	8b 4b 38	 mov	 ecx, DWORD PTR [ebx+56]
  0124a	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  01250	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  01256	ff 73 38	 push	 DWORD PTR [ebx+56]
  01259	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  0125e	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN94@drawCharSt:

; 1515 : 	}
; 1516 : 	if (ext->ptActAura2)

  01261	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  01264	85 c9		 test	 ecx, ecx
  01266	74 3c		 je	 SHORT $LN95@drawCharSt

; 1517 : 	{
; 1518 : 		ext->ptActAura2->x = ptAct->x;

  01268	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  0126b	89 41 18	 mov	 DWORD PTR [ecx+24], eax

; 1519 : 		ext->ptActAura2->y = ptAct->y;

  0126e	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  01271	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]

; 1520 : 		ext->ptActAura2->mx = ptAct->mx;
; 1521 : 		ext->ptActAura2->my = ptAct->my;
; 1522 : 		pattern(ext->ptActAura2, ANM_NOMAL_SPD, ANM_LOOP);

  01274	6a 00		 push	 0
  01276	6a 00		 push	 0
  01278	89 41 1c	 mov	 DWORD PTR [ecx+28], eax
  0127b	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  0127e	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  01284	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  0128a	8b 4b 3c	 mov	 ecx, DWORD PTR [ebx+60]
  0128d	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  01293	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  01299	ff 73 3c	 push	 DWORD PTR [ebx+60]
  0129c	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  012a1	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN95@drawCharSt:

; 1523 : 	}
; 1524 : #endif
; 1525 : 
; 1526 : 
; 1527 : #ifdef _NPC_PICTURE
; 1528 : 	if( ((ptAct->picture>>24) & 0x000000ff) == 2 && ext->ptActPicture == NULL ) {

  012a4	8b 8f 28 02 00
	00		 mov	 ecx, DWORD PTR [edi+552]
  012aa	8b c1		 mov	 eax, ecx
  012ac	25 00 00 00 ff	 and	 eax, -16777216		; ff000000H
  012b1	3d 00 00 00 02	 cmp	 eax, 33554432		; 02000000H
  012b6	0f 85 51 01 00
	00		 jne	 $LN118@drawCharSt
  012bc	83 7b 30 00	 cmp	 DWORD PTR [ebx+48], 0
  012c0	75 45		 jne	 SHORT $LN137@drawCharSt

; 1529 : 		if( g_bUseAlpha )

  012c2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?g_bUseAlpha@@3HA, 0 ; g_bUseAlpha
  012c9	b8 b4 8d 01 00	 mov	 eax, 101812		; 00018db4H

; 1530 : 			ext->ptActPicture =
; 1531 : 				createCommmonEffectAction( 101812, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR );
; 1532 : 		else
; 1533 : 			ext->ptActPicture =
; 1534 : 				createCommmonEffectAction( 101865, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR );
; 1535 : 	}

  012ce	6a 0a		 push	 10			; 0000000aH
  012d0	6a 00		 push	 0
  012d2	b9 e9 8d 01 00	 mov	 ecx, 101865		; 00018de9H
  012d7	0f 45 c8	 cmovne	 ecx, eax
  012da	8b 87 b8 00 00
	00		 mov	 eax, DWORD PTR [edi+184]
  012e0	6a 00		 push	 0
  012e2	50		 push	 eax
  012e3	8b 87 b4 00 00
	00		 mov	 eax, DWORD PTR [edi+180]
  012e9	50		 push	 eax
  012ea	51		 push	 ecx
  012eb	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  012f0	83 c4 18	 add	 esp, 24			; 00000018H
  012f3	89 43 30	 mov	 DWORD PTR [ebx+48], eax
  012f6	5e		 pop	 esi
  012f7	5b		 pop	 ebx
  012f8	5f		 pop	 edi

; 1556 : 		}
; 1557 : 	}
; 1558 : 	/*if( ((ptAct->picture>>24) & 0x000000ff) == 2 ){
; 1559 : 		int pictable[9]={100388,100841,101178,100854,101570,100353,101759,101424,101489};
; 1560 : 		if( ptAct->anim_chr_no == pictable[((ptAct->picture&0x00ff0000)>>16)&0x000000ff] ){
; 1561 : 			int no;
; 1562 : 			U4 bmpNo;
; 1563 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;
; 1564 : 			no %= 12;	// î ??????î???
; 1565 : 			realGetNo( CG_TRADE_MARK, &bmpNo );
; 1566 : 			// ??????????????
; 1567 : 			setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );
; 1568 : 		}
; 1569 : 	}
; 1570 : 	*/
; 1571 : #endif
; 1572 : 
; 1573 : }

  012f9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  012fc	33 cd		 xor	 ecx, ebp
  012fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01303	8b e5		 mov	 esp, ebp
  01305	5d		 pop	 ebp
  01306	c3		 ret	 0
$LN137@drawCharSt:

; 1540 : 	}
; 1541 : 	else if( ((ptAct->picture>>24) & 0x000000ff) == 2 && ext->ptActPicture != NULL ) {
; 1542 : 		int pictable[9]={100388,100841,101178,100854,101570,100353,101759,101424,101489};

  01307	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@000189f600018b3a000189e900018824

; 1543 : 		if( ptAct->anim_chr_no == pictable[((ptAct->picture&0x00ff0000)>>16)&0x000000ff] ){

  0130e	8b 97 44 01 00
	00		 mov	 edx, DWORD PTR [edi+324]
  01314	c1 f9 10	 sar	 ecx, 16			; 00000010H
  01317	0f 11 85 cc fe
	ff ff		 movups	 XMMWORD PTR _pictable$16[ebp], xmm0
  0131e	0f b6 c9	 movzx	 ecx, cl
  01321	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00018c3000018d7f0001880100018cc2
  01328	0f 11 85 dc fe
	ff ff		 movups	 XMMWORD PTR _pictable$16[ebp+16], xmm0
  0132f	c7 85 ec fe ff
	ff 71 8c 01 00	 mov	 DWORD PTR _pictable$16[ebp+32], 101489 ; 00018c71H
  01339	3b 94 8d cc fe
	ff ff		 cmp	 edx, DWORD PTR _pictable$16[ebp+ecx*4]
  01340	0f 85 df 00 00
	00		 jne	 $LN130@drawCharSt

; 1544 : 			int no;
; 1545 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;

  01346	8d 8a 60 79 fe
	ff		 lea	 ecx, DWORD PTR [edx-100000]
  0134c	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  01351	f7 e9		 imul	 ecx

; 1546 : 			no %= 12;	// î ??????î???
; 1547 : 			// ???????????????
; 1548 : 			ext->ptActPicture->x  = ptAct->x;

  01353	8b 4b 30	 mov	 ecx, DWORD PTR [ebx+48]
  01356	8b 47 18	 mov	 eax, DWORD PTR [edi+24]
  01359	c1 fa 03	 sar	 edx, 3

; 1549 : 			ext->ptActPicture->y  = ptAct->y + ptAct->anim_y + 140;
; 1550 : 			ext->ptActPicture->mx = ptAct->mx;
; 1551 : 			ext->ptActPicture->my = ptAct->my;
; 1552 : 			// ?????????
; 1553 : 			pattern( ext->ptActPicture, ANM_NOMAL_SPD, ANM_LOOP );

  0135c	6a 00		 push	 0
  0135e	89 41 18	 mov	 DWORD PTR [ecx+24], eax
  01361	8b f2		 mov	 esi, edx
  01363	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  01366	8b 8f 68 01 00
	00		 mov	 ecx, DWORD PTR [edi+360]
  0136c	05 8c 00 00 00	 add	 eax, 140		; 0000008cH
  01371	03 c8		 add	 ecx, eax
  01373	c1 ee 1f	 shr	 esi, 31			; 0000001fH
  01376	8b 43 30	 mov	 eax, DWORD PTR [ebx+48]
  01379	03 f2		 add	 esi, edx
  0137b	6a 00		 push	 0
  0137d	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  01380	8b 4b 30	 mov	 ecx, DWORD PTR [ebx+48]
  01383	8b 87 18 01 00
	00		 mov	 eax, DWORD PTR [edi+280]
  01389	89 81 18 01 00
	00		 mov	 DWORD PTR [ecx+280], eax
  0138f	8b 4b 30	 mov	 ecx, DWORD PTR [ebx+48]
  01392	8b 87 1c 01 00
	00		 mov	 eax, DWORD PTR [edi+284]
  01398	89 81 1c 01 00
	00		 mov	 DWORD PTR [ecx+284], eax
  0139e	ff 73 30	 push	 DWORD PTR [ebx+48]
  013a1	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern

; 1554 : 			// ??????????????
; 1555 : 			setCharPrio( ext->ptActPicture->bmpNo, ext->ptActPicture->x, ext->ptActPicture->y, 0, charIconOffsetY[no], ext->ptActPicture->mx, ext->ptActPicture->my );

  013a6	8b 4b 30	 mov	 ecx, DWORD PTR [ebx+48]
  013a9	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  013ae	f7 ee		 imul	 esi
  013b0	f3 0f 10 81 1c
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+284]
  013b8	f3 0f 11 44 24
	08		 movss	 DWORD PTR [esp+8], xmm0
  013be	f3 0f 10 81 18
	01 00 00	 movss	 xmm0, DWORD PTR [ecx+280]
  013c6	83 c4 04	 add	 esp, 4
  013c9	d1 fa		 sar	 edx, 1
  013cb	8b c2		 mov	 eax, edx
  013cd	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  013d0	03 c2		 add	 eax, edx
  013d2	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  013d7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  013da	c1 e0 02	 shl	 eax, 2
  013dd	2b f0		 sub	 esi, eax
  013df	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?charIconOffsetY@@3PAHA[esi*4]
  013e6	6a 00		 push	 0
  013e8	ff 71 1c	 push	 DWORD PTR [ecx+28]
  013eb	ff 71 18	 push	 DWORD PTR [ecx+24]
  013ee	ff b1 9c 00 00
	00		 push	 DWORD PTR [ecx+156]
  013f4	e8 00 00 00 00	 call	 ?setCharPrio@@YAXHHHHHMM@Z ; setCharPrio
  013f9	83 c4 1c	 add	 esp, 28			; 0000001cH
  013fc	5e		 pop	 esi
  013fd	5b		 pop	 ebx
  013fe	5f		 pop	 edi

; 1556 : 		}
; 1557 : 	}
; 1558 : 	/*if( ((ptAct->picture>>24) & 0x000000ff) == 2 ){
; 1559 : 		int pictable[9]={100388,100841,101178,100854,101570,100353,101759,101424,101489};
; 1560 : 		if( ptAct->anim_chr_no == pictable[((ptAct->picture&0x00ff0000)>>16)&0x000000ff] ){
; 1561 : 			int no;
; 1562 : 			U4 bmpNo;
; 1563 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;
; 1564 : 			no %= 12;	// î ??????î???
; 1565 : 			realGetNo( CG_TRADE_MARK, &bmpNo );
; 1566 : 			// ??????????????
; 1567 : 			setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );
; 1568 : 		}
; 1569 : 	}
; 1570 : 	*/
; 1571 : #endif
; 1572 : 
; 1573 : }

  013ff	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01402	33 cd		 xor	 ecx, ebp
  01404	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01409	8b e5		 mov	 esp, ebp
  0140b	5d		 pop	 ebp
  0140c	c3		 ret	 0
$LN118@drawCharSt:

; 1536 : 	else if( ((ptAct->picture>>24) & 0x000000ff) != 2 && ext->ptActPicture != NULL ) {

  0140d	83 7b 30 00	 cmp	 DWORD PTR [ebx+48], 0
  01411	74 12		 je	 SHORT $LN130@drawCharSt

; 1537 : 		// ???????î¸î???????î
; 1538 : 		DeathAction( ext->ptActAngelMark );

  01413	ff 73 24	 push	 DWORD PTR [ebx+36]
  01416	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0141b	83 c4 04	 add	 esp, 4

; 1539 : 		ext->ptActAngelMark = NULL;

  0141e	c7 43 24 00 00
	00 00		 mov	 DWORD PTR [ebx+36], 0
$LN130@drawCharSt:
  01425	5e		 pop	 esi
  01426	5b		 pop	 ebx
$LN103@drawCharSt:

; 1556 : 		}
; 1557 : 	}
; 1558 : 	/*if( ((ptAct->picture>>24) & 0x000000ff) == 2 ){
; 1559 : 		int pictable[9]={100388,100841,101178,100854,101570,100353,101759,101424,101489};
; 1560 : 		if( ptAct->anim_chr_no == pictable[((ptAct->picture&0x00ff0000)>>16)&0x000000ff] ){
; 1561 : 			int no;
; 1562 : 			U4 bmpNo;
; 1563 : 			no = (ptAct->anim_chr_no - SPR_001em) / 20;
; 1564 : 			no %= 12;	// î ??????î???
; 1565 : 			realGetNo( CG_TRADE_MARK, &bmpNo );
; 1566 : 			// ??????????????
; 1567 : 			setCharPrio( bmpNo, ptAct->x, ptAct->y, 0, charIconOffsetY[no], ptAct->mx, ptAct->my );
; 1568 : 		}
; 1569 : 	}
; 1570 : 	*/
; 1571 : #endif
; 1572 : 
; 1573 : }

  01427	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0142a	33 cd		 xor	 ecx, ebp
  0142c	5f		 pop	 edi
  0142d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01432	8b e5		 mov	 esp, ebp
  01434	5d		 pop	 ebp
  01435	c3		 ret	 0
  01436	66 90		 npad	 2
$LN120@drawCharSt:
  01438	00 00 00 00	 DD	 $LN52@drawCharSt
  0143c	00 00 00 00	 DD	 $LN53@drawCharSt
  01440	00 00 00 00	 DD	 $LN54@drawCharSt
  01444	00 00 00 00	 DD	 $LN55@drawCharSt
?drawCharStatus@@YAXPAUaction@@@Z ENDP			; drawCharStatus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z
_TEXT	SEGMENT
_my$ = -8						; size = 4
_mx$ = -4						; size = 4
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_anim$ = 20						; size = 4
_dir$ = 24						; size = 4
_prio$ = 28						; size = 4
?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z PROC	; createCommmonEffectNoLoop, COMDAT

; 1655 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1656 : 	ACTION *ptAct;
; 1657 : 	float mx, my;
; 1658 : 	/* ?????????î? */
; 1659 : 	ptAct = GetAction( PRIO_CHR, 0 );

  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 08	 add	 esp, 8

; 1660 : 	if( ptAct == NULL )

  00015	85 f6		 test	 esi, esi
  00017	75 05		 jne	 SHORT $LN2@createComm
  00019	5e		 pop	 esi

; 1688 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN2@createComm:

; 1661 : 		return NULL;
; 1662 : 	// î¯???
; 1663 : 	ptAct->func = commmonEffectNoLoop;
; 1664 : 	// ???????î±?
; 1665 : 	ptAct->anim_chr_no = graNo;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]

; 1666 : 	// î®?î±?
; 1667 : 	ptAct->anim_no = anim;
; 1668 : 	// ?????????( ??? )( ??????? )
; 1669 : 	ptAct->anim_ang = dir;
; 1670 : 	// î¸î?îî
; 1671 : 	ptAct->dispPrio = prio;
; 1672 : 	// 1?????î¸î???
; 1673 : 	ptAct->atr = ACT_ATR_HIDE2;
; 1674 : 	// ???îº
; 1675 : 	ptAct->nextGx = gx;					// ????????î³??î®î?
; 1676 : 	ptAct->nextGy = gy;

  00021	8b 4d 10	 mov	 ecx, DWORD PTR _gy$[ebp]
  00024	89 86 44 01 00
	00		 mov	 DWORD PTR [esi+324], eax
  0002a	8b 45 14	 mov	 eax, DWORD PTR _anim$[ebp]
  0002d	89 86 4c 01 00
	00		 mov	 DWORD PTR [esi+332], eax
  00033	8b 45 18	 mov	 eax, DWORD PTR _dir$[ebp]
  00036	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  0003c	8a 45 1c	 mov	 al, BYTE PTR _prio$[ebp]
  0003f	88 46 15	 mov	 BYTE PTR [esi+21], al
  00042	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  00045	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax

; 1677 : 	ptAct->gx = gx;						// ????????î³???ä½?

  0004b	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00051	66 0f 6e c9	 movd	 xmm1, ecx
  00055	66 0f 6e d0	 movd	 xmm2, eax

; 1678 : 	ptAct->gy = gy;
; 1679 : 	ptAct->mx = (float)gx * GRID_SIZE;	// ????î³
; 1680 : 	ptAct->my = (float)gy * GRID_SIZE;
; 1681 : 	ptAct->vx = 0;						// ?î®?î¤
; 1682 : 	ptAct->vy = 0;
; 1683 : 	// ?î¡¡î¸î?îº
; 1684 : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00059	8d 45 f8	 lea	 eax, DWORD PTR _my$[ebp]
  0005c	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0005f	50		 push	 eax
  00060	8d 45 fc	 lea	 eax, DWORD PTR _mx$[ebp]
  00063	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ?commmonEffectNoLoop@@YAXPAUaction@@@Z ; commmonEffectNoLoop
  0006a	50		 push	 eax
  0006b	83 ec 08	 sub	 esp, 8
  0006e	c7 86 a4 00 00
	00 20 00 00 00	 mov	 DWORD PTR [esi+164], 32	; 00000020H
  00078	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0007b	89 8e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ecx
  00081	89 8e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ecx
  00087	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
  00091	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0
  0009b	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  000a3	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  000ab	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000b1	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  000b9	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  000c1	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000c6	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000cb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$[ebp]
  000d0	83 c4 10	 add	 esp, 16			; 00000010H

; 1685 : 	ptAct->x = (int)(mx+.5);

  000d3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000de	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000e2	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$[ebp]

; 1686 : 	ptAct->y = (int)(my+.5);

  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ed	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000f5	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000f9	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 1687 : 	return ptAct;

  000fc	8b c6		 mov	 eax, esi
  000fe	5e		 pop	 esi

; 1688 : }

  000ff	8b e5		 mov	 esp, ebp
  00101	5d		 pop	 ebp
  00102	c3		 ret	 0
?createCommmonEffectNoLoop@@YAPAUaction@@HHHHHH@Z ENDP	; createCommmonEffectNoLoop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z
_TEXT	SEGMENT
_my$ = -8						; size = 4
_mx$ = -4						; size = 4
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_anim$ = 20						; size = 4
_dir$ = 24						; size = 4
_prio$ = 28						; size = 4
?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z PROC	; createCommmonEffectAction, COMDAT

; 1601 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 1602 : 	ACTION *ptAct;
; 1603 : 	float mx, my;
; 1604 : 	/* ?????????î? */
; 1605 : 	ptAct = GetAction( PRIO_CHR, 0 );

  00007	6a 00		 push	 0
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 08	 add	 esp, 8

; 1606 : 	if( ptAct == NULL )

  00015	85 f6		 test	 esi, esi
  00017	75 05		 jne	 SHORT $LN2@createComm
  00019	5e		 pop	 esi

; 1632 : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN2@createComm:

; 1607 : 		return NULL;
; 1608 : 	// ???????î±?
; 1609 : 	ptAct->anim_chr_no = graNo;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]

; 1610 : 	// î®?î±?
; 1611 : 	ptAct->anim_no = anim;
; 1612 : 	// ?????????( ??? )( ??????? )
; 1613 : 	ptAct->anim_ang = dir;
; 1614 : 	// î¸î?îî
; 1615 : 	ptAct->dispPrio = prio;
; 1616 : 	// 1?????î¸î???
; 1617 : 	ptAct->atr = ACT_ATR_HIDE2;
; 1618 : 	// ???îº
; 1619 : 	ptAct->nextGx = gx;					// ????????î³??î®î?
; 1620 : 	ptAct->nextGy = gy;

  00021	8b 4d 10	 mov	 ecx, DWORD PTR _gy$[ebp]
  00024	89 86 44 01 00
	00		 mov	 DWORD PTR [esi+324], eax
  0002a	8b 45 14	 mov	 eax, DWORD PTR _anim$[ebp]
  0002d	89 86 4c 01 00
	00		 mov	 DWORD PTR [esi+332], eax
  00033	8b 45 18	 mov	 eax, DWORD PTR _dir$[ebp]
  00036	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  0003c	8a 45 1c	 mov	 al, BYTE PTR _prio$[ebp]
  0003f	88 46 15	 mov	 BYTE PTR [esi+21], al
  00042	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  00045	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax

; 1621 : 	ptAct->gx = gx;						// ????????î³???ä½?

  0004b	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00051	66 0f 6e c9	 movd	 xmm1, ecx
  00055	66 0f 6e d0	 movd	 xmm2, eax

; 1622 : 	ptAct->gy = gy;
; 1623 : 	ptAct->mx = (float)gx * GRID_SIZE;	// ????î³
; 1624 : 	ptAct->my = (float)gy * GRID_SIZE;
; 1625 : 	ptAct->vx = 0;						// ?î®?î¤
; 1626 : 	ptAct->vy = 0;
; 1627 : 	// ?î¡¡î¸î?îº
; 1628 : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00059	8d 45 f8	 lea	 eax, DWORD PTR _my$[ebp]
  0005c	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0005f	50		 push	 eax
  00060	8d 45 fc	 lea	 eax, DWORD PTR _mx$[ebp]
  00063	c7 86 a4 00 00
	00 20 00 00 00	 mov	 DWORD PTR [esi+164], 32	; 00000020H
  0006d	50		 push	 eax
  0006e	83 ec 08	 sub	 esp, 8
  00071	89 8e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ecx
  00077	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0007a	89 8e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ecx
  00080	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0
  0008a	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0
  00094	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  0009c	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  000a4	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000aa	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  000b2	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  000ba	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000bf	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000c4	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$[ebp]
  000c9	83 c4 10	 add	 esp, 16			; 00000010H

; 1629 : 	ptAct->x = (int)(mx+.5);

  000cc	0f 5a c0	 cvtps2pd xmm0, xmm0
  000cf	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000d7	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000db	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000de	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$[ebp]

; 1630 : 	ptAct->y = (int)(my+.5);

  000e3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000e6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000ee	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000f2	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 1631 : 	return ptAct;

  000f5	8b c6		 mov	 eax, esi
  000f7	5e		 pop	 esi

; 1632 : }

  000f8	8b e5		 mov	 esp, ebp
  000fa	5d		 pop	 ebp
  000fb	c3		 ret	 0
?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ENDP	; createCommmonEffectAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharStatus@@YAXPAGPAD@Z
_TEXT	SEGMENT
_status$ = 8						; size = 4
_smsg$ = 12						; size = 4
?setCharStatus@@YAXPAGPAD@Z PROC			; setCharStatus, COMDAT

; 678  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00005	8b 7d 0c	 mov	 edi, DWORD PTR _smsg$[ebp]
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_01EJNLAFE@P@
  0000d	57		 push	 edi
  0000e	e8 00 00 00 00	 call	 _strstr
  00013	8b 75 08	 mov	 esi, DWORD PTR _status$[ebp]
  00016	83 c4 08	 add	 esp, 8
  00019	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 680  : 	if( strstr( smsg, "P" ) )

  0001c	85 c0		 test	 eax, eax
  0001e	74 08		 je	 SHORT $LN2@setCharSta

; 681  : 		*status |= CHR_STATUS_P;

  00020	83 c9 01	 or	 ecx, 1
  00023	0f b7 c9	 movzx	 ecx, cx
  00026	eb 06		 jmp	 SHORT $LN3@setCharSta
$LN2@setCharSta:

; 682  : 	else
; 683  : 		*status &= (~CHR_STATUS_P);

  00028	81 e1 fe ff 00
	00		 and	 ecx, 65534		; 0000fffeH
$LN3@setCharSta:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  0002e	68 00 00 00 00	 push	 OFFSET ??_C@_01NANMIPIL@N@
  00033	57		 push	 edi
  00034	66 89 0e	 mov	 WORD PTR [esi], cx
  00037	e8 00 00 00 00	 call	 _strstr
  0003c	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  0003f	83 c4 08	 add	 esp, 8
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 685  : 	if( strstr( smsg, "N" ) )

  00042	85 c0		 test	 eax, eax
  00044	74 08		 je	 SHORT $LN4@setCharSta

; 686  : 		*status |= CHR_STATUS_N;

  00046	83 c9 02	 or	 ecx, 2
  00049	0f b7 c9	 movzx	 ecx, cx
  0004c	eb 06		 jmp	 SHORT $LN5@setCharSta
$LN4@setCharSta:

; 687  : 	else
; 688  : 		*status &= (~CHR_STATUS_N);

  0004e	81 e1 fd ff 00
	00		 and	 ecx, 65533		; 0000fffdH
$LN5@setCharSta:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  00054	68 00 00 00 00	 push	 OFFSET ??_C@_01BNIGIBBF@Q@
  00059	57		 push	 edi
  0005a	66 89 0e	 mov	 WORD PTR [esi], cx
  0005d	e8 00 00 00 00	 call	 _strstr
  00062	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  00065	83 c4 08	 add	 esp, 8
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 690  : 	if( strstr( smsg, "Q" ) )

  00068	85 c0		 test	 eax, eax
  0006a	74 08		 je	 SHORT $LN6@setCharSta

; 691  : 		*status |= CHR_STATUS_Q;

  0006c	83 c9 04	 or	 ecx, 4
  0006f	0f b7 c9	 movzx	 ecx, cx
  00072	eb 06		 jmp	 SHORT $LN7@setCharSta
$LN6@setCharSta:

; 692  : 	else
; 693  : 		*status &= (~CHR_STATUS_Q);

  00074	81 e1 fb ff 00
	00		 and	 ecx, 65531		; 0000fffbH
$LN7@setCharSta:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  0007a	68 00 00 00 00	 push	 OFFSET ??_C@_01CPLAODJH@S@
  0007f	57		 push	 edi
  00080	66 89 0e	 mov	 WORD PTR [esi], cx
  00083	e8 00 00 00 00	 call	 _strstr
  00088	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  0008b	83 c4 08	 add	 esp, 8
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 695  : 	if( strstr( smsg, "S" ) )

  0008e	85 c0		 test	 eax, eax
  00090	74 08		 je	 SHORT $LN8@setCharSta

; 696  : 		*status |= CHR_STATUS_S;

  00092	83 c9 08	 or	 ecx, 8
  00095	0f b7 c9	 movzx	 ecx, cx
  00098	eb 06		 jmp	 SHORT $LN9@setCharSta
$LN8@setCharSta:

; 697  : 	else
; 698  : 		*status &= (~CHR_STATUS_S);

  0009a	81 e1 f7 ff 00
	00		 and	 ecx, 65527		; 0000fff7H
$LN9@setCharSta:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  000a0	68 00 00 00 00	 push	 OFFSET ??_C@_01CKDDGHAB@D@
  000a5	57		 push	 edi
  000a6	66 89 0e	 mov	 WORD PTR [esi], cx
  000a9	e8 00 00 00 00	 call	 _strstr
  000ae	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  000b1	83 c4 08	 add	 esp, 8
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 700  : 	if( strstr( smsg, "D" ) )

  000b4	85 c0		 test	 eax, eax
  000b6	74 08		 je	 SHORT $LN10@setCharSta

; 701  : 		*status |= CHR_STATUS_D;

  000b8	83 c9 10	 or	 ecx, 16			; 00000010H
  000bb	0f b7 c9	 movzx	 ecx, cx
  000be	eb 06		 jmp	 SHORT $LN11@setCharSta
$LN10@setCharSta:

; 702  : 	else
; 703  : 		*status &= (~CHR_STATUS_D);

  000c0	81 e1 ef ff 00
	00		 and	 ecx, 65519		; 0000ffefH
$LN11@setCharSta:
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\string.h

; 524  :         return const_cast<char*>(strstr(static_cast<char const*>(_String), _SubString));

  000c6	68 00 00 00 00	 push	 OFFSET ??_C@_01GFHCPBMG@C@
  000cb	57		 push	 edi
  000cc	66 89 0e	 mov	 WORD PTR [esi], cx
  000cf	e8 00 00 00 00	 call	 _strstr
  000d4	0f b7 0e	 movzx	 ecx, WORD PTR [esi]
  000d7	83 c4 08	 add	 esp, 8
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp

; 705  : 	if( strstr( smsg, "C" ) )

  000da	85 c0		 test	 eax, eax
  000dc	74 0d		 je	 SHORT $LN12@setCharSta

; 706  : 		*status |= CHR_STATUS_C;

  000de	83 c9 20	 or	 ecx, 32			; 00000020H
  000e1	0f b7 c1	 movzx	 eax, cx
  000e4	5f		 pop	 edi

; 709  : }

  000e5	66 89 06	 mov	 WORD PTR [esi], ax
  000e8	5e		 pop	 esi
  000e9	5d		 pop	 ebp
  000ea	c3		 ret	 0
$LN12@setCharSta:

; 707  : 	else
; 708  : 		*status &= (~CHR_STATUS_C);

  000eb	81 e1 df ff 00
	00		 and	 ecx, 65503		; 0000ffdfH
  000f1	5f		 pop	 edi

; 709  : }

  000f2	66 89 0e	 mov	 WORD PTR [esi], cx
  000f5	5e		 pop	 esi
  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
?setCharStatus@@YAXPAGPAD@Z ENDP			; setCharStatus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharWarpPoint@@YAXPAUaction@@HH@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
?setCharWarpPoint@@YAXPAUaction@@HH@Z PROC		; setCharWarpPoint, COMDAT

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 658  : 	if( ptAct == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _ptAct$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 60		 je	 SHORT $LN1@setCharWar

; 659  : 		return;
; 660  : 	ptAct->gx = gx;

  0000a	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]

; 661  : 	ptAct->gy = gy;

  0000d	8b 4d 10	 mov	 ecx, DWORD PTR _gy$[ebp]
  00010	89 82 b4 00 00
	00		 mov	 DWORD PTR [edx+180], eax
  00016	89 8a b8 00 00
	00		 mov	 DWORD PTR [edx+184], ecx
  0001c	66 0f 6e c0	 movd	 xmm0, eax

; 662  : 	ptAct->nextGx = gx;
; 663  : 	ptAct->nextGy = gy;
; 664  : 	ptAct->mx = (float)gx*GRID_SIZE;

  00020	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00023	89 82 bc 00 00
	00		 mov	 DWORD PTR [edx+188], eax
  00029	89 8a c0 00 00
	00		 mov	 DWORD PTR [edx+192], ecx

; 665  : 	ptAct->my = (float)gy*GRID_SIZE;
; 666  : 	ptAct->vx = 0;

  0002f	c7 82 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+288], 0

; 667  : 	ptAct->vy = 0;

  00039	c7 82 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [edx+292], 0
  00043	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42800000
  0004b	f3 0f 11 82 18
	01 00 00	 movss	 DWORD PTR [edx+280], xmm0
  00053	66 0f 6e c1	 movd	 xmm0, ecx
  00057	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0005a	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@42800000
  00062	f3 0f 11 82 1c
	01 00 00	 movss	 DWORD PTR [edx+284], xmm0
$LN1@setCharWar:

; 668  : }

  0006a	5d		 pop	 ebp
  0006b	c3		 ret	 0
?setCharWarpPoint@@YAXPAUaction@@HH@Z ENDP		; setCharWarpPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?_setCharMovePoint@@YAXPAUaction@@HH@Z
_TEXT	SEGMENT
_dx$2$ = -8						; size = 4
_dir1$ = -8						; size = 4
_dy$2$ = -4						; size = 4
_ptAct$ = 8						; size = 4
_nextGx$ = 12						; size = 4
_nextGy$ = 16						; size = 4
?_setCharMovePoint@@YAXPAUaction@@HH@Z PROC		; _setCharMovePoint, COMDAT

; 496  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi

; 497  : 	float dir1;
; 498  : 	int dir;
; 499  : 	float dx, dy;
; 500  : 	float len;
; 501  : 	if( ptAct == NULL )

  0000b	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000e	57		 push	 edi
  0000f	85 f6		 test	 esi, esi
  00011	0f 84 1d 01 00
	00		 je	 $LN5@setCharMov

; 502  : 		return;
; 503  : 	dx = nextGx*GRID_SIZE-ptAct->mx;

  00017	8b 7d 0c	 mov	 edi, DWORD PTR _nextGx$[ebp]
  0001a	8b c7		 mov	 eax, edi

; 504  : 	dy = nextGy*GRID_SIZE-ptAct->my;

  0001c	8b 5d 10	 mov	 ebx, DWORD PTR _nextGy$[ebp]
  0001f	c1 e0 06	 shl	 eax, 6
  00022	66 0f 6e d0	 movd	 xmm2, eax
  00026	8b c3		 mov	 eax, ebx
  00028	c1 e0 06	 shl	 eax, 6
  0002b	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0002e	66 0f 6e c0	 movd	 xmm0, eax
  00032	f3 0f 5c 96 18
	01 00 00	 subss	 xmm2, DWORD PTR [esi+280]
  0003a	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0003d	f3 0f 11 54 24
	10		 movss	 DWORD PTR _dx$2$[esp+24], xmm2
  00043	f3 0f 5c 86 1c
	01 00 00	 subss	 xmm0, DWORD PTR [esi+284]

; 505  : 	len = (float)sqrt( (double)(dx*dx+dy*dy) );

  0004b	0f 28 c8	 movaps	 xmm1, xmm0
  0004e	f3 0f 11 44 24
	14		 movss	 DWORD PTR _dy$2$[esp+24], xmm0
  00054	f3 0f 59 c8	 mulss	 xmm1, xmm0
  00058	0f 28 c2	 movaps	 xmm0, xmm2
  0005b	f3 0f 59 c2	 mulss	 xmm0, xmm2
  0005f	f3 0f 58 c8	 addss	 xmm1, xmm0
  00063	0f 5a c1	 cvtps2pd xmm0, xmm1
  00066	0f 57 c9	 xorps	 xmm1, xmm1
  00069	66 0f 2e c8	 ucomisd xmm1, xmm0
  0006d	77 06		 ja	 SHORT $LN8@setCharMov
  0006f	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00073	eb 05		 jmp	 SHORT $LN9@setCharMov
$LN8@setCharMov:
  00075	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN9@setCharMov:
  0007a	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0007e	0f 57 e4	 xorps	 xmm4, xmm4

; 506  : 	if( len > 0 ){

  00081	0f 2f c4	 comiss	 xmm0, xmm4
  00084	76 16		 jbe	 SHORT $LN3@setCharMov

; 507  : 		dx /= len;

  00086	f3 0f 10 5c 24
	10		 movss	 xmm3, DWORD PTR _dx$2$[esp+24]

; 508  : 		dy /= len;

  0008c	f3 0f 10 54 24
	14		 movss	 xmm2, DWORD PTR _dy$2$[esp+24]
  00092	f3 0f 5e d8	 divss	 xmm3, xmm0
  00096	f3 0f 5e d0	 divss	 xmm2, xmm0

; 509  : 	}else{

  0009a	eb 06		 jmp	 SHORT $LN4@setCharMov
$LN3@setCharMov:
  0009c	0f 57 db	 xorps	 xmm3, xmm3
  0009f	0f 57 d2	 xorps	 xmm2, xmm2
$LN4@setCharMov:

; 510  : 		dx = 0;
; 511  : 		dy = 0;
; 512  : 	}
; 513  : 	ptAct->vx = dx * MOVE_SPEED;

  000a2	0f 28 c3	 movaps	 xmm0, xmm3

; 514  : 	ptAct->vy = dy * MOVE_SPEED;
; 515  : 	ptAct->nextGx = nextGx;

  000a5	89 be bc 00 00
	00		 mov	 DWORD PTR [esi+188], edi
  000ab	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000

; 516  : 	ptAct->nextGy = nextGy;

  000b3	89 9e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ebx

; 517  : 	if( dx != 0 || dy != 0 ){

  000b9	0f 2e dc	 ucomiss xmm3, xmm4
  000bc	f3 0f 11 86 20
	01 00 00	 movss	 DWORD PTR [esi+288], xmm0
  000c4	0f 28 c2	 movaps	 xmm0, xmm2
  000c7	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  000cf	9f		 lahf
  000d0	f3 0f 11 86 24
	01 00 00	 movss	 DWORD PTR [esi+292], xmm0
  000d8	f6 c4 44	 test	 ah, 68			; 00000044H
  000db	7a 09		 jp	 SHORT $LN6@setCharMov
  000dd	0f 2e d4	 ucomiss xmm2, xmm4
  000e0	9f		 lahf
  000e1	f6 c4 44	 test	 ah, 68			; 00000044H
  000e4	7b 4e		 jnp	 SHORT $LN5@setCharMov
$LN6@setCharMov:

; 518  : 		dir1 = Atan( dx, dy ) + 22.5F;

  000e6	83 ec 08	 sub	 esp, 8
  000e9	f3 0f 11 54 24
	04		 movss	 DWORD PTR [esp+4], xmm2
  000ef	f3 0f 11 1c 24	 movss	 DWORD PTR [esp], xmm3
  000f4	e8 00 00 00 00	 call	 ?Atan@@YAMMM@Z		; Atan
  000f9	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41b40000

; 519  : 		AdjustDir( &dir1 );

  000ff	8d 44 24 18	 lea	 eax, DWORD PTR _dir1$[esp+32]
  00103	50		 push	 eax
  00104	d9 5c 24 1c	 fstp	 DWORD PTR _dir1$[esp+36]
  00108	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 520  : 		dir = (int)(dir1/45);

  0010d	f3 0f 10 44 24
	1c		 movss	 xmm0, DWORD PTR _dir1$[esp+36]
  00113	83 c4 0c	 add	 esp, 12			; 0000000cH
  00116	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42340000
  0011e	f3 0f 2c c0	 cvttss2si eax, xmm0

; 521  : 		ptAct->anim_ang = dir;

  00122	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax

; 522  : 		ptAct->walkFlag = 1;

  00128	b8 01 00 00 00	 mov	 eax, 1
  0012d	66 89 86 16 01
	00 00		 mov	 WORD PTR [esi+278], ax
$LN5@setCharMov:

; 523  : 	}
; 524  : }

  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5b		 pop	 ebx
  00137	8b e5		 mov	 esp, ebp
  00139	5d		 pop	 ebp
  0013a	c3		 ret	 0
?_setCharMovePoint@@YAXPAUaction@@HH@Z ENDP		; _setCharMovePoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharMovePoint@@YAXPAUaction@@HH@Z
_TEXT	SEGMENT
_rate$1$ = -12						; size = 4
_dir1$ = -12						; size = 4
_dx$2$ = -8						; size = 4
_dy$2$ = -4						; size = 4
_ptAct$ = 8						; size = 4
_nextGx$ = 12						; size = 4
_nextGy$ = 16						; size = 4
?setCharMovePoint@@YAXPAUaction@@HH@Z PROC		; setCharMovePoint, COMDAT

; 458  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 459  : 	float dir1;
; 460  : 	int dir;
; 461  : 	float dx, dy;
; 462  : 	float len;
; 463  : 	float rate = 1.0F;

  00009	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00011	53		 push	 ebx
  00012	56		 push	 esi

; 464  : 	if( ptAct == NULL )

  00013	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00016	f3 0f 11 44 24
	08		 movss	 DWORD PTR _rate$1$[esp+20], xmm0
  0001c	57		 push	 edi
  0001d	85 f6		 test	 esi, esi
  0001f	0f 84 64 01 00
	00		 je	 $LN10@setCharMov

; 465  : 		return;
; 466  : 	if( ptAct->bufCount > 5 )

  00025	0f b7 86 14 01
	00 00		 movzx	 eax, WORD PTR [esi+276]
  0002c	66 83 f8 05	 cmp	 ax, 5
  00030	7e 0a		 jle	 SHORT $LN3@setCharMov

; 467  : 		rate = 2.0F;

  00032	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@40000000
  0003a	eb 1e		 jmp	 SHORT $LN15@setCharMov
$LN3@setCharMov:

; 468  : 	else if( ptAct->bufCount >= 4 )

  0003c	66 83 f8 04	 cmp	 ax, 4
  00040	7c 0a		 jl	 SHORT $LN5@setCharMov

; 469  : 		rate = 1.6F;

  00042	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3fcccccd
  0004a	eb 0e		 jmp	 SHORT $LN15@setCharMov
$LN5@setCharMov:

; 470  : 	else if( ptAct->bufCount >= 2 )

  0004c	66 83 f8 02	 cmp	 ax, 2
  00050	7c 0e		 jl	 SHORT $LN7@setCharMov

; 471  : 		rate = 1.2F;

  00052	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f99999a
$LN15@setCharMov:

; 472  : 	dx = nextGx*GRID_SIZE-ptAct->mx;

  0005a	f3 0f 11 44 24
	0c		 movss	 DWORD PTR _rate$1$[esp+24], xmm0
$LN7@setCharMov:
  00060	8b 7d 0c	 mov	 edi, DWORD PTR _nextGx$[ebp]
  00063	8b c7		 mov	 eax, edi

; 473  : 	dy = nextGy*GRID_SIZE-ptAct->my;

  00065	8b 5d 10	 mov	 ebx, DWORD PTR _nextGy$[ebp]
  00068	c1 e0 06	 shl	 eax, 6
  0006b	66 0f 6e d0	 movd	 xmm2, eax
  0006f	8b c3		 mov	 eax, ebx
  00071	c1 e0 06	 shl	 eax, 6
  00074	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00077	66 0f 6e c0	 movd	 xmm0, eax
  0007b	f3 0f 5c 96 18
	01 00 00	 subss	 xmm2, DWORD PTR [esi+280]
  00083	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00086	f3 0f 11 54 24
	10		 movss	 DWORD PTR _dx$2$[esp+24], xmm2
  0008c	f3 0f 5c 86 1c
	01 00 00	 subss	 xmm0, DWORD PTR [esi+284]

; 474  : 	len = (float)sqrt( (double)(dx*dx+dy*dy) );

  00094	0f 28 c8	 movaps	 xmm1, xmm0
  00097	f3 0f 11 44 24
	14		 movss	 DWORD PTR _dy$2$[esp+24], xmm0
  0009d	f3 0f 59 c8	 mulss	 xmm1, xmm0
  000a1	0f 28 c2	 movaps	 xmm0, xmm2
  000a4	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000a8	f3 0f 58 c8	 addss	 xmm1, xmm0
  000ac	0f 5a c1	 cvtps2pd xmm0, xmm1
  000af	0f 57 c9	 xorps	 xmm1, xmm1
  000b2	66 0f 2e c8	 ucomisd xmm1, xmm0
  000b6	77 06		 ja	 SHORT $LN13@setCharMov
  000b8	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000bc	eb 05		 jmp	 SHORT $LN14@setCharMov
$LN13@setCharMov:
  000be	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN14@setCharMov:
  000c3	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  000c7	0f 57 ed	 xorps	 xmm5, xmm5

; 475  : 	if( len > 0 ){

  000ca	0f 2f c5	 comiss	 xmm0, xmm5
  000cd	76 16		 jbe	 SHORT $LN8@setCharMov

; 476  : 		dx /= len;

  000cf	f3 0f 10 64 24
	10		 movss	 xmm4, DWORD PTR _dx$2$[esp+24]

; 477  : 		dy /= len;

  000d5	f3 0f 10 5c 24
	14		 movss	 xmm3, DWORD PTR _dy$2$[esp+24]
  000db	f3 0f 5e e0	 divss	 xmm4, xmm0
  000df	f3 0f 5e d8	 divss	 xmm3, xmm0

; 478  : 	}else{

  000e3	eb 06		 jmp	 SHORT $LN9@setCharMov
$LN8@setCharMov:
  000e5	0f 57 e4	 xorps	 xmm4, xmm4
  000e8	0f 57 db	 xorps	 xmm3, xmm3
$LN9@setCharMov:

; 479  : 		dx = 0;
; 480  : 		dy = 0;
; 481  : 	}
; 482  : 	ptAct->vx = dx * MOVE_SPEED * rate;

  000eb	0f 28 c4	 movaps	 xmm0, xmm4

; 483  : 	ptAct->vy = dy * MOVE_SPEED * rate;
; 484  : 	ptAct->nextGx = nextGx;

  000ee	89 be bc 00 00
	00		 mov	 DWORD PTR [esi+188], edi
  000f4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000

; 485  : 	ptAct->nextGy = nextGy;

  000fc	89 9e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ebx

; 486  : 	if( dx != 0 || dy != 0 ){

  00102	0f 2e e5	 ucomiss xmm4, xmm5
  00105	f3 0f 59 44 24
	0c		 mulss	 xmm0, DWORD PTR _rate$1$[esp+24]
  0010b	9f		 lahf
  0010c	f3 0f 11 86 20
	01 00 00	 movss	 DWORD PTR [esi+288], xmm0
  00114	0f 28 c3	 movaps	 xmm0, xmm3
  00117	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@40800000
  0011f	f3 0f 59 44 24
	0c		 mulss	 xmm0, DWORD PTR _rate$1$[esp+24]
  00125	f3 0f 11 86 24
	01 00 00	 movss	 DWORD PTR [esi+292], xmm0
  0012d	f6 c4 44	 test	 ah, 68			; 00000044H
  00130	7a 09		 jp	 SHORT $LN11@setCharMov
  00132	0f 2e dd	 ucomiss xmm3, xmm5
  00135	9f		 lahf
  00136	f6 c4 44	 test	 ah, 68			; 00000044H
  00139	7b 4e		 jnp	 SHORT $LN10@setCharMov
$LN11@setCharMov:

; 487  : 		dir1 = Atan( dx, dy ) + 22.5F;

  0013b	83 ec 08	 sub	 esp, 8
  0013e	f3 0f 11 5c 24
	04		 movss	 DWORD PTR [esp+4], xmm3
  00144	f3 0f 11 24 24	 movss	 DWORD PTR [esp], xmm4
  00149	e8 00 00 00 00	 call	 ?Atan@@YAMMM@Z		; Atan
  0014e	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41b40000

; 488  : 		AdjustDir( &dir1 );

  00154	8d 44 24 14	 lea	 eax, DWORD PTR _dir1$[esp+32]
  00158	50		 push	 eax
  00159	d9 5c 24 18	 fstp	 DWORD PTR _dir1$[esp+36]
  0015d	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 489  : 		dir = (int)(dir1/45);

  00162	f3 0f 10 44 24
	18		 movss	 xmm0, DWORD PTR _dir1$[esp+36]
  00168	83 c4 0c	 add	 esp, 12			; 0000000cH
  0016b	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42340000
  00173	f3 0f 2c c0	 cvttss2si eax, xmm0

; 490  : 		ptAct->anim_ang = dir;

  00177	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax

; 491  : 		ptAct->walkFlag = 1;

  0017d	b8 01 00 00 00	 mov	 eax, 1
  00182	66 89 86 16 01
	00 00		 mov	 WORD PTR [esi+278], ax
$LN10@setCharMov:

; 492  : 	}
; 493  : }

  00189	5f		 pop	 edi
  0018a	5e		 pop	 esi
  0018b	5b		 pop	 ebx
  0018c	8b e5		 mov	 esp, ebp
  0018e	5d		 pop	 ebp
  0018f	c3		 ret	 0
?setCharMovePoint@@YAXPAUaction@@HH@Z ENDP		; setCharMovePoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?correctCharMovePoint@@YAXPAUaction@@HH@Z
_TEXT	SEGMENT
_nGy$ = -20						; size = 8
_dy$1$ = -16						; size = 4
_nGx$ = -12						; size = 8
tv430 = -8						; size = 4
_nextGx2$1$ = -4					; size = 4
_dx$1$ = 8						; size = 4
_ptAct$ = 8						; size = 4
_nextGx$ = 12						; size = 4
_nextGy$ = 16						; size = 4
?correctCharMovePoint@@YAXPAUaction@@HH@Z PROC		; correctCharMovePoint, COMDAT

; 405  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 406  : 	int dx, dy;
; 407  : 	int nGx[2], nGy[2], nCnt = 0;
; 408  : 	int i;
; 409  : 	int preCnt;
; 410  : 	int nextGx2, nextGy2;
; 411  : 	if( ptAct == NULL )

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _ptAct$[ebp]
  00006	83 ec 14	 sub	 esp, 20			; 00000014H
  00009	57		 push	 edi
  0000a	33 ff		 xor	 edi, edi
  0000c	85 c9		 test	 ecx, ecx
  0000e	0f 84 fe 00 00
	00		 je	 $LN14@correctCha

; 412  : 		return;
; 413  : 	// îî?î§??????
; 414  : 	// ??????????????next?î???
; 415  : 	if( ptAct->bufCount <= 0 ){

  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	0f b7 b1 14 01
	00 00		 movzx	 esi, WORD PTR [ecx+276]
  0001d	66 85 f6	 test	 si, si
  00020	7f 0e		 jg	 SHORT $LN6@correctCha

; 416  : 		nextGx2 = ptAct->nextGx;

  00022	8b 91 bc 00 00
	00		 mov	 edx, DWORD PTR [ecx+188]

; 417  : 		nextGy2 = ptAct->nextGy;

  00028	8b 99 c0 00 00
	00		 mov	 ebx, DWORD PTR [ecx+192]

; 418  : 	}else{

  0002e	eb 11		 jmp	 SHORT $LN23@correctCha
$LN6@correctCha:

; 419  : 		preCnt = ptAct->bufCount - 1;

  00030	0f bf c6	 movsx	 eax, si

; 420  : 		nextGx2 = ptAct->bufGx[preCnt];

  00033	8b 94 81 c0 00
	00 00		 mov	 edx, DWORD PTR [ecx+eax*4+192]

; 421  : 		nextGy2 = ptAct->bufGy[preCnt];

  0003a	8b 9c 81 e8 00
	00 00		 mov	 ebx, DWORD PTR [ecx+eax*4+232]
$LN23@correctCha:

; 422  : 	}
; 423  : 	dx = nextGx - nextGx2;

  00041	8b 45 0c	 mov	 eax, DWORD PTR _nextGx$[ebp]
  00044	2b c2		 sub	 eax, edx
  00046	89 55 fc	 mov	 DWORD PTR _nextGx2$1$[ebp], edx
  00049	89 45 08	 mov	 DWORD PTR _dx$1$[ebp], eax

; 424  : 	dy = nextGy - nextGy2;

  0004c	8b 45 10	 mov	 eax, DWORD PTR _nextGy$[ebp]
  0004f	2b c3		 sub	 eax, ebx
  00051	89 45 f0	 mov	 DWORD PTR _dy$1$[ebp], eax

; 425  : 	if( ABS( dx ) == 2 && ABS( dy ) == 2 ){

  00054	99		 cdq
  00055	33 c2		 xor	 eax, edx
  00057	2b c2		 sub	 eax, edx
  00059	89 45 f8	 mov	 DWORD PTR tv430[ebp], eax
  0005c	8b 45 08	 mov	 eax, DWORD PTR _dx$1$[ebp]
  0005f	99		 cdq
  00060	33 c2		 xor	 eax, edx
  00062	2b c2		 sub	 eax, edx
  00064	83 f8 02	 cmp	 eax, 2
  00067	75 21		 jne	 SHORT $LN10@correctCha
  00069	8b 45 08	 mov	 eax, DWORD PTR _dx$1$[ebp]
  0006c	bf 01 00 00 00	 mov	 edi, 1
  00071	99		 cdq
  00072	2b c2		 sub	 eax, edx
  00074	d1 f8		 sar	 eax, 1
  00076	03 45 fc	 add	 eax, DWORD PTR _nextGx2$1$[ebp]
  00079	83 7d f8 02	 cmp	 DWORD PTR tv430[ebp], 2
  0007d	89 45 f4	 mov	 DWORD PTR _nGx$[ebp], eax
  00080	74 19		 je	 SHORT $LN24@correctCha

; 426  : 		nGx[nCnt] = nextGx2+dx/2;
; 427  : 		nGy[nCnt] = nextGy2+dy/2;
; 428  : 		nCnt++;
; 429  : 	}else if( ABS( dx ) == 2 ){
; 430  : 		nGx[nCnt] = nextGx2+dx/2;
; 431  : 		nGy[nCnt] = nextGy;

  00082	8b 45 10	 mov	 eax, DWORD PTR _nextGy$[ebp]
  00085	89 45 ec	 mov	 DWORD PTR _nGy$[ebp], eax

; 432  : 		nCnt++;

  00088	eb 21		 jmp	 SHORT $LN12@correctCha
$LN10@correctCha:

; 433  : 	}else if( ABS( dy ) == 2 ){

  0008a	83 7d f8 02	 cmp	 DWORD PTR tv430[ebp], 2
  0008e	75 18		 jne	 SHORT $LN21@correctCha

; 434  : 		nGx[nCnt] = nextGx;

  00090	8b 45 0c	 mov	 eax, DWORD PTR _nextGx$[ebp]

; 435  : 		nGy[nCnt] = nextGy2+dy/2;
; 436  : 		nCnt++;

  00093	bf 01 00 00 00	 mov	 edi, 1
  00098	89 45 f4	 mov	 DWORD PTR _nGx$[ebp], eax
$LN24@correctCha:

; 437  : 	}
; 438  : 	nGx[nCnt] = nextGx;

  0009b	8b 45 f0	 mov	 eax, DWORD PTR _dy$1$[ebp]
  0009e	99		 cdq
  0009f	2b c2		 sub	 eax, edx
  000a1	d1 f8		 sar	 eax, 1
  000a3	03 c3		 add	 eax, ebx
  000a5	89 45 ec	 mov	 DWORD PTR _nGy$[ebp], eax
$LN21@correctCha:
  000a8	8b 45 10	 mov	 eax, DWORD PTR _nextGy$[ebp]
$LN12@correctCha:
  000ab	8b 55 0c	 mov	 edx, DWORD PTR _nextGx$[ebp]

; 439  : 	nGy[nCnt] = nextGy;

  000ae	89 44 bd ec	 mov	 DWORD PTR _nGy$[ebp+edi*4], eax
  000b2	89 54 bd f4	 mov	 DWORD PTR _nGx$[ebp+edi*4], edx

; 440  : 	nCnt++;

  000b6	47		 inc	 edi

; 441  : 	// ??????????????
; 442  : 	if( ptAct->bufCount+nCnt <= sizeof( ptAct->bufGx )/sizeof( int ) ){

  000b7	0f bf c6	 movsx	 eax, si
  000ba	03 c7		 add	 eax, edi
  000bc	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  000bf	77 39		 ja	 SHORT $LN13@correctCha

; 443  : 		for( i = 0; i < nCnt; i++ ){

  000c1	33 f6		 xor	 esi, esi
$LL4@correctCha:

; 444  : 			ptAct->bufGx[ptAct->bufCount] = nGx[i];

  000c3	0f bf 91 14 01
	00 00		 movsx	 edx, WORD PTR [ecx+276]
  000ca	8b 44 b5 f4	 mov	 eax, DWORD PTR _nGx$[ebp+esi*4]
  000ce	89 84 91 c4 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+196], eax

; 445  : 			ptAct->bufGy[ptAct->bufCount] = nGy[i];

  000d5	0f bf 91 14 01
	00 00		 movsx	 edx, WORD PTR [ecx+276]
  000dc	8b 44 b5 ec	 mov	 eax, DWORD PTR _nGy$[ebp+esi*4]
  000e0	46		 inc	 esi
  000e1	89 84 91 ec 00
	00 00		 mov	 DWORD PTR [ecx+edx*4+236], eax

; 446  : 			ptAct->bufCount++;

  000e8	66 ff 81 14 01
	00 00		 inc	 WORD PTR [ecx+276]
  000ef	3b f7		 cmp	 esi, edi
  000f1	7c d0		 jl	 SHORT $LL4@correctCha
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx
  000f5	5f		 pop	 edi

; 453  : 	}
; 454  : }

  000f6	8b e5		 mov	 esp, ebp
  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
$LN13@correctCha:

; 447  : 		}
; 448  : 	}else{
; 449  : 	// ??????î³?????????
; 450  : 		ptAct->bufCount = 0;
; 451  : 		nCnt--;
; 452  : 		setCharWarpPoint( ptAct, nGx[nCnt], nGy[nCnt] );

  000fa	ff 75 10	 push	 DWORD PTR _nextGy$[ebp]
  000fd	33 c0		 xor	 eax, eax
  000ff	52		 push	 edx
  00100	51		 push	 ecx
  00101	66 89 81 14 01
	00 00		 mov	 WORD PTR [ecx+276], ax
  00108	e8 00 00 00 00	 call	 ?setCharWarpPoint@@YAXPAUaction@@HH@Z ; setCharWarpPoint
  0010d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00110	5e		 pop	 esi
  00111	5b		 pop	 ebx
$LN14@correctCha:
  00112	5f		 pop	 edi

; 453  : 	}
; 454  : }

  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
?correctCharMovePoint@@YAXPAUaction@@HH@Z ENDP		; correctCharMovePoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?stockCharMovePoint@@YAXPAUaction@@HH@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_nextGx$ = 12						; size = 4
_nextGy$ = 16						; size = 4
?stockCharMovePoint@@YAXPAUaction@@HH@Z PROC		; stockCharMovePoint, COMDAT

; 387  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 388  : 	if( ptAct == NULL )

  00003	8b 55 08	 mov	 edx, DWORD PTR _ptAct$[ebp]
  00006	85 d2		 test	 edx, edx
  00008	74 31		 je	 SHORT $LN4@stockCharM

; 389  : 		return;
; 390  : 	// ??????????????
; 391  : 	if( ptAct->bufCount < sizeof( ptAct->bufGx )/sizeof( int ) ){

  0000a	0f b7 82 14 01
	00 00		 movzx	 eax, WORD PTR [edx+276]
  00011	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00014	73 27		 jae	 SHORT $LN3@stockCharM

; 392  : 		ptAct->bufGx[ptAct->bufCount] = nextGx;

  00016	0f bf c8	 movsx	 ecx, ax
  00019	8b 45 0c	 mov	 eax, DWORD PTR _nextGx$[ebp]
  0001c	89 84 8a c4 00
	00 00		 mov	 DWORD PTR [edx+ecx*4+196], eax

; 393  : 		ptAct->bufGy[ptAct->bufCount] = nextGy;

  00023	0f bf 8a 14 01
	00 00		 movsx	 ecx, WORD PTR [edx+276]
  0002a	8b 45 10	 mov	 eax, DWORD PTR _nextGy$[ebp]
  0002d	89 84 8a ec 00
	00 00		 mov	 DWORD PTR [edx+ecx*4+236], eax

; 394  : 		ptAct->bufCount++;

  00034	66 ff 82 14 01
	00 00		 inc	 WORD PTR [edx+276]
$LN4@stockCharM:

; 399  : 	}
; 400  : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
$LN3@stockCharM:

; 395  : 	}else{
; 396  : 	// ??????î³?????????
; 397  : 		ptAct->bufCount = 0;

  0003d	33 c0		 xor	 eax, eax

; 398  : 		setCharWarpPoint( ptAct, nextGx, nextGy );

  0003f	89 55 08	 mov	 DWORD PTR _ptAct$[ebp], edx
  00042	66 89 82 14 01
	00 00		 mov	 WORD PTR [edx+276], ax

; 399  : 	}
; 400  : }

  00049	5d		 pop	 ebp

; 398  : 		setCharWarpPoint( ptAct, nextGx, nextGy );

  0004a	e9 00 00 00 00	 jmp	 ?setCharWarpPoint@@YAXPAUaction@@HH@Z ; setCharWarpPoint
?stockCharMovePoint@@YAXPAUaction@@HH@Z ENDP		; stockCharMovePoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?createWaterAnimation@@YAPAUaction@@HHHH@Z
_TEXT	SEGMENT
_my$ = -8						; size = 4
_mx$ = -4						; size = 4
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_dispprio$ = 20						; size = 4
?createWaterAnimation@@YAPAUaction@@HHHH@Z PROC		; createWaterAnimation, COMDAT

; 311  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 312  : 
; 313  : 	ACTION *ptAct;
; 314  : 	float mx, my;
; 315  : 	ptAct = GetAction( DISP_PRIO_BOX3, sizeof( CHAREXTRA ) );

  00007	6a 40		 push	 64			; 00000040H
  00009	6a 6f		 push	 111			; 0000006fH
  0000b	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 08	 add	 esp, 8

; 316  : //	ptAct = GetAction( PRIO_JIKI, NULL );
; 317  : 	if( ptAct == NULL )	return NULL;

  00015	85 f6		 test	 esi, esi
  00017	75 05		 jne	 SHORT $LN2@createWate
  00019	5e		 pop	 esi

; 338  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN2@createWate:

; 318  : 	ptAct->func = waterAniProc;
; 319  : 	ptAct->anim_chr_no = graNo;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]

; 320  : 	ptAct->anim_no = ANIM_STAND;
; 321  : 	ptAct->anim_ang = 1;
; 322  : 	ptAct->dispPrio = dispprio;
; 323  : 	ptAct->atr |= ACT_ATR_HIT;
; 324  : 	ptAct->nextGx = gx;	
; 325  : 	ptAct->nextGy = gy;
; 326  : 	ptAct->bufCount = 0;

  00021	33 d2		 xor	 edx, edx
  00023	8b 4d 10	 mov	 ecx, DWORD PTR _gy$[ebp]
  00026	83 8e a4 00 00
	00 04		 or	 DWORD PTR [esi+164], 4
  0002d	89 86 44 01 00
	00		 mov	 DWORD PTR [esi+324], eax
  00033	8a 45 14	 mov	 al, BYTE PTR _dispprio$[ebp]
  00036	88 46 15	 mov	 BYTE PTR [esi+21], al
  00039	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  0003c	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax

; 327  : 	ptAct->gx = gx;

  00042	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00048	66 0f 6e c9	 movd	 xmm1, ecx
  0004c	66 0f 6e d0	 movd	 xmm2, eax

; 328  : 	ptAct->gy = gy;
; 329  : 	ptAct->mx = (float)gx * GRID_SIZE;	
; 330  : 	ptAct->my = (float)gy * GRID_SIZE;
; 331  : 	ptAct->vx = 0;			
; 332  : 	ptAct->vy = 0;
; 333  : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  00050	8d 45 f8	 lea	 eax, DWORD PTR _my$[ebp]
  00053	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00056	50		 push	 eax
  00057	8d 45 fc	 lea	 eax, DWORD PTR _mx$[ebp]
  0005a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ?waterAniProc@@YAXPAUaction@@@Z ; waterAniProc
  00061	50		 push	 eax
  00062	83 ec 08	 sub	 esp, 8
  00065	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  0006f	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00072	c7 86 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [esi+340], 1
  0007c	89 8e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ecx
  00082	66 89 96 14 01
	00 00		 mov	 WORD PTR [esi+276], dx
  00089	89 8e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ecx
  0008f	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  00097	89 96 20 01 00
	00		 mov	 DWORD PTR [esi+288], edx
  0009d	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  000a5	89 96 24 01 00
	00		 mov	 DWORD PTR [esi+292], edx
  000ab	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000b1	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  000b9	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  000c1	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000c6	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000cb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$[ebp]

; 334  : 	ptAct->x = (int)(mx+.5);

  000d0	0f 5a c0	 cvtps2pd xmm0, xmm0

; 335  : 	ptAct->y = (int)(my+.5);
; 336  : 	pattern( ptAct, ANM_NOMAL_SPD, ANM_NO_LOOP );

  000d3	6a 01		 push	 1
  000d5	6a 00		 push	 0
  000d7	56		 push	 esi
  000d8	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000e0	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000e4	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000e7	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$[ebp]
  000ec	0f 5a c0	 cvtps2pd xmm0, xmm0
  000ef	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000f7	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000fb	89 46 1c	 mov	 DWORD PTR [esi+28], eax
  000fe	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  00103	83 c4 1c	 add	 esp, 28			; 0000001cH

; 337  : 	return ptAct;

  00106	8b c6		 mov	 eax, esi
  00108	5e		 pop	 esi

; 338  : }

  00109	8b e5		 mov	 esp, ebp
  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
?createWaterAnimation@@YAPAUaction@@HHHH@Z ENDP		; createWaterAnimation
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?createCharAction@@YAPAUaction@@HHHH@Z
_TEXT	SEGMENT
_my$ = -8						; size = 4
_mx$ = -4						; size = 4
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_dir$ = 20						; size = 4
?createCharAction@@YAPAUaction@@HHHH@Z PROC		; createCharAction, COMDAT

; 343  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 344  : 	ACTION *ptAct;
; 345  : 	float mx, my;
; 346  : 	/* ?????????î? */
; 347  : 	ptAct = GetAction( PRIO_CHR, sizeof( CHAREXTRA ) );

  00007	6a 40		 push	 64			; 00000040H
  00009	6a 01		 push	 1
  0000b	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00010	8b f0		 mov	 esi, eax
  00012	83 c4 08	 add	 esp, 8

; 348  : 	if( ptAct == NULL )

  00015	85 f6		 test	 esi, esi
  00017	75 05		 jne	 SHORT $LN2@createChar
  00019	5e		 pop	 esi

; 383  : }

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
$LN2@createChar:

; 349  : 		return NULL;
; 350  : 	// î¯???
; 351  : 	ptAct->func = charProc;
; 352  : 	// ???????î±?
; 353  : 	ptAct->anim_chr_no = graNo;

  0001e	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]

; 354  : 	// î®?î±?
; 355  : 	ptAct->anim_no = ANIM_STAND;
; 356  : 	// ?????????( ??? )( ??????? )
; 357  : 	ptAct->anim_ang = dir;
; 358  : 	// î¸î?îî
; 359  : //	ptAct->dispPrio =	DISP_PRIO_BOX3;
; 360  : 	ptAct->dispPrio = DISP_PRIO_CHAR;
; 361  : 	// 1?????î¸î???
; 362  : 	ptAct->atr = ACT_ATR_INFO |	ACT_ATR_HIT | ACT_ATR_HIDE2;
; 363  : 	// ???îº
; 364  : 	ptAct->nextGx = gx;					// ????????î³??î®î?
; 365  : 	ptAct->nextGy = gy;
; 366  : 	ptAct->bufCount = 0;

  00021	33 d2		 xor	 edx, edx
  00023	8b 4d 10	 mov	 ecx, DWORD PTR _gy$[ebp]
  00026	89 86 44 01 00
	00		 mov	 DWORD PTR [esi+324], eax
  0002c	8b 45 14	 mov	 eax, DWORD PTR _dir$[ebp]
  0002f	89 86 54 01 00
	00		 mov	 DWORD PTR [esi+340], eax
  00035	8b 45 0c	 mov	 eax, DWORD PTR _gx$[ebp]
  00038	89 86 bc 00 00
	00		 mov	 DWORD PTR [esi+188], eax

; 367  : 	ptAct->gx = gx;						// ????????î³???ä½?

  0003e	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00044	66 0f 6e c9	 movd	 xmm1, ecx
  00048	66 0f 6e d0	 movd	 xmm2, eax

; 368  : 	ptAct->gy = gy;
; 369  : 	ptAct->mx = (float)gx * GRID_SIZE;	// ????î³
; 370  : 	ptAct->my = (float)gy * GRID_SIZE;
; 371  : 	ptAct->vx = 0;						// ?î®?î¤
; 372  : 	ptAct->vy = 0;
; 373  : 	// ?î¡¡î¸î?îº
; 374  : 	camMapToGamen( ptAct->mx, ptAct->my, &mx, &my );

  0004c	8d 45 f8	 lea	 eax, DWORD PTR _my$[ebp]
  0004f	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00052	50		 push	 eax
  00053	8d 45 fc	 lea	 eax, DWORD PTR _mx$[ebp]
  00056	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], OFFSET ?charProc@@YAXPAUaction@@@Z ; charProc
  0005d	50		 push	 eax
  0005e	83 ec 08	 sub	 esp, 8
  00061	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
  0006b	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0006e	c6 46 15 0a	 mov	 BYTE PTR [esi+21], 10	; 0000000aH
  00072	c7 86 a4 00 00
	00 34 00 00 00	 mov	 DWORD PTR [esi+164], 52	; 00000034H
  0007c	89 8e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ecx
  00082	66 89 96 14 01
	00 00		 mov	 WORD PTR [esi+276], dx
  00089	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  00091	89 8e b8 00 00
	00		 mov	 DWORD PTR [esi+184], ecx
  00097	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  0009f	89 96 20 01 00
	00		 mov	 DWORD PTR [esi+288], edx
  000a5	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000ab	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  000b3	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  000bb	89 96 24 01 00
	00		 mov	 DWORD PTR [esi+292], edx
  000c1	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000c6	e8 00 00 00 00	 call	 ?camMapToGamen@@YAXMMPAM0@Z ; camMapToGamen
  000cb	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _mx$[ebp]
  000d0	83 c4 10	 add	 esp, 16			; 00000010H

; 375  : 	ptAct->x = (int)(mx+.5);

  000d3	0f 5a c0	 cvtps2pd xmm0, xmm0
  000d6	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  000de	f2 0f 2c c0	 cvttsd2si eax, xmm0
  000e2	89 46 18	 mov	 DWORD PTR [esi+24], eax
  000e5	f3 0f 10 45 f8	 movss	 xmm0, DWORD PTR _my$[ebp]

; 376  : 	ptAct->y = (int)(my+.5);

  000ea	0f 5a c0	 cvtps2pd xmm0, xmm0

; 377  : //#ifdef äººç©åç¯
; 378  : //#ifdef äººç©ç§°å·
; 379  : 
; 380  : 	ptAct->ç§°å·å¾æ¡£ç¼å· = 0;

  000ed	c7 86 cc 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+460], 0

; 381  : 	ptAct->åç¯å¾æ¡£ç¼å· = 0;

  000f7	c7 86 c8 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+456], 0
  00101	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00109	f2 0f 2c c0	 cvttsd2si eax, xmm0
  0010d	89 46 1c	 mov	 DWORD PTR [esi+28], eax

; 382  : 	return ptAct;

  00110	8b c6		 mov	 eax, esi
  00112	5e		 pop	 esi

; 383  : }

  00113	8b e5		 mov	 esp, ebp
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
?createCharAction@@YAPAUaction@@HHHH@Z ENDP		; createCharAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?shiftBufCount@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?shiftBufCount@@YAXPAUaction@@@Z PROC			; shiftBufCount, COMDAT

; 528  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 529  : 	int i;
; 530  : 	if( ptAct == NULL )

  00004	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 43		 je	 SHORT $LN3@shiftBufCo

; 531  : 		return;
; 532  : 	if( ptAct->bufCount > 0 )

  0000b	0f b7 86 14 01
	00 00		 movzx	 eax, WORD PTR [esi+276]
  00012	8b c8		 mov	 ecx, eax
  00014	66 85 c0	 test	 ax, ax
  00017	7e 0b		 jle	 SHORT $LN6@shiftBufCo

; 533  : 		ptAct->bufCount--;

  00019	48		 dec	 eax
  0001a	66 89 86 14 01
	00 00		 mov	 WORD PTR [esi+276], ax
  00021	0f b7 c8	 movzx	 ecx, ax
$LN6@shiftBufCo:

; 534  : 	for( i = 0; i < ptAct->bufCount; i++ ){

  00024	33 c0		 xor	 eax, eax
  00026	33 d2		 xor	 edx, edx
  00028	66 3b c1	 cmp	 ax, cx
  0002b	7d 21		 jge	 SHORT $LN3@shiftBufCo
  0002d	8d 86 c4 00 00
	00		 lea	 eax, DWORD PTR [esi+196]
$LL4@shiftBufCo:

; 535  : 		ptAct->bufGx[i] = ptAct->bufGx[i+1];

  00033	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00036	8d 40 04	 lea	 eax, DWORD PTR [eax+4]
  00039	89 48 fc	 mov	 DWORD PTR [eax-4], ecx
  0003c	42		 inc	 edx

; 536  : 		ptAct->bufGy[i] = ptAct->bufGy[i+1];

  0003d	8b 48 28	 mov	 ecx, DWORD PTR [eax+40]
  00040	89 48 24	 mov	 DWORD PTR [eax+36], ecx
  00043	0f bf 8e 14 01
	00 00		 movsx	 ecx, WORD PTR [esi+276]
  0004a	3b d1		 cmp	 edx, ecx
  0004c	7c e5		 jl	 SHORT $LL4@shiftBufCo
$LN3@shiftBufCo:
  0004e	5e		 pop	 esi

; 537  : 	}
; 538  : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
?shiftBufCount@@YAXPAUaction@@@Z ENDP			; shiftBufCount
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?_charMove@@YAXPAUaction@@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
tv360 = -8						; size = 4
_vx$1$ = -4						; size = 4
_vy$1$ = 8						; size = 4
_ptAct$ = 8						; size = 4
?_charMove@@YAXPAUaction@@@Z PROC			; _charMove, COMDAT

; 620  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	56		 push	 esi

; 621  : 	float mx, my;
; 622  : 	float vx, vy;
; 623  : 	if( ptAct == NULL )

  00007	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	0f 84 75 01 00
	00		 je	 $LN1@charMove

; 624  : 		return;
; 625  : 	mx = (float)ptAct->nextGx*GRID_SIZE;
; 626  : 	my = (float)ptAct->nextGy*GRID_SIZE;
; 627  : 	// ?î®???
; 628  : 	if( ptAct->vx != 0 || ptAct->vy != 0 ){

  00012	f3 0f 10 9e 20
	01 00 00	 movss	 xmm3, DWORD PTR [esi+288]
  0001a	0f 57 e4	 xorps	 xmm4, xmm4
  0001d	66 0f 6e 8e bc
	00 00 00	 movd	 xmm1, DWORD PTR [esi+188]
  00025	66 0f 6e 96 c0
	00 00 00	 movd	 xmm2, DWORD PTR [esi+192]
  0002d	0f 2e dc	 ucomiss xmm3, xmm4
  00030	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00033	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00036	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  0003e	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  00046	9f		 lahf
  00047	f3 0f 11 4d f4	 movss	 DWORD PTR $T2[ebp], xmm1
  0004c	f3 0f 11 55 f0	 movss	 DWORD PTR $T1[ebp], xmm2
  00051	f6 c4 44	 test	 ah, 68			; 00000044H
  00054	7a 43		 jp	 SHORT $LN11@charMove
  00056	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  0005e	0f 2e c4	 ucomiss xmm0, xmm4
  00061	9f		 lahf
  00062	f6 c4 44	 test	 ah, 68			; 00000044H
  00065	7a 32		 jp	 SHORT $LN11@charMove

; 645  : 	}else{
; 646  : 		// î?î®????î¿î?
; 647  : 		if( ptAct->walkFlag != 0 )

  00067	66 83 be 16 01
	00 00 00	 cmp	 WORD PTR [esi+278], 0
  0006f	74 0a		 je	 SHORT $LN8@charMove

; 648  : 			ptAct->anim_no = ANIM_STAND;

  00071	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
$LN8@charMove:

; 649  : 		ptAct->walkFlag = 0;

  0007b	f3 0f 10 8e 18
	01 00 00	 movss	 xmm1, DWORD PTR [esi+280]
  00083	33 c0		 xor	 eax, eax
  00085	f3 0f 10 96 1c
	01 00 00	 movss	 xmm2, DWORD PTR [esi+284]
  0008d	66 89 86 16 01
	00 00		 mov	 WORD PTR [esi+278], ax
  00094	e9 ca 00 00 00	 jmp	 $LN4@charMove
$LN11@charMove:

; 629  : 		vx = ptAct->vx * nowSpdRate;

  00099	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR ?nowSpdRate@@3MA

; 630  : 		vy = ptAct->vy * nowSpdRate;
; 631  : 		// ?î«ä½?????????????
; 632  : 		if( pointLen2( ptAct->mx, ptAct->my, mx, my )
; 633  : 			<= vx*vx+vy*vy ){

  000a1	83 ec 10	 sub	 esp, 16			; 00000010H
  000a4	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  000ac	f3 0f 11 5d fc	 movss	 DWORD PTR _vx$1$[ebp], xmm3
  000b1	f3 0f 10 9e 24
	01 00 00	 movss	 xmm3, DWORD PTR [esi+292]
  000b9	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR ?nowSpdRate@@3MA
  000c1	f3 0f 11 54 24
	0c		 movss	 DWORD PTR [esp+12], xmm2
  000c7	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000cd	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d3	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  000db	f3 0f 11 5d 08	 movss	 DWORD PTR _vy$1$[ebp], xmm3
  000e0	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000e5	e8 00 00 00 00	 call	 ?pointLen2@@YAMMMMM@Z	; pointLen2
  000ea	f3 0f 10 5d 08	 movss	 xmm3, DWORD PTR _vy$1$[ebp]
  000ef	83 c4 10	 add	 esp, 16			; 00000010H
  000f2	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR _vx$1$[ebp]
  000f7	0f 28 cb	 movaps	 xmm1, xmm3
  000fa	0f 28 c2	 movaps	 xmm0, xmm2
  000fd	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00101	f3 0f 59 c2	 mulss	 xmm0, xmm2
  00105	d9 5d f8	 fstp	 DWORD PTR tv360[ebp]
  00108	f3 0f 58 c8	 addss	 xmm1, xmm0
  0010c	0f 2f 4d f8	 comiss	 xmm1, DWORD PTR tv360[ebp]
  00110	72 20		 jb	 SHORT $LN6@charMove

; 634  : 			ptAct->mx = mx;

  00112	f3 0f 10 4d f4	 movss	 xmm1, DWORD PTR $T2[ebp]

; 635  : 			ptAct->my = my;

  00117	f3 0f 10 55 f0	 movss	 xmm2, DWORD PTR $T1[ebp]

; 636  : 			ptAct->vx = 0;

  0011c	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0

; 637  : 			ptAct->vy = 0;

  00126	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0

; 638  : 		}else{

  00130	eb 17		 jmp	 SHORT $LN12@charMove
$LN6@charMove:

; 639  : 		// ?î®
; 640  : 			ptAct->mx += vx;

  00132	0f 28 ca	 movaps	 xmm1, xmm2

; 641  : 			ptAct->my += vy;

  00135	f3 0f 10 96 1c
	01 00 00	 movss	 xmm2, DWORD PTR [esi+284]
  0013d	f3 0f 58 8e 18
	01 00 00	 addss	 xmm1, DWORD PTR [esi+280]
  00145	f3 0f 58 d3	 addss	 xmm2, xmm3
$LN12@charMove:

; 642  : 		}
; 643  : 		// ?î®???
; 644  : 		ptAct->anim_no = ANIM_WALK;

  00149	f3 0f 11 96 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm2
  00151	f3 0f 11 8e 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm1
  00159	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
$LN4@charMove:

; 650  : 	}
; 651  : 	ptAct->gx = (int)(ptAct->mx/GRID_SIZE);

  00163	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c800000

; 652  : 	ptAct->gy = (int)(ptAct->my/GRID_SIZE);

  0016b	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3c800000
  00173	f3 0f 2c c1	 cvttss2si eax, xmm1
  00177	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  0017d	f3 0f 2c c2	 cvttss2si eax, xmm2
  00181	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
$LN1@charMove:
  00187	5e		 pop	 esi

; 653  : }

  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
?_charMove@@YAXPAUaction@@@Z ENDP			; _charMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?charMove2@@YAXPAUaction@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
$T2 = -4						; size = 4
tv75 = 8						; size = 4
_ptAct$ = 8						; size = 4
?charMove2@@YAXPAUaction@@@Z PROC			; charMove2, COMDAT

; 586  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 587  : 	float mx, my;
; 588  : 	if( ptAct == NULL )

  00007	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	0f 84 5a 01 00
	00		 je	 $LN1@charMove2

; 589  : 		return;
; 590  : 	mx = (float)ptAct->nextGx*GRID_SIZE;
; 591  : 	my = (float)ptAct->nextGy*GRID_SIZE;
; 592  : 	// ?î®???
; 593  : 	if( ptAct->vx != 0 || ptAct->vy != 0 ){

  00012	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  0001a	0f 57 db	 xorps	 xmm3, xmm3
  0001d	66 0f 6e 8e bc
	00 00 00	 movd	 xmm1, DWORD PTR [esi+188]
  00025	66 0f 6e 96 c0
	00 00 00	 movd	 xmm2, DWORD PTR [esi+192]
  0002d	0f 2e c3	 ucomiss xmm0, xmm3
  00030	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00033	0f 5b d2	 cvtdq2ps xmm2, xmm2
  00036	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@42800000
  0003e	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  00046	9f		 lahf
  00047	f3 0f 11 4d fc	 movss	 DWORD PTR $T2[ebp], xmm1
  0004c	f3 0f 11 55 f8	 movss	 DWORD PTR $T1[ebp], xmm2
  00051	f6 c4 44	 test	 ah, 68			; 00000044H
  00054	7a 43		 jp	 SHORT $LN11@charMove2
  00056	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  0005e	0f 2e c3	 ucomiss xmm0, xmm3
  00061	9f		 lahf
  00062	f6 c4 44	 test	 ah, 68			; 00000044H
  00065	7a 32		 jp	 SHORT $LN11@charMove2

; 608  : 	}else{
; 609  : 		// î?î®????î¿î?
; 610  : 		if( ptAct->walkFlag != 0 )

  00067	66 83 be 16 01
	00 00 00	 cmp	 WORD PTR [esi+278], 0
  0006f	74 0a		 je	 SHORT $LN8@charMove2

; 611  : 			ptAct->anim_no = ANIM_STAND;

  00071	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
$LN8@charMove2:

; 612  : 		ptAct->walkFlag = 0;

  0007b	f3 0f 10 8e 18
	01 00 00	 movss	 xmm1, DWORD PTR [esi+280]
  00083	33 c0		 xor	 eax, eax
  00085	f3 0f 10 96 1c
	01 00 00	 movss	 xmm2, DWORD PTR [esi+284]
  0008d	66 89 86 16 01
	00 00		 mov	 WORD PTR [esi+278], ax
  00094	e9 af 00 00 00	 jmp	 $LN4@charMove2
$LN11@charMove2:

; 594  : 		// ?î«ä½?????????????
; 595  : 		if( pointLen2( ptAct->mx, ptAct->my, mx, my )
; 596  : 			<= ptAct->vx*ptAct->vx+ptAct->vy*ptAct->vy ){

  00099	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  000a1	83 ec 10	 sub	 esp, 16			; 00000010H
  000a4	f3 0f 11 54 24
	0c		 movss	 DWORD PTR [esp+12], xmm2
  000aa	f3 0f 11 4c 24
	08		 movss	 DWORD PTR [esp+8], xmm1
  000b0	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000b6	f3 0f 10 86 18
	01 00 00	 movss	 xmm0, DWORD PTR [esi+280]
  000be	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000c3	e8 00 00 00 00	 call	 ?pointLen2@@YAMMMMM@Z	; pointLen2
  000c8	f3 0f 10 9e 24
	01 00 00	 movss	 xmm3, DWORD PTR [esi+292]
  000d0	83 c4 10	 add	 esp, 16			; 00000010H
  000d3	f3 0f 10 96 20
	01 00 00	 movss	 xmm2, DWORD PTR [esi+288]
  000db	0f 28 cb	 movaps	 xmm1, xmm3
  000de	0f 28 c2	 movaps	 xmm0, xmm2
  000e1	f3 0f 59 cb	 mulss	 xmm1, xmm3
  000e5	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000e9	d9 5d 08	 fstp	 DWORD PTR tv75[ebp]
  000ec	f3 0f 58 c8	 addss	 xmm1, xmm0
  000f0	0f 2f 4d 08	 comiss	 xmm1, DWORD PTR tv75[ebp]
  000f4	72 20		 jb	 SHORT $LN6@charMove2

; 597  : 			ptAct->mx = mx;

  000f6	f3 0f 10 4d fc	 movss	 xmm1, DWORD PTR $T2[ebp]

; 598  : 			ptAct->my = my;

  000fb	f3 0f 10 55 f8	 movss	 xmm2, DWORD PTR $T1[ebp]

; 599  : 			ptAct->vx = 0;

  00100	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0

; 600  : 			ptAct->vy = 0;

  0010a	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0

; 601  : 		}else{

  00114	eb 18		 jmp	 SHORT $LN12@charMove2
$LN6@charMove2:

; 602  : 		// ?î®
; 603  : 			ptAct->mx += ptAct->vx;

  00116	f3 0f 10 8e 18
	01 00 00	 movss	 xmm1, DWORD PTR [esi+280]
  0011e	f3 0f 58 ca	 addss	 xmm1, xmm2

; 604  : 			ptAct->my += ptAct->vy;

  00122	f3 0f 10 96 1c
	01 00 00	 movss	 xmm2, DWORD PTR [esi+284]
  0012a	f3 0f 58 d3	 addss	 xmm2, xmm3
$LN12@charMove2:

; 605  : 		}
; 606  : 		// ?î®???
; 607  : 		ptAct->anim_no = ANIM_WALK;

  0012e	f3 0f 11 96 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm2
  00136	f3 0f 11 8e 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm1
  0013e	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
$LN4@charMove2:

; 613  : 	}
; 614  : 	ptAct->gx = (int)(ptAct->mx/GRID_SIZE);

  00148	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c800000

; 615  : 	ptAct->gy = (int)(ptAct->my/GRID_SIZE);

  00150	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3c800000
  00158	f3 0f 2c c1	 cvttss2si eax, xmm1
  0015c	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  00162	f3 0f 2c c2	 cvttss2si eax, xmm2
  00166	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
$LN1@charMove2:
  0016c	5e		 pop	 esi

; 616  : }

  0016d	8b e5		 mov	 esp, ebp
  0016f	5d		 pop	 ebp
  00170	c3		 ret	 0
?charMove2@@YAXPAUaction@@@Z ENDP			; charMove2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?charMove@@YAXPAUaction@@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_mx$1$ = -4						; size = 4
tv130 = 8						; size = 4
_ptAct$ = 8						; size = 4
?charMove@@YAXPAUaction@@@Z PROC			; charMove, COMDAT

; 542  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi

; 543  : 	float mx, my;
; 544  : 	if( ptAct == NULL )

  00007	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  0000a	85 f6		 test	 esi, esi
  0000c	0f 84 c6 01 00
	00		 je	 $LN1@charMove

; 545  : 		return;
; 546  : 	mx = (float)ptAct->nextGx*GRID_SIZE;

  00012	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]

; 548  : 	// ??????î???????î®î?îî??
; 549  : 	if( mx == ptAct->mx && my == ptAct->my ){

  00018	8b d1		 mov	 edx, ecx
  0001a	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@42800000
  00022	f3 0f 10 9e 18
	01 00 00	 movss	 xmm3, DWORD PTR [esi+280]
  0002a	0f 28 d3	 movaps	 xmm2, xmm3
  0002d	66 0f 6e c1	 movd	 xmm0, ecx
  00031	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00034	f3 0f 59 c5	 mulss	 xmm0, xmm5
  00038	0f 2e c3	 ucomiss xmm0, xmm3
  0003b	9f		 lahf
  0003c	f6 c4 44	 test	 ah, 68			; 00000044H
  0003f	7a 5a		 jp	 SHORT $LN4@charMove

; 547  : 	my = (float)ptAct->nextGy*GRID_SIZE;

  00041	66 0f 6e 86 c0
	00 00 00	 movd	 xmm0, DWORD PTR [esi+192]
  00049	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0004c	f3 0f 59 c5	 mulss	 xmm0, xmm5

; 548  : 	// ??????î???????î®î?îî??
; 549  : 	if( mx == ptAct->mx && my == ptAct->my ){

  00050	0f 2e 86 1c 01
	00 00		 ucomiss xmm0, DWORD PTR [esi+284]
  00057	9f		 lahf
  00058	f6 c4 44	 test	 ah, 68			; 00000044H
  0005b	7a 3e		 jp	 SHORT $LN4@charMove

; 550  : 		// ????????î³?????îî
; 551  : 		if( ptAct->bufCount > 0 ){

  0005d	66 83 be 14 01
	00 00 00	 cmp	 WORD PTR [esi+276], 0
  00065	7e 34		 jle	 SHORT $LN4@charMove

; 552  : 			setCharMovePoint( ptAct, ptAct->bufGx[0], ptAct->bufGy[0] );

  00067	ff b6 ec 00 00
	00		 push	 DWORD PTR [esi+236]
  0006d	ff b6 c4 00 00
	00		 push	 DWORD PTR [esi+196]
  00073	56		 push	 esi
  00074	e8 00 00 00 00	 call	 ?setCharMovePoint@@YAXPAUaction@@HH@Z ; setCharMovePoint

; 553  : 			shiftBufCount( ptAct );

  00079	56		 push	 esi
  0007a	e8 00 00 00 00	 call	 ?shiftBufCount@@YAXPAUaction@@@Z ; shiftBufCount
  0007f	f3 0f 10 9e 18
	01 00 00	 movss	 xmm3, DWORD PTR [esi+280]
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	8b 96 bc 00 00
	00		 mov	 edx, DWORD PTR [esi+188]
  00090	0f 28 d3	 movaps	 xmm2, xmm3
  00093	f3 0f 10 2d 00
	00 00 00	 movss	 xmm5, DWORD PTR __real@42800000
$LN4@charMove:

; 554  : 		}
; 555  : 	}
; 556  : 	mx = (float)ptAct->nextGx*GRID_SIZE;
; 557  : 	my = (float)ptAct->nextGy*GRID_SIZE;
; 558  : 	// ?î®???
; 559  : 	if( ptAct->vx != 0 || ptAct->vy != 0 ){

  0009b	66 0f 6e 8e c0
	00 00 00	 movd	 xmm1, DWORD PTR [esi+192]
  000a3	f3 0f 10 86 20
	01 00 00	 movss	 xmm0, DWORD PTR [esi+288]
  000ab	66 0f 6e e2	 movd	 xmm4, edx
  000af	0f 5b e4	 cvtdq2ps xmm4, xmm4
  000b2	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000b5	f3 0f 59 e5	 mulss	 xmm4, xmm5
  000b9	f3 0f 59 cd	 mulss	 xmm1, xmm5
  000bd	0f 57 ed	 xorps	 xmm5, xmm5
  000c0	0f 2e c5	 ucomiss xmm0, xmm5
  000c3	f3 0f 11 65 fc	 movss	 DWORD PTR _mx$1$[ebp], xmm4
  000c8	f3 0f 11 4d f8	 movss	 DWORD PTR $T1[ebp], xmm1
  000cd	9f		 lahf
  000ce	f6 c4 44	 test	 ah, 68			; 00000044H
  000d1	7a 3b		 jp	 SHORT $LN13@charMove
  000d3	f3 0f 10 86 24
	01 00 00	 movss	 xmm0, DWORD PTR [esi+292]
  000db	0f 2e c5	 ucomiss xmm0, xmm5
  000de	9f		 lahf
  000df	f6 c4 44	 test	 ah, 68			; 00000044H
  000e2	7a 2a		 jp	 SHORT $LN13@charMove

; 574  : 	}else{
; 575  : 		// î?î®????î¿î?
; 576  : 		if( ptAct->walkFlag != 0 )

  000e4	66 83 be 16 01
	00 00 00	 cmp	 WORD PTR [esi+278], 0
  000ec	74 0a		 je	 SHORT $LN10@charMove

; 577  : 			ptAct->anim_no = ANIM_STAND;

  000ee	c7 86 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [esi+332], 3
$LN10@charMove:

; 578  : 		ptAct->walkFlag = 0;

  000f8	f3 0f 10 8e 1c
	01 00 00	 movss	 xmm1, DWORD PTR [esi+284]
  00100	33 c0		 xor	 eax, eax
  00102	66 89 86 16 01
	00 00		 mov	 WORD PTR [esi+278], ax
  00109	e9 a6 00 00 00	 jmp	 $LN6@charMove
$LN13@charMove:

; 560  : 		// ?î«ä½?????????????
; 561  : 		if( pointLen2( ptAct->mx, ptAct->my, mx, my )
; 562  : 			<= ptAct->vx*ptAct->vx+ptAct->vy*ptAct->vy ){

  0010e	f3 0f 10 86 1c
	01 00 00	 movss	 xmm0, DWORD PTR [esi+284]
  00116	83 ec 10	 sub	 esp, 16			; 00000010H
  00119	f3 0f 11 4c 24
	0c		 movss	 DWORD PTR [esp+12], xmm1
  0011f	f3 0f 11 64 24
	08		 movss	 DWORD PTR [esp+8], xmm4
  00125	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0012b	f3 0f 11 1c 24	 movss	 DWORD PTR [esp], xmm3
  00130	e8 00 00 00 00	 call	 ?pointLen2@@YAMMMMM@Z	; pointLen2
  00135	f3 0f 10 9e 24
	01 00 00	 movss	 xmm3, DWORD PTR [esi+292]
  0013d	83 c4 10	 add	 esp, 16			; 00000010H
  00140	f3 0f 10 a6 20
	01 00 00	 movss	 xmm4, DWORD PTR [esi+288]
  00148	0f 28 cb	 movaps	 xmm1, xmm3
  0014b	0f 28 c4	 movaps	 xmm0, xmm4
  0014e	f3 0f 59 cb	 mulss	 xmm1, xmm3
  00152	f3 0f 59 c4	 mulss	 xmm0, xmm4
  00156	d9 5d 08	 fstp	 DWORD PTR tv130[ebp]
  00159	f3 0f 58 c8	 addss	 xmm1, xmm0
  0015d	0f 2f 4d 08	 comiss	 xmm1, DWORD PTR tv130[ebp]
  00161	72 20		 jb	 SHORT $LN8@charMove

; 563  : 			ptAct->mx = mx;

  00163	f3 0f 10 55 fc	 movss	 xmm2, DWORD PTR _mx$1$[ebp]

; 564  : 			ptAct->my = my;

  00168	f3 0f 10 4d f8	 movss	 xmm1, DWORD PTR $T1[ebp]

; 565  : 			ptAct->vx = 0;

  0016d	c7 86 20 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+288], 0

; 566  : 			ptAct->vy = 0;

  00177	c7 86 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+292], 0

; 567  : 		}else{

  00181	eb 17		 jmp	 SHORT $LN14@charMove
$LN8@charMove:

; 568  : 		// ?î®
; 569  : 			ptAct->mx += ptAct->vx;

  00183	f3 0f 10 96 18
	01 00 00	 movss	 xmm2, DWORD PTR [esi+280]

; 570  : 			ptAct->my += ptAct->vy;

  0018b	0f 28 cb	 movaps	 xmm1, xmm3
  0018e	f3 0f 58 8e 1c
	01 00 00	 addss	 xmm1, DWORD PTR [esi+284]
  00196	f3 0f 58 d4	 addss	 xmm2, xmm4
$LN14@charMove:

; 571  : 		}
; 572  : 		// ?î®???
; 573  : 		ptAct->anim_no = ANIM_WALK;

  0019a	f3 0f 11 8e 1c
	01 00 00	 movss	 DWORD PTR [esi+284], xmm1
  001a2	f3 0f 11 96 18
	01 00 00	 movss	 DWORD PTR [esi+280], xmm2
  001aa	c7 86 4c 01 00
	00 04 00 00 00	 mov	 DWORD PTR [esi+332], 4
$LN6@charMove:

; 579  : 	}
; 580  : 	ptAct->gx = (int)(ptAct->mx/GRID_SIZE);

  001b4	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@3c800000

; 581  : 	ptAct->gy = (int)(ptAct->my/GRID_SIZE);

  001bc	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@3c800000
  001c4	f3 0f 2c c2	 cvttss2si eax, xmm2
  001c8	89 86 b4 00 00
	00		 mov	 DWORD PTR [esi+180], eax
  001ce	f3 0f 2c c1	 cvttss2si eax, xmm1
  001d2	89 86 b8 00 00
	00		 mov	 DWORD PTR [esi+184], eax
$LN1@charMove:
  001d8	5e		 pop	 esi

; 582  : }

  001d9	8b e5		 mov	 esp, ebp
  001db	5d		 pop	 ebp
  001dc	c3		 ret	 0
?charMove@@YAXPAUaction@@@Z ENDP			; charMove
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delNpcNotice@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delNpcNotice@@YAXPAUaction@@@Z PROC			; delNpcNotice, COMDAT

; 3459 : void delNpcNotice( ACTION *ptAct){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3460 : 	CHAREXTRA *ext;	
; 3461 : 	if( ptAct == NULL )

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 1c		 je	 SHORT $LN3@delNpcNoti

; 3462 : 		return;
; 3463 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000a	56		 push	 esi
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 3464 : 	if(ext->ptNoticeIcon){

  0000e	8b 46 34	 mov	 eax, DWORD PTR [esi+52]
  00011	85 c0		 test	 eax, eax
  00013	74 10		 je	 SHORT $LN5@delNpcNoti

; 3465 : 		DeathAction( ext->ptNoticeIcon);

  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0001b	83 c4 04	 add	 esp, 4

; 3466 : 		ext->ptNoticeIcon = NULL;

  0001e	c7 46 34 00 00
	00 00		 mov	 DWORD PTR [esi+52], 0
$LN5@delNpcNoti:
  00025	5e		 pop	 esi
$LN3@delNpcNoti:

; 3467 : 	}
; 3468 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?delNpcNotice@@YAXPAUaction@@@Z ENDP			; delNpcNotice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setNpcNotice@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_MindNo$ = 12						; size = 4
?setNpcNotice@@YAXPAUaction@@H@Z PROC			; setNpcNotice, COMDAT

; 3442 : void setNpcNotice( ACTION *ptAct, int MindNo){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	57		 push	 edi

; 3443 : 	//æ æå¼å¾åæ¶ä¸æ¾ç¤º
; 3444 : 	if (SpriteData[MindNo - SPRSTART].animSize == 0) {

  00004	8b 7d 0c	 mov	 edi, DWORD PTR _MindNo$[ebp]
  00007	66 83 3c fd 00
	cb f3 ff 00	 cmp	 WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[edi*8-800000], 0
  00010	74 49		 je	 SHORT $LN1@setNpcNoti

; 3445 : 		return;
; 3446 : 	}
; 3447 : 	CHAREXTRA *ext;
; 3448 : 	if( ptAct == NULL )

  00012	56		 push	 esi
  00013	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00016	85 f6		 test	 esi, esi
  00018	74 40		 je	 SHORT $LN6@setNpcNoti

; 3449 : 		return;
; 3450 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0001a	53		 push	 ebx
  0001b	8b 5e 0c	 mov	 ebx, DWORD PTR [esi+12]

; 3451 : 	ptAct->noticeNo = MindNo;

  0001e	89 be d0 01 00
	00		 mov	 DWORD PTR [esi+464], edi

; 3452 : 	if(ext->ptNoticeIcon){

  00024	8b 43 34	 mov	 eax, DWORD PTR [ebx+52]
  00027	85 c0		 test	 eax, eax
  00029	74 10		 je	 SHORT $LN4@setNpcNoti

; 3453 : 		DeathAction( ext->ptNoticeIcon);

  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00031	83 c4 04	 add	 esp, 4

; 3454 : 		ext->ptNoticeIcon = NULL;

  00034	c7 43 34 00 00
	00 00		 mov	 DWORD PTR [ebx+52], 0
$LN4@setNpcNoti:

; 3455 : 	}
; 3456 : 	ext->ptNoticeIcon = createCommmonEffectAction( MindNo, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR);

  0003b	6a 0a		 push	 10			; 0000000aH
  0003d	6a 00		 push	 0
  0003f	6a 00		 push	 0
  00041	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  00047	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  00053	83 c4 18	 add	 esp, 24			; 00000018H
  00056	89 43 34	 mov	 DWORD PTR [ebx+52], eax
  00059	5b		 pop	 ebx
$LN6@setNpcNoti:
  0005a	5e		 pop	 esi
$LN1@setNpcNoti:
  0005b	5f		 pop	 edi

; 3457 : }

  0005c	5d		 pop	 ebp
  0005d	c3		 ret	 0
?setNpcNotice@@YAXPAUaction@@H@Z ENDP			; setNpcNotice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharmTitle@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharmTitle@@YAXPAUaction@@@Z PROC			; delCharmTitle, COMDAT

; 3408 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3409 : 	CHAREXTRA *ext;
; 3410 : 	if (ptAct == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 1c		 je	 SHORT $LN3@delCharmTi

; 3411 : 		return;
; 3412 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000a	56		 push	 esi
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 3413 : 	if (ext->ptTitleIcon) {

  0000e	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  00011	85 c0		 test	 eax, eax
  00013	74 10		 je	 SHORT $LN5@delCharmTi

; 3414 : 		DeathAction(ext->ptTitleIcon);

  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0001b	83 c4 04	 add	 esp, 4

; 3415 : 		ext->ptTitleIcon = NULL;

  0001e	c7 46 1c 00 00
	00 00		 mov	 DWORD PTR [esi+28], 0
$LN5@delCharmTi:
  00025	5e		 pop	 esi
$LN3@delCharmTi:

; 3416 : 	}
; 3417 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?delCharmTitle@@YAXPAUaction@@@Z ENDP			; delCharmTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharmTitle@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_MindNo$ = 12						; size = 4
?setCharmTitle@@YAXPAUaction@@H@Z PROC			; setCharmTitle, COMDAT

; 3390 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3391 : 	//æ ç§°å·å¾åæ¶ä¸æ¾ç¤º
; 3392 : 	//if (SpriteData[MindNo - SPRSTART].animSize == 0) {
; 3393 : 		//return;
; 3394 : 	//}
; 3395 : 	CHAREXTRA *ext;
; 3396 : 	if (ptAct == NULL)

  00004	8b 75 08	 mov	 esi, DWORD PTR _ptAct$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 45		 je	 SHORT $LN1@setCharmTi

; 3397 : 		return;
; 3398 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000b	53		 push	 ebx

; 3399 : 	ptAct->ç§°å·å¾æ¡£ç¼å· = MindNo;

  0000c	8b 5d 0c	 mov	 ebx, DWORD PTR _MindNo$[ebp]
  0000f	57		 push	 edi
  00010	8b 7e 0c	 mov	 edi, DWORD PTR [esi+12]
  00013	89 9e cc 01 00
	00		 mov	 DWORD PTR [esi+460], ebx

; 3400 : 	if (ext->ptTitleIcon) {

  00019	8b 47 1c	 mov	 eax, DWORD PTR [edi+28]
  0001c	85 c0		 test	 eax, eax
  0001e	74 10		 je	 SHORT $LN3@setCharmTi

; 3401 : 		DeathAction(ext->ptTitleIcon);

  00020	50		 push	 eax
  00021	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00026	83 c4 04	 add	 esp, 4

; 3402 : 		ext->ptTitleIcon = NULL;

  00029	c7 47 1c 00 00
	00 00		 mov	 DWORD PTR [edi+28], 0
$LN3@setCharmTi:

; 3403 : 	}
; 3404 : 	ext->ptTitleIcon = createCommmonEffectAction(MindNo, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR);

  00030	6a 0a		 push	 10			; 0000000aH
  00032	6a 00		 push	 0
  00034	6a 00		 push	 0
  00036	ff b6 b8 00 00
	00		 push	 DWORD PTR [esi+184]
  0003c	ff b6 b4 00 00
	00		 push	 DWORD PTR [esi+180]
  00042	53		 push	 ebx
  00043	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  00048	83 c4 18	 add	 esp, 24			; 00000018H
  0004b	89 47 1c	 mov	 DWORD PTR [edi+28], eax
  0004e	5f		 pop	 edi
  0004f	5b		 pop	 ebx
$LN1@setCharmTi:
  00050	5e		 pop	 esi

; 3405 : }

  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?setCharmTitle@@YAXPAUaction@@H@Z ENDP			; setCharmTitle
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?delCharmManor@@YAXPAUaction@@@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
?delCharmManor@@YAXPAUaction@@@Z PROC			; delCharmManor, COMDAT

; 3377 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3378 : 	CHAREXTRA *ext;
; 3379 : 	if (ptAct == NULL)

  00003	8b 45 08	 mov	 eax, DWORD PTR _ptAct$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	74 1c		 je	 SHORT $LN3@delCharmMa

; 3380 : 		return;
; 3381 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  0000a	56		 push	 esi
  0000b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 3382 : 	if (ext->ptmManorIcon) {

  0000e	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00011	85 c0		 test	 eax, eax
  00013	74 10		 je	 SHORT $LN5@delCharmMa

; 3383 : 		DeathAction(ext->ptmManorIcon);

  00015	50		 push	 eax
  00016	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0001b	83 c4 04	 add	 esp, 4

; 3384 : 		ext->ptmManorIcon = NULL;

  0001e	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
$LN5@delCharmMa:
  00025	5e		 pop	 esi
$LN3@delCharmMa:

; 3385 : 	}
; 3386 : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?delCharmManor@@YAXPAUaction@@@Z ENDP			; delCharmManor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\character.cpp
;	COMDAT ?setCharmManor@@YAXPAUaction@@H@Z
_TEXT	SEGMENT
_ptAct$ = 8						; size = 4
_MindNo$ = 12						; size = 4
?setCharmManor@@YAXPAUaction@@H@Z PROC			; setCharmManor, COMDAT

; 3354 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 3355 : 	//æ åç¯å¾åæ¶ä¸æ¾ç¤º
; 3356 : 	if (MindNo >= SPRSTART)

  00004	8b 75 0c	 mov	 esi, DWORD PTR _MindNo$[ebp]
  00007	81 fe a0 86 01
	00		 cmp	 esi, 100000		; 000186a0H
  0000d	7c 0b		 jl	 SHORT $LN3@setCharmMa

; 3357 : 	{
; 3358 : 		if (SpriteData[MindNo - SPRSTART].animSize == 0) {

  0000f	66 83 3c f5 00
	cb f3 ff 00	 cmp	 WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8-800000], 0
  00018	74 49		 je	 SHORT $LN1@setCharmMa
$LN3@setCharmMa:
  0001a	57		 push	 edi

; 3359 : 			return;
; 3360 : 		}
; 3361 : 	}
; 3362 : 
; 3363 : 	CHAREXTRA *ext;
; 3364 : 	if (ptAct == NULL)

  0001b	8b 7d 08	 mov	 edi, DWORD PTR _ptAct$[ebp]
  0001e	85 ff		 test	 edi, edi
  00020	74 40		 je	 SHORT $LN7@setCharmMa

; 3365 : 		return;
; 3366 : 	ext = (CHAREXTRA *)ptAct->pYobi;

  00022	53		 push	 ebx
  00023	8b 5f 0c	 mov	 ebx, DWORD PTR [edi+12]

; 3367 : 	ptAct->åç¯å¾æ¡£ç¼å· = MindNo;

  00026	89 b7 c8 01 00
	00		 mov	 DWORD PTR [edi+456], esi

; 3368 : 	
; 3369 : 
; 3370 : 	if (ext->ptmManorIcon) {

  0002c	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  0002f	85 c0		 test	 eax, eax
  00031	74 10		 je	 SHORT $LN5@setCharmMa

; 3371 : 		DeathAction(ext->ptmManorIcon);

  00033	50		 push	 eax
  00034	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00039	83 c4 04	 add	 esp, 4

; 3372 : 		ext->ptmManorIcon = NULL;

  0003c	c7 43 18 00 00
	00 00		 mov	 DWORD PTR [ebx+24], 0
$LN5@setCharmMa:

; 3373 : 	}
; 3374 : 	ext->ptmManorIcon = createCommmonEffectAction(MindNo, ptAct->gx, ptAct->gy, 0, 0, DISP_PRIO_CHAR);

  00043	6a 0a		 push	 10			; 0000000aH
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	ff b7 b8 00 00
	00		 push	 DWORD PTR [edi+184]
  0004f	ff b7 b4 00 00
	00		 push	 DWORD PTR [edi+180]
  00055	56		 push	 esi
  00056	e8 00 00 00 00	 call	 ?createCommmonEffectAction@@YAPAUaction@@HHHHHH@Z ; createCommmonEffectAction
  0005b	83 c4 18	 add	 esp, 24			; 00000018H
  0005e	89 43 18	 mov	 DWORD PTR [ebx+24], eax
  00061	5b		 pop	 ebx
$LN7@setCharmMa:
  00062	5f		 pop	 edi
$LN1@setCharmMa:
  00063	5e		 pop	 esi

; 3375 : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?setCharmManor@@YAXPAUaction@@H@Z ENDP			; setCharmManor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
