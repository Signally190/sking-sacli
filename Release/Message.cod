; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?RET_OK@@3KB					; RET_OK
PUBLIC	?RET_MEMORY@@3KB				; RET_MEMORY
PUBLIC	?RET_PARAM@@3KB					; RET_PARAM
PUBLIC	?messNew@@3PAUMessNode@@A			; messNew
PUBLIC	?messHead@@3PAUMessNode@@A			; messHead
PUBLIC	?messTail@@3PAUMessNode@@A			; messTail
PUBLIC	?iEncrypt@@3HA					; iEncrypt
PUBLIC	?messNewTailParam@@3PAUParameter@@A		; messNewTailParam
PUBLIC	?iFormatLen@@3HA				; iFormatLen
PUBLIC	?iNumStart@@3HA					; iNumStart
PUBLIC	?szFormatBuf@@3PADA				; szFormatBuf
PUBLIC	?szAnalyzeBuf@@3PADA				; szAnalyzeBuf
PUBLIC	?nState@@3HA					; nState
PUBLIC	?backslash@@3HA					; backslash
PUBLIC	?bAnd@@3HA					; bAnd
PUBLIC	?indexBuf@@3HA					; indexBuf
PUBLIC	?nParamCounter@@3HA				; nParamCounter
_BSS	SEGMENT
?messNew@@3PAUMessNode@@A DD 01H DUP (?)		; messNew
?messHead@@3PAUMessNode@@A DD 01H DUP (?)		; messHead
?messTail@@3PAUMessNode@@A DD 01H DUP (?)		; messTail
?iEncrypt@@3HA DD 01H DUP (?)				; iEncrypt
?messNewTailParam@@3PAUParameter@@A DD 01H DUP (?)	; messNewTailParam
?iFormatLen@@3HA DD 01H DUP (?)				; iFormatLen
?iNumStart@@3HA DD 01H DUP (?)				; iNumStart
?szFormatBuf@@3PADA DB 0400H DUP (?)			; szFormatBuf
?szAnalyzeBuf@@3PADA DB 0400H DUP (?)			; szAnalyzeBuf
?nState@@3HA DD	01H DUP (?)				; nState
?backslash@@3HA DD 01H DUP (?)				; backslash
?bAnd@@3HA DD	01H DUP (?)				; bAnd
?indexBuf@@3HA DD 01H DUP (?)				; indexBuf
?nParamCounter@@3HA DD 01H DUP (?)			; nParamCounter
_BSS	ENDS
CONST	SEGMENT
?RET_OK@@3KB DD	01H					; RET_OK
?RET_MEMORY@@3KB DD 02H					; RET_MEMORY
?RET_PARAM@@3KB DD 03H					; RET_PARAM
CONST	ENDS
PUBLIC	?AddParamForFormat@@YAXPADHK@Z			; AddParamForFormat
PUBLIC	?AddParamForFormat@@YAXDK@Z			; AddParamForFormat
PUBLIC	?GetString@@YAPADAAHPAD@Z			; GetString
PUBLIC	?AnalyzeMessage@@YAKPADH@Z			; AnalyzeMessage
PUBLIC	?ReleaseMessHeadParam@@YAPAUParameter@@XZ	; ReleaseMessHeadParam
PUBLIC	?RemoveMessHead@@YAXXZ				; RemoveMessHead
PUBLIC	?ReleaseMessList@@YAXXZ				; ReleaseMessList
PUBLIC	?GetCafeNumber@@YAKXZ				; GetCafeNumber
PUBLIC	?StartFormat@@YAXXZ				; StartFormat
PUBLIC	?FormatAdd@@YAXXZ				; FormatAdd
PUBLIC	?ReleaseMessNew@@YAXXZ				; ReleaseMessNew
PUBLIC	?HandleParam@@YAKAAPADAAH@Z			; HandleParam
PUBLIC	??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@ ; `string'
PUBLIC	??_C@_07LDMIILLH@8904001@			; `string'
PUBLIC	??_C@_0L@HFCDJNEB@vup2u4fu?46@			; `string'
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	___report_rangecheckfailure:PROC
EXTRN	??2@YAPAXIHPBDH@Z:PROC				; operator new
EXTRN	??_U@YAPAXIHPBDH@Z:PROC				; operator new[]
EXTRN	??3@YAXPAXHPBDH@Z:PROC				; operator delete
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__MapViewOfFile@20:PROC
EXTRN	__imp__lstrcpyA@8:PROC
EXTRN	__imp__lstrlenA@4:PROC
EXTRN	__imp__OpenFileMappingA@12:PROC
EXTRN	_atoi:PROC
EXTRN	?ecb_crypt@@YAHPAD0II@Z:PROC			; ecb_crypt
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	?P_Key@@3PADA:BYTE				; P_Key
EXTRN	?szPid@@3PADA:BYTE				; szPid
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_0L@HFCDJNEB@vup2u4fu?46@
CONST	SEGMENT
??_C@_0L@HFCDJNEB@vup2u4fu?46@ DB 'vup2u4fu.6', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LDMIILLH@8904001@
CONST	SEGMENT
??_C@_07LDMIILLH@8904001@ DB '8904001', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
CONST	SEGMENT
??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@ DB 'C'
	DB	':\Users\gg862\OneDrive\', 0b9H, 0d9H, 0c5H, 0c1H, ' ', 0c8H, 0adH
	DB	0b8H, 0e9H, '\', 0b8H, 0beH, 0c4H, 0edH, 0bfH, 0cfH, 0b7H, 0e1H
	DB	'\Client Source Code1.31', 0c0H, 0cfH, 0baH, 0bbH, '\Wgs\Messa'
	DB	'ge.cpp', 00H				; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?HandleParam@@YAKAAPADAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleParam@@YAKAAPADAAH@Z$0
__ehfuncinfo$?HandleParam@@YAKAAPADAAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HandleParam@@YAKAAPADAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?HandleZero@@YAKAAPADAAH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?HandleZero@@YAKAAPADAAH@Z$0
__ehfuncinfo$?HandleZero@@YAKAAPADAAH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?HandleZero@@YAKAAPADAAH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?AnalyzeMessage@@YAKPADH@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?AnalyzeMessage@@YAKPADH@Z$0
__ehfuncinfo$?AnalyzeMessage@@YAKPADH@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?AnalyzeMessage@@YAKPADH@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?HandleParam@@YAKAAPADAAH@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_lpstr$ = 8						; size = 4
$T2 = 12						; size = 4
_iStrLen$ = 12						; size = 4
?HandleParam@@YAKAAPADAAH@Z PROC			; HandleParam, COMDAT

; 250  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?HandleParam@@YAKAAPADAAH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 251  : 	char	ch;
; 252  : 	while(iStrLen-- > 0)

  00025	8b 5d 0c	 mov	 ebx, DWORD PTR _iStrLen$[ebp]
  00028	8b 03		 mov	 eax, DWORD PTR [ebx]
  0002a	85 c0		 test	 eax, eax
  0002c	0f 8e 74 01 00
	00		 jle	 $LN35@HandlePara
  00032	8b 7d 08	 mov	 edi, DWORD PTR _lpstr$[ebp]
$LL2@HandlePara:
  00035	48		 dec	 eax
  00036	89 03		 mov	 DWORD PTR [ebx], eax

; 253  : 	{
; 254  : 		if(backslash)

  00038	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?backslash@@3HA, 0 ; backslash
  0003f	74 28		 je	 SHORT $LN4@HandlePara

; 255  : 		{
; 256  : 			backslash=FALSE;
; 257  : 			szAnalyzeBuf[indexBuf++]=*lpstr++;

  00041	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?indexBuf@@3HA ; indexBuf
  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?backslash@@3HA, 0 ; backslash
  00051	8b 07		 mov	 eax, DWORD PTR [edi]
  00053	8a 00		 mov	 al, BYTE PTR [eax]
  00055	88 81 00 00 00
	00		 mov	 BYTE PTR ?szAnalyzeBuf@@3PADA[ecx], al
  0005b	41		 inc	 ecx
  0005c	89 0d 00 00 00
	00		 mov	 DWORD PTR ?indexBuf@@3HA, ecx ; indexBuf
  00062	ff 07		 inc	 DWORD PTR [edi]

; 258  : 		}

  00064	e9 33 01 00 00	 jmp	 $LN15@HandlePara
$LN4@HandlePara:

; 259  : 		else
; 260  : 		{
; 261  : 			if(';'==(ch=*lpstr++))

  00069	8b 07		 mov	 eax, DWORD PTR [edi]
  0006b	8a 08		 mov	 cl, BYTE PTR [eax]
  0006d	40		 inc	 eax
  0006e	89 07		 mov	 DWORD PTR [edi], eax
  00070	80 f9 3b	 cmp	 cl, 59			; 0000003bH
  00073	0f 85 f8 00 00
	00		 jne	 $LN6@HandlePara

; 262  : 			{
; 263  : 				Parameter *paramNew=NULL;
; 264  : 				szAnalyzeBuf[indexBuf++]='\0';

  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?indexBuf@@3HA ; indexBuf
  0007f	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00082	a3 00 00 00 00	 mov	 DWORD PTR ?indexBuf@@3HA, eax ; indexBuf
  00087	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  0008d	0f 83 bd 01 00
	00		 jae	 $LN17@HandlePara

; 265  : 				if((paramNew=new Parameter) && (paramNew->lpstrParam=new char[indexBuf+1]))

  00093	68 09 01 00 00	 push	 265			; 00000109H
  00098	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
  0009d	6a 01		 push	 1
  0009f	6a 0c		 push	 12			; 0000000cH
  000a1	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?szAnalyzeBuf@@3PADA[ecx], 0
  000a8	e8 00 00 00 00	 call	 ??2@YAPAXIHPBDH@Z	; operator new
  000ad	8b f0		 mov	 esi, eax
  000af	83 c4 10	 add	 esp, 16			; 00000010H
  000b2	89 75 0c	 mov	 DWORD PTR $T2[ebp], esi
  000b5	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  000bc	85 f6		 test	 esi, esi
  000be	74 0f		 je	 SHORT $LN19@HandlePara
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.h

; 93   : 		lpstrParam=NULL;

  000c0	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 94   : 		next=NULL;}

  000c6	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp

; 265  : 				if((paramNew=new Parameter) && (paramNew->lpstrParam=new char[indexBuf+1]))

  000cd	eb 02		 jmp	 SHORT $LN20@HandlePara
$LN19@HandlePara:
  000cf	33 f6		 xor	 esi, esi
$LN20@HandlePara:
  000d1	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  000d8	85 f6		 test	 esi, esi
  000da	0f 84 2e 01 00
	00		 je	 $LN10@HandlePara
  000e0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?indexBuf@@3HA ; indexBuf
  000e5	68 09 01 00 00	 push	 265			; 00000109H
  000ea	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
  000ef	40		 inc	 eax
  000f0	6a 01		 push	 1
  000f2	50		 push	 eax
  000f3	e8 00 00 00 00	 call	 ??_U@YAPAXIHPBDH@Z	; operator new[]
  000f8	83 c4 10	 add	 esp, 16			; 00000010H
  000fb	89 06		 mov	 DWORD PTR [esi], eax
  000fd	85 c0		 test	 eax, eax
  000ff	0f 84 fe 00 00
	00		 je	 $LN8@HandlePara

; 266  : 				{
; 267  : 					paramNew->next=NULL;

  00105	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 268  : 					CopyMemory(paramNew->lpstrParam,szAnalyzeBuf,indexBuf);

  0010c	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexBuf@@3HA ; indexBuf
  00112	68 00 00 00 00	 push	 OFFSET ?szAnalyzeBuf@@3PADA ; szAnalyzeBuf
  00117	50		 push	 eax
  00118	e8 00 00 00 00	 call	 _memcpy

; 269  : 					paramNew->lpstrParam[indexBuf]='\0';

  0011d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?indexBuf@@3HA ; indexBuf
  00122	83 c4 0c	 add	 esp, 12			; 0000000cH
  00125	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00127	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 270  : 					paramNew->iLen=indexBuf-1;

  0012b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?indexBuf@@3HA ; indexBuf
  00130	48		 dec	 eax
  00131	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 145  : 	if(messNewTailParam)

  00134	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNewTailParam@@3PAUParameter@@A ; messNewTailParam
  00139	85 c0		 test	 eax, eax
  0013b	74 0b		 je	 SHORT $LN25@HandlePara

; 146  : 	{
; 147  : 		messNewTailParam->next=paramNew;

  0013d	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 148  : 		messNewTailParam=paramNew;

  00140	89 35 00 00 00
	00		 mov	 DWORD PTR ?messNewTailParam@@3PAUParameter@@A, esi ; messNewTailParam

; 149  : 	}

  00146	eb 0e		 jmp	 SHORT $LN26@HandlePara
$LN25@HandlePara:

; 150  : 	else
; 151  : 		messNew->param=messNewTailParam=paramNew;

  00148	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew
  0014d	89 35 00 00 00
	00		 mov	 DWORD PTR ?messNewTailParam@@3PAUParameter@@A, esi ; messNewTailParam
  00153	89 70 04	 mov	 DWORD PTR [eax+4], esi
$LN26@HandlePara:

; 279  : 				}
; 280  : 				if(--nParamCounter<=0)

  00156	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nParamCounter@@3HA ; nParamCounter
  0015b	48		 dec	 eax
  0015c	a3 00 00 00 00	 mov	 DWORD PTR ?nParamCounter@@3HA, eax ; nParamCounter
  00161	85 c0		 test	 eax, eax
  00163	7e 5b		 jle	 SHORT $LN33@HandlePara

; 285  : 				}
; 286  : 				indexBuf=0;

  00165	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?indexBuf@@3HA, 0 ; indexBuf

; 287  : 			}

  0016f	eb 2b		 jmp	 SHORT $LN15@HandlePara
$LN6@HandlePara:

; 288  : 			else
; 289  : 			{
; 290  : 				if('\\'==ch)

  00171	80 f9 5c	 cmp	 cl, 92			; 0000005cH
  00174	75 0c		 jne	 SHORT $LN12@HandlePara

; 291  : 					backslash=TRUE;

  00176	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?backslash@@3HA, 1 ; backslash
  00180	eb 1a		 jmp	 SHORT $LN15@HandlePara
$LN12@HandlePara:

; 292  : 				else if('&'==ch)

  00182	80 f9 26	 cmp	 cl, 38			; 00000026H
  00185	0f 84 9f 00 00
	00		 je	 $LN34@HandlePara

; 297  : 				}
; 298  : 				else
; 299  : 					szAnalyzeBuf[indexBuf++]=ch;

  0018b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?indexBuf@@3HA ; indexBuf
  00190	88 88 00 00 00
	00		 mov	 BYTE PTR ?szAnalyzeBuf@@3PADA[eax], cl
  00196	40		 inc	 eax
  00197	a3 00 00 00 00	 mov	 DWORD PTR ?indexBuf@@3HA, eax ; indexBuf
$LN15@HandlePara:

; 251  : 	char	ch;
; 252  : 	while(iStrLen-- > 0)

  0019c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0019e	85 c0		 test	 eax, eax
  001a0	0f 8f 8f fe ff
	ff		 jg	 $LL2@HandlePara
$LN35@HandlePara:
  001a6	48		 dec	 eax
  001a7	89 03		 mov	 DWORD PTR [ebx], eax
$LN42@HandlePara:

; 300  : 			}
; 301  : 		}
; 302  : 	}
; 303  : 	return RET_OK;
; 304  : }

  001a9	b8 01 00 00 00	 mov	 eax, 1
  001ae	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  001b1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001b8	59		 pop	 ecx
  001b9	5f		 pop	 edi
  001ba	5e		 pop	 esi
  001bb	5b		 pop	 ebx
  001bc	8b e5		 mov	 esp, ebp
  001be	5d		 pop	 ebp
  001bf	c3		 ret	 0
$LN33@HandlePara:

; 156  : 	if(messTail)

  001c0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?messTail@@3PAUMessNode@@A ; messTail
  001c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew
  001cb	85 c9		 test	 ecx, ecx
  001cd	74 0a		 je	 SHORT $LN29@HandlePara

; 157  : 	{
; 158  : 		messTail->next=messNew;

  001cf	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 159  : 		messTail=messNew;

  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew

; 160  : 	}

  001d7	eb 05		 jmp	 SHORT $LN41@HandlePara
$LN29@HandlePara:

; 161  : 	else
; 162  : 		messTail=messHead=messNew;

  001d9	a3 00 00 00 00	 mov	 DWORD PTR ?messHead@@3PAUMessNode@@A, eax ; messHead
$LN41@HandlePara:

; 163  : 	messNew=NULL;

  001de	a3 00 00 00 00	 mov	 DWORD PTR ?messTail@@3PAUMessNode@@A, eax ; messTail
  001e3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?messNew@@3PAUMessNode@@A, 0 ; messNew

; 164  : 	messNewTailParam=NULL;

  001ed	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?messNewTailParam@@3PAUParameter@@A, 0 ; messNewTailParam

; 281  : 				{
; 282  : 					LinkMessNewToMessTail();
; 283  : 					nState=ZERO;

  001f7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 0 ; nState

; 284  : 					return RET_OK;

  00201	eb a6		 jmp	 SHORT $LN42@HandlePara
$LN8@HandlePara:

; 271  : 					LinkParamToMessNew(paramNew);
; 272  : 				}
; 273  : 				else
; 274  : 				{
; 275  : 					if(paramNew)
; 276  : 						delete paramNew;

  00203	6a 0c		 push	 12			; 0000000cH
  00205	56		 push	 esi
  00206	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0020b	83 c4 08	 add	 esp, 8
$LN10@HandlePara:

; 277  : 					ReleaseMessNew();

  0020e	e8 00 00 00 00	 call	 ?ReleaseMessNew@@YAXXZ	; ReleaseMessNew

; 278  : 					return RET_MEMORY;

  00213	b8 02 00 00 00	 mov	 eax, 2

; 300  : 			}
; 301  : 		}
; 302  : 	}
; 303  : 	return RET_OK;
; 304  : }

  00218	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0021b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00222	59		 pop	 ecx
  00223	5f		 pop	 edi
  00224	5e		 pop	 esi
  00225	5b		 pop	 ebx
  00226	8b e5		 mov	 esp, ebp
  00228	5d		 pop	 ebp
  00229	c3		 ret	 0
$LN34@HandlePara:

; 293  : 				{
; 294  : 					ReleaseMessNew();

  0022a	e8 00 00 00 00	 call	 ?ReleaseMessNew@@YAXXZ	; ReleaseMessNew

; 295  : 					nState=ZERO;

  0022f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 0 ; nState

; 296  : 					return RET_PARAM;

  00239	b8 03 00 00 00	 mov	 eax, 3

; 300  : 			}
; 301  : 		}
; 302  : 	}
; 303  : 	return RET_OK;
; 304  : }

  0023e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00241	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00248	59		 pop	 ecx
  00249	5f		 pop	 edi
  0024a	5e		 pop	 esi
  0024b	5b		 pop	 ebx
  0024c	8b e5		 mov	 esp, ebp
  0024e	5d		 pop	 ebp
  0024f	c3		 ret	 0
$LN17@HandlePara:

; 262  : 			{
; 263  : 				Parameter *paramNew=NULL;
; 264  : 				szAnalyzeBuf[indexBuf++]='\0';

  00250	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN40@HandlePara:
  00255	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?HandleParam@@YAKAAPADAAH@Z$0:
  00000	68 09 01 00 00	 push	 265			; 00000109H
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
  0000a	6a 01		 push	 1
  0000c	8b 45 0c	 mov	 eax, DWORD PTR $T2[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAXHPBDH@Z	; operator delete
  00015	83 c4 10	 add	 esp, 16			; 00000010H
  00018	c3		 ret	 0
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?HandleParam@@YAKAAPADAAH@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?HandleParam@@YAKAAPADAAH@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?HandleParam@@YAKAAPADAAH@Z ENDP			; HandleParam
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?ReleaseMessNew@@YAXXZ
_TEXT	SEGMENT
?ReleaseMessNew@@YAXXZ PROC				; ReleaseMessNew, COMDAT

; 169  : 	register Parameter *paramTemp;
; 170  : 	if(messNew)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew
  00005	85 c0		 test	 eax, eax
  00007	74 5b		 je	 SHORT $LN4@ReleaseMes

; 171  : 	{
; 172  : 		while(messNew->param)

  00009	56		 push	 esi
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	85 f6		 test	 esi, esi
  0000f	74 33		 je	 SHORT $LN3@ReleaseMes
  00011	57		 push	 edi
$LL2@ReleaseMes:

; 138  : 	if(param->lpstrParam)

  00012	8b 06		 mov	 eax, DWORD PTR [esi]

; 173  : 		{
; 174  : 			paramTemp=messNew->param->next;

  00014	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 138  : 	if(param->lpstrParam)

  00017	85 c0		 test	 eax, eax
  00019	74 09		 je	 SHORT $LN7@ReleaseMes

; 139  : 		delete[] param->lpstrParam;

  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00021	83 c4 04	 add	 esp, 4
$LN7@ReleaseMes:

; 140  : 	delete param;

  00024	6a 0c		 push	 12			; 0000000cH
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete

; 175  : 			ReleaseParam(messNew->param);
; 176  : 			messNew->param=paramTemp;

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew

; 140  : 	delete param;

  00031	83 c4 08	 add	 esp, 8

; 175  : 			ReleaseParam(messNew->param);
; 176  : 			messNew->param=paramTemp;

  00034	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew
  0003c	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0003f	85 f6		 test	 esi, esi
  00041	75 cf		 jne	 SHORT $LL2@ReleaseMes
  00043	5f		 pop	 edi
$LN3@ReleaseMes:

; 177  : 		}
; 178  : 		delete messNew;

  00044	6a 0c		 push	 12			; 0000000cH
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  0004c	83 c4 08	 add	 esp, 8

; 179  : 		messNew=NULL;

  0004f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?messNew@@3PAUMessNode@@A, 0 ; messNew

; 180  : 		messNewTailParam=NULL;

  00059	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?messNewTailParam@@3PAUParameter@@A, 0 ; messNewTailParam
  00063	5e		 pop	 esi
$LN4@ReleaseMes:

; 181  : 	}
; 182  : }

  00064	c3		 ret	 0
?ReleaseMessNew@@YAXXZ ENDP				; ReleaseMessNew
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?FormatAdd@@YAXXZ
_TEXT	SEGMENT
?FormatAdd@@YAXXZ PROC					; FormatAdd, COMDAT

; 86   : 	char *ch=&szFormatBuf[iNumStart];

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iNumStart@@3HA ; iNumStart

; 87   : 	(*ch)++;

  00005	fe 80 00 00 00
	00		 inc	 BYTE PTR ?szFormatBuf@@3PADA[eax]
  0000b	8d 88 00 00 00
	00		 lea	 ecx, DWORD PTR ?szFormatBuf@@3PADA[eax]

; 88   : 	if(*ch>'9'){

  00011	80 39 39	 cmp	 BYTE PTR [ecx], 57	; 00000039H
  00014	7e 3a		 jle	 SHORT $LN5@FormatAdd

; 89   : 		*ch='0';

  00016	c6 01 30	 mov	 BYTE PTR [ecx], 48	; 00000030H

; 90   : 		if((*(ch-=1)+=1)>'9'){

  00019	fe 41 ff	 inc	 BYTE PTR [ecx-1]
  0001c	80 79 ff 39	 cmp	 BYTE PTR [ecx-1], 57	; 00000039H
  00020	7e 2e		 jle	 SHORT $LN5@FormatAdd

; 91   : 			*ch='0';

  00022	c6 41 ff 30	 mov	 BYTE PTR [ecx-1], 48	; 00000030H

; 92   : 			if((*(ch-=1)+=1)>'9'){

  00026	fe 41 fe	 inc	 BYTE PTR [ecx-2]
  00029	80 79 fe 39	 cmp	 BYTE PTR [ecx-2], 57	; 00000039H
  0002d	7e 21		 jle	 SHORT $LN5@FormatAdd

; 93   : 				*ch='0';

  0002f	c6 41 fe 30	 mov	 BYTE PTR [ecx-2], 48	; 00000030H

; 94   : 				if((*(ch-=1)+=1)>'9')

  00033	fe 41 fd	 inc	 BYTE PTR [ecx-3]
  00036	80 79 fd 39	 cmp	 BYTE PTR [ecx-3], 57	; 00000039H
  0003a	7e 14		 jle	 SHORT $LN5@FormatAdd

; 95   : 					*ch=szFormatBuf[3]=szFormatBuf[4]=szFormatBuf[5]='9';

  0003c	66 c7 05 04 00
	00 00 39 39	 mov	 WORD PTR ?szFormatBuf@@3PADA+4, 14649 ; 00003939H
  00045	c6 05 03 00 00
	00 39		 mov	 BYTE PTR ?szFormatBuf@@3PADA+3, 57 ; 00000039H
  0004c	c6 41 fd 39	 mov	 BYTE PTR [ecx-3], 57	; 00000039H
$LN5@FormatAdd:

; 96   : 			}
; 97   : 		}
; 98   : 	}
; 99   : }

  00050	c3		 ret	 0
?FormatAdd@@YAXXZ ENDP					; FormatAdd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?StartFormat@@YAXXZ
_TEXT	SEGMENT
?StartFormat@@YAXXZ PROC				; StartFormat, COMDAT

; 62   : 	szFormatBuf[0]='&';
; 63   : 	szFormatBuf[1]=';';
; 64   : 	lstrcpy(szFormatBuf+2,szPid);

  00000	68 00 00 00 00	 push	 OFFSET ?szPid@@3PADA	; szPid
  00005	68 02 00 00 00	 push	 OFFSET ?szFormatBuf@@3PADA+2
  0000a	66 c7 05 00 00
	00 00 26 3b	 mov	 WORD PTR ?szFormatBuf@@3PADA, 15142 ; 00003b26H
  00013	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrcpyA@8

; 65   : 	iNumStart=lstrlen(szPid)+2;

  00019	68 00 00 00 00	 push	 OFFSET ?szPid@@3PADA	; szPid
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4

; 66   : 	szFormatBuf[iNumStart++]=';';

  00024	c7 80 02 00 00
	00 3b 30 30 30	 mov	 DWORD PTR ?szFormatBuf@@3PADA[eax+2], 808464443 ; 3030303bH

; 67   : 	szFormatBuf[iNumStart++]='0';
; 68   : 	szFormatBuf[iNumStart++]='0';
; 69   : 	szFormatBuf[iNumStart++]='0';

  0002e	83 c0 06	 add	 eax, 6
  00031	a3 00 00 00 00	 mov	 DWORD PTR ?iNumStart@@3HA, eax ; iNumStart

; 70   : 	szFormatBuf[iNumStart]='1';

  00036	66 c7 80 00 00
	00 00 31 3b	 mov	 WORD PTR ?szFormatBuf@@3PADA[eax], 15153 ; 00003b31H

; 71   : 	szFormatBuf[iNumStart+1]=';';

  0003f	83 c0 02	 add	 eax, 2

; 72   : 	iFormatLen=iNumStart+2;

  00042	a3 00 00 00 00	 mov	 DWORD PTR ?iFormatLen@@3HA, eax ; iFormatLen

; 73   : }

  00047	c3		 ret	 0
?StartFormat@@YAXXZ ENDP				; StartFormat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?GetCafeNumber@@YAKXZ
_TEXT	SEGMENT
?GetCafeNumber@@YAKXZ PROC				; GetCafeNumber, COMDAT

; 403  : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 404  : 	HANDLE hFileMapping=NULL;
; 405  : 	LPSTR lpstr=NULL;
; 406  : 	DWORD Id=0;
; 407  : #ifdef _NEW_EARTH
; 408  : 	if (hFileMapping = OpenFileMapping(FILE_MAP_READ | FILE_MAP_WRITE, FALSE, "vup2u4fu.6"))

  00002	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HFCDJNEB@vup2u4fu?46@
  00007	33 f6		 xor	 esi, esi
  00009	56		 push	 esi
  0000a	6a 06		 push	 6
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__OpenFileMappingA@12
  00012	8b f8		 mov	 edi, eax
  00014	85 ff		 test	 edi, edi
  00016	74 19		 je	 SHORT $LN5@GetCafeNum

; 409  : 	{
; 410  : 		int *pFlag = NULL;
; 411  : 
; 412  : 		if (pFlag = (int*)MapViewOfFile(hFileMapping, FILE_MAP_READ | FILE_MAP_WRITE, 0, 0, 0))

  00018	56		 push	 esi
  00019	56		 push	 esi
  0001a	56		 push	 esi
  0001b	6a 06		 push	 6
  0001d	57		 push	 edi
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__MapViewOfFile@20
  00024	85 c0		 test	 eax, eax
  00026	74 02		 je	 SHORT $LN3@GetCafeNum

; 413  : 			Id = *pFlag;

  00028	8b 30		 mov	 esi, DWORD PTR [eax]
$LN3@GetCafeNum:

; 414  : 		CloseHandle(hFileMapping);

  0002a	57		 push	 edi
  0002b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CloseHandle@4
$LN5@GetCafeNum:

; 415  : 	}
; 416  : #else
; 417  : 	char szTemp[64];
; 418  : 	if(hFileMapping=OpenFileMapping(FILE_MAP_READ | FILE_MAP_WRITE,FALSE,"f; enc ")){
; 419  : 		if(lpstr=(LPSTR)MapViewOfFile(hFileMapping,FILE_MAP_READ | FILE_MAP_WRITE,0,0,0)){
; 420  : 			strcpy(szTemp,lpstr);
; 421  : 			ecb_crypt("lbgorj/",szTemp,8,DES_DECRYPT);
; 422  : 			UnmapViewOfFile((LPVOID)lpstr);
; 423  : 			Id=atoi(szTemp);
; 424  : 		}
; 425  : 		CloseHandle(hFileMapping);
; 426  : 	}
; 427  : #endif
; 428  : 	return Id;
; 429  : }

  00031	5f		 pop	 edi
  00032	8b c6		 mov	 eax, esi
  00034	5e		 pop	 esi
  00035	c3		 ret	 0
?GetCafeNumber@@YAKXZ ENDP				; GetCafeNumber
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?ReleaseMessList@@YAXXZ
_TEXT	SEGMENT
?ReleaseMessList@@YAXXZ PROC				; ReleaseMessList, COMDAT

; 383  : 	ReleaseMessNew();

  00000	e8 00 00 00 00	 call	 ?ReleaseMessNew@@YAXXZ	; ReleaseMessNew

; 384  : 	nState=ZERO;
; 385  : 	MessNode *messTemp;
; 386  : 	register Parameter *paramTemp;
; 387  : 	while(messHead)

  00005	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead
  0000a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 0 ; nState
  00014	85 c0		 test	 eax, eax
  00016	74 62		 je	 SHORT $LN18@ReleaseMes
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	0f 1f 44 00 00	 npad	 5
$LL2@ReleaseMes:

; 388  : 	{
; 389  : 		messTemp=messHead->next;
; 390  : 		while(messHead->param)

  00020	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00023	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]
  00026	85 f6		 test	 esi, esi
  00028	74 37		 je	 SHORT $LN5@ReleaseMes
  0002a	66 0f 1f 44 00
	00		 npad	 6
$LL4@ReleaseMes:

; 138  : 	if(param->lpstrParam)

  00030	8b 06		 mov	 eax, DWORD PTR [esi]

; 391  : 		{
; 392  : 			paramTemp=messHead->param->next;

  00032	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 138  : 	if(param->lpstrParam)

  00035	85 c0		 test	 eax, eax
  00037	74 09		 je	 SHORT $LN8@ReleaseMes

; 139  : 		delete[] param->lpstrParam;

  00039	50		 push	 eax
  0003a	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  0003f	83 c4 04	 add	 esp, 4
$LN8@ReleaseMes:

; 140  : 	delete param;

  00042	6a 0c		 push	 12			; 0000000cH
  00044	56		 push	 esi
  00045	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete

; 393  : 			ReleaseParam(messHead->param);
; 394  : 			messHead->param=paramTemp;

  0004a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead

; 140  : 	delete param;

  0004f	83 c4 08	 add	 esp, 8

; 393  : 			ReleaseParam(messHead->param);
; 394  : 			messHead->param=paramTemp;

  00052	89 78 04	 mov	 DWORD PTR [eax+4], edi
  00055	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead
  0005a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0005d	85 f6		 test	 esi, esi
  0005f	75 cf		 jne	 SHORT $LL4@ReleaseMes
$LN5@ReleaseMes:

; 395  : 		}
; 396  : 		delete messHead;

  00061	6a 0c		 push	 12			; 0000000cH
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00069	83 c4 08	 add	 esp, 8

; 397  : 		messHead=messTemp;

  0006c	8b c3		 mov	 eax, ebx
  0006e	a3 00 00 00 00	 mov	 DWORD PTR ?messHead@@3PAUMessNode@@A, eax ; messHead
  00073	85 db		 test	 ebx, ebx
  00075	75 a9		 jne	 SHORT $LL2@ReleaseMes

; 398  : 	}
; 399  : 	messTail=NULL;

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
$LN18@ReleaseMes:

; 400  : }

  0007a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?messTail@@3PAUMessNode@@A, 0 ; messTail
  00084	c3		 ret	 0
?ReleaseMessList@@YAXXZ ENDP				; ReleaseMessList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?RemoveMessHead@@YAXXZ
_TEXT	SEGMENT
?RemoveMessHead@@YAXXZ PROC				; RemoveMessHead, COMDAT

; 363  : 	register Parameter *paramTemp;
; 364  : 	MessNode	*messTemp;
; 365  : 	if(messHead)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead
  00005	85 c0		 test	 eax, eax
  00007	74 63		 je	 SHORT $LN4@RemoveMess

; 366  : 	{
; 367  : 		messTemp=messHead->next;

  00009	53		 push	 ebx
  0000a	8b 58 08	 mov	 ebx, DWORD PTR [eax+8]
  0000d	56		 push	 esi

; 368  : 		while(messHead->param)

  0000e	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00011	85 f6		 test	 esi, esi
  00013	74 33		 je	 SHORT $LN3@RemoveMess
  00015	57		 push	 edi
$LL2@RemoveMess:

; 138  : 	if(param->lpstrParam)

  00016	8b 06		 mov	 eax, DWORD PTR [esi]

; 369  : 		{
; 370  : 			paramTemp=messHead->param->next;

  00018	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 138  : 	if(param->lpstrParam)

  0001b	85 c0		 test	 eax, eax
  0001d	74 09		 je	 SHORT $LN8@RemoveMess

; 139  : 		delete[] param->lpstrParam;

  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00025	83 c4 04	 add	 esp, 4
$LN8@RemoveMess:

; 140  : 	delete param;

  00028	6a 0c		 push	 12			; 0000000cH
  0002a	56		 push	 esi
  0002b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete

; 371  : 			ReleaseParam(messHead->param);
; 372  : 			messHead->param=paramTemp;

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead

; 140  : 	delete param;

  00035	83 c4 08	 add	 esp, 8

; 371  : 			ReleaseParam(messHead->param);
; 372  : 			messHead->param=paramTemp;

  00038	89 78 04	 mov	 DWORD PTR [eax+4], edi
  0003b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead
  00040	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  00043	85 f6		 test	 esi, esi
  00045	75 cf		 jne	 SHORT $LL2@RemoveMess
  00047	5f		 pop	 edi
$LN3@RemoveMess:

; 373  : 		}
; 374  : 		delete messHead;

  00048	6a 0c		 push	 12			; 0000000cH
  0004a	50		 push	 eax
  0004b	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete

; 375  : 		if(!messTemp)

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messTail@@3PAUMessNode@@A ; messTail
  00055	83 c4 08	 add	 esp, 8
  00058	33 c9		 xor	 ecx, ecx

; 376  : 			messTail=NULL;
; 377  : 		messHead=messTemp;

  0005a	89 1d 00 00 00
	00		 mov	 DWORD PTR ?messHead@@3PAUMessNode@@A, ebx ; messHead
  00060	85 db		 test	 ebx, ebx
  00062	0f 44 c1	 cmove	 eax, ecx
  00065	5e		 pop	 esi
  00066	a3 00 00 00 00	 mov	 DWORD PTR ?messTail@@3PAUMessNode@@A, eax ; messTail
  0006b	5b		 pop	 ebx
$LN4@RemoveMess:

; 378  : 	}
; 379  : }

  0006c	c3		 ret	 0
?RemoveMessHead@@YAXXZ ENDP				; RemoveMessHead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?ReleaseMessHeadParam@@YAPAUParameter@@XZ
_TEXT	SEGMENT
?ReleaseMessHeadParam@@YAPAUParameter@@XZ PROC		; ReleaseMessHeadParam, COMDAT

; 351  : {

  00000	56		 push	 esi

; 352  : 	Parameter *paramTemp=NULL;
; 353  : 	if(messHead&&(messHead->param)){

  00001	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead
  00007	85 f6		 test	 esi, esi
  00009	74 32		 je	 SHORT $LN7@ReleaseMes
  0000b	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  0000e	85 f6		 test	 esi, esi
  00010	74 2b		 je	 SHORT $LN7@ReleaseMes

; 138  : 	if(param->lpstrParam)

  00012	8b 06		 mov	 eax, DWORD PTR [esi]

; 354  : 		paramTemp=messHead->param->next;

  00014	57		 push	 edi
  00015	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]

; 138  : 	if(param->lpstrParam)

  00018	85 c0		 test	 eax, eax
  0001a	74 09		 je	 SHORT $LN5@ReleaseMes

; 139  : 		delete[] param->lpstrParam;

  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 ??_V@YAXPAX@Z		; operator delete[]
  00022	83 c4 04	 add	 esp, 4
$LN5@ReleaseMes:

; 140  : 	delete param;

  00025	6a 0c		 push	 12			; 0000000cH
  00027	56		 push	 esi
  00028	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete

; 355  : 		ReleaseParam(messHead->param);
; 356  : 		messHead->param=paramTemp;

  0002d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?messHead@@3PAUMessNode@@A ; messHead

; 140  : 	delete param;

  00032	83 c4 08	 add	 esp, 8

; 355  : 		ReleaseParam(messHead->param);
; 356  : 		messHead->param=paramTemp;

  00035	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 357  : 	}
; 358  : 	return paramTemp;

  00038	8b c7		 mov	 eax, edi
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi

; 359  : }

  0003c	c3		 ret	 0
$LN7@ReleaseMes:
  0003d	33 c0		 xor	 eax, eax
  0003f	5e		 pop	 esi
  00040	c3		 ret	 0
?ReleaseMessHeadParam@@YAPAUParameter@@XZ ENDP		; ReleaseMessHeadParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?AnalyzeMessage@@YAKPADH@Z
_TEXT	SEGMENT
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_lpstr$ = 8						; size = 4
_iStrLen$ = 12						; size = 4
?AnalyzeMessage@@YAKPADH@Z PROC				; AnalyzeMessage, COMDAT

; 307  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?AnalyzeMessage@@YAKPADH@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 308  : 	if(0<iStrLen){

  00025	8b 7d 0c	 mov	 edi, DWORD PTR _iStrLen$[ebp]
  00028	85 ff		 test	 edi, edi
  0002a	0f 8e e5 01 00
	00		 jle	 $LN5@AnalyzeMes

; 309  : 		switch(iEncrypt){

  00030	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iEncrypt@@3HA ; iEncrypt
  00035	8b 75 08	 mov	 esi, DWORD PTR _lpstr$[ebp]
  00038	83 e8 00	 sub	 eax, 0
  0003b	74 10		 je	 SHORT $LN9@AnalyzeMes
  0003d	83 e8 01	 sub	 eax, 1
  00040	75 1c		 jne	 SHORT $LN11@AnalyzeMes

; 312  : 			break;
; 313  : 		case E_ECB:
; 314  : 			ecb_crypt(P_Key,lpstr,iStrLen,DES_DECRYPT);

  00042	6a 01		 push	 1
  00044	57		 push	 edi
  00045	56		 push	 esi
  00046	68 00 00 00 00	 push	 OFFSET ?P_Key@@3PADA	; P_Key

; 315  : 			break;

  0004b	eb 09		 jmp	 SHORT $LN72@AnalyzeMes
$LN9@AnalyzeMes:

; 310  : 		case E_INIT:
; 311  : 			ecb_crypt(SZ_ECB,lpstr,iStrLen,DES_DECRYPT);

  0004d	6a 01		 push	 1
  0004f	57		 push	 edi
  00050	56		 push	 esi
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_07LDMIILLH@8904001@
$LN72@AnalyzeMes:

; 316  : 		case E_NO:
; 317  : 			break;
; 318  : 		}
; 319  : 		lpstr[iStrLen]='\0';

  00056	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt
  0005b	83 c4 10	 add	 esp, 16			; 00000010H
$LN11@AnalyzeMes:
  0005e	c6 04 3e 00	 mov	 BYTE PTR [esi+edi], 0
  00062	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?indexBuf@@3HA ; indexBuf
  00068	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL4@AnalyzeMes:

; 327  : 		{
; 328  : 			switch(nState)

  00070	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nState@@3HA ; nState
  00075	83 f8 03	 cmp	 eax, 3
  00078	0f 87 8f 01 00
	00		 ja	 $LN18@AnalyzeMes
  0007e	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN69@AnalyzeMes[eax*4]
$LN12@AnalyzeMes:

; 329  : 			{
; 330  : 			case READPARAM:
; 331  : 				if(RET_OK!=(dw=HandleParam(lpstr,iStrLen)))

  00085	8d 45 0c	 lea	 eax, DWORD PTR _iStrLen$[ebp]
  00088	50		 push	 eax
  00089	8d 45 08	 lea	 eax, DWORD PTR _lpstr$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 ?HandleParam@@YAKAAPADAAH@Z ; HandleParam
  00092	83 c4 08	 add	 esp, 8
  00095	83 f8 01	 cmp	 eax, 1
  00098	0f 85 7c 01 00
	00		 jne	 $LN1@AnalyzeMes

; 332  : 					return dw;
; 333  : 				break;

  0009e	8b 7d 0c	 mov	 edi, DWORD PTR _iStrLen$[ebp]
  000a1	8b 75 08	 mov	 esi, DWORD PTR _lpstr$[ebp]
  000a4	e9 5e 01 00 00	 jmp	 $LN73@AnalyzeMes
$LN49@AnalyzeMes:

; 223  : 	while(iStrLen-- > 0)

  000a9	85 ff		 test	 edi, edi
  000ab	7e 2b		 jle	 SHORT $LN57@AnalyzeMes
  000ad	0f 1f 00	 npad	 3
$LL21@AnalyzeMes:

; 224  : 	{
; 225  : 		if(';'==(ch=*lpstr++))

  000b0	8a 06		 mov	 al, BYTE PTR [esi]
  000b2	4f		 dec	 edi
  000b3	46		 inc	 esi
  000b4	89 7d 0c	 mov	 DWORD PTR _iStrLen$[ebp], edi
  000b7	89 75 08	 mov	 DWORD PTR _lpstr$[ebp], esi
  000ba	3c 3b		 cmp	 al, 59			; 0000003bH
  000bc	74 23		 je	 SHORT $LN51@AnalyzeMes

; 238  : 		}
; 239  : 		szAnalyzeBuf[indexBuf++]=ch;

  000be	88 81 00 00 00
	00		 mov	 BYTE PTR ?szAnalyzeBuf@@3PADA[ecx], al
  000c4	41		 inc	 ecx
  000c5	89 0d 00 00 00
	00		 mov	 DWORD PTR ?indexBuf@@3HA, ecx ; indexBuf
  000cb	83 f9 05	 cmp	 ecx, 5

; 240  : 		if(indexBuf>5)

  000ce	0f 8f 57 01 00
	00		 jg	 $LN55@AnalyzeMes

; 216  : 		}
; 217  : 	}
; 218  : }
; 219  : 
; 220  : inline DWORD HandleLen(LPSTR &lpstr,int &iStrLen)
; 221  : {
; 222  : 	char	ch;
; 223  : 	while(iStrLen-- > 0)

  000d4	85 ff		 test	 edi, edi
  000d6	7f d8		 jg	 SHORT $LL21@AnalyzeMes
$LN57@AnalyzeMes:

; 320  : #ifdef _LOG_MSG
; 321  : 		FILE *fp = fopen( "recvtime.txt", "a+" );
; 322  : 		if( fp ) fprintf( fp, "%u RECV %d  %s\n", TimeGetTime(), iStrLen, lpstr );
; 323  : 		if( fp ) fclose( fp );
; 324  : #endif	
; 325  : 		DWORD dw;
; 326  : 		while(0<iStrLen)

  000d8	4f		 dec	 edi
  000d9	89 7d 0c	 mov	 DWORD PTR _iStrLen$[ebp], edi
  000dc	e9 2c 01 00 00	 jmp	 $LN18@AnalyzeMes
$LN51@AnalyzeMes:

; 227  : 			szAnalyzeBuf[indexBuf]='\0';

  000e1	81 f9 00 04 00
	00		 cmp	 ecx, 1024		; 00000400H
  000e7	0f 83 74 01 00
	00		 jae	 $LN27@AnalyzeMes

; 228  : 			nParamCounter=atoi(szAnalyzeBuf);

  000ed	68 00 00 00 00	 push	 OFFSET ?szAnalyzeBuf@@3PADA ; szAnalyzeBuf
  000f2	c6 81 00 00 00
	00 00		 mov	 BYTE PTR ?szAnalyzeBuf@@3PADA[ecx], 0
  000f9	e8 00 00 00 00	 call	 _atoi
  000fe	83 c4 04	 add	 esp, 4
  00101	a3 00 00 00 00	 mov	 DWORD PTR ?nParamCounter@@3HA, eax ; nParamCounter

; 229  : 			if(!nParamCounter)

  00106	85 c0		 test	 eax, eax
  00108	0f 84 1d 01 00
	00		 je	 $LN55@AnalyzeMes

; 230  : 			{
; 231  : 				nState=ZERO;
; 232  : 				return RET_PARAM;
; 233  : 			}
; 234  : 			messNew->nParam=(nParamCounter-=1);

  0010e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?messNew@@3PAUMessNode@@A ; messNew
  00114	48		 dec	 eax
  00115	a3 00 00 00 00	 mov	 DWORD PTR ?nParamCounter@@3HA, eax ; nParamCounter
  0011a	89 01		 mov	 DWORD PTR [ecx], eax

; 235  : 			indexBuf=0;

  0011c	33 c9		 xor	 ecx, ecx
  0011e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?indexBuf@@3HA, ecx ; indexBuf

; 236  : 			nState=READPARAM;

  00124	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 3 ; nState

; 237  : 			return RET_OK;

  0012e	e9 da 00 00 00	 jmp	 $LN18@AnalyzeMes
$LN50@AnalyzeMes:

; 199  : 	while(iStrLen-- > 0)

  00133	85 ff		 test	 edi, edi
  00135	7e a1		 jle	 SHORT $LN57@AnalyzeMes
$LL31@AnalyzeMes:

; 200  : 	{
; 201  : 		if(bAnd)

  00137	8a 06		 mov	 al, BYTE PTR [esi]
  00139	4f		 dec	 edi
  0013a	46		 inc	 esi
  0013b	89 7d 0c	 mov	 DWORD PTR _iStrLen$[ebp], edi
  0013e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bAnd@@3HA, 0	; bAnd
  00145	89 75 08	 mov	 DWORD PTR _lpstr$[ebp], esi
  00148	74 14		 je	 SHORT $LN33@AnalyzeMes

; 202  : 		{
; 203  : 			if(';'==(ch=*lpstr++))

  0014a	3c 3b		 cmp	 al, 59			; 0000003bH
  0014c	74 2b		 je	 SHORT $LN53@AnalyzeMes

; 208  : 			}
; 209  : 			else if('&'!=ch)

  0014e	3c 26		 cmp	 al, 38			; 00000026H
  00150	74 1a		 je	 SHORT $LN38@AnalyzeMes

; 210  : 				bAnd=FALSE;

  00152	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bAnd@@3HA, 0	; bAnd

; 211  : 		}

  0015c	eb 0e		 jmp	 SHORT $LN38@AnalyzeMes
$LN33@AnalyzeMes:

; 212  : 		else
; 213  : 		{
; 214  : 			if('&'==*lpstr++)

  0015e	3c 26		 cmp	 al, 38			; 00000026H
  00160	75 0a		 jne	 SHORT $LN38@AnalyzeMes

; 215  : 				bAnd=TRUE;

  00162	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bAnd@@3HA, 1	; bAnd
$LN38@AnalyzeMes:

; 192  : 		return RET_OK;
; 193  : 	return RET_MEMORY;
; 194  : }
; 195  : 
; 196  : inline void HandleHead(LPSTR &lpstr,int &iStrLen)
; 197  : {
; 198  : 	char ch;
; 199  : 	while(iStrLen-- > 0)

  0016c	85 ff		 test	 edi, edi
  0016e	7f c7		 jg	 SHORT $LL31@AnalyzeMes

; 320  : #ifdef _LOG_MSG
; 321  : 		FILE *fp = fopen( "recvtime.txt", "a+" );
; 322  : 		if( fp ) fprintf( fp, "%u RECV %d  %s\n", TimeGetTime(), iStrLen, lpstr );
; 323  : 		if( fp ) fclose( fp );
; 324  : #endif	
; 325  : 		DWORD dw;
; 326  : 		while(0<iStrLen)

  00170	4f		 dec	 edi
  00171	89 7d 0c	 mov	 DWORD PTR _iStrLen$[ebp], edi
  00174	e9 94 00 00 00	 jmp	 $LN18@AnalyzeMes
$LN53@AnalyzeMes:

; 205  : 				bAnd=FALSE;

  00179	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bAnd@@3HA, 0	; bAnd

; 206  : 				nState=READLEN;

  00183	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 2 ; nState

; 207  : 				return;

  0018d	eb 7e		 jmp	 SHORT $LN18@AnalyzeMes
$LN17@AnalyzeMes:

; 191  : 	if(messNew=new MessNode)

  0018f	68 bf 00 00 00	 push	 191			; 000000bfH
  00194	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
  00199	6a 01		 push	 1
  0019b	6a 0c		 push	 12			; 0000000cH
  0019d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?indexBuf@@3HA, 0 ; indexBuf
  001a7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nParamCounter@@3HA, 0 ; nParamCounter
  001b1	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?backslash@@3HA, 0 ; backslash
  001bb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bAnd@@3HA, 0	; bAnd
  001c5	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 1 ; nState
  001cf	e8 00 00 00 00	 call	 ??2@YAPAXIHPBDH@Z	; operator new
  001d4	83 c4 10	 add	 esp, 16			; 00000010H
  001d7	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  001da	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
  001e1	85 c0		 test	 eax, eax
  001e3	74 10		 je	 SHORT $LN43@AnalyzeMes
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.h

; 103  : 		param=NULL;

  001e5	c7 40 04 00 00
	00 00		 mov	 DWORD PTR [eax+4], 0

; 104  : 		next=NULL;}

  001ec	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [eax+8], 0
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp

; 191  : 	if(messNew=new MessNode)

  001f3	eb 02		 jmp	 SHORT $LN44@AnalyzeMes
$LN43@AnalyzeMes:
  001f5	33 c0		 xor	 eax, eax
$LN44@AnalyzeMes:
  001f7	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  001fe	a3 00 00 00 00	 mov	 DWORD PTR ?messNew@@3PAUMessNode@@A, eax ; messNew
  00203	85 c0		 test	 eax, eax
  00205	74 44		 je	 SHORT $LN56@AnalyzeMes
$LN73@AnalyzeMes:

; 320  : #ifdef _LOG_MSG
; 321  : 		FILE *fp = fopen( "recvtime.txt", "a+" );
; 322  : 		if( fp ) fprintf( fp, "%u RECV %d  %s\n", TimeGetTime(), iStrLen, lpstr );
; 323  : 		if( fp ) fclose( fp );
; 324  : #endif	
; 325  : 		DWORD dw;
; 326  : 		while(0<iStrLen)

  00207	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?indexBuf@@3HA ; indexBuf
$LN18@AnalyzeMes:
  0020d	85 ff		 test	 edi, edi
  0020f	0f 8f 5b fe ff
	ff		 jg	 $LL4@AnalyzeMes
$LN5@AnalyzeMes:

; 344  : 			}
; 345  : 		}
; 346  : 	}
; 347  : 	return RET_OK;

  00215	b8 01 00 00 00	 mov	 eax, 1
$LN1@AnalyzeMes:

; 348  : }

  0021a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0021d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00224	59		 pop	 ecx
  00225	5f		 pop	 edi
  00226	5e		 pop	 esi
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c3		 ret	 0
$LN55@AnalyzeMes:

; 334  : 			case READLEN:
; 335  : 				if(RET_PARAM==HandleLen(lpstr,iStrLen))
; 336  : 					return RET_PARAM;

  0022b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nState@@3HA, 0 ; nState
  00235	b8 03 00 00 00	 mov	 eax, 3

; 348  : }

  0023a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0023d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00244	59		 pop	 ecx
  00245	5f		 pop	 edi
  00246	5e		 pop	 esi
  00247	8b e5		 mov	 esp, ebp
  00249	5d		 pop	 ebp
  0024a	c3		 ret	 0
$LN56@AnalyzeMes:

; 337  : 				break;
; 338  : 			case READHEAD:
; 339  : 				HandleHead(lpstr,iStrLen);
; 340  : 				break;
; 341  : 			case ZERO:
; 342  : 				if(RET_MEMORY==HandleZero(lpstr,iStrLen))
; 343  : 					return RET_MEMORY;

  0024b	b8 02 00 00 00	 mov	 eax, 2

; 348  : }

  00250	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00253	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0025a	59		 pop	 ecx
  0025b	5f		 pop	 edi
  0025c	5e		 pop	 esi
  0025d	8b e5		 mov	 esp, ebp
  0025f	5d		 pop	 ebp
  00260	c3		 ret	 0
$LN27@AnalyzeMes:

; 227  : 			szAnalyzeBuf[indexBuf]='\0';

  00261	e8 00 00 00 00	 call	 ___report_rangecheckfailure
$LN71@AnalyzeMes:
  00266	66 90		 npad	 2
$LN69@AnalyzeMes:

; 348  : }

  00268	00 00 00 00	 DD	 $LN17@AnalyzeMes
  0026c	00 00 00 00	 DD	 $LN50@AnalyzeMes
  00270	00 00 00 00	 DD	 $LN49@AnalyzeMes
  00274	00 00 00 00	 DD	 $LN12@AnalyzeMes
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?AnalyzeMessage@@YAKPADH@Z$0:
  00000	68 bf 00 00 00	 push	 191			; 000000bfH
  00005	68 00 00 00 00	 push	 OFFSET ??_C@_0FG@PJFGOALL@C?3?2Users?2gg862?2OneDrive?2?$LJ?Y?E?A?5?H?$KN@
  0000a	6a 01		 push	 1
  0000c	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??3@YAXPAXHPBDH@Z	; operator delete
  00015	83 c4 10	 add	 esp, 16			; 00000010H
  00018	c3		 ret	 0
  00019	cc		 int	 3
  0001a	cc		 int	 3
  0001b	cc		 int	 3
  0001c	cc		 int	 3
  0001d	cc		 int	 3
__ehhandler$?AnalyzeMessage@@YAKPADH@Z:
  0001e	90		 npad	 1
  0001f	90		 npad	 1
  00020	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00024	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00027	8b 4a f0	 mov	 ecx, DWORD PTR [edx-16]
  0002a	33 c8		 xor	 ecx, eax
  0002c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00031	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?AnalyzeMessage@@YAKPADH@Z
  00036	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?AnalyzeMessage@@YAKPADH@Z ENDP				; AnalyzeMessage
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?GetString@@YAPADAAHPAD@Z
_TEXT	SEGMENT
_iLen$ = 8						; size = 4
_lpstrEncrypt$ = 12					; size = 4
?GetString@@YAPADAAHPAD@Z PROC				; GetString, COMDAT

; 130  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 131  : 	ecb_crypt(lpstrEncrypt,szFormatBuf,iFormatLen,DES_ENCRYPT);

  00003	6a 00		 push	 0
  00005	ff 35 00 00 00
	00		 push	 DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  0000b	68 00 00 00 00	 push	 OFFSET ?szFormatBuf@@3PADA ; szFormatBuf
  00010	ff 75 0c	 push	 DWORD PTR _lpstrEncrypt$[ebp]
  00013	e8 00 00 00 00	 call	 ?ecb_crypt@@YAHPAD0II@Z	; ecb_crypt

; 132  : 	iLen=iFormatLen;

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _iLen$[ebp]
  0001b	83 c4 10	 add	 esp, 16			; 00000010H
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  00023	89 01		 mov	 DWORD PTR [ecx], eax

; 133  : 	return szFormatBuf;

  00025	b8 00 00 00 00	 mov	 eax, OFFSET ?szFormatBuf@@3PADA ; szFormatBuf

; 134  : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?GetString@@YAPADAAHPAD@Z ENDP				; GetString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?AddParamForFormat@@YAXDK@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 1
_flag$ = 12						; size = 4
?AddParamForFormat@@YAXDK@Z PROC			; AddParamForFormat, COMDAT

; 117  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 118  : 	if(flag & FORMAT_START)

  00003	f6 45 0c 01	 test	 BYTE PTR _flag$[ebp], 1
  00007	74 05		 je	 SHORT $LN2@AddParamFo

; 119  : 		StartFormat();

  00009	e8 00 00 00 00	 call	 ?StartFormat@@YAXXZ	; StartFormat
$LN2@AddParamFo:

; 120  : 	if(('\\'==ch)||(';'==ch)||('&'==ch))

  0000e	8a 4d 08	 mov	 cl, BYTE PTR _ch$[ebp]
  00011	80 f9 5c	 cmp	 cl, 92			; 0000005cH
  00014	74 11		 je	 SHORT $LN4@AddParamFo
  00016	80 f9 3b	 cmp	 cl, 59			; 0000003bH
  00019	74 0c		 je	 SHORT $LN4@AddParamFo
  0001b	80 f9 26	 cmp	 cl, 38			; 00000026H
  0001e	74 07		 je	 SHORT $LN4@AddParamFo
  00020	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  00025	eb 0d		 jmp	 SHORT $LN3@AddParamFo
$LN4@AddParamFo:

; 121  : 		szFormatBuf[iFormatLen++]='\\';

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  0002c	c6 80 00 00 00
	00 5c		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax], 92 ; 0000005cH
  00033	40		 inc	 eax
$LN3@AddParamFo:

; 122  : 	szFormatBuf[iFormatLen++]=ch;

  00034	88 88 00 00 00
	00		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax], cl

; 123  : 	szFormatBuf[iFormatLen++]=';';

  0003a	c6 80 01 00 00
	00 3b		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax+1], 59 ; 0000003bH
  00041	83 c0 02	 add	 eax, 2
  00044	a3 00 00 00 00	 mov	 DWORD PTR ?iFormatLen@@3HA, eax ; iFormatLen

; 124  : 	FormatAdd();

  00049	e8 00 00 00 00	 call	 ?FormatAdd@@YAXXZ	; FormatAdd

; 125  : 	if(flag & FORMAT_FINISH)

  0004e	f6 45 0c 02	 test	 BYTE PTR _flag$[ebp], 2
  00052	74 32		 je	 SHORT $LN10@AddParamFo

; 78   : 	if((j=iFormatLen & 0x07)>0){

  00054	57		 push	 edi
  00055	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  0005b	8b cf		 mov	 ecx, edi
  0005d	83 e1 07	 and	 ecx, 7
  00060	76 23		 jbe	 SHORT $LN18@AddParamFo
  00062	56		 push	 esi
  00063	be 08 00 00 00	 mov	 esi, 8
  00068	8d 87 00 00 00
	00		 lea	 eax, DWORD PTR ?szFormatBuf@@3PADA[edi]
  0006e	2b f1		 sub	 esi, ecx
  00070	56		 push	 esi
  00071	6a 26		 push	 38			; 00000026H
  00073	50		 push	 eax
  00074	e8 00 00 00 00	 call	 _memset
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007c	03 fe		 add	 edi, esi
  0007e	89 3d 00 00 00
	00		 mov	 DWORD PTR ?iFormatLen@@3HA, edi ; iFormatLen
  00084	5e		 pop	 esi
$LN18@AddParamFo:
  00085	5f		 pop	 edi
$LN10@AddParamFo:

; 126  : 		FinishFormat();
; 127  : }

  00086	5d		 pop	 ebp
  00087	c3		 ret	 0
?AddParamForFormat@@YAXDK@Z ENDP			; AddParamForFormat
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\Wgs\Message.cpp
;	COMDAT ?AddParamForFormat@@YAXPADHK@Z
_TEXT	SEGMENT
_lpstr$ = 8						; size = 4
_iLen$ = 12						; size = 4
_flag$ = 16						; size = 4
?AddParamForFormat@@YAXPADHK@Z PROC			; AddParamForFormat, COMDAT

; 102  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 103  : 	if(flag & FORMAT_START)

  00003	f6 45 10 01	 test	 BYTE PTR _flag$[ebp], 1
  00007	74 05		 je	 SHORT $LN5@AddParamFo

; 104  : 		StartFormat();

  00009	e8 00 00 00 00	 call	 ?StartFormat@@YAXXZ	; StartFormat
$LN5@AddParamFo:

; 105  : 	for(int j=0;j<iLen;j++){

  0000e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  00013	33 d2		 xor	 edx, edx
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _iLen$[ebp]
  00019	57		 push	 edi
  0001a	85 f6		 test	 esi, esi
  0001c	7e 36		 jle	 SHORT $LN3@AddParamFo
  0001e	8b 7d 08	 mov	 edi, DWORD PTR _lpstr$[ebp]
$LL4@AddParamFo:

; 106  : 		if(('\\'==lpstr[j])||(';'==lpstr[j])||('&'==lpstr[j]))

  00021	8a 0c 3a	 mov	 cl, BYTE PTR [edx+edi]
  00024	80 f9 5c	 cmp	 cl, 92			; 0000005cH
  00027	74 0a		 je	 SHORT $LN7@AddParamFo
  00029	80 f9 3b	 cmp	 cl, 59			; 0000003bH
  0002c	74 05		 je	 SHORT $LN7@AddParamFo
  0002e	80 f9 26	 cmp	 cl, 38			; 00000026H
  00031	75 10		 jne	 SHORT $LN6@AddParamFo
$LN7@AddParamFo:

; 107  : 			szFormatBuf[iFormatLen++]='\\';

  00033	c6 80 00 00 00
	00 5c		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax], 92 ; 0000005cH
  0003a	40		 inc	 eax
  0003b	a3 00 00 00 00	 mov	 DWORD PTR ?iFormatLen@@3HA, eax ; iFormatLen
  00040	8a 0c 3a	 mov	 cl, BYTE PTR [edx+edi]
$LN6@AddParamFo:

; 108  : 		szFormatBuf[iFormatLen++]=lpstr[j];

  00043	88 88 00 00 00
	00		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax], cl
  00049	42		 inc	 edx
  0004a	40		 inc	 eax
  0004b	a3 00 00 00 00	 mov	 DWORD PTR ?iFormatLen@@3HA, eax ; iFormatLen
  00050	3b d6		 cmp	 edx, esi
  00052	7c cd		 jl	 SHORT $LL4@AddParamFo
$LN3@AddParamFo:

; 109  : 	}
; 110  : 	szFormatBuf[iFormatLen++]=';';

  00054	c6 80 00 00 00
	00 3b		 mov	 BYTE PTR ?szFormatBuf@@3PADA[eax], 59 ; 0000003bH
  0005b	40		 inc	 eax
  0005c	a3 00 00 00 00	 mov	 DWORD PTR ?iFormatLen@@3HA, eax ; iFormatLen

; 111  : 	FormatAdd();

  00061	e8 00 00 00 00	 call	 ?FormatAdd@@YAXXZ	; FormatAdd

; 112  : 	if(flag & FORMAT_FINISH)

  00066	f6 45 10 02	 test	 BYTE PTR _flag$[ebp], 2
  0006a	74 2e		 je	 SHORT $LN13@AddParamFo

; 78   : 	if((j=iFormatLen & 0x07)>0){

  0006c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?iFormatLen@@3HA ; iFormatLen
  00072	8b cf		 mov	 ecx, edi
  00074	83 e1 07	 and	 ecx, 7
  00077	76 21		 jbe	 SHORT $LN13@AddParamFo
  00079	be 08 00 00 00	 mov	 esi, 8
  0007e	8d 87 00 00 00
	00		 lea	 eax, DWORD PTR ?szFormatBuf@@3PADA[edi]
  00084	2b f1		 sub	 esi, ecx
  00086	56		 push	 esi
  00087	6a 26		 push	 38			; 00000026H
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _memset
  0008f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00092	03 fe		 add	 edi, esi
  00094	89 3d 00 00 00
	00		 mov	 DWORD PTR ?iFormatLen@@3HA, edi ; iFormatLen
$LN13@AddParamFo:
  0009a	5f		 pop	 edi

; 113  : 		FinishFormat();
; 114  : }

  0009b	5e		 pop	 esi
  0009c	5d		 pop	 ebp
  0009d	c3		 ret	 0
?AddParamForFormat@@YAXPADHK@Z ENDP			; AddParamForFormat
_TEXT	ENDS
END
