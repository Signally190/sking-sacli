; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?pc@@3UPC@@A					; pc
PUBLIC	?maxPcNo@@3FA					; maxPcNo
PUBLIC	?selectPcNo@@3FA				; selectPcNo
PUBLIC	?prSendMode@@3FA				; prSendMode
PUBLIC	?prSendFlag@@3FA				; prSendFlag
PUBLIC	?jbSendFlag@@3FA				; jbSendFlag
PUBLIC	?duelSendFlag@@3FA				; duelSendFlag
PUBLIC	?loginDp@@3HA					; loginDp
PUBLIC	?helpFlag@@3FA					; helpFlag
PUBLIC	?tradeFlag@@3FA					; tradeFlag
PUBLIC	?tradeStatus@@3FA				; tradeStatus
PUBLIC	?magic@@3PAUMAGIC@@A				; magic
PUBLIC	?pet@@3PAUPET@@A				; pet
PUBLIC	?party@@3PAUPARTY@@A				; party
PUBLIC	?partyModeFlag@@3FA				; partyModeFlag
PUBLIC	?addressBook@@3PAUADDRESS_BOOK@@A		; addressBook
PUBLIC	?addressBookFlag@@3HA				; addressBookFlag
PUBLIC	?battleResultMsg@@3UBATTLE_RESULT_MSG@@A	; battleResultMsg
PUBLIC	?petSkill@@3PAY06UPET_SKILL@@A			; petSkill
PUBLIC	?chartable@@3PAUCHARLISTTABLE@@A		; chartable
PUBLIC	?newCharacterName@@3PADA			; newCharacterName
PUBLIC	?newCharacterGraNo@@3HA				; newCharacterGraNo
PUBLIC	?newCharacterFaceGraNo@@3HA			; newCharacterFaceGraNo
PUBLIC	?newCharacterVit@@3HA				; newCharacterVit
PUBLIC	?newCharacterStr@@3HA				; newCharacterStr
PUBLIC	?newCharacterTgh@@3HA				; newCharacterTgh
PUBLIC	?newCharacterDex@@3HA				; newCharacterDex
PUBLIC	?newCharacterEarth@@3HA				; newCharacterEarth
PUBLIC	?newCharacterWater@@3HA				; newCharacterWater
PUBLIC	?newCharacterFire@@3HA				; newCharacterFire
PUBLIC	?newCharacterWind@@3HA				; newCharacterWind
PUBLIC	?newCharacterHomeTown@@3HA			; newCharacterHomeTown
PUBLIC	?profession_skill@@3PAUPROFESSION_SKILL@@A	; profession_skill
PUBLIC	?ptActAddressBookWin@@3PAUaction@@A		; ptActAddressBookWin
PUBLIC	?addressBookX@@3HA				; addressBookX
PUBLIC	?addressBookY@@3HA				; addressBookY
PUBLIC	?addressBookPage@@3HA				; addressBookPage
PUBLIC	?ptActAddressBookChar@@3PAPAUaction@@A		; ptActAddressBookChar
PUBLIC	?addressBookSelectStrItem@@3PAHA		; addressBookSelectStrItem
PUBLIC	?addressBookSendMsgFlag@@3HA			; addressBookSendMsgFlag
PUBLIC	?ptActAddressBookSendMsgWin@@3PAUaction@@A	; ptActAddressBookSendMsgWin
_BSS	SEGMENT
?pc@@3UPC@@A DB	0a1c0H DUP (?)				; pc
?maxPcNo@@3FA DW 01H DUP (?)				; maxPcNo
	ALIGN	4

?selectPcNo@@3FA DW 01H DUP (?)				; selectPcNo
	ALIGN	4

?prSendMode@@3FA DW 01H DUP (?)				; prSendMode
	ALIGN	4

?prSendFlag@@3FA DW 01H DUP (?)				; prSendFlag
	ALIGN	4

?jbSendFlag@@3FA DW 01H DUP (?)				; jbSendFlag
	ALIGN	4

?duelSendFlag@@3FA DW 01H DUP (?)			; duelSendFlag
	ALIGN	4

?loginDp@@3HA DD 01H DUP (?)				; loginDp
?helpFlag@@3FA DW 01H DUP (?)				; helpFlag
	ALIGN	4

?tradeFlag@@3FA DW 01H DUP (?)				; tradeFlag
	ALIGN	4

?tradeStatus@@3FA DW 01H DUP (?)			; tradeStatus
	ALIGN	4

?magic@@3PAUMAGIC@@A DB 03f0H DUP (?)			; magic
?pet@@3PAUPET@@A DB 03958H DUP (?)			; pet
?party@@3PAUPARTY@@A DB 0f0H DUP (?)			; party
?partyModeFlag@@3FA DW 01H DUP (?)			; partyModeFlag
	ALIGN	4

?addressBook@@3PAUADDRESS_BOOK@@A DB 02080H DUP (?)	; addressBook
?addressBookFlag@@3HA DD 01H DUP (?)			; addressBookFlag
?battleResultMsg@@3UBATTLE_RESULT_MSG@@A DB 078H DUP (?) ; battleResultMsg
?petSkill@@3PAY06UPET_SKILL@@A DB 0e7eH DUP (?)		; petSkill
	ALIGN	4

?chartable@@3PAUCHARLISTTABLE@@A DB 088H DUP (?)	; chartable
?newCharacterName@@3PADA DB 011H DUP (?)		; newCharacterName
	ALIGN	4

?newCharacterGraNo@@3HA DD 01H DUP (?)			; newCharacterGraNo
?newCharacterFaceGraNo@@3HA DD 01H DUP (?)		; newCharacterFaceGraNo
?newCharacterVit@@3HA DD 01H DUP (?)			; newCharacterVit
?newCharacterStr@@3HA DD 01H DUP (?)			; newCharacterStr
?newCharacterTgh@@3HA DD 01H DUP (?)			; newCharacterTgh
?newCharacterDex@@3HA DD 01H DUP (?)			; newCharacterDex
?newCharacterEarth@@3HA DD 01H DUP (?)			; newCharacterEarth
?newCharacterWater@@3HA DD 01H DUP (?)			; newCharacterWater
?newCharacterFire@@3HA DD 01H DUP (?)			; newCharacterFire
?newCharacterWind@@3HA DD 01H DUP (?)			; newCharacterWind
?newCharacterHomeTown@@3HA DD 01H DUP (?)		; newCharacterHomeTown
?profession_skill@@3PAUPROFESSION_SKILL@@A DB 01380H DUP (?) ; profession_skill
?ptActAddressBookWin@@3PAUaction@@A DD 01H DUP (?)	; ptActAddressBookWin
?addressBookPage@@3HA DD 01H DUP (?)			; addressBookPage
?ptActAddressBookChar@@3PAPAUaction@@A DD 04H DUP (?)	; ptActAddressBookChar
?addressBookSelectStrItem@@3PAHA DD 0dH DUP (?)		; addressBookSelectStrItem
?addressBookSendMsgFlag@@3HA DD 01H DUP (?)		; addressBookSendMsgFlag
?ptActAddressBookSendMsgWin@@3PAUaction@@A DD 01H DUP (?) ; ptActAddressBookSendMsgWin
_BSS	ENDS
_DATA	SEGMENT
?addressBookX@@3HA DD 010H				; addressBookX
?addressBookY@@3HA DD 010H				; addressBookY
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?initPcAll@@YAXXZ				; initPcAll
PUBLIC	?initPc@@YAXXZ					; initPc
PUBLIC	?createPc@@YAXHHHH@Z				; createPc
PUBLIC	?resetPc@@YAXXZ					; resetPc
PUBLIC	?setPcWarpPoint@@YAXHH@Z			; setPcWarpPoint
PUBLIC	?setPcPoint@@YAXXZ				; setPcPoint
PUBLIC	?setPcGraNo@@YAXHH@Z				; setPcGraNo
PUBLIC	?setPcId@@YAXH@Z				; setPcId
PUBLIC	?setPcDir@@YAXH@Z				; setPcDir
PUBLIC	?setPcAction@@YAXH@Z				; setPcAction
PUBLIC	?getPcAction@@YAHXZ				; getPcAction
PUBLIC	?setPcParam@@YAXPAD0H0HHHHHHHH@Z		; setPcParam
PUBLIC	?updataPcAct@@YAXXZ				; updataPcAct
PUBLIC	?setPcLeader@@YAXXZ				; setPcLeader
PUBLIC	?delPcLeader@@YAXXZ				; delPcLeader
PUBLIC	?setPcParty@@YAXXZ				; setPcParty
PUBLIC	?delPcParty@@YAXXZ				; delPcParty
PUBLIC	?setPcWatch@@YAXXZ				; setPcWatch
PUBLIC	?delPcWatch@@YAXXZ				; delPcWatch
PUBLIC	?changePcAct@@YAXHHHHHHH@Z			; changePcAct
PUBLIC	?setPcWalkFlag@@YAXXZ				; setPcWalkFlag
PUBLIC	?delPcWalkFlag@@YAXXZ				; delPcWalkFlag
PUBLIC	?checkPcWalkFlag@@YAHXZ				; checkPcWalkFlag
PUBLIC	?setPcUseMagic@@YAXXZ				; setPcUseMagic
PUBLIC	?delPcUseMagic@@YAXXZ				; delPcUseMagic
PUBLIC	?setPcFukidashi@@YAXI@Z				; setPcFukidashi
PUBLIC	?setPcNameColor@@YAXH@Z				; setPcNameColor
PUBLIC	?clearPartyParam@@YAXXZ				; clearPartyParam
PUBLIC	?clearPtActPartyParam@@YAXXZ			; clearPtActPartyParam
PUBLIC	?existCharacterListEntry@@YAHH@Z		; existCharacterListEntry
PUBLIC	?cmpNameCharacterList@@YAHPAD@Z			; cmpNameCharacterList
PUBLIC	?setCharacterList@@YAHPAD0@Z			; setCharacterList
PUBLIC	?resetCharacterList@@YAHH@Z			; resetCharacterList
PUBLIC	?getItem@@YAXXZ					; getItem
PUBLIC	?swapItem@@YAXHH@Z				; swapItem
PUBLIC	?lookAtAround@@YAHXZ				; lookAtAround
PUBLIC	?initAddressBook@@YAXXZ				; initAddressBook
PUBLIC	?addressBookProc@@YAXXZ				; addressBookProc
PUBLIC	?CHAR_getMaxHaveGold@@YAHXZ			; CHAR_getMaxHaveGold
PUBLIC	?swap@@YAXPAD0@Z				; swap
PUBLIC	?setPcAngel@@YAXXZ				; setPcAngel
PUBLIC	?delPcAngel@@YAXXZ				; delPcAngel
PUBLIC	?TalkToNPC@@YAHXZ				; TalkToNPC
PUBLIC	?addressBookWindow1@@YAXXZ			; addressBookWindow1
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@		; `string'
PUBLIC	??_C@_03CCKOKKND@rb?$CL@			; `string'
PUBLIC	??_C@_02PCEFGMJL@hi@				; `string'
PUBLIC	??_C@_04BKLDHGDD@P?$HM?$CFs@			; `string'
PUBLIC	??_C@_08HEIPOOLE@NAME?4?5?$CFs@			; `string'
PUBLIC	??_C@_06NKDLMAJF@LV?4?5?$CFd@			; `string'
PUBLIC	??_C@_03IKGADJCP@?$DP?$NP?$LO@			; `string'
PUBLIC	??_C@_02HHFHKOHM@?$DP?$DP@			; `string'
PUBLIC	??_C@_04HJGKOLIF@?a?j?c?a@			; `string'
PUBLIC	??_C@_04PNLNNJDO@?b?$KF?c?a@			; `string'
PUBLIC	??_C@_03HBKILCPK@?$DP?p?$LG@			; `string'
PUBLIC	__real@41b40000
PUBLIC	__real@42340000
PUBLIC	__real@43070000
PUBLIC	__xmm@fffffffefffffffefffffffefffffffe
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	_atoi:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	?GetAction@@YAPAUaction@@EI@Z:PROC		; GetAction
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?AdjustDir@@YAXPAM@Z:PROC			; AdjustDir
EXTRN	?Atan@@YAMMM@Z:PROC				; Atan
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?pattern@@YAHPAUaction@@HH@Z:PROC		; pattern
EXTRN	?setCharmManor@@YAXPAUaction@@H@Z:PROC		; setCharmManor
EXTRN	?delCharmManor@@YAXPAUaction@@@Z:PROC		; delCharmManor
EXTRN	?setCharmTitle@@YAXPAUaction@@H@Z:PROC		; setCharmTitle
EXTRN	?delCharmTitle@@YAXPAUaction@@@Z:PROC		; delCharmTitle
EXTRN	?createCharAction@@YAPAUaction@@HHHH@Z:PROC	; createCharAction
EXTRN	?delCharParty@@YAXPAUaction@@@Z:PROC		; delCharParty
EXTRN	?checkCharObjPoint@@YAHHHF@Z:PROC		; checkCharObjPoint
EXTRN	?setWarpMap@@YAXHH@Z:PROC			; setWarpMap
EXTRN	?cnvServDir@@YADHH@Z:PROC			; cnvServDir
EXTRN	?getIntegerToken@@YAHPADDH@Z:PROC		; getIntegerToken
EXTRN	?makeStringFromEscaped@@YAPADPAD@Z:PROC		; makeStringFromEscaped
EXTRN	?makeEscapeString@@YAPADPAD0H@Z:PROC		; makeEscapeString
EXTRN	?lssproto_PI_send@@YAXHHHH@Z:PROC		; lssproto_PI_send
EXTRN	?lssproto_DAB_send@@YAXHH@Z:PROC		; lssproto_DAB_send
EXTRN	?lssproto_L_send@@YAXHH@Z:PROC			; lssproto_L_send
EXTRN	?lssproto_TK_send@@YAXHHHPADHH@Z:PROC		; lssproto_TK_send
EXTRN	?old_lssproto_PI_send@@YAXHHHH@Z:PROC		; old_lssproto_PI_send
EXTRN	?old_lssproto_DAB_send@@YAXHH@Z:PROC		; old_lssproto_DAB_send
EXTRN	?old_lssproto_L_send@@YAXHH@Z:PROC		; old_lssproto_L_send
EXTRN	?old_lssproto_TK_send@@YAXHHHPADHH@Z:PROC	; old_lssproto_TK_send
EXTRN	?getUserSetting@@YAXH@Z:PROC			; getUserSetting
EXTRN	?walkSendForServer@@YAXHHPAD@Z:PROC		; walkSendForServer
EXTRN	?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z:PROC	; MakeWindowDisp
EXTRN	@__security_check_cookie@4:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	_memset:PROC
EXTRN	?MyChatBuffer@@3USTR_BUFFER@@A:BYTE		; MyChatBuffer
EXTRN	?NowMaxVoice@@3HA:DWORD				; NowMaxVoice
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitFontNo@@3HA:DWORD				; HitFontNo
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
EXTRN	?nowX@@3MA:DWORD				; nowX
EXTRN	?nowY@@3MA:DWORD				; nowY
EXTRN	?nowVx@@3MA:DWORD				; nowVx
EXTRN	?nowVy@@3MA:DWORD				; nowVy
EXTRN	?nextGx@@3HA:DWORD				; nextGx
EXTRN	?nextGy@@3HA:DWORD				; nextGy
EXTRN	?mouseMapGx@@3HA:DWORD				; mouseMapGx
EXTRN	?mouseMapGy@@3HA:DWORD				; mouseMapGy
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?bNewServer@@3HA:DWORD				; bNewServer
EXTRN	?sPetStatFlag@@3HA:DWORD			; sPetStatFlag
EXTRN	?fMapBgm@@3HA:DWORD				; fMapBgm
EXTRN	?sCharSide@@3HA:DWORD				; sCharSide
EXTRN	?chatRegistryStr@@3PAUSTR_BUFFER@@A:BYTE	; chatRegistryStr
EXTRN	?windowTypeWN@@3HA:DWORD			; windowTypeWN
EXTRN	?PcLanded@@3ULanded@@A:BYTE			; PcLanded
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ?piSendTime@?1??getItem@@YAXXZ@4IA
_BSS	SEGMENT
?piSendTime@?1??getItem@@YAXXZ@4IA DD 01H DUP (?)	; `getItem'::`2'::piSendTime
_BSS	ENDS
;	COMDAT ?talkSendTime@?1??TalkToNPC@@YAHXZ@4IA
_BSS	SEGMENT
?talkSendTime@?1??TalkToNPC@@YAHXZ@4IA DD 01H DUP (?)	; `TalkToNPC'::`2'::talkSendTime
_BSS	ENDS
;	COMDAT ?lSendTime@?1??lookAtAround@@YAHXZ@4IA
_BSS	SEGMENT
?lSendTime@?1??lookAtAround@@YAHXZ@4IA DD 01H DUP (?)	; `lookAtAround'::`2'::lSendTime
_BSS	ENDS
;	COMDAT __xmm@fffffffefffffffefffffffefffffffe
CONST	SEGMENT
__xmm@fffffffefffffffefffffffefffffffe DB 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH
	DB	0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH, 0feH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __real@43070000
CONST	SEGMENT
__real@43070000 DD 043070000r			; 135
CONST	ENDS
;	COMDAT __real@42340000
CONST	SEGMENT
__real@42340000 DD 042340000r			; 45
CONST	ENDS
;	COMDAT __real@41b40000
CONST	SEGMENT
__real@41b40000 DD 041b40000r			; 22.5
CONST	ENDS
;	COMDAT ??_C@_03HBKILCPK@?$DP?p?$LG@
CONST	SEGMENT
??_C@_03HBKILCPK@?$DP?p?$LG@ DB '?', 0f0H, 0b6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04PNLNNJDO@?b?$KF?c?a@
CONST	SEGMENT
??_C@_04PNLNNJDO@?b?$KF?c?a@ DB 0e2H, 0a5H, 0e3H, 0e1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HJGKOLIF@?a?j?c?a@
CONST	SEGMENT
??_C@_04HJGKOLIF@?a?j?c?a@ DB 0e1H, 0eaH, 0e3H, 0e1H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02HHFHKOHM@?$DP?$DP@
CONST	SEGMENT
??_C@_02HHFHKOHM@?$DP?$DP@ DB '??', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IKGADJCP@?$DP?$NP?$LO@
CONST	SEGMENT
??_C@_03IKGADJCP@?$DP?$NP?$LO@ DB '?', 0dfH, 0beH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06NKDLMAJF@LV?4?5?$CFd@
CONST	SEGMENT
??_C@_06NKDLMAJF@LV?4?5?$CFd@ DB 'LV. %d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HEIPOOLE@NAME?4?5?$CFs@
CONST	SEGMENT
??_C@_08HEIPOOLE@NAME?4?5?$CFs@ DB 'NAME. %s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04BKLDHGDD@P?$HM?$CFs@
CONST	SEGMENT
??_C@_04BKLDHGDD@P?$HM?$CFs@ DB 'P|%s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02PCEFGMJL@hi@
CONST	SEGMENT
??_C@_02PCEFGMJL@hi@ DB 'hi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCKOKKND@rb?$CL@
CONST	SEGMENT
??_C@_03CCKOKKND@rb?$CL@ DB 'rb+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@
CONST	SEGMENT
??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@ DB 'map\bgm%d.dat', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$?resetPc@@YAXXZ$2 DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?resetPc@@YAXXZ$0
__unwindtable$?resetPc@@YAXXZ DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$?resetPc@@YAXXZ DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$?resetPc@@YAXXZ$2
__ehfuncinfo$?resetPc@@YAXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?resetPc@@YAXXZ
	DD	01H
	DD	FLAT:__tryblocktable$?resetPc@@YAXXZ
	DD	2 DUP(00H)
	DD	00H
	DD	00H
xdata$x	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?addressBookWindow1@@YAXXZ
_TEXT	SEGMENT
tv646 = -284						; size = 4
tv643 = -280						; size = 4
tv678 = -276						; size = 4
tv671 = -272						; size = 4
tv562 = -272						; size = 4
tv673 = -268						; size = 4
tv679 = -264						; size = 4
tv668 = -264						; size = 4
_msg$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
?addressBookWindow1@@YAXXZ PROC				; addressBookWindow1, COMDAT

; 1536 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1537 : 	int mode = 0;

  00013	33 c9		 xor	 ecx, ecx

; 1538 : 	int i;
; 1539 : 	int no;
; 1540 : 	char msg[256];
; 1541 : 
; 1542 : 	// î°???î±î¶??????????
; 1543 : 	// ???????????????????
; 1544 : 	if(mouse.onceState & MOUSE_LEFT_CRICK)

  00015	f6 05 2c 00 00
	00 01		 test	 BYTE PTR ?mouse@@3UMOUSE@@A+44, 1
  0001c	56		 push	 esi
  0001d	74 44		 je	 SHORT $LN10@addressBoo

; 1545 : 	{
; 1546 : 		for(i = 0; i < sizeof(addressBookSelectStrItem)/sizeof(int); i++)

  0001f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00025	33 c0		 xor	 eax, eax
  00027	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL4@addressBoo:

; 1547 : 		{
; 1548 : 			if(addressBookSelectStrItem[i] == HitFontNo)

  00030	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00033	39 14 85 00 00
	00 00		 cmp	 DWORD PTR ?addressBookSelectStrItem@@3PAHA[eax*4], edx
  0003a	74 09		 je	 SHORT $LN24@addressBoo

; 1545 : 	{
; 1546 : 		for(i = 0; i < sizeof(addressBookSelectStrItem)/sizeof(int); i++)

  0003c	8b c1		 mov	 eax, ecx
  0003e	83 f8 0d	 cmp	 eax, 13			; 0000000dH
  00041	72 ed		 jb	 SHORT $LL4@addressBoo

; 1547 : 		{
; 1548 : 			if(addressBookSelectStrItem[i] == HitFontNo)

  00043	eb 6c		 jmp	 SHORT $LN14@addressBoo
$LN24@addressBoo:

; 1549 : 			{
; 1550 : 				mode = i + 1;
; 1551 : 				break;
; 1552 : 			}
; 1553 : 		}
; 1554 : 	}
; 1555 : 
; 1556 : 	// î¼????????????î·??
; 1557 : 	if(mode == 1)

  00045	83 f9 01	 cmp	 ecx, 1
  00048	75 19		 jne	 SHORT $LN10@addressBoo

; 1558 : 	{
; 1559 : 		addressBookFlag = FALSE;

  0004a	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?addressBookFlag@@3HA, 0 ; addressBookFlag
  00054	5e		 pop	 esi

; 1632 : 			StockFontBuffer(addressBookX + 56, addressBookY + 352,
; 1633 : 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "å³é­", 2);
; 1634 : 	}
; 1635 : }

  00055	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00058	33 cd		 xor	 ecx, ebp
  0005a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
$LN10@addressBoo:

; 1560 : 		return;
; 1561 : 	}
; 1562 : 	// ?????????????????????
; 1563 : 	else
; 1564 : 	if((mode-2) < MAX_ADR_BOOK_COUNT*3
; 1565 : 	 && ((mode-2) % 3) == 2)

  00063	8d 41 fe	 lea	 eax, DWORD PTR [ecx-2]
  00066	83 f8 0c	 cmp	 eax, 12			; 0000000cH
  00069	7d 46		 jge	 SHORT $LN14@addressBoo
  0006b	99		 cdq
  0006c	b9 03 00 00 00	 mov	 ecx, 3
  00071	f7 f9		 idiv	 ecx
  00073	8b f0		 mov	 esi, eax
  00075	83 fa 02	 cmp	 edx, 2
  00078	75 37		 jne	 SHORT $LN14@addressBoo

; 1566 : 	{
; 1567 : 		if(bNewServer)

  0007a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00081	74 17		 je	 SHORT $LN13@addressBoo

; 1568 : 			lssproto_DAB_send(sockfd, addressBookPage*MAX_ADR_BOOK_COUNT+((mode-2)/3));

  00083	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?addressBookPage@@3HA ; addressBookPage
  00089	8d 04 8e	 lea	 eax, DWORD PTR [esi+ecx*4]
  0008c	50		 push	 eax
  0008d	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00093	e8 00 00 00 00	 call	 ?lssproto_DAB_send@@YAXHH@Z ; lssproto_DAB_send
  00098	eb 14		 jmp	 SHORT $LN33@addressBoo
$LN13@addressBoo:

; 1569 : 		else
; 1570 : 			old_lssproto_DAB_send(sockfd, addressBookPage*MAX_ADR_BOOK_COUNT+((mode-2)/3));

  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookPage@@3HA ; addressBookPage
  0009f	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000a2	50		 push	 eax
  000a3	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  000a9	e8 00 00 00 00	 call	 ?old_lssproto_DAB_send@@YAXHH@Z ; old_lssproto_DAB_send
$LN33@addressBoo:

; 1571 : 	}
; 1572 : 
; 1573 : 	// ???????????î·?????î²?î¸î
; 1574 : 	if(ptActAddressBookWin->hp >= 1)

  000ae	83 c4 08	 add	 esp, 8
$LN14@addressBoo:
  000b1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A ; ptActAddressBookWin
  000b6	83 78 78 01	 cmp	 DWORD PTR [eax+120], 1
  000ba	0f 8c 59 02 00
	00		 jl	 $LN15@addressBoo

; 1575 : 	{
; 1576 : 		for(i = 0; i < MAX_ADR_BOOK_COUNT; i++)

  000c0	53		 push	 ebx
  000c1	57		 push	 edi
  000c2	33 f6		 xor	 esi, esi
  000c4	c7 85 f4 fe ff
	ff 02 00 00 00	 mov	 DWORD PTR tv673[ebp], OFFSET ?addressBook@@3PAUADDRESS_BOOK@@A+2
  000ce	33 ff		 xor	 edi, edi
  000d0	c7 85 e8 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv643[ebp], OFFSET ??_C@_03IKGADJCP@?$DP?$NP?$LO@
  000da	bb 08 00 00 00	 mov	 ebx, OFFSET ?addressBookSelectStrItem@@3PAHA+8
  000df	c7 85 e4 fe ff
	ff 07 00 00 00	 mov	 DWORD PTR tv646[ebp], 7
  000e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@addressBoo:

; 1577 : 		{
; 1578 : 			no = addressBookPage*MAX_ADR_BOOK_COUNT+i;

  000f0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookPage@@3HA ; addressBookPage

; 1579 : 
; 1580 : 			if(ptActAddressBookChar[i] != NULL)

  000f5	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  000fc	8d 04 86	 lea	 eax, DWORD PTR [esi+eax*4]
  000ff	85 d2		 test	 edx, edx
  00101	0f 84 cd 01 00
	00		 je	 $LN5@addressBoo

; 1581 : 			{
; 1582 : 				// î¡î·?????????î¼???????
; 1583 : 				if(strlen(addressBook[no].name) > 0)

  00107	6b c0 68	 imul	 eax, eax, 104
  0010a	89 85 f8 fe ff
	ff		 mov	 DWORD PTR tv679[ebp], eax
  00110	8d 80 14 00 00
	00		 lea	 eax, DWORD PTR ?addressBook@@3PAUADDRESS_BOOK@@A[eax+20]
  00116	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  00119	89 85 ec fe ff
	ff		 mov	 DWORD PTR tv678[ebp], eax
  0011f	89 8d f0 fe ff
	ff		 mov	 DWORD PTR tv671[ebp], ecx
$LL32@addressBoo:
  00125	8a 08		 mov	 cl, BYTE PTR [eax]
  00127	40		 inc	 eax
  00128	84 c9		 test	 cl, cl
  0012a	75 f9		 jne	 SHORT $LL32@addressBoo
  0012c	2b 85 f0 fe ff
	ff		 sub	 eax, DWORD PTR tv671[ebp]
  00132	8b 82 a4 00 00
	00		 mov	 eax, DWORD PTR [edx+164]
  00138	0f 84 7c 01 00
	00		 je	 $LN17@addressBoo

; 1584 : 				{
; 1585 : 					// ??????î±?????îºî«î¸î
; 1586 : 					// ???î¸î
; 1587 : 					ptActAddressBookChar[i]->atr &= (~ACT_ATR_HIDE);
; 1588 : 					ptActAddressBookChar[i]->anim_chr_no = addressBook[no].graNo;
; 1589 : 					// î¡î·î¸î
; 1590 : 					sprintf(msg, "NAME. %s", addressBook[no].name);

  0013e	ff b5 ec fe ff
	ff		 push	 DWORD PTR tv678[ebp]
  00144	83 e0 fd	 and	 eax, -3			; fffffffdH
  00147	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax
  0014d	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  00154	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv679[ebp]
  0015a	68 00 00 00 00	 push	 OFFSET ??_C@_08HEIPOOLE@NAME?4?5?$CFs@
  0015f	8b 80 10 00 00
	00		 mov	 eax, DWORD PTR ?addressBook@@3PAUADDRESS_BOOK@@A[eax+16]
  00165	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax
  0016b	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  00171	50		 push	 eax
  00172	e8 00 00 00 00	 call	 _sprintf

; 1591 : 					StockFontBuffer(addressBookX + 68, addressBookY + i * 110 + 28,

  00177	6a 00		 push	 0
  00179	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  0017f	50		 push	 eax
  00180	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  00185	83 c0 1c	 add	 eax, 28			; 0000001cH
  00188	6a 00		 push	 0
  0018a	03 c7		 add	 eax, edi
  0018c	6a 01		 push	 1
  0018e	50		 push	 eax
  0018f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  00194	83 c0 44	 add	 eax, 68			; 00000044H
  00197	50		 push	 eax
  00198	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1592 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);
; 1593 : 				
; 1594 : 					// ???î¸î
; 1595 : 					sprintf(msg, "LV. %d", addressBook[no].level);

  0019d	8b 85 f8 fe ff
	ff		 mov	 eax, DWORD PTR tv679[ebp]
  001a3	ff b0 04 00 00
	00		 push	 DWORD PTR ?addressBook@@3PAUADDRESS_BOOK@@A[eax+4]
  001a9	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_06NKDLMAJF@LV?4?5?$CFd@
  001b4	50		 push	 eax
  001b5	e8 00 00 00 00	 call	 _sprintf

; 1596 : 					StockFontBuffer(addressBookX + 68, addressBookY + i * 110 + 46,

  001ba	6a 00		 push	 0
  001bc	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _msg$[ebp]
  001c2	50		 push	 eax
  001c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  001c8	83 c0 2e	 add	 eax, 46			; 0000002eH
  001cb	6a 00		 push	 0
  001cd	03 c7		 add	 eax, edi
  001cf	6a 01		 push	 1
  001d1	50		 push	 eax
  001d2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  001d7	83 c0 44	 add	 eax, 68			; 00000044H
  001da	50		 push	 eax
  001db	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1597 : 						FONT_PRIO_FRONT, FONT_PAL_WHITE, msg, 0);
; 1598 : 					// ?????î¸î
; 1599 : 					if(addressBook[i].onlineFlag != 0)

  001e0	8b 85 f4 fe ff
	ff		 mov	 eax, DWORD PTR tv673[ebp]
  001e6	83 c4 48	 add	 esp, 72			; 00000048H
  001e9	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?addressBookY@@3HA ; addressBookY
  001ef	03 d7		 add	 edx, edi
  001f1	0f b7 00	 movzx	 eax, WORD PTR [eax]
  001f4	8b c8		 mov	 ecx, eax

; 1600 : 					{
; 1601 : 						StockFontBuffer(addressBookX + 130, addressBookY + i * 110 + 46,
; 1602 : 							FONT_PRIO_FRONT, FONT_PAL_WHITE, "çº¿ä¸", 0);
; 1603 : 					}
; 1604 : 					else
; 1605 : 					{
; 1606 : 						StockFontBuffer(addressBookX + 130, addressBookY + i * 110 + 46,
; 1607 : 							FONT_PRIO_FRONT, FONT_PAL_GRAY, "æ­çº¿", 0);
; 1608 : 					}
; 1609 : 					// ?î???î¸î
; 1610 : 					addressBookSelectStrItem[i*3+1] =

  001f6	b8 00 00 00 00	 mov	 eax, OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  001fb	89 8d f8 fe ff
	ff		 mov	 DWORD PTR tv668[ebp], ecx
  00201	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?addressBookX@@3HA ; addressBookX
  00207	81 c1 82 00 00
	00		 add	 ecx, 130		; 00000082H
  0020d	66 83 bd f8 fe
	ff ff 00	 cmp	 WORD PTR tv668[ebp], 0
  00215	6a 00		 push	 0
  00217	0f 45 85 e8 fe
	ff ff		 cmovne	 eax, DWORD PTR tv643[ebp]
  0021e	50		 push	 eax
  0021f	33 c0		 xor	 eax, eax
  00221	66 39 85 f8 fe
	ff ff		 cmp	 WORD PTR tv668[ebp], ax
  00228	0f 44 85 e4 fe
	ff ff		 cmove	 eax, DWORD PTR tv646[ebp]
  0022f	50		 push	 eax
  00230	6a 01		 push	 1
  00232	8d 42 2e	 lea	 eax, DWORD PTR [edx+46]
  00235	50		 push	 eax
  00236	51		 push	 ecx
  00237	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0023c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  00241	6a 02		 push	 2
  00243	68 00 00 00 00	 push	 OFFSET ??_C@_04HJGKOLIF@?a?j?c?a@
  00248	83 c0 40	 add	 eax, 64			; 00000040H
  0024b	6a 04		 push	 4
  0024d	03 c7		 add	 eax, edi
  0024f	6a 01		 push	 1
  00251	50		 push	 eax
  00252	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  00257	83 c0 44	 add	 eax, 68			; 00000044H
  0025a	50		 push	 eax
  0025b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer

; 1611 : 						StockFontBuffer(addressBookX + 68, addressBookY + i * 110 + 64,
; 1612 : 							FONT_PRIO_FRONT, FONT_PAL_YELLOW, "éä¿¡", 2);
; 1613 : 					// î¢î???î¸î
; 1614 : 					addressBookSelectStrItem[i*3+2] =

  00260	6a 02		 push	 2
  00262	89 43 fc	 mov	 DWORD PTR [ebx-4], eax
  00265	68 00 00 00 00	 push	 OFFSET ??_C@_04PNLNNJDO@?b?$KF?c?a@
  0026a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  0026f	83 c0 40	 add	 eax, 64			; 00000040H
  00272	6a 04		 push	 4
  00274	03 c7		 add	 eax, edi
  00276	6a 01		 push	 1
  00278	50		 push	 eax
  00279	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  0027e	83 c0 70	 add	 eax, 112		; 00000070H
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00287	83 c4 48	 add	 esp, 72			; 00000048H
  0028a	89 03		 mov	 DWORD PTR [ebx], eax

; 1615 : 						StockFontBuffer(addressBookX + 112, addressBookY + i * 110 + 64,
; 1616 : 							FONT_PRIO_FRONT, FONT_PAL_YELLOW, "æ¶ä¿¡", 2);
; 1617 : 					// ?????î¸î
; 1618 : 					addressBookSelectStrItem[i*3+3] =

  0028c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  00291	83 c0 40	 add	 eax, 64			; 00000040H
  00294	03 c7		 add	 eax, edi
  00296	6a 02		 push	 2
  00298	68 00 00 00 00	 push	 OFFSET ??_C@_03HBKILCPK@?$DP?p?$LG@
  0029d	6a 04		 push	 4
  0029f	6a 01		 push	 1
  002a1	50		 push	 eax
  002a2	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  002a7	05 9c 00 00 00	 add	 eax, 156		; 0000009cH
  002ac	50		 push	 eax
  002ad	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  002b2	83 c4 18	 add	 esp, 24			; 00000018H
  002b5	89 43 04	 mov	 DWORD PTR [ebx+4], eax

; 1619 : 						StockFontBuffer(addressBookX + 156, addressBookY + i * 110 + 64,
; 1620 : 							FONT_PRIO_FRONT, FONT_PAL_YELLOW, "å é¤", 2);
; 1621 : 				}

  002b8	eb 1a		 jmp	 SHORT $LN5@addressBoo
$LN17@addressBoo:

; 1622 : 				else
; 1623 : 				{
; 1624 : 					ptActAddressBookChar[i]->atr |= ACT_ATR_HIDE;

  002ba	83 c8 02	 or	 eax, 2
  002bd	89 82 a4 00 00
	00		 mov	 DWORD PTR [edx+164], eax

; 1625 : 	
; 1626 : 					ptActAddressBookChar[i]->anim_chr_no = 0;

  002c3	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  002ca	c7 80 44 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+324], 0
$LN5@addressBoo:

; 1575 : 	{
; 1576 : 		for(i = 0; i < MAX_ADR_BOOK_COUNT; i++)

  002d4	83 85 f4 fe ff
	ff 68		 add	 DWORD PTR tv673[ebp], 104 ; 00000068H
  002db	46		 inc	 esi
  002dc	83 c7 6e	 add	 edi, 110		; 0000006eH
  002df	83 c3 0c	 add	 ebx, 12			; 0000000cH
  002e2	83 fe 04	 cmp	 esi, 4
  002e5	0f 8c 05 fe ff
	ff		 jl	 $LL7@addressBoo

; 1627 : 				}
; 1628 : 			}
; 1629 : 		}
; 1630 : 
; 1631 : 		addressBookSelectStrItem[0] =

  002eb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookY@@3HA ; addressBookY
  002f0	6a 02		 push	 2
  002f2	68 00 00 00 00	 push	 OFFSET ??_C@_02HHFHKOHM@?$DP?$DP@
  002f7	6a 04		 push	 4
  002f9	05 60 01 00 00	 add	 eax, 352		; 00000160H
  002fe	6a 01		 push	 1
  00300	50		 push	 eax
  00301	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookX@@3HA ; addressBookX
  00306	83 c0 38	 add	 eax, 56			; 00000038H
  00309	50		 push	 eax
  0030a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0030f	83 c4 18	 add	 esp, 24			; 00000018H
  00312	a3 00 00 00 00	 mov	 DWORD PTR ?addressBookSelectStrItem@@3PAHA, eax
  00317	5f		 pop	 edi
  00318	5b		 pop	 ebx
$LN15@addressBoo:

; 1632 : 			StockFontBuffer(addressBookX + 56, addressBookY + 352,
; 1633 : 				FONT_PRIO_FRONT, FONT_PAL_YELLOW, "å³é­", 2);
; 1634 : 	}
; 1635 : }

  00319	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0031c	33 cd		 xor	 ecx, ebp
  0031e	5e		 pop	 esi
  0031f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00324	8b e5		 mov	 esp, ebp
  00326	5d		 pop	 ebp
  00327	c3		 ret	 0
?addressBookWindow1@@YAXXZ ENDP				; addressBookWindow1
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?TalkToNPC@@YAHXZ
_TEXT	SEGMENT
_tmpDir$ = -2060					; size = 4
_dir2$1 = -2056						; size = 2
_dest$2 = -2052						; size = 1024
_m$3 = -1028						; size = 1024
__$ArrayPad$ = -4					; size = 4
?TalkToNPC@@YAHXZ PROC					; TalkToNPC, COMDAT

; 1253 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 0c 08 00
	00		 sub	 esp, 2060		; 0000080cH
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1254 : 	float tmpDir;
; 1255 : 	float tmpX, tmpY;
; 1256 : 	int dir;
; 1257 : 	static unsigned int talkSendTime = 0;
; 1258 : 	if(windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMENU
; 1259 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMAIN
; 1260 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN)

  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  00018	56		 push	 esi
  00019	83 f8 06	 cmp	 eax, 6
  0001c	0f 84 ee 01 00
	00		 je	 $LN3@TalkToNPC
  00022	83 f8 07	 cmp	 eax, 7
  00025	0f 84 e5 01 00
	00		 je	 $LN3@TalkToNPC
  0002b	83 f8 08	 cmp	 eax, 8
  0002e	0f 84 dc 01 00
	00		 je	 $LN3@TalkToNPC

; 1261 : 		return FALSE;
; 1262 : 
; 1263 : 	if(nowVx != 0 || nowVy != 0)

  00034	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVx@@3MA
  0003c	0f 57 c9	 xorps	 xmm1, xmm1
  0003f	0f 2e c1	 ucomiss xmm0, xmm1
  00042	9f		 lahf
  00043	f6 c4 44	 test	 ah, 68			; 00000044H
  00046	0f 8a c4 01 00
	00		 jp	 $LN3@TalkToNPC
  0004c	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVy@@3MA
  00054	0f 2e c1	 ucomiss xmm0, xmm1
  00057	9f		 lahf
  00058	f6 c4 44	 test	 ah, 68			; 00000044H
  0005b	0f 8a af 01 00
	00		 jp	 $LN3@TalkToNPC

; 1264 : 		return FALSE;
; 1265 : 	if(ABS(nowGx - mouseMapGx) > 2
; 1266 : 	 || ABS(nowGy - mouseMapGy) > 2)

  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00066	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx
  0006c	2b c1		 sub	 eax, ecx
  0006e	99		 cdq
  0006f	33 c2		 xor	 eax, edx
  00071	2b c2		 sub	 eax, edx
  00073	83 f8 02	 cmp	 eax, 2
  00076	0f 8f 94 01 00
	00		 jg	 $LN3@TalkToNPC
  0007c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00081	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  00087	2b c6		 sub	 eax, esi
  00089	99		 cdq
  0008a	33 c2		 xor	 eax, edx
  0008c	2b c2		 sub	 eax, edx
  0008e	83 f8 02	 cmp	 eax, 2
  00091	0f 8f 79 01 00
	00		 jg	 $LN3@TalkToNPC

; 1267 : 		return FALSE;
; 1268 : 	if(!checkCharObjPoint(mouseMapGx, mouseMapGy, CHAROBJ_TYPE_NPC))

  00097	6a 01		 push	 1
  00099	56		 push	 esi
  0009a	51		 push	 ecx
  0009b	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a3	85 c0		 test	 eax, eax
  000a5	0f 84 65 01 00
	00		 je	 $LN3@TalkToNPC

; 1269 : 		return FALSE;
; 1270 : 	tmpX = (float)(mouseMapGx - nowGx);

  000ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx

; 1271 : 	tmpY = (float)(mouseMapGy - nowGy);
; 1272 : 	tmpDir = Atan(tmpX, tmpY) + 22.5F;

  000b0	83 ec 08	 sub	 esp, 8
  000b3	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  000b9	66 0f 6e c8	 movd	 xmm1, eax
  000bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  000c2	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  000c8	0f 5b c9	 cvtdq2ps xmm1, xmm1
  000cb	66 0f 6e c0	 movd	 xmm0, eax
  000cf	0f 5b c0	 cvtdq2ps xmm0, xmm0
  000d2	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  000d8	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000dd	e8 00 00 00 00	 call	 ?Atan@@YAMMM@Z		; Atan
  000e2	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41b40000

; 1273 : 	AdjustDir(&tmpDir);

  000e8	8d 85 f4 f7 ff
	ff		 lea	 eax, DWORD PTR _tmpDir$[ebp]
  000ee	50		 push	 eax
  000ef	d9 9d f4 f7 ff
	ff		 fstp	 DWORD PTR _tmpDir$[ebp]
  000f5	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 1274 : 	dir = (int)(tmpDir/45);

  000fa	f3 0f 10 85 f4
	f7 ff ff	 movss	 xmm0, DWORD PTR _tmpDir$[ebp]
  00102	83 c4 0c	 add	 esp, 12			; 0000000cH
  00105	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42340000
  0010d	f3 0f 2c f0	 cvttss2si esi, xmm0

; 1275 : 	if(talkSendTime+FIELD_BTN_PUSH_WAIT < TimeGetTime()){

  00111	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?talkSendTime@?1??TalkToNPC@@YAHXZ@4IA
  0011c	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  00122	3b c8		 cmp	 ecx, eax
  00124	0f 83 d2 00 00
	00		 jae	 $LN9@TalkToNPC

; 1276 : 		if(pc.ptAct->anim_ang != dir){

  0012a	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0012f	39 b0 54 01 00
	00		 cmp	 DWORD PTR [eax+340], esi
  00135	74 36		 je	 SHORT $LN10@TalkToNPC

; 1277 : 			char dir2[2];
; 1278 : 			setPcDir(dir);

  00137	56		 push	 esi
  00138	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 1279 : 
; 1280 : 			dir2[0] = cnvServDir(dir, 1);

  0013d	6a 01		 push	 1
  0013f	56		 push	 esi
  00140	e8 00 00 00 00	 call	 ?cnvServDir@@YADHH@Z	; cnvServDir
  00145	88 85 f8 f7 ff
	ff		 mov	 BYTE PTR _dir2$1[ebp], al

; 1281 : 			dir2[1] = '\0';
; 1282 : 
; 1283 : 			walkSendForServer(nowGx, nowGy, dir2);

  0014b	8d 85 f8 f7 ff
	ff		 lea	 eax, DWORD PTR _dir2$1[ebp]
  00151	50		 push	 eax
  00152	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  00158	c6 85 f9 f7 ff
	ff 00		 mov	 BYTE PTR _dir2$1[ebp+1], 0
  0015f	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00165	e8 00 00 00 00	 call	 ?walkSendForServer@@YAXHHPAD@Z ; walkSendForServer
  0016a	83 c4 18	 add	 esp, 24			; 00000018H
$LN10@TalkToNPC:

; 1284 : 		}
; 1285 : 		lookAtAround();

  0016d	e8 00 00 00 00	 call	 ?lookAtAround@@YAHXZ	; lookAtAround

; 1286 : 		//CC
; 1287 : 		//è¿éä¸åºè¯¥è¢«æ³¨é
; 1288 : 		//æ¯ç¹npcè¯´hi.
; 1289 : 
; 1290 : 		//
; 1291 : 		char dest[1024], m[1024];
; 1292 : 		extern STR_BUFFER chatRegistryStr[];
; 1293 : 
; 1294 : 		if(chatRegistryStr[7].cnt > 0)

  00172	80 3d 1f 09 00
	00 00		 cmp	 BYTE PTR ?chatRegistryStr@@3PAUSTR_BUFFER@@A+2335, 0
  00179	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02PCEFGMJL@hi@
  0017e	b8 18 08 00 00	 mov	 eax, OFFSET ?chatRegistryStr@@3PAUSTR_BUFFER@@A+2072
  00183	0f 46 c1	 cmovbe	 eax, ecx

; 1295 : 			makeEscapeString(chatRegistryStr[7].buffer, dest, sizeof(dest));
; 1296 : 		else
; 1297 : 			makeEscapeString("hi", dest, sizeof(dest));
; 1298 : 		sprintf(m, "P|%s", dest);

  00186	8d 8d fc f7 ff
	ff		 lea	 ecx, DWORD PTR _dest$2[ebp]
  0018c	68 00 04 00 00	 push	 1024			; 00000400H
  00191	51		 push	 ecx
  00192	50		 push	 eax
  00193	e8 00 00 00 00	 call	 ?makeEscapeString@@YAPADPAD0H@Z ; makeEscapeString
  00198	8d 85 fc f7 ff
	ff		 lea	 eax, DWORD PTR _dest$2[ebp]
  0019e	50		 push	 eax
  0019f	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _m$3[ebp]
  001a5	68 00 00 00 00	 push	 OFFSET ??_C@_04BKLDHGDD@P?$HM?$CFs@
  001aa	50		 push	 eax
  001ab	e8 00 00 00 00	 call	 _sprintf

; 1299 : 		if(bNewServer)

  001b0	0f b6 05 08 01
	00 00		 movzx	 eax, BYTE PTR ?MyChatBuffer@@3USTR_BUFFER@@A+264
  001b7	83 c4 18	 add	 esp, 24			; 00000018H
  001ba	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  001c1	ff 35 00 00 00
	00		 push	 DWORD PTR ?NowMaxVoice@@3HA ; NowMaxVoice
  001c7	50		 push	 eax
  001c8	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _m$3[ebp]
  001ce	50		 push	 eax
  001cf	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  001d5	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  001db	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  001e1	74 07		 je	 SHORT $LN13@TalkToNPC

; 1300 : 			lssproto_TK_send(sockfd, nowGx, nowGy, m, MyChatBuffer.color, NowMaxVoice);

  001e3	e8 00 00 00 00	 call	 ?lssproto_TK_send@@YAXHHHPADHH@Z ; lssproto_TK_send
  001e8	eb 05		 jmp	 SHORT $LN18@TalkToNPC
$LN13@TalkToNPC:

; 1301 : 		else
; 1302 : 			old_lssproto_TK_send(sockfd, nowGx, nowGy, m, MyChatBuffer.color, NowMaxVoice);

  001ea	e8 00 00 00 00	 call	 ?old_lssproto_TK_send@@YAXHHHPADHH@Z ; old_lssproto_TK_send
$LN18@TalkToNPC:

; 1303 : 		
; 1304 : 		talkSendTime = TimeGetTime();

  001ef	83 c4 18	 add	 esp, 24			; 00000018H
  001f2	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  001f7	a3 00 00 00 00	 mov	 DWORD PTR ?talkSendTime@?1??TalkToNPC@@YAHXZ@4IA, eax
$LN9@TalkToNPC:

; 1305 : 	}
; 1306 : 	return TRUE;

  001fc	b8 01 00 00 00	 mov	 eax, 1
  00201	5e		 pop	 esi

; 1307 : }

  00202	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00205	33 cd		 xor	 ecx, ebp
  00207	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020c	8b e5		 mov	 esp, ebp
  0020e	5d		 pop	 ebp
  0020f	c3		 ret	 0
$LN3@TalkToNPC:
  00210	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00213	33 c0		 xor	 eax, eax
  00215	33 cd		 xor	 ecx, ebp
  00217	5e		 pop	 esi
  00218	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0021d	8b e5		 mov	 esp, ebp
  0021f	5d		 pop	 ebp
  00220	c3		 ret	 0
?TalkToNPC@@YAHXZ ENDP					; TalkToNPC
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcAngel@@YAXXZ
_TEXT	SEGMENT
?delPcAngel@@YAXXZ PROC					; delPcAngel, COMDAT

; 670  : 	pc.status &= (~CHR_STATUS_ANGEL);

  00000	81 25 a4 00 00
	00 ff ff fe ff	 and	 DWORD PTR ?pc@@3UPC@@A+164, -65537 ; fffeffffH

; 671  : }

  0000a	c3		 ret	 0
?delPcAngel@@YAXXZ ENDP					; delPcAngel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcAngel@@YAXXZ
_TEXT	SEGMENT
?setPcAngel@@YAXXZ PROC					; setPcAngel, COMDAT

; 659  : 	int find = FALSE;
; 660  : 	for(int i =0; i <CHAR_EQUIPPLACENUM; i++) {
; 661  : 		if(pc.item[i].graNo == 35268)

  00000	33 c0		 xor	 eax, eax
  00002	b9 01 00 00 00	 mov	 ecx, 1
  00007	81 3d c8 00 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+200, 35268 ; 000089c4H
  00011	0f 94 c0	 sete	 al
  00014	81 3d 44 02 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+580, 35268 ; 000089c4H
  0001e	0f 44 c1	 cmove	 eax, ecx
  00021	81 3d c0 03 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+960, 35268 ; 000089c4H
  0002b	0f 44 c1	 cmove	 eax, ecx
  0002e	81 3d 3c 05 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+1340, 35268 ; 000089c4H
  00038	0f 44 c1	 cmove	 eax, ecx
  0003b	81 3d b8 06 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+1720, 35268 ; 000089c4H
  00045	0f 44 c1	 cmove	 eax, ecx
  00048	81 3d 34 08 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+2100, 35268 ; 000089c4H
  00052	0f 44 c1	 cmove	 eax, ecx
  00055	81 3d b0 09 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+2480, 35268 ; 000089c4H
  0005f	0f 44 c1	 cmove	 eax, ecx
  00062	81 3d 2c 0b 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+2860, 35268 ; 000089c4H
  0006c	0f 44 c1	 cmove	 eax, ecx
  0006f	81 3d a8 0c 00
	00 c4 89 00 00	 cmp	 DWORD PTR ?pc@@3UPC@@A+3240, 35268 ; 000089c4H
  00079	74 04		 je	 SHORT $LN30@setPcAngel

; 662  : 			find = TRUE;
; 663  : 	}
; 664  : 	if(find)

  0007b	85 c0		 test	 eax, eax
  0007d	74 0a		 je	 SHORT $LN6@setPcAngel
$LN30@setPcAngel:

; 665  : 		pc.status |= CHR_STATUS_ANGEL;

  0007f	81 0d a4 00 00
	00 00 00 01 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 65536 ; 00010000H
$LN6@setPcAngel:

; 666  : }

  00089	c3		 ret	 0
?setPcAngel@@YAXXZ ENDP					; setPcAngel
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?swap@@YAXPAD0@Z
_TEXT	SEGMENT
_tmp$ = -260						; size = 256
__$ArrayPad$ = -4					; size = 4
_a$ = 8							; size = 4
_b$ = 12						; size = 4
?swap@@YAXPAD0@Z PROC					; swap, COMDAT

; 84   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 04 01 00
	00		 sub	 esp, 260		; 00000104H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	8b 55 0c	 mov	 edx, DWORD PTR _b$[ebp]
  00016	56		 push	 esi
  00017	8b 75 08	 mov	 esi, DWORD PTR _a$[ebp]

; 85   : 	char tmp[256];
; 86   : 
; 87   : 	if(strlen(a) > 255 || strlen(b) > 255)

  0001a	8b ce		 mov	 ecx, esi
  0001c	57		 push	 edi
  0001d	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL17@swap:
  00020	8a 01		 mov	 al, BYTE PTR [ecx]
  00022	41		 inc	 ecx
  00023	84 c0		 test	 al, al
  00025	75 f9		 jne	 SHORT $LL17@swap
  00027	2b cf		 sub	 ecx, edi
  00029	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  0002f	77 5c		 ja	 SHORT $LN3@swap
  00031	8b ca		 mov	 ecx, edx
  00033	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
$LL18@swap:
  00036	8a 01		 mov	 al, BYTE PTR [ecx]
  00038	41		 inc	 ecx
  00039	84 c0		 test	 al, al
  0003b	75 f9		 jne	 SHORT $LL18@swap
  0003d	2b cf		 sub	 ecx, edi
  0003f	81 f9 ff 00 00
	00		 cmp	 ecx, 255		; 000000ffH
  00045	77 46		 ja	 SHORT $LN3@swap

; 88   : 		return;
; 89   : 
; 90   : 	strcpy(tmp, a);

  00047	8d bd fc fe ff
	ff		 lea	 edi, DWORD PTR _tmp$[ebp]
  0004d	8b ce		 mov	 ecx, esi
  0004f	2b fe		 sub	 edi, esi
$LL5@swap:
  00051	8a 01		 mov	 al, BYTE PTR [ecx]
  00053	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00056	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  0005a	84 c0		 test	 al, al
  0005c	75 f3		 jne	 SHORT $LL5@swap

; 91   : 	strcpy(a, b);

  0005e	8b ca		 mov	 ecx, edx
  00060	2b f2		 sub	 esi, edx
$LL6@swap:
  00062	8a 01		 mov	 al, BYTE PTR [ecx]
  00064	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00067	88 44 0e ff	 mov	 BYTE PTR [esi+ecx-1], al
  0006b	84 c0		 test	 al, al
  0006d	75 f3		 jne	 SHORT $LL6@swap

; 92   : 	strcpy(b, tmp);

  0006f	8d 8d fc fe ff
	ff		 lea	 ecx, DWORD PTR _tmp$[ebp]
  00075	8b c1		 mov	 eax, ecx
  00077	2b d0		 sub	 edx, eax
  00079	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@swap:
  00080	8a 01		 mov	 al, BYTE PTR [ecx]
  00082	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00085	88 44 0a ff	 mov	 BYTE PTR [edx+ecx-1], al
  00089	84 c0		 test	 al, al
  0008b	75 f3		 jne	 SHORT $LL7@swap
$LN3@swap:

; 93   : }

  0008d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00090	5f		 pop	 edi
  00091	33 cd		 xor	 ecx, ebp
  00093	5e		 pop	 esi
  00094	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00099	8b e5		 mov	 esp, ebp
  0009b	5d		 pop	 ebp
  0009c	c3		 ret	 0
?swap@@YAXPAD0@Z ENDP					; swap
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?CHAR_getMaxHaveGold@@YAHXZ
_TEXT	SEGMENT
?CHAR_getMaxHaveGold@@YAHXZ PROC			; CHAR_getMaxHaveGold, COMDAT

; 1639 : 	int MaxGold;
; 1640 : #ifdef _FIX_MAXGOLD				// WON ADD å¢å äººç©éé±ä¸é
; 1641 : 	int trans = pc.transmigration;

  00000	0f bf 05 f4 50
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+20724

; 1642 : 	switch(trans){

  00007	83 f8 04	 cmp	 eax, 4
  0000a	77 25		 ja	 SHORT $LN9@CHAR_getMa
  0000c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN11@CHAR_getMa[eax*4]
$LN4@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  00013	b8 40 42 0f 00	 mov	 eax, 1000000		; 000f4240H

; 1666 : }

  00018	c3		 ret	 0
$LN5@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  00019	b8 80 84 1e 00	 mov	 eax, 2000000		; 001e8480H

; 1666 : }

  0001e	c3		 ret	 0
$LN6@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  0001f	b8 40 4b 4c 00	 mov	 eax, 5000000		; 004c4b40H

; 1666 : }

  00024	c3		 ret	 0
$LN7@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  00025	b8 80 96 98 00	 mov	 eax, 10000000		; 00989680H

; 1666 : }

  0002a	c3		 ret	 0
$LN8@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  0002b	b8 80 f0 fa 02	 mov	 eax, 50000000		; 02faf080H

; 1666 : }

  00030	c3		 ret	 0
$LN9@CHAR_getMa:

; 1643 : 		case 0:
; 1644 : 			MaxGold = 1000000;
; 1645 : 			break;
; 1646 : 		case 1:
; 1647 : 			MaxGold = 2000000;
; 1648 : 			break;
; 1649 : 		case 2:
; 1650 : 			MaxGold = 5000000;
; 1651 : 			break;
; 1652 : 		case 3:
; 1653 : 			MaxGold = 10000000;
; 1654 : 			break;
; 1655 : 		case 4:
; 1656 : 			MaxGold = 50000000;
; 1657 : 			break;
; 1658 : 		default:
; 1659 : 			MaxGold = 100000000;
; 1660 : 			break;
; 1661 : 	}
; 1662 : #else
; 1663 : 	MaxGold = MAX_GOLD;
; 1664 : #endif
; 1665 : 	return MaxGold;

  00031	b8 00 e1 f5 05	 mov	 eax, 100000000		; 05f5e100H

; 1666 : }

  00036	c3		 ret	 0
  00037	90		 npad	 1
$LN11@CHAR_getMa:
  00038	00 00 00 00	 DD	 $LN4@CHAR_getMa
  0003c	00 00 00 00	 DD	 $LN5@CHAR_getMa
  00040	00 00 00 00	 DD	 $LN6@CHAR_getMa
  00044	00 00 00 00	 DD	 $LN7@CHAR_getMa
  00048	00 00 00 00	 DD	 $LN8@CHAR_getMa
?CHAR_getMaxHaveGold@@YAHXZ ENDP			; CHAR_getMaxHaveGold
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?addressBookProc@@YAXXZ
_TEXT	SEGMENT
?addressBookProc@@YAXXZ PROC				; addressBookProc, COMDAT

; 1481 : 	int i;
; 1482 : 	int no;
; 1483 : 
; 1484 : 	// ??????????
; 1485 : 	if(addressBookFlag
; 1486 : 	 && ptActAddressBookWin == NULL)

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?addressBookFlag@@3HA, 0 ; addressBookFlag
  00007	56		 push	 esi
  00008	0f 84 e1 00 00
	00		 je	 $LN26@addressBoo
  0000e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A, 0 ; ptActAddressBookWin
  00015	0f 85 ce 00 00
	00		 jne	 $LN25@addressBoo

; 1487 : 	{
; 1488 : 		// ??????????????
; 1489 : 		ptActAddressBookWin = MakeWindowDisp(addressBookX, addressBookY, 4, 8, NULL, 1);

  0001b	53		 push	 ebx
  0001c	57		 push	 edi
  0001d	6a 01		 push	 1
  0001f	6a 00		 push	 0
  00021	6a 08		 push	 8
  00023	6a 04		 push	 4
  00025	ff 35 00 00 00
	00		 push	 DWORD PTR ?addressBookY@@3HA ; addressBookY
  0002b	ff 35 00 00 00
	00		 push	 DWORD PTR ?addressBookX@@3HA ; addressBookX
  00031	e8 00 00 00 00	 call	 ?MakeWindowDisp@@YAPAUaction@@HHHHHH@Z ; MakeWindowDisp
  00036	83 c4 18	 add	 esp, 24			; 00000018H
  00039	a3 00 00 00 00	 mov	 DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A, eax ; ptActAddressBookWin
  0003e	33 f6		 xor	 esi, esi
  00040	33 ff		 xor	 edi, edi
$LL4@addressBoo:

; 1492 : 		{
; 1493 : 			no = addressBookPage*MAX_ADR_BOOK_COUNT+i;

  00042	a1 00 00 00 00	 mov	 eax, DWORD PTR ?addressBookPage@@3HA ; addressBookPage

; 1494 : 
; 1495 : 			ptActAddressBookChar[i] = GetAction(PRIO_CHR, 0);

  00047	6a 00		 push	 0
  00049	6a 01		 push	 1
  0004b	8d 1c 86	 lea	 ebx, DWORD PTR [esi+eax*4]
  0004e	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00053	83 c4 08	 add	 esp, 8
  00056	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4], eax

; 1496 : 			if(ptActAddressBookChar[i] != NULL)

  0005d	85 c0		 test	 eax, eax
  0005f	74 77		 je	 SHORT $LN2@addressBoo

; 1497 : 			{
; 1498 : 				ptActAddressBookChar[i]->anim_chr_no = addressBook[no].graNo;

  00061	6b cb 68	 imul	 ecx, ebx, 104

; 1499 : 				ptActAddressBookChar[i]->atr = ACT_ATR_HIDE;
; 1500 : 				ptActAddressBookChar[i]->anim_no = ANIM_STAND;
; 1501 : 				ptActAddressBookChar[i]->dispPrio = DISP_PRIO_ITEM;
; 1502 : 				ptActAddressBookChar[i]->x = addressBookX + 40;
; 1503 : 				ptActAddressBookChar[i]->y = addressBookY + i * 110 + 80;
; 1504 : 				pattern(ptActAddressBookChar[i], ANM_NOMAL_SPD, ANM_LOOP);

  00064	6a 00		 push	 0
  00066	6a 00		 push	 0
  00068	8b 89 10 00 00
	00		 mov	 ecx, DWORD PTR ?addressBook@@3PAUADDRESS_BOOK@@A[ecx+16]
  0006e	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx
  00074	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  0007b	c7 80 a4 00 00
	00 02 00 00 00	 mov	 DWORD PTR [eax+164], 2
  00085	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  0008c	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3
  00096	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  0009d	c6 40 15 6c	 mov	 BYTE PTR [eax+21], 108	; 0000006cH
  000a1	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  000a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?addressBookX@@3HA ; addressBookX
  000ae	83 c1 28	 add	 ecx, 40			; 00000028H
  000b1	89 48 18	 mov	 DWORD PTR [eax+24], ecx
  000b4	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?addressBookY@@3HA ; addressBookY
  000ba	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  000c1	83 c1 50	 add	 ecx, 80			; 00000050H
  000c4	03 cf		 add	 ecx, edi
  000c6	89 48 1c	 mov	 DWORD PTR [eax+28], ecx
  000c9	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A[esi*4]
  000d0	e8 00 00 00 00	 call	 ?pattern@@YAHPAUaction@@HH@Z ; pattern
  000d5	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN2@addressBoo:

; 1490 : 		// ?î?????????
; 1491 : 		for(i = 0; i < MAX_ADR_BOOK_COUNT; i++)

  000d8	46		 inc	 esi
  000d9	83 c7 6e	 add	 edi, 110		; 0000006eH
  000dc	83 fe 04	 cmp	 esi, 4
  000df	0f 8c 5d ff ff
	ff		 jl	 $LL4@addressBoo

; 1505 : 			}
; 1506 : 		}
; 1507 : 	}

  000e5	5f		 pop	 edi
  000e6	5b		 pop	 ebx
  000e7	5e		 pop	 esi

; 1530 : 	}
; 1531 : }

  000e8	c3		 ret	 0
$LN25@addressBoo:
  000e9	5e		 pop	 esi

; 1521 : 			}
; 1522 : 		}
; 1523 : 	}
; 1524 : 	// ???????î¸î
; 1525 : 	else
; 1526 : 	if(addressBookFlag
; 1527 : 	 && ptActAddressBookWin != NULL)
; 1528 : 	{
; 1529 : 		addressBookWindow1();

  000ea	e9 00 00 00 00	 jmp	 ?addressBookWindow1@@YAXXZ ; addressBookWindow1
$LN26@addressBoo:

; 1508 : 	// ????????î¼??
; 1509 : 	else
; 1510 : 	if(!addressBookFlag
; 1511 : 	 && ptActAddressBookWin != NULL)

  000ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A ; ptActAddressBookWin
  000f4	85 c0		 test	 eax, eax
  000f6	74 38		 je	 SHORT $LN14@addressBoo

; 1512 : 	{
; 1513 : 		DeathAction(ptActAddressBookWin);

  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000fe	83 c4 04	 add	 esp, 4

; 1514 : 		ptActAddressBookWin = NULL;

  00101	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A, 0 ; ptActAddressBookWin
  0010b	be 00 00 00 00	 mov	 esi, OFFSET ?ptActAddressBookChar@@3PAPAUaction@@A ; ptActAddressBookChar
$LL7@addressBoo:

; 1516 : 		{
; 1517 : 			if(ptActAddressBookChar[i] != NULL)

  00110	8b 06		 mov	 eax, DWORD PTR [esi]
  00112	85 c0		 test	 eax, eax
  00114	74 0f		 je	 SHORT $LN5@addressBoo

; 1518 : 			{
; 1519 : 				DeathAction(ptActAddressBookChar[i]);

  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0011c	83 c4 04	 add	 esp, 4

; 1520 : 				ptActAddressBookChar[i] = NULL;

  0011f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN5@addressBoo:

; 1515 : 		for(i = 0; i < MAX_ADR_BOOK_COUNT; i++)

  00125	83 c6 04	 add	 esi, 4
  00128	81 fe 10 00 00
	00		 cmp	 esi, OFFSET ?ptActAddressBookChar@@3PAPAUaction@@A+16
  0012e	7c e0		 jl	 SHORT $LL7@addressBoo
$LN14@addressBoo:
  00130	5e		 pop	 esi

; 1530 : 	}
; 1531 : }

  00131	c3		 ret	 0
?addressBookProc@@YAXXZ ENDP				; addressBookProc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?initAddressBook@@YAXXZ
_TEXT	SEGMENT
?initAddressBook@@YAXXZ PROC				; initAddressBook, COMDAT

; 1461 : {

  00000	0f 57 c0	 xorps	 xmm0, xmm0

; 1462 : 	int i;
; 1463 : 
; 1464 : 	addressBookFlag = FALSE;

  00003	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?addressBookFlag@@3HA, 0 ; addressBookFlag

; 1465 : 	ptActAddressBookWin = NULL;
; 1466 : 	memset(&ptActAddressBookChar, 0, sizeof(ptActAddressBookChar));

  0000d	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?ptActAddressBookChar@@3PAPAUaction@@A, xmm0
  00014	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActAddressBookWin@@3PAUaction@@A, 0 ; ptActAddressBookWin
  0001e	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@fffffffefffffffefffffffefffffffe

; 1467 : 	addressBookPage = 0;

  00025	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?addressBookPage@@3HA, 0 ; addressBookPage
  0002f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?addressBookSelectStrItem@@3PAHA, xmm0
  00036	c7 05 30 00 00
	00 fe ff ff ff	 mov	 DWORD PTR ?addressBookSelectStrItem@@3PAHA+48, -2 ; fffffffeH
  00040	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?addressBookSelectStrItem@@3PAHA+16, xmm0

; 1468 : 	for(i = 0; i < sizeof(addressBookSelectStrItem)/sizeof(int); i++)
; 1469 : 	{
; 1470 : 		addressBookSelectStrItem[i] = -2;
; 1471 : 	}
; 1472 : 
; 1473 : 	addressBookSendMsgFlag = FALSE;

  00047	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?addressBookSendMsgFlag@@3HA, 0 ; addressBookSendMsgFlag
  00051	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?addressBookSelectStrItem@@3PAHA+32, xmm0

; 1474 : 	ptActAddressBookSendMsgWin = NULL;

  00058	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ptActAddressBookSendMsgWin@@3PAUaction@@A, 0 ; ptActAddressBookSendMsgWin

; 1475 : }

  00062	c3		 ret	 0
?initAddressBook@@YAXXZ ENDP				; initAddressBook
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?lookAtAround@@YAHXZ
_TEXT	SEGMENT
_tmpDir$ = -4						; size = 4
?lookAtAround@@YAHXZ PROC				; lookAtAround, COMDAT

; 1387 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1388 : 	float tmpDir;
; 1389 : 	float tmpX, tmpY;
; 1390 : 	int dir;
; 1391 : 	static unsigned int lSendTime = 0;
; 1392 : 
; 1393 : 	// ?îº???????????????????????
; 1394 : 	if(windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMENU
; 1395 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMAIN
; 1396 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  00009	56		 push	 esi
  0000a	83 f8 06	 cmp	 eax, 6
  0000d	0f 84 20 01 00
	00		 je	 $LN3@lookAtArou
  00013	83 f8 07	 cmp	 eax, 7
  00016	0f 84 17 01 00
	00		 je	 $LN3@lookAtArou
  0001c	83 f8 08	 cmp	 eax, 8
  0001f	0f 84 0e 01 00
	00		 je	 $LN3@lookAtArou

; 1398 : 
; 1399 : 	// î±î¶î?î±????î??????????????
; 1400 : 	if(ABS(nowGx - mouseMapGx) > 2
; 1401 : 	 || ABS(nowGy - mouseMapGy) > 2)

  00025	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0002a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx
  00030	2b c1		 sub	 eax, ecx
  00032	99		 cdq
  00033	33 c2		 xor	 eax, edx
  00035	2b c2		 sub	 eax, edx
  00037	83 f8 02	 cmp	 eax, 2
  0003a	0f 8f f3 00 00
	00		 jg	 $LN3@lookAtArou
  00040	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00045	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  0004b	2b c6		 sub	 eax, esi
  0004d	99		 cdq
  0004e	33 c2		 xor	 eax, edx
  00050	2b c2		 sub	 eax, edx
  00052	83 f8 02	 cmp	 eax, 2
  00055	0f 8f d8 00 00
	00		 jg	 $LN3@lookAtArou

; 1402 : 		return FALSE;
; 1403 : 
; 1404 : 	// î±î¶î??????î???????????
; 1405 : 	if(!checkCharObjPoint(mouseMapGx, mouseMapGy, CHAROBJ_TYPE_LOOKAT))

  0005b	6a 10		 push	 16			; 00000010H
  0005d	56		 push	 esi
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	85 c0		 test	 eax, eax
  00069	0f 84 c4 00 00
	00		 je	 $LN3@lookAtArou

; 1406 : 		return FALSE;
; 1407 : 
; 1408 : 	// ???????îµ??î??
; 1409 : 	tmpX = (float)(mouseMapGx - nowGx);

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx
  00074	0f 57 c0	 xorps	 xmm0, xmm0
  00077	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0007d	66 0f 6e d0	 movd	 xmm2, eax

; 1410 : 	tmpY = (float)(mouseMapGy - nowGy);

  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  00086	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  0008c	0f 5b d2	 cvtdq2ps xmm2, xmm2
  0008f	66 0f 6e c8	 movd	 xmm1, eax

; 1411 : 	if(tmpX == 0 && tmpY == 0)	// ?îî?î¯?îî¤?????????î??

  00093	0f 2e d0	 ucomiss xmm2, xmm0
  00096	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00099	9f		 lahf
  0009a	f6 c4 44	 test	 ah, 68			; 00000044H
  0009d	7a 0d		 jp	 SHORT $LN7@lookAtArou
  0009f	0f 2e c8	 ucomiss xmm1, xmm0
  000a2	9f		 lahf
  000a3	f6 c4 44	 test	 ah, 68			; 00000044H
  000a6	0f 8b 87 00 00
	00		 jnp	 $LN3@lookAtArou
$LN7@lookAtArou:

; 1412 : 		return FALSE;
; 1413 : 
; 1414 : 	tmpDir = Atan(tmpX, tmpY) + 22.5F - 45.0F*3;

  000ac	83 ec 08	 sub	 esp, 8
  000af	f3 0f 11 4c 24
	04		 movss	 DWORD PTR [esp+4], xmm1
  000b5	f3 0f 11 14 24	 movss	 DWORD PTR [esp], xmm2
  000ba	e8 00 00 00 00	 call	 ?Atan@@YAMMM@Z		; Atan
  000bf	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41b40000

; 1415 : 	AdjustDir(&tmpDir);

  000c5	8d 45 fc	 lea	 eax, DWORD PTR _tmpDir$[ebp]
  000c8	50		 push	 eax
  000c9	d8 25 00 00 00
	00		 fsub	 DWORD PTR __real@43070000
  000cf	d9 5d fc	 fstp	 DWORD PTR _tmpDir$[ebp]
  000d2	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 1416 : 	dir = (int)(tmpDir/45);

  000d7	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _tmpDir$[ebp]
  000dc	83 c4 0c	 add	 esp, 12			; 0000000cH
  000df	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42340000
  000e7	f3 0f 2c f0	 cvttss2si esi, xmm0

; 1417 : 
; 1418 : 	// ?îº?î
; 1419 : 	if(lSendTime+FIELD_BTN_PUSH_WAIT < TimeGetTime())

  000eb	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  000f0	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lSendTime@?1??lookAtAround@@YAHXZ@4IA
  000f6	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  000fc	3b c8		 cmp	 ecx, eax
  000fe	73 29		 jae	 SHORT $LN8@lookAtArou

; 1420 : 	{
; 1421 : 		// ??????
; 1422 : 		if(bNewServer)

  00100	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  00107	56		 push	 esi
  00108	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  0010e	74 07		 je	 SHORT $LN9@lookAtArou

; 1423 : 			lssproto_L_send(sockfd, dir);

  00110	e8 00 00 00 00	 call	 ?lssproto_L_send@@YAXHH@Z ; lssproto_L_send
  00115	eb 05		 jmp	 SHORT $LN12@lookAtArou
$LN9@lookAtArou:

; 1424 : 		else
; 1425 : 			old_lssproto_L_send(sockfd, dir);

  00117	e8 00 00 00 00	 call	 ?old_lssproto_L_send@@YAXHH@Z ; old_lssproto_L_send
$LN12@lookAtArou:

; 1426 : 		lSendTime = TimeGetTime();

  0011c	83 c4 08	 add	 esp, 8
  0011f	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00124	a3 00 00 00 00	 mov	 DWORD PTR ?lSendTime@?1??lookAtAround@@YAHXZ@4IA, eax
$LN8@lookAtArou:

; 1427 : 	}
; 1428 : 
; 1429 : 	return TRUE;

  00129	b8 01 00 00 00	 mov	 eax, 1
  0012e	5e		 pop	 esi

; 1430 : }

  0012f	8b e5		 mov	 esp, ebp
  00131	5d		 pop	 ebp
  00132	c3		 ret	 0
$LN3@lookAtArou:

; 1397 : 		return FALSE;

  00133	33 c0		 xor	 eax, eax
  00135	5e		 pop	 esi

; 1430 : }

  00136	8b e5		 mov	 esp, ebp
  00138	5d		 pop	 ebp
  00139	c3		 ret	 0
?lookAtAround@@YAHXZ ENDP				; lookAtAround
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?swapItem@@YAXHH@Z
_TEXT	SEGMENT
_from$ = 8						; size = 4
_to$ = 12						; size = 4
?swapItem@@YAXHH@Z PROC					; swapItem, COMDAT

; 1313 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1314 : 	if(from < 0 || to < 0)

  00003	8b 45 08	 mov	 eax, DWORD PTR _from$[ebp]
  00006	85 c0		 test	 eax, eax
  00008	0f 88 6e 01 00
	00		 js	 $LN3@swapItem
  0000e	8b 4d 0c	 mov	 ecx, DWORD PTR _to$[ebp]
  00011	85 c9		 test	 ecx, ecx
  00013	0f 88 63 01 00
	00		 js	 $LN3@swapItem

; 1315 : 		return;
; 1316 : //	swapShort(&pc.item[from].useFlag, &pc.item[to].useFlag);
; 1317 : 	swap(pc.item[from].useFlag, pc.item[to].useFlag);

  00019	56		 push	 esi
  0001a	69 f0 7c 01 00
	00		 imul	 esi, eax, 380
  00020	57		 push	 edi
  00021	69 f9 7c 01 00
	00		 imul	 edi, ecx, 380

; 78   : 	TTemp = T1;

  00027	0f b7 8e a0 01
	00 00		 movzx	 ecx, WORD PTR ?pc@@3UPC@@A[esi+416]

; 79   : 	T1 = T2;

  0002e	0f b7 87 a0 01
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A[edi+416]
  00035	66 89 86 a0 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[esi+416], ax

; 1318 : //	swapString(pc.item[from].name, pc.item[to].name);
; 1319 : 	swap(pc.item[from].name, pc.item[to].name);

  0003c	8d 87 aa 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[edi+426]
  00042	50		 push	 eax
  00043	8d 86 aa 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[esi+426]

; 80   : 	T2 = TTemp;

  00049	66 89 8f a0 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[edi+416], cx

; 1318 : //	swapString(pc.item[from].name, pc.item[to].name);
; 1319 : 	swap(pc.item[from].name, pc.item[to].name);

  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?swap@@YAXPAD0@Z	; swap

; 1320 : //	swapString(pc.item[from].name2, pc.item[to].name2);
; 1321 : 	swap(pc.item[from].name2, pc.item[to].name2);

  00056	8d 87 c7 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[edi+455]
  0005c	50		 push	 eax
  0005d	8d 86 c7 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[esi+455]
  00063	50		 push	 eax
  00064	e8 00 00 00 00	 call	 ?swap@@YAXPAD0@Z	; swap

; 1322 : //	swapString(pc.item[from].memo, pc.item[to].memo);
; 1323 : 	swap(pc.item[from].memo, pc.item[to].memo);

  00069	8d 87 d8 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[edi+472]
  0006f	50		 push	 eax
  00070	8d 86 d8 01 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[esi+472]
  00076	50		 push	 eax
  00077	e8 00 00 00 00	 call	 ?swap@@YAXPAD0@Z	; swap

; 78   : 	TTemp = T1;

  0007c	8b 8e c4 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A[esi+196]

; 79   : 	T1 = T2;

  00082	8b 87 c4 00 00
	00		 mov	 eax, DWORD PTR ?pc@@3UPC@@A[edi+196]
  00088	89 86 c4 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[esi+196], eax

; 80   : 	T2 = TTemp;

  0008e	89 8f c4 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[edi+196], ecx

; 78   : 	TTemp = T1;

  00094	8b 8e c8 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A[esi+200]

; 79   : 	T1 = T2;

  0009a	8b 87 c8 00 00
	00		 mov	 eax, DWORD PTR ?pc@@3UPC@@A[edi+200]
  000a0	89 86 c8 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[esi+200], eax

; 80   : 	T2 = TTemp;

  000a6	89 8f c8 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[edi+200], ecx

; 78   : 	TTemp = T1;

  000ac	8b 8e cc 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A[esi+204]

; 79   : 	T1 = T2;

  000b2	8b 87 cc 00 00
	00		 mov	 eax, DWORD PTR ?pc@@3UPC@@A[edi+204]
  000b8	89 86 cc 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[esi+204], eax

; 80   : 	T2 = TTemp;

  000be	89 8f cc 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[edi+204], ecx

; 79   : 	T1 = T2;

  000c4	0f b7 87 a2 01
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A[edi+418]
  000cb	0f b7 8e a2 01
	00 00		 movzx	 ecx, WORD PTR ?pc@@3UPC@@A[esi+418]
  000d2	66 89 86 a2 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[esi+418], ax

; 80   : 	T2 = TTemp;

  000d9	66 89 8f a2 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[edi+418], cx

; 79   : 	T1 = T2;

  000e0	0f b7 87 a4 01
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A[edi+420]
  000e7	0f b7 8e a4 01
	00 00		 movzx	 ecx, WORD PTR ?pc@@3UPC@@A[esi+420]
  000ee	66 89 86 a4 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[esi+420], ax

; 80   : 	T2 = TTemp;

  000f5	66 89 8f a4 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[edi+420], cx

; 79   : 	T1 = T2;

  000fc	0f b7 87 a6 01
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A[edi+422]
  00103	0f b7 8e a6 01
	00 00		 movzx	 ecx, WORD PTR ?pc@@3UPC@@A[esi+422]
  0010a	66 89 86 a6 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[esi+422], ax

; 80   : 	T2 = TTemp;

  00111	66 89 8f a6 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[edi+422], cx

; 79   : 	T1 = T2;

  00118	0f b7 87 a8 01
	00 00		 movzx	 eax, WORD PTR ?pc@@3UPC@@A[edi+424]
  0011f	0f b7 8e a8 01
	00 00		 movzx	 ecx, WORD PTR ?pc@@3UPC@@A[esi+424]
  00126	66 89 86 a8 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[esi+424], ax

; 1324 : //	swapInteger(&pc.item[from].color, &pc.item[to].color);
; 1325 : 	swap(pc.item[from].color, pc.item[to].color);
; 1326 : //	swapInteger(&pc.item[from].graNo, &pc.item[to].graNo);
; 1327 : 	swap(pc.item[from].graNo, pc.item[to].graNo);
; 1328 : //	swapInteger(&pc.item[from].level, &pc.item[to].level);
; 1329 : 	swap(pc.item[from].level, pc.item[to].level);
; 1330 : //	swapShort(&pc.item[from].field, &pc.item[to].field);
; 1331 : 	swap(pc.item[from].field, pc.item[to].field);
; 1332 : //	swapShort(&pc.item[from].target, &pc.item[to].target);
; 1333 : 	swap(pc.item[from].target, pc.item[to].target);
; 1334 : //	swapShort(&pc.item[from].deadTargetFlag, &pc.item[to].deadTargetFlag);
; 1335 : 	swap(pc.item[from].deadTargetFlag, pc.item[to].deadTargetFlag);
; 1336 : //	swapShort(&pc.item[from].sendFlag, &pc.item[to].sendFlag);
; 1337 : 	swap(pc.item[from].sendFlag, pc.item[to].sendFlag);
; 1338 : //	swapString(pc.item[from].damage, pc.item[to].damage);
; 1339 : 	swap(pc.item[from].damage, pc.item[to].damage);

  0012d	8d 87 2d 02 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[edi+557]
  00133	50		 push	 eax
  00134	8d 86 2d 02 00
	00		 lea	 eax, DWORD PTR ?pc@@3UPC@@A[esi+557]

; 80   : 	T2 = TTemp;

  0013a	66 89 8f a8 01
	00 00		 mov	 WORD PTR ?pc@@3UPC@@A[edi+424], cx

; 1324 : //	swapInteger(&pc.item[from].color, &pc.item[to].color);
; 1325 : 	swap(pc.item[from].color, pc.item[to].color);
; 1326 : //	swapInteger(&pc.item[from].graNo, &pc.item[to].graNo);
; 1327 : 	swap(pc.item[from].graNo, pc.item[to].graNo);
; 1328 : //	swapInteger(&pc.item[from].level, &pc.item[to].level);
; 1329 : 	swap(pc.item[from].level, pc.item[to].level);
; 1330 : //	swapShort(&pc.item[from].field, &pc.item[to].field);
; 1331 : 	swap(pc.item[from].field, pc.item[to].field);
; 1332 : //	swapShort(&pc.item[from].target, &pc.item[to].target);
; 1333 : 	swap(pc.item[from].target, pc.item[to].target);
; 1334 : //	swapShort(&pc.item[from].deadTargetFlag, &pc.item[to].deadTargetFlag);
; 1335 : 	swap(pc.item[from].deadTargetFlag, pc.item[to].deadTargetFlag);
; 1336 : //	swapShort(&pc.item[from].sendFlag, &pc.item[to].sendFlag);
; 1337 : 	swap(pc.item[from].sendFlag, pc.item[to].sendFlag);
; 1338 : //	swapString(pc.item[from].damage, pc.item[to].damage);
; 1339 : 	swap(pc.item[from].damage, pc.item[to].damage);

  00141	50		 push	 eax
  00142	e8 00 00 00 00	 call	 ?swap@@YAXPAD0@Z	; swap

; 78   : 	TTemp = T1;

  00147	8b 8e d0 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A[esi+208]

; 1324 : //	swapInteger(&pc.item[from].color, &pc.item[to].color);
; 1325 : 	swap(pc.item[from].color, pc.item[to].color);
; 1326 : //	swapInteger(&pc.item[from].graNo, &pc.item[to].graNo);
; 1327 : 	swap(pc.item[from].graNo, pc.item[to].graNo);
; 1328 : //	swapInteger(&pc.item[from].level, &pc.item[to].level);
; 1329 : 	swap(pc.item[from].level, pc.item[to].level);
; 1330 : //	swapShort(&pc.item[from].field, &pc.item[to].field);
; 1331 : 	swap(pc.item[from].field, pc.item[to].field);
; 1332 : //	swapShort(&pc.item[from].target, &pc.item[to].target);
; 1333 : 	swap(pc.item[from].target, pc.item[to].target);
; 1334 : //	swapShort(&pc.item[from].deadTargetFlag, &pc.item[to].deadTargetFlag);
; 1335 : 	swap(pc.item[from].deadTargetFlag, pc.item[to].deadTargetFlag);
; 1336 : //	swapShort(&pc.item[from].sendFlag, &pc.item[to].sendFlag);
; 1337 : 	swap(pc.item[from].sendFlag, pc.item[to].sendFlag);
; 1338 : //	swapString(pc.item[from].damage, pc.item[to].damage);
; 1339 : 	swap(pc.item[from].damage, pc.item[to].damage);

  0014d	83 c4 20	 add	 esp, 32			; 00000020H

; 79   : 	T1 = T2;

  00150	8b 87 d0 00 00
	00		 mov	 eax, DWORD PTR ?pc@@3UPC@@A[edi+208]
  00156	89 86 d0 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[esi+208], eax

; 80   : 	T2 = TTemp;

  0015c	89 8f d0 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A[edi+208], ecx

; 79   : 	T1 = T2;

  00162	8a 87 3d 02 00
	00		 mov	 al, BYTE PTR ?pc@@3UPC@@A[edi+573]
  00168	8a 8e 3d 02 00
	00		 mov	 cl, BYTE PTR ?pc@@3UPC@@A[esi+573]
  0016e	88 86 3d 02 00
	00		 mov	 BYTE PTR ?pc@@3UPC@@A[esi+573], al

; 80   : 	T2 = TTemp;

  00174	88 8f 3d 02 00
	00		 mov	 BYTE PTR ?pc@@3UPC@@A[edi+573], cl
  0017a	5f		 pop	 edi
  0017b	5e		 pop	 esi
$LN3@swapItem:

; 1340 : #ifdef _ITEM_PILENUMS
; 1341 : //	swapInteger(&pc.item[from].pile, &pc.item[to].pile);
; 1342 : 	swap(pc.item[from].pile, pc.item[to].pile);
; 1343 : #endif
; 1344 : #ifdef _PET_ITEM
; 1345 : 	swap(pc.item[from].type, pc.item[to].type);
; 1346 : #endif
; 1347 : 
; 1348 : }

  0017c	5d		 pop	 ebp
  0017d	c3		 ret	 0
?swapItem@@YAXHH@Z ENDP					; swapItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?getItem@@YAXXZ
_TEXT	SEGMENT
_tmpDir$ = -4						; size = 4
?getItem@@YAXXZ PROC					; getItem, COMDAT

; 1207 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1208 : 	float tmpDir;
; 1209 : 	float tmpX, tmpY;
; 1210 : 	int dir;
; 1211 : 	static unsigned int piSendTime = 0;
; 1212 : 
; 1213 : 	// ?îº???????????????î³????????
; 1214 : 	if(windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMENU
; 1215 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_ITEMSHOPMAIN
; 1216 : 	 || windowTypeWN == WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN)

  00004	a1 00 00 00 00	 mov	 eax, DWORD PTR ?windowTypeWN@@3HA ; windowTypeWN
  00009	83 f8 06	 cmp	 eax, 6
  0000c	0f 84 1b 01 00
	00		 je	 $LN5@getItem
  00012	83 f8 07	 cmp	 eax, 7
  00015	0f 84 12 01 00
	00		 je	 $LN5@getItem
  0001b	83 f8 08	 cmp	 eax, 8
  0001e	0f 84 09 01 00
	00		 je	 $LN5@getItem

; 1217 : 		return;
; 1218 : 
; 1219 : 	// î±î¶î?î±????î??????????????
; 1220 : 	if(ABS(nowGx - mouseMapGx) > 1
; 1221 : 	 || ABS(nowGy - mouseMapGy) > 1)

  00024	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  00029	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx
  0002f	2b c1		 sub	 eax, ecx
  00031	99		 cdq
  00032	33 c2		 xor	 eax, edx
  00034	2b c2		 sub	 eax, edx
  00036	83 f8 01	 cmp	 eax, 1
  00039	0f 8f ee 00 00
	00		 jg	 $LN5@getItem
  0003f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  00044	56		 push	 esi
  00045	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  0004b	2b c6		 sub	 eax, esi
  0004d	99		 cdq
  0004e	33 c2		 xor	 eax, edx
  00050	2b c2		 sub	 eax, edx
  00052	83 f8 01	 cmp	 eax, 1
  00055	0f 8f d1 00 00
	00		 jg	 $LN11@getItem

; 1222 : 		return;
; 1223 : 
; 1224 : 	// î±î¶î??????î???????????
; 1225 : 	if(!checkCharObjPoint(mouseMapGx, mouseMapGy,

  0005b	6a 07		 push	 7
  0005d	56		 push	 esi
  0005e	51		 push	 ecx
  0005f	e8 00 00 00 00	 call	 ?checkCharObjPoint@@YAHHHF@Z ; checkCharObjPoint
  00064	83 c4 0c	 add	 esp, 12			; 0000000cH
  00067	85 c0		 test	 eax, eax
  00069	0f 84 bd 00 00
	00		 je	 $LN11@getItem

; 1226 : 		CHAROBJ_TYPE_NPC|CHAROBJ_TYPE_ITEM|CHAROBJ_TYPE_MONEY))
; 1227 : //		CHAROBJ_TYPE_ITEM|CHAROBJ_TYPE_MONEY))
; 1228 : 		return;
; 1229 : 
; 1230 : 	// ???????îµ??î??
; 1231 : 	tmpX = (float)(mouseMapGx - nowGx);

  0006f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGx@@3HA ; mouseMapGx

; 1232 : 	tmpY = (float)(mouseMapGy - nowGy);
; 1233 : 	tmpDir = Atan(tmpX, tmpY) + 22.5F - 45.0F*3;

  00074	83 ec 08	 sub	 esp, 8
  00077	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0007d	66 0f 6e c8	 movd	 xmm1, eax
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?mouseMapGy@@3HA ; mouseMapGy
  00086	2b 05 00 00 00
	00		 sub	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  0008c	0f 5b c9	 cvtdq2ps xmm1, xmm1
  0008f	66 0f 6e c0	 movd	 xmm0, eax
  00093	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00096	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0009c	f3 0f 11 0c 24	 movss	 DWORD PTR [esp], xmm1
  000a1	e8 00 00 00 00	 call	 ?Atan@@YAMMM@Z		; Atan
  000a6	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@41b40000

; 1234 : 	AdjustDir(&tmpDir);

  000ac	8d 45 fc	 lea	 eax, DWORD PTR _tmpDir$[ebp]
  000af	50		 push	 eax
  000b0	d8 25 00 00 00
	00		 fsub	 DWORD PTR __real@43070000
  000b6	d9 5d fc	 fstp	 DWORD PTR _tmpDir$[ebp]
  000b9	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 1235 : 	dir = (int)(tmpDir/45);

  000be	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _tmpDir$[ebp]
  000c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000c6	f3 0f 5e 05 00
	00 00 00	 divss	 xmm0, DWORD PTR __real@42340000
  000ce	f3 0f 2c f0	 cvttss2si esi, xmm0

; 1236 : 
; 1237 : 	// ?îº?î
; 1238 : 	if(piSendTime+FIELD_BTN_PUSH_WAIT < TimeGetTime())

  000d2	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  000d7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?piSendTime@?1??getItem@@YAXXZ@4IA
  000dd	81 c1 f4 01 00
	00		 add	 ecx, 500		; 000001f4H
  000e3	3b c8		 cmp	 ecx, eax
  000e5	73 45		 jae	 SHORT $LN11@getItem

; 1239 : 	{
; 1240 : 		// ??????
; 1241 : 		if(bNewServer) {

  000e7	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bNewServer@@3HA, 0 ; bNewServer
  000ee	56		 push	 esi
  000ef	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  000f5	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  000fb	ff 35 00 00 00
	00		 push	 DWORD PTR ?sockfd@@3IA	; sockfd
  00101	74 17		 je	 SHORT $LN8@getItem

; 1242 : 			lssproto_PI_send(sockfd, nowGx, nowGy, dir);

  00103	e8 00 00 00 00	 call	 ?lssproto_PI_send@@YAXHHHH@Z ; lssproto_PI_send

; 1246 : 		piSendTime = TimeGetTime();

  00108	83 c4 10	 add	 esp, 16			; 00000010H
  0010b	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00110	a3 00 00 00 00	 mov	 DWORD PTR ?piSendTime@?1??getItem@@YAXXZ@4IA, eax
  00115	5e		 pop	 esi

; 1247 : 	}
; 1248 : }

  00116	8b e5		 mov	 esp, ebp
  00118	5d		 pop	 ebp
  00119	c3		 ret	 0
$LN8@getItem:

; 1243 : 		}
; 1244 : 		else
; 1245 : 			old_lssproto_PI_send(sockfd, nowGx, nowGy, dir);

  0011a	e8 00 00 00 00	 call	 ?old_lssproto_PI_send@@YAXHHHH@Z ; old_lssproto_PI_send

; 1246 : 		piSendTime = TimeGetTime();

  0011f	83 c4 10	 add	 esp, 16			; 00000010H
  00122	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00127	a3 00 00 00 00	 mov	 DWORD PTR ?piSendTime@?1??getItem@@YAXXZ@4IA, eax
$LN11@getItem:
  0012c	5e		 pop	 esi
$LN5@getItem:

; 1247 : 	}
; 1248 : }

  0012d	8b e5		 mov	 esp, ebp
  0012f	5d		 pop	 ebp
  00130	c3		 ret	 0
?getItem@@YAXXZ ENDP					; getItem
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?resetCharacterList@@YAHH@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?resetCharacterList@@YAHH@Z PROC			; resetCharacterList, COMDAT

; 1195 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1196 : 	if(index < 0 || index >= MAXCHARACTER)

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _index$[ebp]
  00006	83 f9 01	 cmp	 ecx, 1
  00009	77 1f		 ja	 SHORT $LN3@resetChara

; 1198 : 
; 1199 : 	memset(&chartable[index], 0, sizeof(CHARLISTTABLE));

  0000b	8b c1		 mov	 eax, ecx
  0000d	c1 e0 04	 shl	 eax, 4
  00010	03 c1		 add	 eax, ecx
  00012	6a 44		 push	 68			; 00000044H
  00014	6a 00		 push	 0
  00016	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[eax*4]
  0001d	50		 push	 eax
  0001e	e8 00 00 00 00	 call	 _memset
  00023	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1200 : 
; 1201 : 	return 0;

  00026	33 c0		 xor	 eax, eax

; 1202 : }

  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
$LN3@resetChara:

; 1197 : 		return -1;

  0002a	83 c8 ff	 or	 eax, -1

; 1202 : }

  0002d	5d		 pop	 ebp
  0002e	c3		 ret	 0
?resetCharacterList@@YAHH@Z ENDP			; resetCharacterList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setCharacterList@@YAHPAD0@Z
_TEXT	SEGMENT
tv291 = -4						; size = 4
_name$ = 8						; size = 4
_opt$ = 12						; size = 4
?setCharacterList@@YAHPAD0@Z PROC			; setCharacterList, COMDAT

; 1149 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 1150 : 	int index;
; 1151 : 
; 1152 : 	makeStringFromEscaped(name);

  00005	8b 75 08	 mov	 esi, DWORD PTR _name$[ebp]
  00008	57		 push	 edi
  00009	56		 push	 esi
  0000a	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 1153 : 	makeStringFromEscaped(opt);

  0000f	8b 7d 0c	 mov	 edi, DWORD PTR _opt$[ebp]
  00012	57		 push	 edi
  00013	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 1154 : 
; 1155 : 	index = getIntegerToken(opt, '|', 1);

  00018	6a 01		 push	 1
  0001a	6a 7c		 push	 124			; 0000007cH
  0001c	57		 push	 edi
  0001d	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00022	83 c4 14	 add	 esp, 20			; 00000014H

; 1156 : 
; 1157 : 	if(index < 0 || index >= MAXCHARACTER)

  00025	83 f8 01	 cmp	 eax, 1
  00028	0f 87 b8 01 00
	00		 ja	 $LN3@setCharact

; 1159 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1160 : 	memset(PcLanded.ç»éäººç©åç§°[index],0,32);

  0002e	53		 push	 ebx

; 1161 : #endif
; 1162 : 	memset(&chartable[index], 0, sizeof(CHARLISTTABLE));

  0002f	8b d8		 mov	 ebx, eax
  00031	8b c8		 mov	 ecx, eax
  00033	c1 e3 04	 shl	 ebx, 4
  00036	0f 57 c0	 xorps	 xmm0, xmm0
  00039	c1 e1 05	 shl	 ecx, 5
  0003c	03 d8		 add	 ebx, eax
  0003e	8d 89 1c 00 00
	00		 lea	 ecx, DWORD PTR ?PcLanded@@3ULanded@@A[ecx+28]
  00044	6a 44		 push	 68			; 00000044H
  00046	6a 00		 push	 0
  00048	8d 3c 9d 00 00
	00 00		 lea	 edi, DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4]
  0004f	89 4d fc	 mov	 DWORD PTR tv291[ebp], ecx
  00052	0f 11 01	 movups	 XMMWORD PTR [ecx], xmm0
  00055	57		 push	 edi
  00056	0f 11 41 10	 movups	 XMMWORD PTR [ecx+16], xmm0
  0005a	e8 00 00 00 00	 call	 _memset

; 1163 : 
; 1164 : 	if(strlen(name) <= CHAR_NAME_LEN)

  0005f	8b ce		 mov	 ecx, esi
  00061	83 c4 0c	 add	 esp, 12			; 0000000cH
  00064	8d 51 01	 lea	 edx, DWORD PTR [ecx+1]
$LL15@setCharact:
  00067	8a 01		 mov	 al, BYTE PTR [ecx]
  00069	41		 inc	 ecx
  0006a	84 c0		 test	 al, al
  0006c	75 f9		 jne	 SHORT $LL15@setCharact
  0006e	2b ca		 sub	 ecx, edx
  00070	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00073	77 1a		 ja	 SHORT $LN4@setCharact

; 1165 : 	{
; 1166 : 		strcpy(chartable[index].name, name);

  00075	8b ce		 mov	 ecx, esi
  00077	2b fe		 sub	 edi, esi
  00079	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@setCharact:
  00080	8a 01		 mov	 al, BYTE PTR [ecx]
  00082	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00085	88 44 0f ff	 mov	 BYTE PTR [edi+ecx-1], al
  00089	84 c0		 test	 al, al
  0008b	75 f3		 jne	 SHORT $LL7@setCharact

; 1167 : 	}

  0008d	eb 06		 jmp	 SHORT $LN5@setCharact
$LN4@setCharact:

; 1168 : 	else
; 1169 : 	{
; 1170 : 		strcpy(chartable[index].name, "???");

  0008f	c7 07 3f 3f 3f
	00		 mov	 DWORD PTR [edi], 4144959 ; 003f3f3fH
$LN5@setCharact:

; 1171 : 	}
; 1172 : 	chartable[index].faceGraNo	= getIntegerToken(opt, '|',  2);

  00095	8b 7d 0c	 mov	 edi, DWORD PTR _opt$[ebp]
  00098	6a 02		 push	 2
  0009a	6a 7c		 push	 124			; 0000007cH
  0009c	57		 push	 edi
  0009d	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1173 : 	chartable[index].level		= getIntegerToken(opt, '|',  3);

  000a2	6a 03		 push	 3
  000a4	6a 7c		 push	 124			; 0000007cH
  000a6	57		 push	 edi
  000a7	89 04 9d 18 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+24], eax
  000ae	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1174 : 	chartable[index].hp			= getIntegerToken(opt, '|',  4);

  000b3	6a 04		 push	 4
  000b5	6a 7c		 push	 124			; 0000007cH
  000b7	57		 push	 edi
  000b8	66 89 04 9d 12
	00 00 00	 mov	 WORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+18], ax
  000c0	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1175 : 	chartable[index].str		= getIntegerToken(opt, '|',  5);

  000c5	6a 05		 push	 5
  000c7	6a 7c		 push	 124			; 0000007cH
  000c9	57		 push	 edi
  000ca	89 04 9d 1c 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+28], eax
  000d1	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1176 : 	chartable[index].def		= getIntegerToken(opt, '|',  6);

  000d6	6a 06		 push	 6
  000d8	6a 7c		 push	 124			; 0000007cH
  000da	57		 push	 edi
  000db	89 04 9d 20 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+32], eax
  000e2	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1177 : 	chartable[index].agi		= getIntegerToken(opt, '|',  7);

  000e7	6a 07		 push	 7
  000e9	6a 7c		 push	 124			; 0000007cH
  000eb	57		 push	 edi
  000ec	89 04 9d 24 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+36], eax
  000f3	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  000f8	83 c4 48	 add	 esp, 72			; 00000048H
  000fb	89 04 9d 28 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+40], eax

; 1178 : 	chartable[index].app		= getIntegerToken(opt, '|',  8);

  00102	6a 08		 push	 8
  00104	6a 7c		 push	 124			; 0000007cH
  00106	57		 push	 edi
  00107	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1179 : 	chartable[index].dp			= getIntegerToken(opt, '|',  9);

  0010c	6a 09		 push	 9
  0010e	6a 7c		 push	 124			; 0000007cH
  00110	57		 push	 edi
  00111	89 04 9d 2c 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+44], eax
  00118	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1180 : 	chartable[index].attr[0]	= getIntegerToken(opt, '|', 10)/10;

  0011d	6a 0a		 push	 10			; 0000000aH
  0011f	6a 7c		 push	 124			; 0000007cH
  00121	57		 push	 edi
  00122	89 04 9d 40 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+64], eax
  00129	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0012e	8b c8		 mov	 ecx, eax
  00130	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00135	f7 e9		 imul	 ecx

; 1181 : 	chartable[index].attr[1]	= getIntegerToken(opt, '|', 11)/10;

  00137	6a 0b		 push	 11			; 0000000bH
  00139	c1 fa 02	 sar	 edx, 2
  0013c	8b c2		 mov	 eax, edx
  0013e	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00141	03 c2		 add	 eax, edx
  00143	6a 7c		 push	 124			; 0000007cH
  00145	57		 push	 edi
  00146	89 04 9d 30 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+48], eax
  0014d	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00152	8b c8		 mov	 ecx, eax
  00154	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00159	f7 e9		 imul	 ecx

; 1182 : 	chartable[index].attr[2]	= getIntegerToken(opt, '|', 12)/10;

  0015b	6a 0c		 push	 12			; 0000000cH
  0015d	c1 fa 02	 sar	 edx, 2
  00160	8b c2		 mov	 eax, edx
  00162	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00165	03 c2		 add	 eax, edx
  00167	6a 7c		 push	 124			; 0000007cH
  00169	57		 push	 edi
  0016a	89 04 9d 34 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+52], eax
  00171	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  00176	8b c8		 mov	 ecx, eax
  00178	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0017d	f7 e9		 imul	 ecx

; 1183 : 	chartable[index].attr[3]	= getIntegerToken(opt, '|', 13)/10;

  0017f	6a 0d		 push	 13			; 0000000dH
  00181	c1 fa 02	 sar	 edx, 2
  00184	8b ca		 mov	 ecx, edx
  00186	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00189	03 ca		 add	 ecx, edx
  0018b	6a 7c		 push	 124			; 0000007cH
  0018d	89 0c 9d 38 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+56], ecx
  00194	57		 push	 edi
  00195	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken
  0019a	8b c8		 mov	 ecx, eax
  0019c	83 c4 48	 add	 esp, 72			; 00000048H
  0019f	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  001a4	f7 e9		 imul	 ecx

; 1184 : 	chartable[index].login		= getIntegerToken(opt, '|', 14);

  001a6	6a 0e		 push	 14			; 0000000eH
  001a8	c1 fa 02	 sar	 edx, 2
  001ab	8b c2		 mov	 eax, edx
  001ad	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001b0	03 c2		 add	 eax, edx
  001b2	6a 7c		 push	 124			; 0000007cH
  001b4	57		 push	 edi
  001b5	89 04 9d 3c 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+60], eax
  001bc	e8 00 00 00 00	 call	 ?getIntegerToken@@YAHPADDH@Z ; getIntegerToken

; 1185 : #ifdef _NB_æ­çº¿èªå¨éè¿
; 1186 : 	strcpy(PcLanded.ç»éäººç©åç§°[index],name);

  001c1	8b 4d fc	 mov	 ecx, DWORD PTR tv291[ebp]
  001c4	83 c4 0c	 add	 esp, 12			; 0000000cH
  001c7	89 04 9d 14 00
	00 00		 mov	 DWORD PTR ?chartable@@3PAUCHARLISTTABLE@@A[ebx*4+20], eax
  001ce	2b ce		 sub	 ecx, esi
  001d0	5b		 pop	 ebx
$LL8@setCharact:
  001d1	8a 06		 mov	 al, BYTE PTR [esi]
  001d3	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  001d6	88 44 31 ff	 mov	 BYTE PTR [ecx+esi-1], al
  001da	84 c0		 test	 al, al
  001dc	75 f3		 jne	 SHORT $LL8@setCharact

; 1187 : #endif
; 1188 : 	return 0;

  001de	5f		 pop	 edi
  001df	33 c0		 xor	 eax, eax

; 1189 : }

  001e1	5e		 pop	 esi
  001e2	8b e5		 mov	 esp, ebp
  001e4	5d		 pop	 ebp
  001e5	c3		 ret	 0
$LN3@setCharact:
  001e6	5f		 pop	 edi

; 1158 : 		return -1;

  001e7	83 c8 ff	 or	 eax, -1

; 1189 : }

  001ea	5e		 pop	 esi
  001eb	8b e5		 mov	 esp, ebp
  001ed	5d		 pop	 ebp
  001ee	c3		 ret	 0
?setCharacterList@@YAHPAD0@Z ENDP			; setCharacterList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?cmpNameCharacterList@@YAHPAD@Z
_TEXT	SEGMENT
_name$ = 8						; size = 4
?cmpNameCharacterList@@YAHPAD@Z PROC			; cmpNameCharacterList, COMDAT

; 1134 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1135 : 	int i;
; 1136 : 
; 1137 : 	for(i = 0; i < MAXCHARACTER; i++)

  00005	8b 7d 08	 mov	 edi, DWORD PTR _name$[ebp]
  00008	be 00 00 00 00	 mov	 esi, OFFSET ?chartable@@3PAUCHARLISTTABLE@@A ; chartable
  0000d	0f 1f 00	 npad	 3
$LL4@cmpNameCha:

; 1138 : 	{
; 1139 : 		if(strcmp(name, chartable[i].name) == 0)

  00010	8b c6		 mov	 eax, esi
  00012	8b cf		 mov	 ecx, edi
$LL12@cmpNameCha:
  00014	8a 11		 mov	 dl, BYTE PTR [ecx]
  00016	3a 10		 cmp	 dl, BYTE PTR [eax]
  00018	75 1a		 jne	 SHORT $LN13@cmpNameCha
  0001a	84 d2		 test	 dl, dl
  0001c	74 12		 je	 SHORT $LN14@cmpNameCha
  0001e	8a 51 01	 mov	 dl, BYTE PTR [ecx+1]
  00021	3a 50 01	 cmp	 dl, BYTE PTR [eax+1]
  00024	75 0e		 jne	 SHORT $LN13@cmpNameCha
  00026	83 c1 02	 add	 ecx, 2
  00029	83 c0 02	 add	 eax, 2
  0002c	84 d2		 test	 dl, dl
  0002e	75 e4		 jne	 SHORT $LL12@cmpNameCha
$LN14@cmpNameCha:
  00030	33 c0		 xor	 eax, eax
  00032	eb 05		 jmp	 SHORT $LN15@cmpNameCha
$LN13@cmpNameCha:
  00034	1b c0		 sbb	 eax, eax
  00036	83 c8 01	 or	 eax, 1
$LN15@cmpNameCha:
  00039	85 c0		 test	 eax, eax
  0003b	74 11		 je	 SHORT $LN8@cmpNameCha

; 1135 : 	int i;
; 1136 : 
; 1137 : 	for(i = 0; i < MAXCHARACTER; i++)

  0003d	83 c6 44	 add	 esi, 68			; 00000044H
  00040	81 fe 88 00 00
	00		 cmp	 esi, OFFSET ?chartable@@3PAUCHARLISTTABLE@@A+136
  00046	7c c8		 jl	 SHORT $LL4@cmpNameCha

; 1141 : 	}
; 1142 : 
; 1143 : 	return 0;

  00048	5f		 pop	 edi
  00049	33 c0		 xor	 eax, eax

; 1144 : }

  0004b	5e		 pop	 esi
  0004c	5d		 pop	 ebp
  0004d	c3		 ret	 0
$LN8@cmpNameCha:
  0004e	5f		 pop	 edi

; 1140 : 			return 1;

  0004f	b8 01 00 00 00	 mov	 eax, 1

; 1144 : }

  00054	5e		 pop	 esi
  00055	5d		 pop	 ebp
  00056	c3		 ret	 0
?cmpNameCharacterList@@YAHPAD@Z ENDP			; cmpNameCharacterList
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?existCharacterListEntry@@YAHH@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?existCharacterListEntry@@YAHH@Z PROC			; existCharacterListEntry, COMDAT

; 1117 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1118 : 	if(index < 0 || index >= MAXCHARACTER)

  00003	8b 45 08	 mov	 eax, DWORD PTR _index$[ebp]
  00006	83 f8 01	 cmp	 eax, 1
  00009	77 15		 ja	 SHORT $LN3@existChara

; 1120 : 
; 1121 : 	if(chartable[index].name[0] != '\0')

  0000b	8b c8		 mov	 ecx, eax
  0000d	c1 e1 04	 shl	 ecx, 4
  00010	03 c8		 add	 ecx, eax
  00012	33 c0		 xor	 eax, eax
  00014	38 04 8d 00 00
	00 00		 cmp	 BYTE PTR ?chartable@@3PAUCHARLISTTABLE@@A[ecx*4], al
  0001b	0f 95 c0	 setne	 al

; 1122 : 	{
; 1123 : 		return 1;
; 1124 : 	}
; 1125 : 	else
; 1126 : 	{
; 1127 : 		return 0;
; 1128 : 	}
; 1129 : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
$LN3@existChara:

; 1119 : 		return -1;

  00020	83 c8 ff	 or	 eax, -1

; 1122 : 	{
; 1123 : 		return 1;
; 1124 : 	}
; 1125 : 	else
; 1126 : 	{
; 1127 : 		return 0;
; 1128 : 	}
; 1129 : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?existCharacterListEntry@@YAHH@Z ENDP			; existCharacterListEntry
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?clearPtActPartyParam@@YAXXZ
_TEXT	SEGMENT
?clearPtActPartyParam@@YAXXZ PROC			; clearPtActPartyParam, COMDAT

; 1103 : 	int i;
; 1104 : 
; 1105 : 	for(i = 0; i < MAX_PARTY; i++)
; 1106 : 	{
; 1107 : 		party[i].ptAct = NULL;

  00000	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+44, 0
  0000a	c7 05 5c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+92, 0
  00014	c7 05 8c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+140, 0
  0001e	c7 05 bc 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+188, 0
  00028	c7 05 ec 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+236, 0

; 1108 : 	}
; 1109 : }

  00032	c3		 ret	 0
?clearPtActPartyParam@@YAXXZ ENDP			; clearPtActPartyParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?clearPartyParam@@YAXXZ
_TEXT	SEGMENT
?clearPartyParam@@YAXXZ PROC				; clearPartyParam, COMDAT

; 1063 : {

  00000	56		 push	 esi

; 1064 : 	int i;
; 1065 : 
; 1066 : 	for(i = 0; i < MAX_PARTY; i++)

  00001	be 2c 00 00 00	 mov	 esi, OFFSET ?party@@3PAUPARTY@@A+44
$LL4@clearParty:

; 1067 : 	{
; 1068 : 		// ???????????????????????
; 1069 : 		if(party[i].useFlag != 0)

  00006	66 83 7e d4 00	 cmp	 WORD PTR [esi-44], 0
  0000b	74 46		 je	 SHORT $LN7@clearParty

; 1070 : 		{
; 1071 : 			if( party[i].id == pc.id)

  0000d	8b 46 d8	 mov	 eax, DWORD PTR [esi-40]
  00010	3b 05 08 00 00
	00		 cmp	 eax, DWORD PTR ?pc@@3UPC@@A+8
  00016	75 16		 jne	 SHORT $LN6@clearParty

; 1072 : 			{
; 1073 : 				// ????î®??????????
; 1074 : 				if(party[i].ptAct != NULL)

  00018	8b 06		 mov	 eax, DWORD PTR [esi]
  0001a	85 c0		 test	 eax, eax
  0001c	74 09		 je	 SHORT $LN8@clearParty

; 1075 : 				{
; 1076 : 					party[i].ptAct->bufCount = 0;

  0001e	33 c9		 xor	 ecx, ecx
  00020	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx
$LN8@clearParty:

; 1077 : 				}
; 1078 : 				delPcParty();

  00027	e8 00 00 00 00	 call	 ?delPcParty@@YAXXZ	; delPcParty

; 1079 : 			}

  0002c	eb 25		 jmp	 SHORT $LN7@clearParty
$LN6@clearParty:

; 1080 : 			else
; 1081 : 			{
; 1082 : 				// ??????????î?????î®????????
; 1083 : 				if((pc.status & CHR_STATUS_LEADER) != 0
; 1084 : 				 && party[i].ptAct != NULL)

  0002e	f7 05 a4 00 00
	00 00 01 00 00	 test	 DWORD PTR ?pc@@3UPC@@A+164, 256 ; 00000100H
  00038	74 0f		 je	 SHORT $LN9@clearParty
  0003a	8b 06		 mov	 eax, DWORD PTR [esi]
  0003c	85 c0		 test	 eax, eax
  0003e	74 09		 je	 SHORT $LN9@clearParty

; 1085 : 				{
; 1086 : 					party[i].ptAct->bufCount = 0;

  00040	33 c9		 xor	 ecx, ecx
  00042	66 89 88 14 01
	00 00		 mov	 WORD PTR [eax+276], cx
$LN9@clearParty:

; 1087 : 				}
; 1088 : 				delCharParty(party[i].ptAct);

  00049	ff 36		 push	 DWORD PTR [esi]
  0004b	e8 00 00 00 00	 call	 ?delCharParty@@YAXPAUaction@@@Z ; delCharParty
  00050	83 c4 04	 add	 esp, 4
$LN7@clearParty:

; 1089 : 			}
; 1090 : 		}
; 1091 : 		party[i].useFlag = 0;

  00053	33 c0		 xor	 eax, eax
  00055	66 89 46 d4	 mov	 WORD PTR [esi-44], ax

; 1092 : 		party[i].id = 0;

  00059	89 46 d8	 mov	 DWORD PTR [esi-40], eax

; 1093 : 		party[i].ptAct = NULL;

  0005c	89 06		 mov	 DWORD PTR [esi], eax
  0005e	83 c6 30	 add	 esi, 48			; 00000030H
  00061	81 fe 1c 01 00
	00		 cmp	 esi, OFFSET ?party@@3PAUPARTY@@A+284
  00067	7c 9d		 jl	 SHORT $LL4@clearParty

; 1094 : 	}
; 1095 : 
; 1096 : 	delPcLeader();

  00069	5e		 pop	 esi
  0006a	e9 00 00 00 00	 jmp	 ?delPcLeader@@YAXXZ	; delPcLeader
?clearPartyParam@@YAXXZ ENDP				; clearPartyParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcNameColor@@YAXH@Z
_TEXT	SEGMENT
_color$ = 8						; size = 4
?setPcNameColor@@YAXH@Z PROC				; setPcNameColor, COMDAT

; 647  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 648  : 	pc.pcNameColor = color;
; 649  : 
; 650  : 	if(pc.ptAct == NULL)

  00003	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00009	8b 45 08	 mov	 eax, DWORD PTR _color$[ebp]
  0000c	a3 f0 50 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20720, eax
  00011	85 c9		 test	 ecx, ecx
  00013	74 06		 je	 SHORT $LN1@setPcNameC

; 651  : 		return;
; 652  : 
; 653  : 	pc.ptAct->charNameColor = color;

  00015	89 81 98 00 00
	00		 mov	 DWORD PTR [ecx+152], eax
$LN1@setPcNameC:

; 654  : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?setPcNameColor@@YAXH@Z ENDP				; setPcNameColor
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcFukidashi@@YAXI@Z
_TEXT	SEGMENT
_offTime$ = 8						; size = 4
?setPcFukidashi@@YAXI@Z PROC				; setPcFukidashi, COMDAT

; 627  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 628  : 	CHAREXTRA *ext;
; 629  : 
; 630  : 	if(pc.ptAct == NULL)

  00003	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00008	85 c0		 test	 eax, eax
  0000a	74 22		 je	 SHORT $LN1@setPcFukid

; 631  : 		return;
; 632  : 
; 633  : 	pc.status |= CHR_STATUS_FUKIDASHI;

  0000c	81 0d a4 00 00
	00 00 20 00 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 8192 ; 00002000H
  00016	56		 push	 esi

; 634  : 	ext = (CHAREXTRA *)pc.ptAct->pYobi;

  00017	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 635  : 
; 636  : 	//JL fix å¯è½åºç°0xdddddddd
; 637  : 	if ((int)ext == 0xdddddddd)

  0001a	81 fe dd dd dd
	dd		 cmp	 esi, -572662307		; ddddddddH
  00020	74 0b		 je	 SHORT $LN5@setPcFukid

; 638  : 	{
; 639  : 		return;
; 640  : 	}
; 641  : 	ext->drawFukidashiTime = offTime + TimeGetTime();

  00022	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00027	03 45 08	 add	 eax, DWORD PTR _offTime$[ebp]
  0002a	89 46 04	 mov	 DWORD PTR [esi+4], eax
$LN5@setPcFukid:
  0002d	5e		 pop	 esi
$LN1@setPcFukid:

; 642  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?setPcFukidashi@@YAXI@Z ENDP				; setPcFukidashi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcUseMagic@@YAXXZ
_TEXT	SEGMENT
?delPcUseMagic@@YAXXZ PROC				; delPcUseMagic, COMDAT

; 621  : 	pc.status &= (~CHR_STATUS_USE_MAGIC);

  00000	81 25 a4 00 00
	00 ff f7 ff ff	 and	 DWORD PTR ?pc@@3UPC@@A+164, -2049 ; fffff7ffH

; 622  : }

  0000a	c3		 ret	 0
?delPcUseMagic@@YAXXZ ENDP				; delPcUseMagic
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcUseMagic@@YAXXZ
_TEXT	SEGMENT
?setPcUseMagic@@YAXXZ PROC				; setPcUseMagic, COMDAT

; 614  : 	pc.status |= CHR_STATUS_USE_MAGIC;

  00000	81 0d a4 00 00
	00 00 08 00 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 2048 ; 00000800H

; 615  : }

  0000a	c3		 ret	 0
?setPcUseMagic@@YAXXZ ENDP				; setPcUseMagic
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?checkPcWalkFlag@@YAHXZ
_TEXT	SEGMENT
?checkPcWalkFlag@@YAHXZ PROC				; checkPcWalkFlag, COMDAT

; 604  : 	if(pc.ptAct == NULL)

  00000	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00005	85 c0		 test	 eax, eax
  00007	75 01		 jne	 SHORT $LN2@checkPcWal

; 608  : }

  00009	c3		 ret	 0
$LN2@checkPcWal:

; 605  : 		return 0;
; 606  : 
; 607  : 	return (int)pc.ptAct->walkFlag;

  0000a	0f bf 80 16 01
	00 00		 movsx	 eax, WORD PTR [eax+278]

; 608  : }

  00011	c3		 ret	 0
?checkPcWalkFlag@@YAHXZ ENDP				; checkPcWalkFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcWalkFlag@@YAXXZ
_TEXT	SEGMENT
?delPcWalkFlag@@YAXXZ PROC				; delPcWalkFlag, COMDAT

; 594  : 	if(pc.ptAct == NULL)

  00000	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00005	85 c0		 test	 eax, eax
  00007	74 09		 je	 SHORT $LN1@delPcWalkF

; 595  : 		return;
; 596  : 
; 597  : 	pc.ptAct->walkFlag = 0;

  00009	33 c9		 xor	 ecx, ecx
  0000b	66 89 88 16 01
	00 00		 mov	 WORD PTR [eax+278], cx
$LN1@delPcWalkF:

; 598  : }

  00012	c3		 ret	 0
?delPcWalkFlag@@YAXXZ ENDP				; delPcWalkFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcWalkFlag@@YAXXZ
_TEXT	SEGMENT
?setPcWalkFlag@@YAXXZ PROC				; setPcWalkFlag, COMDAT

; 584  : 	if(pc.ptAct == NULL)

  00000	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00005	85 c0		 test	 eax, eax
  00007	74 0c		 je	 SHORT $LN1@setPcWalkF

; 585  : 		return;
; 586  : 
; 587  : 	pc.ptAct->walkFlag = 1;

  00009	b9 01 00 00 00	 mov	 ecx, 1
  0000e	66 89 88 16 01
	00 00		 mov	 WORD PTR [eax+278], cx
$LN1@setPcWalkF:

; 588  : }

  00015	c3		 ret	 0
?setPcWalkFlag@@YAXXZ ENDP				; setPcWalkFlag
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?changePcAct@@YAXHHHHHHH@Z
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_dir$ = 16						; size = 4
_action$ = 20						; size = 4
_effectno$ = 24						; size = 4
_effectparam1$ = 28					; size = 4
_effectparam2$ = 32					; size = 4
?changePcAct@@YAXHHHHHHH@Z PROC				; changePcAct, COMDAT

; 676  : void changePcAct(int x, int y, int dir, int action,int effectno, int effectparam1, int effectparam2){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 677  : 	switch(action){

  00003	8b 45 14	 mov	 eax, DWORD PTR _action$[ebp]
  00006	83 f8 3d	 cmp	 eax, 61			; 0000003dH
  00009	0f 87 e0 04 00
	00		 ja	 $LN71@changePcAc
  0000f	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN73@changePcAc[eax]
  00016	56		 push	 esi
  00017	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN74@changePcAc[eax*4]
$LN4@changePcAc:

; 678  : 		case 0:
; 679  : #if 0
; 680  : #if 1
; 681  : 			setPcWarpPoint(x, y);
; 682  : 			setPcDir(dir);
; 683  : #else
; 684  : 			if(partyModeFlag == 0 || (pc.status & CHR_STATUS_LEADER) != 0){
; 685  : 				setPcWarpPoint(x, y);
; 686  : 				setPcDir(dir);
; 687  : 			}
; 688  : #endif
; 689  : #endif
; 690  : 			setPcAction(ANIM_STAND);

  0001e	6a 03		 push	 3
  00020	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00025	83 c4 04	 add	 esp, 4
  00028	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
$LN5@changePcAc:

; 691  : 			break;
; 692  : #ifdef _SHOWFAMILYBADGE_
; 693  : 		case 43:
; 694  : 			if (effectno > 0) {

  0002b	8b 45 18	 mov	 eax, DWORD PTR _effectno$[ebp]
  0002e	85 c0		 test	 eax, eax
  00030	7e 26		 jle	 SHORT $LN10@changePcAc

; 695  : 				if (pc.familyName[0])

  00032	80 3d f6 50 00
	00 00		 cmp	 BYTE PTR ?pc@@3UPC@@A+20726, 0
  00039	0f 84 af 04 00
	00		 je	 $LN75@changePcAc
$LN83@changePcAc:

; 696  : 					setCharmManor(pc.ptAct, effectno);

  0003f	50		 push	 eax
  00040	ff 35 ec 50 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20716
  00046	e8 00 00 00 00	 call	 ?setCharmManor@@YAXPAUaction@@H@Z ; setCharmManor
  0004b	83 c4 08	 add	 esp, 8
  0004e	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
$LN9@changePcAc:

; 697  : 			}
; 698  : 			else
; 699  : 				delCharmManor(pc.ptAct);
; 700  : 			break;
; 701  : #endif
; 702  : #ifdef FAMILY_MANOR_
; 703  : 		case 44:
; 704  : 			if (effectno >= 0) {
; 705  : 				if (pc.familyName[0])
; 706  : 					setCharmFamily(pc.ptAct, effectno);
; 707  : 			}
; 708  : 			else
; 709  : 				delCharmFamily(pc.ptAct);
; 710  : 			break;
; 711  : #endif
; 712  : #ifdef äººç©åç¯
; 713  : 		case 46:
; 714  : 			if (effectno >= 0) {

  00051	8b 45 18	 mov	 eax, DWORD PTR _effectno$[ebp]
  00054	85 c0		 test	 eax, eax
  00056	79 e7		 jns	 SHORT $LN83@changePcAc
$LN10@changePcAc:

; 715  : 				setCharmManor(pc.ptAct, effectno);
; 716  : 			}
; 717  : 			else
; 718  : 				delCharmManor(pc.ptAct);

  00058	ff 35 ec 50 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20716
  0005e	e8 00 00 00 00	 call	 ?delCharmManor@@YAXPAUaction@@@Z ; delCharmManor
  00063	83 c4 04	 add	 esp, 4
  00066	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00067	5d		 pop	 ebp
  00068	c3		 ret	 0
$LN12@changePcAc:

; 719  : 			break;
; 720  : #endif
; 721  : #ifdef äººç©ç§°å·
; 722  : 		case 45:
; 723  : 			if (effectno >= 0) {

  00069	8b 45 18	 mov	 eax, DWORD PTR _effectno$[ebp]
  0006c	85 c0		 test	 eax, eax
  0006e	78 12		 js	 SHORT $LN13@changePcAc

; 724  : 				setCharmTitle(pc.ptAct, effectno);

  00070	50		 push	 eax
  00071	ff 35 ec 50 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20716
  00077	e8 00 00 00 00	 call	 ?setCharmTitle@@YAXPAUaction@@H@Z ; setCharmTitle
  0007c	83 c4 08	 add	 esp, 8
  0007f	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00080	5d		 pop	 ebp
  00081	c3		 ret	 0
$LN13@changePcAc:

; 725  : 			}else
; 726  : 				delCharmTitle(pc.ptAct);

  00082	ff 35 ec 50 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20716
  00088	e8 00 00 00 00	 call	 ?delCharmTitle@@YAXPAUaction@@@Z ; delCharmTitle
  0008d	83 c4 04	 add	 esp, 4
  00090	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00091	5d		 pop	 ebp
  00092	c3		 ret	 0
$LN15@changePcAc:

; 727  : 			break;
; 728  : #endif
; 729  : 		// ???
; 730  : 		case 31:
; 731  : #if 1
; 732  : 			setPcWarpPoint(x, y);

  00093	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00096	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00099	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint

; 733  : 			setPcDir(dir);

  0009e	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  000a1	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 734  : #else
; 735  : 			// ??????????????????
; 736  : 			if(partyModeFlag == 0 || (pc.status & CHR_STATUS_LEADER) != 0)
; 737  : 			{
; 738  : 				setPcWarpPoint(x, y);
; 739  : 				setPcDir(dir);
; 740  : 			}
; 741  : #endif
; 742  : 			setPcAction(ANIM_STAND);

  000a6	6a 03		 push	 3
  000a8	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  000ad	83 c4 10	 add	 esp, 16			; 00000010H
  000b0	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
$LN16@changePcAc:

; 743  : 			break;
; 744  : 
; 745  : 		// îµ?î¿?
; 746  : 		case 30:
; 747  : 			setPcDir(dir);

  000b3	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  000b6	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir
  000bb	83 c4 04	 add	 esp, 4
  000be	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  000bf	5d		 pop	 ebp
  000c0	c3		 ret	 0
$LN17@changePcAc:

; 748  : 			break;
; 749  : 
; 750  : 		// î?
; 751  : 		case 1:
; 752  : 			setPcAction(ANIM_WALK);

  000c1	6a 04		 push	 4
  000c3	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  000c8	83 c4 04	 add	 esp, 4
  000cb	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  000cc	5d		 pop	 ebp
  000cd	c3		 ret	 0
$LN18@changePcAc:

; 753  : 			break;
; 754  : 
; 755  : 		// ??
; 756  : 		case 2:
; 757  : 			//setPcWarpPoint(x, y);
; 758  : 			setPcDir(dir);

  000ce	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  000d1	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 759  : 			setPcAction(ANIM_ATTACK);

  000d6	6a 00		 push	 0
  000d8	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  000dd	83 c4 08	 add	 esp, 8
  000e0	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  000e1	5d		 pop	 ebp
  000e2	c3		 ret	 0
$LN19@changePcAc:

; 760  : 			break;
; 761  : 
; 762  : 		// ???
; 763  : 		case 3:
; 764  : 			setPcDir(dir);

  000e3	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  000e6	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 765  : 			setPcAction(ANIM_THROW);

  000eb	6a 0c		 push	 12			; 0000000cH
  000ed	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  000f2	83 c4 08	 add	 esp, 8
  000f5	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  000f6	5d		 pop	 ebp
  000f7	c3		 ret	 0
$LN20@changePcAc:

; 766  : 			break;
; 767  : 
; 768  : 		// ????
; 769  : 		case 4:
; 770  : 			//setPcWarpPoint(x, y);
; 771  : 			setPcDir(dir);

  000f8	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  000fb	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 772  : 			setPcAction(ANIM_DAMAGE);

  00100	6a 01		 push	 1
  00102	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00107	83 c4 08	 add	 esp, 8
  0010a	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0010b	5d		 pop	 ebp
  0010c	c3		 ret	 0
$LN25@changePcAc:

; 773  : 			break;
; 774  : 
; 775  : 		// ?î 
; 776  : 		case 5:
; 777  : 			//setPcWarpPoint(x, y);
; 778  : 			setPcDir(dir);
; 779  : 			setPcAction(ANIM_DEAD);
; 780  : 			break;
; 781  : 
; 782  : 		// ?î¹î¸?
; 783  : 		case 6:
; 784  : 			break;
; 785  : 
; 786  : 		// ????î¸?
; 787  : 		case 7:
; 788  : 			break;
; 789  : 
; 790  : 		// ?????
; 791  : 		case 8:		/* UsedMagic */
; 792  : 			break;
; 793  : 
; 794  : 		// î??
; 795  : 		case 10:
; 796  : 			//setPcWarpPoint(x, y);
; 797  : 			setPcDir(dir);

  0010d	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  00110	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 798  : 			setPcAction(ANIM_DEAD);

  00115	6a 02		 push	 2
  00117	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  0011c	83 c4 08	 add	 esp, 8
  0011f	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
$LN26@changePcAc:

; 799  : 			break;
; 800  : 
; 801  : 		// ??
; 802  : 		case 11:
; 803  : 			//setPcWarpPoint(x, y);
; 804  : 			setPcDir(dir);

  00122	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  00125	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 805  : 			setPcAction(ANIM_SIT);

  0012a	6a 05		 push	 5
  0012c	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00131	83 c4 08	 add	 esp, 8
  00134	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00135	5d		 pop	 ebp
  00136	c3		 ret	 0
$LN27@changePcAc:

; 806  : 			break;
; 807  : 
; 808  : 		// î?î ?
; 809  : 		case 12:
; 810  : 			//setPcWarpPoint(x, y);
; 811  : 			setPcDir(dir);

  00137	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  0013a	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 812  : 			setPcAction(ANIM_HAND);

  0013f	6a 06		 push	 6
  00141	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00146	83 c4 08	 add	 esp, 8
  00149	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
$LN28@changePcAc:

; 813  : 			break;
; 814  : 
; 815  : 		// ??
; 816  : 		case 13:
; 817  : 			//setPcWarpPoint(x, y);
; 818  : 			setPcDir(dir);

  0014c	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  0014f	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 819  : 			setPcAction(ANIM_HAPPY);

  00154	6a 07		 push	 7
  00156	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  0015b	83 c4 08	 add	 esp, 8
  0015e	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0015f	5d		 pop	 ebp
  00160	c3		 ret	 0
$LN29@changePcAc:

; 820  : 			break;
; 821  : 
; 822  : 		// î?
; 823  : 		case 14:
; 824  : 			//setPcWarpPoint(x, y);
; 825  : 			setPcDir(dir);

  00161	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  00164	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 826  : 			setPcAction(ANIM_ANGRY);

  00169	6a 08		 push	 8
  0016b	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00170	83 c4 08	 add	 esp, 8
  00173	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
$LN30@changePcAc:

; 827  : 			break;
; 828  : 
; 829  : 		// î¼??
; 830  : 		case 15:
; 831  : 			//setPcWarpPoint(x, y);
; 832  : 			setPcDir(dir);

  00176	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  00179	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 833  : 			setPcAction(ANIM_SAD);

  0017e	6a 09		 push	 9
  00180	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  00185	83 c4 08	 add	 esp, 8
  00188	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00189	5d		 pop	 ebp
  0018a	c3		 ret	 0
$LN31@changePcAc:

; 834  : 			break;
; 835  : 
; 836  : 		// ???
; 837  : 		case 16:
; 838  : 			//setPcWarpPoint(x, y);
; 839  : 			setPcDir(dir);

  0018b	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  0018e	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 840  : 			setPcAction(ANIM_GUARD);

  00193	6a 0a		 push	 10			; 0000000aH
  00195	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  0019a	83 c4 08	 add	 esp, 8
  0019d	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0019e	5d		 pop	 ebp
  0019f	c3		 ret	 0
$LN32@changePcAc:

; 841  : 			break;
; 842  : 
; 843  : 		// î??î®????
; 844  : 		case 17:
; 845  : 			setPcDir(dir);

  001a0	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  001a3	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 846  : 			setPcAction(ANIM_WALK);

  001a8	6a 04		 push	 4
  001aa	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  001af	83 c4 08	 add	 esp, 8
  001b2	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  001b3	5d		 pop	 ebp
  001b4	c3		 ret	 0
$LN33@changePcAc:

; 847  : 			break;
; 848  : 
; 849  : 		// ????
; 850  : 		case 18:
; 851  : 			//setPcWarpPoint(x, y);
; 852  : 			setPcDir(dir);

  001b5	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  001b8	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 853  : 			setPcAction(ANIM_NOD);

  001bd	6a 0b		 push	 11			; 0000000bH
  001bf	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  001c4	83 c4 08	 add	 esp, 8
  001c7	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  001c8	5d		 pop	 ebp
  001c9	c3		 ret	 0
$LN34@changePcAc:

; 854  : 			break;
; 855  : 
; 856  : 		// ??î¿î???????
; 857  : 		case 19:
; 858  : 			//setPcWarpPoint(x, y);
; 859  : 			setPcDir(dir);

  001ca	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  001cd	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir

; 860  : 			setPcAction(ANIM_STAND);

  001d2	6a 03		 push	 3
  001d4	e8 00 00 00 00	 call	 ?setPcAction@@YAXH@Z	; setPcAction
  001d9	83 c4 08	 add	 esp, 8
  001dc	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  001dd	5d		 pop	 ebp
  001de	c3		 ret	 0
$LN35@changePcAc:

; 861  : 			break;
; 862  : 
; 863  : 		// îî¬îºî«
; 864  : 		case 20:
; 865  : 			setPcWarpPoint(x, y);

  001df	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  001e2	ff 75 08	 push	 DWORD PTR _x$[ebp]
  001e5	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint

; 866  : 			setPcDir(dir);

  001ea	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  001ed	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir
  001f2	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f5	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  001f6	5d		 pop	 ebp
  001f7	c3		 ret	 0
$LN36@changePcAc:

; 867  : 			break;
; 868  : 
; 869  : 		// ????îºî«
; 870  : 		case 21:
; 871  : 			setPcWarpPoint(x, y);

  001f8	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  001fb	ff 75 08	 push	 DWORD PTR _x$[ebp]
  001fe	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint

; 872  : 			setPcDir(dir);

  00203	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  00206	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir
  0020b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 873  : 			if(effectno == 1)

  0020e	83 7d 18 01	 cmp	 DWORD PTR _effectno$[ebp], 1
  00212	5e		 pop	 esi
  00213	75 06		 jne	 SHORT $LN37@changePcAc

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00215	5d		 pop	 ebp

; 874  : 			{
; 875  : 				// ???????î¸î
; 876  : 				setPcLeader();

  00216	e9 00 00 00 00	 jmp	 ?setPcLeader@@YAXXZ	; setPcLeader
$LN37@changePcAc:

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0021b	5d		 pop	 ebp

; 877  : #if 0
; 878  : 				if(pc.ptAct != NULL)
; 879  : 				{
; 880  : 					pc.ptAct->partyGx = -1;
; 881  : 					pc.ptAct->partyGy = -1;
; 882  : 				}
; 883  : #endif
; 884  : 			}
; 885  : 			else
; 886  : 			{
; 887  : 				// ???????î?
; 888  : 				delPcLeader();

  0021c	e9 00 00 00 00	 jmp	 ?delPcLeader@@YAXXZ	; delPcLeader
$LN39@changePcAc:

; 889  : 			}
; 890  : 			break;
; 891  : 
; 892  : 		// ?îîºî«
; 893  : 		case 22:
; 894  : 			setPcWarpPoint(x, y);

  00221	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  00224	ff 75 08	 push	 DWORD PTR _x$[ebp]
  00227	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint

; 895  : 			setPcDir(dir);

  0022c	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  0022f	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir
  00234	83 c4 0c	 add	 esp, 12			; 0000000cH

; 896  : 			if(effectno == 1)

  00237	83 7d 18 01	 cmp	 DWORD PTR _effectno$[ebp], 1
  0023b	5e		 pop	 esi
  0023c	75 06		 jne	 SHORT $LN40@changePcAc

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  0023e	5d		 pop	 ebp

; 897  : 			{
; 898  : 				setPcWatch();

  0023f	e9 00 00 00 00	 jmp	 ?setPcWatch@@YAXXZ	; setPcWatch
$LN40@changePcAc:

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00244	5d		 pop	 ebp

; 899  : 			}
; 900  : 			else
; 901  : 			{
; 902  : 				delPcWatch();

  00245	e9 00 00 00 00	 jmp	 ?delPcWatch@@YAXXZ	; delPcWatch
$LN42@changePcAc:

; 903  : 			}
; 904  : 			break;
; 905  : 
; 906  : 		// ???????????î¡î·?î
; 907  : 		case 23:
; 908  : 			setPcNameColor(effectno);

  0024a	ff 75 18	 push	 DWORD PTR _effectno$[ebp]
  0024d	e8 00 00 00 00	 call	 ?setPcNameColor@@YAXH@Z	; setPcNameColor
  00252	83 c4 04	 add	 esp, 4
  00255	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00256	5d		 pop	 ebp
  00257	c3		 ret	 0
$LN43@changePcAc:

; 909  : 			break;
; 910  : #ifdef _STREET_VENDOR
; 911  : 		case 41:
; 912  : 			{
; 913  : 				CHAREXTRA *ext;
; 914  : 				if(pc.ptAct == NULL) break;

  00258	8b 35 ec 50 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20716
  0025e	85 f6		 test	 esi, esi
  00260	0f 84 88 02 00
	00		 je	 $LN75@changePcAc

; 915  : 				ext = (CHAREXTRA *)pc.ptAct->pYobi;

  00266	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]

; 916  : 				if(ext->ptStreetVendor){

  00269	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0026c	85 c0		 test	 eax, eax
  0026e	74 10		 je	 SHORT $LN45@changePcAc

; 917  : 					DeathAction(ext->ptStreetVendor);

  00270	50		 push	 eax
  00271	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00276	83 c4 04	 add	 esp, 4

; 918  : 					ext->ptStreetVendor = NULL;

  00279	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
$LN45@changePcAc:

; 919  : 				}
; 920  : 				ext->ptStreetVendor = GetAction(PRIO_CHR,0);

  00280	6a 00		 push	 0
  00282	6a 01		 push	 1
  00284	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00289	83 c4 08	 add	 esp, 8
  0028c	89 46 20	 mov	 DWORD PTR [esi+32], eax
  0028f	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00290	5d		 pop	 ebp
  00291	c3		 ret	 0
$LN46@changePcAc:

; 921  : 			}
; 922  : 			break;
; 923  : 		case 42:
; 924  : 			{
; 925  : 				CHAREXTRA *ext;
; 926  : 				if(pc.ptAct == NULL) break;

  00292	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00297	85 c0		 test	 eax, eax
  00299	0f 84 4f 02 00
	00		 je	 $LN75@changePcAc

; 927  : 				ext = (CHAREXTRA *)pc.ptAct->pYobi;

  0029f	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]

; 928  : 				if(ext->ptStreetVendor){

  002a2	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  002a5	85 c0		 test	 eax, eax
  002a7	0f 84 41 02 00
	00		 je	 $LN75@changePcAc

; 929  : 					DeathAction(ext->ptStreetVendor);

  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  002b3	83 c4 04	 add	 esp, 4

; 930  : 					ext->ptStreetVendor = NULL;

  002b6	c7 46 20 00 00
	00 00		 mov	 DWORD PTR [esi+32], 0
  002bd	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  002be	5d		 pop	 ebp
  002bf	c3		 ret	 0
$LN49@changePcAc:

; 931  : 				}
; 932  : 			}
; 933  : 			break;
; 934  : #endif
; 935  : 
; 936  : #ifdef _ANGEL_SUMMON
; 937  : 		case 34:
; 938  : 			setPcWarpPoint(x, y);

  002c0	ff 75 0c	 push	 DWORD PTR _y$[ebp]
  002c3	ff 75 08	 push	 DWORD PTR _x$[ebp]
  002c6	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint

; 939  : 			setPcDir(dir);

  002cb	ff 75 10	 push	 DWORD PTR _dir$[ebp]
  002ce	e8 00 00 00 00	 call	 ?setPcDir@@YAXH@Z	; setPcDir
  002d3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 940  : 			if(effectno == 1)

  002d6	83 7d 18 01	 cmp	 DWORD PTR _effectno$[ebp], 1
  002da	5e		 pop	 esi
  002db	75 06		 jne	 SHORT $LN50@changePcAc

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  002dd	5d		 pop	 ebp

; 941  : 			{
; 942  : 				setPcAngel();

  002de	e9 00 00 00 00	 jmp	 ?setPcAngel@@YAXXZ	; setPcAngel
$LN50@changePcAc:

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  002e3	5d		 pop	 ebp

; 943  : 			}
; 944  : 			else
; 945  : 			{
; 946  : 				delPcAngel();

  002e4	e9 00 00 00 00	 jmp	 ?delPcAngel@@YAXXZ	; delPcAngel
$LN52@changePcAc:

; 947  : 			}
; 948  : 			break;
; 949  : #endif
; 950  : #ifdef _ITEM_FIREWORK
; 951  : 		case 51:
; 952  : 			{
; 953  : 				CHAREXTRA *ext;
; 954  : 
; 955  : 				if (pc.ptAct == NULL)

  002e9	8b 35 ec 50 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20716
  002ef	85 f6		 test	 esi, esi
  002f1	0f 84 f7 01 00
	00		 je	 $LN75@changePcAc

; 956  : 					break;
; 957  : 				ext = (CHAREXTRA *)pc.ptAct->pYobi;

  002f7	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]

; 958  : 				if (ext->pActFirework[0])

  002fa	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  002fd	85 c0		 test	 eax, eax
  002ff	74 10		 je	 SHORT $LN54@changePcAc

; 959  : 				{
; 960  : 					DeathAction(ext->pActFirework[0]);

  00301	50		 push	 eax
  00302	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00307	83 c4 04	 add	 esp, 4

; 961  : 					ext->pActFirework[0] = NULL;

  0030a	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
$LN54@changePcAc:

; 962  : 				}
; 963  : 				if (ext->pActFirework[1])

  00311	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  00314	85 c0		 test	 eax, eax
  00316	74 10		 je	 SHORT $LN55@changePcAc

; 964  : 				{
; 965  : 					DeathAction(ext->pActFirework[1]);

  00318	50		 push	 eax
  00319	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0031e	83 c4 04	 add	 esp, 4

; 966  : 					ext->pActFirework[1] = NULL;

  00321	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
$LN55@changePcAc:

; 967  : 				}
; 968  : 				ext->pActFirework[0] = GetAction(PRIO_CHR, 0);

  00328	6a 00		 push	 0
  0032a	6a 01		 push	 1
  0032c	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction

; 969  : 				ext->pActFirework[0]->damage		= effectno;	// åç¨ damage æ¥å¨å­ type (effectno = type)

  00331	8b 55 18	 mov	 edx, DWORD PTR _effectno$[ebp]
  00334	83 c4 08	 add	 esp, 8
  00337	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0033a	89 90 b0 00 00
	00		 mov	 DWORD PTR [eax+176], edx

; 970  : 				ext->pActFirework[0]->anim_chr_no	= effectparam1;

  00340	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  00343	8b 45 1c	 mov	 eax, DWORD PTR _effectparam1$[ebp]
  00346	89 81 44 01 00
	00		 mov	 DWORD PTR [ecx+324], eax

; 971  : 				ext->pActFirework[0]->anim_no		= ANIM_STAND;

  0034c	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0034f	c7 80 4c 01 00
	00 03 00 00 00	 mov	 DWORD PTR [eax+332], 3

; 972  : 				ext->pActFirework[0]->anim_ang		= 1;

  00359	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0035c	c7 80 54 01 00
	00 01 00 00 00	 mov	 DWORD PTR [eax+340], 1

; 973  : 				ext->pActFirework[0]->dispPrio		= DISP_PRIO_RESERVE;

  00366	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00369	c6 40 15 14	 mov	 BYTE PTR [eax+21], 20	; 00000014H

; 974  : 				if (effectno == 3)

  0036d	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00372	83 fa 03	 cmp	 edx, 3
  00375	75 5f		 jne	 SHORT $LN56@changePcAc

; 975  : 				{
; 976  : 					ext->pActFirework[0]->gx		= pc.ptAct->gx + 3;

  00377	8b 88 b4 00 00
	00		 mov	 ecx, DWORD PTR [eax+180]
  0037d	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00380	03 ca		 add	 ecx, edx
  00382	89 88 b4 00 00
	00		 mov	 DWORD PTR [eax+180], ecx

; 977  : 					ext->pActFirework[0]->gy		= pc.ptAct->gy - 3;

  00388	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0038d	8b 88 b8 00 00
	00		 mov	 ecx, DWORD PTR [eax+184]
  00393	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00396	2b ca		 sub	 ecx, edx
  00398	89 88 b8 00 00
	00		 mov	 DWORD PTR [eax+184], ecx

; 978  : 					ext->pActFirework[0]->bufGx[0]	= pc.ptAct->gx;

  0039e	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  003a1	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  003a6	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]
  003ac	89 81 c4 00 00
	00		 mov	 DWORD PTR [ecx+196], eax

; 979  : 					ext->pActFirework[0]->bufGy[0]	= pc.ptAct->gy;

  003b2	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  003b7	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  003ba	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]
  003c0	89 81 ec 00 00
	00		 mov	 DWORD PTR [ecx+236], eax

; 985  : 				}
; 986  : 				ext->pActFirework[0]->actNo			= 0;

  003c6	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  003c9	5e		 pop	 esi
  003ca	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  003d4	5d		 pop	 ebp
  003d5	c3		 ret	 0
$LN56@changePcAc:

; 980  : 				}
; 981  : 				else
; 982  : 				{
; 983  : 					ext->pActFirework[0]->gx		= pc.ptAct->gx;

  003d6	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  003d9	8b 80 b4 00 00
	00		 mov	 eax, DWORD PTR [eax+180]
  003df	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 984  : 					ext->pActFirework[0]->gy		= pc.ptAct->gy;

  003e5	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  003ea	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  003ed	8b 80 b8 00 00
	00		 mov	 eax, DWORD PTR [eax+184]
  003f3	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 985  : 				}
; 986  : 				ext->pActFirework[0]->actNo			= 0;

  003f9	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  003fc	5e		 pop	 esi
  003fd	c7 80 ac 00 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+172], 0

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00407	5d		 pop	 ebp
  00408	c3		 ret	 0
$LN58@changePcAc:

; 987  : 			}
; 988  : 			break;
; 989  : #endif
; 990  : #ifdef ITEM_AURA_
; 991  : 		case 60:
; 992  : 		{
; 993  : 			CHAREXTRA* ext;
; 994  : 
; 995  : 			if (pc.ptAct == nullptr)

  00409	8b 35 ec 50 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20716
  0040f	85 f6		 test	 esi, esi
  00411	0f 84 d7 00 00
	00		 je	 $LN75@changePcAc

; 996  : 				break;
; 997  : 			ext = (CHAREXTRA*)pc.ptAct->pYobi;

  00417	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]

; 998  : 
; 999  : 			if (ext == nullptr) break;

  0041a	85 f6		 test	 esi, esi
  0041c	0f 84 cc 00 00
	00		 je	 $LN75@changePcAc

; 1000 : 
; 1001 : 			if (ext->ptActAura1 == nullptr)

  00422	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00425	85 c0		 test	 eax, eax
  00427	75 16		 jne	 SHORT $LN79@changePcAc

; 1002 : 			{
; 1003 : 				ext->ptActAura1 = GetAction(PRIO_CHR, 0);

  00429	50		 push	 eax
  0042a	6a 01		 push	 1
  0042c	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  00431	83 c4 08	 add	 esp, 8
  00434	89 46 38	 mov	 DWORD PTR [esi+56], eax

; 1004 : 			}
; 1005 : 
; 1006 : 			if (ext->ptActAura1 != nullptr)

  00437	85 c0		 test	 eax, eax
  00439	0f 84 af 00 00
	00		 je	 $LN75@changePcAc
$LN79@changePcAc:

; 1007 : 			{
; 1008 : 				if (effectno == 0)

  0043f	8b 4d 18	 mov	 ecx, DWORD PTR _effectno$[ebp]
  00442	85 c9		 test	 ecx, ecx
  00444	75 13		 jne	 SHORT $LN63@changePcAc

; 1009 : 				{
; 1010 : 					DeathAction(ext->ptActAura1);

  00446	50		 push	 eax
  00447	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0044c	83 c4 04	 add	 esp, 4

; 1011 : 					ext->ptActAura1 = nullptr;

  0044f	c7 46 38 00 00
	00 00		 mov	 DWORD PTR [esi+56], 0
  00456	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00457	5d		 pop	 ebp
  00458	c3		 ret	 0
$LN63@changePcAc:

; 1012 : 				}
; 1013 : 				else
; 1014 : 				{
; 1015 : 					ext->ptActAura1->anim_chr_no = effectno;

  00459	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 1016 : 					ext->ptActAura1->dispPrio = DISP_PRIO_CHAR - 1;

  0045f	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00462	c6 40 15 09	 mov	 BYTE PTR [eax+21], 9

; 1017 : 					ext->ptActAura1->anim_ang = 0;

  00466	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00469	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 1018 : 					ext->ptActAura1->anim_no = 0;

  00473	8b 46 38	 mov	 eax, DWORD PTR [esi+56]
  00476	5e		 pop	 esi

; 1050 : 					ext->ptActAura2->anim_no = 0;

  00477	c7 80 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+332], 0

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  00481	5d		 pop	 ebp
  00482	c3		 ret	 0
$LN65@changePcAc:

; 1019 : 				}
; 1020 : 			}
; 1021 : 			break;
; 1022 : 		}
; 1023 : 		case 61:
; 1024 : 		{
; 1025 : 			CHAREXTRA* ext;
; 1026 : 
; 1027 : 			if (pc.ptAct == nullptr)

  00483	8b 35 ec 50 00
	00		 mov	 esi, DWORD PTR ?pc@@3UPC@@A+20716
  00489	85 f6		 test	 esi, esi
  0048b	74 61		 je	 SHORT $LN75@changePcAc

; 1028 : 				break;
; 1029 : 			ext = (CHAREXTRA*)pc.ptAct->pYobi;

  0048d	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]

; 1030 : 
; 1031 : 			if (ext == nullptr) break;

  00490	85 f6		 test	 esi, esi
  00492	74 5a		 je	 SHORT $LN75@changePcAc

; 1032 : 
; 1033 : 			if (ext->ptActAura2 == nullptr)

  00494	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  00497	85 c0		 test	 eax, eax
  00499	75 12		 jne	 SHORT $LN82@changePcAc

; 1034 : 			{
; 1035 : 				ext->ptActAura2 = GetAction(PRIO_CHR, 0);

  0049b	50		 push	 eax
  0049c	6a 01		 push	 1
  0049e	e8 00 00 00 00	 call	 ?GetAction@@YAPAUaction@@EI@Z ; GetAction
  004a3	83 c4 08	 add	 esp, 8
  004a6	89 46 3c	 mov	 DWORD PTR [esi+60], eax

; 1036 : 			}
; 1037 : 
; 1038 : 			if (ext->ptActAura2 != nullptr)

  004a9	85 c0		 test	 eax, eax
  004ab	74 41		 je	 SHORT $LN75@changePcAc
$LN82@changePcAc:

; 1039 : 			{
; 1040 : 				if (effectno == 0)

  004ad	8b 4d 18	 mov	 ecx, DWORD PTR _effectno$[ebp]
  004b0	85 c9		 test	 ecx, ecx
  004b2	75 13		 jne	 SHORT $LN70@changePcAc

; 1041 : 				{
; 1042 : 					DeathAction(ext->ptActAura2);

  004b4	50		 push	 eax
  004b5	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  004ba	83 c4 04	 add	 esp, 4

; 1043 : 					ext->ptActAura2 = nullptr;

  004bd	c7 46 3c 00 00
	00 00		 mov	 DWORD PTR [esi+60], 0
  004c4	5e		 pop	 esi

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  004c5	5d		 pop	 ebp
  004c6	c3		 ret	 0
$LN70@changePcAc:

; 1044 : 				}
; 1045 : 				else
; 1046 : 				{
; 1047 : 					ext->ptActAura2->anim_chr_no = effectno;

  004c7	89 88 44 01 00
	00		 mov	 DWORD PTR [eax+324], ecx

; 1048 : 					ext->ptActAura2->dispPrio = DISP_PRIO_CHAR;

  004cd	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  004d0	c6 40 15 0a	 mov	 BYTE PTR [eax+21], 10	; 0000000aH

; 1049 : 					ext->ptActAura2->anim_ang = 0;

  004d4	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  004d7	c7 80 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+340], 0

; 1050 : 					ext->ptActAura2->anim_no = 0;

  004e1	8b 46 3c	 mov	 eax, DWORD PTR [esi+60]
  004e4	c7 80 4c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [eax+332], 0
$LN75@changePcAc:
  004ee	5e		 pop	 esi
$LN71@changePcAc:

; 1051 : 				}
; 1052 : 			}
; 1053 : 			break;
; 1054 : 		}
; 1055 : #endif
; 1056 : 
; 1057 : 	}
; 1058 : }

  004ef	5d		 pop	 ebp
  004f0	c3		 ret	 0
  004f1	0f 1f 00	 npad	 3
$LN74@changePcAc:
  004f4	00 00 00 00	 DD	 $LN4@changePcAc
  004f8	00 00 00 00	 DD	 $LN17@changePcAc
  004fc	00 00 00 00	 DD	 $LN18@changePcAc
  00500	00 00 00 00	 DD	 $LN19@changePcAc
  00504	00 00 00 00	 DD	 $LN20@changePcAc
  00508	00 00 00 00	 DD	 $LN25@changePcAc
  0050c	00 00 00 00	 DD	 $LN26@changePcAc
  00510	00 00 00 00	 DD	 $LN27@changePcAc
  00514	00 00 00 00	 DD	 $LN28@changePcAc
  00518	00 00 00 00	 DD	 $LN29@changePcAc
  0051c	00 00 00 00	 DD	 $LN30@changePcAc
  00520	00 00 00 00	 DD	 $LN31@changePcAc
  00524	00 00 00 00	 DD	 $LN32@changePcAc
  00528	00 00 00 00	 DD	 $LN33@changePcAc
  0052c	00 00 00 00	 DD	 $LN34@changePcAc
  00530	00 00 00 00	 DD	 $LN35@changePcAc
  00534	00 00 00 00	 DD	 $LN36@changePcAc
  00538	00 00 00 00	 DD	 $LN39@changePcAc
  0053c	00 00 00 00	 DD	 $LN42@changePcAc
  00540	00 00 00 00	 DD	 $LN16@changePcAc
  00544	00 00 00 00	 DD	 $LN15@changePcAc
  00548	00 00 00 00	 DD	 $LN49@changePcAc
  0054c	00 00 00 00	 DD	 $LN43@changePcAc
  00550	00 00 00 00	 DD	 $LN46@changePcAc
  00554	00 00 00 00	 DD	 $LN5@changePcAc
  00558	00 00 00 00	 DD	 $LN12@changePcAc
  0055c	00 00 00 00	 DD	 $LN9@changePcAc
  00560	00 00 00 00	 DD	 $LN52@changePcAc
  00564	00 00 00 00	 DD	 $LN58@changePcAc
  00568	00 00 00 00	 DD	 $LN65@changePcAc
  0056c	00 00 00 00	 DD	 $LN75@changePcAc
$LN73@changePcAc:
  00570	00		 DB	 0
  00571	01		 DB	 1
  00572	02		 DB	 2
  00573	03		 DB	 3
  00574	04		 DB	 4
  00575	05		 DB	 5
  00576	1e		 DB	 30			; 0000001eH
  00577	1e		 DB	 30			; 0000001eH
  00578	1e		 DB	 30			; 0000001eH
  00579	1e		 DB	 30			; 0000001eH
  0057a	05		 DB	 5
  0057b	06		 DB	 6
  0057c	07		 DB	 7
  0057d	08		 DB	 8
  0057e	09		 DB	 9
  0057f	0a		 DB	 10			; 0000000aH
  00580	0b		 DB	 11			; 0000000bH
  00581	0c		 DB	 12			; 0000000cH
  00582	0d		 DB	 13			; 0000000dH
  00583	0e		 DB	 14			; 0000000eH
  00584	0f		 DB	 15			; 0000000fH
  00585	10		 DB	 16			; 00000010H
  00586	11		 DB	 17			; 00000011H
  00587	12		 DB	 18			; 00000012H
  00588	1e		 DB	 30			; 0000001eH
  00589	1e		 DB	 30			; 0000001eH
  0058a	1e		 DB	 30			; 0000001eH
  0058b	1e		 DB	 30			; 0000001eH
  0058c	1e		 DB	 30			; 0000001eH
  0058d	1e		 DB	 30			; 0000001eH
  0058e	13		 DB	 19			; 00000013H
  0058f	14		 DB	 20			; 00000014H
  00590	1e		 DB	 30			; 0000001eH
  00591	1e		 DB	 30			; 0000001eH
  00592	15		 DB	 21			; 00000015H
  00593	1e		 DB	 30			; 0000001eH
  00594	1e		 DB	 30			; 0000001eH
  00595	1e		 DB	 30			; 0000001eH
  00596	1e		 DB	 30			; 0000001eH
  00597	1e		 DB	 30			; 0000001eH
  00598	1e		 DB	 30			; 0000001eH
  00599	16		 DB	 22			; 00000016H
  0059a	17		 DB	 23			; 00000017H
  0059b	18		 DB	 24			; 00000018H
  0059c	1e		 DB	 30			; 0000001eH
  0059d	19		 DB	 25			; 00000019H
  0059e	1a		 DB	 26			; 0000001aH
  0059f	1e		 DB	 30			; 0000001eH
  005a0	1e		 DB	 30			; 0000001eH
  005a1	1e		 DB	 30			; 0000001eH
  005a2	1e		 DB	 30			; 0000001eH
  005a3	1b		 DB	 27			; 0000001bH
  005a4	1e		 DB	 30			; 0000001eH
  005a5	1e		 DB	 30			; 0000001eH
  005a6	1e		 DB	 30			; 0000001eH
  005a7	1e		 DB	 30			; 0000001eH
  005a8	1e		 DB	 30			; 0000001eH
  005a9	1e		 DB	 30			; 0000001eH
  005aa	1e		 DB	 30			; 0000001eH
  005ab	1e		 DB	 30			; 0000001eH
  005ac	1c		 DB	 28			; 0000001cH
  005ad	1d		 DB	 29			; 0000001dH
?changePcAct@@YAXHHHHHHH@Z ENDP				; changePcAct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcWatch@@YAXXZ
_TEXT	SEGMENT
?delPcWatch@@YAXXZ PROC					; delPcWatch, COMDAT

; 576  : 	pc.status &= (~CHR_STATUS_WATCH);

  00000	81 25 a4 00 00
	00 ff bf ff ff	 and	 DWORD PTR ?pc@@3UPC@@A+164, -16385 ; ffffbfffH

; 577  : }

  0000a	c3		 ret	 0
?delPcWatch@@YAXXZ ENDP					; delPcWatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcWatch@@YAXXZ
_TEXT	SEGMENT
?setPcWatch@@YAXXZ PROC					; setPcWatch, COMDAT

; 569  : 	pc.status |= CHR_STATUS_WATCH;

  00000	81 0d a4 00 00
	00 00 40 00 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 16384 ; 00004000H

; 570  : }

  0000a	c3		 ret	 0
?setPcWatch@@YAXXZ ENDP					; setPcWatch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcParty@@YAXXZ
_TEXT	SEGMENT
?delPcParty@@YAXXZ PROC					; delPcParty, COMDAT

; 562  : 	pc.status &= (~CHR_STATUS_PARTY);

  00000	81 25 a4 00 00
	00 ff fd ff ff	 and	 DWORD PTR ?pc@@3UPC@@A+164, -513 ; fffffdffH

; 563  : }

  0000a	c3		 ret	 0
?delPcParty@@YAXXZ ENDP					; delPcParty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcParty@@YAXXZ
_TEXT	SEGMENT
?setPcParty@@YAXXZ PROC					; setPcParty, COMDAT

; 555  : 	pc.status |= CHR_STATUS_PARTY;

  00000	81 0d a4 00 00
	00 00 02 00 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 512 ; 00000200H

; 556  : }

  0000a	c3		 ret	 0
?setPcParty@@YAXXZ ENDP					; setPcParty
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?delPcLeader@@YAXXZ
_TEXT	SEGMENT
?delPcLeader@@YAXXZ PROC				; delPcLeader, COMDAT

; 548  : 	pc.status &= (~CHR_STATUS_LEADER);

  00000	81 25 a4 00 00
	00 ff fe ff ff	 and	 DWORD PTR ?pc@@3UPC@@A+164, -257 ; fffffeffH

; 549  : }

  0000a	c3		 ret	 0
?delPcLeader@@YAXXZ ENDP				; delPcLeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcLeader@@YAXXZ
_TEXT	SEGMENT
?setPcLeader@@YAXXZ PROC				; setPcLeader, COMDAT

; 541  : 	pc.status |= CHR_STATUS_LEADER;

  00000	81 0d a4 00 00
	00 00 01 00 00	 or	 DWORD PTR ?pc@@3UPC@@A+164, 256 ; 00000100H

; 542  : }

  0000a	c3		 ret	 0
?setPcLeader@@YAXXZ ENDP				; setPcLeader
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?updataPcAct@@YAXXZ
_TEXT	SEGMENT
?updataPcAct@@YAXXZ PROC				; updataPcAct, COMDAT

; 519  : 	if(pc.ptAct == NULL)

  00000	8b 15 ec 50 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20716
  00006	85 d2		 test	 edx, edx
  00008	0f 84 97 00 00
	00		 je	 $LN1@updataPcAc

; 520  : 		return;
; 521  : 
; 522  : 	if(strlen(pc.name) <= CHAR_NAME_LEN)

  0000e	b9 70 00 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+112
  00013	56		 push	 esi
  00014	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
$LL14@updataPcAc:
  00017	8a 01		 mov	 al, BYTE PTR [ecx]
  00019	41		 inc	 ecx
  0001a	84 c0		 test	 al, al
  0001c	75 f9		 jne	 SHORT $LL14@updataPcAc
  0001e	2b ce		 sub	 ecx, esi
  00020	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00023	77 1f		 ja	 SHORT $LN3@updataPcAc

; 523  : 	{
; 524  : 		strcpy(pc.ptAct->name, pc.name);

  00025	b9 70 00 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+112
  0002a	83 c2 38	 add	 edx, 56			; 00000038H
  0002d	0f 1f 00	 npad	 3
$LL6@updataPcAc:
  00030	8a 01		 mov	 al, BYTE PTR [ecx]
  00032	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00035	88 02		 mov	 BYTE PTR [edx], al
  00037	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  0003a	84 c0		 test	 al, al
  0003c	75 f2		 jne	 SHORT $LL6@updataPcAc
  0003e	8b 15 ec 50 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20716
$LN3@updataPcAc:

; 525  : 	}
; 526  : 	if(strlen(pc.freeName) <= CHAR_FREENAME_LEN)

  00044	b9 81 00 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+129
  00049	8d 71 01	 lea	 esi, DWORD PTR [ecx+1]
  0004c	0f 1f 40 00	 npad	 4
$LL15@updataPcAc:
  00050	8a 01		 mov	 al, BYTE PTR [ecx]
  00052	41		 inc	 ecx
  00053	84 c0		 test	 al, al
  00055	75 f9		 jne	 SHORT $LL15@updataPcAc
  00057	2b ce		 sub	 ecx, esi
  00059	5e		 pop	 esi
  0005a	83 f9 20	 cmp	 ecx, 32			; 00000020H
  0005d	77 1c		 ja	 SHORT $LN4@updataPcAc

; 527  : 	{
; 528  : 		strcpy(pc.ptAct->freeName, pc.freeName);

  0005f	b9 81 00 00 00	 mov	 ecx, OFFSET ?pc@@3UPC@@A+129
  00064	83 c2 55	 add	 edx, 85			; 00000055H
$LL7@updataPcAc:
  00067	8a 01		 mov	 al, BYTE PTR [ecx]
  00069	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0006c	88 02		 mov	 BYTE PTR [edx], al
  0006e	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00071	84 c0		 test	 al, al
  00073	75 f2		 jne	 SHORT $LL7@updataPcAc
  00075	8b 15 ec 50 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20716
$LN4@updataPcAc:

; 529  : 	}
; 530  : 	pc.ptAct->level = pc.level;

  0007b	a1 38 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+56
  00080	89 82 8c 00 00
	00		 mov	 DWORD PTR [edx+140], eax

; 531  : 	pc.ptAct->hp    = pc.hp;

  00086	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  0008c	a1 10 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+16
  00091	89 41 78	 mov	 DWORD PTR [ecx+120], eax

; 532  : 	pc.ptAct->maxHp = pc.maxHp;

  00094	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  0009a	a1 14 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20
  0009f	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax
$LN1@updataPcAc:

; 533  : 
; 534  : 
; 535  : }

  000a5	c3		 ret	 0
?updataPcAct@@YAXXZ ENDP				; updataPcAct
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcParam@@YAXPAD0H0HHHHHHHH@Z
_TEXT	SEGMENT
_petnameLen$1$ = -8					; size = 4
tv401 = -4						; size = 4
tv399 = -4						; size = 4
_name$ = 8						; size = 4
_freeName$ = 12						; size = 4
_level$ = 16						; size = 4
_petname$ = 20						; size = 4
_petlevel$ = 24						; size = 4
_nameColor$ = 28					; size = 4
_walk$ = 32						; size = 4
_height$ = 36						; size = 4
_profession_class$ = 40					; size = 4
_profession_level$ = 44					; size = 4
_profession_skill_point$ = 48				; size = 4
_herofloor$ = 52					; size = 4
?setPcParam@@YAXPAD0H0HHHHHHHH@Z PROC			; setPcParam, COMDAT

; 425  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx
  00007	56		 push	 esi
  00008	57		 push	 edi

; 426  : 	int nameLen;
; 427  : 	int freeNameLen;
; 428  : 	int petnameLen;
; 429  : #ifdef _GM_IDENTIFY		// Rog ADD GMè¯å«
; 430  : 	int gmnameLen;
; 431  : #endif
; 432  : 	nameLen = strlen(name);

  00009	8b 7d 08	 mov	 edi, DWORD PTR _name$[ebp]
  0000c	8b d7		 mov	 edx, edi
  0000e	8d 4a 01	 lea	 ecx, DWORD PTR [edx+1]
$LL37@setPcParam:
  00011	8a 02		 mov	 al, BYTE PTR [edx]
  00013	42		 inc	 edx
  00014	84 c0		 test	 al, al
  00016	75 f9		 jne	 SHORT $LL37@setPcParam
  00018	2b d1		 sub	 edx, ecx

; 433  : 	if(nameLen <= CHAR_NAME_LEN)

  0001a	83 fa 10	 cmp	 edx, 16			; 00000010H
  0001d	7f 1e		 jg	 SHORT $LN2@setPcParam

; 434  : 	{
; 435  : 		strcpy(pc.name, name);

  0001f	be 70 00 00 00	 mov	 esi, OFFSET ?pc@@3UPC@@A+112
  00024	8b cf		 mov	 ecx, edi
  00026	2b f7		 sub	 esi, edi
  00028	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL13@setPcParam:
  00030	8a 01		 mov	 al, BYTE PTR [ecx]
  00032	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00035	88 44 0e ff	 mov	 BYTE PTR [esi+ecx-1], al
  00039	84 c0		 test	 al, al
  0003b	75 f3		 jne	 SHORT $LL13@setPcParam
$LN2@setPcParam:

; 436  : 	}
; 437  : 
; 438  : 	freeNameLen = strlen(freeName);

  0003d	8b 5d 0c	 mov	 ebx, DWORD PTR _freeName$[ebp]
  00040	8b fb		 mov	 edi, ebx
  00042	8d 4f 01	 lea	 ecx, DWORD PTR [edi+1]
$LL38@setPcParam:
  00045	8a 07		 mov	 al, BYTE PTR [edi]
  00047	47		 inc	 edi
  00048	84 c0		 test	 al, al
  0004a	75 f9		 jne	 SHORT $LL38@setPcParam
  0004c	2b f9		 sub	 edi, ecx

; 439  : 	if(freeNameLen <= CHAR_FREENAME_LEN)

  0004e	83 ff 20	 cmp	 edi, 32			; 00000020H
  00051	7f 1a		 jg	 SHORT $LN3@setPcParam

; 440  : 	{
; 441  : 		strcpy(pc.freeName, freeName);

  00053	be 81 00 00 00	 mov	 esi, OFFSET ?pc@@3UPC@@A+129
  00058	8b cb		 mov	 ecx, ebx
  0005a	2b f3		 sub	 esi, ebx
  0005c	0f 1f 40 00	 npad	 4
$LL14@setPcParam:
  00060	8a 01		 mov	 al, BYTE PTR [ecx]
  00062	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  00065	88 44 0e ff	 mov	 BYTE PTR [esi+ecx-1], al
  00069	84 c0		 test	 al, al
  0006b	75 f3		 jne	 SHORT $LL14@setPcParam
$LN3@setPcParam:

; 442  : 	}
; 443  : 
; 444  : 	pc.level = level;
; 445  : 
; 446  : 	petnameLen = strlen(petname);

  0006d	8b 75 14	 mov	 esi, DWORD PTR _petname$[ebp]
  00070	8b ce		 mov	 ecx, esi
  00072	8b 45 10	 mov	 eax, DWORD PTR _level$[ebp]
  00075	a3 38 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+56, eax
  0007a	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0007d	89 45 fc	 mov	 DWORD PTR tv399[ebp], eax
$LL39@setPcParam:
  00080	8a 01		 mov	 al, BYTE PTR [ecx]
  00082	41		 inc	 ecx
  00083	84 c0		 test	 al, al
  00085	75 f9		 jne	 SHORT $LL39@setPcParam
  00087	2b 4d fc	 sub	 ecx, DWORD PTR tv399[ebp]
  0008a	89 4d f8	 mov	 DWORD PTR _petnameLen$1$[ebp], ecx

; 447  : 	if(petnameLen <= CHAR_FREENAME_LEN)

  0008d	83 f9 20	 cmp	 ecx, 32			; 00000020H
  00090	7f 1e		 jg	 SHORT $LN4@setPcParam

; 448  : 	{
; 449  : 		strcpy(pc.ridePetName, petname);

  00092	b8 24 51 00 00	 mov	 eax, OFFSET ?pc@@3UPC@@A+20772
  00097	8b ce		 mov	 ecx, esi
  00099	2b c6		 sub	 eax, esi
  0009b	8b d8		 mov	 ebx, eax
  0009d	0f 1f 00	 npad	 3
$LL15@setPcParam:
  000a0	8a 01		 mov	 al, BYTE PTR [ecx]
  000a2	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  000a5	88 44 0b ff	 mov	 BYTE PTR [ebx+ecx-1], al
  000a9	84 c0		 test	 al, al
  000ab	75 f3		 jne	 SHORT $LL15@setPcParam
  000ad	8b 5d 0c	 mov	 ebx, DWORD PTR _freeName$[ebp]
$LN4@setPcParam:

; 450  : 	}
; 451  : 
; 452  : 	pc.ridePetLevel = petlevel;
; 453  : 
; 454  : 	pc.nameColor = nameColor;
; 455  : 	if(walk != 0)		// ??î¯?î??

  000b0	83 7d 20 00	 cmp	 DWORD PTR _walk$[ebp], 0
  000b4	8b 45 18	 mov	 eax, DWORD PTR _petlevel$[ebp]
  000b7	a3 48 51 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20808, eax
  000bc	8b 45 1c	 mov	 eax, DWORD PTR _nameColor$[ebp]
  000bf	66 a3 a2 00 00
	00		 mov	 WORD PTR ?pc@@3UPC@@A+162, ax
  000c5	a1 a4 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+164
  000ca	74 08		 je	 SHORT $LN5@setPcParam

; 456  : 	{
; 457  : 		pc.status |= CHR_STATUS_W;

  000cc	83 c8 40	 or	 eax, 64			; 00000040H
  000cf	a3 a4 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+164, eax
$LN5@setPcParam:

; 458  : 	}
; 459  : 	if(height != 0)	// ?????

  000d4	83 7d 24 00	 cmp	 DWORD PTR _height$[ebp], 0
  000d8	74 0a		 je	 SHORT $LN6@setPcParam

; 460  : 	{
; 461  : 		pc.status |= CHR_STATUS_H;

  000da	0d 80 00 00 00	 or	 eax, 128		; 00000080H
  000df	a3 a4 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+164, eax
$LN6@setPcParam:

; 462  : 	}
; 463  : 
; 464  : 	if(pc.ptAct == NULL)

  000e4	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  000e9	85 c0		 test	 eax, eax
  000eb	0f 84 ca 00 00
	00		 je	 $LN11@setPcParam

; 465  : 		return;
; 466  : 
; 467  : 	if(nameLen <= CHAR_NAME_LEN)

  000f1	83 fa 10	 cmp	 edx, 16			; 00000010H
  000f4	7f 1d		 jg	 SHORT $LN8@setPcParam

; 468  : 	{
; 469  : 		strcpy(pc.ptAct->name, name);

  000f6	8b 55 08	 mov	 edx, DWORD PTR _name$[ebp]
  000f9	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  000fc	0f 1f 40 00	 npad	 4
$LL16@setPcParam:
  00100	8a 02		 mov	 al, BYTE PTR [edx]
  00102	8d 52 01	 lea	 edx, DWORD PTR [edx+1]
  00105	88 01		 mov	 BYTE PTR [ecx], al
  00107	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0010a	84 c0		 test	 al, al
  0010c	75 f2		 jne	 SHORT $LL16@setPcParam
  0010e	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
$LN8@setPcParam:

; 470  : 	}
; 471  : 	if(freeNameLen <= CHAR_FREENAME_LEN)

  00113	83 ff 20	 cmp	 edi, 32			; 00000020H
  00116	7f 1b		 jg	 SHORT $LN9@setPcParam

; 472  : 	{
; 473  : 		strcpy(pc.ptAct->freeName, freeName);

  00118	8d 48 55	 lea	 ecx, DWORD PTR [eax+85]
  0011b	0f 1f 44 00 00	 npad	 5
$LL17@setPcParam:
  00120	8a 03		 mov	 al, BYTE PTR [ebx]
  00122	8d 5b 01	 lea	 ebx, DWORD PTR [ebx+1]
  00125	88 01		 mov	 BYTE PTR [ecx], al
  00127	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0012a	84 c0		 test	 al, al
  0012c	75 f2		 jne	 SHORT $LL17@setPcParam
  0012e	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
$LN9@setPcParam:

; 474  : 	}
; 475  : 	pc.ptAct->level = level;
; 476  : 	
; 477  : 	if(petnameLen <= CHAR_FREENAME_LEN)

  00133	83 7d f8 20	 cmp	 DWORD PTR _petnameLen$1$[ebp], 32 ; 00000020H
  00137	8b 4d 10	 mov	 ecx, DWORD PTR _level$[ebp]
  0013a	89 88 8c 00 00
	00		 mov	 DWORD PTR [eax+140], ecx
  00140	7f 1c		 jg	 SHORT $LN10@setPcParam

; 478  : 	{
; 479  : 		strcpy(pc.ptAct->petName, petname);

  00142	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00148	81 c1 98 01 00
	00		 add	 ecx, 408		; 00000198H
  0014e	66 90		 npad	 2
$LL18@setPcParam:
  00150	8a 06		 mov	 al, BYTE PTR [esi]
  00152	8d 76 01	 lea	 esi, DWORD PTR [esi+1]
  00155	88 01		 mov	 BYTE PTR [ecx], al
  00157	8d 49 01	 lea	 ecx, DWORD PTR [ecx+1]
  0015a	84 c0		 test	 al, al
  0015c	75 f2		 jne	 SHORT $LL18@setPcParam
$LN10@setPcParam:

; 480  : 	}
; 481  : 	pc.ptAct->petLevel = petlevel;

  0015e	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00163	8b 4d 18	 mov	 ecx, DWORD PTR _petlevel$[ebp]
  00166	89 88 ac 01 00
	00		 mov	 DWORD PTR [eax+428], ecx

; 482  : 
; 483  : 	pc.ptAct->itemNameColor = nameColor;

  0016c	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00171	8b 4d 1c	 mov	 ecx, DWORD PTR _nameColor$[ebp]
  00174	89 88 94 00 00
	00		 mov	 DWORD PTR [eax+148], ecx

; 484  : 
; 485  : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸
; 486  : 	pc.profession_class	= profession_class;
; 487  : 	pc.ptAct->profession_class = profession_class;

  0017a	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0017f	8b 4d 28	 mov	 ecx, DWORD PTR _profession_class$[ebp]
  00182	89 0d 84 a1 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A+41348, ecx
  00188	89 88 e0 01 00
	00		 mov	 DWORD PTR [eax+480], ecx

; 488  : 	pc.profession_level = profession_level;
; 489  : //	pc.profession_exp = profession_exp;
; 490  : 	pc.profession_skill_point = profession_skill_point;
; 491  : #endif
; 492  : #ifdef _ALLDOMAN // (ä¸å¯å¼) Syu ADD æè¡æ¦NPC
; 493  : 	pc.herofloor = herofloor;
; 494  : #endif
; 495  : #ifdef _GM_IDENTIFY		// Rog ADD GMè¯å«
; 496  : 	gmnameLen = strlen(gm_name);
; 497  : 	if(gmnameLen <= 33){
; 498  : 		strcpy(pc.ptAct->gm_name, gm_name);
; 499  : 	}
; 500  : #endif
; 501  : 
; 502  : #ifdef _CHANNEL_MODIFY
; 503  : 	if(pc.profession_class == 0){

  0018e	83 3d 84 a1 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+41348, 0
  00195	8b 45 2c	 mov	 eax, DWORD PTR _profession_level$[ebp]
  00198	a3 88 a1 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41352, eax
  0019d	8b 45 30	 mov	 eax, DWORD PTR _profession_skill_point$[ebp]
  001a0	a3 8c a1 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41356, eax
  001a5	8b 45 34	 mov	 eax, DWORD PTR _herofloor$[ebp]
  001a8	a3 b0 a1 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41392, eax
  001ad	75 0c		 jne	 SHORT $LN11@setPcParam

; 504  : 		pc.etcFlag &= ~PC_ETCFLAG_CHAT_OCC;

  001af	b8 ff fe 00 00	 mov	 eax, 65279		; 0000feffH
  001b4	66 21 05 a8 00
	00 00		 and	 WORD PTR ?pc@@3UPC@@A+168, ax
$LN11@setPcParam:

; 505  : 		//TalkMode = 0;
; 506  : 	}
; 507  : #endif
; 508  : #ifdef _NB_æå­ç§°å·
; 509  : 	if( strlen( newname ) <= CHAR_NAME_LEN )
; 510  : 		strcpy(pc.ptAct->nb_name, newname);
; 511  : 	pc.nb_namecolor = newnamecolor;
; 512  : #endif
; 513  : }

  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	5b		 pop	 ebx
  001be	8b e5		 mov	 esp, ebp
  001c0	5d		 pop	 ebp
  001c1	c3		 ret	 0
?setPcParam@@YAXPAD0H0HHHHHHHH@Z ENDP			; setPcParam
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?getPcAction@@YAHXZ
_TEXT	SEGMENT
?getPcAction@@YAHXZ PROC				; getPcAction, COMDAT

; 396  : 	if(pc.ptAct == NULL)

  00000	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00005	85 c0		 test	 eax, eax
  00007	75 04		 jne	 SHORT $LN2@getPcActio

; 397  : 		return -1;

  00009	83 c8 ff	 or	 eax, -1

; 400  : }

  0000c	c3		 ret	 0
$LN2@getPcActio:

; 398  : 
; 399  : 	return pc.ptAct->anim_no;

  0000d	8b 80 4c 01 00
	00		 mov	 eax, DWORD PTR [eax+332]

; 400  : }

  00013	c3		 ret	 0
?getPcAction@@YAHXZ ENDP				; getPcAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcAction@@YAXH@Z
_TEXT	SEGMENT
_act$ = 8						; size = 4
?setPcAction@@YAXH@Z PROC				; setPcAction, COMDAT

; 366  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 367  : 	if(pc.ptAct == NULL)

  00003	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00009	85 c9		 test	 ecx, ecx
  0000b	74 21		 je	 SHORT $LN3@setPcActio

; 368  : 		return;
; 369  : 
; 370  : 	pc.ptAct->anim_no = act;

  0000d	8b 45 08	 mov	 eax, DWORD PTR _act$[ebp]
  00010	89 81 4c 01 00
	00		 mov	 DWORD PTR [ecx+332], eax

; 371  : 	if(pc.ptAct->anim_no != ANIM_WALK)

  00016	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0001b	83 b8 4c 01 00
	00 04		 cmp	 DWORD PTR [eax+332], 4
  00022	74 0a		 je	 SHORT $LN3@setPcActio

; 372  : 	{
; 373  : 		pc.ptAct->anim_no_bak = -1;

  00024	c7 80 50 01 00
	00 ff ff ff ff	 mov	 DWORD PTR [eax+336], -1
$LN3@setPcActio:

; 374  : 	}
; 375  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
?setPcAction@@YAXH@Z ENDP				; setPcAction
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcDir@@YAXH@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?setPcDir@@YAXH@Z PROC					; setPcDir, COMDAT

; 354  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 355  : 	pc.dir = dir;
; 356  : 
; 357  : 	if(pc.ptAct == NULL)

  00003	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00009	8b 45 08	 mov	 eax, DWORD PTR _dir$[ebp]
  0000c	a3 0c 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+12, eax
  00011	85 c9		 test	 ecx, ecx
  00013	74 06		 je	 SHORT $LN1@setPcDir

; 358  : 		return;
; 359  : 
; 360  : 	pc.ptAct->anim_ang = dir;

  00015	89 81 54 01 00
	00		 mov	 DWORD PTR [ecx+340], eax
$LN1@setPcDir:

; 361  : }

  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
?setPcDir@@YAXH@Z ENDP					; setPcDir
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcId@@YAXH@Z
_TEXT	SEGMENT
_id$ = 8						; size = 4
?setPcId@@YAXH@Z PROC					; setPcId, COMDAT

; 320  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 321  : 	pc.id = id;

  00003	8b 45 08	 mov	 eax, DWORD PTR _id$[ebp]
  00006	a3 08 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+8, eax

; 322  : }

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
?setPcId@@YAXH@Z ENDP					; setPcId
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcGraNo@@YAXHH@Z
_TEXT	SEGMENT
_graNo$ = 8						; size = 4
_dir$ = 12						; size = 4
?setPcGraNo@@YAXHH@Z PROC				; setPcGraNo, COMDAT

; 306  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 307  : 	pc.graNo = graNo;
; 308  : 	pc.dir = dir;
; 309  : 
; 310  : 	if(pc.ptAct == NULL)

  00003	8b 15 ec 50 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+20716
  00009	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]
  0000c	8b 4d 0c	 mov	 ecx, DWORD PTR _dir$[ebp]
  0000f	a3 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A, eax
  00014	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A+12, ecx
  0001a	85 d2		 test	 edx, edx
  0001c	74 11		 je	 SHORT $LN1@setPcGraNo

; 311  : 		return;
; 312  : 
; 313  : 	pc.ptAct->anim_chr_no = graNo;

  0001e	89 82 44 01 00
	00		 mov	 DWORD PTR [edx+324], eax

; 314  : 	pc.ptAct->anim_ang = dir;

  00024	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00029	89 88 54 01 00
	00		 mov	 DWORD PTR [eax+340], ecx
$LN1@setPcGraNo:

; 315  : }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
?setPcGraNo@@YAXHH@Z ENDP				; setPcGraNo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcPoint@@YAXXZ
_TEXT	SEGMENT
?setPcPoint@@YAXXZ PROC					; setPcPoint, COMDAT

; 338  : 	if(pc.ptAct == NULL)

  00000	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00005	85 c0		 test	 eax, eax
  00007	0f 84 93 00 00
	00		 je	 $LN1@setPcPoint

; 339  : 		return;
; 340  : 
; 341  : 	pc.ptAct->mx = nowX;

  0000d	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowX@@3MA
  00015	f3 0f 11 80 18
	01 00 00	 movss	 DWORD PTR [eax+280], xmm0

; 342  : 	pc.ptAct->my = nowY;

  0001d	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00022	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowY@@3MA
  0002a	f3 0f 11 80 1c
	01 00 00	 movss	 DWORD PTR [eax+284], xmm0

; 343  : 	pc.ptAct->gx = nowGx;

  00032	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGx@@3HA ; nowGx
  0003d	89 81 b4 00 00
	00		 mov	 DWORD PTR [ecx+180], eax

; 344  : 	pc.ptAct->gy = nowGy;

  00043	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nowGy@@3HA ; nowGy
  0004e	89 81 b8 00 00
	00		 mov	 DWORD PTR [ecx+184], eax

; 345  : 	pc.ptAct->vx = nowVx;

  00054	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00059	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVx@@3MA
  00061	f3 0f 11 80 20
	01 00 00	 movss	 DWORD PTR [eax+288], xmm0

; 346  : 	pc.ptAct->vy = nowVy;

  00069	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0006e	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?nowVy@@3MA
  00076	f3 0f 11 80 24
	01 00 00	 movss	 DWORD PTR [eax+292], xmm0

; 347  : 	pc.ptAct->nextGx = nextGx;

  0007e	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextGx@@3HA ; nextGx
  00089	89 81 bc 00 00
	00		 mov	 DWORD PTR [ecx+188], eax

; 348  : 	pc.ptAct->nextGy = nextGy;

  0008f	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00095	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nextGy@@3HA ; nextGy
  0009a	89 81 c0 00 00
	00		 mov	 DWORD PTR [ecx+192], eax
$LN1@setPcPoint:

; 349  : }

  000a0	c3		 ret	 0
?setPcPoint@@YAXXZ ENDP					; setPcPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?setPcWarpPoint@@YAXHH@Z
_TEXT	SEGMENT
_gx$ = 8						; size = 4
_gy$ = 12						; size = 4
?setPcWarpPoint@@YAXHH@Z PROC				; setPcWarpPoint, COMDAT

; 328  : //	if(pc.ptAct == NULL)
; 329  : //		return;
; 330  : 
; 331  : 	setWarpMap(gx, gy);

  00000	e9 00 00 00 00	 jmp	 ?setWarpMap@@YAXHH@Z	; setWarpMap
?setPcWarpPoint@@YAXHH@Z ENDP				; setPcWarpPoint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?resetPc@@YAXXZ
_TEXT	SEGMENT
__$EHRec$ = -16						; size = 16
?resetPc@@YAXXZ PROC					; resetPc, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?resetPc@@YAXXZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	53		 push	 ebx
  00013	56		 push	 esi
  00014	57		 push	 edi
  00015	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001a	33 c5		 xor	 eax, ebp
  0001c	50		 push	 eax
  0001d	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00020	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00026	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp

; 254  : 	int i;
; 255  : 
; 256  : 	try

  00029	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 257  : 	{
; 258  : 		if (pc.ptAct != NULL)

  00030	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00036	85 c9		 test	 ecx, ecx
  00038	0f 84 b3 00 00
	00		 je	 $LN3@resetPc

; 259  : 		{
; 260  : #ifdef _ITEM_FIREWORK
; 261  : 			if (((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[0])

  0003e	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00041	8b 40 28	 mov	 eax, DWORD PTR [eax+40]
  00044	85 c0		 test	 eax, eax
  00046	74 1e		 je	 SHORT $LN4@resetPc

; 262  : 			{
; 263  : 				DeathAction(((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[0]);

  00048	50		 push	 eax
  00049	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0004e	83 c4 04	 add	 esp, 4

; 264  : 				((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[0] = NULL;

  00051	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  00056	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00059	c7 40 28 00 00
	00 00		 mov	 DWORD PTR [eax+40], 0
  00060	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
$LN4@resetPc:

; 265  : 			}
; 266  : 			if (((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[1])

  00066	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00069	8b 40 2c	 mov	 eax, DWORD PTR [eax+44]
  0006c	85 c0		 test	 eax, eax
  0006e	74 1e		 je	 SHORT $LN5@resetPc

; 267  : 			{
; 268  : 				DeathAction(((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[1]);

  00070	50		 push	 eax
  00071	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00076	83 c4 04	 add	 esp, 4

; 269  : 				((CHAREXTRA*)pc.ptAct->pYobi)->pActFirework[1] = NULL;

  00079	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  0007e	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00081	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
  00088	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
$LN5@resetPc:

; 270  : 			}
; 271  : #endif
; 272  : #ifdef ITEM_AURA_
; 273  : 			if (((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura1)

  0008e	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00091	8b 40 38	 mov	 eax, DWORD PTR [eax+56]
  00094	85 c0		 test	 eax, eax
  00096	74 1e		 je	 SHORT $LN6@resetPc

; 274  : 			{
; 275  : 				DeathAction(((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura1);

  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  0009e	83 c4 04	 add	 esp, 4

; 276  : 				((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura1 = nullptr;

  000a1	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  000a6	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000a9	c7 40 38 00 00
	00 00		 mov	 DWORD PTR [eax+56], 0
  000b0	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
$LN6@resetPc:

; 277  : 			}
; 278  : 			if (((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura2)

  000b6	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  000b9	8b 40 3c	 mov	 eax, DWORD PTR [eax+60]
  000bc	85 c0		 test	 eax, eax
  000be	74 1e		 je	 SHORT $LN7@resetPc

; 279  : 			{
; 280  : 				DeathAction(((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura2);

  000c0	50		 push	 eax
  000c1	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000c6	83 c4 04	 add	 esp, 4

; 281  : 				((CHAREXTRA*)pc.ptAct->pYobi)->ptActAura2 = nullptr;

  000c9	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  000ce	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000d1	c7 40 3c 00 00
	00 00		 mov	 DWORD PTR [eax+60], 0
  000d8	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
$LN7@resetPc:

; 282  : 			}
; 283  : #endif
; 284  : 
; 285  : 			DeathAction(pc.ptAct);

  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  000e4	83 c4 04	 add	 esp, 4

; 286  : 			pc.ptAct = NULL;

  000e7	c7 05 ec 50 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20716, 0
$LN3@resetPc:

; 287  : 		}
; 288  : 
; 289  : 		delPcLeader();

  000f1	e8 00 00 00 00	 call	 ?delPcLeader@@YAXXZ	; delPcLeader
$LN12@resetPc:

; 295  : 	}
; 296  : 
; 297  : 
; 298  : 
; 299  : 	// ????????î????
; 300  : 
; 301  : }

  000f6	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  000fd	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00107	59		 pop	 ecx
  00108	5f		 pop	 edi
  00109	5e		 pop	 esi
  0010a	5b		 pop	 ebx
  0010b	8b e5		 mov	 esp, ebp
  0010d	5d		 pop	 ebp
  0010e	c3		 ret	 0
__catch$?resetPc@@YAXXZ$0:

; 290  : 	}
; 291  : 	catch (...)
; 292  : 	{
; 293  : 		pc.ptAct = NULL;

  0010f	c7 05 ec 50 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20716, 0

; 294  : 		return;

  00119	b8 00 00 00 00	 mov	 eax, $LN12@resetPc
  0011e	c3		 ret	 0
  0011f	cc		 int	 3
  00120	cc		 int	 3
  00121	cc		 int	 3
  00122	cc		 int	 3
  00123	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?resetPc@@YAXXZ:
  00000	90		 npad	 1
  00001	90		 npad	 1
  00002	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00006	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00009	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  0000c	33 c8		 xor	 ecx, eax
  0000e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00013	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?resetPc@@YAXXZ
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?resetPc@@YAXXZ ENDP					; resetPc
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?createPc@@YAXHHHH@Z
_TEXT	SEGMENT
_graNo$ = 8						; size = 4
_gx$ = 12						; size = 4
_gy$ = 16						; size = 4
_dir$ = 20						; size = 4
?createPc@@YAXHHHH@Z PROC				; createPc, COMDAT

; 231  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 232  : 	pc.graNo = graNo;
; 233  : 	pc.dir = dir;
; 234  : 	if(pc.ptAct == NULL)

  00003	83 3d ec 50 00
	00 00		 cmp	 DWORD PTR ?pc@@3UPC@@A+20716, 0
  0000a	8b 4d 14	 mov	 ecx, DWORD PTR _dir$[ebp]
  0000d	8b 45 08	 mov	 eax, DWORD PTR _graNo$[ebp]
  00010	a3 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A, eax
  00015	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?pc@@3UPC@@A+12, ecx
  0001b	51		 push	 ecx
  0001c	75 24		 jne	 SHORT $LN2@createPc

; 235  : 	{
; 236  : 		pc.ptAct = createCharAction(graNo, gx, gy, dir);

  0001e	ff 75 10	 push	 DWORD PTR _gy$[ebp]
  00021	ff 75 0c	 push	 DWORD PTR _gx$[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ?createCharAction@@YAPAUaction@@HHHH@Z ; createCharAction
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	a3 ec 50 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+20716, eax

; 237  : 		if(pc.ptAct != NULL)

  00032	85 c0		 test	 eax, eax
  00034	74 0a		 je	 SHORT $LN3@createPc

; 238  : 		{
; 239  : 			pc.ptAct->atr |= ACT_ATR_TYPE_PC;

  00036	81 88 a4 00 00
	00 80 00 00 00	 or	 DWORD PTR [eax+164], 128 ; 00000080H
$LN3@createPc:

; 247  : 	}
; 248  : }

  00040	5d		 pop	 ebp
  00041	c3		 ret	 0
$LN2@createPc:

; 240  : 		}
; 241  : 	}
; 242  : 	else
; 243  : 	{
; 244  : 		setPcGraNo(graNo, dir);

  00042	50		 push	 eax
  00043	e8 00 00 00 00	 call	 ?setPcGraNo@@YAXHH@Z	; setPcGraNo

; 245  : 		setPcWarpPoint(gx, gy);

  00048	ff 75 10	 push	 DWORD PTR _gy$[ebp]
  0004b	ff 75 0c	 push	 DWORD PTR _gx$[ebp]
  0004e	e8 00 00 00 00	 call	 ?setPcWarpPoint@@YAXHH@Z ; setPcWarpPoint
  00053	83 c4 10	 add	 esp, 16			; 00000010H

; 247  : 	}
; 248  : }

  00056	5d		 pop	 ebp

; 246  : 		setPcPoint();

  00057	e9 00 00 00 00	 jmp	 ?setPcPoint@@YAXXZ	; setPcPoint
?createPc@@YAXHHHH@Z ENDP				; createPc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?initPc@@YAXXZ
_TEXT	SEGMENT
?initPc@@YAXXZ PROC					; initPc, COMDAT

; 155  : 	int walk = 0, height = 0;
; 156  : 	int i;
; 157  : 
; 158  : #ifndef _DEBUG
; 159  : 	createPc(pc.graNo, nowGx, nowGy, pc.dir);

  00000	ff 35 0c 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+12
  00006	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGy@@3HA	; nowGy
  0000c	ff 35 00 00 00
	00		 push	 DWORD PTR ?nowGx@@3HA	; nowGx
  00012	ff 35 00 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A
  00018	e8 00 00 00 00	 call	 ?createPc@@YAXHHHH@Z	; createPc

; 160  : #else
; 161  : 	if(offlineFlag)
; 162  : 	{
; 163  : 		createPc(SPR_pet004, nowGx, nowGy, pc.dir);
; 164  : 	}
; 165  : 	else
; 166  : 	{
; 167  : 		createPc(pc.graNo, nowGx, nowGy, pc.dir);
; 168  : 	}
; 169  : #endif
; 170  : 
; 171  : 	if((pc.status & CHR_STATUS_W))
; 172  : 	{
; 173  : 		walk = 1;
; 174  : 	}
; 175  : 	if((pc.status & CHR_STATUS_H))
; 176  : 	{
; 177  : 		height = 1;
; 178  : 	}
; 179  : #ifdef _NB_æå­ç§°å·
; 180  : 	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_skill_point , pc.herofloor,pc.nb_name,pc.nb_namecolor);
; 181  : #else
; 182  : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸
; 183  : //    #ifdef _GM_IDENTIFY		// Rog ADD GMè¯å«
; 184  : //	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_exp, pc.profession_skill_point, pc.ptAct->gm_name);
; 185  : //	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_skill_point, pc.ptAct->gm_name);    
; 186  : //	#else	
; 187  : //	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_exp, pc.profession_skill_point);
; 188  : #ifdef _ALLDOMAN // (ä¸å¯å¼) Syu ADD æè¡æ¦NPC
; 189  : 	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_skill_point , pc.herofloor);

  0001d	ff 35 b0 a1 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+41392
  00023	8b 0d a4 00 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+164
  00029	8b c1		 mov	 eax, ecx
  0002b	ff 35 8c a1 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+41356
  00031	c1 e8 07	 shr	 eax, 7
  00034	ff 35 88 a1 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+41352
  0003a	83 e0 01	 and	 eax, 1
  0003d	c1 e9 06	 shr	 ecx, 6
  00040	ff 35 84 a1 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+41348
  00046	83 e1 01	 and	 ecx, 1
  00049	50		 push	 eax
  0004a	0f bf 05 a2 00
	00 00		 movsx	 eax, WORD PTR ?pc@@3UPC@@A+162
  00051	51		 push	 ecx
  00052	50		 push	 eax
  00053	ff 35 48 51 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+20808
  00059	68 24 51 00 00	 push	 OFFSET ?pc@@3UPC@@A+20772
  0005e	ff 35 38 00 00
	00		 push	 DWORD PTR ?pc@@3UPC@@A+56
  00064	68 81 00 00 00	 push	 OFFSET ?pc@@3UPC@@A+129
  00069	68 70 00 00 00	 push	 OFFSET ?pc@@3UPC@@A+112
  0006e	e8 00 00 00 00	 call	 ?setPcParam@@YAXPAD0H0HHHHHHHH@Z ; setPcParam

; 190  : #else
; 191  : 	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height, pc.profession_class, pc.profession_level, pc.profession_skill_point);
; 192  : #endif
; 193  : //	#endif
; 194  : #else
; 195  : 	setPcParam(pc.name, pc.freeName, pc.level, pc.ridePetName, pc.ridePetLevel, pc.nameColor, walk, height);
; 196  : #endif
; 197  : #endif
; 198  : 
; 199  : #ifdef _FRIENDCHANNEL
; 200  : //	strcpy(pc.chatRoomNum,"");
; 201  : #endif
; 202  : 
; 203  : 	if(pc.ptAct != NULL)

  00073	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  00079	83 c4 40	 add	 esp, 64			; 00000040H
  0007c	85 c9		 test	 ecx, ecx
  0007e	74 4f		 je	 SHORT $LN15@initPc

; 204  : 	{
; 205  : 		pc.ptAct->hp = pc.hp;

  00080	a1 10 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+16
  00085	89 41 78	 mov	 DWORD PTR [ecx+120], eax

; 206  : 		pc.ptAct->maxHp = pc.maxHp;

  00088	8b 0d ec 50 00
	00		 mov	 ecx, DWORD PTR ?pc@@3UPC@@A+20716
  0008e	a1 14 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20
  00093	89 81 80 00 00
	00		 mov	 DWORD PTR [ecx+128], eax

; 207  : 
; 208  : 		// ??îºî«????????????????î¡
; 209  : 		for(i = 0; i < MAX_PARTY; i++)

  00099	33 c9		 xor	 ecx, ecx
  0009b	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?pc@@3UPC@@A+8
  000a1	b8 04 00 00 00	 mov	 eax, OFFSET ?party@@3PAUPARTY@@A+4
$LL4@initPc:

; 210  : 		{
; 211  : 			if(party[i].useFlag != 0 && party[i].id == pc.id)

  000a6	66 83 78 fc 00	 cmp	 WORD PTR [eax-4], 0
  000ab	74 04		 je	 SHORT $LN2@initPc
  000ad	39 10		 cmp	 DWORD PTR [eax], edx
  000af	74 0d		 je	 SHORT $LN11@initPc
$LN2@initPc:

; 207  : 
; 208  : 		// ??îºî«????????????????î¡
; 209  : 		for(i = 0; i < MAX_PARTY; i++)

  000b1	83 c0 30	 add	 eax, 48			; 00000030H
  000b4	41		 inc	 ecx
  000b5	3d f4 00 00 00	 cmp	 eax, OFFSET ?party@@3PAUPARTY@@A+244
  000ba	7c ea		 jl	 SHORT $LL4@initPc
  000bc	eb 11		 jmp	 SHORT $LN15@initPc
$LN11@initPc:

; 212  : 			{
; 213  : 				party[i].ptAct = pc.ptAct;

  000be	a1 ec 50 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A+20716
  000c3	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  000c6	c1 e1 04	 shl	 ecx, 4
  000c9	89 81 2c 00 00
	00		 mov	 DWORD PTR ?party@@3PAUPARTY@@A[ecx+44], eax
$LN15@initPc:

; 214  : 				break;
; 215  : 			}
; 216  : 		}
; 217  : 	}
; 218  : 
; 219  : 
; 220  : 	prSendMode = 0;

  000cf	33 c0		 xor	 eax, eax
  000d1	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendMode@@3FA, ax ; prSendMode

; 221  : 	prSendFlag = 0;

  000d7	66 a3 00 00 00
	00		 mov	 WORD PTR ?prSendFlag@@3FA, ax ; prSendFlag

; 222  : 	jbSendFlag = 0;

  000dd	66 a3 00 00 00
	00		 mov	 WORD PTR ?jbSendFlag@@3FA, ax ; jbSendFlag

; 223  : 	duelSendFlag = 0;

  000e3	66 a3 00 00 00
	00		 mov	 WORD PTR ?duelSendFlag@@3FA, ax ; duelSendFlag

; 224  : 	helpFlag = 0;

  000e9	66 a3 00 00 00
	00		 mov	 WORD PTR ?helpFlag@@3FA, ax ; helpFlag

; 225  : 
; 226  : }

  000ef	c3		 ret	 0
?initPc@@YAXXZ ENDP					; initPc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\pc.cpp
;	COMDAT ?initPcAll@@YAXXZ
_TEXT	SEGMENT
_filename$1 = -292					; size = 255
_vTemp$2 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
?initPcAll@@YAXXZ PROC					; initPcAll, COMDAT

; 100  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi

; 101  : 	int i;
; 102  : 
; 103  : 	memset(&pc, 0, sizeof(pc));

  00014	68 b6 00 00 00	 push	 182			; 000000b6H
  00019	6a 00		 push	 0
  0001b	68 00 00 00 00	 push	 OFFSET ?pc@@3UPC@@A	; pc
  00020	e8 00 00 00 00	 call	 _memset
  00025	68 08 a1 00 00	 push	 41224			; 0000a108H
  0002a	6a 00		 push	 0
  0002c	68 b8 00 00 00	 push	 OFFSET ?pc@@3UPC@@A+184
  00031	e8 00 00 00 00	 call	 _memset

; 104  : 	memset(&pet, 0, sizeof(pet));

  00036	68 58 39 00 00	 push	 14680			; 00003958H
  0003b	6a 00		 push	 0
  0003d	68 00 00 00 00	 push	 OFFSET ?pet@@3PAUPET@@A	; pet
  00042	e8 00 00 00 00	 call	 _memset

; 105  : 	memset(&magic, 0, sizeof(magic));

  00047	68 f0 03 00 00	 push	 1008			; 000003f0H
  0004c	6a 00		 push	 0
  0004e	68 00 00 00 00	 push	 OFFSET ?magic@@3PAUMAGIC@@A ; magic
  00053	e8 00 00 00 00	 call	 _memset

; 106  : 	memset(&party, 0, sizeof(party));

  00058	68 f0 00 00 00	 push	 240			; 000000f0H
  0005d	6a 00		 push	 0
  0005f	68 00 00 00 00	 push	 OFFSET ?party@@3PAUPARTY@@A ; party
  00064	e8 00 00 00 00	 call	 _memset

; 107  : 	memset(&petSkill, 0, sizeof(petSkill));

  00069	68 7e 0e 00 00	 push	 3710			; 00000e7eH
  0006e	6a 00		 push	 0
  00070	68 00 00 00 00	 push	 OFFSET ?petSkill@@3PAY06UPET_SKILL@@A ; petSkill
  00075	e8 00 00 00 00	 call	 _memset
  0007a	83 c4 48	 add	 esp, 72			; 00000048H

; 108  : 
; 109  : #ifdef _CHAR_PROFESSION			// WON ADD äººç©èä¸	
; 110  : 	memset(&profession_skill, 0, sizeof(profession_skill));

  0007d	68 80 13 00 00	 push	 4992			; 00001380H
  00082	6a 00		 push	 0
  00084	68 00 00 00 00	 push	 OFFSET ?profession_skill@@3PAUPROFESSION_SKILL@@A ; profession_skill
  00089	e8 00 00 00 00	 call	 _memset

; 111  : #endif
; 112  : 
; 113  : 	pc.mailPetNo = -1;

  0008e	83 c8 ff	 or	 eax, -1
  00091	66 a3 b6 00 00
	00		 mov	 WORD PTR ?pc@@3UPC@@A+182, ax

; 114  : 
; 115  : 	getUserSetting(selectPcNo);

  00097	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?selectPcNo@@3FA ; selectPcNo
  0009e	50		 push	 eax
  0009f	e8 00 00 00 00	 call	 ?getUserSetting@@YAXH@Z	; getUserSetting

; 116  : 		
; 117  : 	partyModeFlag = 0;
; 118  : 	sPetStatFlag = 1;
; 119  : 
; 120  : 	for(i = 0; i < MAX_PARTY; i++)
; 121  : 	{
; 122  : 		party[i].useFlag = 0;
; 123  : 		party[i].id = 0;
; 124  : 		party[i].ptAct = NULL;
; 125  : 	}
; 126  : 
; 127  : 
; 128  : #if 1
; 129  : 	pc.faceGraNo = newCharacterFaceGraNo;
; 130  : 	pc.dp = loginDp;
; 131  : #endif
; 132  : 
; 133  : 	// shan 2002/01/18	
; 134  : 	{
; 135  : 		FILE *fp;
; 136  : 		char filename[255];
; 137  : 		char vTemp[32];		
; 138  : 
; 139  : 		sprintf(filename, "map\\bgm%d.dat", sCharSide);

  000a4	ff 35 00 00 00
	00		 push	 DWORD PTR ?sCharSide@@3HA ; sCharSide
  000aa	33 c0		 xor	 eax, eax
  000ac	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?sPetStatFlag@@3HA, 1 ; sPetStatFlag
  000b6	66 a3 00 00 00
	00		 mov	 WORD PTR ?partyModeFlag@@3FA, ax ; partyModeFlag
  000bc	66 a3 00 00 00
	00		 mov	 WORD PTR ?party@@3PAUPARTY@@A, ax
  000c2	a3 04 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+4, eax
  000c7	a3 2c 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+44, eax
  000cc	66 a3 30 00 00
	00		 mov	 WORD PTR ?party@@3PAUPARTY@@A+48, ax
  000d2	a3 34 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+52, eax
  000d7	a3 5c 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+92, eax
  000dc	66 a3 60 00 00
	00		 mov	 WORD PTR ?party@@3PAUPARTY@@A+96, ax
  000e2	a3 64 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+100, eax
  000e7	a3 8c 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+140, eax
  000ec	66 a3 90 00 00
	00		 mov	 WORD PTR ?party@@3PAUPARTY@@A+144, ax
  000f2	a3 94 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+148, eax
  000f7	a3 bc 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+188, eax
  000fc	66 a3 c0 00 00
	00		 mov	 WORD PTR ?party@@3PAUPARTY@@A+192, ax
  00102	a3 c4 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+196, eax
  00107	a3 ec 00 00 00	 mov	 DWORD PTR ?party@@3PAUPARTY@@A+236, eax
  0010c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?newCharacterFaceGraNo@@3HA ; newCharacterFaceGraNo
  00111	a3 04 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+4, eax
  00116	a1 00 00 00 00	 mov	 eax, DWORD PTR ?loginDp@@3HA ; loginDp
  0011b	a3 6c 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+108, eax
  00120	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  00126	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 _sprintf

; 140  : 		if((fp = fopen(filename, "rb+"))!=NULL)

  00131	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  00137	68 00 00 00 00	 push	 OFFSET ??_C@_03CCKOKKND@rb?$CL@
  0013c	50		 push	 eax
  0013d	e8 00 00 00 00	 call	 _fopen
  00142	8b f0		 mov	 esi, eax
  00144	83 c4 24	 add	 esp, 36			; 00000024H
  00147	85 f6		 test	 esi, esi
  00149	74 25		 je	 SHORT $LN16@initPcAll

; 141  : 		{
; 142  : 			fread(&vTemp, sizeof(char), 2, fp);

  0014b	56		 push	 esi
  0014c	6a 02		 push	 2
  0014e	8d 45 dc	 lea	 eax, DWORD PTR _vTemp$2[ebp]
  00151	6a 01		 push	 1
  00153	50		 push	 eax
  00154	e8 00 00 00 00	 call	 _fread

; 143  : 			fclose (fp);

  00159	56		 push	 esi
  0015a	e8 00 00 00 00	 call	 _fclose

; 144  : 			fMapBgm = atoi(vTemp);

  0015f	8d 45 dc	 lea	 eax, DWORD PTR _vTemp$2[ebp]
  00162	50		 push	 eax
  00163	e8 00 00 00 00	 call	 _atoi
  00168	83 c4 18	 add	 esp, 24			; 00000018H
  0016b	a3 00 00 00 00	 mov	 DWORD PTR ?fMapBgm@@3HA, eax ; fMapBgm
$LN16@initPcAll:

; 145  : 		}		
; 146  : 	}
; 147  : #ifdef _STREET_VENDOR
; 148  : 	pc.iOnStreetVendor = 0;
; 149  : #endif
; 150  : }

  00170	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00173	33 cd		 xor	 ecx, ebp
  00175	c7 05 b8 a1 00
	00 00 00 00 00	 mov	 DWORD PTR ?pc@@3UPC@@A+41400, 0
  0017f	5e		 pop	 esi
  00180	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00185	8b e5		 mov	 esp, ebp
  00187	5d		 pop	 ebp
  00188	c3		 ret	 0
?initPcAll@@YAXXZ ENDP					; initPcAll
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
