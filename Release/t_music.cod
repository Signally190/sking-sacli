; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?bgm_tbl@@3PAUT_MUSIC_BGM@@A			; bgm_tbl
PUBLIC	?tone_tbl@@3PAUTONE_EQU@@A			; tone_tbl
PUBLIC	?cdda_no@@3HA					; cdda_no
PUBLIC	?stereo_flg@@3HA				; stereo_flg
PUBLIC	?t_music_se_volume@@3HA				; t_music_se_volume
PUBLIC	?t_music_bgm_volume@@3HA			; t_music_bgm_volume
PUBLIC	?t_music_bgm_no@@3HA				; t_music_bgm_no
PUBLIC	?t_music_se_no@@3HA				; t_music_se_no
PUBLIC	?t_music_bgm_pitch@@3PADA			; t_music_bgm_pitch
PUBLIC	?draw_map_bgm_flg@@3HA				; draw_map_bgm_flg
PUBLIC	?map_bgm_no@@3HA				; map_bgm_no
PUBLIC	??ëå??@@3HA					; ?ëå??
PUBLIC	?env_tbl@@3PAUENVIRONMENT_EQU@@A		; env_tbl
PUBLIC	?thread_flg@@3HA				; thread_flg
PUBLIC	?dsound_flg@@3HA				; dsound_flg
PUBLIC	?pDSound@@3PAUIDirectSound@@A			; pDSound
PUBLIC	?pDSPrimary@@3PAUIDirectSoundBuffer@@A		; pDSPrimary
PUBLIC	?primaryVolume@@3JA				; primaryVolume
PUBLIC	?primaryPan@@3JA				; primaryPan
PUBLIC	?primaryFrequency@@3JA				; primaryFrequency
PUBLIC	?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A	; pDSData_tone
PUBLIC	?pDSData_stream@@3PAUIDirectSoundBuffer@@A	; pDSData_stream
PUBLIC	?pDSData@@3PAPAUIDirectSoundBuffer@@A		; pDSData
PUBLIC	?dataPlay@@3PAHA				; dataPlay
PUBLIC	?dataVolume@@3PAHA				; dataVolume
PUBLIC	?dataPan@@3PAHA					; dataPan
PUBLIC	?dataFrequency@@3PAJA				; dataFrequency
PUBLIC	?voice@@3PAUVOICE_EQU@@A			; voice
PUBLIC	?tone_max_buf@@3HA				; tone_max_buf
PUBLIC	?t_music_playing_flg@@3HA			; t_music_playing_flg
PUBLIC	?t_music_fade_flg@@3HA				; t_music_fade_flg
PUBLIC	?t_music_fade_vol@@3HA				; t_music_fade_vol
PUBLIC	??_C@_08LOOFPHBM@?$DP?d?P?$DP?$DP?c?w?$DP@	; `string'
PUBLIC	??_C@_0N@INFHKGBA@?$KD?S?$KD?t?$KD?e?$KD?p?$DP?$DP?$DP?$DP@ ; `string'
PUBLIC	??_C@_09JCKPJEPE@?k?e?$DP?r?$KG?o?R?$DP?$DP@	; `string'
PUBLIC	??_C@_08IOICGCMD@?$KD?L?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_08CBNMEIFN@?$KD?T?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_08GDPJEPCA@?$KD?V?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_0L@POFHDIIK@?$KD?$MA?$KD?V?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@DIDIDBAN@?$KD?$MA?$KD?P?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@ICOMAJKB@?$KD?$MA?$KD?F?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_08NJCNHHIM@?$KD?$MA?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_0P@BPNGJDFB@?$KD?C?$KD?o?$KD?o?$KD?k?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_08ICLMPPGO@?$KD?M?$KD?M?$KD?L?$DP?$DP@	; `string'
PUBLIC	??_C@_0L@MAMJAONM@?$KD?$MA?$KD?D?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@NLIJCIGI@?q?$LC?w?n?$DP?u?$LB?$DP?$DP?$DP@ ; `string'
PUBLIC	??_C@_0O@BDPOMKKB@?f?Q?q?$LE?k?e?$DP?r?$KG?o?R?$DP?$DP@ ; `string'
PUBLIC	??_C@_0N@PMDODFEN@?Z?c?$DP?$DP?$NL?$KP?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0M@KADLMLCJ@?Z?c?$DP?$DP?$NL?$KP?$DP?$NM?t?y?j@ ; `string'
PUBLIC	??_C@_0L@KBDAPCLE@?$DP?k?e?$DP?r?$KG?o?R?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@DCPNDIBE@?$KD?$MA?$KD?W?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_09DBOICEHL@?$DP?q?$LE?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_08GJDMEGDJ@?$KD?Q?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_0L@BJOJBMHA@?$KD?$MA?$KD?K?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_06HJKPLLII@?$PL?z?k?e?$DP?$DP@		; `string'
PUBLIC	??_C@_08NGFCA@?$KD?O?r?$KG?V?$LF?$DP?$DP@	; `string'
PUBLIC	??_C@_0L@JHGGBLJD@?$KD?$MA?$KD?H?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@NPIGBFPH@?$KD?$MA?$KD?M?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	??_C@_0L@LGLHDGOO@?$KD?$MA?$KD?S?r?$KG?V?$LF?$DP?$DP@ ; `string'
PUBLIC	?hEvent@@3PAPAXA				; hEvent
PUBLIC	?hThreadHandle@@3PAXA				; hThreadHandle
PUBLIC	?dwThreadID@@3KA				; dwThreadID
PUBLIC	?sd@@3USoundData@@A				; sd
PUBLIC	??_C@_0BG@BPJPJLMH@data?2bgm?2sabgm_s0?4wav@	; `string'
PUBLIC	??_C@_0BG@NEMDEIGC@data?2bgm?2sabgm_s1?4wav@	; `string'
PUBLIC	??_C@_0BG@BBGEHGOM@data?2bgm?2sabgm_t1?4wav@	; `string'
PUBLIC	??_C@_0BG@NKDIKFEJ@data?2bgm?2sabgm_t0?4wav@	; `string'
PUBLIC	??_C@_0BG@NODGAMLN@data?2bgm?2sabgm_b0?4wav@	; `string'
PUBLIC	??_C@_0BG@BFGKNPBI@data?2bgm?2sabgm_b1?4wav@	; `string'
PUBLIC	??_C@_0BG@LNOGDJIH@data?2bgm?2sabgm_d0?4wav@	; `string'
PUBLIC	??_C@_0BG@HGLKOKCC@data?2bgm?2sabgm_d1?4wav@	; `string'
PUBLIC	??_C@_0BG@PACOJIIM@data?2bgm?2sabgm_d2?4wav@	; `string'
PUBLIC	??_C@_0BG@CKHJCIKO@data?2bgm?2sabgm_f0?4wav@	; `string'
PUBLIC	??_C@_0BG@OBCFPLAL@data?2bgm?2sabgm_f1?4wav@	; `string'
PUBLIC	??_C@_0BG@FIKCHOBD@data?2bgm?2sabgm_b3?4wav@	; `string'
PUBLIC	??_C@_0BG@JDPOKNLG@data?2bgm?2sabgm_b2?4wav@	; `string'
PUBLIC	??_C@_0BG@EFKHEOKL@data?2bgm?2sabgm_b4?4wav@	; `string'
PUBLIC	??_C@_0BG@GHLBIJKF@data?2bgm?2sabgm_f2?4wav@	; `string'
PUBLIC	??_C@_0BG@JHPAAEEC@data?2bgm?2sabgm_t2?4wav@	; `string'
PUBLIC	??_C@_0BG@FMKMNHOH@data?2bgm?2sabgm_t3?4wav@	; `string'
PUBLIC	??_C@_0BG@EBKJOHFP@data?2bgm?2sabgm_t4?4wav@	; `string'
PUBLIC	??_C@_0BG@IKPFDEPK@data?2bgm?2sabgm_t5?4wav@	; `string'
PUBLIC	??_C@_0BG@MGBEGFE@data?2bgm?2sabgm_t6?4wav@	; `string'
PUBLIC	??_C@_0BG@MHDNJFPB@data?2bgm?2sabgm_t7?4wav@	; `string'
PUBLIC	??_C@_0BG@DGGLCHCE@data?2bgm?2sabgm_t8?4wav@	; `string'
PUBLIC	??_C@_0BG@PNDHPEIB@data?2bgm?2sabgm_t9?4wav@	; `string'
PUBLIC	??_C@_0BH@LAAMGHLC@data?2bgm?2sabgm_t10?4wav@	; `string'
PUBLIC	??_C@_0BH@HLFALEBH@data?2bgm?2sabgm_t11?4wav@	; `string'
PUBLIC	??_C@_0BH@PNMEMGLJ@data?2bgm?2sabgm_t12?4wav@	; `string'
PUBLIC	??_C@_0BG@OPNOBGCA@data?2bgm?2sabgm_a0?4wav@	; `string'
PUBLIC	??_C@_0BG@CEICMFIF@data?2bgm?2sabgm_a1?4wav@	; `string'
PUBLIC	??_C@_0BG@KCBGLHCL@data?2bgm?2sabgm_a2?4wav@	; `string'
PUBLIC	??_C@_0BG@GJEKGEIO@data?2bgm?2sabgm_a3?4wav@	; `string'
PUBLIC	??_C@_0BG@HEEPFEDG@data?2bgm?2sabgm_a4?4wav@	; `string'
PUBLIC	??_C@_0BG@LPBDIHJD@data?2bgm?2sabgm_a5?4wav@	; `string'
PUBLIC	?BakBgm@@3HA					; BakBgm
_BSS	SEGMENT
?tone_tbl@@3PAUTONE_EQU@@A DB 03e80H DUP (?)		; tone_tbl
?t_music_bgm_pitch@@3PADA DB 010H DUP (?)		; t_music_bgm_pitch
?draw_map_bgm_flg@@3HA DD 01H DUP (?)			; draw_map_bgm_flg
?map_bgm_no@@3HA DD 01H DUP (?)				; map_bgm_no
??ëå??@@3HA DD	01H DUP (?)				; ?ëå??
?env_tbl@@3PAUENVIRONMENT_EQU@@A DB 02d0H DUP (?)	; env_tbl
?thread_flg@@3HA DD 01H DUP (?)				; thread_flg
?dsound_flg@@3HA DD 01H DUP (?)				; dsound_flg
?pDSound@@3PAUIDirectSound@@A DD 01H DUP (?)		; pDSound
?pDSPrimary@@3PAUIDirectSoundBuffer@@A DD 01H DUP (?)	; pDSPrimary
?primaryVolume@@3JA DD 01H DUP (?)			; primaryVolume
?primaryPan@@3JA DD 01H DUP (?)				; primaryPan
?primaryFrequency@@3JA DD 01H DUP (?)			; primaryFrequency
?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A DD 01f5H DUP (?) ; pDSData_tone
?pDSData_stream@@3PAUIDirectSoundBuffer@@A DD 01H DUP (?) ; pDSData_stream
?pDSData@@3PAPAUIDirectSoundBuffer@@A DD 040H DUP (?)	; pDSData
?dataPlay@@3PAHA DD 040H DUP (?)			; dataPlay
?dataVolume@@3PAHA DD 020H DUP (?)			; dataVolume
?dataPan@@3PAHA DD 020H DUP (?)				; dataPan
?dataFrequency@@3PAJA DD 020H DUP (?)			; dataFrequency
?voice@@3PAUVOICE_EQU@@A DB 0f00H DUP (?)		; voice
?tone_max_buf@@3HA DD 01H DUP (?)			; tone_max_buf
?t_music_playing_flg@@3HA DD 01H DUP (?)		; t_music_playing_flg
?t_music_fade_flg@@3HA DD 01H DUP (?)			; t_music_fade_flg
?t_music_fade_vol@@3HA DD 01H DUP (?)			; t_music_fade_vol
?hEvent@@3PAPAXA DD 03H DUP (?)				; hEvent
?hThreadHandle@@3PAXA DD 01H DUP (?)			; hThreadHandle
?dwThreadID@@3KA DD 01H DUP (?)				; dwThreadID
?sd@@3USoundData@@A DB 01cH DUP (?)			; sd
?BakBgm@@3HA DD	01H DUP (?)				; BakBgm
_BSS	ENDS
;	COMDAT ??_C@_0BG@LPBDIHJD@data?2bgm?2sabgm_a5?4wav@
CONST	SEGMENT
??_C@_0BG@LPBDIHJD@data?2bgm?2sabgm_a5?4wav@ DB 'data\bgm\sabgm_a5.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HEEPFEDG@data?2bgm?2sabgm_a4?4wav@
CONST	SEGMENT
??_C@_0BG@HEEPFEDG@data?2bgm?2sabgm_a4?4wav@ DB 'data\bgm\sabgm_a4.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GJEKGEIO@data?2bgm?2sabgm_a3?4wav@
CONST	SEGMENT
??_C@_0BG@GJEKGEIO@data?2bgm?2sabgm_a3?4wav@ DB 'data\bgm\sabgm_a3.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KCBGLHCL@data?2bgm?2sabgm_a2?4wav@
CONST	SEGMENT
??_C@_0BG@KCBGLHCL@data?2bgm?2sabgm_a2?4wav@ DB 'data\bgm\sabgm_a2.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CEICMFIF@data?2bgm?2sabgm_a1?4wav@
CONST	SEGMENT
??_C@_0BG@CEICMFIF@data?2bgm?2sabgm_a1?4wav@ DB 'data\bgm\sabgm_a1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OPNOBGCA@data?2bgm?2sabgm_a0?4wav@
CONST	SEGMENT
??_C@_0BG@OPNOBGCA@data?2bgm?2sabgm_a0?4wav@ DB 'data\bgm\sabgm_a0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@PNMEMGLJ@data?2bgm?2sabgm_t12?4wav@
CONST	SEGMENT
??_C@_0BH@PNMEMGLJ@data?2bgm?2sabgm_t12?4wav@ DB 'data\bgm\sabgm_t12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HLFALEBH@data?2bgm?2sabgm_t11?4wav@
CONST	SEGMENT
??_C@_0BH@HLFALEBH@data?2bgm?2sabgm_t11?4wav@ DB 'data\bgm\sabgm_t11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LAAMGHLC@data?2bgm?2sabgm_t10?4wav@
CONST	SEGMENT
??_C@_0BH@LAAMGHLC@data?2bgm?2sabgm_t10?4wav@ DB 'data\bgm\sabgm_t10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PNDHPEIB@data?2bgm?2sabgm_t9?4wav@
CONST	SEGMENT
??_C@_0BG@PNDHPEIB@data?2bgm?2sabgm_t9?4wav@ DB 'data\bgm\sabgm_t9.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DGGLCHCE@data?2bgm?2sabgm_t8?4wav@
CONST	SEGMENT
??_C@_0BG@DGGLCHCE@data?2bgm?2sabgm_t8?4wav@ DB 'data\bgm\sabgm_t8.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MHDNJFPB@data?2bgm?2sabgm_t7?4wav@
CONST	SEGMENT
??_C@_0BG@MHDNJFPB@data?2bgm?2sabgm_t7?4wav@ DB 'data\bgm\sabgm_t7.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGBEGFE@data?2bgm?2sabgm_t6?4wav@
CONST	SEGMENT
??_C@_0BG@MGBEGFE@data?2bgm?2sabgm_t6?4wav@ DB 'data\bgm\sabgm_t6.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@IKPFDEPK@data?2bgm?2sabgm_t5?4wav@
CONST	SEGMENT
??_C@_0BG@IKPFDEPK@data?2bgm?2sabgm_t5?4wav@ DB 'data\bgm\sabgm_t5.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EBKJOHFP@data?2bgm?2sabgm_t4?4wav@
CONST	SEGMENT
??_C@_0BG@EBKJOHFP@data?2bgm?2sabgm_t4?4wav@ DB 'data\bgm\sabgm_t4.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FMKMNHOH@data?2bgm?2sabgm_t3?4wav@
CONST	SEGMENT
??_C@_0BG@FMKMNHOH@data?2bgm?2sabgm_t3?4wav@ DB 'data\bgm\sabgm_t3.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JHPAAEEC@data?2bgm?2sabgm_t2?4wav@
CONST	SEGMENT
??_C@_0BG@JHPAAEEC@data?2bgm?2sabgm_t2?4wav@ DB 'data\bgm\sabgm_t2.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GHLBIJKF@data?2bgm?2sabgm_f2?4wav@
CONST	SEGMENT
??_C@_0BG@GHLBIJKF@data?2bgm?2sabgm_f2?4wav@ DB 'data\bgm\sabgm_f2.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EFKHEOKL@data?2bgm?2sabgm_b4?4wav@
CONST	SEGMENT
??_C@_0BG@EFKHEOKL@data?2bgm?2sabgm_b4?4wav@ DB 'data\bgm\sabgm_b4.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JDPOKNLG@data?2bgm?2sabgm_b2?4wav@
CONST	SEGMENT
??_C@_0BG@JDPOKNLG@data?2bgm?2sabgm_b2?4wav@ DB 'data\bgm\sabgm_b2.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FIKCHOBD@data?2bgm?2sabgm_b3?4wav@
CONST	SEGMENT
??_C@_0BG@FIKCHOBD@data?2bgm?2sabgm_b3?4wav@ DB 'data\bgm\sabgm_b3.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@OBCFPLAL@data?2bgm?2sabgm_f1?4wav@
CONST	SEGMENT
??_C@_0BG@OBCFPLAL@data?2bgm?2sabgm_f1?4wav@ DB 'data\bgm\sabgm_f1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CKHJCIKO@data?2bgm?2sabgm_f0?4wav@
CONST	SEGMENT
??_C@_0BG@CKHJCIKO@data?2bgm?2sabgm_f0?4wav@ DB 'data\bgm\sabgm_f0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PACOJIIM@data?2bgm?2sabgm_d2?4wav@
CONST	SEGMENT
??_C@_0BG@PACOJIIM@data?2bgm?2sabgm_d2?4wav@ DB 'data\bgm\sabgm_d2.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HGLKOKCC@data?2bgm?2sabgm_d1?4wav@
CONST	SEGMENT
??_C@_0BG@HGLKOKCC@data?2bgm?2sabgm_d1?4wav@ DB 'data\bgm\sabgm_d1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@LNOGDJIH@data?2bgm?2sabgm_d0?4wav@
CONST	SEGMENT
??_C@_0BG@LNOGDJIH@data?2bgm?2sabgm_d0?4wav@ DB 'data\bgm\sabgm_d0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BFGKNPBI@data?2bgm?2sabgm_b1?4wav@
CONST	SEGMENT
??_C@_0BG@BFGKNPBI@data?2bgm?2sabgm_b1?4wav@ DB 'data\bgm\sabgm_b1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NODGAMLN@data?2bgm?2sabgm_b0?4wav@
CONST	SEGMENT
??_C@_0BG@NODGAMLN@data?2bgm?2sabgm_b0?4wav@ DB 'data\bgm\sabgm_b0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NKDIKFEJ@data?2bgm?2sabgm_t0?4wav@
CONST	SEGMENT
??_C@_0BG@NKDIKFEJ@data?2bgm?2sabgm_t0?4wav@ DB 'data\bgm\sabgm_t0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BBGEHGOM@data?2bgm?2sabgm_t1?4wav@
CONST	SEGMENT
??_C@_0BG@BBGEHGOM@data?2bgm?2sabgm_t1?4wav@ DB 'data\bgm\sabgm_t1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEMDEIGC@data?2bgm?2sabgm_s1?4wav@
CONST	SEGMENT
??_C@_0BG@NEMDEIGC@data?2bgm?2sabgm_s1?4wav@ DB 'data\bgm\sabgm_s1.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BPJPJLMH@data?2bgm?2sabgm_s0?4wav@
CONST	SEGMENT
??_C@_0BG@BPJPJLMH@data?2bgm?2sabgm_s0?4wav@ DB 'data\bgm\sabgm_s0.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LGLHDGOO@?$KD?$MA?$KD?S?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@LGLHDGOO@?$KD?$MA?$KD?S?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0d3H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NPIGBFPH@?$KD?$MA?$KD?M?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@NPIGBFPH@?$KD?$MA?$KD?M?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0cdH, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JHGGBLJD@?$KD?$MA?$KD?H?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@JHGGBLJD@?$KD?$MA?$KD?H?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0c8H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NGFCA@?$KD?O?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08NGFCA@?$KD?O?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0cfH, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06HJKPLLII@?$PL?z?k?e?$DP?$DP@
CONST	SEGMENT
??_C@_06HJKPLLII@?$PL?z?k?e?$DP?$DP@ DB 0fbH, 0faH, 0ebH, 0e5H, '??', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BJOJBMHA@?$KD?$MA?$KD?K?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@BJOJBMHA@?$KD?$MA?$KD?K?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0cbH, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GJDMEGDJ@?$KD?Q?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08GJDMEGDJ@?$KD?Q?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0d1H, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09DBOICEHL@?$DP?q?$LE?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_09DBOICEHL@?$DP?q?$LE?r?$KG?V?$LF?$DP?$DP@ DB '?', 0f1H, 0b4H, 0f2H
	DB	0a6H, 0d6H, 0b5H, '??', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DCPNDIBE@?$KD?$MA?$KD?W?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@DCPNDIBE@?$KD?$MA?$KD?W?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0d7H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBDAPCLE@?$DP?k?e?$DP?r?$KG?o?R?$DP?$DP@
CONST	SEGMENT
??_C@_0L@KBDAPCLE@?$DP?k?e?$DP?r?$KG?o?R?$DP?$DP@ DB '?', 0ebH, 0e5H, '?', 0f2H
	DB	0a6H, 0efH, 0d2H, '??', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KADLMLCJ@?Z?c?$DP?$DP?$NL?$KP?$DP?$NM?t?y?j@
CONST	SEGMENT
??_C@_0M@KADLMLCJ@?Z?c?$DP?$DP?$NL?$KP?$DP?$NM?t?y?j@ DB 0daH, 0e3H, '??', 0dbH
	DB	0afH, '?', 0dcH, 0f4H, 0f9H, 0eaH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMDODFEN@?Z?c?$DP?$DP?$NL?$KP?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0N@PMDODFEN@?Z?c?$DP?$DP?$NL?$KP?r?$KG?V?$LF?$DP?$DP@ DB 0daH, 0e3H
	DB	'??', 0dbH, 0afH, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BDPOMKKB@?f?Q?q?$LE?k?e?$DP?r?$KG?o?R?$DP?$DP@
CONST	SEGMENT
??_C@_0O@BDPOMKKB@?f?Q?q?$LE?k?e?$DP?r?$KG?o?R?$DP?$DP@ DB 0e6H, 0d1H, 0f1H
	DB	0b4H, 0ebH, 0e5H, '?', 0f2H, 0a6H, 0efH, 0d2H, '??', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NLIJCIGI@?q?$LC?w?n?$DP?u?$LB?$DP?$DP?$DP@
CONST	SEGMENT
??_C@_0L@NLIJCIGI@?q?$LC?w?n?$DP?u?$LB?$DP?$DP?$DP@ DB 0f1H, 0b2H, 0f7H, 0eeH
	DB	'?', 0f5H, 0b1H, '???', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MAMJAONM@?$KD?$MA?$KD?D?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@MAMJAONM@?$KD?$MA?$KD?D?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0c4H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ICLMPPGO@?$KD?M?$KD?M?$KD?L?$DP?$DP@
CONST	SEGMENT
??_C@_08ICLMPPGO@?$KD?M?$KD?M?$KD?L?$DP?$DP@ DB 0a3H, 0cdH, 0a3H, 0cdH, 0a3H
	DB	0ccH, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPNGJDFB@?$KD?C?$KD?o?$KD?o?$KD?k?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0P@BPNGJDFB@?$KD?C?$KD?o?$KD?o?$KD?k?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c3H
	DB	0a3H, 0efH, 0a3H, 0efH, 0a3H, 0ebH, 0f2H, 0a6H, 0d6H, 0b5H, '?'
	DB	'?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08NJCNHHIM@?$KD?$MA?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08NJCNHHIM@?$KD?$MA?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ICOMAJKB@?$KD?$MA?$KD?F?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@ICOMAJKB@?$KD?$MA?$KD?F?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0c6H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DIDIDBAN@?$KD?$MA?$KD?P?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@DIDIDBAN@?$KD?$MA?$KD?P?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0d0H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POFHDIIK@?$KD?$MA?$KD?V?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_0L@POFHDIIK@?$KD?$MA?$KD?V?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0c0H, 0a3H
	DB	0d6H, 0f2H, 0a6H, 0d6H, 0b5H, '??', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08GDPJEPCA@?$KD?V?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08GDPJEPCA@?$KD?V?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0d6H, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08CBNMEIFN@?$KD?T?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08CBNMEIFN@?$KD?T?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0d4H, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08IOICGCMD@?$KD?L?r?$KG?V?$LF?$DP?$DP@
CONST	SEGMENT
??_C@_08IOICGCMD@?$KD?L?r?$KG?V?$LF?$DP?$DP@ DB 0a3H, 0ccH, 0f2H, 0a6H, 0d6H
	DB	0b5H, '??', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09JCKPJEPE@?k?e?$DP?r?$KG?o?R?$DP?$DP@
CONST	SEGMENT
??_C@_09JCKPJEPE@?k?e?$DP?r?$KG?o?R?$DP?$DP@ DB 0ebH, 0e5H, '?', 0f2H, 0a6H
	DB	0efH, 0d2H, '??', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@INFHKGBA@?$KD?S?$KD?t?$KD?e?$KD?p?$DP?$DP?$DP?$DP@
CONST	SEGMENT
??_C@_0N@INFHKGBA@?$KD?S?$KD?t?$KD?e?$KD?p?$DP?$DP?$DP?$DP@ DB 0a3H, 0d3H
	DB	0a3H, 0f4H, 0a3H, 0e5H, 0a3H, 0f0H, '????', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOOFPHBM@?$DP?d?P?$DP?$DP?c?w?$DP@
CONST	SEGMENT
??_C@_08LOOFPHBM@?$DP?d?P?$DP?$DP?c?w?$DP@ DB '?', 0e4H, 0d0H, '??', 0e3H
	DB	0f7H, '?', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?bgm_tbl@@3PAUT_MUSIC_BGM@@A DD FLAT:??_C@_0BG@BPJPJLMH@data?2bgm?2sabgm_s0?4wav@ ; bgm_tbl
	DD	06eH
	DB	00H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@NEMDEIGC@data?2bgm?2sabgm_s1?4wav@
	DD	078H
	DB	00H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@NEMDEIGC@data?2bgm?2sabgm_s1?4wav@
	DD	069H
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@BBGEHGOM@data?2bgm?2sabgm_t1?4wav@
	DD	07fH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@NKDIKFEJ@data?2bgm?2sabgm_t0?4wav@
	DD	05fH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@NODGAMLN@data?2bgm?2sabgm_b0?4wav@
	DD	07aH
	DB	01H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@BFGKNPBI@data?2bgm?2sabgm_b1?4wav@
	DD	07aH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@LNOGDJIH@data?2bgm?2sabgm_d0?4wav@
	DD	078H
	DB	01H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@HGLKOKCC@data?2bgm?2sabgm_d1?4wav@
	DD	069H
	DB	01H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@PACOJIIM@data?2bgm?2sabgm_d2?4wav@
	DD	064H
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@CKHJCIKO@data?2bgm?2sabgm_f0?4wav@
	DD	07fH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@OBCFPLAL@data?2bgm?2sabgm_f1?4wav@
	DD	064H
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@FIKCHOBD@data?2bgm?2sabgm_b3?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@JDPOKNLG@data?2bgm?2sabgm_b2?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@EFKHEOKL@data?2bgm?2sabgm_b4?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@GHLBIJKF@data?2bgm?2sabgm_f2?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@JHPAAEEC@data?2bgm?2sabgm_t2?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@FMKMNHOH@data?2bgm?2sabgm_t3?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@EBKJOHFP@data?2bgm?2sabgm_t4?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@IKPFDEPK@data?2bgm?2sabgm_t5?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@MGBEGFE@data?2bgm?2sabgm_t6?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@MHDNJFPB@data?2bgm?2sabgm_t7?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@DGGLCHCE@data?2bgm?2sabgm_t8?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@PNDHPEIB@data?2bgm?2sabgm_t9?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BH@LAAMGHLC@data?2bgm?2sabgm_t10?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BH@HLFALEBH@data?2bgm?2sabgm_t11?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BH@PNMEMGLJ@data?2bgm?2sabgm_t12?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@OPNOBGCA@data?2bgm?2sabgm_a0?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@CEICMFIF@data?2bgm?2sabgm_a1?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@KCBGLHCL@data?2bgm?2sabgm_a2?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@GJEKGEIO@data?2bgm?2sabgm_a3?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@HEEPFEDG@data?2bgm?2sabgm_a4?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
	DD	FLAT:??_C@_0BG@LPBDIHJD@data?2bgm?2sabgm_a5?4wav@
	DD	06eH
	DB	02H
	ORG $+3
	DD	00H
?cdda_no@@3HA DD 0ffffffffH				; cdda_no
?stereo_flg@@3HA DD 01H					; stereo_flg
?t_music_se_volume@@3HA DD 0fH				; t_music_se_volume
?t_music_bgm_volume@@3HA DD 0fH				; t_music_bgm_volume
?t_music_bgm_no@@3HA DD 0ffffffffH			; t_music_bgm_no
?t_music_se_no@@3HA DD 0ffffffffH			; t_music_se_no
_DATA	ENDS
PUBLIC	?t_music_init@@YAHXZ				; t_music_init
PUBLIC	?t_music_end@@YAXXZ				; t_music_end
PUBLIC	?check_se_loop@@YAXXZ				; check_se_loop
PUBLIC	?cdda_play@@YA_NH@Z				; cdda_play
PUBLIC	?cdda_stop@@YA_NXZ				; cdda_stop
PUBLIC	?play_se@@YAHHHH@Z				; play_se
PUBLIC	?play_bgm@@YAHH@Z				; play_bgm
PUBLIC	?bgm_volume_change@@YAXXZ			; bgm_volume_change
PUBLIC	?set_gbm_pitch@@YAXXZ				; set_gbm_pitch
PUBLIC	?stop_bgm@@YAXXZ				; stop_bgm
PUBLIC	?fade_out_bgm@@YAXXZ				; fade_out_bgm
PUBLIC	?play_environment@@YAHHHH@Z			; play_environment
PUBLIC	?play_map_bgm@@YAHH@Z				; play_map_bgm
PUBLIC	___local_stdio_printf_options
PUBLIC	_sprintf
PUBLIC	?LoadWave@@YAHPBDAAPAUtWAVEFORMATEX@@AAPAEAAK@Z	; LoadWave
PUBLIC	?CreateSoundData@@YAHPBDAAPAUIDirectSoundBuffer@@@Z ; CreateSoundData
PUBLIC	?f_get@@YAHPAU_iobuf@@@Z			; f_get
PUBLIC	?get_num@@YAHPAU_iobuf@@@Z			; get_num
PUBLIC	?num_check@@YAHPAU_iobuf@@@Z			; num_check
PUBLIC	?InitDSound@@YAHXZ				; InitDSound
PUBLIC	?stop_thread@@YAXXZ				; stop_thread
PUBLIC	?EndApp@@YAHXZ					; EndApp
PUBLIC	?get_num2@@YAHPAU_iobuf@@@Z			; get_num2
PUBLIC	?num_check2@@YAHPAU_iobuf@@@Z			; num_check2
PUBLIC	?get_step@@YAHPAU_iobuf@@H@Z			; get_step
PUBLIC	?music_read@@YAHXZ				; music_read
PUBLIC	?music_init@@YAXXZ				; music_init
PUBLIC	?play_stop@@YAXXZ				; play_stop
PUBLIC	?play_start@@YAXXZ				; play_start
PUBLIC	?voice_lfo@@YAXH@Z				; voice_lfo
PUBLIC	?voice_action@@YAXH@Z				; voice_action
PUBLIC	?set_voice_param@@YAXHJHH@Z			; set_voice_param
PUBLIC	?set_tone@@YAHHJHH@Z				; set_tone
PUBLIC	?stop_voice@@YAXXZ				; stop_voice
PUBLIC	?gate@@YAXXZ					; gate
PUBLIC	?music@@YAXXZ					; music
PUBLIC	?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z ; Block_Copy
PUBLIC	?MyThreadFunc@@YGKPAX@Z				; MyThreadFunc
PUBLIC	?play_environment_tone@@YAHHH@Z			; play_environment_tone
PUBLIC	?play_map_bgm_check@@YAXXZ			; play_map_bgm_check
PUBLIC	?play_environment_check@@YAXXZ			; play_environment_check
PUBLIC	?bgm_fade_check@@YAXXZ				; bgm_fade_check
PUBLIC	?cdda_open@@YA_NH@Z				; cdda_open
PUBLIC	?cdda_start@@YA_NH@Z				; cdda_start
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_04HFHJMNCD@WAVE@				; `string'
PUBLIC	??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@	; `string'
PUBLIC	??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@	; `string'
PUBLIC	??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@	; `string'
PUBLIC	??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@	; `string'
PUBLIC	??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@	; `string'
PUBLIC	??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@	; `string'
PUBLIC	??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@	; `string'
PUBLIC	??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@	; `string'
PUBLIC	??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@	; `string'
PUBLIC	??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@	; `string'
PUBLIC	??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@	; `string'
PUBLIC	??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@	; `string'
PUBLIC	??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@	; `string'
PUBLIC	??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@	; `string'
PUBLIC	??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@	; `string'
PUBLIC	??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@	; `string'
PUBLIC	??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@	; `string'
PUBLIC	??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@	; `string'
PUBLIC	??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@	; `string'
PUBLIC	??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@	; `string'
PUBLIC	??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@	; `string'
PUBLIC	??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@	; `string'
PUBLIC	??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@	; `string'
PUBLIC	??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@	; `string'
PUBLIC	??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@	; `string'
PUBLIC	??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@	; `string'
PUBLIC	??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@	; `string'
PUBLIC	??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@	; `string'
PUBLIC	??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@	; `string'
PUBLIC	??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@	; `string'
PUBLIC	??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@	; `string'
PUBLIC	??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@	; `string'
PUBLIC	??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@	; `string'
PUBLIC	??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@	; `string'
PUBLIC	??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@	; `string'
PUBLIC	??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@	; `string'
PUBLIC	??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@	; `string'
PUBLIC	??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@	; `string'
PUBLIC	??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@	; `string'
PUBLIC	??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@	; `string'
PUBLIC	??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@	; `string'
PUBLIC	??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@	; `string'
PUBLIC	??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@	; `string'
PUBLIC	??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@	; `string'
PUBLIC	??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@	; `string'
PUBLIC	??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@	; `string'
PUBLIC	??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@	; `string'
PUBLIC	??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@	; `string'
PUBLIC	??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@	; `string'
PUBLIC	??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@	; `string'
PUBLIC	??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@	; `string'
PUBLIC	??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@	; `string'
PUBLIC	??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@	; `string'
PUBLIC	??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@	; `string'
PUBLIC	??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@	; `string'
PUBLIC	??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@	; `string'
PUBLIC	??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@	; `string'
PUBLIC	??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@	; `string'
PUBLIC	??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@	; `string'
PUBLIC	??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@	; `string'
PUBLIC	??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@	; `string'
PUBLIC	??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@	; `string'
PUBLIC	??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@	; `string'
PUBLIC	??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@	; `string'
PUBLIC	??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@	; `string'
PUBLIC	??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@	; `string'
PUBLIC	??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@	; `string'
PUBLIC	??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@	; `string'
PUBLIC	??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@	; `string'
PUBLIC	??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@	; `string'
PUBLIC	??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@	; `string'
PUBLIC	??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@	; `string'
PUBLIC	??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@	; `string'
PUBLIC	??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@	; `string'
PUBLIC	??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@	; `string'
PUBLIC	??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@	; `string'
PUBLIC	??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@	; `string'
PUBLIC	??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@	; `string'
PUBLIC	??_C@_0BE@HNKPAMBO@data?2se?2sak_09a?4wav@	; `string'
PUBLIC	??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@	; `string'
PUBLIC	??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@	; `string'
PUBLIC	??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@	; `string'
PUBLIC	??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@	; `string'
PUBLIC	??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@	; `string'
PUBLIC	??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@	; `string'
PUBLIC	??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@	; `string'
PUBLIC	??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@	; `string'
PUBLIC	??_C@_0BE@PLDLHOLA@data?2se?2sak_09b?4wav@	; `string'
PUBLIC	??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@	; `string'
PUBLIC	??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@	; `string'
PUBLIC	??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@	; `string'
PUBLIC	??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@	; `string'
PUBLIC	??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@		; `string'
PUBLIC	??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@	; `string'
PUBLIC	??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@	; `string'
PUBLIC	??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@	; `string'
PUBLIC	??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@	; `string'
PUBLIC	??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@	; `string'
PUBLIC	??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@	; `string'
PUBLIC	??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@	; `string'
PUBLIC	??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@	; `string'
PUBLIC	??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@	; `string'
PUBLIC	??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@	; `string'
PUBLIC	??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@	; `string'
PUBLIC	??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@	; `string'
PUBLIC	??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@	; `string'
PUBLIC	??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@	; `string'
PUBLIC	??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@	; `string'
PUBLIC	??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@	; `string'
PUBLIC	??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@	; `string'
PUBLIC	??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@	; `string'
PUBLIC	??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@	; `string'
PUBLIC	??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@	; `string'
PUBLIC	??_C@_0BE@PKJHILLA@data?2se?2saam_01?4wav@	; `string'
PUBLIC	??_C@_0BE@HMADPJBO@data?2se?2saam_02?4wav@	; `string'
PUBLIC	??_C@_0BE@LHFPCKLL@data?2se?2saam_03?4wav@	; `string'
PUBLIC	??_C@_0BE@KKFKBKAD@data?2se?2saam_04?4wav@	; `string'
PUBLIC	??_C@_0BE@GBAGMJKG@data?2se?2saam_05?4wav@	; `string'
PUBLIC	??_C@_0BE@OHJCLLAI@data?2se?2saam_06?4wav@	; `string'
PUBLIC	??_C@_0BE@CMMOGIKN@data?2se?2saam_07?4wav@	; `string'
PUBLIC	??_C@_0BE@NNJINKHI@data?2se?2saam_08?4wav@	; `string'
PUBLIC	??_C@_0BE@BGMEAJNN@data?2se?2saam_09?4wav@	; `string'
PUBLIC	??_C@_0BE@JHLMFDKB@data?2se?2saam_10?4wav@	; `string'
PUBLIC	??_C@_0BE@FMOAIAAE@data?2se?2saam_11?4wav@	; `string'
PUBLIC	??_C@_0BE@NKHEPCKK@data?2se?2saam_12?4wav@	; `string'
PUBLIC	??_C@_0BE@BBCICBAP@data?2se?2saam_13?4wav@	; `string'
PUBLIC	??_C@_0BE@MCNBBLH@data?2se?2saam_14?4wav@	; `string'
PUBLIC	??_C@_0BE@MHHBMCBC@data?2se?2saam_15?4wav@	; `string'
PUBLIC	??_C@_0BE@EBOFLALM@data?2se?2saam_16?4wav@	; `string'
PUBLIC	??_C@_0BE@IKLJGDBJ@data?2se?2saam_17?4wav@	; `string'
PUBLIC	??_C@_0BE@HLOPNBMM@data?2se?2saam_18?4wav@	; `string'
PUBLIC	??_C@_0BE@LALDACGJ@data?2se?2saam_19?4wav@	; `string'
PUBLIC	??_C@_0BE@KGFEEJDM@data?2se?2saam_20?4wav@	; `string'
PUBLIC	??_C@_0BE@GNAIJKJJ@data?2se?2saam_21?4wav@	; `string'
PUBLIC	??_C@_0BE@OLJMOIDH@data?2se?2saam_22?4wav@	; `string'
PUBLIC	??_C@_0BE@CAMADLJC@data?2se?2saam_23?4wav@	; `string'
PUBLIC	??_C@_0BE@DNMFALCK@data?2se?2saam_24?4wav@	; `string'
PUBLIC	??_C@_0BE@PGJJNIIP@data?2se?2saam_25?4wav@	; `string'
PUBLIC	??_C@_0BE@HAANKKCB@data?2se?2saam_26?4wav@	; `string'
PUBLIC	??_C@_0BE@LLFBHJIE@data?2se?2saam_27?4wav@	; `string'
PUBLIC	??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@	; `string'
PUBLIC	??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@	; `string'
PUBLIC	??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@	; `string'
PUBLIC	??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@	; `string'
PUBLIC	??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@	; `string'
PUBLIC	??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@	; `string'
PUBLIC	??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@	; `string'
PUBLIC	??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@	; `string'
PUBLIC	??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@	; `string'
PUBLIC	??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@	; `string'
PUBLIC	??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@	; `string'
PUBLIC	??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@	; `string'
PUBLIC	??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@	; `string'
PUBLIC	??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@	; `string'
PUBLIC	??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@	; `string'
PUBLIC	??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@	; `string'
PUBLIC	??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@	; `string'
PUBLIC	??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@	; `string'
PUBLIC	??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@	; `string'
PUBLIC	??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@	; `string'
PUBLIC	??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@	; `string'
PUBLIC	??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@	; `string'
PUBLIC	??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@	; `string'
PUBLIC	??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@	; `string'
PUBLIC	??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@	; `string'
PUBLIC	??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@	; `string'
PUBLIC	??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@	; `string'
PUBLIC	??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@	; `string'
PUBLIC	??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@	; `string'
PUBLIC	??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@	; `string'
PUBLIC	??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@	; `string'
PUBLIC	??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@	; `string'
PUBLIC	??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@	; `string'
PUBLIC	??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@	; `string'
PUBLIC	??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@	; `string'
PUBLIC	??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@	; `string'
PUBLIC	??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@	; `string'
PUBLIC	??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@	; `string'
PUBLIC	??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@	; `string'
PUBLIC	??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@	; `string'
PUBLIC	??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@	; `string'
PUBLIC	??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@	; `string'
PUBLIC	??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@	; `string'
PUBLIC	??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@	; `string'
PUBLIC	??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@	; `string'
PUBLIC	??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@	; `string'
PUBLIC	??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@	; `string'
PUBLIC	??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@	; `string'
PUBLIC	??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@	; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_07NFDJGGOK@oft?4mml@			; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0M@EFJNBEIB@?p?$KP?5?$CFd?5?z?$LM?5?$CFs@	; `string'
PUBLIC	??_C@_0N@MJJPGILB@?p?$KP?5?$CFd?5?k?e?$DP?5?$CFs@ ; `string'
PUBLIC	??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@		; `string'
PUBLIC	??_C@_02DPKJAMEF@?$CFd@				; `string'
PUBLIC	??_C@_03CCKOKKND@rb?$CL@			; `string'
PUBLIC	??_C@_03HBNNNHNM@map@				; `string'
PUBLIC	??_C@_02GMLFBBN@wb@				; `string'
PUBLIC	??_C@_07FIPNLLOL@cdaudio@			; `string'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@405fc00000000000
PUBLIC	__real@40b3880000000000
PUBLIC	__real@40c3880000000000
PUBLIC	__real@42f00000
PUBLIC	__real@4644e000
PUBLIC	__real@c003880000000000
PUBLIC	__xmm@00000001000000010000000100000001
PUBLIC	__xmm@00000004000000040000000400000004
PUBLIC	__xmm@00000008000000080000000800000008
PUBLIC	__xmm@00000030000000300000003000000030
PUBLIC	__xmm@ffffffffffffffffffffffffffffffff
EXTRN	__imp__QueryPerformanceCounter@4:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__WaitForMultipleObjects@16:PROC
EXTRN	__imp__CreateThread@24:PROC
EXTRN	__imp__ExitThread@4:PROC
EXTRN	__imp__LoadResource@8:PROC
EXTRN	__imp__LockResource@4:PROC
EXTRN	__imp__FindResourceA@12:PROC
EXTRN	__imp__GetAsyncKeyState@4:PROC
EXTRN	__imp__mciSendCommandA@16:PROC
EXTRN	__imp__mmioOpenA@12:PROC
EXTRN	__imp__mmioClose@8:PROC
EXTRN	__imp__mmioRead@12:PROC
EXTRN	__imp__mmioDescend@16:PROC
EXTRN	__imp__mmioAscend@12:PROC
EXTRN	__mkdir:PROC
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	_DirectSoundCreate@12:PROC
EXTRN	_fclose:PROC
EXTRN	_fgetc:PROC
EXTRN	_fopen:PROC
EXTRN	_fseek:PROC
EXTRN	_fwrite:PROC
EXTRN	___stdio_common_vsprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__chkstk:PROC
EXTRN	__libm_sse2_log_precise:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	?SaTimeZoneNo@@3HA:DWORD			; SaTimeZoneNo
EXTRN	?sCharSide@@3HA:DWORD				; sCharSide
EXTRN	?NowTime@@3KA:DWORD				; NowTime
EXTRN	_IID_IDirectSoundNotify:BYTE
EXTRN	?hWnd@@3PAUHWND__@@A:DWORD			; hWnd
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
?map_bgm_vct_no@@3HA DD 01H DUP (?)			; map_bgm_vct_no
?pDSbuffData@@3PAEA DD 01H DUP (?)			; pDSbuffData
?exit_thread_flg@@3DC DB 01H DUP (?)			; exit_thread_flg
	ALIGN	4

?thread_loop_start@@3HA DD 01H DUP (?)			; thread_loop_start
?thread_stop_flg@@3HA DD 01H DUP (?)			; thread_stop_flg
?pDSNotify@@3PAUIDirectSoundNotify@@A DD 01H DUP (?)	; pDSNotify
?stream_flg@@3DA DB 01H DUP (?)				; stream_flg
	ALIGN	8

?d_cnt@@3T_LARGE_INTEGER@@A DQ 01H DUP (?)		; d_cnt
?ch@@3HA DD	01H DUP (?)				; ch
?step_time@@3PAHA DD 020H DUP (?)			; step_time
?gate_time@@3PAHA DD 020H DUP (?)			; gate_time
?d_pedal@@3PAHA DD 020H DUP (?)				; d_pedal
?wave@@3PAHA DD	020H DUP (?)				; wave
?step_point@@3PAHA DD 020H DUP (?)			; step_point
?step_def@@3PAHA DD 020H DUP (?)			; step_def
?play_flg@@3PAHA DD 020H DUP (?)			; play_flg
?play_track_flg@@3PAHA DD 020H DUP (?)			; play_track_flg
?play_kuri_num@@3PAY0CA@HA DD 0100H DUP (?)		; play_kuri_num
?play_kuri_lv@@3PAHA DD 020H DUP (?)			; play_kuri_lv
?play_use_task@@3PAY07HA DD 0100H DUP (?)		; play_use_task
?dataToneNo@@3PAHA DD 020H DUP (?)			; dataToneNo
?tie_flg@@3PAHA DD 020H DUP (?)				; tie_flg
?note_old@@3PAY07HA DD 0100H DUP (?)			; note_old
?play_use_task_cnt@@3PAHA DD 020H DUP (?)		; play_use_task_cnt
?play_detune@@3PAHA DD 020H DUP (?)			; play_detune
?play_lfo_h@@3PAHA DD 020H DUP (?)			; play_lfo_h
?play_lfo_m@@3PAHA DD 020H DUP (?)			; play_lfo_m
?play_lfo_s@@3PAHA DD 020H DUP (?)			; play_lfo_s
?pause_flg@@3HA DD 01H DUP (?)				; pause_flg
?tempo@@3T_LARGE_INTEGER@@A DQ 01H DUP (?)		; tempo
?step@@3PAY0EAAA@HA DD 080000H DUP (?)			; step
?volume_tbl@@3PAJA DD 080H DUP (?)			; volume_tbl
?panpot_tbl@@3PAJA DD 080H DUP (?)			; panpot_tbl
?detune_tbl@@3PAHA DD 041H DUP (?)			; detune_tbl
?voice_seek_point@@3HA DD 01H DUP (?)			; voice_seek_point
?wave_count@@3JA DD 01H DUP (?)				; wave_count
?wave_address@@3JA DD 01H DUP (?)			; wave_address
?buffer_address@@3JA DD 01H DUP (?)			; buffer_address
?thread_start_flg@@3HC DD 01H DUP (?)			; thread_start_flg
?open@@3UtagMCI_OPEN_PARMSA@@A DB 014H DUP (?)		; open
?dwRes@@3KA DD	01H DUP (?)				; dwRes
?cdda_flg@@3HA DD 01H DUP (?)				; cdda_flg
_BSS	ENDS
;	COMDAT __xmm@ffffffffffffffffffffffffffffffff
CONST	SEGMENT
__xmm@ffffffffffffffffffffffffffffffff DB 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
	DB	0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00000030000000300000003000000030
CONST	SEGMENT
__xmm@00000030000000300000003000000030 DB '0', 00H, 00H, 00H, '0', 00H, 00H
	DB	00H, '0', 00H, 00H, 00H, '0', 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000008000000080000000800000008
CONST	SEGMENT
__xmm@00000008000000080000000800000008 DB 08H, 00H, 00H, 00H, 08H, 00H, 00H
	DB	00H, 08H, 00H, 00H, 00H, 08H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000004000000040000000400000004
CONST	SEGMENT
__xmm@00000004000000040000000400000004 DB 04H, 00H, 00H, 00H, 04H, 00H, 00H
	DB	00H, 04H, 00H, 00H, 00H, 04H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c003880000000000
CONST	SEGMENT
__real@c003880000000000 DQ 0c003880000000000r	; -2.44141
CONST	ENDS
;	COMDAT __real@4644e000
CONST	SEGMENT
__real@4644e000 DD 04644e000r			; 12600
CONST	ENDS
;	COMDAT __real@42f00000
CONST	SEGMENT
__real@42f00000 DD 042f00000r			; 120
CONST	ENDS
;	COMDAT __real@40c3880000000000
CONST	SEGMENT
__real@40c3880000000000 DQ 040c3880000000000r	; 10000
CONST	ENDS
;	COMDAT __real@40b3880000000000
CONST	SEGMENT
__real@40b3880000000000 DQ 040b3880000000000r	; 5000
CONST	ENDS
;	COMDAT __real@405fc00000000000
CONST	SEGMENT
__real@405fc00000000000 DQ 0405fc00000000000r	; 127
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT ??_C@_07FIPNLLOL@cdaudio@
CONST	SEGMENT
??_C@_07FIPNLLOL@cdaudio@ DB 'cdaudio', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02GMLFBBN@wb@
CONST	SEGMENT
??_C@_02GMLFBBN@wb@ DB 'wb', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HBNNNHNM@map@
CONST	SEGMENT
??_C@_03HBNNNHNM@map@ DB 'map', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CCKOKKND@rb?$CL@
CONST	SEGMENT
??_C@_03CCKOKKND@rb?$CL@ DB 'rb+', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPKJAMEF@?$CFd@
CONST	SEGMENT
??_C@_02DPKJAMEF@?$CFd@ DB '%d', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@
CONST	SEGMENT
??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@ DB 'map\bgm%d.dat', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MJJPGILB@?p?$KP?5?$CFd?5?k?e?$DP?5?$CFs@
CONST	SEGMENT
??_C@_0N@MJJPGILB@?p?$KP?5?$CFd?5?k?e?$DP?5?$CFs@ DB 0f0H, 0afH, ' %d ', 0ebH
	DB	0e5H, '? %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFJNBEIB@?p?$KP?5?$CFd?5?z?$LM?5?$CFs@
CONST	SEGMENT
??_C@_0M@EFJNBEIB@?p?$KP?5?$CFd?5?z?$LM?5?$CFs@ DB 0f0H, 0afH, ' %d ', 0faH
	DB	0bcH, ' %s', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07NFDJGGOK@oft?4mml@
CONST	SEGMENT
??_C@_07NFDJGGOK@oft?4mml@ DB 'oft.mml', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
_DATA	SEGMENT
?err_msg@@3PAPADA DD FLAT:??_C@_08LOOFPHBM@?$DP?d?P?$DP?$DP?c?w?$DP@ ; err_msg
	DD	FLAT:??_C@_0N@INFHKGBA@?$KD?S?$KD?t?$KD?e?$KD?p?$DP?$DP?$DP?$DP@
	DD	FLAT:??_C@_09JCKPJEPE@?k?e?$DP?r?$KG?o?R?$DP?$DP@
	DD	FLAT:??_C@_08IOICGCMD@?$KD?L?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_08CBNMEIFN@?$KD?T?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_08GDPJEPCA@?$KD?V?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@POFHDIIK@?$KD?$MA?$KD?V?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@DIDIDBAN@?$KD?$MA?$KD?P?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@ICOMAJKB@?$KD?$MA?$KD?F?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_08NJCNHHIM@?$KD?$MA?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0P@BPNGJDFB@?$KD?C?$KD?o?$KD?o?$KD?k?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_08ICLMPPGO@?$KD?M?$KD?M?$KD?L?$DP?$DP@
	DD	FLAT:??_C@_0L@MAMJAONM@?$KD?$MA?$KD?D?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@NLIJCIGI@?q?$LC?w?n?$DP?u?$LB?$DP?$DP?$DP@
	DD	FLAT:??_C@_0O@BDPOMKKB@?f?Q?q?$LE?k?e?$DP?r?$KG?o?R?$DP?$DP@
	DD	FLAT:??_C@_0N@PMDODFEN@?Z?c?$DP?$DP?$NL?$KP?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0M@KADLMLCJ@?Z?c?$DP?$DP?$NL?$KP?$DP?$NM?t?y?j@
	DD	FLAT:??_C@_0L@KBDAPCLE@?$DP?k?e?$DP?r?$KG?o?R?$DP?$DP@
	DD	FLAT:??_C@_0L@DCPNDIBE@?$KD?$MA?$KD?W?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_09DBOICEHL@?$DP?q?$LE?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_08GJDMEGDJ@?$KD?Q?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@BJOJBMHA@?$KD?$MA?$KD?K?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_06HJKPLLII@?$PL?z?k?e?$DP?$DP@
	DD	FLAT:??_C@_08NGFCA@?$KD?O?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@JHGGBLJD@?$KD?$MA?$KD?H?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@NPIGBFPH@?$KD?$MA?$KD?M?r?$KG?V?$LF?$DP?$DP@
	DD	FLAT:??_C@_0L@LGLHDGOO@?$KD?$MA?$KD?S?r?$KG?V?$LF?$DP?$DP@
?note_change_tbl@@3PAHA DD 09H				; note_change_tbl
	DD	0bH
	DD	00H
	DD	02H
	DD	04H
	DD	05H
	DD	07H
?freq_tbl@@3PAHA DD 05b4H				; freq_tbl
	DD	0ac4H
	DD	0b68H
	DD	0c15H
	DD	0ccdH
	DD	0d90H
	DD	0e5fH
	DD	0f1aH
	DD	01021H
	DD	01117H
	DD	0121bH
	DD	0132eH
	DD	01452H
	DD	01588H
	DD	016d0H
	DD	0182bH
	DD	0199bH
	DD	01b21H
	DD	01cbeH
	DD	01e34H
	DD	02043H
	DD	0222eH
	DD	02436H
	DD	0265dH
	DD	028a5H
	DD	02b11H
	DD	02da0H
	DD	03057H
	DD	03336H
	DD	03642H
	DD	0397cH
	DD	03c68H
	DD	04086H
	DD	0445dH
	DD	0486dH
	DD	04cbbH
	DD	0514bH
	DD	05622H
	DD	05b40H
	DD	060aeH
	DD	0666dH
	DD	06c84H
	DD	072f8H
	DD	078d1H
	DD	0810dH
	DD	088baH
	DD	090daH
	DD	09977H
	DD	0a297H
	DD	0ac44H
	DD	0b681H
	DD	0c15cH
	DD	0ccdbH
	DD	0d909H
	DD	0e5f1H
	DD	0f1a3H
	DD	01021aH
	DD	011174H
	DD	0121b5H
	DD	0132efH
	DD	01452fH
	DD	015888H
	DD	016d02H
	DD	0182b9H
	DD	0199b7H
	DD	01b213H
	DD	01cbe3H
	DD	01e346H
	DD	020435H
	DD	0222e8H
	DD	02436bH
	DD	0265deH
	DD	028a5fH
_DATA	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@
CONST	SEGMENT
??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@ DB 'data\se\sak_94.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@
CONST	SEGMENT
??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@ DB 'data\se\sak_93.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@
CONST	SEGMENT
??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@ DB 'data\se\sak_91.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@
CONST	SEGMENT
??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@ DB 'data\se\sax_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@
CONST	SEGMENT
??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@ DB 'data\se\sax_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@
CONST	SEGMENT
??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@ DB 'data\se\sax_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@
CONST	SEGMENT
??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@ DB 'data\se\sa2_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@
CONST	SEGMENT
??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@ DB 'data\se\sa1_23.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@
CONST	SEGMENT
??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@ DB 'data\se\sa1_22.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@
CONST	SEGMENT
??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@ DB 'data\se\sa1_21.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@
CONST	SEGMENT
??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@ DB 'data\se\sa1_20.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@
CONST	SEGMENT
??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@ DB 'data\se\sa1_19.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@
CONST	SEGMENT
??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@ DB 'data\se\sa1_18.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@
CONST	SEGMENT
??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@ DB 'data\se\sa1_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@
CONST	SEGMENT
??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@ DB 'data\se\sa1_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@
CONST	SEGMENT
??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@ DB 'data\se\sa1_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@
CONST	SEGMENT
??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@ DB 'data\se\sa1_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@
CONST	SEGMENT
??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@ DB 'data\se\sa1_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@
CONST	SEGMENT
??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@ DB 'data\se\sa3_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@
CONST	SEGMENT
??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@ DB 'data\se\sa3_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@
CONST	SEGMENT
??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@ DB 'data\se\sa1_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@
CONST	SEGMENT
??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@ DB 'data\se\sa1_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@
CONST	SEGMENT
??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@ DB 'data\se\sa1_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@
CONST	SEGMENT
??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@ DB 'data\se\sa1_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@
CONST	SEGMENT
??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@ DB 'data\se\sa1_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@
CONST	SEGMENT
??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@ DB 'data\se\sa1_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@
CONST	SEGMENT
??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@ DB 'data\se\sa1_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@
CONST	SEGMENT
??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@ DB 'data\se\sa1_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@
CONST	SEGMENT
??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@ DB 'data\se\sa1_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@
CONST	SEGMENT
??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@ DB 'data\se\sa1_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@
CONST	SEGMENT
??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@ DB 'data\se\sa3_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@
CONST	SEGMENT
??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@ DB 'data\se\sa3_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@
CONST	SEGMENT
??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@ DB 'data\se\sa3_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@
CONST	SEGMENT
??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@ DB 'data\se\sa3_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@
CONST	SEGMENT
??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@ DB 'data\se\sa3_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@
CONST	SEGMENT
??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@ DB 'data\se\sa3_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@
CONST	SEGMENT
??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@ DB 'data\se\sa3_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@
CONST	SEGMENT
??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@ DB 'data\se\sa2_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@
CONST	SEGMENT
??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@ DB 'data\se\sa2_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@
CONST	SEGMENT
??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@ DB 'data\se\sa2_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@
CONST	SEGMENT
??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@ DB 'data\se\sa2_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@
CONST	SEGMENT
??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@ DB 'data\se\sa2_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@
CONST	SEGMENT
??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@ DB 'data\se\sa2_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@
CONST	SEGMENT
??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@ DB 'data\se\sa2_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@
CONST	SEGMENT
??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@ DB 'data\se\sa2_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@
CONST	SEGMENT
??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@ DB 'data\se\sa2_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@
CONST	SEGMENT
??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@ DB 'data\se\sa2_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@
CONST	SEGMENT
??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@ DB 'data\se\sa1_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@
CONST	SEGMENT
??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@ DB 'data\se\sa1_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LLFBHJIE@data?2se?2saam_27?4wav@
CONST	SEGMENT
??_C@_0BE@LLFBHJIE@data?2se?2saam_27?4wav@ DB 'data\se\saam_27.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAANKKCB@data?2se?2saam_26?4wav@
CONST	SEGMENT
??_C@_0BE@HAANKKCB@data?2se?2saam_26?4wav@ DB 'data\se\saam_26.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGJJNIIP@data?2se?2saam_25?4wav@
CONST	SEGMENT
??_C@_0BE@PGJJNIIP@data?2se?2saam_25?4wav@ DB 'data\se\saam_25.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNMFALCK@data?2se?2saam_24?4wav@
CONST	SEGMENT
??_C@_0BE@DNMFALCK@data?2se?2saam_24?4wav@ DB 'data\se\saam_24.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CAMADLJC@data?2se?2saam_23?4wav@
CONST	SEGMENT
??_C@_0BE@CAMADLJC@data?2se?2saam_23?4wav@ DB 'data\se\saam_23.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OLJMOIDH@data?2se?2saam_22?4wav@
CONST	SEGMENT
??_C@_0BE@OLJMOIDH@data?2se?2saam_22?4wav@ DB 'data\se\saam_22.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GNAIJKJJ@data?2se?2saam_21?4wav@
CONST	SEGMENT
??_C@_0BE@GNAIJKJJ@data?2se?2saam_21?4wav@ DB 'data\se\saam_21.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KGFEEJDM@data?2se?2saam_20?4wav@
CONST	SEGMENT
??_C@_0BE@KGFEEJDM@data?2se?2saam_20?4wav@ DB 'data\se\saam_20.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LALDACGJ@data?2se?2saam_19?4wav@
CONST	SEGMENT
??_C@_0BE@LALDACGJ@data?2se?2saam_19?4wav@ DB 'data\se\saam_19.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HLOPNBMM@data?2se?2saam_18?4wav@
CONST	SEGMENT
??_C@_0BE@HLOPNBMM@data?2se?2saam_18?4wav@ DB 'data\se\saam_18.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IKLJGDBJ@data?2se?2saam_17?4wav@
CONST	SEGMENT
??_C@_0BE@IKLJGDBJ@data?2se?2saam_17?4wav@ DB 'data\se\saam_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EBOFLALM@data?2se?2saam_16?4wav@
CONST	SEGMENT
??_C@_0BE@EBOFLALM@data?2se?2saam_16?4wav@ DB 'data\se\saam_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MHHBMCBC@data?2se?2saam_15?4wav@
CONST	SEGMENT
??_C@_0BE@MHHBMCBC@data?2se?2saam_15?4wav@ DB 'data\se\saam_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MCNBBLH@data?2se?2saam_14?4wav@
CONST	SEGMENT
??_C@_0BE@MCNBBLH@data?2se?2saam_14?4wav@ DB 'data\se\saam_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BBCICBAP@data?2se?2saam_13?4wav@
CONST	SEGMENT
??_C@_0BE@BBCICBAP@data?2se?2saam_13?4wav@ DB 'data\se\saam_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NKHEPCKK@data?2se?2saam_12?4wav@
CONST	SEGMENT
??_C@_0BE@NKHEPCKK@data?2se?2saam_12?4wav@ DB 'data\se\saam_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FMOAIAAE@data?2se?2saam_11?4wav@
CONST	SEGMENT
??_C@_0BE@FMOAIAAE@data?2se?2saam_11?4wav@ DB 'data\se\saam_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHLMFDKB@data?2se?2saam_10?4wav@
CONST	SEGMENT
??_C@_0BE@JHLMFDKB@data?2se?2saam_10?4wav@ DB 'data\se\saam_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BGMEAJNN@data?2se?2saam_09?4wav@
CONST	SEGMENT
??_C@_0BE@BGMEAJNN@data?2se?2saam_09?4wav@ DB 'data\se\saam_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NNJINKHI@data?2se?2saam_08?4wav@
CONST	SEGMENT
??_C@_0BE@NNJINKHI@data?2se?2saam_08?4wav@ DB 'data\se\saam_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CMMOGIKN@data?2se?2saam_07?4wav@
CONST	SEGMENT
??_C@_0BE@CMMOGIKN@data?2se?2saam_07?4wav@ DB 'data\se\saam_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OHJCLLAI@data?2se?2saam_06?4wav@
CONST	SEGMENT
??_C@_0BE@OHJCLLAI@data?2se?2saam_06?4wav@ DB 'data\se\saam_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GBAGMJKG@data?2se?2saam_05?4wav@
CONST	SEGMENT
??_C@_0BE@GBAGMJKG@data?2se?2saam_05?4wav@ DB 'data\se\saam_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KKFKBKAD@data?2se?2saam_04?4wav@
CONST	SEGMENT
??_C@_0BE@KKFKBKAD@data?2se?2saam_04?4wav@ DB 'data\se\saam_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LHFPCKLL@data?2se?2saam_03?4wav@
CONST	SEGMENT
??_C@_0BE@LHFPCKLL@data?2se?2saam_03?4wav@ DB 'data\se\saam_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HMADPJBO@data?2se?2saam_02?4wav@
CONST	SEGMENT
??_C@_0BE@HMADPJBO@data?2se?2saam_02?4wav@ DB 'data\se\saam_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PKJHILLA@data?2se?2saam_01?4wav@
CONST	SEGMENT
??_C@_0BE@PKJHILLA@data?2se?2saam_01?4wav@ DB 'data\se\saam_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@
CONST	SEGMENT
??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@ DB 'data\se\sad_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@
CONST	SEGMENT
??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@ DB 'data\se\sad_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@
CONST	SEGMENT
??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@ DB 'data\se\sad_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@
CONST	SEGMENT
??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@ DB 'data\se\sad_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@
CONST	SEGMENT
??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@ DB 'data\se\sad_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@
CONST	SEGMENT
??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@ DB 'data\se\sas_21.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@
CONST	SEGMENT
??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@ DB 'data\se\sas_20.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@
CONST	SEGMENT
??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@ DB 'data\se\sas_19.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@
CONST	SEGMENT
??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@ DB 'data\se\sas_18.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@
CONST	SEGMENT
??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@ DB 'data\se\sas_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@
CONST	SEGMENT
??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@ DB 'data\se\sas_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@
CONST	SEGMENT
??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@ DB 'data\se\sas_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@
CONST	SEGMENT
??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@ DB 'data\se\sas_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@
CONST	SEGMENT
??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@ DB 'data\se\sas_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@
CONST	SEGMENT
??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@ DB 'data\se\sas_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@
CONST	SEGMENT
??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@ DB 'data\se\sas_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@
CONST	SEGMENT
??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@ DB 'data\se\sas_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@
CONST	SEGMENT
??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@ DB 'data\se\sas_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@
CONST	SEGMENT
??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@ DB 'data\se\sas_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@
CONST	SEGMENT
??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@ DB 'data\se\sas_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@
CONST	SEGMENT
??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@ DB 'data\se\sas_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@
CONST	SEGMENT
??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@ DB 'data\se\sas_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@
CONST	SEGMENT
??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@ DB 'data\se\sas_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@
CONST	SEGMENT
??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@ DB 'data\se\sas_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@
CONST	SEGMENT
??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@ DB 'data\se\sas_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PLDLHOLA@data?2se?2sak_09b?4wav@
CONST	SEGMENT
??_C@_0BE@PLDLHOLA@data?2se?2sak_09b?4wav@ DB 'data\se\sak_09b.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@
CONST	SEGMENT
??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@ DB 'data\se\sak_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@
CONST	SEGMENT
??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@ DB 'data\se\sak_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@
CONST	SEGMENT
??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@ DB 'data\se\sak_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@
CONST	SEGMENT
??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@ DB 'data\se\sak_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@
CONST	SEGMENT
??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@ DB 'data\se\sak_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@
CONST	SEGMENT
??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@ DB 'data\se\sak_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@
CONST	SEGMENT
??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@ DB 'data\se\sak_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@
CONST	SEGMENT
??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@ DB 'data\se\sak_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HNKPAMBO@data?2se?2sak_09a?4wav@
CONST	SEGMENT
??_C@_0BE@HNKPAMBO@data?2se?2sak_09a?4wav@ DB 'data\se\sak_09a.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@
CONST	SEGMENT
??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@ DB 'data\se\sak_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@
CONST	SEGMENT
??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@ DB 'data\se\sak_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@
CONST	SEGMENT
??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@ DB 'data\se\sak_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@
CONST	SEGMENT
??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@ DB 'data\se\sak_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@
CONST	SEGMENT
??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@ DB 'data\se\sak_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@
CONST	SEGMENT
??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@ DB 'data\se\sak_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@
CONST	SEGMENT
??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@ DB 'data\se\sak_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@
CONST	SEGMENT
??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@ DB 'data\se\sak_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@
CONST	SEGMENT
??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@ DB 'data\se\sam_24.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@
CONST	SEGMENT
??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@ DB 'data\se\sam_23.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@
CONST	SEGMENT
??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@ DB 'data\se\sam_22.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@
CONST	SEGMENT
??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@ DB 'data\se\sam_21.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@
CONST	SEGMENT
??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@ DB 'data\se\sam_20.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@
CONST	SEGMENT
??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@ DB 'data\se\sam_19.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@
CONST	SEGMENT
??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@ DB 'data\se\sam_18.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@
CONST	SEGMENT
??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@ DB 'data\se\sam_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@
CONST	SEGMENT
??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@ DB 'data\se\sam_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@
CONST	SEGMENT
??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@ DB 'data\se\sam_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@
CONST	SEGMENT
??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@ DB 'data\se\sam_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@
CONST	SEGMENT
??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@ DB 'data\se\sam_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@
CONST	SEGMENT
??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@ DB 'data\se\sam_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@
CONST	SEGMENT
??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@ DB 'data\se\sam_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@
CONST	SEGMENT
??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@ DB 'data\se\sam_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@
CONST	SEGMENT
??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@ DB 'data\se\sam_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@
CONST	SEGMENT
??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@ DB 'data\se\sam_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@
CONST	SEGMENT
??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@ DB 'data\se\sam_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@
CONST	SEGMENT
??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@ DB 'data\se\sam_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@
CONST	SEGMENT
??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@ DB 'data\se\sam_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@
CONST	SEGMENT
??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@ DB 'data\se\sam_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@
CONST	SEGMENT
??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@ DB 'data\se\sam_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@
CONST	SEGMENT
??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@ DB 'data\se\sam_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@
CONST	SEGMENT
??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@ DB 'data\se\sam_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@
CONST	SEGMENT
??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@ DB 'data\se\sae_32.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@
CONST	SEGMENT
??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@ DB 'data\se\sae_31.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@
CONST	SEGMENT
??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@ DB 'data\se\sae_30.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@
CONST	SEGMENT
??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@ DB 'data\se\sae_29.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@
CONST	SEGMENT
??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@ DB 'data\se\sae_28.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@
CONST	SEGMENT
??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@ DB 'data\se\sae_27.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@
CONST	SEGMENT
??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@ DB 'data\se\sae_26.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@
CONST	SEGMENT
??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@ DB 'data\se\sae_25.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@
CONST	SEGMENT
??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@ DB 'data\se\sae_24.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@
CONST	SEGMENT
??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@ DB 'data\se\sae_23.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@
CONST	SEGMENT
??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@ DB 'data\se\sae_22.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@
CONST	SEGMENT
??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@ DB 'data\se\sae_21.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@
CONST	SEGMENT
??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@ DB 'data\se\sae_20.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@
CONST	SEGMENT
??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@ DB 'data\se\sae_19.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@
CONST	SEGMENT
??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@ DB 'data\se\sae_18.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@
CONST	SEGMENT
??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@ DB 'data\se\sae_17.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@
CONST	SEGMENT
??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@ DB 'data\se\sae_16.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@
CONST	SEGMENT
??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@ DB 'data\se\sae_15.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@
CONST	SEGMENT
??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@ DB 'data\se\sae_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@
CONST	SEGMENT
??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@ DB 'data\se\sae_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@
CONST	SEGMENT
??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@ DB 'data\se\sae_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@
CONST	SEGMENT
??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@ DB 'data\se\sae_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@
CONST	SEGMENT
??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@ DB 'data\se\sae_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@
CONST	SEGMENT
??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@ DB 'data\se\sae_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@
CONST	SEGMENT
??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@ DB 'data\se\sae_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@
CONST	SEGMENT
??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@ DB 'data\se\sae_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@
CONST	SEGMENT
??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@ DB 'data\se\sae_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@
CONST	SEGMENT
??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@ DB 'data\se\sae_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@
CONST	SEGMENT
??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@ DB 'data\se\sae_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@
CONST	SEGMENT
??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@ DB 'data\se\sae_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@
CONST	SEGMENT
??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@ DB 'data\se\sae_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@
CONST	SEGMENT
??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@ DB 'data\se\sae_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@
CONST	SEGMENT
??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@ DB 'data\se\sap_13.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@
CONST	SEGMENT
??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@ DB 'data\se\sap_12.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@
CONST	SEGMENT
??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@ DB 'data\se\sap_14.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@
CONST	SEGMENT
??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@ DB 'data\se\sap_11.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@
CONST	SEGMENT
??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@ DB 'data\se\sap_10.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@
CONST	SEGMENT
??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@ DB 'data\se\sap_09.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@
CONST	SEGMENT
??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@ DB 'data\se\sap_08.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@
CONST	SEGMENT
??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@ DB 'data\se\sap_07.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@
CONST	SEGMENT
??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@ DB 'data\se\sap_06.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@
CONST	SEGMENT
??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@ DB 'data\se\sap_05.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@
CONST	SEGMENT
??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@ DB 'data\se\sap_04.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@
CONST	SEGMENT
??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@ DB 'data\se\sap_03.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@
CONST	SEGMENT
??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@ DB 'data\se\sap_02.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@
CONST	SEGMENT
??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@ DB 'data\se\sap_01.wav', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04HFHJMNCD@WAVE@
CONST	SEGMENT
??_C@_04HFHJMNCD@WAVE@ DB 'WAVE', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?cdda_start@@YA_NH@Z
_TEXT	SEGMENT
_play$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_n$ = 8							; size = 4
?cdda_start@@YA_NH@Z PROC				; cdda_start, COMDAT

; 3641 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3642 : 	// ?î??
; 3643 : 		// ???? n??î
; 3644 : 	MCI_PLAY_PARMS play;
; 3645 : 	play.dwFrom = MCI_MAKE_TMSF(n, 0, 0, 0);

  00010	8a 4d 08	 mov	 cl, BYTE PTR _n$[ebp]
  00013	0f b6 c1	 movzx	 eax, cl

; 3646 : 	play.dwTo = MCI_MAKE_TMSF(n + 1, 0, 0, 0);

  00016	fe c1		 inc	 cl
  00018	89 45 f4	 mov	 DWORD PTR _play$[ebp+4], eax
  0001b	0f b6 c1	 movzx	 eax, cl
  0001e	89 45 f8	 mov	 DWORD PTR _play$[ebp+8], eax

; 3647 : 	dwRes = mciSendCommand(open.wDeviceID,

  00021	8d 45 f0	 lea	 eax, DWORD PTR _play$[ebp]
  00024	50		 push	 eax
  00025	6a 0c		 push	 12			; 0000000cH
  00027	68 06 08 00 00	 push	 2054			; 00000806H
  0002c	ff 35 04 00 00
	00		 push	 DWORD PTR ?open@@3UtagMCI_OPEN_PARMSA@@A+4
  00032	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mciSendCommandA@16
  00038	a3 00 00 00 00	 mov	 DWORD PTR ?dwRes@@3KA, eax

; 3648 : 		MCI_PLAY, MCI_FROM | MCI_TO,
; 3649 : 		(DWORD)&play);
; 3650 : 	if (dwRes)

  0003d	85 c0		 test	 eax, eax
  0003f	74 1a		 je	 SHORT $LN2@cdda_start

; 3651 : 	{
; 3652 : #ifdef  _STONDEBUG_
; 3653 : 		//		MessageBox(hWnd, "??????????????", "??", MB_OK);
; 3654 : #endif
; 3655 : 		cdda_flg = 2;		//????????î§î²

  00041	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?cdda_flg@@3HA, 2

; 3656 : 		return FALSE;

  0004b	32 c0		 xor	 al, al

; 3657 : 	}
; 3658 : 	return TRUE;
; 3659 : }

  0004d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00050	33 cd		 xor	 ecx, ebp
  00052	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00057	8b e5		 mov	 esp, ebp
  00059	5d		 pop	 ebp
  0005a	c3		 ret	 0
$LN2@cdda_start:
  0005b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0005e	b0 01		 mov	 al, 1
  00060	33 cd		 xor	 ecx, ebp
  00062	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c3		 ret	 0
?cdda_start@@YA_NH@Z ENDP				; cdda_start
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?cdda_open@@YA_NH@Z
_TEXT	SEGMENT
_set$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_n$ = 8							; size = 4
?cdda_open@@YA_NH@Z PROC				; cdda_open, COMDAT

; 3602 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 3603 : 	cdda_flg = 0;
; 3604 : 	// ?????? 2?î¯??????
; 3605 : 	_ASSERT(n > 1);
; 3606 : 
; 3607 : 	//    MCI_OPEN_PARMS open  = {0};
; 3608 : 	//  MCIERROR       dwRes = {0};
; 3609 : 
; 3610 : 	// ???????
; 3611 : 	open.lpstrDeviceType = "cdaudio";
; 3612 : 	dwRes = mciSendCommand(0, MCI_OPEN, MCI_OPEN_TYPE, (DWORD)&open);

  00010	68 00 00 00 00	 push	 OFFSET ?open@@3UtagMCI_OPEN_PARMSA@@A
  00015	68 00 20 00 00	 push	 8192			; 00002000H
  0001a	68 03 08 00 00	 push	 2051			; 00000803H
  0001f	6a 00		 push	 0
  00021	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cdda_flg@@3HA, 0
  0002b	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?open@@3UtagMCI_OPEN_PARMSA@@A+8, OFFSET ??_C@_07FIPNLLOL@cdaudio@
  00035	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mciSendCommandA@16
  0003b	a3 00 00 00 00	 mov	 DWORD PTR ?dwRes@@3KA, eax

; 3613 : 	if (dwRes)

  00040	85 c0		 test	 eax, eax
  00042	75 3a		 jne	 SHORT $LN5@cdda_open

; 3614 : 	{
; 3615 : #ifdef  _STONDEBUG_
; 3616 : 		//		MessageBox(hWnd, "æå¼CDé³è½¨å¤±è´¥ï¼", "??", MB_OK);
; 3617 : #endif
; 3618 : 		cdda_flg = 1;
; 3619 : 		return FALSE;
; 3620 : 	}
; 3621 : 
; 3622 : 	// ?????????????îî???
; 3623 : 	MCI_SET_PARMS set;
; 3624 : 	set.dwTimeFormat = MCI_FORMAT_TMSF;
; 3625 : 	dwRes = mciSendCommand(open.wDeviceID, MCI_SET,

  00044	8d 45 f0	 lea	 eax, DWORD PTR _set$[ebp]
  00047	c7 45 f4 0a 00
	00 00		 mov	 DWORD PTR _set$[ebp+4], 10 ; 0000000aH
  0004e	50		 push	 eax
  0004f	68 00 04 00 00	 push	 1024			; 00000400H
  00054	68 0d 08 00 00	 push	 2061			; 0000080dH
  00059	ff 35 04 00 00
	00		 push	 DWORD PTR ?open@@3UtagMCI_OPEN_PARMSA@@A+4
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mciSendCommandA@16
  00065	a3 00 00 00 00	 mov	 DWORD PTR ?dwRes@@3KA, eax

; 3626 : 		MCI_SET_TIME_FORMAT, (DWORD)&set);
; 3627 : 	if (dwRes)

  0006a	85 c0		 test	 eax, eax
  0006c	75 10		 jne	 SHORT $LN5@cdda_open

; 3628 : 	{
; 3629 : #ifdef  _STONDEBUG_
; 3630 : 		//		MessageBox(hWnd, "æå¼CDé³è½¨å¤±è´¥ï¼", "??", MB_OK);
; 3631 : #endif
; 3632 : 		cdda_flg = 1;
; 3633 : 		return FALSE;
; 3634 : 	}
; 3635 : 	return TRUE;

  0006e	b0 01		 mov	 al, 1

; 3636 : }

  00070	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00073	33 cd		 xor	 ecx, ebp
  00075	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c3		 ret	 0
$LN5@cdda_open:
  0007e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00081	32 c0		 xor	 al, al
  00083	33 cd		 xor	 ecx, ebp
  00085	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?cdda_flg@@3HA, 1
  0008f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00094	8b e5		 mov	 esp, ebp
  00096	5d		 pop	 ebp
  00097	c3		 ret	 0
?cdda_open@@YA_NH@Z ENDP				; cdda_open
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?bgm_fade_check@@YAXXZ
_TEXT	SEGMENT
?bgm_fade_check@@YAXXZ PROC				; bgm_fade_check, COMDAT

; 3534 : 	//?î??????
; 3535 : 	if (t_music_playing_flg == 0) {

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?t_music_playing_flg@@3HA, 0 ; t_music_playing_flg
  00007	75 0b		 jne	 SHORT $LN2@bgm_fade_c

; 3536 : 		t_music_fade_flg = 0;

  00009	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?t_music_fade_flg@@3HA, 0 ; t_music_fade_flg

; 3551 : 	}
; 3552 : }

  00013	c3		 ret	 0
$LN2@bgm_fade_c:

; 3537 : 		return;
; 3538 : 	}
; 3539 : 	//????????????
; 3540 : 	if (!t_music_fade_flg) {

  00014	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?t_music_fade_flg@@3HA, 0 ; t_music_fade_flg
  0001b	74 33		 je	 SHORT $LN5@bgm_fade_c

; 3541 : 		return;
; 3542 : 	}
; 3543 : 	//???????î·???
; 3544 : 	if (!t_music_fade_vol) {

  0001d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?t_music_fade_vol@@3HA ; t_music_fade_vol
  00023	85 d2		 test	 edx, edx
  00025	75 10		 jne	 SHORT $LN4@bgm_fade_c

; 3545 : 		stop_bgm();

  00027	e8 00 00 00 00	 call	 ?stop_bgm@@YAXXZ	; stop_bgm

; 3546 : 		t_music_bgm_no = -1;

  0002c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?t_music_bgm_no@@3HA, -1 ; t_music_bgm_no

; 3551 : 	}
; 3552 : }

  00036	c3		 ret	 0
$LN4@bgm_fade_c:

; 3547 : 	}
; 3548 : 	else {
; 3549 : 		// ????????
; 3550 : 		pDSData_tone[TONE_MAX]->SetVolume(volume_tbl[--t_music_fade_vol]);

  00037	a1 d0 07 00 00	 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  0003c	4a		 dec	 edx
  0003d	89 15 00 00 00
	00		 mov	 DWORD PTR ?t_music_fade_vol@@3HA, edx ; t_music_fade_vol
  00043	ff 34 95 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[edx*4]
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	50		 push	 eax
  0004d	ff 51 3c	 call	 DWORD PTR [ecx+60]
$LN5@bgm_fade_c:

; 3551 : 	}
; 3552 : }

  00050	c3		 ret	 0
?bgm_fade_check@@YAXXZ ENDP				; bgm_fade_check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_environment_check@@YAXXZ
_TEXT	SEGMENT
?play_environment_check@@YAXXZ PROC			; play_environment_check, COMDAT

; 3480 : {

  00000	53		 push	 ebx

; 3481 : 	int d0, d1, d3, d7;
; 3482 : 	for (d7 = 0; d7 < MAX_ENV; d7++) {

  00001	33 db		 xor	 ebx, ebx
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	be 00 00 00 00	 mov	 esi, OFFSET ?env_tbl@@3PAUENVIRONMENT_EQU@@A ; env_tbl
  0000a	8d 53 fe	 lea	 edx, DWORD PTR [ebx-2]
  0000d	0f 1f 00	 npad	 3
$LL4@play_envir:

; 3483 : 		if (env_tbl[d7].count == 0) {		//?î¡???

  00010	83 7e 08 00	 cmp	 DWORD PTR [esi+8], 0
  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	75 33		 jne	 SHORT $LN5@play_envir

; 3484 : 			if (env_tbl[d7].voice_address != -1) {		//î???

  00018	83 f8 ff	 cmp	 eax, -1
  0001b	0f 84 bd 00 00
	00		 je	 $LN2@play_envir

; 3485 : 				pDSData[env_tbl[d7].voice_address]->Stop();		//????

  00021	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00028	50		 push	 eax
  00029	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002b	ff 51 48	 call	 DWORD PTR [ecx+72]

; 3486 : 				voice[env_tbl[d7].voice_address].loop_flg = 0;		//????îî·?

  0002e	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00030	c1 e1 04	 shl	 ecx, 4
  00033	2b 0e		 sub	 ecx, DWORD PTR [esi]

; 3487 : 				env_tbl[d7].voice_address = -1;

  00035	c7 06 ff ff ff
	ff		 mov	 DWORD PTR [esi], -1
  0003b	c7 04 8d 30 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+48], 0
  00046	e9 8e 00 00 00	 jmp	 $LN24@play_envir
$LN5@play_envir:

; 3488 : 			}
; 3489 : 			continue;
; 3490 : 		}
; 3491 : 		if (env_tbl[d7].voice_address == -1) {		//î¡???

  0004b	83 f8 ff	 cmp	 eax, -1
  0004e	75 1c		 jne	 SHORT $LN7@play_envir

; 3492 : 			env_tbl[d7].voice_address = voice_seek_point;

  00050	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA

; 3493 : 			env_tbl[d7].volume_old = -1;
; 3494 : 			env_tbl[d7].panpot_old = -1;
; 3495 : 			d0 = 1;

  00055	bf 01 00 00 00	 mov	 edi, 1
  0005a	89 06		 mov	 DWORD PTR [esi], eax
  0005c	c7 46 14 ff ff
	ff ff		 mov	 DWORD PTR [esi+20], -1
  00063	c7 46 20 ff ff
	ff ff		 mov	 DWORD PTR [esi+32], -1

; 3496 : 		}

  0006a	eb 02		 jmp	 SHORT $LN8@play_envir
$LN7@play_envir:

; 3497 : 		else {
; 3498 : 			d0 = 0;

  0006c	33 ff		 xor	 edi, edi
$LN8@play_envir:

; 3499 : 		}
; 3500 : 
; 3501 : 		if (stereo_flg == T_MUSIC_MONO) {		//??????

  0006e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?stereo_flg@@3HA, 0 ; stereo_flg
  00075	75 0a		 jne	 SHORT $LN9@play_envir

; 3502 : 			env_tbl[d7].panpot = d1 = 64;

  00077	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0007c	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx

; 3503 : 		}

  0007f	eb 29		 jmp	 SHORT $LN12@play_envir
$LN9@play_envir:

; 3504 : 		else {
; 3505 : 			d1 = env_tbl[d7].side / 5;			//?????î±?î?

  00081	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H

; 3506 : 			if (d1 < 0)			//
; 3507 : 				d1 = 0;			//
; 3508 : 			if (d1 > 127)		//

  00086	b9 00 00 00 00	 mov	 ecx, 0
  0008b	f7 6e 18	 imul	 DWORD PTR [esi+24]
  0008e	d1 fa		 sar	 edx, 1
  00090	8b c2		 mov	 eax, edx
  00092	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00095	03 c2		 add	 eax, edx
  00097	ba fe ff ff ff	 mov	 edx, -2			; fffffffeH
  0009c	0f 49 c8	 cmovns	 ecx, eax
  0009f	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  000a4	83 f9 7f	 cmp	 ecx, 127		; 0000007fH
  000a7	0f 4f c8	 cmovg	 ecx, eax
$LN12@play_envir:

; 3509 : 				d1 = 127;		//
; 3510 : 		}
; 3511 : 
; 3512 : 		if (d0) {		//î¡???

  000aa	85 ff		 test	 edi, edi
  000ac	75 17		 jne	 SHORT $LN14@play_envir

; 3513 : 			env_tbl[d7].panpot = d1;
; 3514 : 		}
; 3515 : 		else {
; 3516 : 			d3 = d1 - env_tbl[d7].panpot;

  000ae	8b 46 1c	 mov	 eax, DWORD PTR [esi+28]
  000b1	2b c8		 sub	 ecx, eax

; 3517 : 			if (d3 > 2)

  000b3	83 f9 02	 cmp	 ecx, 2
  000b6	7e 05		 jle	 SHORT $LN15@play_envir

; 3518 : 				d3 = 2;

  000b8	8d 4f 02	 lea	 ecx, DWORD PTR [edi+2]

; 3519 : 			if (d3 < -2)

  000bb	eb 06		 jmp	 SHORT $LN16@play_envir
$LN15@play_envir:
  000bd	83 f9 fe	 cmp	 ecx, -2			; fffffffeH
  000c0	0f 4c ca	 cmovl	 ecx, edx
$LN16@play_envir:

; 3520 : 				d3 = -2;
; 3521 : 			//?????îî
; 3522 : 			env_tbl[d7].panpot += d3;

  000c3	03 c8		 add	 ecx, eax
$LN14@play_envir:

; 3523 : 		}
; 3524 : 		//		play_environment_tone(env_tbl[d7].tone, env_tbl[d7].distance, env_tbl[d7].voice_address, env_tbl[d7].panpot, d0);
; 3525 : 		play_environment_tone(d7, d0);

  000c5	57		 push	 edi
  000c6	53		 push	 ebx
  000c7	89 4e 1c	 mov	 DWORD PTR [esi+28], ecx
  000ca	e8 00 00 00 00	 call	 ?play_environment_tone@@YAHHH@Z ; play_environment_tone
  000cf	83 c4 08	 add	 esp, 8

; 3526 : 
; 3527 : 		env_tbl[d7].count = 0;		//????????

  000d2	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
$LN24@play_envir:

; 3481 : 	int d0, d1, d3, d7;
; 3482 : 	for (d7 = 0; d7 < MAX_ENV; d7++) {

  000d9	ba fe ff ff ff	 mov	 edx, -2			; fffffffeH
$LN2@play_envir:
  000de	83 c6 24	 add	 esi, 36			; 00000024H
  000e1	43		 inc	 ebx
  000e2	81 fe d0 02 00
	00		 cmp	 esi, OFFSET ?env_tbl@@3PAUENVIRONMENT_EQU@@A+720
  000e8	0f 8c 22 ff ff
	ff		 jl	 $LL4@play_envir

; 3528 : 	}
; 3529 : }

  000ee	5f		 pop	 edi
  000ef	5e		 pop	 esi
  000f0	5b		 pop	 ebx
  000f1	c3		 ret	 0
?play_environment_check@@YAXXZ ENDP			; play_environment_check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_map_bgm_check@@YAXXZ
_TEXT	SEGMENT
?play_map_bgm_check@@YAXXZ PROC				; play_map_bgm_check, COMDAT

; 3279 : 	switch (map_bgm_vct_no) {

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?map_bgm_vct_no@@3HA
  00006	83 f9 03	 cmp	 ecx, 3
  00009	77 70		 ja	 SHORT $LN2@play_map_b
  0000b	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN12@play_map_b[ecx*4]
$LN4@play_map_b:

; 3280 : 	case 0:		//???î?????
; 3281 : 		if (draw_map_bgm_flg) {

  00012	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?draw_map_bgm_flg@@3HA, 0 ; draw_map_bgm_flg
  00019	74 19		 je	 SHORT $LN6@play_map_b

; 3282 : 			if (t_music_bgm_no != map_bgm_no) {		//???î???

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?t_music_bgm_no@@3HA ; t_music_bgm_no
  00020	ba 01 00 00 00	 mov	 edx, 1
  00025	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?map_bgm_no@@3HA ; map_bgm_no
  0002b	0f 45 ca	 cmovne	 ecx, edx
  0002e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?map_bgm_vct_no@@3HA, ecx
$LN6@play_map_b:

; 3283 : 				map_bgm_vct_no++;		//????????î¿?
; 3284 : 			}
; 3285 : 		}
; 3286 : 		draw_map_bgm_flg = 0;

  00034	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?draw_map_bgm_flg@@3HA, 0 ; draw_map_bgm_flg

; 3303 : 		break;
; 3304 : 	}
; 3305 : }

  0003e	c3		 ret	 0
$LN7@play_map_b:

; 3287 : 		break;
; 3288 : 
; 3289 : 	case 1:		//???????????î¿
; 3290 : 		fade_out_bgm();

  0003f	e8 00 00 00 00	 call	 ?fade_out_bgm@@YAXXZ	; fade_out_bgm

; 3291 : 		map_bgm_vct_no++;		//???????î·?î??

  00044	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?map_bgm_vct_no@@3HA, 2

; 3303 : 		break;
; 3304 : 	}
; 3305 : }

  0004e	c3		 ret	 0
$LN8@play_map_b:

; 3292 : 		break;
; 3293 : 
; 3294 : 	case 2:		//??????????î·?î?
; 3295 : 		if (t_music_fade_flg == 0) {		//???????î·???

  0004f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?t_music_fade_flg@@3HA, 0 ; t_music_fade_flg
  00056	75 23		 jne	 SHORT $LN2@play_map_b

; 3296 : 			map_bgm_vct_no++;		//????î?

  00058	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?map_bgm_vct_no@@3HA, 3

; 3303 : 		break;
; 3304 : 	}
; 3305 : }

  00062	c3		 ret	 0
$LN10@play_map_b:

; 3297 : 		}
; 3298 : 		break;
; 3299 : 
; 3300 : 	case 3:		//????î
; 3301 : 		play_bgm(map_bgm_no);		//????î

  00063	ff 35 00 00 00
	00		 push	 DWORD PTR ?map_bgm_no@@3HA ; map_bgm_no
  00069	e8 00 00 00 00	 call	 ?play_bgm@@YAHH@Z	; play_bgm
  0006e	83 c4 04	 add	 esp, 4

; 3302 : 		map_bgm_vct_no = 0;		//???î??????

  00071	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_bgm_vct_no@@3HA, 0
$LN2@play_map_b:

; 3303 : 		break;
; 3304 : 	}
; 3305 : }

  0007b	c3		 ret	 0
$LN12@play_map_b:
  0007c	00 00 00 00	 DD	 $LN4@play_map_b
  00080	00 00 00 00	 DD	 $LN7@play_map_b
  00084	00 00 00 00	 DD	 $LN8@play_map_b
  00088	00 00 00 00	 DD	 $LN10@play_map_b
?play_map_bgm_check@@YAXXZ ENDP				; play_map_bgm_check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_environment_tone@@YAHHH@Z
_TEXT	SEGMENT
_tbl_no$ = 8						; size = 4
_new_flg$ = 12						; size = 4
?play_environment_tone@@YAHHH@Z PROC			; play_environment_tone, COMDAT

; 3174 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3175 : 	int d0;
; 3176 : 	//	int total_level;
; 3177 : 
; 3178 : 	//	t_music_se_no = tone;
; 3179 : #ifdef _NB_CANCEL_BGM
; 3180 : 	if (å£°é³å¼å³) return -1;

  00003	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	0f 85 fe 00 00
	00		 jne	 $LN28@play_envir

; 3181 : #endif
; 3182 : 	if (dsound_flg == -1)

  00012	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00019	0f 84 f1 00 00
	00		 je	 $LN28@play_envir

; 3183 : 		return -1;
; 3184 : 
; 3185 : 	if (env_tbl[tbl_no].tone > TONE_MAX) {		//?????î¯??

  0001f	8b 45 08	 mov	 eax, DWORD PTR _tbl_no$[ebp]
  00022	8d 34 c0	 lea	 esi, DWORD PTR [eax+eax*8]
  00025	8b 3c b5 04 00
	00 00		 mov	 edi, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+4]
  0002c	81 ff f4 01 00
	00		 cmp	 edi, 500		; 000001f4H
  00032	0f 8f d8 00 00
	00		 jg	 $LN28@play_envir

; 3186 : 		return -1;
; 3187 : 	}
; 3188 : 
; 3189 : 	if (tone_tbl[env_tbl[tbl_no].tone].voice_place == -1) {		//î ¹î??î??

  00038	8b c7		 mov	 eax, edi
  0003a	c1 e0 05	 shl	 eax, 5
  0003d	83 b8 00 00 00
	00 ff		 cmp	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[eax], -1
  00044	0f 84 c6 00 00
	00		 je	 $LN28@play_envir

; 3190 : 		return -1;
; 3191 : 	}
; 3192 : 
; 3193 : 	//	if(tone_tbl[ env_tbl[tbl_no].tone ].play_time){		//???î???
; 3194 : 	//		return 0;
; 3195 : 	//	}
; 3196 : 
; 3197 : 	env_tbl[tbl_no].distance = env_tbl[tbl_no].distance << 4;		//?????î±?î?

  0004a	8b 0c b5 0c 00
	00 00		 mov	 ecx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+12]

; 3198 : 	env_tbl[tbl_no].distance /= 0x6a;				//

  00051	b8 ed 73 48 4d	 mov	 eax, 1296593901		; 4d4873edH
  00056	c1 e1 04	 shl	 ecx, 4
  00059	f7 e9		 imul	 ecx

; 3199 : 
; 3200 : //	if(env_tbl[tbl_no].distance >= 127)				//îª????
; 3201 : //		return 0;					//î¡????
; 3202 : 
; 3203 : 	if (env_tbl[tbl_no].distance >= 127)				//îª????

  0005b	b9 7f 00 00 00	 mov	 ecx, 127		; 0000007fH
  00060	c1 fa 05	 sar	 edx, 5
  00063	8b c2		 mov	 eax, edx
  00065	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00068	03 c2		 add	 eax, edx
  0006a	3b c1		 cmp	 eax, ecx
  0006c	0f 4d c1	 cmovge	 eax, ecx

; 3204 : 		env_tbl[tbl_no].distance = 127;					//î¡????
; 3205 : 
; 3206 : 	if (new_flg) {		//î¡???

  0006f	83 7d 0c 00	 cmp	 DWORD PTR _new_flg$[ebp], 0
  00073	89 04 b5 0c 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+12], eax
  0007a	0f 84 97 00 00
	00		 je	 $LN13@play_envir

; 3207 : 		//î·???îî±????
; 3208 : 		d0 = voice[env_tbl[tbl_no].voice_address].tone_no;

  00080	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  00087	8b c8		 mov	 ecx, eax
  00089	c1 e1 04	 shl	 ecx, 4
  0008c	2b c8		 sub	 ecx, eax
  0008e	8b 14 8d 04 00
	00 00		 mov	 edx, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+4]

; 3209 : 		if (voice[env_tbl[tbl_no].voice_address].tone_no != env_tbl[tbl_no].tone) {		//î¯??îî±??????

  00095	3b d7		 cmp	 edx, edi
  00097	74 7e		 je	 SHORT $LN13@play_envir

; 3210 : 			voice[env_tbl[tbl_no].voice_address].tone_no = env_tbl[tbl_no].tone;		//?îî±?îî¼

  00099	89 3c 8d 04 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+4], edi

; 3211 : 			//???????????îî¤î§î²?????
; 3212 : 			if (d0 != -2) {

  000a0	83 fa fe	 cmp	 edx, -2			; fffffffeH
  000a3	74 2a		 je	 SHORT $LN12@play_envir

; 3213 : 				RELEASE(pDSData[env_tbl[tbl_no].voice_address]);		//?î´

  000a5	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  000ac	85 c9		 test	 ecx, ecx
  000ae	74 1f		 je	 SHORT $LN12@play_envir
  000b0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000b2	51		 push	 ecx
  000b3	ff 50 08	 call	 DWORD PTR [eax+8]
  000b6	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  000bd	8b 3c b5 04 00
	00 00		 mov	 edi, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+4]
  000c4	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4], 0
$LN12@play_envir:

; 3214 : 			}
; 3215 : 			//?î???
; 3216 : 			if (pDSound->DuplicateSoundBuffer(pDSData_tone[tone_tbl[env_tbl[tbl_no].tone].voice_place], &pDSData[env_tbl[tbl_no].voice_address]) != DS_OK) {

  000cf	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  000d5	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  000dc	c1 e7 05	 shl	 edi, 5
  000df	50		 push	 eax
  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	8b 87 00 00 00
	00		 mov	 eax, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi]
  000e8	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  000ef	51		 push	 ecx
  000f0	ff 52 14	 call	 DWORD PTR [edx+20]
  000f3	85 c0		 test	 eax, eax
  000f5	74 20		 je	 SHORT $LN13@play_envir

; 3217 : #ifdef  _STONDEBUG_
; 3218 : 				MessageBox(hWnd, "å¤å¶å£°é³bufferå¤±è´¥ï¼", "Error", MB_OK);
; 3219 : #endif
; 3220 : 				//???????????îî¤î§î²??????
; 3221 : 				voice[env_tbl[tbl_no].voice_address].tone_no = -2;

  000f7	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  000fe	8b c8		 mov	 ecx, eax
  00100	c1 e1 04	 shl	 ecx, 4
  00103	2b c8		 sub	 ecx, eax
  00105	c7 04 8d 04 00
	00 00 fe ff ff
	ff		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+4], -2 ; fffffffeH
$LN28@play_envir:

; 3274 : }

  00110	5f		 pop	 edi
  00111	83 c8 ff	 or	 eax, -1
  00114	5e		 pop	 esi
  00115	5d		 pop	 ebp
  00116	c3		 ret	 0
$LN13@play_envir:

; 3222 : 				return -1;
; 3223 : 			}
; 3224 : 		}
; 3225 : 	}
; 3226 : 
; 3227 : 	//?î?????
; 3228 : //	total_level = (127 - env_tbl[tbl_no].volume) * tone_tbl[ env_tbl[tbl_no].tone ].voice_volume / 127;
; 3229 : 
; 3230 : 	//?????????
; 3231 : //	total_level = total_level * t_music_se_volume / 15;
; 3232 : 
; 3233 : 	//??????î?????
; 3234 : 	if (env_tbl[tbl_no].volume != env_tbl[tbl_no].volume_old) {

  00117	8b 14 b5 10 00
	00 00		 mov	 edx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+16]
  0011e	3b 14 b5 14 00
	00 00		 cmp	 edx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+20]
  00125	74 29		 je	 SHORT $LN14@play_envir

; 3235 : 		// ????????
; 3236 : 		pDSData[env_tbl[tbl_no].voice_address]->SetVolume(volume_tbl[env_tbl[tbl_no].volume]);

  00127	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  0012e	ff 34 95 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[edx*4]
  00135	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  0013c	50		 push	 eax
  0013d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013f	ff 51 3c	 call	 DWORD PTR [ecx+60]

; 3237 : 		env_tbl[tbl_no].volume_old = env_tbl[tbl_no].volume;

  00142	8b 04 b5 10 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+16]
  00149	89 04 b5 14 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+20], eax
$LN14@play_envir:

; 3238 : 	}
; 3239 : 
; 3240 : 	//??????î?????
; 3241 : 	if (env_tbl[tbl_no].panpot != env_tbl[tbl_no].panpot_old) {

  00150	8b 14 b5 1c 00
	00 00		 mov	 edx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+28]
  00157	3b 14 b5 20 00
	00 00		 cmp	 edx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+32]
  0015e	74 29		 je	 SHORT $LN15@play_envir

; 3242 : 		// ????????
; 3243 : 		pDSData[env_tbl[tbl_no].voice_address]->SetPan(panpot_tbl[env_tbl[tbl_no].panpot]);

  00160	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  00167	ff 34 95 00 00
	00 00		 push	 DWORD PTR ?panpot_tbl@@3PAJA[edx*4]
  0016e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00175	50		 push	 eax
  00176	8b 08		 mov	 ecx, DWORD PTR [eax]
  00178	ff 51 40	 call	 DWORD PTR [ecx+64]

; 3244 : 		env_tbl[tbl_no].panpot_old = env_tbl[tbl_no].panpot;

  0017b	8b 04 b5 1c 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+28]
  00182	89 04 b5 20 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+32], eax
$LN15@play_envir:

; 3245 : 	}
; 3246 : 
; 3247 : 	//???î±?îî??
; 3248 : 	if (tone_tbl[env_tbl[tbl_no].tone].voice_note) {

  00189	8b 3c b5 04 00
	00 00		 mov	 edi, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+4]
  00190	c1 e7 05	 shl	 edi, 5
  00193	83 bf 10 00 00
	00 00		 cmp	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+16], 0
  0019a	74 27		 je	 SHORT $LN16@play_envir

; 3249 : 		pDSData[env_tbl[tbl_no].voice_address]->SetFrequency(

  0019c	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  001a3	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  001aa	8b 87 18 00 00
	00		 mov	 eax, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+24]
  001b0	03 87 10 00 00
	00		 add	 eax, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+16]
  001b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b8	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?freq_tbl@@3PAHA[eax*4]
  001bf	51		 push	 ecx
  001c0	ff 52 44	 call	 DWORD PTR [edx+68]
$LN16@play_envir:

; 3250 : 			(DWORD)freq_tbl[tone_tbl[env_tbl[tbl_no].tone].voice_note + tone_tbl[env_tbl[tbl_no].tone].voice_rate]);
; 3251 : 	}
; 3252 : 
; 3253 : 	if (new_flg) {		//î¡???

  001c3	83 7d 0c 00	 cmp	 DWORD PTR _new_flg$[ebp], 0
  001c7	74 78		 je	 SHORT $LN23@play_envir

; 3254 : 		pDSData[env_tbl[tbl_no].voice_address]->SetCurrentPosition(0);	//

  001c9	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  001d0	6a 00		 push	 0
  001d2	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  001d9	50		 push	 eax
  001da	8b 08		 mov	 ecx, DWORD PTR [eax]
  001dc	ff 51 34	 call	 DWORD PTR [ecx+52]

; 3255 : 		if (tone_tbl[env_tbl[tbl_no].tone].voice_loop == 0) {		//???î¡???

  001df	8b 04 b5 04 00
	00 00		 mov	 eax, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+4]
  001e6	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4]
  001ed	c1 e0 05	 shl	 eax, 5
  001f0	83 b8 08 00 00
	00 00		 cmp	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[eax+8], 0
  001f7	75 04		 jne	 SHORT $LN18@play_envir

; 3256 : 			pDSData[env_tbl[tbl_no].voice_address]->Play(0, 0, 0);			//????

  001f9	6a 00		 push	 0

; 3257 : 		}

  001fb	eb 14		 jmp	 SHORT $LN33@play_envir
$LN18@play_envir:

; 3258 : 		else {
; 3259 : 			voice[env_tbl[tbl_no].voice_address].loop_flg = 1;		//????î

  001fd	8b c1		 mov	 eax, ecx
  001ff	c1 e0 04	 shl	 eax, 4
  00202	2b c1		 sub	 eax, ecx

; 3260 : 			pDSData[env_tbl[tbl_no].voice_address]->Play(0, 0, DSBPLAY_LOOPING);		//????

  00204	6a 01		 push	 1
  00206	c7 04 85 30 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4+48], 1
$LN33@play_envir:
  00211	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[ecx*4]
  00218	6a 00		 push	 0
  0021a	6a 00		 push	 0
  0021c	50		 push	 eax
  0021d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021f	ff 51 30	 call	 DWORD PTR [ecx+48]
  00222	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
$LL2@play_envir:

; 3261 : 		}
; 3262 : 
; 3263 : 		while (1) {
; 3264 : 			voice_seek_point++;		//??????î¡

  00227	40		 inc	 eax

; 3265 : 			voice_seek_point &= VOICE_MAX - 1;				//

  00228	83 e0 3f	 and	 eax, 63			; 0000003fH

; 3266 : 			if (voice[voice_seek_point].loop_flg == 0) {		//????î??????

  0022b	8b c8		 mov	 ecx, eax
  0022d	c1 e1 04	 shl	 ecx, 4
  00230	2b c8		 sub	 ecx, eax
  00232	83 3c 8d 30 00
	00 00 00	 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+48], 0
  0023a	75 eb		 jne	 SHORT $LL2@play_envir

; 3265 : 			voice_seek_point &= VOICE_MAX - 1;				//

  0023c	a3 00 00 00 00	 mov	 DWORD PTR ?voice_seek_point@@3HA, eax
$LN23@play_envir:
  00241	5f		 pop	 edi

; 3267 : 				break;
; 3268 : 			}
; 3269 : 		}
; 3270 : 	}
; 3271 : 	//	tone_tbl[ env_tbl[tbl_no].tone ].play_time = 8;		//?î??????
; 3272 : 
; 3273 : 	return 0;

  00242	33 c0		 xor	 eax, eax

; 3274 : }

  00244	5e		 pop	 esi
  00245	5d		 pop	 ebp
  00246	c3		 ret	 0
?play_environment_tone@@YAHHH@Z ENDP			; play_environment_tone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?dwSoundInit2@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@PAUHMMIO__@@@Z
_TEXT	SEGMENT
_dsbdesc$ = -120					; size = 36
_dsbufferdesc$ = -84					; size = 36
_pcmwf$ = -48						; size = 18
_pn$ = -28						; size = 24
__$ArrayPad$ = -4					; size = 4
_pWfmtx$ = 8						; size = 4
_DataSize$ = 12						; size = 4
_ppData$ = 16						; size = 4
_hmmio$ = 20						; size = 4
?dwSoundInit2@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@PAUHMMIO__@@@Z PROC ; dwSoundInit2, COMDAT

; 2675 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 78	 sub	 esp, 120		; 00000078H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2676 : 	// ?????????????????????
; 2677 : 	WAVEFORMATEX pcmwf = *pWfmtx;
; 2678 : 	DSBUFFERDESC  dsbufferdesc;
; 2679 : 	HRESULT ret;
; 2680 : 
; 2681 : 	//?î´????
; 2682 : 	if (stream_flg == 1) {

  00010	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?stream_flg@@3DA, 1
  00017	53		 push	 ebx
  00018	8b 5d 10	 mov	 ebx, DWORD PTR _ppData$[ebp]
  0001b	56		 push	 esi
  0001c	8b 75 08	 mov	 esi, DWORD PTR _pWfmtx$[ebp]
  0001f	57		 push	 edi
  00020	8b 7d 14	 mov	 edi, DWORD PTR _hmmio$[ebp]
  00023	0f 10 06	 movups	 xmm0, XMMWORD PTR [esi]
  00026	66 8b 46 10	 mov	 ax, WORD PTR [esi+16]
  0002a	66 89 45 e0	 mov	 WORD PTR _pcmwf$[ebp+16], ax
  0002e	0f 11 45 d0	 movups	 XMMWORD PTR _pcmwf$[ebp], xmm0
  00032	75 21		 jne	 SHORT $LN4@dwSoundIni

; 2683 : 		RELEASE(pDSNotify);

  00034	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A
  0003a	85 c9		 test	 ecx, ecx
  0003c	74 10		 je	 SHORT $LN5@dwSoundIni
  0003e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00040	51		 push	 ecx
  00041	ff 50 08	 call	 DWORD PTR [eax+8]
  00044	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A, 0
$LN5@dwSoundIni:

; 2684 : 		stream_flg = 0;

  0004e	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?stream_flg@@3DA, 0
$LN4@dwSoundIni:

; 2685 : 	}
; 2686 : 	//??????????????
; 2687 : 	memset(&dsbufferdesc, 0, sizeof(DSBUFFERDESC));
; 2688 : 	dsbufferdesc.dwSize = sizeof(DSBUFFERDESC);
; 2689 : 	dsbufferdesc.dwFlags = DSBCAPS_CTRLPOSITIONNOTIFY | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2;
; 2690 : 	//	dsbufferdesc.dwFlags = DSBCAPS_CTRLPOSITIONNOTIFY | DSBCAPS_STATIC | DSBCAPS_CTRLDEFAULT | DSBCAPS_GETCURRENTPOSITION2 | DSBCAPS_GLOBALFOCUS; 
; 2691 : 	dsbufferdesc.dwBufferBytes = DataSize;

  00055	8b 45 0c	 mov	 eax, DWORD PTR _DataSize$[ebp]

; 2692 : 	dsbufferdesc.lpwfxFormat = pWfmtx;
; 2693 : 	if (pDSound->CreateSoundBuffer(&dsbufferdesc, ppData, NULL) != DS_OK) {

  00058	8d 55 ac	 lea	 edx, DWORD PTR _dsbufferdesc$[ebp]
  0005b	89 45 b4	 mov	 DWORD PTR _dsbufferdesc$[ebp+8], eax
  0005e	0f 57 c0	 xorps	 xmm0, xmm0
  00061	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  00066	6a 00		 push	 0
  00068	53		 push	 ebx
  00069	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _dsbufferdesc$[ebp+12], 0
  00070	66 0f 13 45 c0	 movlpd	 QWORD PTR _dsbufferdesc$[ebp+20], xmm0
  00075	66 0f 13 45 c8	 movlpd	 QWORD PTR _dsbufferdesc$[ebp+28], xmm0
  0007a	c7 45 ac 24 00
	00 00		 mov	 DWORD PTR _dsbufferdesc$[ebp], 36 ; 00000024H
  00081	c7 45 b0 e0 01
	01 00		 mov	 DWORD PTR _dsbufferdesc$[ebp+4], 66016 ; 000101e0H
  00088	89 75 bc	 mov	 DWORD PTR _dsbufferdesc$[ebp+16], esi
  0008b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0008d	52		 push	 edx
  0008e	50		 push	 eax
  0008f	ff 51 0c	 call	 DWORD PTR [ecx+12]
  00092	85 c0		 test	 eax, eax
  00094	75 7b		 jne	 SHORT $LN27@dwSoundIni

; 2694 : #ifdef  _STONDEBUG_
; 2695 : 		MessageBox(hWnd, "å»ºç«å£°é³çbufferå¤±è´¥ï¼", "Error", MB_OK);
; 2696 : #endif
; 2697 : 		return FALSE;
; 2698 : 	}
; 2699 : 
; 2700 : 
; 2701 : 	//??????????
; 2702 : 	if (WaveDataRead(hmmio, &DataSize, pDSData_stream) == FALSE) {

  00096	ff 35 00 00 00
	00		 push	 DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A ; pDSData_stream
  0009c	8d 45 0c	 lea	 eax, DWORD PTR _DataSize$[ebp]
  0009f	50		 push	 eax
  000a0	57		 push	 edi
  000a1	e8 00 00 00 00	 call	 ?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z ; WaveDataRead
  000a6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000a9	85 c0		 test	 eax, eax
  000ab	74 64		 je	 SHORT $LN27@dwSoundIni

; 2703 : #ifdef  _STONDEBUG_
; 2704 : 		MessageBox(hWnd, "è¯»åWAVæ¡£å¤±è´¥ï¼", "Error", MB_OK);
; 2705 : #endif
; 2706 : 		return FALSE;
; 2707 : 	}
; 2708 : 
; 2709 : 	// ?????????????????????
; 2710 : //	WAVEFORMATEX pcmwf = *pWaveHeader;
; 2711 : 	DSBUFFERDESC dsbdesc;
; 2712 : 	// DSBUFFERDESC?î¨î?îî
; 2713 : 	ZeroMemory(&dsbdesc, sizeof(DSBUFFERDESC));
; 2714 : 	dsbdesc.dwSize = sizeof(DSBUFFERDESC);
; 2715 : #if ACTIVE
; 2716 : 	dsbdesc.dwFlags = DSBCAPS_CTRLPOSITIONNOTIFY | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2 | DSBCAPS_GLOBALFOCUS;
; 2717 : #else
; 2718 : 	dsbdesc.dwFlags = DSBCAPS_CTRLPOSITIONNOTIFY | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2;
; 2719 : #endif
; 2720 : 	// î¯?îî??Wave??????????î¾????????
; 2721 : 	dsbdesc.dwBufferBytes = 2 * pcmwf.nAvgBytesPerSec;

  000ad	8b 45 d8	 mov	 eax, DWORD PTR _pcmwf$[ebp+8]

; 2722 : 	dsbdesc.lpwfxFormat = &pcmwf;
; 2723 : 	ret = pDSound->CreateSoundBuffer(&dsbdesc, &pDSData_tone[TONE_MAX], NULL);

  000b0	8d 55 88	 lea	 edx, DWORD PTR _dsbdesc$[ebp]
  000b3	03 c0		 add	 eax, eax
  000b5	c7 45 94 00 00
	00 00		 mov	 DWORD PTR _dsbdesc$[ebp+12], 0
  000bc	89 45 90	 mov	 DWORD PTR _dsbdesc$[ebp+8], eax
  000bf	0f 57 c0	 xorps	 xmm0, xmm0
  000c2	8d 45 d0	 lea	 eax, DWORD PTR _pcmwf$[ebp]
  000c5	66 0f 13 45 9c	 movlpd	 QWORD PTR _dsbdesc$[ebp+20], xmm0
  000ca	89 45 98	 mov	 DWORD PTR _dsbdesc$[ebp+16], eax
  000cd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  000d2	6a 00		 push	 0
  000d4	68 d0 07 00 00	 push	 OFFSET ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  000d9	66 0f 13 45 a4	 movlpd	 QWORD PTR _dsbdesc$[ebp+28], xmm0
  000de	c7 45 88 24 00
	00 00		 mov	 DWORD PTR _dsbdesc$[ebp], 36 ; 00000024H
  000e5	c7 45 8c e0 81
	01 00		 mov	 DWORD PTR _dsbdesc$[ebp+4], 98784 ; 000181e0H
  000ec	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ee	52		 push	 edx
  000ef	50		 push	 eax
  000f0	ff 51 0c	 call	 DWORD PTR [ecx+12]

; 2724 : 	if (ret != DS_OK) {

  000f3	85 c0		 test	 eax, eax
  000f5	74 2d		 je	 SHORT $LN8@dwSoundIni

; 2725 : 		// ??????î?î§î²
; 2726 : //		RELEASE(pDSound);
; 2727 : 		RELEASE(pDSData_stream);

  000f7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A ; pDSData_stream
  000fd	85 c9		 test	 ecx, ecx
  000ff	74 10		 je	 SHORT $LN27@dwSoundIni
  00101	8b 01		 mov	 eax, DWORD PTR [ecx]
  00103	51		 push	 ecx
  00104	ff 50 08	 call	 DWORD PTR [eax+8]
  00107	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A, 0 ; pDSData_stream
$LN27@dwSoundIni:

; 2809 : 			break;
; 2810 : 	}
; 2811 : 
; 2812 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_HIGHEST);
; 2813 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_ABOVE_NORMAL);
; 2814 : 	//	pDSData_tone[ TONE_MAX ]->Play(0, 0, DSBPLAY_LOOPING);
; 2815 : 	return TRUE;
; 2816 : }

  00111	5f		 pop	 edi
  00112	5e		 pop	 esi
  00113	33 c0		 xor	 eax, eax
  00115	5b		 pop	 ebx
  00116	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00119	33 cd		 xor	 ecx, ebp
  0011b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00120	8b e5		 mov	 esp, ebp
  00122	5d		 pop	 ebp
  00123	c3		 ret	 0
$LN8@dwSoundIni:

; 2728 : #ifdef  _STONDEBUG_
; 2729 : 		MessageBox(hWnd, "å»ºç«å£°é³çbufferå¤±è´¥ï¼", "Error", MB_OK);
; 2730 : #endif
; 2731 : 		return FALSE;
; 2732 : 	}
; 2733 : 
; 2734 : 	// DirectSoundNotify????????î??
; 2735 : 	ret = pDSData_tone[TONE_MAX]->QueryInterface(IID_IDirectSoundNotify, (LPVOID*)&pDSNotify);

  00124	a1 d0 07 00 00	 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  00129	68 00 00 00 00	 push	 OFFSET ?pDSNotify@@3PAUIDirectSoundNotify@@A
  0012e	68 00 00 00 00	 push	 OFFSET _IID_IDirectSoundNotify
  00133	50		 push	 eax
  00134	8b 08		 mov	 ecx, DWORD PTR [eax]
  00136	ff 11		 call	 DWORD PTR [ecx]

; 2736 : 	if (ret != DS_OK)

  00138	85 c0		 test	 eax, eax
  0013a	0f 85 87 00 00
	00		 jne	 $LN14@dwSoundIni

; 2737 : 	{
; 2738 : 		//		RELEASE(pDSound);
; 2739 : 		RELEASE(pDSData_stream);
; 2740 : 		RELEASE(pDSData_tone[TONE_MAX]);
; 2741 : #ifdef  _STONDEBUG_
; 2742 : 		MessageBox(hWnd, "å»ºç«DirectSoundNotifyå¤±è´¥ï¼", "Error", MB_OK);
; 2743 : #endif
; 2744 : 		return FALSE;
; 2745 : 		//  ?î?î§î²
; 2746 : 	}
; 2747 : 
; 2748 : 	// ?????????????î
; 2749 : 	hEvent[0] = CreateEvent(NULL, FALSE, FALSE, NULL);

  00140	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__CreateEventA@16
  00146	50		 push	 eax
  00147	50		 push	 eax
  00148	50		 push	 eax
  00149	50		 push	 eax
  0014a	ff d6		 call	 esi

; 2750 : 	hEvent[1] = CreateEvent(NULL, FALSE, FALSE, NULL);

  0014c	6a 00		 push	 0
  0014e	6a 00		 push	 0
  00150	6a 00		 push	 0
  00152	6a 00		 push	 0
  00154	a3 00 00 00 00	 mov	 DWORD PTR ?hEvent@@3PAPAXA, eax
  00159	ff d6		 call	 esi

; 2751 : 	hEvent[2] = CreateEvent(NULL, FALSE, FALSE, NULL);

  0015b	6a 00		 push	 0
  0015d	6a 00		 push	 0
  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	a3 04 00 00 00	 mov	 DWORD PTR ?hEvent@@3PAPAXA+4, eax
  00168	ff d6		 call	 esi

; 2752 : 
; 2753 : 	// DirectSoundNotify???????îî??
; 2754 : 	// ?î¨î????
; 2755 : 	DSBPOSITIONNOTIFY  pn[3];
; 2756 : 	pn[0].dwOffset = 0;	// ?î¾?
; 2757 : 	pn[0].hEventNotify = hEvent[0];

  0016a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?hEvent@@3PAPAXA

; 2758 : 	pn[1].dwOffset = 1 * pcmwf.nAvgBytesPerSec;	// ?î¾?
; 2759 : 	pn[1].hEventNotify = hEvent[1];
; 2760 : 	pn[2].dwOffset = DSBPN_OFFSETSTOP;	// ?îîî
; 2761 : 	pn[2].hEventNotify = hEvent[2];	// ??????????????îî?????????î¸?
; 2762 : 
; 2763 : 	// îî?îºîî
; 2764 : 	HRESULT hr;
; 2765 : 	hr = pDSNotify->SetNotificationPositions(3, pn);

  00170	8d 55 e4	 lea	 edx, DWORD PTR _pn$[ebp]
  00173	a3 08 00 00 00	 mov	 DWORD PTR ?hEvent@@3PAPAXA+8, eax
  00178	89 4d e8	 mov	 DWORD PTR _pn$[ebp+4], ecx
  0017b	8b 4d d8	 mov	 ecx, DWORD PTR _pcmwf$[ebp+8]
  0017e	89 45 f8	 mov	 DWORD PTR _pn$[ebp+20], eax
  00181	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A
  00186	89 4d ec	 mov	 DWORD PTR _pn$[ebp+8], ecx
  00189	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?hEvent@@3PAPAXA+4
  0018f	52		 push	 edx
  00190	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _pn$[ebp], 0
  00197	89 4d f0	 mov	 DWORD PTR _pn$[ebp+12], ecx
  0019a	c7 45 f4 ff ff
	ff ff		 mov	 DWORD PTR _pn$[ebp+16], -1
  001a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a3	6a 03		 push	 3
  001a5	50		 push	 eax
  001a6	ff 51 0c	 call	 DWORD PTR [ecx+12]

; 2766 : 	if (hr != DS_OK)

  001a9	85 c0		 test	 eax, eax
  001ab	74 65		 je	 SHORT $LN13@dwSoundIni

; 2767 : 	{
; 2768 : 		// îîî§î²
; 2769 : 		RELEASE(pDSNotify);

  001ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A
  001b3	85 c9		 test	 ecx, ecx
  001b5	74 10		 je	 SHORT $LN14@dwSoundIni
  001b7	8b 01		 mov	 eax, DWORD PTR [ecx]
  001b9	51		 push	 ecx
  001ba	ff 50 08	 call	 DWORD PTR [eax+8]
  001bd	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A, 0
$LN14@dwSoundIni:

; 2796 : 	{
; 2797 : #ifdef  _STONDEBUG_
; 2798 : 		// ?????îî?î§î²
; 2799 : #ifdef  _STONDEBUG_
; 2800 : 		MessageBox(hWnd, "å»ºç«Threadå¤±è´¥ï¼", "Error", MB_OK);
; 2801 : #endif
; 2802 : #endif
; 2803 : 		return FALSE;

  001c7	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A ; pDSData_stream
  001cd	85 c9		 test	 ecx, ecx
  001cf	74 10		 je	 SHORT $LN15@dwSoundIni
  001d1	8b 01		 mov	 eax, DWORD PTR [ecx]
  001d3	51		 push	 ecx
  001d4	ff 50 08	 call	 DWORD PTR [eax+8]
  001d7	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A, 0 ; pDSData_stream
$LN15@dwSoundIni:
  001e1	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  001e7	85 c9		 test	 ecx, ecx
  001e9	0f 84 22 ff ff
	ff		 je	 $LN27@dwSoundIni
  001ef	8b 01		 mov	 eax, DWORD PTR [ecx]
  001f1	51		 push	 ecx
  001f2	ff 50 08	 call	 DWORD PTR [eax+8]
  001f5	5f		 pop	 edi

; 2809 : 			break;
; 2810 : 	}
; 2811 : 
; 2812 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_HIGHEST);
; 2813 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_ABOVE_NORMAL);
; 2814 : 	//	pDSData_tone[ TONE_MAX ]->Play(0, 0, DSBPLAY_LOOPING);
; 2815 : 	return TRUE;
; 2816 : }

  001f6	5e		 pop	 esi
  001f7	c7 05 d0 07 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000, 0
  00201	33 c0		 xor	 eax, eax
  00203	5b		 pop	 ebx
  00204	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00207	33 cd		 xor	 ecx, ebp
  00209	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0020e	8b e5		 mov	 esp, ebp
  00210	5d		 pop	 ebp
  00211	c3		 ret	 0
$LN13@dwSoundIni:

; 2770 : 		//		RELEASE(pDSound);
; 2771 : 		RELEASE(pDSData_stream);
; 2772 : 		RELEASE(pDSData_tone[TONE_MAX]);
; 2773 : #ifdef  _STONDEBUG_
; 2774 : 		MessageBox(hWnd, "è®¾å®DirectSoundNotifyå¤±è´¥ï¼", "Error", MB_OK);
; 2775 : #endif
; 2776 : 		return FALSE;
; 2777 : 	}
; 2778 : 
; 2779 : 	stream_flg = 1;		//?î??????
; 2780 : 
; 2781 : 	// ??????????????
; 2782 : 	thread_start_flg = 0;
; 2783 : 
; 2784 : 	// ?î????????
; 2785 : 	sd.pDSBuffer = pDSData_tone[TONE_MAX];	// ????????î??DirectSoundBuffer??????

  00212	a1 d0 07 00 00	 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000

; 2786 : 	sd.phEvent = hEvent;	// 4.4.??????????????î¹?
; 2787 : 	sd.dwEventNum = 3;	// ????????????
; 2788 : 	sd.dwStopEventNum = 2;	// ??????????????îî?????
; 2789 : 	sd.lpWaveData = pDSbuffData;	// ?î??Wave?????????îî?
; 2790 : 	sd.dwWaveSize = DataSize;	// ?î??Wave????î«???îî?
; 2791 : 	sd.dwBlock_size = pcmwf.nAvgBytesPerSec;	// 44.1kHz???????????
; 2792 : 
; 2793 : 	// ??????????
; 2794 : 	hThreadHandle = CreateThread(NULL, 0, MyThreadFunc, &sd, 0, &dwThreadID);

  00217	68 00 00 00 00	 push	 OFFSET ?dwThreadID@@3KA	; dwThreadID
  0021c	6a 00		 push	 0
  0021e	68 00 00 00 00	 push	 OFFSET ?sd@@3USoundData@@A ; sd
  00223	a3 00 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A, eax
  00228	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSbuffData@@3PAEA
  0022d	68 00 00 00 00	 push	 OFFSET ?MyThreadFunc@@YGKPAX@Z ; MyThreadFunc
  00232	a3 10 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+16, eax
  00237	8b 45 0c	 mov	 eax, DWORD PTR _DataSize$[ebp]
  0023a	6a 00		 push	 0
  0023c	a3 14 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+20, eax
  00241	8b 45 d8	 mov	 eax, DWORD PTR _pcmwf$[ebp+8]
  00244	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?stream_flg@@3DA, 1
  0024b	6a 00		 push	 0
  0024d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?thread_start_flg@@3HC, 0
  00257	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+4, OFFSET ?hEvent@@3PAPAXA ; hEvent
  00261	c7 05 08 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+8, 3
  0026b	c7 05 0c 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+12, 2
  00275	a3 18 00 00 00	 mov	 DWORD PTR ?sd@@3USoundData@@A+24, eax
  0027a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateThread@24
  00280	a3 00 00 00 00	 mov	 DWORD PTR ?hThreadHandle@@3PAXA, eax ; hThreadHandle

; 2795 : 	if (hThreadHandle == NULL)

  00285	85 c0		 test	 eax, eax
  00287	0f 84 84 fe ff
	ff		 je	 $LN27@dwSoundIni
  0028d	0f 1f 00	 npad	 3
$LL2@dwSoundIni:

; 2804 : 	}
; 2805 : 
; 2806 : 	// ??????????î?
; 2807 : 	while (1) {
; 2808 : 		if (thread_start_flg)

  00290	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?thread_start_flg@@3HC, 0
  00297	74 f7		 je	 SHORT $LL2@dwSoundIni

; 2809 : 			break;
; 2810 : 	}
; 2811 : 
; 2812 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_HIGHEST);
; 2813 : 	//	SetThreadPriority(hThreadHandle,THREAD_PRIORITY_ABOVE_NORMAL);
; 2814 : 	//	pDSData_tone[ TONE_MAX ]->Play(0, 0, DSBPLAY_LOOPING);
; 2815 : 	return TRUE;
; 2816 : }

  00299	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029c	b8 01 00 00 00	 mov	 eax, 1
  002a1	5f		 pop	 edi
  002a2	5e		 pop	 esi
  002a3	33 cd		 xor	 ecx, ebp
  002a5	5b		 pop	 ebx
  002a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ab	8b e5		 mov	 esp, ebp
  002ad	5d		 pop	 ebp
  002ae	c3		 ret	 0
?dwSoundInit2@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@PAUHMMIO__@@@Z ENDP ; dwSoundInit2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?MyThreadFunc@@YGKPAX@Z
_TEXT	SEGMENT
_waveAdd$ = -4						; size = 4
_param$ = 8						; size = 4
?MyThreadFunc@@YGKPAX@Z PROC				; MyThreadFunc, COMDAT

; 2628 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 2629 : 	LONG waveAdd = 0;
; 2630 : 	// ??????????????????????
; 2631 : 	Block_Copy(sd.pDSBuffer, 0, sd.dwBlock_size, sd.lpWaveData, waveAdd, sd.dwWaveSize);

  00005	ff 35 14 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+20
  0000b	8d 45 fc	 lea	 eax, DWORD PTR _waveAdd$[ebp]
  0000e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _waveAdd$[ebp], 0
  00015	50		 push	 eax
  00016	ff 35 10 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+16
  0001c	ff 35 18 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+24
  00022	6a 00		 push	 0
  00024	ff 35 00 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A
  0002a	e8 00 00 00 00	 call	 ?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z ; Block_Copy

; 2632 : 	thread_start_flg = 1;

  0002f	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__WaitForMultipleObjects@16
  00035	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?thread_start_flg@@3HC, 1
$LN20@MyThreadFu:

; 2633 : 	// ????????î¡?????î¼??
; 2634 : 	while (TRUE)
; 2635 : 	{
; 2636 : 		// DirectSoundBuffer????????î?
; 2637 : 		DWORD i = WaitForMultipleObjects(sd.dwEventNum, sd.phEvent, FALSE, INFINITE);

  0003f	83 c4 18	 add	 esp, 24			; 00000018H
  00042	6a ff		 push	 -1
  00044	6a 00		 push	 0
  00046	ff 35 04 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+4
  0004c	ff 35 08 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+8
  00052	ff d6		 call	 esi

; 2638 : 		// ??????????????î???????????????????
; 2639 : 		wave_count++;

  00054	ff 05 00 00 00
	00		 inc	 DWORD PTR ?wave_count@@3JA

; 2640 : 		switch (i)

  0005a	83 e8 00	 sub	 eax, 0
  0005d	74 37		 je	 SHORT $LN7@MyThreadFu
  0005f	83 e8 01	 sub	 eax, 1
  00062	75 68		 jne	 SHORT $LN17@MyThreadFu

; 2641 : 		{
; 2642 : 		case WAIT_OBJECT_0 + 1:
; 2643 : 			// ?î±???????????
; 2644 : 			buffer_address = 0; wave_address = waveAdd;
; 2645 : 			Block_Copy(sd.pDSBuffer, 0, sd.dwBlock_size, sd.lpWaveData, waveAdd, sd.dwWaveSize);

  00064	ff 35 14 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+20
  0006a	a3 00 00 00 00	 mov	 DWORD PTR ?buffer_address@@3JA, eax
  0006f	8b 45 fc	 mov	 eax, DWORD PTR _waveAdd$[ebp]
  00072	a3 00 00 00 00	 mov	 DWORD PTR ?wave_address@@3JA, eax
  00077	8d 45 fc	 lea	 eax, DWORD PTR _waveAdd$[ebp]
  0007a	50		 push	 eax
  0007b	ff 35 10 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+16
  00081	ff 35 18 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+24
  00087	6a 00		 push	 0
  00089	ff 35 00 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A
  0008f	e8 00 00 00 00	 call	 ?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z ; Block_Copy

; 2646 : 			break;

  00094	eb a9		 jmp	 SHORT $LN20@MyThreadFu
$LN7@MyThreadFu:

; 2647 : 		case WAIT_OBJECT_0:
; 2648 : 			// ?î±???????????
; 2649 : 			buffer_address = sd.dwBlock_size; wave_address = waveAdd;
; 2650 : 			Block_Copy(sd.pDSBuffer, sd.dwBlock_size, sd.dwBlock_size, sd.lpWaveData, waveAdd, sd.dwWaveSize);

  00096	ff 35 14 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+20
  0009c	8b 45 fc	 mov	 eax, DWORD PTR _waveAdd$[ebp]
  0009f	8b 0d 18 00 00
	00		 mov	 ecx, DWORD PTR ?sd@@3USoundData@@A+24
  000a5	a3 00 00 00 00	 mov	 DWORD PTR ?wave_address@@3JA, eax
  000aa	8d 45 fc	 lea	 eax, DWORD PTR _waveAdd$[ebp]
  000ad	50		 push	 eax
  000ae	ff 35 10 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A+16
  000b4	89 0d 00 00 00
	00		 mov	 DWORD PTR ?buffer_address@@3JA, ecx
  000ba	51		 push	 ecx
  000bb	51		 push	 ecx
  000bc	ff 35 00 00 00
	00		 push	 DWORD PTR ?sd@@3USoundData@@A
  000c2	e8 00 00 00 00	 call	 ?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z ; Block_Copy

; 2651 : 			break;
; 2652 : 		case WAIT_OBJECT_0 + 2:
; 2653 : 			// ?îî·?????????î·???
; 2654 : 			exit_thread_flg = 1;
; 2655 : 			ExitThread(TRUE);
; 2656 : 		default:
; 2657 : 			// ?îî·?????????î·???
; 2658 : 			exit_thread_flg = 1;
; 2659 : 			ExitThread(TRUE);
; 2660 : 		}
; 2661 : 		//		InvalidateRect(hwndApp, NULL, TRUE);
; 2662 : 	}

  000c7	e9 73 ff ff ff	 jmp	 $LN20@MyThreadFu
$LN17@MyThreadFu:

; 2640 : 		switch (i)

  000cc	83 e8 01	 sub	 eax, 1
  000cf	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?exit_thread_flg@@3DC, 1
  000d6	6a 01		 push	 1

; 2663 : 	return 0L;
; 2664 : }

  000d8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitThread@4
$LN19@MyThreadFu:
  000de	cc		 int	 3
?MyThreadFunc@@YGKPAX@Z ENDP				; MyThreadFunc
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z
_TEXT	SEGMENT
_lpBlockAdd2$ = -8					; size = 4
_blockSize1$ = -4					; size = 4
_lpBuffer$ = 8						; size = 4
_blockadd$ = 12						; size = 4
_blocksize$ = 16					; size = 4
_lpWave$ = 20						; size = 4
_blockSize2$ = 24					; size = 4
_waveAdd$ = 24						; size = 4
_lpBlockAdd1$ = 28					; size = 4
_waveSize$ = 28						; size = 4
?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z PROC	; Block_Copy, COMDAT

; 2580 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2581 : 	LPBYTE lpBlockAdd1, lpBlockAdd2;
; 2582 : 	DWORD blockSize1, blockSize2;
; 2583 : 	LONG ws = waveSize - waveAdd;
; 2584 : 
; 2585 : 	// ????????
; 2586 : 	HRESULT hr = lpBuffer->Lock(blockadd, blocksize, (LPVOID*)&lpBlockAdd1, &blockSize1, (LPVOID*)&lpBlockAdd2, &blockSize2, 0);

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _lpBuffer$[ebp]
  00006	8d 55 18	 lea	 edx, DWORD PTR _blockSize2$[ebp]
  00009	83 ec 08	 sub	 esp, 8
  0000c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	8b 75 18	 mov	 esi, DWORD PTR _waveAdd$[ebp]
  00013	57		 push	 edi
  00014	8b 7d 1c	 mov	 edi, DWORD PTR _waveSize$[ebp]
  00017	8b df		 mov	 ebx, edi
  00019	6a 00		 push	 0
  0001b	2b 1e		 sub	 ebx, DWORD PTR [esi]
  0001d	52		 push	 edx
  0001e	8d 55 f8	 lea	 edx, DWORD PTR _lpBlockAdd2$[ebp]
  00021	52		 push	 edx
  00022	8d 55 fc	 lea	 edx, DWORD PTR _blockSize1$[ebp]
  00025	52		 push	 edx
  00026	8d 55 1c	 lea	 edx, DWORD PTR _lpBlockAdd1$[ebp]
  00029	52		 push	 edx
  0002a	ff 75 10	 push	 DWORD PTR _blocksize$[ebp]
  0002d	ff 75 0c	 push	 DWORD PTR _blockadd$[ebp]
  00030	51		 push	 ecx
  00031	ff 50 2c	 call	 DWORD PTR [eax+44]

; 2587 : 	if (hr == DS_OK)

  00034	85 c0		 test	 eax, eax
  00036	0f 85 be 00 00
	00		 jne	 $LN2@Block_Copy

; 2588 : 	{
; 2589 : 		if (ws < (long)blockSize1)

  0003c	8b 06		 mov	 eax, DWORD PTR [esi]
  0003e	03 45 14	 add	 eax, DWORD PTR _lpWave$[ebp]
  00041	8b 4d fc	 mov	 ecx, DWORD PTR _blockSize1$[ebp]
  00044	3b d9		 cmp	 ebx, ecx
  00046	7d 33		 jge	 SHORT $LN3@Block_Copy

; 2590 : 		{
; 2591 : 			CopyMemory(lpBlockAdd1, lpWave + waveAdd, ws);

  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	ff 75 1c	 push	 DWORD PTR _lpBlockAdd1$[ebp]
  0004d	e8 00 00 00 00	 call	 _memcpy

; 2592 : 			waveAdd = blockSize1 - ws;

  00052	8b 45 fc	 mov	 eax, DWORD PTR _blockSize1$[ebp]
  00055	2b c3		 sub	 eax, ebx

; 2593 : 			CopyMemory(lpBlockAdd1 + ws, lpWave + thread_loop_start, waveAdd);

  00057	50		 push	 eax
  00058	89 06		 mov	 DWORD PTR [esi], eax
  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?thread_loop_start@@3HA
  0005f	03 45 14	 add	 eax, DWORD PTR _lpWave$[ebp]
  00062	50		 push	 eax
  00063	8b 45 1c	 mov	 eax, DWORD PTR _lpBlockAdd1$[ebp]
  00066	03 c3		 add	 eax, ebx
  00068	50		 push	 eax
  00069	e8 00 00 00 00	 call	 _memcpy

; 2594 : 			waveAdd += thread_loop_start;

  0006e	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?thread_loop_start@@3HA
  00074	83 c4 18	 add	 esp, 24			; 00000018H
  00077	01 1e		 add	 DWORD PTR [esi], ebx

; 2595 : 		}

  00079	eb 18		 jmp	 SHORT $LN10@Block_Copy
$LN3@Block_Copy:

; 2596 : 		else
; 2597 : 		{
; 2598 : 			CopyMemory(lpBlockAdd1, lpWave + waveAdd, blockSize1);

  0007b	51		 push	 ecx
  0007c	50		 push	 eax
  0007d	ff 75 1c	 push	 DWORD PTR _lpBlockAdd1$[ebp]
  00080	e8 00 00 00 00	 call	 _memcpy

; 2599 : 			waveAdd += blockSize1;

  00085	8b 45 fc	 mov	 eax, DWORD PTR _blockSize1$[ebp]
  00088	83 c4 0c	 add	 esp, 12			; 0000000cH
  0008b	01 06		 add	 DWORD PTR [esi], eax
  0008d	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?thread_loop_start@@3HA
$LN10@Block_Copy:

; 2600 : 		}
; 2601 : 		if (lpBlockAdd2)

  00093	8b 4d f8	 mov	 ecx, DWORD PTR _lpBlockAdd2$[ebp]
  00096	8b 16		 mov	 edx, DWORD PTR [esi]
  00098	85 c9		 test	 ecx, ecx
  0009a	74 4b		 je	 SHORT $LN9@Block_Copy

; 2602 : 		{
; 2603 : 			ws = waveSize - waveAdd;

  0009c	8b 45 14	 mov	 eax, DWORD PTR _lpWave$[ebp]
  0009f	2b fa		 sub	 edi, edx
  000a1	03 c2		 add	 eax, edx

; 2604 : 			if (ws < (long)blockSize2)

  000a3	8b 55 18	 mov	 edx, DWORD PTR _blockSize2$[ebp]
  000a6	3b fa		 cmp	 edi, edx
  000a8	7d 2a		 jge	 SHORT $LN6@Block_Copy

; 2605 : 			{
; 2606 : 				CopyMemory(lpBlockAdd1, lpWave + waveAdd, ws);

  000aa	57		 push	 edi
  000ab	50		 push	 eax
  000ac	ff 75 1c	 push	 DWORD PTR _lpBlockAdd1$[ebp]
  000af	e8 00 00 00 00	 call	 _memcpy

; 2607 : 				waveAdd = blockSize2 - ws;

  000b4	8b 45 18	 mov	 eax, DWORD PTR _blockSize2$[ebp]
  000b7	2b c7		 sub	 eax, edi

; 2608 : 				CopyMemory(lpBlockAdd1 + ws, lpWave + thread_loop_start, waveAdd);

  000b9	50		 push	 eax
  000ba	89 06		 mov	 DWORD PTR [esi], eax
  000bc	8b 45 14	 mov	 eax, DWORD PTR _lpWave$[ebp]
  000bf	03 c3		 add	 eax, ebx
  000c1	50		 push	 eax
  000c2	8b 45 1c	 mov	 eax, DWORD PTR _lpBlockAdd1$[ebp]
  000c5	03 c7		 add	 eax, edi
  000c7	50		 push	 eax
  000c8	e8 00 00 00 00	 call	 _memcpy
  000cd	83 c4 18	 add	 esp, 24			; 00000018H

; 2609 : 				waveAdd += thread_loop_start;

  000d0	01 1e		 add	 DWORD PTR [esi], ebx

; 2610 : 			}

  000d2	eb 10		 jmp	 SHORT $LN11@Block_Copy
$LN6@Block_Copy:

; 2611 : 			else
; 2612 : 			{
; 2613 : 				CopyMemory(lpBlockAdd2, lpWave + waveAdd, blockSize2);

  000d4	52		 push	 edx
  000d5	50		 push	 eax
  000d6	51		 push	 ecx
  000d7	e8 00 00 00 00	 call	 _memcpy

; 2614 : 				waveAdd += blockSize2;

  000dc	8b 45 18	 mov	 eax, DWORD PTR _blockSize2$[ebp]
  000df	83 c4 0c	 add	 esp, 12			; 0000000cH
  000e2	01 06		 add	 DWORD PTR [esi], eax
$LN11@Block_Copy:

; 2615 : 			}
; 2616 : 		}
; 2617 : 		lpBuffer->Unlock(lpBlockAdd1, blockSize1, lpBlockAdd2, blockSize2);

  000e4	8b 4d f8	 mov	 ecx, DWORD PTR _lpBlockAdd2$[ebp]
$LN9@Block_Copy:
  000e7	ff 75 18	 push	 DWORD PTR _blockSize2$[ebp]
  000ea	8b 55 08	 mov	 edx, DWORD PTR _lpBuffer$[ebp]
  000ed	51		 push	 ecx
  000ee	ff 75 fc	 push	 DWORD PTR _blockSize1$[ebp]
  000f1	ff 75 1c	 push	 DWORD PTR _lpBlockAdd1$[ebp]
  000f4	8b 02		 mov	 eax, DWORD PTR [edx]
  000f6	52		 push	 edx
  000f7	ff 50 4c	 call	 DWORD PTR [eax+76]
$LN2@Block_Copy:

; 2618 : 	}
; 2619 : }

  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
  000fc	5b		 pop	 ebx
  000fd	8b e5		 mov	 esp, ebp
  000ff	5d		 pop	 ebp
  00100	c3		 ret	 0
?Block_Copy@@YAXPAUIDirectSoundBuffer@@KKPAEAAJJ@Z ENDP	; Block_Copy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?music@@YAXXZ
_TEXT	SEGMENT
_d0$1 = -8						; size = 8
?music@@YAXXZ PROC					; music, COMDAT

; 2347 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 2348 : 	int d7;
; 2349 : #if 1
; 2350 : #if THREAD_ON
; 2351 : 	while (!thread_flg) {

  00006	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?thread_flg@@3HA, 0 ; thread_flg
  0000d	53		 push	 ebx
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	0f 85 9b 00 00
	00		 jne	 $LN3@music
  00016	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__Sleep@4
  0001c	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__QueryPerformanceCounter@4
$LL2@music:

; 2352 : #if CLASS_UP
; 2353 : 		Sleep(1);		//?î?

  00022	6a 01		 push	 1
  00024	ff d3		 call	 ebx

; 2354 : #endif
; 2355 : #endif
; 2356 : 		LARGE_INTEGER d0;
; 2357 : 		QueryPerformanceCounter(&d0);

  00026	8d 45 f8	 lea	 eax, DWORD PTR _d0$1[ebp]
  00029	50		 push	 eax
  0002a	ff d6		 call	 esi

; 2358 : 		if ((d_cnt.LowPart + tempo.LowPart) > d0.LowPart)

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tempo@@3T_LARGE_INTEGER@@A
  00031	03 05 00 00 00
	00		 add	 eax, DWORD PTR ?d_cnt@@3T_LARGE_INTEGER@@A
  00037	3b 45 f8	 cmp	 eax, DWORD PTR _d0$1[ebp]
  0003a	77 68		 ja	 SHORT $LN12@music

; 2359 : #if THREAD_ON
; 2360 : 		{
; 2361 : 			continue;
; 2362 : 		}
; 2363 : #else
; 2364 : 			return;
; 2365 : #endif
; 2366 : #if !DEBUG_ON
; 2367 : 		if (abs(d0.LowPart - d_cnt.LowPart) > 3333333)
; 2368 : #if THREAD_ON
; 2369 : 			continue;
; 2370 : #else
; 2371 : 			return;
; 2372 : #endif
; 2373 : #endif
; 2374 : 		d_cnt.LowPart += tempo.LowPart;
; 2375 : #endif
; 2376 : 		if (!pause_flg) {

  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pause_flg@@3HA, 0
  00043	a3 00 00 00 00	 mov	 DWORD PTR ?d_cnt@@3T_LARGE_INTEGER@@A, eax
  00048	75 4f		 jne	 SHORT $LN11@music

; 2377 : #if VOICE_KILL_ON
; 2378 : 			for (d7 = 0; d7 < voice_kill_point; d7++) {
; 2379 : 				voice[voice_kill_buf[d7]].name = 0;			//??????î
; 2380 : 				pDSData[voice_kill_buf[d7]]->Stop();		//????
; 2381 : 				pDSData[voice_kill_buf[d7]]->SetCurrentPosition(0);	//
; 2382 : 			}
; 2383 : 			voice_kill_point = 0;
; 2384 : #endif
; 2385 : 			for (d7 = 0; d7 < VOICE_MAX; d7++) {

  0004a	33 ff		 xor	 edi, edi
  0004c	be 00 00 00 00	 mov	 esi, OFFSET ?voice@@3PAUVOICE_EQU@@A ; voice
$LL6@music:

; 2386 : 				if (voice[d7].name) {

  00051	83 3e 00	 cmp	 DWORD PTR [esi], 0
  00054	74 09		 je	 SHORT $LN4@music

; 2387 : 					voice_action(d7);

  00056	57		 push	 edi
  00057	e8 00 00 00 00	 call	 ?voice_action@@YAXH@Z	; voice_action
  0005c	83 c4 04	 add	 esp, 4
$LN4@music:

; 2377 : #if VOICE_KILL_ON
; 2378 : 			for (d7 = 0; d7 < voice_kill_point; d7++) {
; 2379 : 				voice[voice_kill_buf[d7]].name = 0;			//??????î
; 2380 : 				pDSData[voice_kill_buf[d7]]->Stop();		//????
; 2381 : 				pDSData[voice_kill_buf[d7]]->SetCurrentPosition(0);	//
; 2382 : 			}
; 2383 : 			voice_kill_point = 0;
; 2384 : #endif
; 2385 : 			for (d7 = 0; d7 < VOICE_MAX; d7++) {

  0005f	83 c6 3c	 add	 esi, 60			; 0000003cH
  00062	47		 inc	 edi
  00063	81 fe 00 0f 00
	00		 cmp	 esi, OFFSET ?voice@@3PAUVOICE_EQU@@A+3840
  00069	7c e6		 jl	 SHORT $LL6@music

; 2388 : 				}
; 2389 : 			}
; 2390 : 			for (ch = 0; ch < TRACK_MAX; ch++) {

  0006b	33 c0		 xor	 eax, eax
  0006d	a3 00 00 00 00	 mov	 DWORD PTR ?ch@@3HA, eax
$LL9@music:

; 2391 : 				if (play_track_flg[ch])

  00072	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?play_track_flg@@3PAHA[eax*4], 0
  0007a	74 0a		 je	 SHORT $LN7@music

; 2392 : 					gate();

  0007c	e8 00 00 00 00	 call	 ?gate@@YAXXZ		; gate
  00081	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ch@@3HA
$LN7@music:

; 2388 : 				}
; 2389 : 			}
; 2390 : 			for (ch = 0; ch < TRACK_MAX; ch++) {

  00086	40		 inc	 eax
  00087	a3 00 00 00 00	 mov	 DWORD PTR ?ch@@3HA, eax
  0008c	83 f8 20	 cmp	 eax, 32			; 00000020H
  0008f	7c e1		 jl	 SHORT $LL9@music

; 2393 : 			}
; 2394 : 		}

  00091	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__QueryPerformanceCounter@4
  00097	eb 0b		 jmp	 SHORT $LN12@music
$LN11@music:

; 2395 : 		else {
; 2396 : 
; 2397 : #if CLASS_UP
; 2398 : 			Sleep(8);		//????

  00099	6a 08		 push	 8
  0009b	ff d3		 call	 ebx

; 2399 : #endif
; 2400 : 			QueryPerformanceCounter(&d_cnt);

  0009d	68 00 00 00 00	 push	 OFFSET ?d_cnt@@3T_LARGE_INTEGER@@A
  000a2	ff d6		 call	 esi
$LN12@music:

; 2348 : 	int d7;
; 2349 : #if 1
; 2350 : #if THREAD_ON
; 2351 : 	while (!thread_flg) {

  000a4	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?thread_flg@@3HA, 0 ; thread_flg
  000ab	0f 84 71 ff ff
	ff		 je	 $LL2@music
$LN3@music:

; 2401 : 		}
; 2402 : 
; 2403 : #if 0		//--------------
; 2404 : 
; 2405 : #if CLASS_UP
; 2406 : #if MODE98
; 2407 : 		if (tempo.LowPart > 10080 * 2)		//??????î ¹???
; 2408 : #else
; 2409 : 		if (tempo.LowPart > 10080)		//??????î ¹???
; 2410 : #endif
; 2411 : 			Sleep(2);		//?î?
; 2412 : 		else
; 2413 : 			Sleep(1);		//?î?
; 2414 : #endif
; 2415 : 
; 2416 : #endif		//--------------
; 2417 : 
; 2418 : #if THREAD_ON
; 2419 : 	}
; 2420 : 	thread_flg = 2;
; 2421 : 	ExitThread(TRUE);

  000b1	6a 01		 push	 1
  000b3	c7 05 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?thread_flg@@3HA, 2 ; thread_flg
  000bd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ExitThread@4
$LN28@music:
  000c3	cc		 int	 3
?music@@YAXXZ ENDP					; music
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?gate@@YAXXZ
_TEXT	SEGMENT
tv2164 = -36						; size = 4
$T1 = -36						; size = 4
_waon_delay$1$ = -32					; size = 4
tv2203 = -28						; size = 4
$T2 = -28						; size = 4
$T3 = -28						; size = 4
tv2200 = -24						; size = 4
tv2207 = -20						; size = 4
_waon_cnt$1$ = -20					; size = 4
tv2190 = -16						; size = 4
_waon_delay_total$1$ = -12				; size = 4
tv2198 = -8						; size = 4
_cnt$1$ = -8						; size = 4
tv2218 = -4						; size = 4
?gate@@YAXXZ PROC					; gate, COMDAT

; 2131 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	56		 push	 esi

; 2132 : 	int next_command;
; 2133 : 	DWORD	Status = 0;
; 2134 : 	if (!play_flg[ch])		//îî??

  00007	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
  0000d	83 3c b5 00 00
	00 00 00	 cmp	 DWORD PTR ?play_flg@@3PAHA[esi*4], 0
  00015	0f 84 3d 06 00
	00		 je	 $LN68@gate

; 2135 : 		return;				//????î??
; 2136 : 
; 2137 : 	gate_time[ch]--;		//???????î¡

  0001b	83 04 b5 00 00
	00 00 ff	 add	 DWORD PTR ?gate_time@@3PAHA[esi*4], -1
  00023	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR ?gate_time@@3PAHA[esi*4]
  0002a	57		 push	 edi
  0002b	89 45 ec	 mov	 DWORD PTR tv2207[ebp], eax

; 2138 : 	if (!gate_time[ch]) {		//??????

  0002e	75 52		 jne	 SHORT $LN3@gate

; 2139 : 		if (!d_pedal[ch]) {		//????????

  00030	83 3c b5 00 00
	00 00 00	 cmp	 DWORD PTR ?d_pedal@@3PAHA[esi*4], 0
  00038	75 48		 jne	 SHORT $LN3@gate

; 2140 : 			if (!wave[ch]) {	//???????

  0003a	83 3c b5 00 00
	00 00 00	 cmp	 DWORD PTR ?wave@@3PAHA[esi*4], 0
  00042	75 07		 jne	 SHORT $LN23@gate

; 2141 : 				stop_voice();		//???????

  00044	e8 00 00 00 00	 call	 ?stop_voice@@YAXXZ	; stop_voice

; 2142 : 			}

  00049	eb 37		 jmp	 SHORT $LN3@gate
$LN23@gate:

; 2143 : 			else {
; 2144 : 				for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  0004b	8b 3c b5 00 00
	00 00		 mov	 edi, DWORD PTR ?play_use_task_cnt@@3PAHA[esi*4]
  00052	85 ff		 test	 edi, edi
  00054	7e 2c		 jle	 SHORT $LN3@gate
  00056	8b ce		 mov	 ecx, esi
  00058	c1 e1 05	 shl	 ecx, 5
  0005b	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?play_use_task@@3PAY07HA
$LL101@gate:

; 2145 : 					if (play_use_task[ch][cnt] != -1) {					//???î¸???

  00061	8b 11		 mov	 edx, DWORD PTR [ecx]
  00063	83 fa ff	 cmp	 edx, -1
  00066	74 12		 je	 SHORT $LN114@gate

; 2146 : 						voice[play_use_task[ch][cnt]].name = VOICE_KEY_OFF;	//????????

  00068	8b c2		 mov	 eax, edx
  0006a	c1 e0 04	 shl	 eax, 4
  0006d	2b c2		 sub	 eax, edx
  0006f	c7 04 85 00 00
	00 00 64 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 100 ; 00000064H
$LN114@gate:

; 2143 : 			else {
; 2144 : 				for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  0007a	83 c1 04	 add	 ecx, 4
  0007d	83 ef 01	 sub	 edi, 1
  00080	75 df		 jne	 SHORT $LL101@gate
$LN3@gate:

; 2147 : 					}
; 2148 : 				}
; 2149 : 			}
; 2150 : 		}
; 2151 : 	}
; 2152 : 
; 2153 : 	step_time[ch]--;			//?????

  00082	ff 0c b5 00 00
	00 00		 dec	 DWORD PTR ?step_time@@3PAHA[esi*4]
  00089	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR ?step_time@@3PAHA[esi*4]

; 2154 : 	if (step_time[ch] > 0) {		//

  00090	83 38 00	 cmp	 DWORD PTR [eax], 0
  00093	89 45 e4	 mov	 DWORD PTR tv2203[ebp], eax
  00096	0f 8f bb 05 00
	00		 jg	 $LN127@gate

; 2155 : 		return;				//???????î??
; 2156 : 	}
; 2157 : 	else {
; 2158 : 		if (!tie_flg[ch]) {		//???????

  0009c	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR ?tie_flg@@3PAHA[esi*4]
  000a3	89 45 fc	 mov	 DWORD PTR tv2218[ebp], eax
  000a6	8b 00		 mov	 eax, DWORD PTR [eax]
  000a8	89 45 e8	 mov	 DWORD PTR tv2200[ebp], eax
  000ab	85 c0		 test	 eax, eax
  000ad	75 52		 jne	 SHORT $LN86@gate

; 2159 : 			if (!d_pedal[ch]) {		//????????

  000af	39 04 b5 00 00
	00 00		 cmp	 DWORD PTR ?d_pedal@@3PAHA[esi*4], eax
  000b6	75 49		 jne	 SHORT $LN86@gate

; 2160 : 				if (!wave[ch]) {	//???????

  000b8	39 04 b5 00 00
	00 00		 cmp	 DWORD PTR ?wave@@3PAHA[esi*4], eax
  000bf	75 07		 jne	 SHORT $LN30@gate

; 2161 : 					stop_voice();		//???????

  000c1	e8 00 00 00 00	 call	 ?stop_voice@@YAXXZ	; stop_voice

; 2162 : 				}

  000c6	eb 39		 jmp	 SHORT $LN86@gate
$LN30@gate:

; 2163 : 				else {
; 2164 : 					for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  000c8	8b 3c b5 00 00
	00 00		 mov	 edi, DWORD PTR ?play_use_task_cnt@@3PAHA[esi*4]
  000cf	85 ff		 test	 edi, edi
  000d1	7e 2e		 jle	 SHORT $LN86@gate
  000d3	8b ce		 mov	 ecx, esi
  000d5	c1 e1 05	 shl	 ecx, 5
  000d8	81 c1 00 00 00
	00		 add	 ecx, OFFSET ?play_use_task@@3PAY07HA
  000de	66 90		 npad	 2
$LL104@gate:

; 2165 : 						if (play_use_task[ch][cnt] != -1) {					//???î¸???

  000e0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e2	83 fa ff	 cmp	 edx, -1
  000e5	74 12		 je	 SHORT $LN115@gate

; 2166 : 							voice[play_use_task[ch][cnt]].name = VOICE_KEY_OFF;	//????????

  000e7	8b c2		 mov	 eax, edx
  000e9	c1 e0 04	 shl	 eax, 4
  000ec	2b c2		 sub	 eax, edx
  000ee	c7 04 85 00 00
	00 00 64 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 100 ; 00000064H
$LN115@gate:

; 2163 : 				else {
; 2164 : 					for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  000f9	83 c1 04	 add	 ecx, 4
  000fc	83 ef 01	 sub	 edi, 1
  000ff	75 df		 jne	 SHORT $LL104@gate
$LN86@gate:

; 2167 : 						}
; 2168 : 					}
; 2169 : 				}
; 2170 : 			}
; 2171 : 		}
; 2172 : 
; 2173 : 	gate_100:
; 2174 : 		next_command = step[ch][step_point[ch]++];		//????î?î?

  00101	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?step_point@@3PAHA[esi*4]
  00108	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR ?step_point@@3PAHA[esi*4]
  0010f	8b d6		 mov	 edx, esi
  00111	89 45 f8	 mov	 DWORD PTR tv2198[ebp], eax
  00114	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00117	53		 push	 ebx
  00118	8d 79 01	 lea	 edi, DWORD PTR [ecx+1]
  0011b	89 55 f0	 mov	 DWORD PTR tv2190[ebp], edx
  0011e	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00121	8b 1c 85 00 00
	00 00		 mov	 ebx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00128	8b 45 f8	 mov	 eax, DWORD PTR tv2198[ebp]
  0012b	89 38		 mov	 DWORD PTR [eax], edi

; 2175 : 
; 2176 : 		if (next_command >= 0) {		//???î±???

  0012d	85 db		 test	 ebx, ebx
  0012f	0f 89 00 02 00
	00		 jns	 $LN91@gate
$gate_100$131:

; 2203 : 			return;
; 2204 : 		}
; 2205 : 		if (next_command == MUSIC_WAON) {		//????

  00135	83 fb f2	 cmp	 ebx, -14		; fffffff2H
  00138	0f 84 f2 02 00
	00		 je	 $LN92@gate

; 2239 : 			return;
; 2240 : 		}
; 2241 : 		if (next_command == MUSIC_TEMPO) {		//????

  0013e	83 fb f9	 cmp	 ebx, -7			; fffffff9H
  00141	75 14		 jne	 SHORT $LN45@gate

; 2242 : 			tempo.LowPart = step[ch][step_point[ch]++];

  00143	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00146	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  0014d	a3 00 00 00 00	 mov	 DWORD PTR ?tempo@@3T_LARGE_INTEGER@@A, eax

; 2243 : 			goto gate_100;

  00152	e9 c5 01 00 00	 jmp	 $LN129@gate
$LN45@gate:

; 2244 : 		}
; 2245 : 		if (next_command == MUSIC_NEIRO_NO) {		//?îî?î??

  00157	83 fb f7	 cmp	 ebx, -9			; fffffff7H
  0015a	75 16		 jne	 SHORT $LN46@gate

; 2246 : //			change_neiro( ch, step[ch][step_point[ch]++] );
; 2247 : 			dataToneNo[ch] = step[ch][step_point[ch]++];

  0015c	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  0015f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00166	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?dataToneNo@@3PAHA[esi*4], eax

; 2248 : 			goto gate_100;

  0016d	e9 aa 01 00 00	 jmp	 $LN129@gate
$LN46@gate:

; 2249 : 		}
; 2250 : 		if (next_command == MUSIC_LOOP) {		//????

  00172	83 fb fd	 cmp	 ebx, -3			; fffffffdH
  00175	75 0f		 jne	 SHORT $LN47@gate

; 2251 : 			step_point[ch] = step[ch][step_point[ch]];

  00177	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  0017a	8b 3c 85 00 00
	00 00		 mov	 edi, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]

; 2252 : 			goto gate_100;

  00181	e9 97 01 00 00	 jmp	 $LN96@gate
$LN47@gate:

; 2253 : 		}
; 2254 : 		if (next_command == MUSIC_KURI_START) {		//??î??î¿?

  00186	83 fb f4	 cmp	 ebx, -12		; fffffff4H
  00189	75 29		 jne	 SHORT $LN48@gate

; 2255 : 			play_kuri_lv[ch]++;		//?î??????

  0018b	ff 04 b5 00 00
	00 00		 inc	 DWORD PTR ?play_kuri_lv@@3PAHA[esi*4]

; 2256 : 			play_kuri_num[play_kuri_lv[ch]][ch] = step[ch][step_point[ch]++];

  00192	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00195	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?play_kuri_lv@@3PAHA[esi*4]
  0019c	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  001a3	c1 e1 05	 shl	 ecx, 5
  001a6	03 ce		 add	 ecx, esi
  001a8	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?play_kuri_num@@3PAY0CA@HA[ecx*4], eax

; 2257 : 			goto gate_100;

  001af	e9 68 01 00 00	 jmp	 $LN129@gate
$LN48@gate:

; 2258 : 		}
; 2259 : 		if (next_command == MUSIC_KURI_SKIP) {		//??î?îî?

  001b4	83 fb f5	 cmp	 ebx, -11		; fffffff5H
  001b7	75 35		 jne	 SHORT $LN49@gate

; 2260 : 			if (play_kuri_num[play_kuri_lv[ch]][ch] == 1) {

  001b9	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?play_kuri_lv@@3PAHA[esi*4]
  001c0	8b c1		 mov	 eax, ecx
  001c2	c1 e0 05	 shl	 eax, 5
  001c5	03 c6		 add	 eax, esi
  001c7	83 3c 85 00 00
	00 00 01	 cmp	 DWORD PTR ?play_kuri_num@@3PAY0CA@HA[eax*4], 1
  001cf	0f 85 47 01 00
	00		 jne	 $LN129@gate

; 2261 : 				step_point[ch] = step[ch][step_point[ch]];

  001d5	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  001d8	8b 3c 85 00 00
	00 00		 mov	 edi, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]

; 2262 : 				play_kuri_lv[ch]--;		//?î??????

  001df	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  001e2	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_kuri_lv@@3PAHA[esi*4], eax

; 2263 : 			}

  001e9	e9 2f 01 00 00	 jmp	 $LN96@gate
$LN49@gate:

; 2264 : 			else {
; 2265 : 				step_point[ch]++;
; 2266 : 			}
; 2267 : 			goto gate_100;
; 2268 : 		}
; 2269 : 		if (next_command == MUSIC_KURI_RET) {		//??î?î·??

  001ee	83 fb f6	 cmp	 ebx, -10		; fffffff6H
  001f1	75 3d		 jne	 SHORT $LN52@gate

; 2270 : 			play_kuri_num[play_kuri_lv[ch]][ch]--;

  001f3	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?play_kuri_lv@@3PAHA[esi*4]
  001fa	8b c1		 mov	 eax, ecx
  001fc	c1 e0 05	 shl	 eax, 5
  001ff	03 c6		 add	 eax, esi
  00201	ff 0c 85 00 00
	00 00		 dec	 DWORD PTR ?play_kuri_num@@3PAY0CA@HA[eax*4]

; 2271 : 			if (play_kuri_num[play_kuri_lv[ch]][ch] > 0) {

  00208	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?play_kuri_num@@3PAY0CA@HA[eax*4], 0
  00210	7e 0f		 jle	 SHORT $LN53@gate

; 2272 : 				step_point[ch] = step[ch][step_point[ch]];

  00212	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00215	8b 3c 85 00 00
	00 00		 mov	 edi, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]

; 2273 : 			}

  0021c	e9 fc 00 00 00	 jmp	 $LN96@gate
$LN53@gate:

; 2274 : 			else {
; 2275 : 				step_point[ch]++;
; 2276 : 				play_kuri_lv[ch]--;		//?î??????

  00221	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00224	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_kuri_lv@@3PAHA[esi*4], eax

; 2277 : 			}
; 2278 : 			goto gate_100;

  0022b	e9 ec 00 00 00	 jmp	 $LN129@gate
$LN52@gate:

; 2279 : 		}
; 2280 : 		if (next_command == MUSIC_R) {		//??

  00230	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00233	0f 84 6d 01 00
	00		 je	 $LN93@gate

; 2298 : 		}
; 2299 : 		if (next_command == MUSIC_LFO_H) {		//??????

  00239	83 fb f0	 cmp	 ebx, -16		; fffffff0H
  0023c	75 16		 jne	 SHORT $LN59@gate

; 2300 : 			play_lfo_h[ch] = step[ch][step_point[ch]++];

  0023e	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00241	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00248	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_lfo_h@@3PAHA[esi*4], eax

; 2301 : 			goto gate_100;

  0024f	e9 c8 00 00 00	 jmp	 $LN129@gate
$LN59@gate:

; 2302 : 		}
; 2303 : 		if (next_command == MUSIC_LFO_M) {		//??????

  00254	83 fb ef	 cmp	 ebx, -17		; ffffffefH
  00257	75 16		 jne	 SHORT $LN60@gate

; 2304 : 			play_lfo_m[ch] = step[ch][step_point[ch]++];

  00259	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  0025c	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00263	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_lfo_m@@3PAHA[esi*4], eax

; 2305 : 			goto gate_100;

  0026a	e9 ad 00 00 00	 jmp	 $LN129@gate
$LN60@gate:

; 2306 : 		}
; 2307 : 		if (next_command == MUSIC_LFO_S) {		//??????

  0026f	83 fb ee	 cmp	 ebx, -18		; ffffffeeH
  00272	75 16		 jne	 SHORT $LN61@gate

; 2308 : 			play_lfo_s[ch] = step[ch][step_point[ch]++];

  00274	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00277	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  0027e	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_lfo_s@@3PAHA[esi*4], eax

; 2309 : 			goto gate_100;

  00285	e9 92 00 00 00	 jmp	 $LN129@gate
$LN61@gate:

; 2310 : 		}
; 2311 : 		if (next_command == MUSIC_PEDAL) {		//????????

  0028a	83 fb f8	 cmp	 ebx, -8			; fffffff8H
  0028d	75 13		 jne	 SHORT $LN62@gate

; 2312 : 			d_pedal[ch] = step[ch][step_point[ch]++];

  0028f	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00292	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00299	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?d_pedal@@3PAHA[esi*4], eax

; 2313 : 			goto gate_100;

  002a0	eb 7a		 jmp	 SHORT $LN129@gate
$LN62@gate:

; 2314 : 		}
; 2315 : 		if (next_command == MUSIC_WAVE) {		//???????

  002a2	83 fb f3	 cmp	 ebx, -13		; fffffff3H
  002a5	75 13		 jne	 SHORT $LN63@gate

; 2316 : 			wave[ch] = step[ch][step_point[ch]++];

  002a7	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  002aa	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  002b1	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?wave@@3PAHA[esi*4], eax

; 2317 : 			goto gate_100;

  002b8	eb 62		 jmp	 SHORT $LN129@gate
$LN63@gate:

; 2318 : 		}
; 2319 : 		if (next_command == MUSIC_VOL) {		//????

  002ba	83 fb fb	 cmp	 ebx, -5			; fffffffbH
  002bd	75 13		 jne	 SHORT $LN64@gate

; 2320 : 			dataVolume[ch] = step[ch][step_point[ch]++];

  002bf	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  002c2	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  002c9	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?dataVolume@@3PAHA[esi*4], eax

; 2321 : 			//			pDSData[play_use_task[ch]]->SetVolume(dataVolume[ch]);
; 2322 : 			goto gate_100;

  002d0	eb 4a		 jmp	 SHORT $LN129@gate
$LN64@gate:

; 2323 : 		}
; 2324 : 		if (next_command == MUSIC_DETUNE) {		//??????

  002d2	83 fb f1	 cmp	 ebx, -15		; fffffff1H
  002d5	75 13		 jne	 SHORT $LN65@gate

; 2325 : 			play_detune[ch] = step[ch][step_point[ch]++];

  002d7	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  002da	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  002e1	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?play_detune@@3PAHA[esi*4], eax

; 2326 : 			goto gate_100;

  002e8	eb 32		 jmp	 SHORT $LN129@gate
$LN65@gate:

; 2327 : 		}
; 2328 : 		if (next_command == MUSIC_FREQ) {		//î«î¦??

  002ea	83 fb fc	 cmp	 ebx, -4			; fffffffcH
  002ed	75 13		 jne	 SHORT $LN66@gate

; 2329 : 			dataFrequency[ch] = step[ch][step_point[ch]++];

  002ef	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  002f2	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  002f9	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?dataFrequency@@3PAJA[esi*4], eax

; 2330 : 			//			pDSData[play_use_task[ch]]->SetFrequency((DWORD)dataFrequency[ch]);
; 2331 : 			goto gate_100;

  00300	eb 1a		 jmp	 SHORT $LN129@gate
$LN66@gate:

; 2332 : 		}
; 2333 : 		if (next_command == MUSIC_PAN) {		//??????

  00302	83 fb fa	 cmp	 ebx, -6			; fffffffaH
  00305	0f 85 80 00 00
	00		 jne	 $LN67@gate

; 2334 : 			dataPan[ch] = step[ch][step_point[ch]++];

  0030b	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  0030e	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00315	89 04 b5 00 00
	00 00		 mov	 DWORD PTR ?dataPan@@3PAHA[esi*4], eax
$LN129@gate:

; 2167 : 						}
; 2168 : 					}
; 2169 : 				}
; 2170 : 			}
; 2171 : 		}
; 2172 : 
; 2173 : 	gate_100:
; 2174 : 		next_command = step[ch][step_point[ch]++];		//????î?î?

  0031c	47		 inc	 edi
$LN96@gate:
  0031d	8d 04 3a	 lea	 eax, DWORD PTR [edx+edi]
  00320	47		 inc	 edi
  00321	8b 1c 85 00 00
	00 00		 mov	 ebx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00328	8b 45 f8	 mov	 eax, DWORD PTR tv2198[ebp]
  0032b	89 38		 mov	 DWORD PTR [eax], edi

; 2175 : 
; 2176 : 		if (next_command >= 0) {		//???î±???

  0032d	85 db		 test	 ebx, ebx
  0032f	0f 88 00 fe ff
	ff		 js	 $gate_100$131
$LN91@gate:

; 2177 : 			if (play_use_task_cnt[ch] != 1 && tie_flg[ch] == 1) {		//???î¸???????

  00335	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?play_use_task_cnt@@3PAHA[esi*4]
  0033c	8b 7d fc	 mov	 edi, DWORD PTR tv2218[ebp]
  0033f	89 4d e4	 mov	 DWORD PTR $T3[ebp], ecx
  00342	83 f9 01	 cmp	 ecx, 1
  00345	74 0c		 je	 SHORT $LN34@gate
  00347	83 7d e8 01	 cmp	 DWORD PTR tv2200[ebp], 1
  0034b	75 06		 jne	 SHORT $LN34@gate

; 2178 : 				tie_flg[ch] = 0;		//???î

  0034d	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN34@gate:

; 2179 : 			}
; 2180 : 			if (!tie_flg[ch]) {		//???????

  00353	83 3f 00	 cmp	 DWORD PTR [edi], 0
  00356	0f 85 59 02 00
	00		 jne	 $LN35@gate

; 2181 : 				stop_voice();		//î¸??????îî

  0035c	e8 00 00 00 00	 call	 ?stop_voice@@YAXXZ	; stop_voice

; 2182 : 				set_tone(dataToneNo[ch], next_command, 0, 0);	//î?????

  00361	6a 00		 push	 0
  00363	6a 00		 push	 0
  00365	53		 push	 ebx
  00366	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?dataToneNo@@3PAHA[esi*4]
  0036d	e8 00 00 00 00	 call	 ?set_tone@@YAHHJHH@Z	; set_tone

; 2183 : 				note_old[ch][0] = next_command;		//??????î±?îî¼

  00372	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
  00378	83 c4 10	 add	 esp, 16			; 00000010H
  0037b	8b c6		 mov	 eax, esi
  0037d	c1 e0 05	 shl	 eax, 5
  00380	89 98 00 00 00
	00		 mov	 DWORD PTR ?note_old@@3PAY07HA[eax], ebx

; 2184 : 			}

  00386	e9 7a 02 00 00	 jmp	 $LN9@gate
$LN67@gate:

; 2335 : 			//			pDSData[play_use_task[ch]]->SetPan(dataPan[ch]);
; 2336 : 			goto gate_100;
; 2337 : 		}
; 2338 : 		if (next_command == MUSIC_END) {		//î·??

  0038b	83 fb ff	 cmp	 ebx, -1
  0038e	0f 85 c2 02 00
	00		 jne	 $LN128@gate

; 2339 : 			play_flg[ch] = 0;

  00394	5b		 pop	 ebx
  00395	5f		 pop	 edi
  00396	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?play_flg@@3PAHA[esi*4], 0
  003a1	5e		 pop	 esi

; 2340 : 			return;
; 2341 : 		}
; 2342 : 	}
; 2343 : }

  003a2	8b e5		 mov	 esp, ebp
  003a4	5d		 pop	 ebp
  003a5	c3		 ret	 0
$LN93@gate:

; 2281 : 			if (tie_flg[ch]) {		//????

  003a6	83 7d e8 00	 cmp	 DWORD PTR tv2200[ebp], 0
  003aa	74 4a		 je	 SHORT $LN18@gate

; 2282 : 				for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  003ac	8b 1c b5 00 00
	00 00		 mov	 ebx, DWORD PTR ?play_use_task_cnt@@3PAHA[esi*4]
  003b3	85 db		 test	 ebx, ebx
  003b5	7e 3f		 jle	 SHORT $LN18@gate
  003b7	c1 e6 05	 shl	 esi, 5
  003ba	66 0f 1f 44 00
	00		 npad	 6
$LL19@gate:

; 2283 : 					//???????
; 2284 : 					voice[play_use_task[ch][cnt]].name = VOICE_TIE_SET;

  003c0	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?play_use_task@@3PAY07HA[esi]
  003c6	8b c1		 mov	 eax, ecx

; 2285 : 					//???????????
; 2286 : 					set_voice_param(play_use_task[ch][cnt], note_old[ch][cnt], -1, 0);

  003c8	6a 00		 push	 0
  003ca	c1 e0 04	 shl	 eax, 4
  003cd	6a ff		 push	 -1
  003cf	ff b6 00 00 00
	00		 push	 DWORD PTR ?note_old@@3PAY07HA[esi]
  003d5	2b c1		 sub	 eax, ecx
  003d7	51		 push	 ecx
  003d8	c7 04 85 00 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 10 ; 0000000aH
  003e3	e8 00 00 00 00	 call	 ?set_voice_param@@YAXHJHH@Z ; set_voice_param
  003e8	83 c4 10	 add	 esp, 16			; 00000010H
  003eb	8d 76 04	 lea	 esi, DWORD PTR [esi+4]
  003ee	83 eb 01	 sub	 ebx, 1
  003f1	75 cd		 jne	 SHORT $LL19@gate
  003f3	8b 55 f0	 mov	 edx, DWORD PTR tv2190[ebp]
$LN18@gate:

; 2287 : 				}
; 2288 : 			}
; 2289 : 			step_time[ch] = step[ch][step_point[ch]++];		//???????

  003f6	8b 4d e4	 mov	 ecx, DWORD PTR tv2203[ebp]
  003f9	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  003fc	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00403	5b		 pop	 ebx
  00404	89 01		 mov	 DWORD PTR [ecx], eax

; 2290 : 			gate_time[ch] = step[ch][step_point[ch]++];		//??????

  00406	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00409	8b 0c 85 04 00
	00 00		 mov	 ecx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4+4]
  00410	8b 45 ec	 mov	 eax, DWORD PTR tv2207[ebp]
  00413	8b 55 f8	 mov	 edx, DWORD PTR tv2198[ebp]
  00416	89 08		 mov	 DWORD PTR [eax], ecx
  00418	8d 47 02	 lea	 eax, DWORD PTR [edi+2]

; 2291 : 			if (gate_time[ch] == -1) {		//????
; 2292 : 				tie_flg[ch] = 1;
; 2293 : 			}
; 2294 : 			else {
; 2295 : 				tie_flg[ch] = 0;
; 2296 : 			}
; 2297 : 			return;

  0041b	8b 7d fc	 mov	 edi, DWORD PTR tv2218[ebp]
  0041e	89 02		 mov	 DWORD PTR [edx], eax
  00420	33 c0		 xor	 eax, eax
  00422	83 f9 ff	 cmp	 ecx, -1
  00425	0f 94 c0	 sete	 al
  00428	89 07		 mov	 DWORD PTR [edi], eax
  0042a	5f		 pop	 edi
  0042b	5e		 pop	 esi

; 2340 : 			return;
; 2341 : 		}
; 2342 : 	}
; 2343 : }

  0042c	8b e5		 mov	 esp, ebp
  0042e	5d		 pop	 ebp
  0042f	c3		 ret	 0
$LN92@gate:

; 2206 : 			int waon_cnt, waon_delay, waon_delay_total = 0;
; 2207 : 			waon_cnt = step[ch][step_point[ch]++];		//???î?î?

  00430	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  00433	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _waon_delay_total$1$[ebp], 0
  0043a	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00441	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]

; 2208 : 			waon_delay = step[ch][step_point[ch]++];		//??????î?î?
; 2209 : 			if (waon_cnt != play_use_task_cnt[ch] && tie_flg[ch] == 1) {		//???î¸???????

  00444	8b 7d fc	 mov	 edi, DWORD PTR tv2218[ebp]
  00447	8d 04 13	 lea	 eax, DWORD PTR [ebx+edx]
  0044a	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00451	43		 inc	 ebx
  00452	89 45 e0	 mov	 DWORD PTR _waon_delay$1$[ebp], eax
  00455	8b 45 f8	 mov	 eax, DWORD PTR tv2198[ebp]
  00458	89 4d ec	 mov	 DWORD PTR _waon_cnt$1$[ebp], ecx
  0045b	89 5d dc	 mov	 DWORD PTR $T1[ebp], ebx
  0045e	89 18		 mov	 DWORD PTR [eax], ebx
  00460	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?play_use_task_cnt@@3PAHA[esi*4]
  00467	89 45 e4	 mov	 DWORD PTR $T2[ebp], eax
  0046a	3b c8		 cmp	 ecx, eax
  0046c	74 0c		 je	 SHORT $LN40@gate
  0046e	83 7d e8 01	 cmp	 DWORD PTR tv2200[ebp], 1
  00472	75 06		 jne	 SHORT $LN40@gate

; 2210 : 				tie_flg[ch] = 0;		//???î

  00474	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0
$LN40@gate:

; 2211 : 			}
; 2212 : 			if (!tie_flg[ch]) {		//???????

  0047a	83 3f 00	 cmp	 DWORD PTR [edi], 0
  0047d	0f 85 81 00 00
	00		 jne	 $LN41@gate

; 2213 : 				stop_voice();		//î¸??????îî

  00483	e8 00 00 00 00	 call	 ?stop_voice@@YAXXZ	; stop_voice
  00488	33 c0		 xor	 eax, eax
  0048a	89 45 f8	 mov	 DWORD PTR _cnt$1$[ebp], eax

; 2214 : 				for (int cnt = 0; cnt < waon_cnt; cnt++) {

  0048d	39 45 ec	 cmp	 DWORD PTR _waon_cnt$1$[ebp], eax
  00490	0f 8e c8 00 00
	00		 jle	 $LN15@gate
  00496	8b 7d f0	 mov	 edi, DWORD PTR tv2190[ebp]
  00499	0f 1f 80 00 00
	00 00		 npad	 7
$LL13@gate:

; 2215 : 					//??????
; 2216 : 					set_tone(dataToneNo[ch], step[ch][step_point[ch]], cnt, waon_delay_total);

  004a0	ff 75 f4	 push	 DWORD PTR _waon_delay_total$1$[ebp]
  004a3	50		 push	 eax
  004a4	8d 04 3b	 lea	 eax, DWORD PTR [ebx+edi]
  004a7	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  004ae	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?dataToneNo@@3PAHA[esi*4]
  004b5	e8 00 00 00 00	 call	 ?set_tone@@YAHHJHH@Z	; set_tone

; 2217 : 					note_old[ch][cnt] = step[ch][step_point[ch]++];		//??????î±?îî¼

  004ba	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
  004c0	83 c4 10	 add	 esp, 16			; 00000010H
  004c3	8b 4d f8	 mov	 ecx, DWORD PTR _cnt$1$[ebp]
  004c6	8b fe		 mov	 edi, esi
  004c8	c1 e7 0e	 shl	 edi, 14			; 0000000eH
  004cb	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR ?step_point@@3PAHA[esi*4]
  004d2	8d 0c f1	 lea	 ecx, DWORD PTR [ecx+esi*8]
  004d5	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  004d8	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  004df	8d 5a 01	 lea	 ebx, DWORD PTR [edx+1]
  004e2	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?note_old@@3PAY07HA[ecx*4], eax

; 2218 : 					waon_delay_total += waon_delay;

  004e9	8b 45 e0	 mov	 eax, DWORD PTR _waon_delay$1$[ebp]
  004ec	01 45 f4	 add	 DWORD PTR _waon_delay_total$1$[ebp], eax
  004ef	8b 45 f8	 mov	 eax, DWORD PTR _cnt$1$[ebp]
  004f2	40		 inc	 eax
  004f3	89 1c b5 00 00
	00 00		 mov	 DWORD PTR ?step_point@@3PAHA[esi*4], ebx
  004fa	89 45 f8	 mov	 DWORD PTR _cnt$1$[ebp], eax
  004fd	3b 45 ec	 cmp	 eax, DWORD PTR _waon_cnt$1$[ebp]
  00500	7c 9e		 jl	 SHORT $LL13@gate

; 2219 : 				}
; 2220 : 			}

  00502	eb 5a		 jmp	 SHORT $LN15@gate
$LN41@gate:

; 2221 : 			else {
; 2222 : 				for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  00504	85 c0		 test	 eax, eax
  00506	7e 56		 jle	 SHORT $LN15@gate
  00508	8b de		 mov	 ebx, esi
  0050a	8b 75 dc	 mov	 esi, DWORD PTR $T1[ebp]
  0050d	c1 e3 05	 shl	 ebx, 5
$LL16@gate:

; 2223 : 					//???????
; 2224 : 					voice[play_use_task[ch][cnt]].name = VOICE_TIE_SET;

  00510	8b 8b 00 00 00
	00		 mov	 ecx, DWORD PTR ?play_use_task@@3PAY07HA[ebx]
  00516	8b c1		 mov	 eax, ecx
  00518	c1 e0 04	 shl	 eax, 4
  0051b	2b c1		 sub	 eax, ecx

; 2225 : 					//???????????
; 2226 : 					set_voice_param(play_use_task[ch][cnt], step[ch][step_point[ch]], -1, 0);

  0051d	6a 00		 push	 0
  0051f	6a ff		 push	 -1
  00521	c7 04 85 00 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 10 ; 0000000aH
  0052c	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  0052f	8b 3c 85 00 00
	00 00		 mov	 edi, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00536	57		 push	 edi
  00537	51		 push	 ecx
  00538	e8 00 00 00 00	 call	 ?set_voice_param@@YAXHJHH@Z ; set_voice_param
  0053d	8b 55 f0	 mov	 edx, DWORD PTR tv2190[ebp]
  00540	8d 5b 04	 lea	 ebx, DWORD PTR [ebx+4]
  00543	83 c4 10	 add	 esp, 16			; 00000010H

; 2227 : 					note_old[ch][cnt] = step[ch][step_point[ch]++];		//??????î±?îî¼

  00546	89 bb fc ff ff
	ff		 mov	 DWORD PTR ?note_old@@3PAY07HA[ebx-4], edi
  0054c	46		 inc	 esi
  0054d	83 6d e4 01	 sub	 DWORD PTR $T2[ebp], 1
  00551	75 bd		 jne	 SHORT $LL16@gate
  00553	8b 45 f8	 mov	 eax, DWORD PTR tv2198[ebp]
  00556	89 30		 mov	 DWORD PTR [eax], esi
  00558	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
$LN15@gate:

; 2228 : 				}
; 2229 : 			}
; 2230 : 			step_time[ch] = step[ch][step_point[ch]++];		//???????

  0055e	8d 3c b5 00 00
	00 00		 lea	 edi, DWORD PTR [esi*4]
  00565	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00568	8b 97 00 00 00
	00		 mov	 edx, DWORD PTR ?step_point@@3PAHA[edi]
  0056e	5b		 pop	 ebx
  0056f	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00572	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00579	89 87 00 00 00
	00		 mov	 DWORD PTR ?step_time@@3PAHA[edi], eax

; 2231 : 			gate_time[ch] = step[ch][step_point[ch]++];		//??????

  0057f	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  00582	8b 0c 85 04 00
	00 00		 mov	 ecx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4+4]
  00589	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  0058c	89 87 00 00 00
	00		 mov	 DWORD PTR ?step_point@@3PAHA[edi], eax

; 2232 : 			if (gate_time[ch] == -1) {		//????
; 2233 : 				tie_flg[ch] = 1;
; 2234 : 			}
; 2235 : 			else {
; 2236 : 				tie_flg[ch] = 0;
; 2237 : 			}
; 2238 : 			play_use_task_cnt[ch] = waon_cnt;		//î?????

  00592	33 c0		 xor	 eax, eax
  00594	83 f9 ff	 cmp	 ecx, -1
  00597	89 8f 00 00 00
	00		 mov	 DWORD PTR ?gate_time@@3PAHA[edi], ecx
  0059d	0f 94 c0	 sete	 al
  005a0	89 87 00 00 00
	00		 mov	 DWORD PTR ?tie_flg@@3PAHA[edi], eax
  005a6	8b 45 ec	 mov	 eax, DWORD PTR _waon_cnt$1$[ebp]
  005a9	89 87 00 00 00
	00		 mov	 DWORD PTR ?play_use_task_cnt@@3PAHA[edi], eax
  005af	5f		 pop	 edi
  005b0	5e		 pop	 esi

; 2340 : 			return;
; 2341 : 		}
; 2342 : 	}
; 2343 : }

  005b1	8b e5		 mov	 esp, ebp
  005b3	5d		 pop	 ebp
  005b4	c3		 ret	 0
$LN35@gate:

; 2185 : 			else {
; 2186 : 				for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  005b5	85 c9		 test	 ecx, ecx
  005b7	7e 4c		 jle	 SHORT $LN9@gate
  005b9	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
  005bf	8b c3		 mov	 eax, ebx
  005c1	c1 e6 05	 shl	 esi, 5
  005c4	8d be 00 00 00
	00		 lea	 edi, DWORD PTR ?note_old@@3PAY07HA[esi]
  005ca	f3 ab		 rep stosd
  005cc	0f 1f 40 00	 npad	 4
$LL10@gate:

; 2187 : 					//???????
; 2188 : 					voice[play_use_task[ch][cnt]].name = VOICE_TIE_SET;

  005d0	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?play_use_task@@3PAY07HA[esi]
  005d6	8b c1		 mov	 eax, ecx

; 2189 : 					//???????????
; 2190 : 					set_voice_param(play_use_task[ch][cnt], next_command, -1, 0);

  005d8	6a 00		 push	 0
  005da	c1 e0 04	 shl	 eax, 4
  005dd	2b c1		 sub	 eax, ecx
  005df	6a ff		 push	 -1
  005e1	53		 push	 ebx
  005e2	51		 push	 ecx
  005e3	c7 04 85 00 00
	00 00 0a 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 10 ; 0000000aH
  005ee	e8 00 00 00 00	 call	 ?set_voice_param@@YAXHJHH@Z ; set_voice_param
  005f3	83 c4 10	 add	 esp, 16			; 00000010H
  005f6	8d 76 04	 lea	 esi, DWORD PTR [esi+4]
  005f9	83 6d e4 01	 sub	 DWORD PTR $T3[ebp], 1
  005fd	75 d1		 jne	 SHORT $LL10@gate
  005ff	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
$LN9@gate:

; 2191 : 					note_old[ch][cnt] = next_command;		//??????î±?îî¼
; 2192 : 				}
; 2193 : 			}
; 2194 : 			step_time[ch] = step[ch][step_point[ch]++];		//???????

  00605	8d 3c b5 00 00
	00 00		 lea	 edi, DWORD PTR [esi*4]
  0060c	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  0060f	8b 97 00 00 00
	00		 mov	 edx, DWORD PTR ?step_point@@3PAHA[edi]
  00615	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00618	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  0061f	89 87 00 00 00
	00		 mov	 DWORD PTR ?step_time@@3PAHA[edi], eax

; 2195 : 			gate_time[ch] = step[ch][step_point[ch]++];		//??????

  00625	8d 04 32	 lea	 eax, DWORD PTR [edx+esi]
  00628	8b 0c 85 04 00
	00 00		 mov	 ecx, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4+4]
  0062f	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  00632	89 87 00 00 00
	00		 mov	 DWORD PTR ?step_point@@3PAHA[edi], eax

; 2196 : 			if (gate_time[ch] == -1) {		//????
; 2197 : 				tie_flg[ch] = 1;
; 2198 : 			}
; 2199 : 			else {
; 2200 : 				tie_flg[ch] = 0;
; 2201 : 			}
; 2202 : 			play_use_task_cnt[ch] = 1;		//î?????

  00638	33 c0		 xor	 eax, eax
  0063a	83 f9 ff	 cmp	 ecx, -1
  0063d	89 8f 00 00 00
	00		 mov	 DWORD PTR ?gate_time@@3PAHA[edi], ecx
  00643	0f 94 c0	 sete	 al
  00646	89 87 00 00 00
	00		 mov	 DWORD PTR ?tie_flg@@3PAHA[edi], eax
  0064c	c7 87 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?play_use_task_cnt@@3PAHA[edi], 1
$LN128@gate:
  00656	5b		 pop	 ebx
$LN127@gate:
  00657	5f		 pop	 edi
$LN68@gate:
  00658	5e		 pop	 esi

; 2340 : 			return;
; 2341 : 		}
; 2342 : 	}
; 2343 : }

  00659	8b e5		 mov	 esp, ebp
  0065b	5d		 pop	 ebp
  0065c	c3		 ret	 0
?gate@@YAXXZ ENDP					; gate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?stop_voice@@YAXXZ
_TEXT	SEGMENT
?stop_voice@@YAXXZ PROC					; stop_voice, COMDAT

; 2117 : 	for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ch@@3HA
  00005	56		 push	 esi
  00006	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?play_use_task_cnt@@3PAHA[eax*4]
  0000d	85 f6		 test	 esi, esi
  0000f	7e 36		 jle	 SHORT $LN3@stop_voice
  00011	c1 e0 05	 shl	 eax, 5
  00014	05 00 00 00 00	 add	 eax, OFFSET ?play_use_task@@3PAY07HA
  00019	0f 1f 80 00 00
	00 00		 npad	 7
$LL9@stop_voice:

; 2118 : 		if (play_use_task[ch][cnt] != -1) {					//???î¸???

  00020	8b 10		 mov	 edx, DWORD PTR [eax]
  00022	83 fa ff	 cmp	 edx, -1
  00025	74 18		 je	 SHORT $LN15@stop_voice

; 2119 : #if VOICE_KILL_ON
; 2120 : 			voice_kill_buf[voice_kill_point++] = play_use_task[ch][cnt];
; 2121 : #else
; 2122 : 			voice[play_use_task[ch][cnt]].name = VOICE_KEY_OFF_FAST;		//????î²?????

  00027	8b ca		 mov	 ecx, edx

; 2123 : #endif
; 2124 : 			play_use_task[ch][cnt] = -1;					//???î ¹î¸?

  00029	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  0002f	c1 e1 04	 shl	 ecx, 4
  00032	2b ca		 sub	 ecx, edx
  00034	c7 04 8d 00 00
	00 00 6e 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4], 110 ; 0000006eH
$LN15@stop_voice:

; 2117 : 	for (int cnt = 0; cnt < play_use_task_cnt[ch]; cnt++) {

  0003f	83 c0 04	 add	 eax, 4
  00042	83 ee 01	 sub	 esi, 1
  00045	75 d9		 jne	 SHORT $LL9@stop_voice
$LN3@stop_voice:
  00047	5e		 pop	 esi

; 2125 : 		}
; 2126 : 	}
; 2127 : }

  00048	c3		 ret	 0
?stop_voice@@YAXXZ ENDP					; stop_voice
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?set_tone@@YAHHJHH@Z
_TEXT	SEGMENT
_tone$ = 8						; size = 4
_note$ = 12						; size = 4
_use_task_cnt$ = 16					; size = 4
_delay$ = 20						; size = 4
?set_tone@@YAHHJHH@Z PROC				; set_tone, COMDAT

; 2068 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 2069 : 	int d7, d1 = 0;
; 2070 : 
; 2071 : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {		//???????î?

  00004	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?voice_seek_point@@3HA
  0000a	33 c9		 xor	 ecx, ecx
  0000c	0f 1f 40 00	 npad	 4
$LL4@set_tone:

; 2072 : //		if( voice[ d7 ].name == 0){		//???
; 2073 : 		if (voice[voice_seek_point].name == 0) {		//???

  00010	8b c6		 mov	 eax, esi
  00012	c1 e0 04	 shl	 eax, 4
  00015	2b c6		 sub	 eax, esi
  00017	83 3c 85 00 00
	00 00 00	 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 0
  0001f	74 2c		 je	 SHORT $LN6@set_tone

; 2074 : 			d1 = 1;										//??????
; 2075 : 			break;
; 2076 : 		}
; 2077 : 		voice_seek_point++;

  00021	46		 inc	 esi
  00022	41		 inc	 ecx

; 2078 : 		voice_seek_point &= VOICE_MAX - 1;

  00023	83 e6 3f	 and	 esi, 63			; 0000003fH
  00026	89 35 00 00 00
	00		 mov	 DWORD PTR ?voice_seek_point@@3HA, esi
  0002c	83 f9 40	 cmp	 ecx, 64			; 00000040H
  0002f	7c df		 jl	 SHORT $LL4@set_tone

; 2079 : 	}
; 2080 : 	if (!d1) {		//????????
; 2081 : #ifdef  _STONDEBUG_
; 2082 : 		MessageBox(hWnd, "???î?", "Error", MB_OK);		//????î??
; 2083 : #endif
; 2084 : 		play_use_task[ch][use_task_cnt] = -1;		//î¸??????

  00031	8b 4d 10	 mov	 ecx, DWORD PTR _use_task_cnt$[ebp]
  00034	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ch@@3HA
  00039	5e		 pop	 esi
  0003a	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  0003d	c7 04 85 00 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR ?play_use_task@@3PAY07HA[eax*4], -1

; 2085 : 		return -1;

  00048	83 c8 ff	 or	 eax, -1

; 2112 : }

  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN6@set_tone:

; 2086 : 	}
; 2087 : 	d7 = voice_seek_point;
; 2088 : 
; 2089 : 	play_use_task[ch][use_task_cnt] = d7;		//î¸????î±?îî¼

  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ch@@3HA
  00052	53		 push	 ebx
  00053	8b 5d 10	 mov	 ebx, DWORD PTR _use_task_cnt$[ebp]
  00056	57		 push	 edi

; 2090 : 
; 2091 : 	voice[d7].name = VOICE_KEY_ON;			//î­î¹?î???
; 2092 : 
; 2093 : 	if (voice[d7].tone_no == tone)		//î¯??îî±??

  00057	8b 7d 08	 mov	 edi, DWORD PTR _tone$[ebp]
  0005a	8d 04 c3	 lea	 eax, DWORD PTR [ebx+eax*8]
  0005d	89 34 85 00 00
	00 00		 mov	 DWORD PTR ?play_use_task@@3PAY07HA[eax*4], esi
  00064	8b c6		 mov	 eax, esi
  00066	c1 e0 04	 shl	 eax, 4
  00069	2b c6		 sub	 eax, esi
  0006b	c7 04 85 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4], 1
  00076	39 3c 85 04 00
	00 00		 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4+4], edi
  0007d	74 63		 je	 SHORT $set_tone_500$21

; 2094 : 		goto set_tone_500;				//??????
; 2095 : 
; 2096 : 	voice[d7].tone_no = tone;		//?îî±?îî¼
; 2097 : 
; 2098 : 	RELEASE(pDSData[d7]);

  0007f	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  00086	89 3c 85 04 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[eax*4+4], edi
  0008d	8d 04 b5 00 00
	00 00		 lea	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  00094	85 c9		 test	 ecx, ecx
  00096	74 11		 je	 SHORT $LN9@set_tone
  00098	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009a	51		 push	 ecx
  0009b	ff 50 08	 call	 DWORD PTR [eax+8]
  0009e	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[esi*4], 0
$LN9@set_tone:

; 2099 : 
; 2100 : 	if (pDSound->DuplicateSoundBuffer(pDSData_tone[tone], &pDSData[d7]) != DS_OK) {		//?î???

  000a9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  000ae	8d 14 b5 00 00
	00 00		 lea	 edx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  000b5	52		 push	 edx
  000b6	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	50		 push	 eax
  000c0	ff 51 14	 call	 DWORD PTR [ecx+20]
  000c3	85 c0		 test	 eax, eax
  000c5	74 1b		 je	 SHORT $set_tone_500$21

; 2101 : #ifdef  _STONDEBUG_
; 2102 : 		MessageBox(hWnd, "å¤å¶å£°é³bufferå¤±è´¥ï¼", "Error", MB_OK);
; 2103 : #endif
; 2104 : 		play_use_task[ch][use_task_cnt] = -1;		//î¸??????

  000c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?ch@@3HA
  000cc	5f		 pop	 edi
  000cd	8d 04 c3	 lea	 eax, DWORD PTR [ebx+eax*8]
  000d0	5b		 pop	 ebx
  000d1	c7 04 85 00 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR ?play_use_task@@3PAY07HA[eax*4], -1

; 2105 : 		return -1;

  000dc	83 c8 ff	 or	 eax, -1
  000df	5e		 pop	 esi

; 2112 : }

  000e0	5d		 pop	 ebp
  000e1	c3		 ret	 0
$set_tone_500$21:

; 2106 : 	}
; 2107 : 
; 2108 : set_tone_500:
; 2109 : 	set_voice_param(d7, note, delay, 1);		//???????????

  000e2	6a 01		 push	 1
  000e4	ff 75 14	 push	 DWORD PTR _delay$[ebp]
  000e7	ff 75 0c	 push	 DWORD PTR _note$[ebp]
  000ea	56		 push	 esi
  000eb	e8 00 00 00 00	 call	 ?set_voice_param@@YAXHJHH@Z ; set_voice_param
  000f0	83 c4 10	 add	 esp, 16			; 00000010H

; 2110 : 
; 2111 : 	return 0;

  000f3	33 c0		 xor	 eax, eax
  000f5	5f		 pop	 edi
  000f6	5b		 pop	 ebx
  000f7	5e		 pop	 esi

; 2112 : }

  000f8	5d		 pop	 ebp
  000f9	c3		 ret	 0
?set_tone@@YAHHJHH@Z ENDP				; set_tone
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?set_voice_param@@YAXHJHH@Z
_TEXT	SEGMENT
_task_no$ = 8						; size = 4
_note$ = 12						; size = 4
_delay$ = 16						; size = 4
_lfo_flg$ = 20						; size = 4
?set_voice_param@@YAXHJHH@Z PROC			; set_voice_param, COMDAT

; 2026 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 2027 : 	voice[task_no].volume = dataVolume[ch];			// ????????

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _task_no$[ebp]
  00006	56		 push	 esi
  00007	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?ch@@3HA
  0000d	c1 e1 04	 shl	 ecx, 4
  00010	2b 4d 08	 sub	 ecx, DWORD PTR _task_no$[ebp]
  00013	57		 push	 edi

; 2028 : //	voice[ task_no ].freq = freq + dataFrequency[ch];	// î«î¦????
; 2029 : 	// î«î¦????
; 2030 : 	if (play_detune[ch] > 0) {		//???????????

  00014	8b 14 b5 00 00
	00 00		 mov	 edx, DWORD PTR ?play_detune@@3PAHA[esi*4]
  0001b	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?dataVolume@@3PAHA[esi*4]
  00022	8b 7d 0c	 mov	 edi, DWORD PTR _note$[ebp]
  00025	89 04 8d 08 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+8], eax
  0002c	85 d2		 test	 edx, edx
  0002e	7e 23		 jle	 SHORT $LN2@set_voice_

; 2031 : 		voice[task_no].freq = freq_tbl[note] + detune_tbl[note] * play_detune[ch] / 64 + dataFrequency[ch];

  00030	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?detune_tbl@@3PAHA[edi*4]
  00037	0f af c2	 imul	 eax, edx
  0003a	99		 cdq
  0003b	83 e2 3f	 and	 edx, 63			; 0000003fH
  0003e	03 c2		 add	 eax, edx
  00040	c1 f8 06	 sar	 eax, 6
  00043	03 04 b5 00 00
	00 00		 add	 eax, DWORD PTR ?dataFrequency@@3PAJA[esi*4]
  0004a	03 04 bd 00 00
	00 00		 add	 eax, DWORD PTR ?freq_tbl@@3PAHA[edi*4]

; 2032 : 	}

  00051	eb 34		 jmp	 SHORT $LN5@set_voice_
$LN2@set_voice_:

; 2033 : 	else if (play_detune[ch] < 0) {		//????????????

  00053	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?freq_tbl@@3PAHA[edi*4]
  0005a	53		 push	 ebx
  0005b	8b 1c b5 00 00
	00 00		 mov	 ebx, DWORD PTR ?dataFrequency@@3PAJA[esi*4]
  00062	85 d2		 test	 edx, edx
  00064	79 1e		 jns	 SHORT $LN4@set_voice_

; 2034 : 		voice[task_no].freq = freq_tbl[note] + detune_tbl[note - 1] * play_detune[ch] / 64 + dataFrequency[ch];

  00066	8b 04 bd fc ff
	ff ff		 mov	 eax, DWORD PTR ?detune_tbl@@3PAHA[edi*4-4]
  0006d	0f af c2	 imul	 eax, edx
  00070	99		 cdq
  00071	83 e2 3f	 and	 edx, 63			; 0000003fH
  00074	03 c2		 add	 eax, edx
  00076	c1 f8 06	 sar	 eax, 6
  00079	03 c3		 add	 eax, ebx
  0007b	03 04 bd 00 00
	00 00		 add	 eax, DWORD PTR ?freq_tbl@@3PAHA[edi*4]

; 2035 : 	}

  00082	eb 02		 jmp	 SHORT $LN13@set_voice_
$LN4@set_voice_:

; 2036 : 	else {					//?????îî?????
; 2037 : 		voice[task_no].freq = freq_tbl[note] + dataFrequency[ch];

  00084	03 c3		 add	 eax, ebx
$LN13@set_voice_:
  00086	5b		 pop	 ebx
$LN5@set_voice_:

; 2038 : 	}
; 2039 : 	voice[task_no].note_no = note;				// ???î±????

  00087	89 04 8d 38 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+56], eax

; 2040 : 	voice[task_no].pan = dataPan[ch];				// ????????

  0008e	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?dataPan@@3PAHA[esi*4]
  00095	89 04 8d 2c 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+44], eax

; 2041 : 	voice[task_no].release_spd = wave[ch];		// ?????????

  0009c	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?wave@@3PAHA[esi*4]
  000a3	89 04 8d 14 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+20], eax

; 2042 : 	voice[task_no].release_cnt = 0;				//
; 2043 : 	if (voice[task_no].tone_no == 12 - 1) {				//????î??
; 2044 : 		voice[task_no].loop_flg = DSBPLAY_LOOPING;	//
; 2045 : 	}
; 2046 : 	else {
; 2047 : 		voice[task_no].loop_flg = 0;					//
; 2048 : 	}
; 2049 : 	if (delay >= 0) {								//?????????????

  000aa	33 c0		 xor	 eax, eax
  000ac	83 3c 8d 04 00
	00 00 0b	 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+4], 11 ; 0000000bH
  000b4	89 3c 8d 0c 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+12], edi
  000bb	0f 94 c0	 sete	 al
  000be	c7 04 8d 10 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+16], 0
  000c9	89 04 8d 30 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+48], eax
  000d0	8b 45 10	 mov	 eax, DWORD PTR _delay$[ebp]
  000d3	85 c0		 test	 eax, eax
  000d5	78 07		 js	 SHORT $LN8@set_voice_

; 2050 : 		voice[task_no].delay_cnt = delay;		//

  000d7	89 04 8d 34 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+52], eax
$LN8@set_voice_:

; 2051 : 	}
; 2052 : 	if (lfo_flg) {		//??????????

  000de	83 7d 14 00	 cmp	 DWORD PTR _lfo_flg$[ebp], 0
  000e2	74 43		 je	 SHORT $LN9@set_voice_

; 2053 : 		voice[task_no].lfo_h = play_lfo_h[ch];					//??????

  000e4	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?play_lfo_h@@3PAHA[esi*4]
  000eb	89 04 8d 18 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+24], eax

; 2054 : 		voice[task_no].lfo_m = play_lfo_m[ch];					//

  000f2	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?play_lfo_m@@3PAHA[esi*4]
  000f9	89 04 8d 1c 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+28], eax

; 2055 : 		if ((voice[task_no].lfo_s = play_lfo_s[ch]) >= 0) {		//

  00100	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?play_lfo_s@@3PAHA[esi*4]
  00107	89 04 8d 20 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+32], eax

; 2056 : 			voice[task_no].lfo_s_ang = 1;							//
; 2057 : 		}
; 2058 : 		else {
; 2059 : 			voice[task_no].lfo_s_ang = -1;						//
; 2060 : 		}
; 2061 : 		voice[task_no].lfo_s_cnt = 0;								//

  0010e	c1 f8 1f	 sar	 eax, 31			; 0000001fH
  00111	83 e0 fe	 and	 eax, -2			; fffffffeH
  00114	40		 inc	 eax
  00115	89 04 8d 28 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+40], eax
  0011c	c7 04 8d 24 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+36], 0
$LN9@set_voice_:

; 2062 : 	}
; 2063 : }

  00127	5f		 pop	 edi
  00128	5e		 pop	 esi
  00129	5d		 pop	 ebp
  0012a	c3		 ret	 0
?set_voice_param@@YAXHJHH@Z ENDP			; set_voice_param
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?voice_action@@YAXH@Z
_TEXT	SEGMENT
_a0$ = 8						; size = 4
?voice_action@@YAXH@Z PROC				; voice_action, COMDAT

; 1965 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1966 : 	DWORD	Status = 0;
; 1967 : 
; 1968 : 	switch (voice[a0].name) {

  00005	8b 7d 08	 mov	 edi, DWORD PTR _a0$[ebp]
  00008	8b f7		 mov	 esi, edi
  0000a	c1 e6 04	 shl	 esi, 4
  0000d	2b f7		 sub	 esi, edi
  0000f	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4]
  00016	48		 dec	 eax
  00017	83 f8 6d	 cmp	 eax, 109		; 0000006dH
  0001a	0f 87 a6 01 00
	00		 ja	 $LN2@voice_acti
  00020	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN14@voice_acti[eax]
  00027	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN15@voice_acti[eax*4]
$LN4@voice_acti:

; 1969 : 	case VOICE_KEY_ON:		//î­î¹????
; 1970 : 		if (voice[a0].delay_cnt) {		//?????????

  0002e	8b 04 b5 34 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+52]
  00035	85 c0		 test	 eax, eax
  00037	74 0c		 je	 SHORT $LN5@voice_acti

; 1971 : 			voice[a0].delay_cnt--;

  00039	48		 dec	 eax
  0003a	5f		 pop	 edi
  0003b	89 04 b5 34 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+52], eax

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN5@voice_acti:

; 1972 : 			return;
; 1973 : 		}
; 1974 : 		pDSData[a0]->SetVolume(volume_tbl[voice[a0].volume]);		// ????????

  00045	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  0004c	8b 04 b5 08 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+8]
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  0005c	51		 push	 ecx
  0005d	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1975 : 		pDSData[a0]->SetFrequency((DWORD)voice[a0].freq);			// î«î¦????

  00060	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  00067	ff 34 b5 38 00
	00 00		 push	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+56]
  0006e	50		 push	 eax
  0006f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00071	ff 51 44	 call	 DWORD PTR [ecx+68]

; 1976 : 		pDSData[a0]->SetPan(panpot_tbl[voice[a0].pan]);			// ????????

  00074	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  0007b	8b 04 b5 2c 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+44]
  00082	8b 11		 mov	 edx, DWORD PTR [ecx]
  00084	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?panpot_tbl@@3PAJA[eax*4]
  0008b	51		 push	 ecx
  0008c	ff 52 40	 call	 DWORD PTR [edx+64]

; 1977 : 		pDSData[a0]->Play(0, 0, voice[a0].loop_flg);				//????

  0008f	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  00096	ff 34 b5 30 00
	00 00		 push	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+48]
  0009d	6a 00		 push	 0
  0009f	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a1	6a 00		 push	 0
  000a3	50		 push	 eax
  000a4	ff 51 30	 call	 DWORD PTR [ecx+48]

; 1978 : 		voice[a0].name = VOICE_NORMAL;

  000a7	c7 04 b5 00 00
	00 00 02 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4], 2
$LN13@voice_acti:

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  000b2	57		 push	 edi
  000b3	e8 00 00 00 00	 call	 ?voice_lfo@@YAXH@Z	; voice_lfo
  000b8	83 c4 04	 add	 esp, 4
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5d		 pop	 ebp
  000be	c3		 ret	 0
$LN7@voice_acti:

; 1979 : 		voice_lfo(a0);		//??????
; 1980 : 		break;
; 1981 : 	case VOICE_NORMAL:		//î­î¹?????
; 1982 : 		voice_lfo(a0);		//??????
; 1983 : 		break;
; 1984 : 	case VOICE_TIE_SET:		//???????
; 1985 : 		pDSData[a0]->SetVolume(volume_tbl[voice[a0].volume]);		// ????????

  000bf	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  000c6	8b 04 b5 08 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+8]
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  000d6	51		 push	 ecx
  000d7	ff 52 3c	 call	 DWORD PTR [edx+60]

; 1986 : 		pDSData[a0]->SetFrequency((DWORD)voice[a0].freq);		// î«î¦????

  000da	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  000e1	ff 34 b5 38 00
	00 00		 push	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+56]
  000e8	50		 push	 eax
  000e9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000eb	ff 51 44	 call	 DWORD PTR [ecx+68]

; 1987 : 		pDSData[a0]->SetPan(panpot_tbl[voice[a0].pan]);			// ????????

  000ee	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  000f5	8b 04 b5 2c 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+44]
  000fc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fe	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?panpot_tbl@@3PAJA[eax*4]
  00105	51		 push	 ecx
  00106	ff 52 40	 call	 DWORD PTR [edx+64]
  00109	5f		 pop	 edi

; 1988 : 		voice[a0].name = VOICE_NORMAL;

  0010a	c7 04 b5 00 00
	00 00 02 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4], 2

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  00115	5e		 pop	 esi
  00116	5d		 pop	 ebp
  00117	c3		 ret	 0
$LN8@voice_acti:

; 1989 : 		break;
; 1990 : 	case VOICE_KEY_OFF:		//î­î¹????
; 1991 : //		if( pDSData[ a0 ]->GetStatus( &Status ) == DS_OK ){
; 1992 : ///		pDSData[ a0 ]->GetStatus( &Status );		//????????î?î?
; 1993 : ///		if( Status & DSBSTATUS_PLAYING || Status & DSBSTATUS_LOOPING ){		//?î???
; 1994 : 		if (voice[a0].volume) {		//??????????

  00118	8b 0c b5 08 00
	00 00		 mov	 ecx, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+8]
  0011f	85 c9		 test	 ecx, ecx
  00121	74 51		 je	 SHORT $LN9@voice_acti

; 1995 : 			voice[a0].release_cnt++;		//?????î?????

  00123	ff 04 b5 10 00
	00 00		 inc	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+16]
  0012a	8b 04 b5 10 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+16]

; 1996 : 			if (voice[a0].release_spd != voice[a0].release_cnt) {

  00131	39 04 b5 14 00
	00 00		 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+20], eax
  00138	0f 85 74 ff ff
	ff		 jne	 $LN13@voice_acti

; 1997 : 				voice_lfo(a0);		//??????
; 1998 : 				break;		//???????î??
; 1999 : 			}
; 2000 : 			voice[a0].release_cnt = 0;		//?????î??
; 2001 : 			voice[a0].volume--;		//????????

  0013e	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  00141	c7 04 b5 10 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+16], 0

; 2002 : //				if(voice[ a0 ].volume < 0){		//??????????
; 2003 : //					voice[ a0 ].volume=0;		//?????????
; 2004 : //				}
; 2005 : 			pDSData[a0]->SetVolume(volume_tbl[voice[a0].volume]);		// ?????î?

  0014c	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  00153	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  0015a	89 04 b5 08 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+8], eax
  00161	51		 push	 ecx
  00162	8b 11		 mov	 edx, DWORD PTR [ecx]
  00164	ff 52 3c	 call	 DWORD PTR [edx+60]

; 2006 : 			voice_lfo(a0);		//??????

  00167	57		 push	 edi
  00168	e8 00 00 00 00	 call	 ?voice_lfo@@YAXH@Z	; voice_lfo
  0016d	83 c4 04	 add	 esp, 4
  00170	5f		 pop	 edi

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  00171	5e		 pop	 esi
  00172	5d		 pop	 ebp
  00173	c3		 ret	 0
$LN9@voice_acti:

; 2007 : 			break;		//????î??
; 2008 : 		}
; 2009 : 		///		}
; 2010 : 		pDSData[a0]->Stop();							//????

  00174	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  0017b	50		 push	 eax
  0017c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0017e	ff 51 48	 call	 DWORD PTR [ecx+72]

; 2011 : 		pDSData[a0]->SetCurrentPosition(0);			//

  00181	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  00188	6a 00		 push	 0
  0018a	50		 push	 eax
  0018b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018d	ff 51 34	 call	 DWORD PTR [ecx+52]
  00190	5f		 pop	 edi

; 2012 : 		voice[a0].name = VOICE_KEY_OFF_WAIT;			//î?????î?

  00191	c7 04 b5 00 00
	00 00 c8 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4], 200 ; 000000c8H

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  0019c	5e		 pop	 esi
  0019d	5d		 pop	 ebp
  0019e	c3		 ret	 0
$LN11@voice_acti:

; 2013 : //		play_use_task[ voice[ a0 ].track_no	] = -1;		//
; 2014 : 		break;
; 2015 : #if !VOICE_KILL_ON
; 2016 : 	case VOICE_KEY_OFF_FAST:		//î²?????
; 2017 : 		pDSData[a0]->Stop();					//????

  0019f	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  001a6	50		 push	 eax
  001a7	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a9	ff 51 48	 call	 DWORD PTR [ecx+72]

; 2018 : 		pDSData[a0]->SetCurrentPosition(0);			//

  001ac	8b 04 bd 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  001b3	6a 00		 push	 0
  001b5	50		 push	 eax
  001b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b8	ff 51 34	 call	 DWORD PTR [ecx+52]

; 2019 : 		voice[a0].name = 0;					//

  001bb	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4], 0
$LN2@voice_acti:

; 2020 : 		break;
; 2021 : #endif
; 2022 : 	}
; 2023 : }

  001c6	5f		 pop	 edi
  001c7	5e		 pop	 esi
  001c8	5d		 pop	 ebp
  001c9	c3		 ret	 0
  001ca	66 90		 npad	 2
$LN15@voice_acti:
  001cc	00 00 00 00	 DD	 $LN4@voice_acti
  001d0	00 00 00 00	 DD	 $LN13@voice_acti
  001d4	00 00 00 00	 DD	 $LN7@voice_acti
  001d8	00 00 00 00	 DD	 $LN8@voice_acti
  001dc	00 00 00 00	 DD	 $LN11@voice_acti
  001e0	00 00 00 00	 DD	 $LN2@voice_acti
$LN14@voice_acti:
  001e4	00		 DB	 0
  001e5	01		 DB	 1
  001e6	05		 DB	 5
  001e7	05		 DB	 5
  001e8	05		 DB	 5
  001e9	05		 DB	 5
  001ea	05		 DB	 5
  001eb	05		 DB	 5
  001ec	05		 DB	 5
  001ed	02		 DB	 2
  001ee	05		 DB	 5
  001ef	05		 DB	 5
  001f0	05		 DB	 5
  001f1	05		 DB	 5
  001f2	05		 DB	 5
  001f3	05		 DB	 5
  001f4	05		 DB	 5
  001f5	05		 DB	 5
  001f6	05		 DB	 5
  001f7	05		 DB	 5
  001f8	05		 DB	 5
  001f9	05		 DB	 5
  001fa	05		 DB	 5
  001fb	05		 DB	 5
  001fc	05		 DB	 5
  001fd	05		 DB	 5
  001fe	05		 DB	 5
  001ff	05		 DB	 5
  00200	05		 DB	 5
  00201	05		 DB	 5
  00202	05		 DB	 5
  00203	05		 DB	 5
  00204	05		 DB	 5
  00205	05		 DB	 5
  00206	05		 DB	 5
  00207	05		 DB	 5
  00208	05		 DB	 5
  00209	05		 DB	 5
  0020a	05		 DB	 5
  0020b	05		 DB	 5
  0020c	05		 DB	 5
  0020d	05		 DB	 5
  0020e	05		 DB	 5
  0020f	05		 DB	 5
  00210	05		 DB	 5
  00211	05		 DB	 5
  00212	05		 DB	 5
  00213	05		 DB	 5
  00214	05		 DB	 5
  00215	05		 DB	 5
  00216	05		 DB	 5
  00217	05		 DB	 5
  00218	05		 DB	 5
  00219	05		 DB	 5
  0021a	05		 DB	 5
  0021b	05		 DB	 5
  0021c	05		 DB	 5
  0021d	05		 DB	 5
  0021e	05		 DB	 5
  0021f	05		 DB	 5
  00220	05		 DB	 5
  00221	05		 DB	 5
  00222	05		 DB	 5
  00223	05		 DB	 5
  00224	05		 DB	 5
  00225	05		 DB	 5
  00226	05		 DB	 5
  00227	05		 DB	 5
  00228	05		 DB	 5
  00229	05		 DB	 5
  0022a	05		 DB	 5
  0022b	05		 DB	 5
  0022c	05		 DB	 5
  0022d	05		 DB	 5
  0022e	05		 DB	 5
  0022f	05		 DB	 5
  00230	05		 DB	 5
  00231	05		 DB	 5
  00232	05		 DB	 5
  00233	05		 DB	 5
  00234	05		 DB	 5
  00235	05		 DB	 5
  00236	05		 DB	 5
  00237	05		 DB	 5
  00238	05		 DB	 5
  00239	05		 DB	 5
  0023a	05		 DB	 5
  0023b	05		 DB	 5
  0023c	05		 DB	 5
  0023d	05		 DB	 5
  0023e	05		 DB	 5
  0023f	05		 DB	 5
  00240	05		 DB	 5
  00241	05		 DB	 5
  00242	05		 DB	 5
  00243	05		 DB	 5
  00244	05		 DB	 5
  00245	05		 DB	 5
  00246	05		 DB	 5
  00247	03		 DB	 3
  00248	05		 DB	 5
  00249	05		 DB	 5
  0024a	05		 DB	 5
  0024b	05		 DB	 5
  0024c	05		 DB	 5
  0024d	05		 DB	 5
  0024e	05		 DB	 5
  0024f	05		 DB	 5
  00250	05		 DB	 5
  00251	04		 DB	 4
?voice_action@@YAXH@Z ENDP				; voice_action
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?voice_lfo@@YAXH@Z
_TEXT	SEGMENT
tv413 = 8						; size = 4
_a0$ = 8						; size = 4
?voice_lfo@@YAXH@Z PROC					; voice_lfo, COMDAT

; 1927 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1928 : 	long d0;
; 1929 : 	if (!voice[a0].lfo_m) {		//???î¡???

  00006	8b 7d 08	 mov	 edi, DWORD PTR _a0$[ebp]
  00009	8b f7		 mov	 esi, edi
  0000b	c1 e6 04	 shl	 esi, 4
  0000e	2b f7		 sub	 esi, edi
  00010	8b 1c b5 1c 00
	00 00		 mov	 ebx, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+28]
  00017	85 db		 test	 ebx, ebx
  00019	0f 84 c3 00 00
	00		 je	 $LN7@voice_lfo

; 1930 : 		return;
; 1931 : 	}
; 1932 : 	if (!voice[a0].lfo_s) {		//???î¡???

  0001f	83 3c b5 20 00
	00 00 00	 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+32], 0
  00027	0f 84 b5 00 00
	00		 je	 $LN7@voice_lfo

; 1933 : 		return;
; 1934 : 	}
; 1935 : 	if (voice[a0].lfo_h) {			//????î¿?????

  0002d	8b 04 b5 18 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+24]
  00034	85 c0		 test	 eax, eax
  00036	74 0d		 je	 SHORT $LN4@voice_lfo

; 1936 : 		voice[a0].lfo_h--;

  00038	48		 dec	 eax
  00039	5f		 pop	 edi
  0003a	89 04 b5 18 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+24], eax

; 1953 : 	}
; 1954 : }

  00041	5e		 pop	 esi
  00042	5b		 pop	 ebx
  00043	5d		 pop	 ebp
  00044	c3		 ret	 0
$LN4@voice_lfo:

; 1937 : 		return;
; 1938 : 	}
; 1939 : 
; 1940 : 	voice[a0].lfo_s_cnt += voice[a0].lfo_s_ang;		//???????

  00045	8b 04 b5 24 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+36]
  0004c	03 04 b5 28 00
	00 00		 add	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+40]
  00053	89 45 08	 mov	 DWORD PTR tv413[ebp], eax
  00056	89 04 b5 24 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+36], eax

; 1941 : 
; 1942 : //	if(voice[ a0 ].lfo_s_ang >= 0){		//îµ???????
; 1943 : 	if (voice[a0].lfo_s_cnt >= 0) {		//îµ???????

  0005d	8b 04 b5 20 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+32]
  00064	99		 cdq
  00065	8b c8		 mov	 ecx, eax
  00067	8b 04 b5 0c 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+12]
  0006e	33 ca		 xor	 ecx, edx
  00070	2b ca		 sub	 ecx, edx
  00072	83 7d 08 00	 cmp	 DWORD PTR tv413[ebp], 0
  00076	7c 09		 jl	 SHORT $LN5@voice_lfo

; 1944 : 		d0 = detune_tbl[voice[a0].note_no] * voice[a0].lfo_m / 128 * voice[a0].lfo_s_cnt / abs(voice[a0].lfo_s);

  00078	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?detune_tbl@@3PAHA[eax*4]

; 1945 : 	}

  0007f	eb 07		 jmp	 SHORT $LN9@voice_lfo
$LN5@voice_lfo:

; 1946 : 	else {
; 1947 : 		d0 = detune_tbl[voice[a0].note_no - 1] * voice[a0].lfo_m / 128 * voice[a0].lfo_s_cnt / abs(voice[a0].lfo_s);

  00081	8b 04 85 fc ff
	ff ff		 mov	 eax, DWORD PTR ?detune_tbl@@3PAHA[eax*4-4]
$LN9@voice_lfo:

; 1948 : 	}
; 1949 : 	pDSData[a0]->SetFrequency((DWORD)(voice[a0].freq + d0));			// î«î¦????

  00088	0f af c3	 imul	 eax, ebx
  0008b	99		 cdq
  0008c	83 e2 7f	 and	 edx, 127		; 0000007fH
  0008f	03 c2		 add	 eax, edx
  00091	c1 f8 07	 sar	 eax, 7
  00094	0f af 45 08	 imul	 eax, DWORD PTR tv413[ebp]
  00098	99		 cdq
  00099	f7 f9		 idiv	 ecx
  0009b	8b 0c bd 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[edi*4]
  000a2	8b d8		 mov	 ebx, eax
  000a4	8b 04 b5 38 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+56]
  000ab	03 c3		 add	 eax, ebx
  000ad	50		 push	 eax
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	51		 push	 ecx
  000b1	ff 52 44	 call	 DWORD PTR [edx+68]

; 1950 : 
; 1951 : 	if (abs(voice[a0].lfo_s_cnt) == abs(voice[a0].lfo_s)) {		//î?î???

  000b4	8b 04 b5 24 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+36]
  000bb	99		 cdq
  000bc	8b c8		 mov	 ecx, eax
  000be	8b 04 b5 20 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+32]
  000c5	33 ca		 xor	 ecx, edx
  000c7	2b ca		 sub	 ecx, edx
  000c9	99		 cdq
  000ca	33 c2		 xor	 eax, edx
  000cc	2b c2		 sub	 eax, edx
  000ce	3b c8		 cmp	 ecx, eax
  000d0	75 10		 jne	 SHORT $LN7@voice_lfo

; 1952 : 		voice[a0].lfo_s_ang *= -1;

  000d2	8b 04 b5 28 00
	00 00		 mov	 eax, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+40]
  000d9	f7 d8		 neg	 eax
  000db	89 04 b5 28 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[esi*4+40], eax
$LN7@voice_lfo:

; 1953 : 	}
; 1954 : }

  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi
  000e4	5b		 pop	 ebx
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
?voice_lfo@@YAXH@Z ENDP					; voice_lfo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_start@@YAXXZ
_TEXT	SEGMENT
?play_start@@YAXXZ PROC					; play_start, COMDAT

; 1916 : {

  00000	56		 push	 esi

; 1917 : 	int d7;
; 1918 : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  00001	be 00 00 00 00	 mov	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
$LL4@play_start:

; 1919 : 		pDSData[d7]->Stop();

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	50		 push	 eax
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	ff 51 48	 call	 DWORD PTR [ecx+72]

; 1920 : 		pDSData[d7]->SetCurrentPosition(0);

  0000e	8b 06		 mov	 eax, DWORD PTR [esi]
  00010	6a 00		 push	 0
  00012	50		 push	 eax
  00013	8b 08		 mov	 ecx, DWORD PTR [eax]
  00015	ff 51 34	 call	 DWORD PTR [ecx+52]
  00018	83 c6 04	 add	 esi, 4
  0001b	81 fe 00 01 00
	00		 cmp	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A+256
  00021	7c e3		 jl	 SHORT $LL4@play_start

; 1921 : 	}
; 1922 : 	music_init();		//????????		

  00023	5e		 pop	 esi
  00024	e9 00 00 00 00	 jmp	 ?music_init@@YAXXZ	; music_init
?play_start@@YAXXZ ENDP					; play_start
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_stop@@YAXXZ
_TEXT	SEGMENT
?play_stop@@YAXXZ PROC					; play_stop, COMDAT

; 1902 : {

  00000	56		 push	 esi

; 1903 : 	int d7;
; 1904 : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  00001	be 00 00 00 00	 mov	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
$LL4@play_stop:

; 1905 : 		pDSData[d7]->Stop();

  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	50		 push	 eax
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	ff 51 48	 call	 DWORD PTR [ecx+72]

; 1906 : 		pDSData[d7]->SetCurrentPosition(0);

  0000e	8b 06		 mov	 eax, DWORD PTR [esi]
  00010	6a 00		 push	 0
  00012	50		 push	 eax
  00013	8b 08		 mov	 ecx, DWORD PTR [eax]
  00015	ff 51 34	 call	 DWORD PTR [ecx+52]
  00018	83 c6 04	 add	 esi, 4
  0001b	81 fe 00 01 00
	00		 cmp	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A+256
  00021	7c e3		 jl	 SHORT $LL4@play_stop

; 1907 : 		//		play_flg[ d7 ] = 0;
; 1908 : 	}
; 1909 : 	pause_flg = 1;

  00023	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?pause_flg@@3HA, 1
  0002d	5e		 pop	 esi

; 1910 : }

  0002e	c3		 ret	 0
?play_stop@@YAXXZ ENDP					; play_stop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?music_init@@YAXXZ
_TEXT	SEGMENT
_d6$3$ = -24						; size = 8
tv1444 = -16						; size = 8
tv1443 = -16						; size = 8
tv1442 = -16						; size = 8
_d6$2$ = -8						; size = 8
_d6$1$ = -8						; size = 8
?music_init@@YAXXZ PROC					; music_init, COMDAT

; 1825 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H

; 1826 : 	int d7, d5;
; 1827 : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  00006	b8 04 00 00 00	 mov	 eax, OFFSET ?voice@@3PAUVOICE_EQU@@A+4
  0000b	0f 1f 44 00 00	 npad	 5
$LL4@music_init:

; 1828 : 		voice[d7].name = 0;

  00010	c7 40 fc 00 00
	00 00		 mov	 DWORD PTR [eax-4], 0

; 1829 : 		voice[d7].tone_no = -1;		//???????????îî±?

  00017	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1

; 1830 : 		voice[d7].loop_flg = 0;

  0001d	c7 40 2c 00 00
	00 00		 mov	 DWORD PTR [eax+44], 0
  00024	83 c0 3c	 add	 eax, 60			; 0000003cH
  00027	3d 04 0f 00 00	 cmp	 eax, OFFSET ?voice@@3PAUVOICE_EQU@@A+3844
  0002c	7c e2		 jl	 SHORT $LL4@music_init

; 1831 : 	}
; 1832 : 	for (d7 = 0; d7 < TRACK_MAX; d7++) {

  0002e	0f 57 c0	 xorps	 xmm0, xmm0
  00031	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00036	53		 push	 ebx
  00037	56		 push	 esi
  00038	57		 push	 edi
  00039	83 c8 ff	 or	 eax, -1
  0003c	bf 00 00 00 00	 mov	 edi, OFFSET ?play_use_task@@3PAY07HA
  00041	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA, xmm0
  00048	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+16, xmm0
  0004f	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+32, xmm0
  00056	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+48, xmm0
  0005d	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+64, xmm0
  00064	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+80, xmm0
  0006b	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+96, xmm0
  00072	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_s@@3PAHA+112, xmm0
  00079	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA, xmm0
  00080	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+16, xmm0
  00087	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+32, xmm0
  0008e	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+48, xmm0
  00095	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+64, xmm0
  0009c	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+80, xmm0
  000a3	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+96, xmm0
  000aa	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_m@@3PAHA+112, xmm0
  000b1	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA, xmm0
  000b8	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+16, xmm0
  000bf	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+32, xmm0
  000c6	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+48, xmm0
  000cd	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+64, xmm0
  000d4	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+80, xmm0
  000db	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+96, xmm0
  000e2	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_lfo_h@@3PAHA+112, xmm0
  000e9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA, xmm0
  000f0	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+16, xmm0
  000f7	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+32, xmm0
  000fe	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+48, xmm0
  00105	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+64, xmm0
  0010c	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+80, xmm0
  00113	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+96, xmm0
  0011a	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_detune@@3PAHA+112, xmm0
  00121	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA, xmm0
  00128	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+16, xmm0
  0012f	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+32, xmm0
  00136	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+48, xmm0
  0013d	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+64, xmm0
  00144	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+80, xmm0
  0014b	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+96, xmm0
  00152	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_use_task_cnt@@3PAHA+112, xmm0
  00159	f3 ab		 rep stosd
  0015b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA, xmm0
  00162	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+16, xmm0
  00169	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+32, xmm0
  00170	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+48, xmm0
  00177	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+64, xmm0
  0017e	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+80, xmm0
  00185	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+96, xmm0
  0018c	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?tie_flg@@3PAHA+112, xmm0
  00193	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA, xmm0
  0019a	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+16, xmm0
  001a1	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+32, xmm0
  001a8	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+48, xmm0
  001af	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+64, xmm0
  001b6	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+80, xmm0
  001bd	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+96, xmm0
  001c4	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?dataFrequency@@3PAJA+112, xmm0
  001cb	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA, xmm0
  001d2	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+16, xmm0
  001d9	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+32, xmm0
  001e0	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+48, xmm0
  001e7	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+64, xmm0
  001ee	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+80, xmm0
  001f5	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+96, xmm0
  001fc	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?dataPan@@3PAHA+112, xmm0
  00203	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA, xmm0
  0020a	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+16, xmm0
  00211	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+32, xmm0
  00218	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+48, xmm0
  0021f	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+64, xmm0
  00226	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+80, xmm0
  0022d	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+96, xmm0
  00234	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?dataVolume@@3PAHA+112, xmm0
  0023b	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA, xmm0
  00242	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+16, xmm0

; 1833 : 		step_time[d7] = 0;
; 1834 : 		gate_time[d7] = 0;
; 1835 : 		step_point[d7] = 0;
; 1836 : 		play_flg[d7] = 1;
; 1837 : 		play_kuri_lv[d7] = -1;
; 1838 : 		dataToneNo[d7] = 0;		//????????????îî±?
; 1839 : 		dataVolume[d7] = 0;
; 1840 : 		dataPan[d7] = 0;
; 1841 : 		dataFrequency[d7] = 0;
; 1842 : 		tie_flg[d7] = 0;
; 1843 : 		for (d5 = 0; d5 < 8; d5++)
; 1844 : 			play_use_task[d7][d5] = -1;		//î¸????î±????
; 1845 : 		play_use_task_cnt[d7] = 0;
; 1846 : 		play_detune[d7] = 0;
; 1847 : 		play_lfo_h[d7] = 0;
; 1848 : 		play_lfo_m[d7] = 0;
; 1849 : 		play_lfo_s[d7] = 0;
; 1850 : 	}
; 1851 : 	//??????
; 1852 : 	for (d7 = 0; d7 < MAX_ENV; d7++) {

  00249	b8 08 00 00 00	 mov	 eax, OFFSET ?env_tbl@@3PAUENVIRONMENT_EQU@@A+8
  0024e	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+32, xmm0
  00255	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+48, xmm0
  0025c	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+64, xmm0
  00263	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+80, xmm0
  0026a	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+96, xmm0
  00271	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?dataToneNo@@3PAHA+112, xmm0
  00278	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  0027f	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA, xmm0
  00286	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+16, xmm0
  0028d	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+32, xmm0
  00294	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+48, xmm0
  0029b	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+64, xmm0
  002a2	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+80, xmm0
  002a9	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+96, xmm0
  002b0	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_kuri_lv@@3PAHA+112, xmm0
  002b7	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
  002be	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA, xmm0
  002c5	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+16, xmm0
  002cc	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+32, xmm0
  002d3	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+48, xmm0
  002da	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+64, xmm0
  002e1	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+80, xmm0
  002e8	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+96, xmm0
  002ef	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_flg@@3PAHA+112, xmm0
  002f6	0f 57 c0	 xorps	 xmm0, xmm0
  002f9	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA, xmm0
  00300	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+16, xmm0
  00307	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+32, xmm0
  0030e	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+48, xmm0
  00315	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+64, xmm0
  0031c	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+80, xmm0
  00323	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+96, xmm0
  0032a	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?step_point@@3PAHA+112, xmm0
  00331	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA, xmm0
  00338	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+16, xmm0
  0033f	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+32, xmm0
  00346	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+48, xmm0
  0034d	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+64, xmm0
  00354	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+80, xmm0
  0035b	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+96, xmm0
  00362	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?gate_time@@3PAHA+112, xmm0
  00369	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA, xmm0
  00370	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+16, xmm0
  00377	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+32, xmm0
  0037e	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+48, xmm0
  00385	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+64, xmm0
  0038c	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+80, xmm0
  00393	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+96, xmm0
  0039a	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?step_time@@3PAHA+112, xmm0
  003a1	0f 1f 40 00 66
	66 66 0f 1f 84
	00 00 00 00 00	 npad	 15
$LL13@music_init:

; 1853 : 		env_tbl[d7].voice_address = -1;

  003b0	c7 40 f8 ff ff
	ff ff		 mov	 DWORD PTR [eax-8], -1

; 1854 : 		env_tbl[d7].count = 0;

  003b7	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
  003bd	83 c0 24	 add	 eax, 36			; 00000024H
  003c0	3d d8 02 00 00	 cmp	 eax, OFFSET ?env_tbl@@3PAUENVIRONMENT_EQU@@A+728
  003c5	7c e9		 jl	 SHORT $LL13@music_init

; 1855 : 	}
; 1856 : #define PAN_POINT	5000
; 1857 : 	//???????î
; 1858 : 	int y;
; 1859 : 	double d6;		//?
; 1860 : 	for (d7 = 64, d6 = 127; d6 >= 0; d6--) {

  003c7	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@405fc00000000000
  003cf	bf 00 01 00 00	 mov	 edi, OFFSET ?panpot_tbl@@3PAJA+256
  003d4	f2 0f 10 1d 00
	00 00 00	 movsd	 xmm3, QWORD PTR __real@4059000000000000
  003dc	0f 28 c1	 movaps	 xmm0, xmm1
  003df	f2 0f 11 4d e8	 movsd	 QWORD PTR _d6$3$[ebp], xmm1
  003e4	bb 10 27 00 00	 mov	 ebx, 10000		; 00002710H
  003e9	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  003f1	0f 57 d2	 xorps	 xmm2, xmm2
  003f4	f2 0f 11 45 f8	 movsd	 QWORD PTR _d6$1$[ebp], xmm0
  003f9	0f 1f 80 00 00
	00 00		 npad	 7
$LL16@music_init:

; 1861 : 		if (!((int)d6 & 1))

  00400	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00404	a8 01		 test	 al, 1
  00406	74 74		 je	 SHORT $LN14@music_init

; 1862 : 			continue;
; 1863 : 		y = (int)(LOG(100, 127) * PAN_POINT) - (int)(LOG(100, d6) * PAN_POINT);

  00408	0f 28 c3	 movaps	 xmm0, xmm3
  0040b	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00410	f2 0f 11 45 f0	 movsd	 QWORD PTR tv1444[ebp], xmm0
  00415	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _d6$1$[ebp]
  0041a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0041e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00421	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00426	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1444[ebp]
  0042b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40b3880000000000
  00433	f2 0f 2c f0	 cvttsd2si esi, xmm0
  00437	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405fc00000000000
  0043f	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  00444	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1444[ebp]

; 1864 : 		if (y > PAN_POINT)
; 1865 : 			y = 10000;
; 1866 : 		panpot_tbl[d7++] = y;

  00449	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  00451	0f 57 d2	 xorps	 xmm2, xmm2
  00454	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40b3880000000000
  0045c	f2 0f 10 1d 00
	00 00 00	 movsd	 xmm3, QWORD PTR __real@4059000000000000
  00464	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00468	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _d6$1$[ebp]
  0046d	2b c6		 sub	 eax, esi
  0046f	3d 88 13 00 00	 cmp	 eax, 5000		; 00001388H
  00474	0f 4f c3	 cmovg	 eax, ebx
  00477	89 07		 mov	 DWORD PTR [edi], eax
  00479	83 c7 04	 add	 edi, 4
$LN14@music_init:

; 1855 : 	}
; 1856 : #define PAN_POINT	5000
; 1857 : 	//???????î
; 1858 : 	int y;
; 1859 : 	double d6;		//?
; 1860 : 	for (d7 = 64, d6 = 127; d6 >= 0; d6--) {

  0047c	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00480	66 0f 2f c2	 comisd	 xmm0, xmm2
  00484	f2 0f 11 45 f8	 movsd	 QWORD PTR _d6$1$[ebp], xmm0
  00489	0f 83 71 ff ff
	ff		 jae	 $LL16@music_init

; 1867 : 	}
; 1868 : 	for (d7 = 64, d6 = 127; d6 >= 0; d6--) {

  0048f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405fc00000000000
  00497	bf 00 01 00 00	 mov	 edi, OFFSET ?panpot_tbl@@3PAJA+256
  0049c	f2 0f 11 45 f8	 movsd	 QWORD PTR _d6$2$[ebp], xmm0
$LL19@music_init:

; 1869 : 		if (!((int)d6 & 1))

  004a1	f2 0f 2c c0	 cvttsd2si eax, xmm0
  004a5	a8 01		 test	 al, 1
  004a7	74 6e		 je	 SHORT $LN17@music_init

; 1870 : 			continue;
; 1871 : 		y = (int)(LOG(100, 127) * PAN_POINT) - (int)(LOG(100, d6) * PAN_POINT);

  004a9	0f 28 c3	 movaps	 xmm0, xmm3
  004ac	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  004b1	f2 0f 11 45 f0	 movsd	 QWORD PTR tv1443[ebp], xmm0
  004b6	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _d6$2$[ebp]
  004bb	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  004bf	0f 5a c0	 cvtps2pd xmm0, xmm0
  004c2	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  004c7	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1443[ebp]
  004cc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40b3880000000000
  004d4	f2 0f 2c f0	 cvttsd2si esi, xmm0
  004d8	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405fc00000000000
  004e0	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  004e5	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1443[ebp]

; 1872 : 		if (y > PAN_POINT)
; 1873 : 			y = 10000;
; 1874 : 		panpot_tbl[d7--] = -y;

  004ea	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3ff0000000000000
  004f2	0f 57 d2	 xorps	 xmm2, xmm2
  004f5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40b3880000000000
  004fd	f2 0f 2c c0	 cvttsd2si eax, xmm0
  00501	f2 0f 10 45 f8	 movsd	 xmm0, QWORD PTR _d6$2$[ebp]
  00506	2b c6		 sub	 eax, esi
  00508	3d 88 13 00 00	 cmp	 eax, 5000		; 00001388H
  0050d	0f 4f c3	 cmovg	 eax, ebx
  00510	f7 d8		 neg	 eax
  00512	89 07		 mov	 DWORD PTR [edi], eax
  00514	83 ef 04	 sub	 edi, 4
$LN17@music_init:

; 1867 : 	}
; 1868 : 	for (d7 = 64, d6 = 127; d6 >= 0; d6--) {

  00517	f2 0f 10 1d 00
	00 00 00	 movsd	 xmm3, QWORD PTR __real@4059000000000000
  0051f	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00523	66 0f 2f c2	 comisd	 xmm0, xmm2
  00527	f2 0f 11 45 f8	 movsd	 QWORD PTR _d6$2$[ebp], xmm0
  0052c	0f 83 6f ff ff
	ff		 jae	 $LL19@music_init

; 1875 : 	}
; 1876 : 	d6 = panpot_tbl[0] = -10000;
; 1877 : 	d6 = panpot_tbl[127] = 10000;
; 1878 : 	//??????????î
; 1879 : 	for (d6 = 127; d6 >= 0; d6--) {
; 1880 : 		y = (int)(LOG(100, 127) * 10000) - (int)(LOG(100, d6) * 10000);

  00532	0f 28 c3	 movaps	 xmm0, xmm3
  00535	c7 05 00 00 00
	00 f0 d8 ff ff	 mov	 DWORD PTR ?panpot_tbl@@3PAJA, -10000 ; ffffd8f0H
  0053f	89 1d fc 01 00
	00		 mov	 DWORD PTR ?panpot_tbl@@3PAJA+508, ebx
  00545	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  0054a	f2 0f 11 45 f0	 movsd	 QWORD PTR tv1442[ebp], xmm0
  0054f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405fc00000000000
  00557	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  0055c	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1442[ebp]
  00561	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40c3880000000000
  00569	f2 0f 2c f0	 cvttsd2si esi, xmm0
  0056d	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@405fc00000000000
  00575	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL22@music_init:
  00580	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00584	0f 5a c0	 cvtps2pd xmm0, xmm0
  00587	e8 00 00 00 00	 call	 __libm_sse2_log_precise
  0058c	f2 0f 5e 45 f0	 divsd	 xmm0, QWORD PTR tv1442[ebp]
  00591	8b ce		 mov	 ecx, esi
  00593	0f 57 c9	 xorps	 xmm1, xmm1
  00596	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@40c3880000000000
  0059e	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 1881 : 		if (y > 10000)
; 1882 : 			y = 10000;
; 1883 : 		volume_tbl[(int)d6] = -y;

  005a2	f2 0f 10 45 e8	 movsd	 xmm0, QWORD PTR _d6$3$[ebp]
  005a7	2b c8		 sub	 ecx, eax
  005a9	f2 0f 2c c0	 cvttsd2si eax, xmm0
  005ad	3b cb		 cmp	 ecx, ebx
  005af	0f 4f cb	 cmovg	 ecx, ebx
  005b2	f7 d9		 neg	 ecx
  005b4	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  005bc	89 0c 85 00 00
	00 00		 mov	 DWORD PTR ?volume_tbl@@3PAJA[eax*4], ecx
  005c3	66 0f 2f c1	 comisd	 xmm0, xmm1
  005c7	f2 0f 11 45 e8	 movsd	 QWORD PTR _d6$3$[ebp], xmm0
  005cc	73 b2		 jae	 SHORT $LL22@music_init

; 1884 : 	}
; 1885 : 	//CCFIX
; 1886 : 	//volume_tbl[0]çå¼æé®é¢
; 1887 : 	//æå·¥ä¿®å°-10000
; 1888 : 	volume_tbl[0] = -10000;

  005ce	5f		 pop	 edi
  005cf	5e		 pop	 esi
  005d0	c7 05 00 00 00
	00 f0 d8 ff ff	 mov	 DWORD PTR ?volume_tbl@@3PAJA, -10000 ; ffffd8f0H
  005da	33 c0		 xor	 eax, eax
  005dc	5b		 pop	 ebx
  005dd	0f 1f 00	 npad	 3
$LL25@music_init:

; 1892 : 		detune_tbl[d7] = freq_tbl[d7 + 1] - freq_tbl[d7];

  005e0	0f 10 04 85 00
	00 00 00	 movups	 xmm0, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4]
  005e8	0f 10 0c 85 04
	00 00 00	 movups	 xmm1, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+4]
  005f0	66 0f fa c8	 psubd	 xmm1, xmm0
  005f4	0f 10 04 85 10
	00 00 00	 movups	 xmm0, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+16]
  005fc	0f 11 0c 85 00
	00 00 00	 movups	 XMMWORD PTR ?detune_tbl@@3PAHA[eax*4], xmm1
  00604	0f 10 0c 85 14
	00 00 00	 movups	 xmm1, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+20]
  0060c	66 0f fa c8	 psubd	 xmm1, xmm0
  00610	0f 10 04 85 20
	00 00 00	 movups	 xmm0, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+32]
  00618	0f 11 0c 85 10
	00 00 00	 movups	 XMMWORD PTR ?detune_tbl@@3PAHA[eax*4+16], xmm1
  00620	0f 10 0c 85 24
	00 00 00	 movups	 xmm1, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+36]
  00628	66 0f fa c8	 psubd	 xmm1, xmm0
  0062c	0f 10 04 85 30
	00 00 00	 movups	 xmm0, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+48]
  00634	0f 11 0c 85 20
	00 00 00	 movups	 XMMWORD PTR ?detune_tbl@@3PAHA[eax*4+32], xmm1
  0063c	0f 10 0c 85 34
	00 00 00	 movups	 xmm1, XMMWORD PTR ?freq_tbl@@3PAHA[eax*4+52]
  00644	66 0f fa c8	 psubd	 xmm1, xmm0
  00648	0f 11 0c 85 30
	00 00 00	 movups	 XMMWORD PTR ?detune_tbl@@3PAHA[eax*4+48], xmm1
  00650	83 c0 10	 add	 eax, 16			; 00000010H
  00653	83 f8 40	 cmp	 eax, 64			; 00000040H
  00656	7c 88		 jl	 SHORT $LL25@music_init

; 1889 : 
; 1890 : 	//??????????î
; 1891 : 	for (d7 = 0; d7 < 12 * 5 + 5; d7++)

  00658	83 f8 41	 cmp	 eax, 65			; 00000041H
  0065b	7d 24		 jge	 SHORT $LN24@music_init
  0065d	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
$LL50@music_init:

; 1892 : 		detune_tbl[d7] = freq_tbl[d7 + 1] - freq_tbl[d7];

  00664	8b 81 04 00 00
	00		 mov	 eax, DWORD PTR ?freq_tbl@@3PAHA[ecx+4]
  0066a	2b 81 00 00 00
	00		 sub	 eax, DWORD PTR ?freq_tbl@@3PAHA[ecx]
  00670	89 81 00 00 00
	00		 mov	 DWORD PTR ?detune_tbl@@3PAHA[ecx], eax
  00676	83 c1 04	 add	 ecx, 4
  00679	81 f9 04 01 00
	00		 cmp	 ecx, 260		; 00000104H
  0067f	7c e3		 jl	 SHORT $LL50@music_init
$LN24@music_init:

; 1893 : 
; 1894 : 	//	play_bgm( 2);
; 1895 : 
; 1896 : }

  00681	8b e5		 mov	 esp, ebp
  00683	5d		 pop	 ebp
  00684	c3		 ret	 0
?music_init@@YAXXZ ENDP					; music_init
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?music_read@@YAHXZ
_TEXT	SEGMENT
__real@c003880000000000$1$ = -3176			; size = 8
_o_tempo$1$ = -3164					; size = 4
_err_line$1$ = -3160					; size = 4
_ch$1$ = -3156						; size = 4
tv2929 = -3152						; size = 4
tv2866 = -3152						; size = 4
$T1 = -3148						; size = 4
_d0$15$ = -3148						; size = 4
tv2835 = -3148						; size = 4
$T2 = -3144						; size = 4
_octave$1$ = -3144					; size = 4
_d0$23$ = -3144						; size = 4
tv2988 = -3144						; size = 4
tv2986 = -3144						; size = 4
$T3 = -3140						; size = 4
_d0$37$ = -3136						; size = 4
_d0$35$ = -3136						; size = 4
_d0$32$ = -3136						; size = 4
_d0$30$ = -3136						; size = 4
_d0$19$ = -3136						; size = 4
tv2994 = -3136						; size = 4
tv2980 = -3136						; size = 4
tv2976 = -3136						; size = 4
tv2879 = -3136						; size = 4
tv2757 = -3136						; size = 4
tv1343 = -3136						; size = 4
_d1$2$ = -3132						; size = 4
_waon_cnt$1$ = -3132					; size = 4
tv2993 = -3132						; size = 4
tv2983 = -3132						; size = 4
tv2973 = -3132						; size = 4
tv2972 = -3132						; size = 4
tv2971 = -3132						; size = 4
tv2892 = -3132						; size = 4
tv2736 = -3132						; size = 4
_ch_ret$ = -3128					; size = 1024
_ch_skip$ = -2104					; size = 1024
_waon_note$4 = -1076					; size = 36
_do_p$ = -1040						; size = 128
_waon_delay$ = -912					; size = 128
_q_com$ = -784						; size = 128
_ch_kuri_lv$ = -656					; size = 128
_ch_oct$ = -528						; size = 128
_ch_p$ = -400						; size = 128
_moji$ = -264						; size = 256
__$ArrayPad$ = -4					; size = 4
?music_read@@YAHXZ PROC					; music_read, COMDAT

; 1091 : {

  00000	53		 push	 ebx
  00001	8b dc		 mov	 ebx, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	83 e4 f0	 and	 esp, -16		; fffffff0H
  00009	83 c4 04	 add	 esp, 4
  0000c	55		 push	 ebp
  0000d	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  00010	89 6c 24 04	 mov	 DWORD PTR [esp+4], ebp
  00014	8b ec		 mov	 ebp, esp
  00016	81 ec 68 0c 00
	00		 sub	 esp, 3176		; 00000c68H
  0001c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00021	33 c5		 xor	 eax, ebp
  00023	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00026	56		 push	 esi
  00027	57		 push	 edi

; 1092 : 	int d0, d1, d7, ch, ch_p[TRACK_MAX], do_p[TRACK_MAX], ch_oct[TRACK_MAX], err_flg = -1, err_line = 0;
; 1093 : 	int ch_ret[8][TRACK_MAX], ch_skip[8][TRACK_MAX], ch_kuri_lv[TRACK_MAX], waon_delay[TRACK_MAX];
; 1094 : 	int o_tempo, q_com[TRACK_MAX];
; 1095 : 	long d6;
; 1096 : 	char moji[256];
; 1097 : 	FILE* fp;
; 1098 : 	fp = fopen("oft.mml", "r");

  00028	68 00 00 00 00	 push	 OFFSET ??_C@_01KDCPPGHE@r@
  0002d	68 00 00 00 00	 push	 OFFSET ??_C@_07NFDJGGOK@oft?4mml@
  00032	e8 00 00 00 00	 call	 _fopen
  00037	8b f0		 mov	 esi, eax
  00039	83 c4 08	 add	 esp, 8
  0003c	89 b5 bc f3 ff
	ff		 mov	 DWORD PTR $T3[ebp], esi

; 1099 : 	if (fp == NULL) {

  00042	85 f6		 test	 esi, esi
  00044	75 30		 jne	 SHORT $LN40@music_read

; 1100 : 		sprintf(moji, "%s", err_msg[0]);

  00046	ff 35 00 00 00
	00		 push	 DWORD PTR ?err_msg@@3PAPADA
  0004c	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  00052	68 00 00 00 00	 push	 OFFSET ??_C@_02DKCKIIND@?$CFs@
  00057	50		 push	 eax
  00058	e8 00 00 00 00	 call	 _sprintf
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1101 : #ifdef  _STONDEBUG_
; 1102 : 		MessageBox(hWnd, moji, "Error", MB_OK);
; 1103 : #endif
; 1104 : 		return err_flg;

  00060	83 c8 ff	 or	 eax, -1

; 1812 : #ifdef  _STONDEBUG_
; 1813 : 				MessageBox(hWnd, moji, "Error", MB_OK);
; 1814 : #endif
; 1815 : 				break;
; 1816 : 			}
; 1817 : 		}
; 1818 : 	}
; 1819 : 	return err_flg;
; 1820 : }

  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00068	33 cd		 xor	 ecx, ebp
  0006a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006f	8b e5		 mov	 esp, ebp
  00071	5d		 pop	 ebp
  00072	8b e3		 mov	 esp, ebx
  00074	5b		 pop	 ebx
  00075	c3		 ret	 0
$LN40@music_read:
  00076	0f 57 c0	 xorps	 xmm0, xmm0

; 1105 : 	}
; 1106 : 
; 1107 : 	for (d7 = 0; d7 < TRACK_MAX; d7++) {

  00079	33 c0		 xor	 eax, eax
  0007b	0f 29 85 70 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp], xmm0
  00082	0f 29 85 80 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+16], xmm0
  00089	0f 29 85 90 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+32], xmm0
  00090	0f 29 85 a0 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+48], xmm0
  00097	0f 29 85 b0 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+64], xmm0
  0009e	0f 29 85 c0 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+80], xmm0
  000a5	0f 29 85 d0 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+96], xmm0
  000ac	0f 29 85 e0 fc
	ff ff		 movaps	 XMMWORD PTR _waon_delay$[ebp+112], xmm0
  000b3	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000008000000080000000800000008
  000ba	0f 29 85 f0 fc
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp], xmm0
  000c1	0f 29 85 00 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+16], xmm0
  000c8	0f 29 85 10 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+32], xmm0
  000cf	0f 29 85 20 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+48], xmm0
  000d6	0f 29 85 30 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+64], xmm0
  000dd	0f 29 85 40 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+80], xmm0
  000e4	0f 29 85 50 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+96], xmm0
  000eb	0f 29 85 60 fd
	ff ff		 movaps	 XMMWORD PTR _q_com$[ebp+112], xmm0
  000f2	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
  000f9	0f 29 85 70 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp], xmm0
  00100	0f 29 85 80 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+16], xmm0
  00107	0f 29 85 90 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+32], xmm0
  0010e	0f 29 85 a0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+48], xmm0
  00115	0f 29 85 b0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+64], xmm0
  0011c	0f 29 85 c0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+80], xmm0
  00123	0f 29 85 d0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+96], xmm0
  0012a	0f 29 85 e0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_kuri_lv$[ebp+112], xmm0
  00131	0f 57 c0	 xorps	 xmm0, xmm0
  00134	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA, xmm0
  0013b	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+16, xmm0
  00142	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+32, xmm0
  00149	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+48, xmm0
  00150	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+64, xmm0
  00157	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+80, xmm0
  0015e	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+96, xmm0
  00165	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+112, xmm0
  0016c	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000030000000300000003000000030
  00173	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA, xmm0
  0017a	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+16, xmm0
  00181	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+32, xmm0
  00188	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+48, xmm0
  0018f	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+64, xmm0
  00196	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+80, xmm0
  0019d	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+96, xmm0
  001a4	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?step_def@@3PAHA+112, xmm0
  001ab	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000004000000040000000400000004
  001b2	0f 29 85 f0 fd
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp], xmm0
  001b9	0f 29 85 00 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+16], xmm0
  001c0	0f 29 85 10 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+32], xmm0
  001c7	0f 29 85 20 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+48], xmm0
  001ce	0f 29 85 30 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+64], xmm0
  001d5	0f 29 85 40 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+80], xmm0
  001dc	0f 29 85 50 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+96], xmm0
  001e3	0f 29 85 60 fe
	ff ff		 movaps	 XMMWORD PTR _ch_oct$[ebp+112], xmm0
  001ea	0f 57 c0	 xorps	 xmm0, xmm0
  001ed	0f 29 85 f0 fb
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp], xmm0
  001f4	0f 29 85 00 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+16], xmm0
  001fb	0f 29 85 10 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+32], xmm0
  00202	0f 29 85 20 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+48], xmm0
  00209	0f 29 85 30 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+64], xmm0
  00210	0f 29 85 40 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+80], xmm0
  00217	0f 29 85 50 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+96], xmm0
  0021e	0f 29 85 60 fc
	ff ff		 movaps	 XMMWORD PTR _do_p$[ebp+112], xmm0
  00225	0f 29 85 70 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp], xmm0
  0022c	0f 29 85 80 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+16], xmm0
  00233	0f 29 85 90 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+32], xmm0
  0023a	0f 29 85 a0 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+48], xmm0
  00241	0f 29 85 b0 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+64], xmm0
  00248	0f 29 85 c0 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+80], xmm0
  0024f	0f 29 85 d0 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+96], xmm0
  00256	0f 29 85 e0 fe
	ff ff		 movaps	 XMMWORD PTR _ch_p$[ebp+112], xmm0
  0025d	0f 1f 00	 npad	 3
$LL4@music_read:

; 1108 : 		ch_p[d7] = 0;
; 1109 : 		do_p[d7] = 0;
; 1110 : 		ch_oct[d7] = 4;
; 1111 : 		step_def[d7] = 48;
; 1112 : 		play_track_flg[d7] = 0;
; 1113 : 		ch_kuri_lv[d7] = -1;
; 1114 : 		for (d6 = 0; d6 < 8; d6++)
; 1115 : 			ch_skip[d6][d7] = -1;

  00260	c7 84 05 c8 f7
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax], -1
  0026b	c7 84 05 48 f8
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+128], -1
  00276	c7 84 05 c8 f8
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+256], -1
  00281	c7 84 05 48 f9
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+384], -1
  0028c	c7 84 05 c8 f9
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+512], -1
  00297	c7 84 05 48 fa
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+640], -1
  002a2	c7 84 05 c8 fa
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+768], -1
  002ad	c7 84 05 48 fb
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+eax+896], -1
  002b8	83 c0 04	 add	 eax, 4
  002bb	3d 80 00 00 00	 cmp	 eax, 128		; 00000080H
  002c0	7c 9e		 jl	 SHORT $LL4@music_read

; 1116 : 		q_com[d7] = 8;
; 1117 : 		waon_delay[d7] = 0;
; 1118 : 	}
; 1119 : 	o_tempo = 0;

  002c2	33 c0		 xor	 eax, eax

; 1120 : 
; 1121 : 	//??????????  ?î¶?î¿  ??????????
; 1122 : 
; 1123 : 	while (1) {
; 1124 : 
; 1125 : 		//??????????  ????î±?îî  ??????????
; 1126 : 
; 1127 : 		err_line++;

  002c4	bf 01 00 00 00	 mov	 edi, 1

; 1128 : 
; 1129 : 		if ((d0 = f_get(fp)) == EOF)		//????î±?î?î?

  002c9	56		 push	 esi
  002ca	89 85 a4 f3 ff
	ff		 mov	 DWORD PTR _o_tempo$1$[ebp], eax
  002d0	89 bd a8 f3 ff
	ff		 mov	 DWORD PTR _err_line$1$[ebp], edi
  002d6	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  002db	83 c4 04	 add	 esp, 4
  002de	83 f8 ff	 cmp	 eax, -1
  002e1	0f 84 5c 10 00
	00		 je	 $LN459@music_read
  002e7	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@c003880000000000
  002ef	f2 0f 11 85 98
	f3 ff ff	 movsd	 QWORD PTR __real@c003880000000000$1$[ebp], xmm0
$LL8@music_read:

; 1130 : 			break;		//?????î·î ?
; 1131 : 		if (d0 == '\n')		//???

  002f7	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  002fa	0f 84 2a 10 00
	00		 je	 $LN361@music_read

; 1132 : 			continue;			//??????î?
; 1133 : 		if (d0 == '/') {		//?????

  00300	83 f8 2f	 cmp	 eax, 47			; 0000002fH
  00303	75 2e		 jne	 SHORT $LN43@music_read

; 1134 : 			while (1) {			//????????
; 1135 : 				d0 = f_get(fp);

  00305	56		 push	 esi
  00306	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0030b	83 c4 04	 add	 esp, 4

; 1136 : 				if (d0 == '\n' || d0 == EOF)

  0030e	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  00311	0f 84 13 10 00
	00		 je	 $LN361@music_read
$LL10@music_read:
  00317	83 f8 ff	 cmp	 eax, -1
  0031a	0f 84 0a 10 00
	00		 je	 $LN361@music_read

; 1134 : 			while (1) {			//????????
; 1135 : 				d0 = f_get(fp);

  00320	56		 push	 esi
  00321	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00326	83 c4 04	 add	 esp, 4

; 1136 : 				if (d0 == '\n' || d0 == EOF)

  00329	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0032c	75 e9		 jne	 SHORT $LL10@music_read

; 1137 : 					break;
; 1138 : 			}
; 1139 : 			continue;			//??????î?

  0032e	e9 f7 0f 00 00	 jmp	 $LN361@music_read
$LN43@music_read:

; 1140 : 		}
; 1141 : 		if (d0 != '(') {		//?????î¿?

  00333	83 f8 28	 cmp	 eax, 40			; 00000028H
  00336	0f 85 f6 10 00
	00		 jne	 $LN363@music_read

; 1142 : 			err_flg = M_TRACK_ERR;
; 1143 : 			goto music_read_999;
; 1144 : 		}
; 1145 : 		if ((d0 = f_get(fp)) == EOF)		//????î±?î?î?

  0033c	56		 push	 esi
  0033d	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00342	83 c4 04	 add	 esp, 4
  00345	83 f8 ff	 cmp	 eax, -1
  00348	0f 84 f5 0f 00
	00		 je	 $LN459@music_read

; 1146 : 			break;		//?????î·î ?
; 1147 : 		if (d0 == 'p') {		//?î????îî?

  0034e	83 f8 70	 cmp	 eax, 112		; 00000070H
  00351	0f 85 b6 00 00
	00		 jne	 $LN49@music_read

; 1148 : 			if ((d0 = f_get(fp)) == EOF) {		//î»?????î?

  00357	56		 push	 esi
  00358	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0035d	83 c4 04	 add	 esp, 4
  00360	83 f8 ff	 cmp	 eax, -1
  00363	0f 84 34 10 00
	00		 je	 $LN365@music_read

; 1149 : 				err_flg = M_PLAY_ERR;
; 1150 : 				goto music_read_999;
; 1151 : 
; 1152 : 			}
; 1153 : 			if (d0 == ')') {		//??

  00369	83 f8 29	 cmp	 eax, 41			; 00000029H
  0036c	75 06		 jne	 SHORT $LN52@music_read
$LN312@music_read:

; 1120 : 
; 1121 : 	//??????????  ?î¶?î¿  ??????????
; 1122 : 
; 1123 : 	while (1) {
; 1124 : 
; 1125 : 		//??????????  ????î±?îî  ??????????
; 1126 : 
; 1127 : 		err_line++;

  0036e	4f		 dec	 edi
  0036f	e9 b6 0f 00 00	 jmp	 $LN361@music_read
$LN52@music_read:

; 1154 : 				err_line--;		//??î·??????????
; 1155 : 				continue;
; 1156 : 			}
; 1157 : 
; 1158 : 			fseek(fp, -1, SEEK_CUR);		//??????

  00374	6a 01		 push	 1
  00376	6a ff		 push	 -1
  00378	56		 push	 esi
  00379	e8 00 00 00 00	 call	 _fseek
  0037e	0f 57 c0	 xorps	 xmm0, xmm0
  00381	83 c4 0c	 add	 esp, 12			; 0000000cH
  00384	0f 11 05 00 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA, xmm0
  0038b	0f 11 05 10 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+16, xmm0
  00392	0f 11 05 20 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+32, xmm0
  00399	0f 11 05 30 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+48, xmm0
  003a0	0f 11 05 40 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+64, xmm0
  003a7	0f 11 05 50 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+80, xmm0
  003ae	0f 11 05 60 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+96, xmm0
  003b5	0f 11 05 70 00
	00 00		 movups	 XMMWORD PTR ?play_track_flg@@3PAHA+112, xmm0
  003bc	0f 1f 40 00	 npad	 4
$LL15@music_read:

; 1159 : 			for (d7 = 0; d7 < TRACK_MAX; d7++)		//?î???????
; 1160 : 				play_track_flg[d7] = 0;	//
; 1161 : 
; 1162 : 			while (1) {
; 1163 : 				if ((d0 = fgetc(fp)) == EOF) {		//î·??

  003c0	56		 push	 esi
  003c1	e8 00 00 00 00	 call	 _fgetc
  003c6	83 c4 04	 add	 esp, 4
  003c9	83 f8 ff	 cmp	 eax, -1
  003cc	0f 84 cb 0f 00
	00		 je	 $LN365@music_read

; 1164 : 					err_flg = M_PLAY_ERR;
; 1165 : 					goto music_read_999;
; 1166 : 				}
; 1167 : 				if (d0 == ')')			//??

  003d2	83 f8 29	 cmp	 eax, 41			; 00000029H
  003d5	74 97		 je	 SHORT $LN312@music_read

; 1168 : 					break;
; 1169 : 
; 1170 : 				if (d0 >= '0' && d0 <= '9') {		//???

  003d7	83 c0 d0	 add	 eax, -48		; ffffffd0H
  003da	83 f8 09	 cmp	 eax, 9
  003dd	77 e1		 ja	 SHORT $LL15@music_read

; 1171 : 					fseek(fp, -1, SEEK_CUR);		//??????

  003df	6a 01		 push	 1
  003e1	6a ff		 push	 -1
  003e3	56		 push	 esi
  003e4	e8 00 00 00 00	 call	 _fseek

; 1172 : 					d0 = get_num(fp);

  003e9	56		 push	 esi
  003ea	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  003ef	8b c8		 mov	 ecx, eax
  003f1	83 c4 10	 add	 esp, 16			; 00000010H

; 1173 : 					if (d0 < 1 || d0 > TRACK_MAX) {

  003f4	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  003f7	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  003fa	0f 87 9d 0f 00
	00		 ja	 $LN365@music_read

; 1174 : 						err_flg = M_PLAY_ERR;
; 1175 : 						goto music_read_999;
; 1176 : 					}
; 1177 : 					play_track_flg[d0 - 1] = 1;	//?î???????

  00400	c7 04 8d fc ff
	ff ff 01 00 00
	00		 mov	 DWORD PTR ?play_track_flg@@3PAHA[ecx*4-4], 1

; 1178 : 				}
; 1179 : 			}

  0040b	eb b3		 jmp	 SHORT $LL15@music_read
$LN49@music_read:

; 1180 : 			err_line--;		//??î·??????????
; 1181 : 			continue;
; 1182 : 		}
; 1183 : 
; 1184 : 		if (d0 == 's') {		//????????îî?

  0040d	83 f8 73	 cmp	 eax, 115		; 00000073H
  00410	75 51		 jne	 SHORT $LN60@music_read
$LL17@music_read:

; 1185 : 			while (1) {
; 1186 : 				if ((d0 = fgetc(fp)) == EOF) {		//î·??

  00412	56		 push	 esi
  00413	e8 00 00 00 00	 call	 _fgetc
  00418	83 c4 04	 add	 esp, 4
  0041b	83 f8 ff	 cmp	 eax, -1
  0041e	0f 84 83 0f 00
	00		 je	 $LN314@music_read

; 1187 : 					err_flg = M_MUTE_ERR;
; 1188 : 					goto music_read_999;
; 1189 : 				}
; 1190 : 				if (d0 == ')')			//??

  00424	83 f8 29	 cmp	 eax, 41			; 00000029H
  00427	0f 84 41 ff ff
	ff		 je	 $LN312@music_read

; 1191 : 					break;
; 1192 : 
; 1193 : 				if (d0 >= '0' && d0 <= '9') {		//???

  0042d	83 c0 d0	 add	 eax, -48		; ffffffd0H
  00430	83 f8 09	 cmp	 eax, 9
  00433	77 dd		 ja	 SHORT $LL17@music_read

; 1194 : 					fseek(fp, -1, SEEK_CUR);		//??????

  00435	6a 01		 push	 1
  00437	6a ff		 push	 -1
  00439	56		 push	 esi
  0043a	e8 00 00 00 00	 call	 _fseek

; 1195 : 					d0 = get_num(fp);

  0043f	56		 push	 esi
  00440	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00445	8b c8		 mov	 ecx, eax
  00447	83 c4 10	 add	 esp, 16			; 00000010H

; 1196 : 					if (d0 < 1 || d0 > TRACK_MAX) {

  0044a	8d 41 ff	 lea	 eax, DWORD PTR [ecx-1]
  0044d	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  00450	0f 87 51 0f 00
	00		 ja	 $LN314@music_read

; 1197 : 						err_flg = M_MUTE_ERR;
; 1198 : 						goto music_read_999;
; 1199 : 					}
; 1200 : 					play_track_flg[d0 - 1] = 0;	//???????????

  00456	c7 04 8d fc ff
	ff ff 00 00 00
	00		 mov	 DWORD PTR ?play_track_flg@@3PAHA[ecx*4-4], 0

; 1201 : 				}
; 1202 : 			}

  00461	eb af		 jmp	 SHORT $LL17@music_read
$LN60@music_read:

; 1203 : 			err_line--;		//??î·??????????
; 1204 : 			continue;
; 1205 : 		}
; 1206 : 
; 1207 : 		if (d0 == 'o') {		//???îî?

  00463	83 f8 6f	 cmp	 eax, 111		; 0000006fH
  00466	75 3e		 jne	 SHORT $LN68@music_read

; 1208 : 			if (!num_check(fp)) {		//???????

  00468	56		 push	 esi
  00469	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  0046e	83 c4 04	 add	 esp, 4
  00471	85 c0		 test	 eax, eax
  00473	0f 84 38 0f 00
	00		 je	 $LN366@music_read

; 1209 : 				err_flg = M_TOCOMMAND_ERR;
; 1210 : 				goto music_read_999;
; 1211 : 			}
; 1212 : 			o_tempo = get_num(fp);		//???î?î?

  00479	56		 push	 esi
  0047a	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num

; 1213 : 			if ((d0 = fgetc(fp)) == EOF) {		//î·??

  0047f	56		 push	 esi
  00480	89 85 a4 f3 ff
	ff		 mov	 DWORD PTR _o_tempo$1$[ebp], eax
  00486	e8 00 00 00 00	 call	 _fgetc
  0048b	83 c4 08	 add	 esp, 8
  0048e	83 f8 ff	 cmp	 eax, -1
  00491	0f 84 1a 0f 00
	00		 je	 $LN366@music_read

; 1214 : 				err_flg = M_TOCOMMAND_ERR;
; 1215 : 				goto music_read_999;
; 1216 : 			}
; 1217 : 			if (d0 != ')') {

  00497	83 f8 29	 cmp	 eax, 41			; 00000029H
  0049a	0f 85 11 0f 00
	00		 jne	 $LN366@music_read

; 1218 : 				err_flg = M_TOCOMMAND_ERR;
; 1219 : 				goto music_read_999;
; 1220 : 			}
; 1221 : 			err_line--;		//??î·??????????

  004a0	4f		 dec	 edi

; 1222 : 			continue;

  004a1	e9 84 0e 00 00	 jmp	 $LN361@music_read
$LN68@music_read:

; 1223 : 		}
; 1224 : 
; 1225 : 		if (d0 != 't') {		//?????î¿

  004a6	83 f8 74	 cmp	 eax, 116		; 00000074H
  004a9	0f 85 83 0f 00
	00		 jne	 $LN363@music_read

; 1226 : 			err_flg = M_TRACK_ERR;
; 1227 : 			goto music_read_999;
; 1228 : 		}
; 1229 : 		if ((d0 = f_get(fp)) == EOF)		//????î±?î?î?

  004af	56		 push	 esi
  004b0	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  004b5	83 c4 04	 add	 esp, 4
  004b8	83 f8 ff	 cmp	 eax, -1
  004bb	0f 84 82 0e 00
	00		 je	 $LN459@music_read

; 1230 : 			break;		//?????î·î ?
; 1231 : 		if (d0 < '0' || d0> '9') {		//?????î¿

  004c1	83 f8 30	 cmp	 eax, 48			; 00000030H
  004c4	0f 8c 68 0f 00
	00		 jl	 $LN363@music_read
  004ca	83 f8 39	 cmp	 eax, 57			; 00000039H
  004cd	0f 8f 5f 0f 00
	00		 jg	 $LN363@music_read

; 1232 : 			err_flg = M_TRACK_ERR;
; 1233 : 			goto music_read_999;
; 1234 : 		}
; 1235 : 		fseek(fp, -1, SEEK_CUR);		//??????

  004d3	6a 01		 push	 1
  004d5	6a ff		 push	 -1
  004d7	56		 push	 esi
  004d8	e8 00 00 00 00	 call	 _fseek

; 1236 : 		ch = get_num(fp);

  004dd	56		 push	 esi
  004de	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num

; 1237 : 		if ((d0 = f_get(fp)) == EOF)		//????î±?î?î?

  004e3	56		 push	 esi
  004e4	8b f8		 mov	 edi, eax
  004e6	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  004eb	83 c4 14	 add	 esp, 20			; 00000014H
  004ee	83 f8 ff	 cmp	 eax, -1
  004f1	0f 84 4c 0e 00
	00		 je	 $LN459@music_read

; 1238 : 			break;		//?????î·î ?
; 1239 : 		if (d0 != ')') {		//?????î¿

  004f7	83 f8 29	 cmp	 eax, 41			; 00000029H
  004fa	0f 85 32 0f 00
	00		 jne	 $LN363@music_read

; 1240 : 			err_flg = M_TRACK_ERR;
; 1241 : 			goto music_read_999;
; 1242 : 		}
; 1243 : 
; 1244 : 		if (ch < 1 || ch > TRACK_MAX) {

  00500	83 ff 01	 cmp	 edi, 1
  00503	0f 8c 29 0f 00
	00		 jl	 $LN363@music_read
  00509	83 ff 20	 cmp	 edi, 32			; 00000020H
  0050c	0f 8f 20 0f 00
	00		 jg	 $LN363@music_read

; 1245 : 			err_flg = M_TRACK_ERR;
; 1246 : 			goto music_read_999;
; 1247 : 		}
; 1248 : 
; 1249 : 		ch--;		//?????î
; 1250 : 		play_track_flg[ch] = 1;	//
; 1251 : 
; 1252 : 		if (o_tempo != 0 && ch_p[ch] == 0) {		//???îî?????

  00512	8b 85 a4 f3 ff
	ff		 mov	 eax, DWORD PTR _o_tempo$1$[ebp]
  00518	4f		 dec	 edi
  00519	89 bd ac f3 ff
	ff		 mov	 DWORD PTR _ch$1$[ebp], edi
  0051f	c7 04 bd 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?play_track_flg@@3PAHA[edi*4], 1
  0052a	85 c0		 test	 eax, eax
  0052c	74 52		 je	 SHORT $music_read_100$496
  0052e	83 bc bd 70 fe
	ff ff 00	 cmp	 DWORD PTR _ch_p$[ebp+edi*4], 0
  00536	75 48		 jne	 SHORT $music_read_100$496

; 1253 : 			step[ch][ch_p[ch]++] = MUSIC_TEMPO;		//î»???????????
; 1254 : #if MODE98
; 1255 : 			step[ch][ch_p[ch]++] = (int)((float)120 / (float)o_tempo * (float)12600) * 2;
; 1256 : #else
; 1257 : 			step[ch][ch_p[ch]++] = (int)((float)120 / (float)o_tempo * (float)12600);

  00538	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42f00000
  00540	8b cf		 mov	 ecx, edi
  00542	66 0f 6e c0	 movd	 xmm0, eax
  00546	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00549	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  0054c	c7 84 bd 70 fe
	ff ff 02 00 00
	00		 mov	 DWORD PTR _ch_p$[ebp+edi*4], 2
  00557	c7 04 8d 00 00
	00 00 f9 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -7 ; fffffff9H
  00562	f3 0f 5e c8	 divss	 xmm1, xmm0
  00566	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@4644e000
  0056e	f3 0f 2c c1	 cvttss2si eax, xmm1
  00572	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], eax
  00579	0f 1f 80 00 00
	00 00		 npad	 7
$music_read_100$496:

; 1258 : #endif
; 1259 : 		}
; 1260 : 
; 1261 : 		//??????????  ???????îî  ??????????
; 1262 : 
; 1263 : 	music_read_100:
; 1264 : 		if ((d0 = f_get(fp)) == EOF)		//????î?î?

  00580	56		 push	 esi
  00581	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00586	83 c4 04	 add	 esp, 4
  00589	83 f8 ff	 cmp	 eax, -1
  0058c	0f 84 b1 0d 00
	00		 je	 $LN459@music_read

; 1265 : 			break;		//?????î·î ?
; 1266 : 		switch (d0) {

  00592	8d 48 f6	 lea	 ecx, DWORD PTR [eax-10]
  00595	83 f9 72	 cmp	 ecx, 114		; 00000072H
  00598	0f 87 8d 0e 00
	00		 ja	 $LN258@music_read
  0059e	0f b6 89 00 00
	00 00		 movzx	 ecx, BYTE PTR $LN465@music_read[ecx]
  005a5	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN466@music_read[ecx*4]
$LN93@music_read:

; 1273 : 					break;
; 1274 : 			}
; 1275 : 			break;
; 1276 : 		case '\'':		//????
; 1277 : 			int waon_step, waon_note[8 + 1], waon_cnt, octave, waon_delay_point;
; 1278 : 			waon_step = waon_cnt = 0;

  005ac	33 c0		 xor	 eax, eax
  005ae	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR _waon_cnt$1$[ebp], eax
  005b4	89 85 b4 f3 ff
	ff		 mov	 DWORD PTR _d0$15$[ebp], eax

; 1279 : 			octave = ch_oct[ch];

  005ba	8b 84 bd f0 fd
	ff ff		 mov	 eax, DWORD PTR _ch_oct$[ebp+edi*4]
  005c1	89 85 b8 f3 ff
	ff		 mov	 DWORD PTR _octave$1$[ebp], eax
  005c7	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  005ca	c1 e0 02	 shl	 eax, 2
  005cd	89 85 b0 f3 ff
	ff		 mov	 DWORD PTR tv2866[ebp], eax
$LL23@music_read:

; 1280 : 
; 1281 : 			while (1) {
; 1282 : 				d0 = f_get(fp);		//???î?î?

  005d3	56		 push	 esi
  005d4	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  005d9	83 c4 04	 add	 esp, 4

; 1283 : 				if (d0 >= '0' && d0 <= '9') {		//????????

  005dc	83 f8 30	 cmp	 eax, 48			; 00000030H
  005df	7c 09		 jl	 SHORT $LN94@music_read
  005e1	83 f8 39	 cmp	 eax, 57			; 00000039H
  005e4	0f 8e f7 00 00
	00		 jle	 $LN317@music_read
$LN94@music_read:

; 1284 : 					err_flg = M_WAON_ERR;				//???
; 1285 : 					goto music_read_999;
; 1286 : 				}
; 1287 : 				if (d0 == '<') {		//?????î¯??

  005ea	83 f8 3c	 cmp	 eax, 60			; 0000003cH
  005ed	75 0f		 jne	 SHORT $LN96@music_read

; 1288 : 					octave++;

  005ef	ff 85 b8 f3 ff
	ff		 inc	 DWORD PTR _octave$1$[ebp]
  005f5	83 85 b0 f3 ff
	ff 0c		 add	 DWORD PTR tv2866[ebp], 12 ; 0000000cH

; 1289 : 					continue;

  005fc	eb d5		 jmp	 SHORT $LL23@music_read
$LN96@music_read:

; 1290 : 				}
; 1291 : 				if (d0 == '>') {		//????????

  005fe	83 f8 3e	 cmp	 eax, 62			; 0000003eH
  00601	75 22		 jne	 SHORT $LN97@music_read

; 1292 : 					octave--;

  00603	8b 85 b8 f3 ff
	ff		 mov	 eax, DWORD PTR _octave$1$[ebp]
  00609	83 ad b0 f3 ff
	ff 0c		 sub	 DWORD PTR tv2866[ebp], 12 ; 0000000cH
  00610	48		 dec	 eax
  00611	89 85 b8 f3 ff
	ff		 mov	 DWORD PTR _octave$1$[ebp], eax

; 1293 : 					if (octave < 0) {		//????????

  00617	85 c0		 test	 eax, eax
  00619	79 b8		 jns	 SHORT $LL23@music_read
$LN318@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  0061b	bf 0d 00 00 00	 mov	 edi, 13			; 0000000dH
  00620	e9 12 0e 00 00	 jmp	 $LN452@music_read
$LN97@music_read:

; 1294 : 						err_flg = M_NOTE_ERR;		//???
; 1295 : 						goto music_read_999;	//
; 1296 : 					}
; 1297 : 					continue;
; 1298 : 				}
; 1299 : 				if (d0 == '\'') {		//??î·???

  00625	83 f8 27	 cmp	 eax, 39			; 00000027H
  00628	0f 84 bd 00 00
	00		 je	 $LN319@music_read

; 1300 : 					break;
; 1301 : 				}
; 1302 : 				switch (d0) {

  0062e	83 f8 61	 cmp	 eax, 97			; 00000061H
  00631	0f 8c aa 00 00
	00		 jl	 $LN317@music_read
  00637	83 f8 67	 cmp	 eax, 103		; 00000067H
  0063a	0f 8f a1 00 00
	00		 jg	 $LN317@music_read

; 1303 : 				case 'c':		//??
; 1304 : 				case 'd':		//??
; 1305 : 				case 'e':		//??
; 1306 : 				case 'f':		//??
; 1307 : 				case 'g':		//??
; 1308 : 				case 'a':		//??
; 1309 : 				case 'b':		//??
; 1310 : 					d0 -= 'a';
; 1311 : 					d1 = note_change_tbl[d0];

  00640	8b 3c 85 7c fe
	ff ff		 mov	 edi, DWORD PTR ?note_change_tbl@@3PAHA[eax*4-388]

; 1312 : 					d0 = f_get(fp);		//?????

  00647	56		 push	 esi
  00648	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0064d	83 c4 04	 add	 esp, 4

; 1313 : 					if (d0 == '+')

  00650	83 f8 2b	 cmp	 eax, 43			; 0000002bH
  00653	75 03		 jne	 SHORT $LN102@music_read

; 1314 : 						d1++;

  00655	47		 inc	 edi
  00656	eb 15		 jmp	 SHORT $LN105@music_read
$LN102@music_read:

; 1315 : 					else if (d0 == '-')

  00658	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  0065b	75 03		 jne	 SHORT $LN104@music_read

; 1316 : 						d1--;

  0065d	4f		 dec	 edi
  0065e	eb 0d		 jmp	 SHORT $LN105@music_read
$LN104@music_read:

; 1317 : 					else fseek(fp, -1, SEEK_CUR);		//??????

  00660	6a 01		 push	 1
  00662	6a ff		 push	 -1
  00664	56		 push	 esi
  00665	e8 00 00 00 00	 call	 _fseek
  0066a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN105@music_read:

; 1318 : 
; 1319 : 					d0 = octave * 12 + d1 + 1;	//???î±???????

  0066d	8b 85 b0 f3 ff
	ff		 mov	 eax, DWORD PTR tv2866[ebp]
  00673	40		 inc	 eax
  00674	03 c7		 add	 eax, edi

; 1320 : 					if (d0 < 1 || d0 > 62) {		//

  00676	83 f8 01	 cmp	 eax, 1
  00679	7c a0		 jl	 SHORT $LN318@music_read
  0067b	83 f8 3e	 cmp	 eax, 62			; 0000003eH
  0067e	7f 9b		 jg	 SHORT $LN318@music_read

; 1321 : 						err_flg = M_NOTE_ERR;		//???
; 1322 : 						goto music_read_999;	//
; 1323 : 					}
; 1324 : 					waon_note[waon_cnt++] = d0;	//???î±????

  00680	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR _waon_cnt$1$[ebp]

; 1325 : 
; 1326 : 					d0 = f_get(fp);		//???î?î?

  00686	56		 push	 esi
  00687	89 84 8d cc fb
	ff ff		 mov	 DWORD PTR _waon_note$4[ebp+ecx*4], eax
  0068e	41		 inc	 ecx
  0068f	89 8d c4 f3 ff
	ff		 mov	 DWORD PTR _waon_cnt$1$[ebp], ecx
  00695	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1327 : 					fseek(fp, -1, SEEK_CUR);		//??????

  0069a	6a 01		 push	 1
  0069c	6a ff		 push	 -1
  0069e	56		 push	 esi
  0069f	8b f8		 mov	 edi, eax
  006a1	e8 00 00 00 00	 call	 _fseek
  006a6	83 c4 10	 add	 esp, 16			; 00000010H

; 1328 : 					if (d0 < '0' || d0> '9') {		//???????

  006a9	83 ff 30	 cmp	 edi, 48			; 00000030H
  006ac	7c 05		 jl	 SHORT $LN110@music_read
  006ae	83 ff 39	 cmp	 edi, 57			; 00000039H
  006b1	7e 0f		 jle	 SHORT $LN111@music_read
$LN110@music_read:

; 1329 : 						if (d0 != '*') {		//???????????

  006b3	83 ff 2a	 cmp	 edi, 42			; 0000002aH
  006b6	8b bd ac f3 ff
	ff		 mov	 edi, DWORD PTR _ch$1$[ebp]
  006bc	0f 85 11 ff ff
	ff		 jne	 $LL23@music_read
$LN111@music_read:

; 1330 : 							break;
; 1331 : 						}
; 1332 : 					}
; 1333 : 					waon_step = get_step(fp, ch);		//???????î?î?

  006c2	8b bd ac f3 ff
	ff		 mov	 edi, DWORD PTR _ch$1$[ebp]
  006c8	57		 push	 edi
  006c9	56		 push	 esi
  006ca	e8 00 00 00 00	 call	 ?get_step@@YAHPAU_iobuf@@H@Z ; get_step
  006cf	83 c4 08	 add	 esp, 8
  006d2	89 85 b4 f3 ff
	ff		 mov	 DWORD PTR _d0$15$[ebp], eax

; 1334 : 					if (waon_step == -1) {		//?????

  006d8	83 f8 ff	 cmp	 eax, -1
  006db	0f 85 f2 fe ff
	ff		 jne	 $LL23@music_read
$LN317@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  006e1	bf 16 00 00 00	 mov	 edi, 22			; 00000016H
  006e6	e9 4c 0d 00 00	 jmp	 $LN452@music_read
$LN319@music_read:

; 1335 : 						err_flg = M_WAON_ERR;				//???
; 1336 : 						goto music_read_999;
; 1337 : 					}
; 1338 : 					break;
; 1339 : 				default:
; 1340 : 					err_flg = M_WAON_ERR;				//???
; 1341 : 					goto music_read_999;
; 1342 : 				}
; 1343 : 			}
; 1344 : 			if (waon_cnt > 8 || waon_cnt == 0) {		//????????

  006eb	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR _waon_cnt$1$[ebp]
  006f1	83 f8 08	 cmp	 eax, 8
  006f4	7f eb		 jg	 SHORT $LN317@music_read
  006f6	85 c0		 test	 eax, eax
  006f8	74 e7		 je	 SHORT $LN317@music_read

; 1345 : 				err_flg = M_WAON_ERR;				//???
; 1346 : 				goto music_read_999;
; 1347 : 			}
; 1348 : 
; 1349 : 			if (num_check(fp)) {		//????

  006fa	56		 push	 esi
  006fb	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  00700	83 c4 04	 add	 esp, 4
  00703	85 c0		 test	 eax, eax
  00705	74 0f		 je	 SHORT $LN119@music_read

; 1350 : 				waon_step = get_num(fp);		//??????????

  00707	56		 push	 esi
  00708	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  0070d	83 c4 04	 add	 esp, 4
  00710	89 85 b4 f3 ff
	ff		 mov	 DWORD PTR _d0$15$[ebp], eax
$LN119@music_read:

; 1351 : 			}
; 1352 : 			step[ch][ch_p[ch]++] = MUSIC_WAON;		//?????

  00716	8b 94 bd 70 fe
	ff ff		 mov	 edx, DWORD PTR _ch_p$[ebp+edi*4]
  0071d	8b cf		 mov	 ecx, edi
  0071f	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  00722	89 95 b0 f3 ff
	ff		 mov	 DWORD PTR tv2929[ebp], edx
  00728	89 8d b8 f3 ff
	ff		 mov	 DWORD PTR tv2986[ebp], ecx
  0072e	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]
  00731	c7 04 85 00 00
	00 00 f2 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -14 ; fffffff2H

; 1353 : 			step[ch][ch_p[ch]++] = waon_cnt;		//??????

  0073c	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  0073f	8b 95 c4 f3 ff
	ff		 mov	 edx, DWORD PTR _waon_cnt$1$[ebp]
  00745	89 14 85 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4+4], edx

; 1354 : 			waon_delay_point = ch_p[ch];		//??????????îî¼
; 1355 : 			ch_p[ch]++;		//??îî??

  0074c	8b 85 b0 f3 ff
	ff		 mov	 eax, DWORD PTR tv2929[ebp]
  00752	83 c0 03	 add	 eax, 3
  00755	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2973[ebp], eax

; 1356 : 
; 1357 : 			for (d7 = 0; d7 < waon_cnt; d7++) {

  0075b	85 d2		 test	 edx, edx
  0075d	7e 33		 jle	 SHORT $LN28@music_read

; 1351 : 			}
; 1352 : 			step[ch][ch_p[ch]++] = MUSIC_WAON;		//?????

  0075f	03 c1		 add	 eax, ecx
  00761	8d b5 cc fb ff
	ff		 lea	 esi, DWORD PTR _waon_note$4[ebp]
  00767	8b ca		 mov	 ecx, edx
  00769	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR ?step@@3PAY0EAAA@HA[eax*4]
  00770	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2973[ebp]
  00776	f3 a5		 rep movsd
  00778	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  0077e	03 c2		 add	 eax, edx
  00780	8b bd ac f3 ff
	ff		 mov	 edi, DWORD PTR _ch$1$[ebp]
  00786	8b 8d b8 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2986[ebp]
  0078c	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2973[ebp], eax
$LN28@music_read:

; 1358 : 				step[ch][ch_p[ch]++] = waon_note[d7];		//???î±????
; 1359 : 			}
; 1360 : 			if (waon_step) {		//????????îî?????

  00792	8b 95 b4 f3 ff
	ff		 mov	 edx, DWORD PTR _d0$15$[ebp]
  00798	85 d2		 test	 edx, edx
  0079a	75 0d		 jne	 SHORT $LN121@music_read

; 1361 : 				d0 = waon_step;		//??????????
; 1362 : 			}
; 1363 : 			else {
; 1364 : 				d0 = step_def[ch];	//??????????

  0079c	8b 14 bd 00 00
	00 00		 mov	 edx, DWORD PTR ?step_def@@3PAHA[edi*4]
  007a3	89 95 b4 f3 ff
	ff		 mov	 DWORD PTR _d0$15$[ebp], edx
$LN121@music_read:

; 1365 : 			}
; 1366 : 			step[ch][ch_p[ch]++] = d0;		//??????????

  007a9	03 c1		 add	 eax, ecx

; 1367 : 			d1 = f_get(fp);		//????

  007ab	56		 push	 esi
  007ac	89 14 85 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], edx
  007b3	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2973[ebp]
  007b9	40		 inc	 eax
  007ba	03 c8		 add	 ecx, eax
  007bc	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  007c3	40		 inc	 eax
  007c4	89 8d c4 f3 ff
	ff		 mov	 DWORD PTR tv2736[ebp], ecx
  007ca	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR tv2976[ebp], eax
  007d0	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  007d5	83 c4 04	 add	 esp, 4

; 1368 : 			if (d1 == '&') {

  007d8	83 f8 26	 cmp	 eax, 38			; 00000026H
  007db	75 05		 jne	 SHORT $LN122@music_read

; 1369 : 				step[ch][ch_p[ch]++] = -1;	//?????????

  007dd	83 c8 ff	 or	 eax, -1

; 1370 : 			}

  007e0	eb 24		 jmp	 SHORT $LN123@music_read
$LN122@music_read:

; 1371 : 			else {
; 1372 : 				fseek(fp, -1, SEEK_CUR);		//??????

  007e2	6a 01		 push	 1
  007e4	6a ff		 push	 -1
  007e6	56		 push	 esi
  007e7	e8 00 00 00 00	 call	 _fseek

; 1373 : 				step[ch][ch_p[ch]++] = d0 * q_com[ch] / 8;	//?????????

  007ec	8b 84 bd f0 fc
	ff ff		 mov	 eax, DWORD PTR _q_com$[ebp+edi*4]
  007f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  007f6	0f af 85 b4 f3
	ff ff		 imul	 eax, DWORD PTR _d0$15$[ebp]
  007fd	99		 cdq
  007fe	83 e2 07	 and	 edx, 7
  00801	03 c2		 add	 eax, edx
  00803	c1 f8 03	 sar	 eax, 3
$LN123@music_read:

; 1374 : 			}
; 1375 : 
; 1376 : 			d0 = f_get(fp);		//????îî????

  00806	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2736[ebp]
  0080c	56		 push	 esi
  0080d	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], eax
  00814	8b 85 c0 f3 ff
	ff		 mov	 eax, DWORD PTR tv2976[ebp]
  0081a	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00821	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00826	83 c4 04	 add	 esp, 4

; 1377 : 			if (d0 == ',') {

  00829	83 f8 2c	 cmp	 eax, 44			; 0000002cH
  0082c	75 23		 jne	 SHORT $LN124@music_read

; 1378 : 				if (num_check(fp)) {		//????

  0082e	56		 push	 esi
  0082f	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  00834	83 c4 04	 add	 esp, 4
  00837	85 c0		 test	 eax, eax
  00839	0f 84 a2 fe ff
	ff		 je	 $LN317@music_read

; 1379 : 					waon_delay[ch] = get_num(fp);		//????î±î???

  0083f	56		 push	 esi
  00840	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00845	83 c4 04	 add	 esp, 4
  00848	89 84 bd 70 fc
	ff ff		 mov	 DWORD PTR _waon_delay$[ebp+edi*4], eax

; 1380 : 				}
; 1381 : 				else {		//???????
; 1382 : 					err_flg = M_WAON_ERR;				//???
; 1383 : 					goto music_read_999;
; 1384 : 				}
; 1385 : 			}

  0084f	eb 0d		 jmp	 SHORT $LN125@music_read
$LN124@music_read:

; 1386 : 			else {		//????îî????
; 1387 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00851	6a 01		 push	 1
  00853	6a ff		 push	 -1
  00855	56		 push	 esi
  00856	e8 00 00 00 00	 call	 _fseek
  0085b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN125@music_read:

; 1388 : 			}
; 1389 : 			step[ch][waon_delay_point] = waon_delay[ch];		//???????

  0085e	8b 8d b0 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2929[ebp]
  00864	03 8d b8 f3 ff
	ff		 add	 ecx, DWORD PTR tv2986[ebp]
  0086a	8b 84 bd 70 fc
	ff ff		 mov	 eax, DWORD PTR _waon_delay$[ebp+edi*4]
  00871	89 04 8d 08 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+8], eax

; 1390 : 			goto music_read_100;

  00878	e9 03 fd ff ff	 jmp	 $music_read_100$496
$LN129@music_read:

; 1391 : 		case 'l':		//?î?
; 1392 : 			d0 = f_get(fp);		//???î±?

  0087d	56		 push	 esi
  0087e	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00883	83 c4 04	 add	 esp, 4

; 1393 : 			if (d0 >= '0' && d0 <= '9') {		//???

  00886	8d 48 d0	 lea	 ecx, DWORD PTR [eax-48]
  00889	83 f9 09	 cmp	 ecx, 9
  0088c	77 3c		 ja	 SHORT $LN130@music_read

; 1394 : 				fseek(fp, -1, SEEK_CUR);		//??????

  0088e	6a 01		 push	 1
  00890	6a ff		 push	 -1
  00892	56		 push	 esi
  00893	e8 00 00 00 00	 call	 _fseek

; 1395 : 				d0 = 192 / get_num(fp);

  00898	56		 push	 esi
  00899	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  0089e	8b c8		 mov	 ecx, eax
  008a0	83 c4 10	 add	 esp, 16			; 00000010H
  008a3	b8 c0 00 00 00	 mov	 eax, 192		; 000000c0H
  008a8	99		 cdq
  008a9	f7 f9		 idiv	 ecx

; 1396 : 				if (d0 > 192 || d0 == 0) {

  008ab	3d c0 00 00 00	 cmp	 eax, 192		; 000000c0H
  008b0	0f 8f 05 0b 00
	00		 jg	 $LN325@music_read
  008b6	85 c0		 test	 eax, eax
  008b8	0f 84 fd 0a 00
	00		 je	 $LN325@music_read

; 1397 : 					err_flg = M_LCOMMAND_ERR;
; 1398 : 					goto music_read_999;
; 1399 : 				}
; 1400 : 				step_def[ch] = d0;

  008be	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?step_def@@3PAHA[edi*4], eax

; 1401 : 				goto music_read_100;

  008c5	e9 b6 fc ff ff	 jmp	 $music_read_100$496
$LN130@music_read:

; 1402 : 			}
; 1403 : 			if (d0 != '*') {		//îî?î?

  008ca	83 f8 2a	 cmp	 eax, 42			; 0000002aH
  008cd	0f 85 e8 0a 00
	00		 jne	 $LN325@music_read

; 1404 : 				err_flg = M_LCOMMAND_ERR;
; 1405 : 				goto music_read_999;
; 1406 : 			}
; 1407 : 			d0 = f_get(fp);		//???î±?

  008d3	56		 push	 esi
  008d4	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1408 : 			if (d0 >= '0' && d0 <= '9') {		//???

  008d9	83 c0 d0	 add	 eax, -48		; ffffffd0H
  008dc	83 c4 04	 add	 esp, 4
  008df	83 f8 09	 cmp	 eax, 9
  008e2	0f 87 d3 0a 00
	00		 ja	 $LN325@music_read

; 1409 : 				fseek(fp, -1, SEEK_CUR);		//??????

  008e8	6a 01		 push	 1
  008ea	6a ff		 push	 -1
  008ec	56		 push	 esi
  008ed	e8 00 00 00 00	 call	 _fseek

; 1410 : 				step_def[ch] = get_num(fp);

  008f2	56		 push	 esi
  008f3	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  008f8	83 c4 10	 add	 esp, 16			; 00000010H
  008fb	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?step_def@@3PAHA[edi*4], eax

; 1411 : 				goto music_read_100;

  00902	e9 79 fc ff ff	 jmp	 $music_read_100$496
$LN138@music_read:

; 1412 : 			}
; 1413 : 			err_flg = M_LCOMMAND_ERR;
; 1414 : 			goto music_read_999;
; 1415 : 		case 'r':		//??
; 1416 : 			step[ch][ch_p[ch]++] = MUSIC_R;

  00907	8b 8c bd 70 fe
	ff ff		 mov	 ecx, DWORD PTR _ch_p$[ebp+edi*4]
  0090e	8b c7		 mov	 eax, edi
  00910	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00913	89 85 b8 f3 ff
	ff		 mov	 DWORD PTR tv2988[ebp], eax
  00919	03 c1		 add	 eax, ecx

; 1417 : 			d0 = get_step(fp, ch);		//???????î?î?

  0091b	57		 push	 edi
  0091c	56		 push	 esi
  0091d	c7 04 85 00 00
	00 00 fe ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -2 ; fffffffeH
  00928	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  0092b	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2972[ebp], eax
  00931	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00938	e8 00 00 00 00	 call	 ?get_step@@YAHPAU_iobuf@@H@Z ; get_step
  0093d	8b d0		 mov	 edx, eax
  0093f	83 c4 08	 add	 esp, 8
  00942	89 95 c0 f3 ff
	ff		 mov	 DWORD PTR _d0$19$[ebp], edx

; 1418 : 			if (d0 == -1) {		//????

  00948	83 fa ff	 cmp	 edx, -1
  0094b	0f 84 71 0a 00
	00		 je	 $LN327@music_read

; 1419 : 				err_flg = M_STEP_ERR;		//??????
; 1420 : 				goto music_read_999;
; 1421 : 			}
; 1422 : 			step[ch][ch_p[ch]++] = d0;		//??????????

  00951	8b 8d b8 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2988[ebp]
  00957	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2972[ebp]
  0095d	03 c8		 add	 ecx, eax
  0095f	40		 inc	 eax

; 1423 : 			d1 = f_get(fp);		//????

  00960	56		 push	 esi
  00961	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00968	89 14 8d 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], edx
  0096f	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00974	83 c4 04	 add	 esp, 4

; 1424 : 			if (d1 == '&') {

  00977	83 f8 26	 cmp	 eax, 38			; 00000026H
  0097a	75 0c		 jne	 SHORT $LN141@music_read

; 1425 : 				step[ch][ch_p[ch]++] = -1;	//?????????

  0097c	c7 85 b4 f3 ff
	ff ff ff ff ff	 mov	 DWORD PTR $T1[ebp], -1

; 1426 : 			}

  00986	eb 2a		 jmp	 SHORT $LN142@music_read
$LN141@music_read:

; 1427 : 			else {
; 1428 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00988	6a 01		 push	 1
  0098a	6a ff		 push	 -1
  0098c	56		 push	 esi
  0098d	e8 00 00 00 00	 call	 _fseek

; 1429 : 				step[ch][ch_p[ch]++] = d0 * q_com[ch] / 8;	//?????????

  00992	8b 84 bd f0 fc
	ff ff		 mov	 eax, DWORD PTR _q_com$[ebp+edi*4]
  00999	83 c4 0c	 add	 esp, 12			; 0000000cH
  0099c	0f af 85 c0 f3
	ff ff		 imul	 eax, DWORD PTR _d0$19$[ebp]
  009a3	99		 cdq
  009a4	83 e2 07	 and	 edx, 7
  009a7	03 c2		 add	 eax, edx
  009a9	c1 f8 03	 sar	 eax, 3
  009ac	89 85 b4 f3 ff
	ff		 mov	 DWORD PTR $T1[ebp], eax
$LN142@music_read:

; 1430 : 			}
; 1431 : 			goto music_read_100;

  009b2	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2972[ebp]
  009b8	8b 85 b4 f3 ff
	ff		 mov	 eax, DWORD PTR $T1[ebp]
  009be	8d 51 02	 lea	 edx, DWORD PTR [ecx+2]
  009c1	03 8d b8 f3 ff
	ff		 add	 ecx, DWORD PTR tv2988[ebp]
  009c7	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], eax
  009ce	89 94 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], edx
  009d5	e9 a6 fb ff ff	 jmp	 $music_read_100$496
$LN143@music_read:

; 1432 : 		case 'o':		//?????îî?
; 1433 : 			if (!num_check(fp)) {		//???????

  009da	56		 push	 esi
  009db	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  009e0	83 c4 04	 add	 esp, 4
  009e3	85 c0		 test	 eax, eax
  009e5	74 1d		 je	 SHORT $LN328@music_read

; 1434 : 				err_flg = M_OCOMMAND_ERR;		//???
; 1435 : 				goto music_read_999;
; 1436 : 			}
; 1437 : 			ch_oct[ch] = get_num(fp);

  009e7	56		 push	 esi
  009e8	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  009ed	83 c4 04	 add	 esp, 4
  009f0	89 84 bd f0 fd
	ff ff		 mov	 DWORD PTR _ch_oct$[ebp+edi*4], eax

; 1438 : 			if (ch_oct[ch] < 0 || ch_oct[ch]>5) {		//îª????

  009f7	85 c0		 test	 eax, eax
  009f9	78 09		 js	 SHORT $LN328@music_read
  009fb	83 f8 05	 cmp	 eax, 5
  009fe	0f 8e 7c fb ff
	ff		 jle	 $music_read_100$496
$LN328@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  00a04	bf 17 00 00 00	 mov	 edi, 23			; 00000017H
  00a09	e9 29 0a 00 00	 jmp	 $LN452@music_read
$LN149@music_read:

; 1439 : 				err_flg = M_OCOMMAND_ERR;		//???
; 1440 : 				goto music_read_999;
; 1441 : 			}
; 1442 : 			goto music_read_100;
; 1443 : 		case '<':		//?????î¯?
; 1444 : 			ch_oct[ch]++;

  00a0e	ff 84 bd f0 fd
	ff ff		 inc	 DWORD PTR _ch_oct$[ebp+edi*4]

; 1445 : 			goto music_read_100;

  00a15	e9 66 fb ff ff	 jmp	 $music_read_100$496
$LN150@music_read:

; 1446 : 		case '>':		//???????
; 1447 : 			ch_oct[ch]--;

  00a1a	83 84 bd f0 fd
	ff ff ff	 add	 DWORD PTR _ch_oct$[ebp+edi*4], -1

; 1448 : 			if (ch_oct[ch] < 0) {		//????????

  00a22	0f 89 58 fb ff
	ff		 jns	 $music_read_100$496

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  00a28	bf 0d 00 00 00	 mov	 edi, 13			; 0000000dH
  00a2d	e9 05 0a 00 00	 jmp	 $LN452@music_read
$LN153@music_read:

; 1449 : 				err_flg = M_NOTE_ERR;		//???
; 1450 : 				goto music_read_999;	//
; 1451 : 			}
; 1452 : 			goto music_read_100;
; 1453 : 		case 'q':		//???????
; 1454 : 			if (!num_check(fp)) {		//???????

  00a32	56		 push	 esi
  00a33	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  00a38	83 c4 04	 add	 esp, 4
  00a3b	85 c0		 test	 eax, eax
  00a3d	74 1d		 je	 SHORT $LN331@music_read

; 1455 : 				err_flg = M_QCOMMAND_ERR;
; 1456 : 				goto music_read_999;
; 1457 : 			}
; 1458 : 			q_com[ch] = get_num(fp);		//?????????

  00a3f	56		 push	 esi
  00a40	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00a45	83 c4 04	 add	 esp, 4
  00a48	89 84 bd f0 fc
	ff ff		 mov	 DWORD PTR _q_com$[ebp+edi*4], eax

; 1459 : 			if (q_com[ch] > 8 || q_com[ch] == 0) {		//îª????

  00a4f	83 f8 08	 cmp	 eax, 8
  00a52	7f 08		 jg	 SHORT $LN331@music_read
  00a54	85 c0		 test	 eax, eax
  00a56	0f 85 24 fb ff
	ff		 jne	 $music_read_100$496
$LN331@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  00a5c	bf 14 00 00 00	 mov	 edi, 20			; 00000014H
  00a61	e9 d1 09 00 00	 jmp	 $LN452@music_read
$LN159@music_read:

; 1460 : 				err_flg = M_QCOMMAND_ERR;
; 1461 : 				goto music_read_999;
; 1462 : 			}
; 1463 : 			goto music_read_100;
; 1464 : 		case 'c':		//??
; 1465 : 		case 'd':		//??
; 1466 : 		case 'e':		//??
; 1467 : 		case 'f':		//??
; 1468 : 		case 'g':		//??
; 1469 : 		case 'a':		//??
; 1470 : 		case 'b':		//??
; 1471 : //			if(ch >= 6){
; 1472 : 			d0 -= 'a';
; 1473 : 			d1 = note_change_tbl[d0];

  00a66	8b 04 85 7c fe
	ff ff		 mov	 eax, DWORD PTR ?note_change_tbl@@3PAHA[eax*4-388]

; 1474 : 			d0 = f_get(fp);		//?????

  00a6d	56		 push	 esi
  00a6e	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR _d1$2$[ebp], eax
  00a74	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00a79	83 c4 04	 add	 esp, 4

; 1475 : 			if (d0 == '+')

  00a7c	83 f8 2b	 cmp	 eax, 43			; 0000002bH
  00a7f	75 09		 jne	 SHORT $LN160@music_read

; 1476 : 				d1++;

  00a81	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR _d1$2$[ebp]
  00a87	41		 inc	 ecx
  00a88	eb 21		 jmp	 SHORT $LN163@music_read
$LN160@music_read:

; 1477 : 			else if (d0 == '-')

  00a8a	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00a8d	75 09		 jne	 SHORT $LN162@music_read

; 1478 : 				d1--;

  00a8f	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR _d1$2$[ebp]
  00a95	49		 dec	 ecx
  00a96	eb 13		 jmp	 SHORT $LN163@music_read
$LN162@music_read:

; 1479 : 			else fseek(fp, -1, SEEK_CUR);		//??????

  00a98	6a 01		 push	 1
  00a9a	6a ff		 push	 -1
  00a9c	56		 push	 esi
  00a9d	e8 00 00 00 00	 call	 _fseek
  00aa2	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR _d1$2$[ebp]
  00aa8	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN163@music_read:

; 1480 : 
; 1481 : 			if (ch_oct[ch] >= 5) {			//???î±??????

  00aab	8b 84 bd f0 fd
	ff ff		 mov	 eax, DWORD PTR _ch_oct$[ebp+edi*4]
  00ab2	83 f8 05	 cmp	 eax, 5
  00ab5	7c 09		 jl	 SHORT $LN165@music_read

; 1482 : 				if (d1 >= 2) {			//

  00ab7	83 f9 02	 cmp	 ecx, 2
  00aba	0f 8d 5b fb ff
	ff		 jge	 $LN318@music_read
$LN165@music_read:

; 1483 : 					err_flg = M_NOTE_ERR;	//??
; 1484 : 					goto music_read_999;	//
; 1485 : 				}
; 1486 : 			}
; 1487 : #if 0
; 1488 : 			step[ch][ch_p[ch]++] = MUSIC_FREQ;
; 1489 : 			d1 = freq_tbl[d1 + 1];
; 1490 : 			if (ch_oct[ch] > 0) {
; 1491 : 				d0 = ch_oct[ch];
; 1492 : 				d0 = 1 << d0;
; 1493 : 				d1 *= d0;
; 1494 : 			}
; 1495 : 			else if (ch_oct[ch] < 0) {
; 1496 : 				d0 = -ch_oct[ch];
; 1497 : 				d0 = 1 << d0;
; 1498 : 				d1 /= d0;
; 1499 : 			}
; 1500 : #endif
; 1501 : 			d0 = ch_oct[ch] * 12 + d1 + 1;	//???î±???????

  00ac0	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00ac3	8d 14 85 01 00
	00 00		 lea	 edx, DWORD PTR [eax*4+1]
  00aca	03 d1		 add	 edx, ecx

; 1502 : 			if (d0 < 1 || d0 > 62) {			//

  00acc	83 fa 01	 cmp	 edx, 1
  00acf	0f 8c 46 fb ff
	ff		 jl	 $LN318@music_read
  00ad5	83 fa 3e	 cmp	 edx, 62			; 0000003eH
  00ad8	0f 8f 3d fb ff
	ff		 jg	 $LN318@music_read

; 1503 : 				err_flg = M_NOTE_ERR;			//???
; 1504 : 				goto music_read_999;		//
; 1505 : 			}
; 1506 : 			step[ch][ch_p[ch]++] = d0;	//???î±????

  00ade	8b 8c bd 70 fe
	ff ff		 mov	 ecx, DWORD PTR _ch_p$[ebp+edi*4]
  00ae5	8b c7		 mov	 eax, edi
  00ae7	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  00aea	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR tv2980[ebp], eax
  00af0	03 c1		 add	 eax, ecx

; 1507 : //			}
; 1508 : 			d0 = get_step(fp, ch);		//???????î?î?

  00af2	57		 push	 edi
  00af3	56		 push	 esi
  00af4	89 14 85 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], edx
  00afb	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00afe	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2971[ebp], eax
  00b04	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00b0b	e8 00 00 00 00	 call	 ?get_step@@YAHPAU_iobuf@@H@Z ; get_step
  00b10	83 c4 08	 add	 esp, 8
  00b13	89 85 b8 f3 ff
	ff		 mov	 DWORD PTR _d0$23$[ebp], eax

; 1509 : 			if (d0 == -1) {		//????

  00b19	83 f8 ff	 cmp	 eax, -1
  00b1c	0f 84 a0 08 00
	00		 je	 $LN327@music_read

; 1510 : 				err_flg = M_STEP_ERR;		//??????
; 1511 : 				goto music_read_999;
; 1512 : 			}
; 1513 : 			step[ch][ch_p[ch]++] = d0;		//??????????

  00b22	8b 95 c0 f3 ff
	ff		 mov	 edx, DWORD PTR tv2980[ebp]
  00b28	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2971[ebp]
  00b2e	03 ca		 add	 ecx, edx

; 1514 : 			d1 = f_get(fp);		//????

  00b30	56		 push	 esi
  00b31	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], eax
  00b38	8b 8d c4 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2971[ebp]
  00b3e	41		 inc	 ecx
  00b3f	89 8c bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], ecx
  00b46	8d 04 0a	 lea	 eax, DWORD PTR [edx+ecx]
  00b49	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR tv2757[ebp], eax
  00b4f	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00b52	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2983[ebp], eax
  00b58	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00b5d	83 c4 04	 add	 esp, 4

; 1515 : 			if (d1 == '&') {

  00b60	83 f8 26	 cmp	 eax, 38			; 00000026H
  00b63	75 05		 jne	 SHORT $LN172@music_read

; 1516 : 				step[ch][ch_p[ch]++] = -1;	//?????????

  00b65	83 c8 ff	 or	 eax, -1

; 1517 : 			}

  00b68	eb 24		 jmp	 SHORT $LN173@music_read
$LN172@music_read:

; 1518 : 			else {
; 1519 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00b6a	6a 01		 push	 1
  00b6c	6a ff		 push	 -1
  00b6e	56		 push	 esi
  00b6f	e8 00 00 00 00	 call	 _fseek

; 1520 : 				step[ch][ch_p[ch]++] = d0 * q_com[ch] / 8;	//?????????

  00b74	8b 84 bd f0 fc
	ff ff		 mov	 eax, DWORD PTR _q_com$[ebp+edi*4]
  00b7b	83 c4 0c	 add	 esp, 12			; 0000000cH
  00b7e	0f af 85 b8 f3
	ff ff		 imul	 eax, DWORD PTR _d0$23$[ebp]
  00b85	99		 cdq
  00b86	83 e2 07	 and	 edx, 7
  00b89	03 c2		 add	 eax, edx
  00b8b	c1 f8 03	 sar	 eax, 3
$LN173@music_read:

; 1521 : 			}
; 1522 : 			goto music_read_100;

  00b8e	8b 8d c0 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2757[ebp]
  00b94	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], eax
  00b9b	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2983[ebp]
  00ba1	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00ba8	e9 d3 f9 ff ff	 jmp	 $music_read_100$496
$LN174@music_read:

; 1523 : 		case 't':		//???
; 1524 : 			d0 = f_get(fp);		//???î?î?

  00bad	56		 push	 esi
  00bae	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1525 : 			if (d0 < '0' || d0> '9') {		//???

  00bb3	83 c0 d0	 add	 eax, -48		; ffffffd0H
  00bb6	83 c4 04	 add	 esp, 4
  00bb9	83 f8 09	 cmp	 eax, 9
  00bbc	0f 87 07 08 00
	00		 ja	 $LN336@music_read

; 1527 : 				goto music_read_999;
; 1528 : 			}
; 1529 : 			fseek(fp, -1, SEEK_CUR);		//??????

  00bc2	6a 01		 push	 1
  00bc4	6a ff		 push	 -1
  00bc6	56		 push	 esi
  00bc7	e8 00 00 00 00	 call	 _fseek

; 1530 : 			d0 = get_num(fp);

  00bcc	56		 push	 esi
  00bcd	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num

; 1531 : 			step[ch][ch_p[ch]++] = MUSIC_TEMPO;
; 1532 : #if MODE98
; 1533 : 			step[ch][ch_p[ch]++] = (int)((float)120 / (float)d0 * (float)12600) * 2;
; 1534 : #else
; 1535 : 			step[ch][ch_p[ch]++] = (int)((float)120 / (float)d0 * (float)12600);

  00bd2	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42f00000
  00bda	8b d7		 mov	 edx, edi
  00bdc	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00be3	83 c4 10	 add	 esp, 16			; 00000010H
  00be6	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00be9	66 0f 6e c0	 movd	 xmm0, eax
  00bed	0f 5b c0	 cvtdq2ps xmm0, xmm0
  00bf0	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00bf3	c7 04 8d 00 00
	00 00 f9 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -7 ; fffffff9H
  00bfe	f3 0f 5e c8	 divss	 xmm1, xmm0
  00c02	f3 0f 59 0d 00
	00 00 00	 mulss	 xmm1, DWORD PTR __real@4644e000
  00c0a	f3 0f 2c c9	 cvttss2si ecx, xmm1

; 1536 : #endif
; 1537 : 			goto music_read_100;

  00c0e	e9 89 03 00 00	 jmp	 $LN488@music_read
$LN178@music_read:

; 1538 : 		case 'v':		//?????
; 1539 : 			d0 = f_get(fp);		//??î?î?

  00c13	56		 push	 esi
  00c14	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00c19	83 c4 04	 add	 esp, 4

; 1540 : 			if (d0 < '0' || d0> '9') {		//???

  00c1c	83 f8 30	 cmp	 eax, 48			; 00000030H
  00c1f	0f 8c ab 07 00
	00		 jl	 $LN180@music_read
  00c25	83 f8 39	 cmp	 eax, 57			; 00000039H
  00c28	0f 8f a2 07 00
	00		 jg	 $LN180@music_read

; 1541 : 				err_flg = M_VCOMMAND_ERR;
; 1542 : 				goto music_read_999;
; 1543 : 			}
; 1544 : 			fseek(fp, -1, SEEK_CUR);		//??????

  00c2e	6a 01		 push	 1
  00c30	6a ff		 push	 -1
  00c32	56		 push	 esi
  00c33	e8 00 00 00 00	 call	 _fseek

; 1545 : 			d0 = get_num(fp);

  00c38	56		 push	 esi
  00c39	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00c3e	83 c4 10	 add	 esp, 16			; 00000010H

; 1546 : 			if (d0 > 15) {		//???????

  00c41	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  00c44	0f 8f 86 07 00
	00		 jg	 $LN180@music_read

; 1547 : 				err_flg = M_VCOMMAND_ERR;
; 1548 : 				goto music_read_999;
; 1549 : 			}
; 1550 : 			step[ch][ch_p[ch]++] = MUSIC_VOL;

  00c4a	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00c51	8b d7		 mov	 edx, edi
  00c53	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00c56	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00c59	03 d6		 add	 edx, esi
  00c5b	83 c6 02	 add	 esi, 2
  00c5e	c7 04 8d 00 00
	00 00 fb ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -5 ; fffffffbH

; 1551 : 			if (d0) {

  00c69	85 c0		 test	 eax, eax
  00c6b	74 3c		 je	 SHORT $LN184@music_read

; 1552 : 				d0 = 15 - d0;

  00c6d	b9 0f 00 00 00	 mov	 ecx, 15			; 0000000fH
  00c72	2b c8		 sub	 ecx, eax

; 1553 : 				//					d0 *= d0;
; 1554 : 				//					d0 = (int)((float)d0 * 39.0625);
; 1555 : 				//					step[ch][ch_p[ch]++] = -d0;
; 1556 : 				d6 = d0;
; 1557 : 				d6 = d6 * d6 * d6;

  00c74	8b c1		 mov	 eax, ecx
  00c76	0f af c1	 imul	 eax, ecx
  00c79	0f af c1	 imul	 eax, ecx
  00c7c	66 0f 6e c0	 movd	 xmm0, eax

; 1558 : 				d6 = (long)(10000.0 / (16.0 * 16.0 * 16.0) * d6);

  00c80	f3 0f e6 c0	 cvtdq2pd xmm0, xmm0
  00c84	f2 0f 59 85 98
	f3 ff ff	 mulsd	 xmm0, QWORD PTR __real@c003880000000000$1$[ebp]
  00c8c	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 1563 : 			}
; 1564 : 			goto music_read_100;

  00c90	89 04 95 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[edx*4+4], eax
  00c97	89 b4 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], esi
  00c9e	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00ca4	e9 d7 f8 ff ff	 jmp	 $music_read_100$496
$LN184@music_read:

; 1559 : 				step[ch][ch_p[ch]++] = -d6;
; 1560 : 			}
; 1561 : 			else {
; 1562 : 				step[ch][ch_p[ch]++] = -10000;

  00ca9	b8 f0 d8 ff ff	 mov	 eax, -10000		; ffffd8f0H

; 1563 : 			}
; 1564 : 			goto music_read_100;

  00cae	89 04 95 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[edx*4+4], eax
  00cb5	89 b4 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], esi
  00cbc	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00cc2	e9 b9 f8 ff ff	 jmp	 $music_read_100$496
$LN186@music_read:

; 1565 : 		case '@':		//?????
; 1566 : 			d0 = f_get(fp);		//????î?î?

  00cc7	56		 push	 esi
  00cc8	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00ccd	83 c4 04	 add	 esp, 4

; 1567 : 
; 1568 : 			if (d0 >= '0' && d0 <= '9') {		//???

  00cd0	8d 48 d0	 lea	 ecx, DWORD PTR [eax-48]
  00cd3	83 f9 09	 cmp	 ecx, 9
  00cd6	77 5c		 ja	 SHORT $LN187@music_read

; 1569 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00cd8	6a 01		 push	 1
  00cda	6a ff		 push	 -1
  00cdc	56		 push	 esi
  00cdd	e8 00 00 00 00	 call	 _fseek

; 1570 : 				step[ch][ch_p[ch]++] = MUSIC_NEIRO_NO;		//?îî±????

  00ce2	8b b5 ac f3 ff
	ff		 mov	 esi, DWORD PTR _ch$1$[ebp]
  00ce8	8b bc bd 70 fe
	ff ff		 mov	 edi, DWORD PTR _ch_p$[ebp+edi*4]

; 1571 : 				step[ch][ch_p[ch]++] = get_num(fp) - 1;

  00cef	ff b5 bc f3 ff
	ff		 push	 DWORD PTR $T3[ebp]
  00cf5	c1 e6 0e	 shl	 esi, 14			; 0000000eH
  00cf8	8d 04 3e	 lea	 eax, DWORD PTR [esi+edi]
  00cfb	c7 04 85 00 00
	00 00 f7 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -9 ; fffffff7H
  00d06	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00d0b	8d 0c 37	 lea	 ecx, DWORD PTR [edi+esi]
  00d0e	83 c4 10	 add	 esp, 16			; 00000010H
  00d11	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00d17	48		 dec	 eax
  00d18	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], eax
  00d1f	8d 47 02	 lea	 eax, DWORD PTR [edi+2]
  00d22	8b bd ac f3 ff
	ff		 mov	 edi, DWORD PTR _ch$1$[ebp]
  00d28	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00d2f	e9 4c f8 ff ff	 jmp	 $music_read_100$496
$LN187@music_read:

; 1572 : 				goto music_read_100;
; 1573 : 			}
; 1574 : 
; 1575 : 			switch (d0) {

  00d34	83 c0 9c	 add	 eax, -100		; ffffff9cH
  00d37	83 f8 13	 cmp	 eax, 19			; 00000013H
  00d3a	0f 87 d6 06 00
	00		 ja	 $LN228@music_read
  00d40	0f b6 80 00 00
	00 00		 movzx	 eax, BYTE PTR $LN467@music_read[eax]
  00d47	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN468@music_read[eax*4]
$LN188@music_read:

; 1576 : 			case 'v':		//?????
; 1577 : 				d0 = f_get(fp);		//??î?î?

  00d4e	56		 push	 esi
  00d4f	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00d54	83 c4 04	 add	 esp, 4

; 1578 : 				if (d0 < '0' || d0> '9') {		//???

  00d57	83 f8 30	 cmp	 eax, 48			; 00000030H
  00d5a	0f 8c 77 06 00
	00		 jl	 $LN190@music_read
  00d60	83 f8 39	 cmp	 eax, 57			; 00000039H
  00d63	0f 8f 6e 06 00
	00		 jg	 $LN190@music_read

; 1579 : 					err_flg = M_V2COMMAND_ERR;
; 1580 : 					goto music_read_999;
; 1581 : 				}
; 1582 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00d69	6a 01		 push	 1
  00d6b	6a ff		 push	 -1
  00d6d	56		 push	 esi
  00d6e	e8 00 00 00 00	 call	 _fseek

; 1583 : 				d0 = get_num(fp);

  00d73	56		 push	 esi
  00d74	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00d79	83 c4 10	 add	 esp, 16			; 00000010H
  00d7c	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR _d0$30$[ebp], eax

; 1584 : 				if (d0 > 127) {		//???????

  00d82	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  00d85	0f 8f 4c 06 00
	00		 jg	 $LN190@music_read

; 1585 : 					err_flg = M_V2COMMAND_ERR;
; 1586 : 					goto music_read_999;
; 1587 : 				}
; 1588 : 				step[ch][ch_p[ch]++] = MUSIC_VOL;

  00d8b	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00d92	8b d7		 mov	 edx, edi
  00d94	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00d97	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00d9a	c7 04 8d 00 00
	00 00 fb ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -5 ; fffffffbH

; 1589 : #if 0
; 1590 : 				if (d0) {
; 1591 : 					d0 = 127 - d0;
; 1592 : 					//					d0 *= d0;
; 1593 : 					//					d0 = (int)((float)d0 * 0.61);
; 1594 : 					//					step[ch][ch_p[ch]++] = -d0;
; 1595 : 					d6 = d0;
; 1596 : 					d6 = d6 * d6 * d6;
; 1597 : 					d6 = (long)(10000.0 / (128.0 * 128.0 * 128.0) * d6);
; 1598 : 					step[ch][ch_p[ch]++] = -d6;
; 1599 : 				}
; 1600 : 				else {
; 1601 : 					step[ch][ch_p[ch]++] = -10000;
; 1602 : 				}
; 1603 : #else
; 1604 : 				//				d6=(long)(LOG(100,127)*10000) - (long)(LOG(100,(double)(d0))*10000);
; 1605 : 				//				step[ch][ch_p[ch]++] = -d6;
; 1606 : 
; 1607 : 				step[ch][ch_p[ch]++] = d0;
; 1608 : 
; 1609 : #endif
; 1610 : 				goto music_read_100;

  00da5	e9 ec 01 00 00	 jmp	 $LN494@music_read
$LN194@music_read:

; 1611 : 			case 'h':		//??
; 1612 : 				if (!num_check(fp)) {		//???????

  00daa	56		 push	 esi
  00dab	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  00db0	83 c4 04	 add	 esp, 4
  00db3	85 c0		 test	 eax, eax
  00db5	0f 84 23 06 00
	00		 je	 $LN341@music_read

; 1614 : 					goto music_read_999;
; 1615 : 				}
; 1616 : 				d0 = get_num(fp);

  00dbb	56		 push	 esi
  00dbc	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00dc1	8b f0		 mov	 esi, eax

; 1617 : 				step[ch][ch_p[ch]++] = MUSIC_LFO_H;

  00dc3	8b d7		 mov	 edx, edi
  00dc5	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  00dcc	83 c4 04	 add	 esp, 4
  00dcf	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00dd2	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  00dd5	c7 04 8d 00 00
	00 00 f0 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -16 ; fffffff0H

; 1618 : 				step[ch][ch_p[ch]++] = d0;

  00de0	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  00de3	83 c0 02	 add	 eax, 2
  00de6	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], esi
  00ded	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00df3	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00dfa	e9 81 f7 ff ff	 jmp	 $music_read_100$496
$LN197@music_read:

; 1619 : 				goto music_read_100;
; 1620 : 			case 'm':		//??
; 1621 : 				if (!num_check(fp)) {		//???????

  00dff	56		 push	 esi
  00e00	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  00e05	83 c4 04	 add	 esp, 4
  00e08	85 c0		 test	 eax, eax
  00e0a	0f 84 d5 05 00
	00		 je	 $LN342@music_read

; 1622 : 					err_flg = M_M2COMMAND_ERR;
; 1623 : 					goto music_read_999;
; 1624 : 				}
; 1625 : 				d0 = get_num(fp);

  00e10	56		 push	 esi
  00e11	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00e16	83 c4 04	 add	 esp, 4
  00e19	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR _d0$32$[ebp], eax

; 1626 : 				if (d0 > 127) {		//îª????

  00e1f	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  00e22	0f 8f bd 05 00
	00		 jg	 $LN342@music_read

; 1627 : 					err_flg = M_M2COMMAND_ERR;
; 1628 : 					goto music_read_999;
; 1629 : 				}
; 1630 : 				step[ch][ch_p[ch]++] = MUSIC_LFO_M;

  00e28	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00e2f	8b d7		 mov	 edx, edi
  00e31	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00e34	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00e37	c7 04 8d 00 00
	00 00 ef ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -17 ; ffffffefH

; 1631 : 				step[ch][ch_p[ch]++] = d0;
; 1632 : 				goto music_read_100;

  00e42	e9 4f 01 00 00	 jmp	 $LN494@music_read
$LN202@music_read:

; 1633 : 			case 's':		//??
; 1634 : 				if (!num_check2(fp)) {		//???????

  00e47	56		 push	 esi
  00e48	e8 00 00 00 00	 call	 ?num_check2@@YAHPAU_iobuf@@@Z ; num_check2
  00e4d	83 c4 04	 add	 esp, 4
  00e50	85 c0		 test	 eax, eax
  00e52	0f 84 94 05 00
	00		 je	 $LN344@music_read

; 1636 : 					goto music_read_999;
; 1637 : 				}
; 1638 : 				d0 = get_num2(fp);

  00e58	56		 push	 esi
  00e59	e8 00 00 00 00	 call	 ?get_num2@@YAHPAU_iobuf@@@Z ; get_num2
  00e5e	8b f0		 mov	 esi, eax

; 1639 : 				step[ch][ch_p[ch]++] = MUSIC_LFO_S;

  00e60	8b d7		 mov	 edx, edi
  00e62	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  00e69	83 c4 04	 add	 esp, 4
  00e6c	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00e6f	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  00e72	c7 04 8d 00 00
	00 00 ee ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -18 ; ffffffeeH

; 1640 : 				step[ch][ch_p[ch]++] = d0;

  00e7d	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  00e80	83 c0 02	 add	 eax, 2
  00e83	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], esi
  00e8a	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00e90	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00e97	e9 e4 f6 ff ff	 jmp	 $music_read_100$496
$LN205@music_read:

; 1641 : 				goto music_read_100;
; 1642 : 			case 'p':		//?????
; 1643 : 				d0 = f_get(fp);		//?î®?î?î?

  00e9c	56		 push	 esi
  00e9d	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00ea2	83 c4 04	 add	 esp, 4

; 1644 : 				if (d0 < '0' || d0 > '9') {		//???

  00ea5	83 f8 30	 cmp	 eax, 48			; 00000030H
  00ea8	0f 8c 45 05 00
	00		 jl	 $LN207@music_read
  00eae	83 f8 39	 cmp	 eax, 57			; 00000039H
  00eb1	0f 8f 3c 05 00
	00		 jg	 $LN207@music_read

; 1645 : 					err_flg = M_P2COMMAND_ERR;
; 1646 : 					goto music_read_999;
; 1647 : 				}
; 1648 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00eb7	6a 01		 push	 1
  00eb9	6a ff		 push	 -1
  00ebb	56		 push	 esi
  00ebc	e8 00 00 00 00	 call	 _fseek

; 1649 : 				d0 = get_num(fp);

  00ec1	56		 push	 esi
  00ec2	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00ec7	83 c4 10	 add	 esp, 16			; 00000010H
  00eca	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR _d0$35$[ebp], eax

; 1650 : 				if (d0 > 127) {		//îª??????

  00ed0	83 f8 7f	 cmp	 eax, 127		; 0000007fH
  00ed3	0f 8f 1a 05 00
	00		 jg	 $LN207@music_read

; 1651 : 					err_flg = M_P2COMMAND_ERR;
; 1652 : 					goto music_read_999;
; 1653 : 				}
; 1654 : 				step[ch][ch_p[ch]++] = MUSIC_PAN;

  00ed9	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00ee0	8b d7		 mov	 edx, edi
  00ee2	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00ee5	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00ee8	c7 04 8d 00 00
	00 00 fa ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -6 ; fffffffaH

; 1655 : 				step[ch][ch_p[ch]++] = d0;
; 1656 : 				goto music_read_100;

  00ef3	e9 9e 00 00 00	 jmp	 $LN494@music_read
$LN211@music_read:

; 1657 : 			case 'f':		//î«î¦?
; 1658 : 				if (!num_check2(fp)) {		//???????

  00ef8	56		 push	 esi
  00ef9	e8 00 00 00 00	 call	 ?num_check2@@YAHPAU_iobuf@@@Z ; num_check2
  00efe	83 c4 04	 add	 esp, 4
  00f01	85 c0		 test	 eax, eax
  00f03	0f 84 f1 04 00
	00		 je	 $LN347@music_read

; 1660 : 					goto music_read_999;
; 1661 : 				}
; 1662 : 				d0 = get_num2(fp);

  00f09	56		 push	 esi
  00f0a	e8 00 00 00 00	 call	 ?get_num2@@YAHPAU_iobuf@@@Z ; get_num2
  00f0f	8b f0		 mov	 esi, eax

; 1663 : 				step[ch][ch_p[ch]++] = MUSIC_FREQ;

  00f11	8b d7		 mov	 edx, edi
  00f13	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  00f1a	83 c4 04	 add	 esp, 4
  00f1d	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00f20	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  00f23	c7 04 8d 00 00
	00 00 fc ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -4 ; fffffffcH

; 1664 : 				step[ch][ch_p[ch]++] = d0;

  00f2e	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  00f31	83 c0 02	 add	 eax, 2
  00f34	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], esi

; 1665 : 				goto music_read_100;

  00f3b	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00f41	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00f48	e9 33 f6 ff ff	 jmp	 $music_read_100$496
$LN214@music_read:

; 1666 : 			case 'k':		//î«î¦????
; 1667 : 				if (!num_check2(fp)) {		//???????

  00f4d	56		 push	 esi
  00f4e	e8 00 00 00 00	 call	 ?num_check2@@YAHPAU_iobuf@@@Z ; num_check2
  00f53	83 c4 04	 add	 esp, 4
  00f56	85 c0		 test	 eax, eax
  00f58	0f 84 a3 04 00
	00		 je	 $LN348@music_read

; 1668 : 					err_flg = M_K2COMMAND_ERR;
; 1669 : 					goto music_read_999;
; 1670 : 				}
; 1671 : 				d0 = get_num2(fp);

  00f5e	56		 push	 esi
  00f5f	e8 00 00 00 00	 call	 ?get_num2@@YAHPAU_iobuf@@@Z ; get_num2
  00f64	83 c4 04	 add	 esp, 4
  00f67	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR _d0$37$[ebp], eax

; 1672 : 				if (d0 > 64 || d0 < -64) {		//îª????

  00f6d	8d 48 40	 lea	 ecx, DWORD PTR [eax+64]
  00f70	81 f9 80 00 00
	00		 cmp	 ecx, 128		; 00000080H
  00f76	0f 87 85 04 00
	00		 ja	 $LN348@music_read

; 1673 : 					err_flg = M_K2COMMAND_ERR;
; 1674 : 					goto music_read_999;
; 1675 : 				}
; 1676 : 				step[ch][ch_p[ch]++] = MUSIC_DETUNE;

  00f7c	8b b4 bd 70 fe
	ff ff		 mov	 esi, DWORD PTR _ch_p$[ebp+edi*4]
  00f83	8b d7		 mov	 edx, edi
  00f85	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00f88	8d 0c 32	 lea	 ecx, DWORD PTR [edx+esi]
  00f8b	c7 04 8d 00 00
	00 00 f1 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -15 ; fffffff1H
$LN494@music_read:

; 1258 : #endif
; 1259 : 		}
; 1260 : 
; 1261 : 		//??????????  ???????îî  ??????????
; 1262 : 
; 1263 : 	music_read_100:
; 1264 : 		if ((d0 = f_get(fp)) == EOF)		//????î?î?

  00f96	8b 8d c0 f3 ff
	ff		 mov	 ecx, DWORD PTR _d0$37$[ebp]
$LN488@music_read:
  00f9c	8d 04 16	 lea	 eax, DWORD PTR [esi+edx]
  00f9f	89 0c 85 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4+4], ecx
  00fa6	8d 46 02	 lea	 eax, DWORD PTR [esi+2]
  00fa9	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  00faf	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  00fb6	e9 c5 f5 ff ff	 jmp	 $music_read_100$496
$LN220@music_read:

; 1677 : 				step[ch][ch_p[ch]++] = d0;
; 1678 : 				goto music_read_100;
; 1679 : 			case 'd':		//???????
; 1680 : 				d0 = f_get(fp);		//???????

  00fbb	56		 push	 esi
  00fbc	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1681 : 				if (d0 < '0' || d0> '9') {		//???

  00fc1	83 c0 d0	 add	 eax, -48		; ffffffd0H
  00fc4	83 c4 04	 add	 esp, 4
  00fc7	83 f8 09	 cmp	 eax, 9
  00fca	0f 87 38 04 00
	00		 ja	 $LN350@music_read

; 1683 : 					goto music_read_999;
; 1684 : 				}
; 1685 : 				fseek(fp, -1, SEEK_CUR);		//??????

  00fd0	6a 01		 push	 1
  00fd2	6a ff		 push	 -1
  00fd4	56		 push	 esi
  00fd5	e8 00 00 00 00	 call	 _fseek

; 1686 : 				d0 = get_num(fp);

  00fda	56		 push	 esi
  00fdb	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00fe0	8b f0		 mov	 esi, eax

; 1687 : 				step[ch][ch_p[ch]++] = MUSIC_PEDAL;

  00fe2	8b d7		 mov	 edx, edi
  00fe4	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  00feb	83 c4 10	 add	 esp, 16			; 00000010H
  00fee	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  00ff1	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  00ff4	c7 04 8d 00 00
	00 00 f8 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -8 ; fffffff8H

; 1688 : 				step[ch][ch_p[ch]++] = d0;

  00fff	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  01002	83 c0 02	 add	 eax, 2
  01005	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], esi

; 1689 : 				goto music_read_100;

  0100c	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  01012	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  01019	e9 62 f5 ff ff	 jmp	 $music_read_100$496
$LN224@music_read:

; 1690 : 			case 'w':		//???????
; 1691 : 				d0 = f_get(fp);		//???????

  0101e	56		 push	 esi
  0101f	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1692 : 				if (d0 < '0' || d0> '9') {		//???

  01024	83 c0 d0	 add	 eax, -48		; ffffffd0H
  01027	83 c4 04	 add	 esp, 4
  0102a	83 f8 09	 cmp	 eax, 9
  0102d	0f 87 dc 03 00
	00		 ja	 $LN351@music_read

; 1694 : 					goto music_read_999;
; 1695 : 				}
; 1696 : 				fseek(fp, -1, SEEK_CUR);		//??????

  01033	6a 01		 push	 1
  01035	6a ff		 push	 -1
  01037	56		 push	 esi
  01038	e8 00 00 00 00	 call	 _fseek

; 1697 : 				d0 = get_num(fp);

  0103d	56		 push	 esi
  0103e	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  01043	8b f0		 mov	 esi, eax

; 1698 : 				step[ch][ch_p[ch]++] = MUSIC_WAVE;

  01045	8b d7		 mov	 edx, edi
  01047	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  0104e	83 c4 10	 add	 esp, 16			; 00000010H
  01051	c1 e2 0e	 shl	 edx, 14			; 0000000eH
  01054	8d 0c 02	 lea	 ecx, DWORD PTR [edx+eax]
  01057	c7 04 8d 00 00
	00 00 f3 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4], -13 ; fffffff3H

; 1699 : 				step[ch][ch_p[ch]++] = d0;

  01062	8d 0c 10	 lea	 ecx, DWORD PTR [eax+edx]
  01065	83 c0 02	 add	 eax, 2
  01068	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], esi

; 1700 : 				goto music_read_100;

  0106f	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]
  01075	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  0107c	e9 ff f4 ff ff	 jmp	 $music_read_100$496
$LN230@music_read:

; 1703 : 				goto music_read_999;
; 1704 : 			}
; 1705 : 		case '[':		//???????
; 1706 : 			d0 = f_get(fp);		//????î?î?

  01081	56		 push	 esi
  01082	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01087	83 c4 04	 add	 esp, 4

; 1707 : 			switch (d0) {

  0108a	83 f8 64	 cmp	 eax, 100		; 00000064H
  0108d	0f 84 8a 00 00
	00		 je	 $LN240@music_read
  01093	83 f8 6c	 cmp	 eax, 108		; 0000006cH
  01096	0f 85 81 03 00
	00		 jne	 $LN353@music_read

; 1708 : 			case 'l':
; 1709 : 				d0 = f_get(fp);		//????î?î?

  0109c	56		 push	 esi
  0109d	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  010a2	83 c4 04	 add	 esp, 4

; 1710 : 				if (d0 != 'o') {

  010a5	83 f8 6f	 cmp	 eax, 111		; 0000006fH
  010a8	0f 85 6f 03 00
	00		 jne	 $LN353@music_read

; 1711 : 					err_flg = M_KAKKO_ERR;
; 1712 : 					goto music_read_999;
; 1713 : 				}
; 1714 : 				d0 = f_get(fp);		//????î?î?

  010ae	56		 push	 esi
  010af	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  010b4	83 c4 04	 add	 esp, 4

; 1715 : 				if (d0 != 'o') {

  010b7	83 f8 6f	 cmp	 eax, 111		; 0000006fH
  010ba	0f 85 5d 03 00
	00		 jne	 $LN353@music_read

; 1716 : 					err_flg = M_KAKKO_ERR;
; 1717 : 					goto music_read_999;
; 1718 : 				}
; 1719 : 				d0 = f_get(fp);		//????î?î?

  010c0	56		 push	 esi
  010c1	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  010c6	83 c4 04	 add	 esp, 4

; 1720 : 				if (d0 != 'p') {

  010c9	83 f8 70	 cmp	 eax, 112		; 00000070H
  010cc	0f 85 4b 03 00
	00		 jne	 $LN353@music_read

; 1721 : 					err_flg = M_KAKKO_ERR;
; 1722 : 					goto music_read_999;
; 1723 : 				}
; 1724 : 				d0 = f_get(fp);		//????î?î?

  010d2	56		 push	 esi
  010d3	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  010d8	83 c4 04	 add	 esp, 4

; 1725 : 				if (d0 != ']') {

  010db	83 f8 5d	 cmp	 eax, 93			; 0000005dH
  010de	0f 85 39 03 00
	00		 jne	 $LN353@music_read

; 1726 : 					err_flg = M_KAKKO_ERR;
; 1727 : 					goto music_read_999;
; 1728 : 				}
; 1729 : 				step[ch][ch_p[ch]++] = MUSIC_LOOP;

  010e4	8b 94 bd 70 fe
	ff ff		 mov	 edx, DWORD PTR _ch_p$[ebp+edi*4]
  010eb	8b cf		 mov	 ecx, edi
  010ed	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  010f0	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]

; 1730 : 				step[ch][ch_p[ch]++] = do_p[ch];

  010f3	03 ca		 add	 ecx, edx
  010f5	c7 04 85 00 00
	00 00 fd ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -3 ; fffffffdH
  01100	8b 84 bd f0 fb
	ff ff		 mov	 eax, DWORD PTR _do_p$[ebp+edi*4]
  01107	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], eax
  0110e	8d 42 02	 lea	 eax, DWORD PTR [edx+2]
  01111	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax

; 1731 : 				goto music_read_100;

  01118	e9 63 f4 ff ff	 jmp	 $music_read_100$496
$LN240@music_read:

; 1732 : 			case 'd':		//????îº
; 1733 : 				d0 = f_get(fp);		//????î?î?

  0111d	56		 push	 esi
  0111e	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01123	83 c4 04	 add	 esp, 4

; 1734 : 				if (d0 != 'o') {

  01126	83 f8 6f	 cmp	 eax, 111		; 0000006fH
  01129	0f 85 ee 02 00
	00		 jne	 $LN353@music_read

; 1735 : 					err_flg = M_KAKKO_ERR;
; 1736 : 					goto music_read_999;
; 1737 : 				}
; 1738 : 				d0 = f_get(fp);		//????î?î?

  0112f	56		 push	 esi
  01130	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01135	83 c4 04	 add	 esp, 4

; 1739 : 				if (d0 != ']') {

  01138	83 f8 5d	 cmp	 eax, 93			; 0000005dH
  0113b	0f 85 dc 02 00
	00		 jne	 $LN353@music_read

; 1740 : 					err_flg = M_KAKKO_ERR;
; 1741 : 					goto music_read_999;
; 1742 : 				}
; 1743 : 				do_p[ch] = ch_p[ch];		//??î???

  01141	8b 84 bd 70 fe
	ff ff		 mov	 eax, DWORD PTR _ch_p$[ebp+edi*4]
  01148	89 84 bd f0 fb
	ff ff		 mov	 DWORD PTR _do_p$[ebp+edi*4], eax

; 1744 : 				goto music_read_100;

  0114f	e9 2c f4 ff ff	 jmp	 $music_read_100$496
$LN247@music_read:

; 1745 : 			default:
; 1746 : 				err_flg = M_KAKKO_ERR;
; 1747 : 				goto music_read_999;
; 1748 : 			}
; 1749 : 		case '|':		//??î?????
; 1750 : 			d0 = f_get(fp);		//????î?î?

  01154	56		 push	 esi
  01155	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0115a	83 c4 04	 add	 esp, 4

; 1751 : 			if (d0 == ':') {		//??î??î¿?

  0115d	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  01160	0f 85 b1 00 00
	00		 jne	 $LN248@music_read

; 1752 : 				ch_kuri_lv[ch]++;		//?î??????

  01166	8b 84 bd 70 fd
	ff ff		 mov	 eax, DWORD PTR _ch_kuri_lv$[ebp+edi*4]
  0116d	40		 inc	 eax
  0116e	89 85 b4 f3 ff
	ff		 mov	 DWORD PTR tv2835[ebp], eax
  01174	89 84 bd 70 fd
	ff ff		 mov	 DWORD PTR _ch_kuri_lv$[ebp+edi*4], eax

; 1753 : 				if (ch_kuri_lv[ch] == 8) {		//??î?????

  0117b	83 f8 08	 cmp	 eax, 8
  0117e	0f 84 a0 02 00
	00		 je	 $LN359@music_read

; 1754 : 					err_flg = M_KURI_ERR;
; 1755 : 					goto music_read_999;
; 1756 : 				}
; 1757 : 				step[ch][ch_p[ch]++] = MUSIC_KURI_START;

  01184	8b 8c bd 70 fe
	ff ff		 mov	 ecx, DWORD PTR _ch_p$[ebp+edi*4]
  0118b	8b c7		 mov	 eax, edi
  0118d	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  01190	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR tv2994[ebp], eax
  01196	03 c1		 add	 eax, ecx

; 1758 : 				if (num_check(fp)) {		//???

  01198	56		 push	 esi
  01199	c7 04 85 00 00
	00 00 f4 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -12 ; fffffff4H
  011a4	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  011a7	89 85 c4 f3 ff
	ff		 mov	 DWORD PTR tv2993[ebp], eax
  011ad	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax
  011b4	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  011b9	83 c4 04	 add	 esp, 4
  011bc	85 c0		 test	 eax, eax
  011be	74 11		 je	 SHORT $LN252@music_read

; 1759 : 					step[ch][ch_p[ch]++] = get_num(fp);

  011c0	56		 push	 esi
  011c1	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  011c6	83 c4 04	 add	 esp, 4
  011c9	89 85 b8 f3 ff
	ff		 mov	 DWORD PTR $T2[ebp], eax

; 1760 : 				}

  011cf	eb 0a		 jmp	 SHORT $LN489@music_read
$LN252@music_read:

; 1761 : 				else {
; 1762 : 					step[ch][ch_p[ch]++] = 2;

  011d1	c7 85 b8 f3 ff
	ff 02 00 00 00	 mov	 DWORD PTR $T2[ebp], 2
$LN489@music_read:

; 1763 : 				}
; 1764 : 				ch_ret[ch_kuri_lv[ch]][ch] = ch_p[ch];

  011db	8b 95 c4 f3 ff
	ff		 mov	 edx, DWORD PTR tv2993[ebp]
  011e1	8b ca		 mov	 ecx, edx
  011e3	8b 85 c0 f3 ff
	ff		 mov	 eax, DWORD PTR tv2994[ebp]
  011e9	41		 inc	 ecx
  011ea	03 c2		 add	 eax, edx
  011ec	8b 95 b8 f3 ff
	ff		 mov	 edx, DWORD PTR $T2[ebp]
  011f2	89 14 85 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], edx
  011f9	8b 85 b4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2835[ebp]
  011ff	c1 e0 05	 shl	 eax, 5
  01202	03 c7		 add	 eax, edi
  01204	89 8c bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], ecx
  0120b	89 8c 85 c8 f3
	ff ff		 mov	 DWORD PTR _ch_ret$[ebp+eax*4], ecx

; 1765 : 			}

  01212	e9 69 f3 ff ff	 jmp	 $music_read_100$496
$LN248@music_read:

; 1766 : 			else {
; 1767 : 				fseek(fp, -1, SEEK_CUR);		//??????

  01217	6a 01		 push	 1
  01219	6a ff		 push	 -1
  0121b	56		 push	 esi
  0121c	e8 00 00 00 00	 call	 _fseek

; 1768 : 				step[ch][ch_p[ch]++] = MUSIC_KURI_SKIP;

  01221	8b 8c bd 70 fe
	ff ff		 mov	 ecx, DWORD PTR _ch_p$[ebp+edi*4]
  01228	8b c7		 mov	 eax, edi
  0122a	c1 e0 0e	 shl	 eax, 14			; 0000000eH
  0122d	83 c4 0c	 add	 esp, 12			; 0000000cH
  01230	03 c1		 add	 eax, ecx
  01232	41		 inc	 ecx
  01233	c7 04 85 00 00
	00 00 f5 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -11 ; fffffff5H

; 1769 : 				ch_skip[ch_kuri_lv[ch]][ch] = ch_p[ch];

  0123e	8b 84 bd 70 fd
	ff ff		 mov	 eax, DWORD PTR _ch_kuri_lv$[ebp+edi*4]
  01245	c1 e0 05	 shl	 eax, 5
  01248	03 c7		 add	 eax, edi
  0124a	89 8c 85 c8 f7
	ff ff		 mov	 DWORD PTR _ch_skip$[ebp+eax*4], ecx

; 1770 : 				ch_p[ch]++;

  01251	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  01254	89 84 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], eax

; 1771 : 			}
; 1772 : 			goto music_read_100;

  0125b	e9 20 f3 ff ff	 jmp	 $music_read_100$496
$LN254@music_read:

; 1773 : 
; 1774 : 		case ':':		//??î?î·?????
; 1775 : 			d0 = f_get(fp);		//????î?î?

  01260	56		 push	 esi
  01261	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01266	83 c4 04	 add	 esp, 4

; 1776 : 			if (d0 != '|') {		//??î?î·??

  01269	83 f8 7c	 cmp	 eax, 124		; 0000007cH
  0126c	0f 85 b2 01 00
	00		 jne	 $LN359@music_read

; 1777 : 				err_flg = M_KURI_ERR;
; 1778 : 				goto music_read_999;
; 1779 : 			}
; 1780 : 			step[ch][ch_p[ch]++] = MUSIC_KURI_RET;

  01272	8b 94 bd 70 fe
	ff ff		 mov	 edx, DWORD PTR _ch_p$[ebp+edi*4]
  01279	8b cf		 mov	 ecx, edi
  0127b	c1 e1 0e	 shl	 ecx, 14			; 0000000eH
  0127e	89 8d c4 f3 ff
	ff		 mov	 DWORD PTR tv2892[ebp], ecx
  01284	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]

; 1781 : 			step[ch][ch_p[ch]++] = ch_ret[ch_kuri_lv[ch]][ch];		//?î¿î¶?

  01287	03 ca		 add	 ecx, edx
  01289	c7 04 85 00 00
	00 00 f6 ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -10 ; fffffff6H
  01294	83 c2 02	 add	 edx, 2
  01297	8b 84 bd 70 fd
	ff ff		 mov	 eax, DWORD PTR _ch_kuri_lv$[ebp+edi*4]
  0129e	c1 e0 05	 shl	 eax, 5
  012a1	03 c7		 add	 eax, edi
  012a3	89 94 bd 70 fe
	ff ff		 mov	 DWORD PTR _ch_p$[ebp+edi*4], edx
  012aa	c1 e0 02	 shl	 eax, 2
  012ad	89 85 c0 f3 ff
	ff		 mov	 DWORD PTR tv2879[ebp], eax
  012b3	8b 84 05 c8 f3
	ff ff		 mov	 eax, DWORD PTR _ch_ret$[ebp+eax]
  012ba	89 04 8d 04 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[ecx*4+4], eax

; 1782 : 			if (ch_skip[ch_kuri_lv[ch]][ch] >= 0) {

  012c1	8b 8d c0 f3 ff
	ff		 mov	 ecx, DWORD PTR tv2879[ebp]
  012c7	8b 84 0d c8 f7
	ff ff		 mov	 eax, DWORD PTR _ch_skip$[ebp+ecx]
  012ce	85 c0		 test	 eax, eax
  012d0	78 25		 js	 SHORT $LN257@music_read

; 1783 : 				step[ch][ch_skip[ch_kuri_lv[ch]][ch]] = ch_p[ch];	//îîî¶?

  012d2	8b 85 c4 f3 ff
	ff		 mov	 eax, DWORD PTR tv2892[ebp]
  012d8	03 84 0d c8 f7
	ff ff		 add	 eax, DWORD PTR _ch_skip$[ebp+ecx]
  012df	8b b5 bc f3 ff
	ff		 mov	 esi, DWORD PTR $T3[ebp]

; 1784 : 				ch_skip[ch_kuri_lv[ch]][ch] = -1;

  012e5	c7 84 0d c8 f7
	ff ff ff ff ff
	ff		 mov	 DWORD PTR _ch_skip$[ebp+ecx], -1
  012f0	89 14 85 00 00
	00 00		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], edx
$LN257@music_read:

; 1785 : 			}
; 1786 : 			ch_kuri_lv[ch]--;		//?î??????

  012f7	ff 8c bd 70 fd
	ff ff		 dec	 DWORD PTR _ch_kuri_lv$[ebp+edi*4]

; 1787 : 			goto music_read_100;

  012fe	e9 7d f2 ff ff	 jmp	 $music_read_100$496
$LN305@music_read:

; 1267 : 		case '\n':		//??
; 1268 : 			break;
; 1269 : 		case '/':		//?????
; 1270 : 			while (1) {			//????????
; 1271 : 				d0 = f_get(fp);

  01303	56		 push	 esi
  01304	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01309	83 c4 04	 add	 esp, 4

; 1272 : 				if (d0 == '\n' || d0 == EOF)

  0130c	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0130f	74 13		 je	 SHORT $LN486@music_read
$LL21@music_read:
  01311	83 f8 ff	 cmp	 eax, -1
  01314	74 0e		 je	 SHORT $LN486@music_read

; 1267 : 		case '\n':		//??
; 1268 : 			break;
; 1269 : 		case '/':		//?????
; 1270 : 			while (1) {			//????????
; 1271 : 				d0 = f_get(fp);

  01316	56		 push	 esi
  01317	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0131c	83 c4 04	 add	 esp, 4

; 1272 : 				if (d0 == '\n' || d0 == EOF)

  0131f	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  01322	75 ed		 jne	 SHORT $LL21@music_read
$LN486@music_read:

; 1120 : 
; 1121 : 	//??????????  ?î¶?î¿  ??????????
; 1122 : 
; 1123 : 	while (1) {
; 1124 : 
; 1125 : 		//??????????  ????î±?îî  ??????????
; 1126 : 
; 1127 : 		err_line++;

  01324	8b bd a8 f3 ff
	ff		 mov	 edi, DWORD PTR _err_line$1$[ebp]
$LN361@music_read:
  0132a	47		 inc	 edi

; 1128 : 
; 1129 : 		if ((d0 = f_get(fp)) == EOF)		//????î±?î?î?

  0132b	56		 push	 esi
  0132c	89 bd a8 f3 ff
	ff		 mov	 DWORD PTR _err_line$1$[ebp], edi
  01332	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  01337	83 c4 04	 add	 esp, 4
  0133a	83 f8 ff	 cmp	 eax, -1
  0133d	0f 85 b4 ef ff
	ff		 jne	 $LL8@music_read
$LN459@music_read:

; 1791 : 			goto music_read_999;
; 1792 : 		}
; 1793 : 	}
; 1794 : 	for (d7 = 0; d7 < TRACK_MAX; d7++) {

  01343	33 c9		 xor	 ecx, ecx
  01345	8d 95 70 fe ff
	ff		 lea	 edx, DWORD PTR _ch_p$[ebp]
  0134b	0f 1f 44 00 00	 npad	 5
$LL36@music_read:

; 1795 : 		step[d7][ch_p[d7]] = MUSIC_END;

  01350	8b 02		 mov	 eax, DWORD PTR [edx]
  01352	8d 52 04	 lea	 edx, DWORD PTR [edx+4]
  01355	03 c1		 add	 eax, ecx
  01357	81 c1 00 40 00
	00		 add	 ecx, 16384		; 00004000H
  0135d	c7 04 85 00 00
	00 00 ff ff ff
	ff		 mov	 DWORD PTR ?step@@3PAY0EAAA@HA[eax*4], -1
  01368	81 f9 00 00 08
	00		 cmp	 ecx, 524288		; 00080000H
  0136e	7c e0		 jl	 SHORT $LL36@music_read

; 1796 : 	}
; 1797 : 	err_flg = 0;

  01370	56		 push	 esi
  01371	e8 00 00 00 00	 call	 _fclose
  01376	83 c4 04	 add	 esp, 4

; 1807 : 	else {
; 1808 : 		for (d7 = 0; d7 < TRACK_MAX; d7++) {

  01379	33 c0		 xor	 eax, eax
  0137b	33 ff		 xor	 edi, edi
  0137d	0f 1f 00	 npad	 3
$LL39@music_read:

; 1809 : 			if (ch_kuri_lv[d7] != -1) {

  01380	83 bc 85 70 fd
	ff ff ff	 cmp	 DWORD PTR _ch_kuri_lv$[ebp+eax*4], -1
  01388	8d 48 01	 lea	 ecx, DWORD PTR [eax+1]
  0138b	0f 85 cf 00 00
	00		 jne	 $LN375@music_read

; 1807 : 	else {
; 1808 : 		for (d7 = 0; d7 < TRACK_MAX; d7++) {

  01391	8b c1		 mov	 eax, ecx
  01393	83 f8 20	 cmp	 eax, 32			; 00000020H
  01396	7c e8		 jl	 SHORT $LL39@music_read

; 1809 : 			if (ch_kuri_lv[d7] != -1) {

  01398	e9 e3 00 00 00	 jmp	 $LN38@music_read
$LN365@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  0139d	bf 0e 00 00 00	 mov	 edi, 14			; 0000000eH
  013a2	e9 90 00 00 00	 jmp	 $LN452@music_read
$LN314@music_read:
  013a7	bf 11 00 00 00	 mov	 edi, 17			; 00000011H
  013ac	e9 86 00 00 00	 jmp	 $LN452@music_read
$LN366@music_read:
  013b1	bf 13 00 00 00	 mov	 edi, 19			; 00000013H
  013b6	e9 7c 00 00 00	 jmp	 $LN452@music_read
$LN325@music_read:
  013bb	bf 03 00 00 00	 mov	 edi, 3
  013c0	eb 75		 jmp	 SHORT $LN452@music_read
$LN327@music_read:
  013c2	bf 01 00 00 00	 mov	 edi, 1
  013c7	eb 6e		 jmp	 SHORT $LN452@music_read
$LN336@music_read:

; 1526 : 				err_flg = M_TCOMMAND_ERR;

  013c9	bf 04 00 00 00	 mov	 edi, 4

; 1798 : 
; 1799 : music_read_999:

  013ce	eb 67		 jmp	 SHORT $LN452@music_read
$LN180@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  013d0	bf 05 00 00 00	 mov	 edi, 5
  013d5	eb 60		 jmp	 SHORT $LN452@music_read
$LN190@music_read:
  013d7	bf 06 00 00 00	 mov	 edi, 6
  013dc	eb 59		 jmp	 SHORT $LN452@music_read
$LN341@music_read:

; 1613 : 					err_flg = M_H2COMMAND_ERR;

  013de	bf 18 00 00 00	 mov	 edi, 24			; 00000018H

; 1798 : 
; 1799 : music_read_999:

  013e3	eb 52		 jmp	 SHORT $LN452@music_read
$LN342@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  013e5	bf 19 00 00 00	 mov	 edi, 25			; 00000019H
  013ea	eb 4b		 jmp	 SHORT $LN452@music_read
$LN344@music_read:

; 1635 : 					err_flg = M_S2COMMAND_ERR;

  013ec	bf 1a 00 00 00	 mov	 edi, 26			; 0000001aH

; 1798 : 
; 1799 : music_read_999:

  013f1	eb 44		 jmp	 SHORT $LN452@music_read
$LN207@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  013f3	bf 07 00 00 00	 mov	 edi, 7
  013f8	eb 3d		 jmp	 SHORT $LN452@music_read
$LN347@music_read:

; 1659 : 					err_flg = M_F2COMMAND_ERR;

  013fa	bf 08 00 00 00	 mov	 edi, 8

; 1798 : 
; 1799 : music_read_999:

  013ff	eb 36		 jmp	 SHORT $LN452@music_read
$LN348@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  01401	bf 15 00 00 00	 mov	 edi, 21			; 00000015H
  01406	eb 2f		 jmp	 SHORT $LN452@music_read
$LN350@music_read:

; 1682 : 					err_flg = M_D2COMMAND_ERR;

  01408	bf 0c 00 00 00	 mov	 edi, 12			; 0000000cH

; 1798 : 
; 1799 : music_read_999:

  0140d	eb 28		 jmp	 SHORT $LN452@music_read
$LN351@music_read:

; 1693 : 					err_flg = M_W2COMMAND_ERR;

  0140f	bf 12 00 00 00	 mov	 edi, 18			; 00000012H

; 1798 : 
; 1799 : music_read_999:

  01414	eb 21		 jmp	 SHORT $LN452@music_read
$LN228@music_read:

; 1701 : 			default:
; 1702 : 				err_flg = M_2COMMAND_ERR;

  01416	bf 09 00 00 00	 mov	 edi, 9

; 1798 : 
; 1799 : music_read_999:

  0141b	eb 1a		 jmp	 SHORT $LN452@music_read
$LN353@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  0141d	bf 0a 00 00 00	 mov	 edi, 10			; 0000000aH
  01422	eb 13		 jmp	 SHORT $LN452@music_read
$LN359@music_read:
  01424	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  01429	eb 0c		 jmp	 SHORT $LN452@music_read
$LN258@music_read:

; 1788 : 
; 1789 : 		default:		//??????
; 1790 : 			err_flg = M_MML_ERR;

  0142b	bf 0b 00 00 00	 mov	 edi, 11			; 0000000bH

; 1798 : 
; 1799 : music_read_999:

  01430	eb 05		 jmp	 SHORT $LN452@music_read
$LN363@music_read:

; 1800 : 	fclose(fp);
; 1801 : 	if (err_flg) {
; 1802 : 		sprintf(moji, "ç¬¬ %d è¡ %s", err_line, err_msg[err_flg]);

  01432	bf 02 00 00 00	 mov	 edi, 2
$LN452@music_read:
  01437	56		 push	 esi
  01438	e8 00 00 00 00	 call	 _fclose
$music_read_999$497:
  0143d	ff 34 bd 00 00
	00 00		 push	 DWORD PTR ?err_msg@@3PAPADA[edi*4]
  01444	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0144a	ff b5 a8 f3 ff
	ff		 push	 DWORD PTR _err_line$1$[ebp]
  01450	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EFJNBEIB@?p?$KP?5?$CFd?5?z?$LM?5?$CFs@
  01455	50		 push	 eax
  01456	e8 00 00 00 00	 call	 _sprintf
  0145b	83 c4 14	 add	 esp, 20			; 00000014H

; 1803 : #ifdef  _STONDEBUG_
; 1804 : 		MessageBox(hWnd, moji, "Error", MB_OK);
; 1805 : #endif
; 1806 : 	}

  0145e	eb 20		 jmp	 SHORT $LN38@music_read
$LN375@music_read:

; 1810 : 				err_flg = M_KURISU_ERR;
; 1811 : 				sprintf(moji, "ç¬¬ %d é³è½¨ %s", d7 + 1, err_msg[err_flg]);

  01460	ff 35 40 00 00
	00		 push	 DWORD PTR ?err_msg@@3PAPADA+64
  01466	8d 85 f8 fe ff
	ff		 lea	 eax, DWORD PTR _moji$[ebp]
  0146c	bf 10 00 00 00	 mov	 edi, 16			; 00000010H
  01471	51		 push	 ecx
  01472	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MJJPGILB@?p?$KP?5?$CFd?5?k?e?$DP?5?$CFs@
  01477	50		 push	 eax
  01478	e8 00 00 00 00	 call	 _sprintf
  0147d	83 c4 10	 add	 esp, 16			; 00000010H
$LN38@music_read:

; 1812 : #ifdef  _STONDEBUG_
; 1813 : 				MessageBox(hWnd, moji, "Error", MB_OK);
; 1814 : #endif
; 1815 : 				break;
; 1816 : 			}
; 1817 : 		}
; 1818 : 	}
; 1819 : 	return err_flg;
; 1820 : }

  01480	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01483	8b c7		 mov	 eax, edi
  01485	5f		 pop	 edi
  01486	33 cd		 xor	 ecx, ebp
  01488	5e		 pop	 esi
  01489	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0148e	8b e5		 mov	 esp, ebp
  01490	5d		 pop	 ebp
  01491	8b e3		 mov	 esp, ebx
  01493	5b		 pop	 ebx
  01494	c3		 ret	 0
  01495	0f 1f 00	 npad	 3
$LN466@music_read:
  01498	00 00 00 00	 DD	 $LN486@music_read
  0149c	00 00 00 00	 DD	 $LN93@music_read
  014a0	00 00 00 00	 DD	 $LN305@music_read
  014a4	00 00 00 00	 DD	 $LN254@music_read
  014a8	00 00 00 00	 DD	 $LN149@music_read
  014ac	00 00 00 00	 DD	 $LN150@music_read
  014b0	00 00 00 00	 DD	 $LN186@music_read
  014b4	00 00 00 00	 DD	 $LN230@music_read
  014b8	00 00 00 00	 DD	 $LN159@music_read
  014bc	00 00 00 00	 DD	 $LN129@music_read
  014c0	00 00 00 00	 DD	 $LN143@music_read
  014c4	00 00 00 00	 DD	 $LN153@music_read
  014c8	00 00 00 00	 DD	 $LN138@music_read
  014cc	00 00 00 00	 DD	 $LN174@music_read
  014d0	00 00 00 00	 DD	 $LN178@music_read
  014d4	00 00 00 00	 DD	 $LN247@music_read
  014d8	00 00 00 00	 DD	 $LN258@music_read
$LN465@music_read:
  014dc	00		 DB	 0
  014dd	10		 DB	 16			; 00000010H
  014de	10		 DB	 16			; 00000010H
  014df	10		 DB	 16			; 00000010H
  014e0	10		 DB	 16			; 00000010H
  014e1	10		 DB	 16			; 00000010H
  014e2	10		 DB	 16			; 00000010H
  014e3	10		 DB	 16			; 00000010H
  014e4	10		 DB	 16			; 00000010H
  014e5	10		 DB	 16			; 00000010H
  014e6	10		 DB	 16			; 00000010H
  014e7	10		 DB	 16			; 00000010H
  014e8	10		 DB	 16			; 00000010H
  014e9	10		 DB	 16			; 00000010H
  014ea	10		 DB	 16			; 00000010H
  014eb	10		 DB	 16			; 00000010H
  014ec	10		 DB	 16			; 00000010H
  014ed	10		 DB	 16			; 00000010H
  014ee	10		 DB	 16			; 00000010H
  014ef	10		 DB	 16			; 00000010H
  014f0	10		 DB	 16			; 00000010H
  014f1	10		 DB	 16			; 00000010H
  014f2	10		 DB	 16			; 00000010H
  014f3	10		 DB	 16			; 00000010H
  014f4	10		 DB	 16			; 00000010H
  014f5	10		 DB	 16			; 00000010H
  014f6	10		 DB	 16			; 00000010H
  014f7	10		 DB	 16			; 00000010H
  014f8	10		 DB	 16			; 00000010H
  014f9	01		 DB	 1
  014fa	10		 DB	 16			; 00000010H
  014fb	10		 DB	 16			; 00000010H
  014fc	10		 DB	 16			; 00000010H
  014fd	10		 DB	 16			; 00000010H
  014fe	10		 DB	 16			; 00000010H
  014ff	10		 DB	 16			; 00000010H
  01500	10		 DB	 16			; 00000010H
  01501	02		 DB	 2
  01502	10		 DB	 16			; 00000010H
  01503	10		 DB	 16			; 00000010H
  01504	10		 DB	 16			; 00000010H
  01505	10		 DB	 16			; 00000010H
  01506	10		 DB	 16			; 00000010H
  01507	10		 DB	 16			; 00000010H
  01508	10		 DB	 16			; 00000010H
  01509	10		 DB	 16			; 00000010H
  0150a	10		 DB	 16			; 00000010H
  0150b	10		 DB	 16			; 00000010H
  0150c	03		 DB	 3
  0150d	10		 DB	 16			; 00000010H
  0150e	04		 DB	 4
  0150f	10		 DB	 16			; 00000010H
  01510	05		 DB	 5
  01511	10		 DB	 16			; 00000010H
  01512	06		 DB	 6
  01513	10		 DB	 16			; 00000010H
  01514	10		 DB	 16			; 00000010H
  01515	10		 DB	 16			; 00000010H
  01516	10		 DB	 16			; 00000010H
  01517	10		 DB	 16			; 00000010H
  01518	10		 DB	 16			; 00000010H
  01519	10		 DB	 16			; 00000010H
  0151a	10		 DB	 16			; 00000010H
  0151b	10		 DB	 16			; 00000010H
  0151c	10		 DB	 16			; 00000010H
  0151d	10		 DB	 16			; 00000010H
  0151e	10		 DB	 16			; 00000010H
  0151f	10		 DB	 16			; 00000010H
  01520	10		 DB	 16			; 00000010H
  01521	10		 DB	 16			; 00000010H
  01522	10		 DB	 16			; 00000010H
  01523	10		 DB	 16			; 00000010H
  01524	10		 DB	 16			; 00000010H
  01525	10		 DB	 16			; 00000010H
  01526	10		 DB	 16			; 00000010H
  01527	10		 DB	 16			; 00000010H
  01528	10		 DB	 16			; 00000010H
  01529	10		 DB	 16			; 00000010H
  0152a	10		 DB	 16			; 00000010H
  0152b	10		 DB	 16			; 00000010H
  0152c	10		 DB	 16			; 00000010H
  0152d	07		 DB	 7
  0152e	10		 DB	 16			; 00000010H
  0152f	10		 DB	 16			; 00000010H
  01530	10		 DB	 16			; 00000010H
  01531	10		 DB	 16			; 00000010H
  01532	10		 DB	 16			; 00000010H
  01533	08		 DB	 8
  01534	08		 DB	 8
  01535	08		 DB	 8
  01536	08		 DB	 8
  01537	08		 DB	 8
  01538	08		 DB	 8
  01539	08		 DB	 8
  0153a	10		 DB	 16			; 00000010H
  0153b	10		 DB	 16			; 00000010H
  0153c	10		 DB	 16			; 00000010H
  0153d	10		 DB	 16			; 00000010H
  0153e	09		 DB	 9
  0153f	10		 DB	 16			; 00000010H
  01540	10		 DB	 16			; 00000010H
  01541	0a		 DB	 10			; 0000000aH
  01542	10		 DB	 16			; 00000010H
  01543	0b		 DB	 11			; 0000000bH
  01544	0c		 DB	 12			; 0000000cH
  01545	10		 DB	 16			; 00000010H
  01546	0d		 DB	 13			; 0000000dH
  01547	10		 DB	 16			; 00000010H
  01548	0e		 DB	 14			; 0000000eH
  01549	10		 DB	 16			; 00000010H
  0154a	10		 DB	 16			; 00000010H
  0154b	10		 DB	 16			; 00000010H
  0154c	10		 DB	 16			; 00000010H
  0154d	10		 DB	 16			; 00000010H
  0154e	0f		 DB	 15			; 0000000fH
  0154f	90		 npad	 1
$LN468@music_read:
  01550	00 00 00 00	 DD	 $LN220@music_read
  01554	00 00 00 00	 DD	 $LN211@music_read
  01558	00 00 00 00	 DD	 $LN194@music_read
  0155c	00 00 00 00	 DD	 $LN214@music_read
  01560	00 00 00 00	 DD	 $LN197@music_read
  01564	00 00 00 00	 DD	 $LN205@music_read
  01568	00 00 00 00	 DD	 $LN202@music_read
  0156c	00 00 00 00	 DD	 $LN188@music_read
  01570	00 00 00 00	 DD	 $LN224@music_read
  01574	00 00 00 00	 DD	 $LN228@music_read
$LN467@music_read:
  01578	00		 DB	 0
  01579	09		 DB	 9
  0157a	01		 DB	 1
  0157b	09		 DB	 9
  0157c	02		 DB	 2
  0157d	09		 DB	 9
  0157e	09		 DB	 9
  0157f	03		 DB	 3
  01580	09		 DB	 9
  01581	04		 DB	 4
  01582	09		 DB	 9
  01583	09		 DB	 9
  01584	05		 DB	 5
  01585	09		 DB	 9
  01586	09		 DB	 9
  01587	06		 DB	 6
  01588	09		 DB	 9
  01589	09		 DB	 9
  0158a	07		 DB	 7
  0158b	08		 DB	 8
?music_read@@YAHXZ ENDP					; music_read
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?get_step@@YAHPAU_iobuf@@H@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
_ch$ = 12						; size = 4
?get_step@@YAHPAU_iobuf@@H@Z PROC			; get_step, COMDAT

; 1030 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	57		 push	 edi

; 1031 : 	int d0, futen, total;
; 1032 : 	total = 0;
; 1033 : 	futen = 0;

  00006	8b 7d 08	 mov	 edi, DWORD PTR _fp$[ebp]
  00009	33 f6		 xor	 esi, esi
  0000b	33 db		 xor	 ebx, ebx
  0000d	0f 1f 00	 npad	 3
$LL2@get_step:

; 1034 : 	while (1) {
; 1035 : 		d0 = f_get(fp);		//???î?î?

  00010	57		 push	 edi
  00011	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00016	8b c8		 mov	 ecx, eax
  00018	83 c4 04	 add	 esp, 4

; 1036 : 		if (d0 >= '0' && d0 <= '9') {		//????

  0001b	8d 41 d0	 lea	 eax, DWORD PTR [ecx-48]
  0001e	83 f8 09	 cmp	 eax, 9
  00021	77 2f		 ja	 SHORT $LN4@get_step

; 1037 : 			fseek(fp, -1, SEEK_CUR);		//??????

  00023	6a 01		 push	 1
  00025	6a ff		 push	 -1
  00027	57		 push	 edi
  00028	e8 00 00 00 00	 call	 _fseek

; 1038 : 			d0 = get_num(fp);

  0002d	57		 push	 edi
  0002e	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  00033	8b c8		 mov	 ecx, eax
  00035	83 c4 10	 add	 esp, 16			; 00000010H

; 1039 : 			if (d0 > 192)

  00038	81 f9 c0 00 00
	00		 cmp	 ecx, 192		; 000000c0H
  0003e	0f 8f dd 00 00
	00		 jg	 $LN27@get_step

; 1040 : 				return -1;
; 1041 : 			futen = 192 / d0;

  00044	b8 c0 00 00 00	 mov	 eax, 192		; 000000c0H
  00049	99		 cdq
  0004a	f7 f9		 idiv	 ecx
  0004c	8b d8		 mov	 ebx, eax

; 1042 : 			total += futen;

  0004e	03 f3		 add	 esi, ebx

; 1043 : 		}

  00050	eb be		 jmp	 SHORT $LL2@get_step
$LN4@get_step:

; 1044 : 		else if (d0 == '.') {		//îî??

  00052	83 f9 2e	 cmp	 ecx, 46			; 0000002eH
  00055	75 1d		 jne	 SHORT $LN7@get_step

; 1045 : 			if (!total) {		//????îî????

  00057	85 f6		 test	 esi, esi
  00059	75 0c		 jne	 SHORT $LN9@get_step

; 1046 : 				total = step_def[ch];		//îî?????

  0005b	8b 45 0c	 mov	 eax, DWORD PTR _ch$[ebp]
  0005e	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?step_def@@3PAHA[eax*4]

; 1047 : 				futen = step_def[ch];		//

  00065	8b de		 mov	 ebx, esi
$LN9@get_step:

; 1048 : 			}
; 1049 : 			futen /= 2;

  00067	8b c3		 mov	 eax, ebx
  00069	99		 cdq
  0006a	2b c2		 sub	 eax, edx
  0006c	8b d8		 mov	 ebx, eax
  0006e	d1 fb		 sar	 ebx, 1

; 1050 : 			total += futen;

  00070	03 f3		 add	 esi, ebx

; 1051 : 		}

  00072	eb 9c		 jmp	 SHORT $LL2@get_step
$LN7@get_step:

; 1052 : 		else if (d0 == '^') {		//??î????

  00074	83 f9 5e	 cmp	 ecx, 94			; 0000005eH
  00077	75 62		 jne	 SHORT $LN10@get_step

; 1053 : 			d0 = f_get(fp);		//???î?î?

  00079	57		 push	 edi
  0007a	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1054 : 			fseek(fp, -1, SEEK_CUR);		//??????

  0007f	6a 01		 push	 1
  00081	6a ff		 push	 -1
  00083	ff 75 08	 push	 DWORD PTR _fp$[ebp]
  00086	8b f8		 mov	 edi, eax
  00088	e8 00 00 00 00	 call	 _fseek
  0008d	83 c4 10	 add	 esp, 16			; 00000010H

; 1055 : 			if (d0 == '*') {		//îî?î??

  00090	83 ff 2a	 cmp	 edi, 42			; 0000002aH
  00093	8b 7d 08	 mov	 edi, DWORD PTR _fp$[ebp]
  00096	0f 84 74 ff ff
	ff		 je	 $LL2@get_step

; 1056 : 				continue;
; 1057 : 			}
; 1058 : 			if (!num_check(fp)) {		//???????

  0009c	57		 push	 edi
  0009d	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  000a2	83 c4 04	 add	 esp, 4
  000a5	85 c0		 test	 eax, eax
  000a7	74 78		 je	 SHORT $LN27@get_step

; 1059 : 				return -1;		//???
; 1060 : 			}
; 1061 : 			d0 = get_num(fp);

  000a9	57		 push	 edi
  000aa	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  000af	8b c8		 mov	 ecx, eax
  000b1	83 c4 04	 add	 esp, 4

; 1062 : 			if (d0 > 192)

  000b4	81 f9 c0 00 00
	00		 cmp	 ecx, 192		; 000000c0H
  000ba	7f 65		 jg	 SHORT $LN27@get_step

; 1063 : 				return -1;
; 1064 : 			if (!total) {		//????îî????

  000bc	85 f6		 test	 esi, esi
  000be	75 0a		 jne	 SHORT $LN32@get_step

; 1065 : 				total = step_def[ch];		//îî?????

  000c0	8b 45 0c	 mov	 eax, DWORD PTR _ch$[ebp]
  000c3	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?step_def@@3PAHA[eax*4]
$LN32@get_step:

; 1066 : 			}
; 1067 : 			futen = 192 / d0;

  000ca	b8 c0 00 00 00	 mov	 eax, 192		; 000000c0H
  000cf	99		 cdq
  000d0	f7 f9		 idiv	 ecx
  000d2	8b d8		 mov	 ebx, eax

; 1068 : 			total += futen;

  000d4	03 f3		 add	 esi, ebx

; 1069 : 		}

  000d6	e9 35 ff ff ff	 jmp	 $LL2@get_step
$LN10@get_step:

; 1070 : 		else if (d0 == '*') {		//îî?î??

  000db	83 f9 2a	 cmp	 ecx, 42			; 0000002aH
  000de	75 1f		 jne	 SHORT $LN16@get_step

; 1071 : 			if (!num_check(fp)) {		//???????

  000e0	57		 push	 edi
  000e1	e8 00 00 00 00	 call	 ?num_check@@YAHPAU_iobuf@@@Z ; num_check
  000e6	83 c4 04	 add	 esp, 4
  000e9	85 c0		 test	 eax, eax
  000eb	74 34		 je	 SHORT $LN27@get_step

; 1072 : 				return -1;		//???
; 1073 : 			}
; 1074 : 			futen = get_num(fp);

  000ed	57		 push	 edi
  000ee	e8 00 00 00 00	 call	 ?get_num@@YAHPAU_iobuf@@@Z ; get_num
  000f3	8b d8		 mov	 ebx, eax
  000f5	83 c4 04	 add	 esp, 4

; 1075 : 			total += futen;

  000f8	03 f3		 add	 esi, ebx

; 1076 : 		}

  000fa	e9 11 ff ff ff	 jmp	 $LL2@get_step
$LN16@get_step:

; 1077 : 		else {
; 1078 : 			fseek(fp, -1, SEEK_CUR);		//??????

  000ff	6a 01		 push	 1
  00101	6a ff		 push	 -1
  00103	57		 push	 edi
  00104	e8 00 00 00 00	 call	 _fseek
  00109	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1079 : 			if (total)		//????îî????

  0010c	85 f6		 test	 esi, esi
  0010e	75 19		 jne	 SHORT $LN28@get_step

; 1080 : 				break;
; 1081 : 			futen = step_def[ch];

  00110	8b 45 0c	 mov	 eax, DWORD PTR _ch$[ebp]
  00113	8b 1c 85 00 00
	00 00		 mov	 ebx, DWORD PTR ?step_def@@3PAHA[eax*4]

; 1082 : 			total = futen;

  0011a	8b f3		 mov	 esi, ebx

; 1083 : 		}
; 1084 : 	}

  0011c	e9 ef fe ff ff	 jmp	 $LL2@get_step
$LN27@get_step:
  00121	5f		 pop	 edi

; 1086 : }

  00122	5e		 pop	 esi
  00123	83 c8 ff	 or	 eax, -1
  00126	5b		 pop	 ebx
  00127	5d		 pop	 ebp
  00128	c3		 ret	 0
$LN28@get_step:
  00129	5f		 pop	 edi

; 1085 : 	return total;

  0012a	8b c6		 mov	 eax, esi

; 1086 : }

  0012c	5e		 pop	 esi
  0012d	5b		 pop	 ebx
  0012e	5d		 pop	 ebp
  0012f	c3		 ret	 0
?get_step@@YAHPAU_iobuf@@H@Z ENDP			; get_step
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?num_check2@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
?num_check2@@YAHPAU_iobuf@@@Z PROC			; num_check2, COMDAT

; 993  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 994  : 	int d0;
; 995  : 	d0 = f_get(fp);		//????î?î?

  00005	8b 7d 08	 mov	 edi, DWORD PTR _fp$[ebp]
  00008	57		 push	 edi
  00009	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0000e	8b f0		 mov	 esi, eax
  00010	83 c4 04	 add	 esp, 4

; 996  : 	if (d0 == '-') {			//??????

  00013	83 fe 2d	 cmp	 esi, 45			; 0000002dH
  00016	75 17		 jne	 SHORT $LN2@num_check2

; 997  : 		d0 = fgetc(fp);		//???????î?î?

  00018	57		 push	 edi
  00019	e8 00 00 00 00	 call	 _fgetc

; 998  : 		fseek(fp, -2, SEEK_CUR);		//??????

  0001e	6a 01		 push	 1
  00020	6a fe		 push	 -2			; fffffffeH
  00022	57		 push	 edi
  00023	8b f0		 mov	 esi, eax
  00025	e8 00 00 00 00	 call	 _fseek
  0002a	83 c4 10	 add	 esp, 16			; 00000010H
  0002d	eb 0d		 jmp	 SHORT $LN11@num_check2
$LN2@num_check2:

; 999  : 		if (d0 >= '0' && d0 <= '9')		//???
; 1000 : 			return 1;		//??
; 1001 : 		else
; 1002 : 			return 0;		//???
; 1003 : 	}
; 1004 : 	else {
; 1005 : 		fseek(fp, -1, SEEK_CUR);		//??????

  0002f	6a 01		 push	 1
  00031	6a ff		 push	 -1
  00033	57		 push	 edi
  00034	e8 00 00 00 00	 call	 _fseek
  00039	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN11@num_check2:

; 1006 : 		if (d0 >= '0' && d0 <= '9')		//???
; 1007 : 			return 1;		//??

  0003c	8d 46 d0	 lea	 eax, DWORD PTR [esi-48]
  0003f	83 f8 09	 cmp	 eax, 9
  00042	77 09		 ja	 SHORT $LN6@num_check2
  00044	5f		 pop	 edi
  00045	b8 01 00 00 00	 mov	 eax, 1

; 1010 : 	}
; 1011 : }

  0004a	5e		 pop	 esi
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
$LN6@num_check2:
  0004d	5f		 pop	 edi

; 1008 : 		else
; 1009 : 			return 0;		//???

  0004e	33 c0		 xor	 eax, eax

; 1010 : 	}
; 1011 : }

  00050	5e		 pop	 esi
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?num_check2@@YAHPAU_iobuf@@@Z ENDP			; num_check2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?get_num2@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
?get_num2@@YAHPAU_iobuf@@@Z PROC			; get_num2, COMDAT

; 960  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx
  00004	56		 push	 esi

; 961  : 	int d0, d1, d2 = 1;
; 962  : 	d0 = f_get(fp);		//????î?î?

  00005	8b 75 08	 mov	 esi, DWORD PTR _fp$[ebp]
  00008	bb 01 00 00 00	 mov	 ebx, 1
  0000d	56		 push	 esi
  0000e	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00013	83 c4 04	 add	 esp, 4

; 963  : 	if (d0 == '-')		//??????

  00016	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00019	75 05		 jne	 SHORT $LN6@get_num2

; 964  : 		d2 = -1;

  0001b	83 cb ff	 or	 ebx, -1
  0001e	eb 0d		 jmp	 SHORT $LN15@get_num2
$LN6@get_num2:

; 965  : 	else
; 966  : 		fseek(fp, -1, SEEK_CUR);		//??????

  00020	6a 01		 push	 1
  00022	6a ff		 push	 -1
  00024	56		 push	 esi
  00025	e8 00 00 00 00	 call	 _fseek
  0002a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN15@get_num2:

; 967  : 
; 968  : 	while (1) {
; 969  : 		d0 = fgetc(fp);		//????î±?î?î?

  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 _fgetc
  00033	83 c4 04	 add	 esp, 4

; 970  : 		if (d0 == EOF)

  00036	83 f8 ff	 cmp	 eax, -1
  00039	74 69		 je	 SHORT $LN1@get_num2
  0003b	0f 1f 44 00 00	 npad	 5
$LL2@get_num2:

; 971  : 			return d0;
; 972  : 		if (d0 >= '0' && d0 <= '9')		//???

  00040	83 f8 30	 cmp	 eax, 48			; 00000030H
  00043	7c 05		 jl	 SHORT $LN9@get_num2
  00045	83 f8 39	 cmp	 eax, 57			; 00000039H
  00048	7e 12		 jle	 SHORT $LN18@get_num2
$LN9@get_num2:

; 967  : 
; 968  : 	while (1) {
; 969  : 		d0 = fgetc(fp);		//????î±?î?î?

  0004a	56		 push	 esi
  0004b	e8 00 00 00 00	 call	 _fgetc
  00050	83 c4 04	 add	 esp, 4

; 970  : 		if (d0 == EOF)

  00053	83 f8 ff	 cmp	 eax, -1
  00056	75 e8		 jne	 SHORT $LL2@get_num2

; 988  : }

  00058	5e		 pop	 esi
  00059	5b		 pop	 ebx
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
$LN18@get_num2:
  0005c	57		 push	 edi

; 973  : 			break;						//??????
; 974  : 	}
; 975  : 	d1 = d0 - '0';		//?????
; 976  : 
; 977  : 	while (1) {
; 978  : 		d0 = fgetc(fp);		//????î±?î?î?

  0005d	56		 push	 esi
  0005e	8d 78 d0	 lea	 edi, DWORD PTR [eax-48]
  00061	e8 00 00 00 00	 call	 _fgetc
  00066	8b d0		 mov	 edx, eax
  00068	83 c4 04	 add	 esp, 4

; 979  : 		if (d0 == EOF)

  0006b	83 fa ff	 cmp	 edx, -1
  0006e	74 21		 je	 SHORT $LN26@get_num2
$LL4@get_num2:

; 980  : 			break;
; 981  : 		if (d0 < '0' || d0> '9')		//???

  00070	8d 4a d0	 lea	 ecx, DWORD PTR [edx-48]
  00073	83 f9 09	 cmp	 ecx, 9
  00076	77 19		 ja	 SHORT $LN26@get_num2

; 982  : 			break;						//?????????
; 983  : 		d1 *= 10;		//???????

  00078	8d 47 fa	 lea	 eax, DWORD PTR [edi-6]
  0007b	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  0007e	56		 push	 esi
  0007f	8d 3c 42	 lea	 edi, DWORD PTR [edx+eax*2]
  00082	e8 00 00 00 00	 call	 _fgetc
  00087	8b d0		 mov	 edx, eax
  00089	83 c4 04	 add	 esp, 4
  0008c	83 fa ff	 cmp	 edx, -1
  0008f	75 df		 jne	 SHORT $LL4@get_num2
$LN26@get_num2:

; 984  : 		d1 += d0 - '0';	//
; 985  : 	}
; 986  : 	fseek(fp, -1, SEEK_CUR);		//??????

  00091	6a 01		 push	 1
  00093	6a ff		 push	 -1
  00095	56		 push	 esi
  00096	e8 00 00 00 00	 call	 _fseek
  0009b	83 c4 0c	 add	 esp, 12			; 0000000cH

; 987  : 	return d1 * d2;

  0009e	0f af fb	 imul	 edi, ebx
  000a1	8b c7		 mov	 eax, edi
  000a3	5f		 pop	 edi
$LN1@get_num2:

; 988  : }

  000a4	5e		 pop	 esi
  000a5	5b		 pop	 ebx
  000a6	5d		 pop	 ebp
  000a7	c3		 ret	 0
?get_num2@@YAHPAU_iobuf@@@Z ENDP			; get_num2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?EndApp@@YAHXZ
_TEXT	SEGMENT
?EndApp@@YAHXZ PROC					; EndApp, COMDAT

; 695  : 	int d7;
; 696  : 
; 697  : 	//JL 2017/9/6 add å ä¸ºæ¸¸æå¯å¨çæ¶åå·²ç»åå§äº,å¶ä½å½æ°å¯è½å¨æ­æ¾å£°é³,ç´æ¥å±è½å£°é³è°ç¨EndAppçè¯,å½æ°å°ç¸å³æéreleaseäº,å°±ä¼æééè¯¯
; 698  : 	//å¶ä½ç¸å³å½æ°æå¯¹dsound_flgçå¤æ­, å æ­¤å°dsound_flgç½®ä¸º-1,é¿åå¶æééè¯¯
; 699  : 	dsound_flg = -1;
; 700  : 	if (pDSound == NULL) return true;

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pDSound@@3PAUIDirectSound@@A, 0 ; pDSound
  00007	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00011	0f 84 e0 00 00
	00		 je	 $LN30@EndApp

; 701  : 
; 702  : 
; 703  : 	//????îî?
; 704  : 	stop_thread();

  00017	e8 00 00 00 00	 call	 ?stop_thread@@YAXXZ	; stop_thread

; 705  : 	RELEASE(pDSData_tone[TONE_MAX]);

  0001c	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  00022	85 c9		 test	 ecx, ecx
  00024	74 10		 je	 SHORT $LN9@EndApp
  00026	8b 01		 mov	 eax, DWORD PTR [ecx]
  00028	51		 push	 ecx
  00029	ff 50 08	 call	 DWORD PTR [eax+8]
  0002c	c7 05 d0 07 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000, 0
$LN9@EndApp:

; 706  : 	//?î´????
; 707  : 	if (stream_flg == 1) {

  00036	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?stream_flg@@3DA, 1
  0003d	75 1a		 jne	 SHORT $LN11@EndApp

; 708  : 		RELEASE(pDSNotify);

  0003f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A
  00045	85 c9		 test	 ecx, ecx
  00047	74 10		 je	 SHORT $LN11@EndApp
  00049	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004b	51		 push	 ecx
  0004c	ff 50 08	 call	 DWORD PTR [eax+8]
  0004f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSNotify@@3PAUIDirectSoundNotify@@A, 0
$LN11@EndApp:

; 709  : 	}
; 710  : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  00059	56		 push	 esi
  0005a	be 00 00 00 00	 mov	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
  0005f	90		 npad	 1
$LL4@EndApp:

; 711  : 		pDSData[d7]->Stop();

  00060	8b 06		 mov	 eax, DWORD PTR [esi]
  00062	50		 push	 eax
  00063	8b 08		 mov	 ecx, DWORD PTR [eax]
  00065	ff 51 48	 call	 DWORD PTR [ecx+72]

; 712  : 		RELEASE(pDSData[d7]);

  00068	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0006a	85 c9		 test	 ecx, ecx
  0006c	74 0c		 je	 SHORT $LN2@EndApp
  0006e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00070	51		 push	 ecx
  00071	ff 50 08	 call	 DWORD PTR [eax+8]
  00074	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN2@EndApp:

; 709  : 	}
; 710  : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  0007a	83 c6 04	 add	 esi, 4
  0007d	81 fe 00 01 00
	00		 cmp	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A+256
  00083	7c db		 jl	 SHORT $LL4@EndApp

; 713  : 	}
; 714  : 	for (d7 = 0; d7 < tone_max_buf; d7++) {

  00085	33 f6		 xor	 esi, esi
  00087	39 35 00 00 00
	00		 cmp	 DWORD PTR ?tone_max_buf@@3HA, esi ; tone_max_buf
  0008d	7e 33		 jle	 SHORT $LN6@EndApp
  0008f	90		 npad	 1
$LL7@EndApp:

; 715  : 		pDSData_tone[d7]->Stop();

  00090	8b 04 b5 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  00097	50		 push	 eax
  00098	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009a	ff 51 48	 call	 DWORD PTR [ecx+72]

; 716  : 		RELEASE(pDSData_tone[d7]);

  0009d	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  000a4	85 c9		 test	 ecx, ecx
  000a6	74 11		 je	 SHORT $LN5@EndApp
  000a8	8b 01		 mov	 eax, DWORD PTR [ecx]
  000aa	51		 push	 ecx
  000ab	ff 50 08	 call	 DWORD PTR [eax+8]
  000ae	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4], 0
$LN5@EndApp:

; 713  : 	}
; 714  : 	for (d7 = 0; d7 < tone_max_buf; d7++) {

  000b9	46		 inc	 esi
  000ba	3b 35 00 00 00
	00		 cmp	 esi, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  000c0	7c ce		 jl	 SHORT $LL7@EndApp
$LN6@EndApp:

; 717  : 	}
; 718  : 	RELEASE(pDSPrimary);

  000c2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  000c8	5e		 pop	 esi
  000c9	85 c9		 test	 ecx, ecx
  000cb	74 10		 je	 SHORT $LN14@EndApp
  000cd	8b 01		 mov	 eax, DWORD PTR [ecx]
  000cf	51		 push	 ecx
  000d0	ff 50 08	 call	 DWORD PTR [eax+8]
  000d3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A, 0 ; pDSPrimary
$LN14@EndApp:

; 719  : 	RELEASE(pDSound);

  000dd	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  000e3	85 c9		 test	 ecx, ecx
  000e5	74 10		 je	 SHORT $LN30@EndApp
  000e7	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e9	51		 push	 ecx
  000ea	ff 50 08	 call	 DWORD PTR [eax+8]
  000ed	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSound@@3PAUIDirectSound@@A, 0 ; pDSound
$LN30@EndApp:

; 720  : 
; 721  : 	return TRUE;
; 722  : }

  000f7	b8 01 00 00 00	 mov	 eax, 1
  000fc	c3		 ret	 0
?EndApp@@YAHXZ ENDP					; EndApp
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?stop_thread@@YAXXZ
_TEXT	SEGMENT
?stop_thread@@YAXXZ PROC				; stop_thread, COMDAT

; 644  : 	//????îî??
; 645  : 	if (thread_stop_flg) {

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?thread_stop_flg@@3HA, 0
  00007	74 3f		 je	 SHORT $LN6@stop_threa

; 646  : 		//???îî
; 647  : 		pDSData_tone[TONE_MAX]->Stop();

  00009	a1 d0 07 00 00	 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  0000e	50		 push	 eax
  0000f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00011	ff 51 48	 call	 DWORD PTR [ecx+72]
$LL2@stop_threa:

; 648  : 		//		pDSData_stream->Stop();
; 649  : 		while (1) {
; 650  : 			if (exit_thread_flg == 1)

  00014	80 3d 00 00 00
	00 01		 cmp	 BYTE PTR ?exit_thread_flg@@3DC, 1
  0001b	75 f7		 jne	 SHORT $LL2@stop_threa

; 651  : 				break;
; 652  : 		}
; 653  : 		thread_stop_flg = 0;
; 654  : 		exit_thread_flg = 0;
; 655  : 		RELEASE(pDSData_stream);

  0001d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A ; pDSData_stream
  00023	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?thread_stop_flg@@3HA, 0
  0002d	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?exit_thread_flg@@3DC, 0
  00034	85 c9		 test	 ecx, ecx
  00036	74 10		 je	 SHORT $LN6@stop_threa
  00038	8b 01		 mov	 eax, DWORD PTR [ecx]
  0003a	51		 push	 ecx
  0003b	ff 50 08	 call	 DWORD PTR [eax+8]
  0003e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_stream@@3PAUIDirectSoundBuffer@@A, 0 ; pDSData_stream
$LN6@stop_threa:

; 656  : 	}
; 657  : 	//??????????î´
; 658  : 	RELEASE(pDSData_tone[TONE_MAX]);

  00048	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  0004e	85 c9		 test	 ecx, ecx
  00050	74 10		 je	 SHORT $LN7@stop_threa
  00052	8b 01		 mov	 eax, DWORD PTR [ecx]
  00054	51		 push	 ecx
  00055	ff 50 08	 call	 DWORD PTR [eax+8]
  00058	c7 05 d0 07 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000, 0
$LN7@stop_threa:

; 659  : }

  00062	c3		 ret	 0
?stop_thread@@YAXXZ ENDP				; stop_thread
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\systeminc\sndcnf.h
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?InitDSound@@YAHXZ
_TEXT	SEGMENT
_DataSize$ = -39860					; size = 4
_WaveSize$ = -39856					; size = 4
tv4164 = -39852						; size = 4
tv4184 = -39848						; size = 4
tv4174 = -39844						; size = 4
tv4169 = -39840						; size = 4
_d1$1$ = -39836						; size = 4
_dsbdesc$ = -39832					; size = 36
_Wfmtx$ = -39796					; size = 18
_pcmwf$ = -39776					; size = 18
_sndconfig$ = -39756					; size = 39552
_fname$ = -204						; size = 200
__$ArrayPad$ = -4					; size = 4
?InitDSound@@YAHXZ PROC					; InitDSound, COMDAT

; 388  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	b8 b4 9b 00 00	 mov	 eax, 39860		; 00009bb4H
  00008	e8 00 00 00 00	 call	 __chkstk
  0000d	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00012	33 c5		 xor	 eax, ebp
  00014	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00017	53		 push	 ebx
  00018	56		 push	 esi
  00019	57		 push	 edi

; 389  : 	HRESULT ret;
; 390  : 	int d7;
; 391  : 
; 392  : 	pDSound = NULL;

  0001a	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0001f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSound@@3PAUIDirectSound@@A, 0 ; pDSound
  00029	33 c0		 xor	 eax, eax

; 393  : 	pDSPrimary = NULL;

  0002b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A, 0 ; pDSPrimary
  00035	8b ca		 mov	 ecx, edx
  00037	bf 00 00 00 00	 mov	 edi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
  0003c	f3 ab		 rep stosd

; 394  : 	for (d7 = 0; d7 < VOICE_MAX; d7++)
; 395  : 		pDSData[d7] = NULL;
; 396  : 	for (d7 = 0; d7 < VOICE_MAX; d7++)
; 397  : 		dataPlay[d7] = FALSE;
; 398  : 
; 399  : 	ret = DirectSoundCreate(NULL, &pDSound, NULL);

  0003e	50		 push	 eax
  0003f	8b ca		 mov	 ecx, edx
  00041	bf 00 00 00 00	 mov	 edi, OFFSET ?dataPlay@@3PAHA ; dataPlay
  00046	68 00 00 00 00	 push	 OFFSET ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0004b	f3 ab		 rep stosd
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 _DirectSoundCreate@12

; 400  : 	if (ret != DS_OK) {

  00053	85 c0		 test	 eax, eax
  00055	0f 85 e6 44 00
	00		 jne	 $LN59@InitDSound

; 401  : #ifdef  _STONDEBUG_
; 402  : 		//    MessageBox(hWnd, "å»ºç«DirectSoundä»é¢å¤±è´¥ï¼", "Error", MB_OK);
; 403  : #endif
; 404  : 		return FALSE;
; 405  : 	}
; 406  : 	//????î????îî
; 407  : 	ret = pDSound->SetCooperativeLevel(hWnd, DSSCL_PRIORITY);

  0005b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  00060	6a 02		 push	 2
  00062	ff 35 00 00 00
	00		 push	 DWORD PTR ?hWnd@@3PAUHWND__@@A ; hWnd
  00068	8b 08		 mov	 ecx, DWORD PTR [eax]
  0006a	50		 push	 eax
  0006b	ff 51 18	 call	 DWORD PTR [ecx+24]

; 408  : 	if (ret != DS_OK) {

  0006e	85 c0		 test	 eax, eax
  00070	0f 85 b1 44 00
	00		 jne	 $LN67@InitDSound

; 409  : 		// ?î????îî?î§î²
; 410  : 		RELEASE(pDSound);
; 411  : #ifdef  _STONDEBUG_
; 412  : 		MessageBox(hWnd, "è®¾å®åè°ç­çº§å¤±è´¥ï¼", "Error", MB_OK);
; 413  : #endif
; 414  : 		return FALSE;
; 415  : 	}
; 416  : 	// ?????îî
; 417  : 	pDSound->SetSpeakerConfig(DSSPEAKER_COMBINED(DSSPEAKER_STEREO, DSSPEAKER_GEOMETRY_WIDE));

  00076	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0007b	68 04 00 14 00	 push	 1310724			; 00140004H
  00080	50		 push	 eax
  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	ff 51 24	 call	 DWORD PTR [ecx+36]

; 418  : 	// ????????????î
; 419  : 	// DSBUFFERDESC?î¨î?îî
; 420  : 	DSBUFFERDESC dsbdesc;
; 421  : 	ZeroMemory(&dsbdesc, sizeof(DSBUFFERDESC));
; 422  : 	dsbdesc.dwSize = sizeof(DSBUFFERDESC);
; 423  : 	// ???????????îî
; 424  : 	dsbdesc.dwFlags = DSBCAPS_PRIMARYBUFFER;
; 425  : 	dsbdesc.dwBufferBytes = 0;
; 426  : 	dsbdesc.lpwfxFormat = NULL;
; 427  : 	// ???????
; 428  : 	ret = pDSound->CreateSoundBuffer(&dsbdesc, &pDSPrimary, NULL);

  00086	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0008b	8d 95 68 64 ff
	ff		 lea	 edx, DWORD PTR _dsbdesc$[ebp]
  00091	6a 00		 push	 0
  00093	0f 57 c0	 xorps	 xmm0, xmm0
  00096	c7 85 74 64 ff
	ff 00 00 00 00	 mov	 DWORD PTR _dsbdesc$[ebp+12], 0
  000a0	68 00 00 00 00	 push	 OFFSET ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  000a5	66 0f 13 85 7c
	64 ff ff	 movlpd	 QWORD PTR _dsbdesc$[ebp+20], xmm0
  000ad	66 0f 13 85 84
	64 ff ff	 movlpd	 QWORD PTR _dsbdesc$[ebp+28], xmm0
  000b5	c7 85 68 64 ff
	ff 24 00 00 00	 mov	 DWORD PTR _dsbdesc$[ebp], 36 ; 00000024H
  000bf	c7 85 6c 64 ff
	ff 01 00 00 00	 mov	 DWORD PTR _dsbdesc$[ebp+4], 1
  000c9	c7 85 70 64 ff
	ff 00 00 00 00	 mov	 DWORD PTR _dsbdesc$[ebp+8], 0
  000d3	c7 85 78 64 ff
	ff 00 00 00 00	 mov	 DWORD PTR _dsbdesc$[ebp+16], 0
  000dd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000df	52		 push	 edx
  000e0	50		 push	 eax
  000e1	ff 51 0c	 call	 DWORD PTR [ecx+12]

; 429  : 	if (ret != DS_OK) {

  000e4	85 c0		 test	 eax, eax
  000e6	0f 85 55 44 00
	00		 jne	 $LN59@InitDSound

; 430  : #ifdef  _STONDEBUG_
; 431  : 		MessageBox(hWnd, "å»ºç«ä¸»è¦bufferå¤±è´¥ï¼", "Error", MB_OK);
; 432  : #endif
; 433  : 		return FALSE;
; 434  : 	}
; 435  : 	// ???????????Wave???????îî
; 436  : 	//       ?î?î????î¯??î????îî?????î§???????
; 437  : 	WAVEFORMATEX pcmwf;
; 438  : 	ZeroMemory(&pcmwf, sizeof(WAVEFORMATEX));
; 439  : 	pcmwf.wFormatTag = WAVE_FORMAT_PCM;

  000ec	8d 58 01	 lea	 ebx, DWORD PTR [eax+1]

; 440  : 	pcmwf.nChannels = 2;		// ????????????
; 441  : 	pcmwf.nSamplesPerSec = 22050;	// ??????????  22.05kHz
; 442  : 	pcmwf.nBlockAlign = 4;
; 443  : 	pcmwf.nAvgBytesPerSec = pcmwf.nSamplesPerSec * pcmwf.nBlockAlign;
; 444  : 	pcmwf.wBitsPerSample = 16;		// 16???

  000ef	c7 85 ae 64 ff
	ff 10 00 00 00	 mov	 DWORD PTR _pcmwf$[ebp+14], 16 ; 00000010H
  000f9	8d 70 02	 lea	 esi, DWORD PTR [eax+2]
  000fc	c7 85 a0 64 ff
	ff 01 00 02 00	 mov	 DWORD PTR _pcmwf$[ebp], 131073 ; 00020001H

; 445  : 	ret = pDSPrimary->SetFormat(&pcmwf);

  00106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  0010b	8d 95 a0 64 ff
	ff		 lea	 edx, DWORD PTR _pcmwf$[ebp]
  00111	bf 04 00 00 00	 mov	 edi, 4
  00116	c7 85 a4 64 ff
	ff 22 56 00 00	 mov	 DWORD PTR _pcmwf$[ebp+4], 22050 ; 00005622H
  00120	66 89 bd ac 64
	ff ff		 mov	 WORD PTR _pcmwf$[ebp+12], di
  00127	c7 85 a8 64 ff
	ff 88 58 01 00	 mov	 DWORD PTR _pcmwf$[ebp+8], 88200 ; 00015888H
  00131	8b 08		 mov	 ecx, DWORD PTR [eax]
  00133	52		 push	 edx
  00134	50		 push	 eax
  00135	ff 51 38	 call	 DWORD PTR [ecx+56]

; 446  : 	if (ret != DS_OK) {

  00138	85 c0		 test	 eax, eax
  0013a	0f 85 01 44 00
	00		 jne	 $LN59@InitDSound
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\systeminc\sndcnf.h

; 6    : 	{    1, "data\\se\\sap_01.wav", 85, 0, 0 /*, "a????îî?"*/ },

  00140	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@
  00147	a3 00 00 00 00	 mov	 DWORD PTR ?tone_max_buf@@3HA, eax ; tone_max_buf
  0014c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@+16
  00153	66 89 85 c6 64
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18], ax
  0015a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KCLMPBKD@data?2se?2sap_01?4wav@+18
  00161	68 b5 00 00 00	 push	 181			; 000000b5H
  00166	88 85 c8 64 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20], al
  0016c	8d 85 c9 64 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21]
  00172	6a 00		 push	 0
  00174	50		 push	 eax
  00175	66 89 9d b4 64
	ff ff		 mov	 WORD PTR _sndconfig$[ebp], bx
  0017c	0f 11 85 b6 64
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2], xmm0
  00183	e8 00 00 00 00	 call	 _memset

; 7    : 	{    2, "data\\se\\sap_02.wav", 85, 0, 0 /*, "a?????î ?"*/ },

  00188	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@+16
  0018f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@
  00196	66 89 85 94 65
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+224], ax
  0019d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CECIIDAN@data?2se?2sap_02?4wav@+18
  001a4	68 b5 00 00 00	 push	 181			; 000000b5H
  001a9	88 85 96 65 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+226], al
  001af	8d 85 97 65 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+227]
  001b5	6a 00		 push	 0
  001b7	50		 push	 eax
  001b8	66 c7 85 7e 65
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+202], 85 ; 00000055H
  001c1	c6 85 80 65 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+204], 0
  001c8	66 89 b5 82 65
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+206], si
  001cf	0f 11 85 84 65
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+208], xmm0
  001d6	e8 00 00 00 00	 call	 _memset

; 8    : 	{    3, "data\\se\\sap_03.wav", 85, 0, 0 /*, "a??????"*/ },

  001db	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@
  001e2	b8 03 00 00 00	 mov	 eax, 3
  001e7	66 c7 85 4c 66
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+408], 85 ; 00000055H
  001f0	66 89 85 50 66
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+412], ax
  001f7	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@+16
  001fe	66 89 85 62 66
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+430], ax
  00205	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OPHEFAKI@data?2se?2sap_03?4wav@+18
  0020c	68 b5 00 00 00	 push	 181			; 000000b5H
  00211	88 85 64 66 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+432], al
  00217	8d 85 65 66 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+433]
  0021d	6a 00		 push	 0
  0021f	50		 push	 eax
  00220	c6 85 4e 66 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+410], 0
  00227	0f 11 85 52 66
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+414], xmm0
  0022e	e8 00 00 00 00	 call	 _memset

; 9    : 	{    4, "data\\se\\sap_04.wav", 100, 0, 0 /*, "aî¢????"*/ },

  00233	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@+16
  0023a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@
  00241	66 89 85 30 67
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+636], ax
  00248	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PCHBGABA@data?2se?2sap_04?4wav@+18
  0024f	68 b5 00 00 00	 push	 181			; 000000b5H
  00254	88 85 32 67 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+638], al
  0025a	8d 85 33 67 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+639]
  00260	6a 00		 push	 0
  00262	50		 push	 eax
  00263	66 c7 85 1a 67
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+614], 85 ; 00000055H
  0026c	c6 85 1c 67 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+616], 0
  00273	66 89 bd 1e 67
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+618], di
  0027a	0f 11 85 20 67
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+620], xmm0
  00281	e8 00 00 00 00	 call	 _memset

; 10   : 	{    5, "data\\se\\sap_05.wav", 85, 0, 0 /*, "a????"*/ },

  00286	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@
  0028d	b8 05 00 00 00	 mov	 eax, 5
  00292	66 c7 85 e8 67
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+820], 100 ; 00000064H
  0029b	66 89 85 ec 67
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+824], ax
  002a2	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@+16
  002a9	66 89 85 fe 67
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+842], ax
  002b0	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DJCNLDLF@data?2se?2sap_05?4wav@+18
  002b7	68 b5 00 00 00	 push	 181			; 000000b5H
  002bc	88 85 00 68 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+844], al
  002c2	8d 85 01 68 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+845]
  002c8	6a 00		 push	 0
  002ca	50		 push	 eax
  002cb	c6 85 ea 67 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+822], 0
  002d2	0f 11 85 ee 67
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+826], xmm0
  002d9	e8 00 00 00 00	 call	 _memset

; 11   : 	{    6, "data\\se\\sap_06.wav", 60, 0, 0 /*, "a?î "*/ },

  002de	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@
  002e5	b8 06 00 00 00	 mov	 eax, 6
  002ea	66 c7 85 b6 68
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+1026], 85 ; 00000055H
  002f3	66 89 85 ba 68
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1030], ax
  002fa	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@+16
  00301	66 89 85 cc 68
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1048], ax
  00308	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LPLJMBBL@data?2se?2sap_06?4wav@+18
  0030f	c6 85 b8 68 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+1028], 0
  00316	0f 11 85 bc 68
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+1032], xmm0
  0031d	88 85 ce 68 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+1050], al
  00323	68 b5 00 00 00	 push	 181			; 000000b5H
  00328	8d 85 cf 68 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+1051]
  0032e	6a 00		 push	 0
  00330	50		 push	 eax
  00331	e8 00 00 00 00	 call	 _memset

; 12   : 	{    7, "data\\se\\sap_07.wav", 123, 0, 0 /*, "a??????"*/ },

  00336	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@
  0033d	b8 07 00 00 00	 mov	 eax, 7
  00342	66 c7 85 84 69
	ff ff 3c 00	 mov	 WORD PTR _sndconfig$[ebp+1232], 60 ; 0000003cH
  0034b	66 89 85 88 69
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1236], ax
  00352	83 c4 48	 add	 esp, 72			; 00000048H
  00355	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@+16
  0035c	66 89 85 9a 69
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1254], ax
  00363	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HEOFBCLO@data?2se?2sap_07?4wav@+18
  0036a	68 b5 00 00 00	 push	 181			; 000000b5H
  0036f	88 85 9c 69 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+1256], al
  00375	8d 85 9d 69 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+1257]
  0037b	6a 00		 push	 0
  0037d	50		 push	 eax
  0037e	c6 85 86 69 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+1234], 0
  00385	0f 11 85 8a 69
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+1238], xmm0
  0038c	e8 00 00 00 00	 call	 _memset

; 13   : 	{    8, "data\\se\\sap_08.wav", 80, 0, 0 /*, "?????"*/ },

  00391	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@
  00398	b8 08 00 00 00	 mov	 eax, 8
  0039d	66 c7 85 52 6a
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+1438], 123 ; 0000007bH
  003a6	66 89 85 56 6a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1442], ax
  003ad	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@+16
  003b4	66 89 85 68 6a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1460], ax
  003bb	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IFLDKAGL@data?2se?2sap_08?4wav@+18
  003c2	68 b5 00 00 00	 push	 181			; 000000b5H
  003c7	88 85 6a 6a ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+1462], al
  003cd	8d 85 6b 6a ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+1463]
  003d3	6a 00		 push	 0
  003d5	50		 push	 eax
  003d6	c6 85 54 6a ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+1440], 0
  003dd	0f 11 85 58 6a
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+1444], xmm0
  003e4	e8 00 00 00 00	 call	 _memset

; 14   : 	{    9, "data\\se\\sap_09.wav", 80, 0, 0 /*, "a??????"*/ },

  003e9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@
  003f0	b8 09 00 00 00	 mov	 eax, 9
  003f5	66 c7 85 20 6b
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+1644], 80 ; 00000050H
  003fe	66 89 85 24 6b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1648], ax
  00405	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@+16
  0040c	66 89 85 36 6b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1666], ax
  00413	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EOOPHDMO@data?2se?2sap_09?4wav@+18
  0041a	68 b5 00 00 00	 push	 181			; 000000b5H
  0041f	88 85 38 6b ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+1668], al
  00425	8d 85 39 6b ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+1669]
  0042b	6a 00		 push	 0
  0042d	50		 push	 eax
  0042e	c6 85 22 6b ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+1646], 0
  00435	0f 11 85 26 6b
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+1650], xmm0
  0043c	e8 00 00 00 00	 call	 _memset

; 15   : 	{   10, "data\\se\\sap_10.wav", 80, 0, 0 /*, "a???????"*/ },

  00441	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@
  00448	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  0044d	66 c7 85 ee 6b
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+1850], 80 ; 00000050H
  00456	66 89 85 f2 6b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1854], ax
  0045d	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@+16
  00464	66 89 85 04 6c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+1872], ax
  0046b	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MPJHCJLC@data?2se?2sap_10?4wav@+18
  00472	68 b5 00 00 00	 push	 181			; 000000b5H
  00477	88 85 06 6c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+1874], al
  0047d	8d 85 07 6c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+1875]
  00483	6a 00		 push	 0
  00485	50		 push	 eax
  00486	c6 85 f0 6b ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+1852], 0
  0048d	0f 11 85 f4 6b
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+1856], xmm0
  00494	e8 00 00 00 00	 call	 _memset

; 16   : //x	{   11, "data\\se\\sap_11.wav", 105, 7, 0 /*, "î??"*/ },
; 17   : 	{   11, "data\\se\\sap_11.wav", 105, 0, 0 /*, "î??"*/ },		   

  00499	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@
  004a0	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  004a5	66 c7 85 bc 6c
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+2056], 80 ; 00000050H
  004ae	66 89 85 c0 6c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2060], ax
  004b5	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@+16
  004bc	66 89 85 d2 6c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2078], ax
  004c3	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EMLPKBH@data?2se?2sap_11?4wav@+18
  004ca	68 b5 00 00 00	 push	 181			; 000000b5H
  004cf	88 85 d4 6c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+2080], al
  004d5	8d 85 d5 6c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+2081]
  004db	6a 00		 push	 0
  004dd	50		 push	 eax
  004de	c6 85 be 6c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+2058], 0
  004e5	0f 11 85 c2 6c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2062], xmm0
  004ec	e8 00 00 00 00	 call	 _memset

; 18   : 	{   12, "data\\se\\sap_14.wav", 100, 0, 0 /*, "î¹??"*/ },			 

  004f1	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@
  004f8	66 8b 3d 10 00
	00 00		 mov	 di, WORD PTR ??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@+16
  004ff	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00504	8a 3d 12 00 00
	00		 mov	 bh, BYTE PTR ??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@+18
  0050a	68 b5 00 00 00	 push	 181			; 000000b5H
  0050f	66 89 85 8e 6d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2266], ax
  00516	8d 85 a3 6d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+2287]
  0051c	6a 00		 push	 0
  0051e	50		 push	 eax
  0051f	66 c7 85 8a 6d
	ff ff 69 00	 mov	 WORD PTR _sndconfig$[ebp+2262], 105 ; 00000069H
  00528	c6 85 8c 6d ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+2264], 0
  0052f	0f 11 85 90 6d
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2268], xmm0
  00536	66 89 bd a0 6d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2284], di
  0053d	88 bd a2 6d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+2286], bh
  00543	e8 00 00 00 00	 call	 _memset

; 19   : 	{   13, "data\\se\\sap_12.wav", 90, 0, 0 /*, "?????"*/ },	 	  

  00548	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@
  0054f	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00554	66 c7 85 58 6e
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+2468], 100 ; 00000064H
  0055d	66 89 85 5c 6e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2472], ax
  00564	83 c4 48	 add	 esp, 72			; 00000048H
  00567	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@+16
  0056e	66 89 85 6e 6e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2490], ax
  00575	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@ICFPIILJ@data?2se?2sap_12?4wav@+18
  0057c	68 b5 00 00 00	 push	 181			; 000000b5H
  00581	88 85 70 6e ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+2492], al
  00587	8d 85 71 6e ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+2493]
  0058d	6a 00		 push	 0
  0058f	50		 push	 eax
  00590	c6 85 5a 6e ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+2470], 0
  00597	0f 11 85 5e 6e
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2474], xmm0
  0059e	e8 00 00 00 00	 call	 _memset

; 20   : 	{   14, "data\\se\\sap_13.wav", 105, 0, 0 /*, "??????"*/ },

  005a3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@
  005aa	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  005af	66 c7 85 26 6f
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+2674], 90 ; 0000005aH
  005b8	66 89 85 2a 6f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2678], ax
  005bf	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@+16
  005c6	66 89 85 3c 6f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2696], ax
  005cd	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EJADFLBM@data?2se?2sap_13?4wav@+18
  005d4	68 b5 00 00 00	 push	 181			; 000000b5H
  005d9	88 85 3e 6f ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+2698], al
  005df	8d 85 3f 6f ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+2699]
  005e5	6a 00		 push	 0
  005e7	50		 push	 eax
  005e8	c6 85 28 6f ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+2676], 0
  005ef	0f 11 85 2c 6f
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2680], xmm0
  005f6	e8 00 00 00 00	 call	 _memset

; 21   : 
; 22   : 	// ?????
; 23   : 	{   51, "data\\se\\sae_01.wav", 123, 0, 0 /*, ""*/ },

  005fb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@
  00602	b8 33 00 00 00	 mov	 eax, 51			; 00000033H
  00607	66 c7 85 f4 6f
	ff ff 69 00	 mov	 WORD PTR _sndconfig$[ebp+2880], 105 ; 00000069H
  00610	66 89 85 f8 6f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2884], ax
  00617	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@+16
  0061e	66 89 85 0a 70
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+2902], ax
  00625	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EEOLPGJN@data?2se?2sae_01?4wav@+18
  0062c	68 b5 00 00 00	 push	 181			; 000000b5H
  00631	88 85 0c 70 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+2904], al
  00637	8d 85 0d 70 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+2905]
  0063d	6a 00		 push	 0
  0063f	50		 push	 eax
  00640	c6 85 f6 6f ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+2882], 0
  00647	0f 11 85 fa 6f
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+2886], xmm0
  0064e	e8 00 00 00 00	 call	 _memset

; 24   : 	{   52, "data\\se\\sae_02.wav", 123, 0, 0 /*, ""*/ },

  00653	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@
  0065a	b8 34 00 00 00	 mov	 eax, 52			; 00000034H
  0065f	66 c7 85 c2 70
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+3086], 123 ; 0000007bH
  00668	66 89 85 c6 70
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3090], ax
  0066f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@+16
  00676	66 89 85 d8 70
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3108], ax
  0067d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MCHPIEDD@data?2se?2sae_02?4wav@+18
  00684	68 b5 00 00 00	 push	 181			; 000000b5H
  00689	88 85 da 70 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+3110], al
  0068f	8d 85 db 70 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+3111]
  00695	6a 00		 push	 0
  00697	50		 push	 eax
  00698	c6 85 c4 70 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+3088], 0
  0069f	0f 11 85 c8 70
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+3092], xmm0
  006a6	e8 00 00 00 00	 call	 _memset

; 25   : 	{   53, "data\\se\\sae_03.wav", 123, 0, 0 /*, ""*/ },

  006ab	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@
  006b2	b8 35 00 00 00	 mov	 eax, 53			; 00000035H
  006b7	66 c7 85 90 71
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+3292], 123 ; 0000007bH
  006c0	c6 85 92 71 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+3294], 0
  006c7	66 89 85 94 71
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3296], ax
  006ce	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@+16
  006d5	66 89 85 a6 71
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3314], ax
  006dc	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JCDFHJG@data?2se?2sae_03?4wav@+18
  006e3	68 b5 00 00 00	 push	 181			; 000000b5H
  006e8	88 85 a8 71 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+3316], al
  006ee	8d 85 a9 71 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+3317]
  006f4	6a 00		 push	 0
  006f6	50		 push	 eax
  006f7	0f 11 85 96 71
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+3298], xmm0
  006fe	e8 00 00 00 00	 call	 _memset

; 26   : 	{   54, "data\\se\\sae_04.wav", 123, 0, 0 /*, ""*/ },

  00703	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@
  0070a	b8 36 00 00 00	 mov	 eax, 54			; 00000036H
  0070f	66 c7 85 5e 72
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+3498], 123 ; 0000007bH
  00718	66 89 85 62 72
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3502], ax
  0071f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@+16
  00726	66 89 85 74 72
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3520], ax
  0072d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BECGGHCO@data?2se?2sae_04?4wav@+18
  00734	68 b5 00 00 00	 push	 181			; 000000b5H
  00739	88 85 76 72 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+3522], al
  0073f	8d 85 77 72 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+3523]
  00745	6a 00		 push	 0
  00747	50		 push	 eax
  00748	c6 85 60 72 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+3500], 0
  0074f	0f 11 85 64 72
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+3504], xmm0
  00756	e8 00 00 00 00	 call	 _memset

; 27   : 	{   55, "data\\se\\sae_05.wav", 123, 0, 0 /*, ""*/ },

  0075b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@
  00762	b8 37 00 00 00	 mov	 eax, 55			; 00000037H
  00767	66 c7 85 2c 73
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+3704], 123 ; 0000007bH
  00770	66 89 85 30 73
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3708], ax
  00777	83 c4 48	 add	 esp, 72			; 00000048H
  0077a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@+16
  00781	66 89 85 42 73
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3726], ax
  00788	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NPHKLEIL@data?2se?2sae_05?4wav@+18
  0078f	68 b5 00 00 00	 push	 181			; 000000b5H
  00794	88 85 44 73 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+3728], al
  0079a	8d 85 45 73 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+3729]
  007a0	6a 00		 push	 0
  007a2	50		 push	 eax
  007a3	c6 85 2e 73 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+3706], 0
  007aa	0f 11 85 32 73
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+3710], xmm0
  007b1	e8 00 00 00 00	 call	 _memset

; 28   : 	{   56, "data\\se\\sae_06.wav", 105, 0, 0 /*, "?????"*/ },

  007b6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@
  007bd	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  007c2	66 c7 85 fa 73
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+3910], 123 ; 0000007bH
  007cb	66 89 85 fe 73
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3914], ax
  007d2	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@+16
  007d9	66 89 85 10 74
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+3932], ax
  007e0	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FJOOMGCF@data?2se?2sae_06?4wav@+18
  007e7	68 b5 00 00 00	 push	 181			; 000000b5H
  007ec	88 85 12 74 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+3934], al
  007f2	8d 85 13 74 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+3935]
  007f8	6a 00		 push	 0
  007fa	50		 push	 eax
  007fb	c6 85 fc 73 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+3912], 0
  00802	0f 11 85 00 74
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+3916], xmm0
  00809	e8 00 00 00 00	 call	 _memset

; 29   : 	{   57, "data\\se\\sae_07.wav", 80, 0, 0 /*, "??????î½?"*/ },

  0080e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@
  00815	b8 39 00 00 00	 mov	 eax, 57			; 00000039H
  0081a	66 c7 85 c8 74
	ff ff 69 00	 mov	 WORD PTR _sndconfig$[ebp+4116], 105 ; 00000069H
  00823	66 89 85 cc 74
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4120], ax
  0082a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@+16
  00831	66 89 85 de 74
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4138], ax
  00838	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JCLCBFIA@data?2se?2sae_07?4wav@+18
  0083f	68 b5 00 00 00	 push	 181			; 000000b5H
  00844	88 85 e0 74 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+4140], al
  0084a	8d 85 e1 74 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+4141]
  00850	6a 00		 push	 0
  00852	50		 push	 eax
  00853	c6 85 ca 74 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+4118], 0
  0085a	0f 11 85 ce 74
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+4122], xmm0
  00861	e8 00 00 00 00	 call	 _memset

; 30   : 	{   58, "data\\se\\sae_08.wav", 123, 0, 0 /*, ""*/ },

  00866	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@
  0086d	b8 3a 00 00 00	 mov	 eax, 58			; 0000003aH
  00872	66 c7 85 96 75
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+4322], 80 ; 00000050H
  0087b	66 89 85 9a 75
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4326], ax
  00882	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@+16
  00889	66 89 85 ac 75
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4344], ax
  00890	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GDOEKHFF@data?2se?2sae_08?4wav@+18
  00897	c6 85 98 75 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+4324], 0
  0089e	0f 11 85 9c 75
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+4328], xmm0
  008a5	88 85 ae 75 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+4346], al
  008ab	68 b5 00 00 00	 push	 181			; 000000b5H
  008b0	8d 85 af 75 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+4347]
  008b6	6a 00		 push	 0
  008b8	50		 push	 eax
  008b9	e8 00 00 00 00	 call	 _memset

; 31   : 	{   59, "data\\se\\sae_09.wav", 123, 0, 0 /*, ""*/ },

  008be	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@
  008c5	b8 3b 00 00 00	 mov	 eax, 59			; 0000003bH
  008ca	66 c7 85 64 76
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+4528], 123 ; 0000007bH
  008d3	66 89 85 68 76
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4532], ax
  008da	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@+16
  008e1	66 89 85 7a 76
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4550], ax
  008e8	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KILIHEPA@data?2se?2sae_09?4wav@+18
  008ef	68 b5 00 00 00	 push	 181			; 000000b5H
  008f4	88 85 7c 76 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+4552], al
  008fa	8d 85 7d 76 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+4553]
  00900	6a 00		 push	 0
  00902	50		 push	 eax
  00903	c6 85 66 76 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+4530], 0
  0090a	0f 11 85 6a 76
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+4534], xmm0
  00911	e8 00 00 00 00	 call	 _memset

; 32   : 	{   60, "data\\se\\sae_10.wav", 80, 0, 0 /*, "????"*/ },

  00916	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@
  0091d	66 8b 35 10 00
	00 00		 mov	 si, WORD PTR ??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@+16
  00924	b8 3c 00 00 00	 mov	 eax, 60			; 0000003cH
  00929	8a 1d 12 00 00
	00		 mov	 bl, BYTE PTR ??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@+18
  0092f	68 b5 00 00 00	 push	 181			; 000000b5H
  00934	66 89 85 36 77
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4738], ax
  0093b	8d 85 4b 77 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+4759]
  00941	6a 00		 push	 0
  00943	50		 push	 eax
  00944	66 c7 85 32 77
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+4734], 123 ; 0000007bH
  0094d	c6 85 34 77 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+4736], 0
  00954	0f 11 85 38 77
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+4740], xmm0
  0095b	66 89 b5 48 77
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4756], si
  00962	88 9d 4a 77 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+4758], bl
  00968	e8 00 00 00 00	 call	 _memset

; 33   : 	{   61, "data\\se\\sae_11.wav", 123, 0, 0 /*, ""*/ },

  0096d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@
  00974	b8 3d 00 00 00	 mov	 eax, 61			; 0000003dH
  00979	66 c7 85 00 78
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+4940], 80 ; 00000050H
  00982	66 89 85 04 78
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4944], ax
  00989	83 c4 48	 add	 esp, 72			; 00000048H
  0098c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@+16
  00993	66 89 85 16 78
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+4962], ax
  0099a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OCJMPNCJ@data?2se?2sae_11?4wav@+18
  009a1	68 b5 00 00 00	 push	 181			; 000000b5H
  009a6	88 85 18 78 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+4964], al
  009ac	8d 85 19 78 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+4965]
  009b2	6a 00		 push	 0
  009b4	50		 push	 eax
  009b5	c6 85 02 78 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+4942], 0
  009bc	0f 11 85 06 78
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+4946], xmm0
  009c3	e8 00 00 00 00	 call	 _memset

; 34   : 	{   62, "data\\se\\sae_12.wav", 95, 0, 0 /*, "????"*/ },

  009c8	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@
  009cf	b8 3e 00 00 00	 mov	 eax, 62			; 0000003eH
  009d4	66 c7 85 ce 78
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+5146], 123 ; 0000007bH
  009dd	66 89 85 d2 78
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5150], ax
  009e4	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@+16
  009eb	66 89 85 e4 78
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5168], ax
  009f2	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GEAIIPIH@data?2se?2sae_12?4wav@+18
  009f9	68 b5 00 00 00	 push	 181			; 000000b5H
  009fe	88 85 e6 78 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+5170], al
  00a04	8d 85 e7 78 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+5171]
  00a0a	6a 00		 push	 0
  00a0c	50		 push	 eax
  00a0d	c6 85 d0 78 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+5148], 0
  00a14	0f 11 85 d4 78
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+5152], xmm0
  00a1b	e8 00 00 00 00	 call	 _memset

; 35   : 	{   63, "data\\se\\sae_13.wav", 80, 0, 0 /*, "?????"*/ },

  00a20	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@
  00a27	b8 3f 00 00 00	 mov	 eax, 63			; 0000003fH
  00a2c	66 c7 85 9c 79
	ff ff 5f 00	 mov	 WORD PTR _sndconfig$[ebp+5352], 95 ; 0000005fH
  00a35	66 89 85 a0 79
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5356], ax
  00a3c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@+16
  00a43	66 89 85 b2 79
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5374], ax
  00a4a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KPFEFMCC@data?2se?2sae_13?4wav@+18
  00a51	68 b5 00 00 00	 push	 181			; 000000b5H
  00a56	88 85 b4 79 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+5376], al
  00a5c	8d 85 b5 79 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+5377]
  00a62	6a 00		 push	 0
  00a64	50		 push	 eax
  00a65	c6 85 9e 79 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+5354], 0
  00a6c	0f 11 85 a2 79
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+5358], xmm0
  00a73	e8 00 00 00 00	 call	 _memset

; 36   : 	{   64, "data\\se\\sae_14.wav", 90, 0, 0 /*, "???"*/ },

  00a78	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@
  00a7f	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00a84	66 c7 85 6a 7a
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+5558], 80 ; 00000050H
  00a8d	66 89 85 6e 7a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5562], ax
  00a94	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@+16
  00a9b	66 89 85 80 7a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5580], ax
  00aa2	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LCFBGMJK@data?2se?2sae_14?4wav@+18
  00aa9	68 b5 00 00 00	 push	 181			; 000000b5H
  00aae	88 85 82 7a ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+5582], al
  00ab4	8d 85 83 7a ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+5583]
  00aba	6a 00		 push	 0
  00abc	50		 push	 eax
  00abd	c6 85 6c 7a ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+5560], 0
  00ac4	0f 11 85 70 7a
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+5564], xmm0
  00acb	e8 00 00 00 00	 call	 _memset

; 37   : 	{   65, "data\\se\\sae_15.wav", 95, 0, 0 /*, "?????"*/ },

  00ad0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@
  00ad7	b8 41 00 00 00	 mov	 eax, 65			; 00000041H
  00adc	66 c7 85 38 7b
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+5764], 90 ; 0000005aH
  00ae5	66 89 85 3c 7b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5768], ax
  00aec	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@+16
  00af3	66 89 85 4e 7b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5786], ax
  00afa	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HJANLPDP@data?2se?2sae_15?4wav@+18
  00b01	68 b5 00 00 00	 push	 181			; 000000b5H
  00b06	88 85 50 7b ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+5788], al
  00b0c	8d 85 51 7b ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+5789]
  00b12	6a 00		 push	 0
  00b14	50		 push	 eax
  00b15	c6 85 3a 7b ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+5766], 0
  00b1c	0f 11 85 3e 7b
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+5770], xmm0
  00b23	e8 00 00 00 00	 call	 _memset

; 38   : 	{   66, "data\\se\\sae_16.wav", 95, 0, 0 /*, "î?î??"*/ },

  00b28	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@
  00b2f	b8 42 00 00 00	 mov	 eax, 66			; 00000042H
  00b34	66 c7 85 06 7c
	ff ff 5f 00	 mov	 WORD PTR _sndconfig$[ebp+5970], 95 ; 0000005fH
  00b3d	66 89 85 0a 7c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5974], ax
  00b44	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@+16
  00b4b	66 89 85 1c 7c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+5992], ax
  00b52	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PPJJMNJB@data?2se?2sae_16?4wav@+18
  00b59	68 b5 00 00 00	 push	 181			; 000000b5H
  00b5e	88 85 1e 7c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+5994], al
  00b64	8d 85 1f 7c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+5995]
  00b6a	6a 00		 push	 0
  00b6c	50		 push	 eax
  00b6d	c6 85 08 7c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+5972], 0
  00b74	0f 11 85 0c 7c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+5976], xmm0
  00b7b	e8 00 00 00 00	 call	 _memset

; 39   : 	{   67, "data\\se\\sae_17.wav", 123, 0, 0 /*, ""*/ },

  00b80	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@
  00b87	b8 43 00 00 00	 mov	 eax, 67			; 00000043H
  00b8c	66 c7 85 d4 7c
	ff ff 5f 00	 mov	 WORD PTR _sndconfig$[ebp+6176], 95 ; 0000005fH
  00b95	66 89 85 d8 7c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6180], ax
  00b9c	83 c4 48	 add	 esp, 72			; 00000048H
  00b9f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@+16
  00ba6	66 89 85 ea 7c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6198], ax
  00bad	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DEMFBODE@data?2se?2sae_17?4wav@+18
  00bb4	68 b5 00 00 00	 push	 181			; 000000b5H
  00bb9	88 85 ec 7c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+6200], al
  00bbf	8d 85 ed 7c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+6201]
  00bc5	6a 00		 push	 0
  00bc7	50		 push	 eax
  00bc8	c6 85 d6 7c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+6178], 0
  00bcf	0f 11 85 da 7c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+6182], xmm0
  00bd6	e8 00 00 00 00	 call	 _memset

; 40   : 	{   68, "data\\se\\sae_18.wav", 123, 0, 0 /*, ""*/ },

  00bdb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@
  00be2	b8 44 00 00 00	 mov	 eax, 68			; 00000044H
  00be7	66 c7 85 a2 7d
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+6382], 123 ; 0000007bH
  00bf0	66 89 85 a6 7d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6386], ax
  00bf7	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@+16
  00bfe	66 89 85 b8 7d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6404], ax
  00c05	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MFJDKMOB@data?2se?2sae_18?4wav@+18
  00c0c	68 b5 00 00 00	 push	 181			; 000000b5H
  00c11	88 85 ba 7d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+6406], al
  00c17	8d 85 bb 7d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+6407]
  00c1d	6a 00		 push	 0
  00c1f	50		 push	 eax
  00c20	c6 85 a4 7d ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+6384], 0
  00c27	0f 11 85 a8 7d
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+6388], xmm0
  00c2e	e8 00 00 00 00	 call	 _memset

; 41   : 	{   69, "data\\se\\sae_19.wav", 123, 0, 0 /*, ""*/ },

  00c33	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@
  00c3a	b8 45 00 00 00	 mov	 eax, 69			; 00000045H
  00c3f	66 c7 85 70 7e
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+6588], 123 ; 0000007bH
  00c48	c6 85 72 7e ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+6590], 0
  00c4f	66 89 85 74 7e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6592], ax
  00c56	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@+16
  00c5d	66 89 85 86 7e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6610], ax
  00c64	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OMPHPEE@data?2se?2sae_19?4wav@+18
  00c6b	68 b5 00 00 00	 push	 181			; 000000b5H
  00c70	88 85 88 7e ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+6612], al
  00c76	8d 85 89 7e ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+6613]
  00c7c	6a 00		 push	 0
  00c7e	50		 push	 eax
  00c7f	0f 11 85 76 7e
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+6594], xmm0
  00c86	e8 00 00 00 00	 call	 _memset

; 42   : 	{   70, "data\\se\\sae_20.wav", 123, 0, 0 /*, ""*/ },

  00c8b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@
  00c92	b8 46 00 00 00	 mov	 eax, 70			; 00000046H
  00c97	66 c7 85 3e 7f
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+6794], 123 ; 0000007bH
  00ca0	66 89 85 42 7f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6798], ax
  00ca7	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@+16
  00cae	66 89 85 54 7f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+6816], ax
  00cb5	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BICIDEBB@data?2se?2sae_20?4wav@+18
  00cbc	68 b5 00 00 00	 push	 181			; 000000b5H
  00cc1	88 85 56 7f ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+6818], al
  00cc7	8d 85 57 7f ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+6819]
  00ccd	6a 00		 push	 0
  00ccf	50		 push	 eax
  00cd0	c6 85 40 7f ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+6796], 0
  00cd7	0f 11 85 44 7f
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+6800], xmm0
  00cde	e8 00 00 00 00	 call	 _memset

; 43   : 	{   71, "data\\se\\sae_21.wav", 123, 0, 0 /*, ""*/ },

  00ce3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@
  00cea	b8 47 00 00 00	 mov	 eax, 71			; 00000047H
  00cef	66 c7 85 0c 80
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+7000], 123 ; 0000007bH
  00cf8	66 89 85 10 80
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7004], ax
  00cff	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@+16
  00d06	66 89 85 22 80
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7022], ax
  00d0d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NDHEOHLE@data?2se?2sae_21?4wav@+18
  00d14	68 b5 00 00 00	 push	 181			; 000000b5H
  00d19	88 85 24 80 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+7024], al
  00d1f	8d 85 25 80 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+7025]
  00d25	6a 00		 push	 0
  00d27	50		 push	 eax
  00d28	c6 85 0e 80 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+7002], 0
  00d2f	0f 11 85 12 80
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+7006], xmm0
  00d36	e8 00 00 00 00	 call	 _memset

; 44   : 	{   72, "data\\se\\sae_22.wav", 123, 0, 0 /*, ""*/ },

  00d3b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@
  00d42	b8 48 00 00 00	 mov	 eax, 72			; 00000048H
  00d47	66 c7 85 da 80
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+7206], 123 ; 0000007bH
  00d50	66 89 85 de 80
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7210], ax
  00d57	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@+16
  00d5e	66 89 85 f0 80
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7228], ax
  00d65	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FFOAJFBK@data?2se?2sae_22?4wav@+18
  00d6c	68 b5 00 00 00	 push	 181			; 000000b5H
  00d71	88 85 f2 80 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+7230], al
  00d77	8d 85 f3 80 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+7231]
  00d7d	6a 00		 push	 0
  00d7f	50		 push	 eax
  00d80	c6 85 dc 80 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+7208], 0
  00d87	0f 11 85 e0 80
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+7212], xmm0
  00d8e	e8 00 00 00 00	 call	 _memset

; 45   : 	{   73, "data\\se\\sae_23.wav", 90, 0, 0 /*, "????"*/ },

  00d93	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@
  00d9a	83 c4 48	 add	 esp, 72			; 00000048H
  00d9d	66 c7 85 a8 81
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+7412], 123 ; 0000007bH
  00da6	b8 49 00 00 00	 mov	 eax, 73			; 00000049H
  00dab	c6 85 aa 81 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+7414], 0
  00db2	66 89 85 ac 81
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7416], ax
  00db9	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@+16
  00dc0	66 89 85 be 81
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7434], ax
  00dc7	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JOLMEGLP@data?2se?2sae_23?4wav@+18
  00dce	68 b5 00 00 00	 push	 181			; 000000b5H
  00dd3	88 85 c0 81 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+7436], al
  00dd9	8d 85 c1 81 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+7437]
  00ddf	6a 00		 push	 0
  00de1	50		 push	 eax
  00de2	0f 11 85 ae 81
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+7418], xmm0
  00de9	e8 00 00 00 00	 call	 _memset

; 46   : 	{   74, "data\\se\\sae_24.wav", 90, 0, 0 /*, "????"*/ },

  00dee	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@
  00df5	b8 4a 00 00 00	 mov	 eax, 74			; 0000004aH
  00dfa	66 c7 85 76 82
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+7618], 90 ; 0000005aH
  00e03	66 89 85 7a 82
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7622], ax
  00e0a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@+16
  00e11	66 89 85 8c 82
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7640], ax
  00e18	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IDLJHGAH@data?2se?2sae_24?4wav@+18
  00e1f	c6 85 78 82 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+7620], 0
  00e26	0f 11 85 7c 82
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+7624], xmm0
  00e2d	88 85 8e 82 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+7642], al
  00e33	68 b5 00 00 00	 push	 181			; 000000b5H
  00e38	8d 85 8f 82 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+7643]
  00e3e	6a 00		 push	 0
  00e40	50		 push	 eax
  00e41	e8 00 00 00 00	 call	 _memset

; 47   : 	{   75, "data\\se\\sae_25.wav", 100, 0, 0 /*, "???"*/ },

  00e46	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@
  00e4d	b8 4b 00 00 00	 mov	 eax, 75			; 0000004bH
  00e52	66 c7 85 44 83
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+7824], 90 ; 0000005aH
  00e5b	66 89 85 48 83
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7828], ax
  00e62	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@+16
  00e69	66 89 85 5a 83
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+7846], ax
  00e70	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EIOFKFKC@data?2se?2sae_25?4wav@+18
  00e77	68 b5 00 00 00	 push	 181			; 000000b5H
  00e7c	88 85 5c 83 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+7848], al
  00e82	8d 85 5d 83 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+7849]
  00e88	6a 00		 push	 0
  00e8a	50		 push	 eax
  00e8b	c6 85 46 83 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+7826], 0
  00e92	0f 11 85 4a 83
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+7830], xmm0
  00e99	e8 00 00 00 00	 call	 _memset

; 48   : 	{   76, "data\\se\\sae_26.wav", 75, 0, 0 /*, "???"*/ },

  00e9e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@
  00ea5	b8 4c 00 00 00	 mov	 eax, 76			; 0000004cH
  00eaa	66 c7 85 12 84
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+8030], 100 ; 00000064H
  00eb3	66 89 85 16 84
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8034], ax
  00eba	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@+16
  00ec1	66 89 85 28 84
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8052], ax
  00ec8	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MOHBNHAM@data?2se?2sae_26?4wav@+18
  00ecf	68 b5 00 00 00	 push	 181			; 000000b5H
  00ed4	88 85 2a 84 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+8054], al
  00eda	8d 85 2b 84 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+8055]
  00ee0	6a 00		 push	 0
  00ee2	50		 push	 eax
  00ee3	c6 85 14 84 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+8032], 0
  00eea	0f 11 85 18 84
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+8036], xmm0
  00ef1	e8 00 00 00 00	 call	 _memset

; 49   : 	{   77, "data\\se\\sae_27.wav", 123, 0, 0 /*, ""*/ },

  00ef6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@
  00efd	b8 4d 00 00 00	 mov	 eax, 77			; 0000004dH
  00f02	66 c7 85 e0 84
	ff ff 4b 00	 mov	 WORD PTR _sndconfig$[ebp+8236], 75 ; 0000004bH
  00f0b	66 89 85 e4 84
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8240], ax
  00f12	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@+16
  00f19	66 89 85 f6 84
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8258], ax
  00f20	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FCNAEKJ@data?2se?2sae_27?4wav@+18
  00f27	68 b5 00 00 00	 push	 181			; 000000b5H
  00f2c	88 85 f8 84 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+8260], al
  00f32	8d 85 f9 84 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+8261]
  00f38	6a 00		 push	 0
  00f3a	50		 push	 eax
  00f3b	c6 85 e2 84 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+8238], 0
  00f42	0f 11 85 e6 84
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+8242], xmm0
  00f49	e8 00 00 00 00	 call	 _memset

; 50   : 	{   78, "data\\se\\sae_28.wav", 90, 0, 0 /*, "????"*/ },

  00f4e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@
  00f55	b8 4e 00 00 00	 mov	 eax, 78			; 0000004eH
  00f5a	66 c7 85 ae 85
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+8442], 123 ; 0000007bH
  00f63	66 89 85 b2 85
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8446], ax
  00f6a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@+16
  00f71	66 89 85 c4 85
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8464], ax
  00f78	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PEHLLGHM@data?2se?2sae_28?4wav@+18
  00f7f	68 b5 00 00 00	 push	 181			; 000000b5H
  00f84	88 85 c6 85 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+8466], al
  00f8a	8d 85 c7 85 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+8467]
  00f90	6a 00		 push	 0
  00f92	50		 push	 eax
  00f93	c6 85 b0 85 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+8444], 0
  00f9a	0f 11 85 b4 85
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+8448], xmm0
  00fa1	e8 00 00 00 00	 call	 _memset

; 51   : 	{   79, "data\\se\\sae_29.wav", 123, 0, 0 /*, ""*/ },

  00fa6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@
  00fad	83 c4 48	 add	 esp, 72			; 00000048H
  00fb0	66 c7 85 7c 86
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+8648], 90 ; 0000005aH
  00fb9	b8 4f 00 00 00	 mov	 eax, 79			; 0000004fH
  00fbe	c6 85 7e 86 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+8650], 0
  00fc5	66 89 85 80 86
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8652], ax
  00fcc	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@+16
  00fd3	66 89 85 92 86
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8670], ax
  00fda	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DPCHGFNJ@data?2se?2sae_29?4wav@+18
  00fe1	68 b5 00 00 00	 push	 181			; 000000b5H
  00fe6	88 85 94 86 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+8672], al
  00fec	8d 85 95 86 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+8673]
  00ff2	6a 00		 push	 0
  00ff4	50		 push	 eax
  00ff5	0f 11 85 82 86
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+8654], xmm0
  00ffc	e8 00 00 00 00	 call	 _memset

; 52   : 	{   80, "data\\se\\sae_30.wav", 100, 0, 0 /*, "?????"*/ },

  01001	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@
  01008	b8 50 00 00 00	 mov	 eax, 80			; 00000050H
  0100d	66 c7 85 4a 87
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+8854], 123 ; 0000007bH
  01016	66 89 85 4e 87
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8858], ax
  0101d	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@+16
  01024	66 89 85 60 87
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+8876], ax
  0102b	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LOFPDPKF@data?2se?2sae_30?4wav@+18
  01032	68 b5 00 00 00	 push	 181			; 000000b5H
  01037	88 85 62 87 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+8878], al
  0103d	8d 85 63 87 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+8879]
  01043	6a 00		 push	 0
  01045	50		 push	 eax
  01046	c6 85 4c 87 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+8856], 0
  0104d	0f 11 85 50 87
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+8860], xmm0
  01054	e8 00 00 00 00	 call	 _memset

; 53   : 	{   81, "data\\se\\sae_31.wav", 123, 0, 0 /*, ""*/ },

  01059	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@
  01060	b8 51 00 00 00	 mov	 eax, 81			; 00000051H
  01065	66 c7 85 18 88
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+9060], 100 ; 00000064H
  0106e	66 89 85 1c 88
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9064], ax
  01075	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@+16
  0107c	66 89 85 2e 88
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9082], ax
  01083	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HFADOMAA@data?2se?2sae_31?4wav@+18
  0108a	68 b5 00 00 00	 push	 181			; 000000b5H
  0108f	88 85 30 88 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+9084], al
  01095	8d 85 31 88 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+9085]
  0109b	6a 00		 push	 0
  0109d	50		 push	 eax
  0109e	c6 85 1a 88 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+9062], 0
  010a5	0f 11 85 1e 88
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+9066], xmm0
  010ac	e8 00 00 00 00	 call	 _memset

; 54   : 	{   82, "data\\se\\sae_32.wav", 123, 0, 0 /*, ""*/ },

  010b1	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@
  010b8	b8 52 00 00 00	 mov	 eax, 82			; 00000052H
  010bd	66 c7 85 e6 88
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+9266], 123 ; 0000007bH
  010c6	66 89 85 ea 88
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9270], ax
  010cd	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@+16
  010d4	66 89 85 fc 88
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9288], ax
  010db	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PDJHJOKO@data?2se?2sae_32?4wav@+18
  010e2	68 b5 00 00 00	 push	 181			; 000000b5H
  010e7	88 85 fe 88 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+9290], al
  010ed	8d 85 ff 88 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+9291]
  010f3	6a 00		 push	 0
  010f5	50		 push	 eax
  010f6	c6 85 e8 88 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+9268], 0
  010fd	0f 11 85 ec 88
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+9272], xmm0
  01104	e8 00 00 00 00	 call	 _memset

; 55   : 
; 56   : 	// ?î¹
; 57   : 	{  100, "data\\se\\sam_01.wav", 75, 0, 0 /*, "?????î¯î£îî¸?"*/ },

  01109	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@
  01110	b8 64 00 00 00	 mov	 eax, 100		; 00000064H
  01115	66 c7 85 b4 89
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+9472], 123 ; 0000007bH
  0111e	66 89 85 b8 89
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9476], ax
  01125	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@+16
  0112c	66 89 85 ca 89
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9494], ax
  01133	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PPDDFEIF@data?2se?2sam_01?4wav@+18
  0113a	68 b5 00 00 00	 push	 181			; 000000b5H
  0113f	88 85 cc 89 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+9496], al
  01145	8d 85 cd 89 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+9497]
  0114b	6a 00		 push	 0
  0114d	50		 push	 eax
  0114e	c6 85 b6 89 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+9474], 0
  01155	0f 11 85 ba 89
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+9478], xmm0
  0115c	e8 00 00 00 00	 call	 _memset

; 58   : 	{  101,	"data\\se\\sam_02.wav", 75, 0, 0 /*, "????î"*/ },

  01161	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@
  01168	b8 65 00 00 00	 mov	 eax, 101		; 00000065H
  0116d	66 c7 85 82 8a
	ff ff 4b 00	 mov	 WORD PTR _sndconfig$[ebp+9678], 75 ; 0000004bH
  01176	66 89 85 86 8a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9682], ax
  0117d	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@+16
  01184	66 89 85 98 8a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9700], ax
  0118b	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HJKHCGCL@data?2se?2sam_02?4wav@+18
  01192	68 b5 00 00 00	 push	 181			; 000000b5H
  01197	88 85 9a 8a ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+9702], al
  0119d	8d 85 9b 8a ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+9703]
  011a3	6a 00		 push	 0
  011a5	50		 push	 eax
  011a6	c6 85 84 8a ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+9680], 0
  011ad	0f 11 85 88 8a
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+9684], xmm0
  011b4	e8 00 00 00 00	 call	 _memset

; 59   : 	{  102,	"data\\se\\sam_03.wav", 75, 0, 0 /*, "??"*/ },

  011b9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@
  011c0	b8 66 00 00 00	 mov	 eax, 102		; 00000066H
  011c5	66 c7 85 50 8b
	ff ff 4b 00	 mov	 WORD PTR _sndconfig$[ebp+9884], 75 ; 0000004bH
  011ce	83 c4 48	 add	 esp, 72			; 00000048H
  011d1	c6 85 52 8b ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+9886], 0
  011d8	66 89 85 54 8b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9888], ax
  011df	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@+16
  011e6	66 89 85 66 8b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+9906], ax
  011ed	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LCPLPFIO@data?2se?2sam_03?4wav@+18
  011f4	68 b5 00 00 00	 push	 181			; 000000b5H
  011f9	88 85 68 8b ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+9908], al
  011ff	8d 85 69 8b ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+9909]
  01205	6a 00		 push	 0
  01207	50		 push	 eax
  01208	0f 11 85 56 8b
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+9890], xmm0
  0120f	e8 00 00 00 00	 call	 _memset

; 60   : 	{  103,	"data\\se\\sam_04.wav", 123, 0, 0 /*, "???î¸?"*/ },

  01214	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@
  0121b	b8 67 00 00 00	 mov	 eax, 103		; 00000067H
  01220	66 c7 85 1e 8c
	ff ff 4b 00	 mov	 WORD PTR _sndconfig$[ebp+10090], 75 ; 0000004bH
  01229	66 89 85 22 8c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10094], ax
  01230	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@+16
  01237	66 89 85 34 8c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10112], ax
  0123e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KPPOMFDG@data?2se?2sam_04?4wav@+18
  01245	68 b5 00 00 00	 push	 181			; 000000b5H
  0124a	88 85 36 8c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+10114], al
  01250	8d 85 37 8c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+10115]
  01256	6a 00		 push	 0
  01258	50		 push	 eax
  01259	c6 85 20 8c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+10092], 0
  01260	0f 11 85 24 8c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+10096], xmm0
  01267	e8 00 00 00 00	 call	 _memset

; 61   : 	{  104,	"data\\se\\sam_05.wav", 123, 0, 0 /*, "?????"*/ },

  0126c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@
  01273	b8 68 00 00 00	 mov	 eax, 104		; 00000068H
  01278	66 c7 85 ec 8c
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+10296], 123 ; 0000007bH
  01281	66 89 85 f0 8c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10300], ax
  01288	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@+16
  0128f	66 89 85 02 8d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10318], ax
  01296	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GEKCBGJD@data?2se?2sam_05?4wav@+18
  0129d	68 b5 00 00 00	 push	 181			; 000000b5H
  012a2	88 85 04 8d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+10320], al
  012a8	8d 85 05 8d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+10321]
  012ae	6a 00		 push	 0
  012b0	50		 push	 eax
  012b1	c6 85 ee 8c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+10298], 0
  012b8	0f 11 85 f2 8c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+10302], xmm0
  012bf	e8 00 00 00 00	 call	 _memset

; 62   : 	{  105,	"data\\se\\sam_06.wav", 123, 0, 0 /*, "???î«?"*/ },

  012c4	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@
  012cb	b8 69 00 00 00	 mov	 eax, 105		; 00000069H
  012d0	66 c7 85 ba 8d
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+10502], 123 ; 0000007bH
  012d9	66 89 85 be 8d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10506], ax
  012e0	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@+16
  012e7	66 89 85 d0 8d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10524], ax
  012ee	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OCDGGEDN@data?2se?2sam_06?4wav@+18
  012f5	68 b5 00 00 00	 push	 181			; 000000b5H
  012fa	88 85 d2 8d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+10526], al
  01300	8d 85 d3 8d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+10527]
  01306	6a 00		 push	 0
  01308	50		 push	 eax
  01309	c6 85 bc 8d ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+10504], 0
  01310	0f 11 85 c0 8d
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+10508], xmm0
  01317	e8 00 00 00 00	 call	 _memset

; 63   : 	{  106,	"data\\se\\sam_07.wav", 123, 0, 0 /*, "???î¸?"*/ },

  0131c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@
  01323	b8 6a 00 00 00	 mov	 eax, 106		; 0000006aH
  01328	66 c7 85 88 8e
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+10708], 123 ; 0000007bH
  01331	66 89 85 8c 8e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10712], ax
  01338	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@+16
  0133f	66 89 85 9e 8e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10730], ax
  01346	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CJGKLHJI@data?2se?2sam_07?4wav@+18
  0134d	68 b5 00 00 00	 push	 181			; 000000b5H
  01352	88 85 a0 8e ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+10732], al
  01358	8d 85 a1 8e ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+10733]
  0135e	6a 00		 push	 0
  01360	50		 push	 eax
  01361	c6 85 8a 8e ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+10710], 0
  01368	0f 11 85 8e 8e
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+10714], xmm0
  0136f	e8 00 00 00 00	 call	 _memset

; 64   : 	{  107,	"data\\se\\sam_08.wav", 123, 0, 0 /*, "?????"*/ },

  01374	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@
  0137b	b8 6b 00 00 00	 mov	 eax, 107		; 0000006bH
  01380	66 c7 85 56 8f
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+10914], 123 ; 0000007bH
  01389	66 89 85 5a 8f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10918], ax
  01390	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@+16
  01397	66 89 85 6c 8f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+10936], ax
  0139e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NIDMAFEN@data?2se?2sam_08?4wav@+18
  013a5	c6 85 58 8f ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+10916], 0
  013ac	0f 11 85 5c 8f
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+10920], xmm0
  013b3	88 85 6e 8f ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+10938], al
  013b9	68 b5 00 00 00	 push	 181			; 000000b5H
  013be	8d 85 6f 8f ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+10939]
  013c4	6a 00		 push	 0
  013c6	50		 push	 eax
  013c7	e8 00 00 00 00	 call	 _memset

; 65   : 	{  108,	"data\\se\\sam_09.wav", 123, 0, 0 /*, "???î«?"*/ },

  013cc	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@
  013d3	b8 6c 00 00 00	 mov	 eax, 108		; 0000006cH
  013d8	66 c7 85 24 90
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+11120], 123 ; 0000007bH
  013e1	66 89 85 28 90
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11124], ax
  013e8	83 c4 48	 add	 esp, 72			; 00000048H
  013eb	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@+16
  013f2	66 89 85 3a 90
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11142], ax
  013f9	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BDGANGOI@data?2se?2sam_09?4wav@+18
  01400	68 b5 00 00 00	 push	 181			; 000000b5H
  01405	88 85 3c 90 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+11144], al
  0140b	8d 85 3d 90 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+11145]
  01411	6a 00		 push	 0
  01413	50		 push	 eax
  01414	c6 85 26 90 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+11122], 0
  0141b	0f 11 85 2a 90
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+11126], xmm0
  01422	e8 00 00 00 00	 call	 _memset

; 66   : 	{  109,	"data\\se\\sam_10.wav", 123, 0, 0 /*, "???î¸?"*/ },

  01427	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@
  0142e	b8 6d 00 00 00	 mov	 eax, 109		; 0000006dH
  01433	66 c7 85 f2 90
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+11326], 123 ; 0000007bH
  0143c	66 89 85 f6 90
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11330], ax
  01443	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@+16
  0144a	66 89 85 08 91
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11348], ax
  01451	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JCBIIMJE@data?2se?2sam_10?4wav@+18
  01458	68 b5 00 00 00	 push	 181			; 000000b5H
  0145d	88 85 0a 91 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+11350], al
  01463	8d 85 0b 91 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+11351]
  01469	6a 00		 push	 0
  0146b	50		 push	 eax
  0146c	c6 85 f4 90 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+11328], 0
  01473	0f 11 85 f8 90
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+11332], xmm0
  0147a	e8 00 00 00 00	 call	 _memset

; 67   : 	{  110,	"data\\se\\sam_11.wav", 123, 0, 0 /*, "?????"*/ },

  0147f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@
  01486	b8 6e 00 00 00	 mov	 eax, 110		; 0000006eH
  0148b	66 c7 85 c0 91
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+11532], 123 ; 0000007bH
  01494	66 89 85 c4 91
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11536], ax
  0149b	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@+16
  014a2	66 89 85 d6 91
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11554], ax
  014a9	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FJEEFPDB@data?2se?2sam_11?4wav@+18
  014b0	68 b5 00 00 00	 push	 181			; 000000b5H
  014b5	88 85 d8 91 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+11556], al
  014bb	8d 85 d9 91 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+11557]
  014c1	6a 00		 push	 0
  014c3	50		 push	 eax
  014c4	c6 85 c2 91 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+11534], 0
  014cb	0f 11 85 c6 91
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+11538], xmm0
  014d2	e8 00 00 00 00	 call	 _memset

; 68   : 	{  111,	"data\\se\\sam_12.wav", 123, 0, 0 /*, "???î«?"*/ },

  014d7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@
  014de	b8 6f 00 00 00	 mov	 eax, 111		; 0000006fH
  014e3	66 c7 85 8e 92
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+11738], 123 ; 0000007bH
  014ec	66 89 85 92 92
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11742], ax
  014f3	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@+16
  014fa	66 89 85 a4 92
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11760], ax
  01501	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NPNACNJP@data?2se?2sam_12?4wav@+18
  01508	68 b5 00 00 00	 push	 181			; 000000b5H
  0150d	88 85 a6 92 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+11762], al
  01513	8d 85 a7 92 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+11763]
  01519	6a 00		 push	 0
  0151b	50		 push	 eax
  0151c	c6 85 90 92 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+11740], 0
  01523	0f 11 85 94 92
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+11744], xmm0
  0152a	e8 00 00 00 00	 call	 _memset

; 69   : 	{  112,	"data\\se\\sam_13.wav", 123, 0, 0 /*, "???î¸?"*/ },

  0152f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@
  01536	b8 70 00 00 00	 mov	 eax, 112		; 00000070H
  0153b	66 c7 85 5c 93
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+11944], 123 ; 0000007bH
  01544	66 89 85 60 93
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11948], ax
  0154b	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@+16
  01552	66 89 85 72 93
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+11966], ax
  01559	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BEIMPODK@data?2se?2sam_13?4wav@+18
  01560	68 b5 00 00 00	 push	 181			; 000000b5H
  01565	88 85 74 93 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+11968], al
  0156b	8d 85 75 93 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+11969]
  01571	6a 00		 push	 0
  01573	50		 push	 eax
  01574	c6 85 5e 93 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+11946], 0
  0157b	0f 11 85 62 93
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+11950], xmm0
  01582	e8 00 00 00 00	 call	 _memset
  01587	66 c7 85 2a 94
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+12150], 123 ; 0000007bH

; 70   : 	{  113,	"data\\se\\sam_14.wav", 123, 0, 0 /*, "?????"*/ },

  01590	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@
  01597	b8 71 00 00 00	 mov	 eax, 113		; 00000071H
  0159c	c6 85 2c 94 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+12152], 0
  015a3	66 89 85 2e 94
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12154], ax
  015aa	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@+16
  015b1	66 89 85 40 94
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12172], ax
  015b8	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JIJMOIC@data?2se?2sam_14?4wav@+18
  015bf	68 b5 00 00 00	 push	 181			; 000000b5H
  015c4	88 85 42 94 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+12174], al
  015ca	8d 85 43 94 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+12175]
  015d0	6a 00		 push	 0
  015d2	50		 push	 eax
  015d3	0f 11 85 30 94
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+12156], xmm0
  015da	e8 00 00 00 00	 call	 _memset

; 71   : 	{  114,	"data\\se\\sam_15.wav", 85, 0, 0 /*, "?????????"*/ },

  015df	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@
  015e6	b8 72 00 00 00	 mov	 eax, 114		; 00000072H
  015eb	66 c7 85 f8 94
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+12356], 123 ; 0000007bH
  015f4	66 89 85 fc 94
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12360], ax
  015fb	83 c4 48	 add	 esp, 72			; 00000048H
  015fe	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@+16
  01605	66 89 85 0e 95
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12378], ax
  0160c	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MCNFBNCH@data?2se?2sam_15?4wav@+18
  01613	68 b5 00 00 00	 push	 181			; 000000b5H
  01618	88 85 10 95 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+12380], al
  0161e	8d 85 11 95 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+12381]
  01624	6a 00		 push	 0
  01626	50		 push	 eax
  01627	c6 85 fa 94 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+12358], 0
  0162e	0f 11 85 fe 94
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+12362], xmm0
  01635	e8 00 00 00 00	 call	 _memset

; 72   : 	{  115,	"data\\se\\sam_16.wav", 123, 0, 0 /*, "???"*/ },

  0163a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@
  01641	b8 73 00 00 00	 mov	 eax, 115		; 00000073H
  01646	66 c7 85 c6 95
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+12562], 85 ; 00000055H
  0164f	66 89 85 ca 95
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12566], ax
  01656	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@+16
  0165d	66 89 85 dc 95
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12584], ax
  01664	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EEEBGPIJ@data?2se?2sam_16?4wav@+18
  0166b	68 b5 00 00 00	 push	 181			; 000000b5H
  01670	88 85 de 95 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+12586], al
  01676	8d 85 df 95 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+12587]
  0167c	6a 00		 push	 0
  0167e	50		 push	 eax
  0167f	c6 85 c8 95 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+12564], 0
  01686	0f 11 85 cc 95
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+12568], xmm0
  0168d	e8 00 00 00 00	 call	 _memset

; 73   : 	{  116,	"data\\se\\sam_17.wav", 123, 0, 0 /*, "?î¥"*/ },

  01692	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@
  01699	b8 74 00 00 00	 mov	 eax, 116		; 00000074H
  0169e	66 c7 85 94 96
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+12768], 123 ; 0000007bH
  016a7	66 89 85 98 96
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12772], ax
  016ae	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@+16
  016b5	66 89 85 aa 96
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12790], ax
  016bc	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IPBNLMCM@data?2se?2sam_17?4wav@+18
  016c3	68 b5 00 00 00	 push	 181			; 000000b5H
  016c8	88 85 ac 96 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+12792], al
  016ce	8d 85 ad 96 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+12793]
  016d4	6a 00		 push	 0
  016d6	50		 push	 eax
  016d7	c6 85 96 96 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+12770], 0
  016de	0f 11 85 9a 96
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+12774], xmm0
  016e5	e8 00 00 00 00	 call	 _memset

; 74   : 	{  117,	"data\\se\\sam_18.wav", 123, 0, 0 /*, "????"*/ },

  016ea	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@
  016f1	b8 75 00 00 00	 mov	 eax, 117		; 00000075H
  016f6	66 c7 85 62 97
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+12974], 123 ; 0000007bH
  016ff	66 89 85 66 97
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12978], ax
  01706	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@+16
  0170d	66 89 85 78 97
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+12996], ax
  01714	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HOELAOPJ@data?2se?2sam_18?4wav@+18
  0171b	68 b5 00 00 00	 push	 181			; 000000b5H
  01720	88 85 7a 97 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+12998], al
  01726	8d 85 7b 97 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+12999]
  0172c	6a 00		 push	 0
  0172e	50		 push	 eax
  0172f	c6 85 64 97 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+12976], 0
  01736	0f 11 85 68 97
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+12980], xmm0
  0173d	e8 00 00 00 00	 call	 _memset

; 75   : 	{  118,	"data\\se\\sam_19.wav", 123, 0, 0 /*, "??"*/ },

  01742	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@
  01749	b8 76 00 00 00	 mov	 eax, 118		; 00000076H
  0174e	66 c7 85 30 98
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+13180], 123 ; 0000007bH
  01757	c6 85 32 98 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+13182], 0
  0175e	66 89 85 34 98
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13184], ax
  01765	0f 11 85 36 98
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+13186], xmm0
  0176c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@+16
  01773	66 89 85 46 98
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13202], ax
  0177a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LFBHNNFM@data?2se?2sam_19?4wav@+18
  01781	68 b5 00 00 00	 push	 181			; 000000b5H
  01786	88 85 48 98 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+13204], al
  0178c	8d 85 49 98 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+13205]
  01792	6a 00		 push	 0
  01794	50		 push	 eax
  01795	e8 00 00 00 00	 call	 _memset

; 76   : 	{  119,	"data\\se\\sam_20.wav", 123, 0, 0 /*, "î£?"*/ },

  0179a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@
  017a1	b8 77 00 00 00	 mov	 eax, 119		; 00000077H
  017a6	66 c7 85 fe 98
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+13386], 123 ; 0000007bH
  017af	66 89 85 02 99
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13390], ax
  017b6	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@+16
  017bd	66 89 85 14 99
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13408], ax
  017c4	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KDPAJGAJ@data?2se?2sam_20?4wav@+18
  017cb	68 b5 00 00 00	 push	 181			; 000000b5H
  017d0	88 85 16 99 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+13410], al
  017d6	8d 85 17 99 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+13411]
  017dc	6a 00		 push	 0
  017de	50		 push	 eax
  017df	c6 85 00 99 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+13388], 0
  017e6	0f 11 85 04 99
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+13392], xmm0
  017ed	e8 00 00 00 00	 call	 _memset

; 77   : 	{  120,	"data\\se\\sam_21.wav", 123, 0, 0 /*, "î·?"*/ },

  017f2	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@
  017f9	b8 78 00 00 00	 mov	 eax, 120		; 00000078H
  017fe	66 c7 85 cc 99
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+13592], 123 ; 0000007bH
  01807	66 89 85 d0 99
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13596], ax
  0180e	83 c4 48	 add	 esp, 72			; 00000048H
  01811	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@+16
  01818	66 89 85 e2 99
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13614], ax
  0181f	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GIKMEFKM@data?2se?2sam_21?4wav@+18
  01826	68 b5 00 00 00	 push	 181			; 000000b5H
  0182b	88 85 e4 99 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+13616], al
  01831	8d 85 e5 99 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+13617]
  01837	6a 00		 push	 0
  01839	50		 push	 eax
  0183a	c6 85 ce 99 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+13594], 0
  01841	0f 11 85 d2 99
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+13598], xmm0
  01848	e8 00 00 00 00	 call	 _memset

; 78   : 	{  121,	"data\\se\\sam_22.wav", 123, 0, 0 /*, "îî"*/ },

  0184d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@
  01854	b8 79 00 00 00	 mov	 eax, 121		; 00000079H
  01859	66 c7 85 9a 9a
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+13798], 123 ; 0000007bH
  01862	66 89 85 9e 9a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13802], ax
  01869	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@+16
  01870	66 89 85 b0 9a
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+13820], ax
  01877	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OODIDHAC@data?2se?2sam_22?4wav@+18
  0187e	68 b5 00 00 00	 push	 181			; 000000b5H
  01883	88 85 b2 9a ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+13822], al
  01889	8d 85 b3 9a ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+13823]
  0188f	6a 00		 push	 0
  01891	50		 push	 eax
  01892	c6 85 9c 9a ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+13800], 0
  01899	0f 11 85 a0 9a
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+13804], xmm0
  018a0	e8 00 00 00 00	 call	 _memset

; 79   : 	{  122,	"data\\se\\sam_23.wav", 123, 0, 0 /*, "?î¹îª"*/ },

  018a5	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@
  018ac	b8 7a 00 00 00	 mov	 eax, 122		; 0000007aH
  018b1	66 c7 85 68 9b
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+14004], 123 ; 0000007bH
  018ba	66 89 85 6c 9b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14008], ax
  018c1	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@+16
  018c8	66 89 85 7e 9b
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14026], ax
  018cf	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CFGEOEKH@data?2se?2sam_23?4wav@+18
  018d6	68 b5 00 00 00	 push	 181			; 000000b5H
  018db	88 85 80 9b ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+14028], al
  018e1	8d 85 81 9b ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+14029]
  018e7	6a 00		 push	 0
  018e9	50		 push	 eax
  018ea	c6 85 6a 9b ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+14006], 0
  018f1	0f 11 85 6e 9b
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+14010], xmm0
  018f8	e8 00 00 00 00	 call	 _memset

; 80   : 	{  123,	"data\\se\\sam_24.wav", 123, 0, 0 /*, "î¾?"*/ },

  018fd	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@
  01904	b8 7b 00 00 00	 mov	 eax, 123		; 0000007bH
  01909	66 c7 85 36 9c
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+14210], 123 ; 0000007bH
  01912	66 89 85 3a 9c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14214], ax
  01919	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@+16
  01920	66 89 85 4c 9c
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14232], ax
  01927	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DIGBNEBP@data?2se?2sam_24?4wav@+18
  0192e	c6 85 38 9c ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+14212], 0
  01935	0f 11 85 3c 9c
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+14216], xmm0
  0193c	88 85 4e 9c ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+14234], al
  01942	68 b5 00 00 00	 push	 181			; 000000b5H
  01947	8d 85 4f 9c ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+14235]
  0194d	6a 00		 push	 0
  0194f	50		 push	 eax
  01950	e8 00 00 00 00	 call	 _memset

; 81   : 
; 82   : 	// ??
; 83   : //	{  151,	"data\\se\\sak_01.wav", 121, 0, 1 /*, "????"*/ },
; 84   : //	{  152,	"data\\se\\sak_02.wav", 121, 0, 1 /*, "???î ¢?"*/ },
; 85   : 	{  151,	"data\\se\\sak_01.wav", 127, 0, 1 /*, "?????"*/ },

  01955	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@
  0195c	b8 97 00 00 00	 mov	 eax, 151		; 00000097H
  01961	66 c7 85 04 9d
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+14416], 123 ; 0000007bH
  0196a	66 89 85 08 9d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14420], ax
  01971	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@+16
  01978	66 89 85 1a 9d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14438], ax
  0197f	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IMCJCNAP@data?2se?2sak_01?4wav@+18
  01986	68 b5 00 00 00	 push	 181			; 000000b5H
  0198b	88 85 1c 9d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+14440], al
  01991	8d 85 1d 9d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+14441]
  01997	6a 00		 push	 0
  01999	50		 push	 eax
  0199a	c6 85 06 9d ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+14418], 0
  019a1	0f 11 85 0a 9d
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+14422], xmm0
  019a8	e8 00 00 00 00	 call	 _memset

; 86   : //x	{  152,	"data\\se\\sak_02.wav", 127, 4, 1 /*, "î·?????"*/ },
; 87   : 	{  152,	"data\\se\\sak_02.wav", 127, 0, 1 /*, "î·?????"*/ },

  019ad	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@
  019b4	b8 98 00 00 00	 mov	 eax, 152		; 00000098H
  019b9	66 c7 85 d2 9d
	ff ff 7f 00	 mov	 WORD PTR _sndconfig$[ebp+14622], 127 ; 0000007fH
  019c2	66 89 85 d6 9d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14626], ax
  019c9	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@+16
  019d0	66 89 85 e8 9d
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14644], ax
  019d7	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KLNFPKB@data?2se?2sak_02?4wav@+18
  019de	68 b5 00 00 00	 push	 181			; 000000b5H
  019e3	88 85 ea 9d ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+14646], al
  019e9	8d 85 eb 9d ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+14647]
  019ef	6a 00		 push	 0
  019f1	50		 push	 eax
  019f2	c6 85 d4 9d ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+14624], 1
  019f9	0f 11 85 d8 9d
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+14628], xmm0
  01a00	e8 00 00 00 00	 call	 _memset

; 88   : 	{  153,	"data\\se\\sak_03.wav", 121, 0, 1 /*, "?"*/ },

  01a05	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@
  01a0c	b8 99 00 00 00	 mov	 eax, 153		; 00000099H
  01a11	66 c7 85 a0 9e
	ff ff 7f 00	 mov	 WORD PTR _sndconfig$[ebp+14828], 127 ; 0000007fH
  01a1a	66 89 85 a4 9e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14832], ax
  01a21	83 c4 48	 add	 esp, 72			; 00000048H
  01a24	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@+16
  01a2b	66 89 85 b6 9e
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+14850], ax
  01a32	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MBOBIMAE@data?2se?2sak_03?4wav@+18
  01a39	68 b5 00 00 00	 push	 181			; 000000b5H
  01a3e	88 85 b8 9e ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+14852], al
  01a44	8d 85 b9 9e ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+14853]
  01a4a	6a 00		 push	 0
  01a4c	50		 push	 eax
  01a4d	c6 85 a2 9e ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+14830], 1
  01a54	0f 11 85 a6 9e
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+14834], xmm0
  01a5b	e8 00 00 00 00	 call	 _memset

; 89   : 	{  154,	"data\\se\\sak_04.wav", 90, 0, 1 /*, "?"*/ },

  01a60	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@
  01a67	b8 9a 00 00 00	 mov	 eax, 154		; 0000009aH
  01a6c	66 c7 85 6e 9f
	ff ff 79 00	 mov	 WORD PTR _sndconfig$[ebp+15034], 121 ; 00000079H
  01a75	66 89 85 72 9f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15038], ax
  01a7c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@+16
  01a83	66 89 85 84 9f
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15056], ax
  01a8a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NMOELMLM@data?2se?2sak_04?4wav@+18
  01a91	68 b5 00 00 00	 push	 181			; 000000b5H
  01a96	88 85 86 9f ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+15058], al
  01a9c	8d 85 87 9f ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+15059]
  01aa2	6a 00		 push	 0
  01aa4	50		 push	 eax
  01aa5	c6 85 70 9f ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+15036], 1
  01aac	0f 11 85 74 9f
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+15040], xmm0
  01ab3	e8 00 00 00 00	 call	 _memset

; 90   : 	{  155,	"data\\se\\sak_05.wav", 95, 0, 1 /*, "?î"*/ },

  01ab8	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@
  01abf	b8 9b 00 00 00	 mov	 eax, 155		; 0000009bH
  01ac4	66 c7 85 3c a0
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+15240], 90 ; 0000005aH
  01acd	66 89 85 40 a0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15244], ax
  01ad4	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@+16
  01adb	66 89 85 52 a0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15262], ax
  01ae2	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BHLIGPBJ@data?2se?2sak_05?4wav@+18
  01ae9	68 b5 00 00 00	 push	 181			; 000000b5H
  01aee	88 85 54 a0 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+15264], al
  01af4	8d 85 55 a0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+15265]
  01afa	6a 00		 push	 0
  01afc	50		 push	 eax
  01afd	c6 85 3e a0 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+15242], 1
  01b04	0f 11 85 42 a0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+15246], xmm0
  01b0b	e8 00 00 00 00	 call	 _memset
  01b10	66 c7 85 0a a1
	ff ff 5f 00	 mov	 WORD PTR _sndconfig$[ebp+15446], 95 ; 0000005fH

; 91   : 	{  156,	"data\\se\\sak_06.wav", 127, 0, 1 /*, "?î¡"*/ },

  01b19	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@
  01b20	b8 9c 00 00 00	 mov	 eax, 156		; 0000009cH
  01b25	c6 85 0c a1 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+15448], 1
  01b2c	66 89 85 0e a1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15450], ax
  01b33	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@+16
  01b3a	66 89 85 20 a1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15468], ax
  01b41	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JBCMBNLH@data?2se?2sak_06?4wav@+18
  01b48	68 b5 00 00 00	 push	 181			; 000000b5H
  01b4d	88 85 22 a1 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+15470], al
  01b53	8d 85 23 a1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+15471]
  01b59	6a 00		 push	 0
  01b5b	50		 push	 eax
  01b5c	0f 11 85 10 a1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+15452], xmm0
  01b63	e8 00 00 00 00	 call	 _memset

; 92   : 	{  157,	"data\\se\\sak_07.wav", 125, 0, 1 /*, "î?????"*/ },

  01b68	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@
  01b6f	b8 9d 00 00 00	 mov	 eax, 157		; 0000009dH
  01b74	66 c7 85 d8 a1
	ff ff 7f 00	 mov	 WORD PTR _sndconfig$[ebp+15652], 127 ; 0000007fH
  01b7d	66 89 85 dc a1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15656], ax
  01b84	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@+16
  01b8b	66 89 85 ee a1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15674], ax
  01b92	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FKHAMOBC@data?2se?2sak_07?4wav@+18
  01b99	68 b5 00 00 00	 push	 181			; 000000b5H
  01b9e	88 85 f0 a1 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+15676], al
  01ba4	8d 85 f1 a1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+15677]
  01baa	6a 00		 push	 0
  01bac	50		 push	 eax
  01bad	c6 85 da a1 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+15654], 1
  01bb4	0f 11 85 de a1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+15658], xmm0
  01bbb	e8 00 00 00 00	 call	 _memset

; 93   : 	{  158,	"data\\se\\sak_08.wav", 125, 0, 1 /*, "????î¦??"*/ },

  01bc0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@
  01bc7	b8 9e 00 00 00	 mov	 eax, 158		; 0000009eH
  01bcc	66 c7 85 a6 a2
	ff ff 7d 00	 mov	 WORD PTR _sndconfig$[ebp+15858], 125 ; 0000007dH
  01bd5	66 89 85 aa a2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15862], ax
  01bdc	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@+16
  01be3	66 89 85 bc a2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+15880], ax
  01bea	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KLCGHMMH@data?2se?2sak_08?4wav@+18
  01bf1	68 b5 00 00 00	 push	 181			; 000000b5H
  01bf6	88 85 be a2 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+15882], al
  01bfc	8d 85 bf a2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+15883]
  01c02	6a 00		 push	 0
  01c04	50		 push	 eax
  01c05	c6 85 a8 a2 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+15860], 1
  01c0c	0f 11 85 ac a2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+15864], xmm0
  01c13	e8 00 00 00 00	 call	 _memset

; 94   : 	{  159,	"data\\se\\sak_09a.wav", 120, 0, 1 /*, "î?î¡?î£"*/ },

  01c18	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@HNKPAMBO@data?2se?2sak_09a?4wav@
  01c1f	83 c4 48	 add	 esp, 72			; 00000048H
  01c22	66 c7 85 74 a3
	ff ff 7d 00	 mov	 WORD PTR _sndconfig$[ebp+16064], 125 ; 0000007dH
  01c2b	b8 9f 00 00 00	 mov	 eax, 159		; 0000009fH
  01c30	c6 85 76 a3 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+16066], 1
  01c37	66 89 85 78 a3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16068], ax
  01c3e	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@HNKPAMBO@data?2se?2sak_09a?4wav@+16
  01c43	68 b4 00 00 00	 push	 180			; 000000b4H
  01c48	89 85 8a a3 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+16086], eax
  01c4e	8d 85 8e a3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+16090]
  01c54	6a 00		 push	 0
  01c56	50		 push	 eax
  01c57	0f 11 85 7a a3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+16070], xmm0
  01c5e	e8 00 00 00 00	 call	 _memset

; 95   : 	{  160,	"data\\se\\sak_10.wav", 115, 0, 1 /*, "??î¡?î£???"*/ },

  01c63	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@
  01c6a	b8 a0 00 00 00	 mov	 eax, 160		; 000000a0H
  01c6f	66 c7 85 42 a4
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+16270], 120 ; 00000078H
  01c78	66 89 85 46 a4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16274], ax
  01c7f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@+16
  01c86	66 89 85 58 a4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16292], ax
  01c8d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OBACPFBO@data?2se?2sak_10?4wav@+18
  01c94	68 b5 00 00 00	 push	 181			; 000000b5H
  01c99	88 85 5a a4 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+16294], al
  01c9f	8d 85 5b a4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+16295]
  01ca5	6a 00		 push	 0
  01ca7	50		 push	 eax
  01ca8	c6 85 44 a4 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+16272], 1
  01caf	0f 11 85 48 a4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+16276], xmm0
  01cb6	e8 00 00 00 00	 call	 _memset

; 96   : 	{  161,	"data\\se\\sak_11.wav",  85, 0, 1 /*, "î¦?î¶"*/ },

  01cbb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@
  01cc2	b8 a1 00 00 00	 mov	 eax, 161		; 000000a1H
  01cc7	66 c7 85 10 a5
	ff ff 73 00	 mov	 WORD PTR _sndconfig$[ebp+16476], 115 ; 00000073H
  01cd0	66 89 85 14 a5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16480], ax
  01cd7	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@+16
  01cde	c6 85 12 a5 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+16478], 1
  01ce5	0f 11 85 16 a5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+16482], xmm0
  01cec	66 89 85 26 a5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16498], ax
  01cf3	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CKFOCGLL@data?2se?2sak_11?4wav@+18
  01cfa	68 b5 00 00 00	 push	 181			; 000000b5H
  01cff	88 85 28 a5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+16500], al
  01d05	8d 85 29 a5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+16501]
  01d0b	6a 00		 push	 0
  01d0d	50		 push	 eax
  01d0e	e8 00 00 00 00	 call	 _memset

; 97   : 	{  162,	"data\\se\\sak_12.wav", 120, 0, 1 /*, "?î"*/ },

  01d13	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@
  01d1a	b8 a2 00 00 00	 mov	 eax, 162		; 000000a2H
  01d1f	66 c7 85 de a5
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+16682], 85 ; 00000055H
  01d28	66 89 85 e2 a5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16686], ax
  01d2f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@+16
  01d36	66 89 85 f4 a5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16704], ax
  01d3d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KMMKFEBF@data?2se?2sak_12?4wav@+18
  01d44	68 b5 00 00 00	 push	 181			; 000000b5H
  01d49	88 85 f6 a5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+16706], al
  01d4f	8d 85 f7 a5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+16707]
  01d55	6a 00		 push	 0
  01d57	50		 push	 eax
  01d58	c6 85 e0 a5 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+16684], 1
  01d5f	0f 11 85 e4 a5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+16688], xmm0
  01d66	e8 00 00 00 00	 call	 _memset

; 98   : 	{  163,	"data\\se\\sak_13.wav", 100, 0, 1 /*, "?????î ??îª"*/ },

  01d6b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@
  01d72	b8 a3 00 00 00	 mov	 eax, 163		; 000000a3H
  01d77	66 c7 85 ac a6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+16888], 120 ; 00000078H
  01d80	66 89 85 b0 a6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16892], ax
  01d87	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@+16
  01d8e	66 89 85 c2 a6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+16910], ax
  01d95	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GHJGIHLA@data?2se?2sak_13?4wav@+18
  01d9c	68 b5 00 00 00	 push	 181			; 000000b5H
  01da1	88 85 c4 a6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+16912], al
  01da7	8d 85 c5 a6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+16913]
  01dad	6a 00		 push	 0
  01daf	50		 push	 eax
  01db0	c6 85 ae a6 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+16890], 1
  01db7	0f 11 85 b2 a6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+16894], xmm0
  01dbe	e8 00 00 00 00	 call	 _memset

; 99   : 	{  164,	"data\\se\\sak_14.wav", 127, 0, 1 /*, "??"*/ },

  01dc3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@
  01dca	b8 a4 00 00 00	 mov	 eax, 164		; 000000a4H
  01dcf	66 c7 85 7a a7
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+17094], 100 ; 00000064H
  01dd8	66 89 85 7e a7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17098], ax
  01ddf	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@+16
  01de6	66 89 85 90 a7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17116], ax
  01ded	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HKJDLHAI@data?2se?2sak_14?4wav@+18
  01df4	68 b5 00 00 00	 push	 181			; 000000b5H
  01df9	88 85 92 a7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+17118], al
  01dff	8d 85 93 a7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+17119]
  01e05	6a 00		 push	 0
  01e07	50		 push	 eax
  01e08	c6 85 7c a7 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+17096], 1
  01e0f	0f 11 85 80 a7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+17100], xmm0
  01e16	e8 00 00 00 00	 call	 _memset

; 100  : 	{  165,	"data\\se\\sak_15.wav", 120, 0, 1 /*, "ä½??"*/ },

  01e1b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@
  01e22	83 c4 48	 add	 esp, 72			; 00000048H
  01e25	66 c7 85 48 a8
	ff ff 7f 00	 mov	 WORD PTR _sndconfig$[ebp+17300], 127 ; 0000007fH
  01e2e	b8 a5 00 00 00	 mov	 eax, 165		; 000000a5H
  01e33	c6 85 4a a8 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+17302], 1
  01e3a	66 89 85 4c a8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17304], ax
  01e41	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@+16
  01e48	66 89 85 5e a8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17322], ax
  01e4f	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LBMPGEKN@data?2se?2sak_15?4wav@+18
  01e56	68 b5 00 00 00	 push	 181			; 000000b5H
  01e5b	88 85 60 a8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+17324], al
  01e61	8d 85 61 a8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+17325]
  01e67	6a 00		 push	 0
  01e69	50		 push	 eax
  01e6a	0f 11 85 4e a8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+17306], xmm0
  01e71	e8 00 00 00 00	 call	 _memset

; 101  : 	{  166,	"data\\se\\sak_16.wav", 120, 0, 1 /*, "????î·????"*/ },

  01e76	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@
  01e7d	b8 a6 00 00 00	 mov	 eax, 166		; 000000a6H
  01e82	66 c7 85 16 a9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+17506], 120 ; 00000078H
  01e8b	66 89 85 1a a9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17510], ax
  01e92	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@+16
  01e99	66 89 85 2c a9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17528], ax
  01ea0	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DHFLBGAD@data?2se?2sak_16?4wav@+18
  01ea7	68 b5 00 00 00	 push	 181			; 000000b5H
  01eac	88 85 2e a9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+17530], al
  01eb2	8d 85 2f a9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+17531]
  01eb8	c6 85 18 a9 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+17508], 1
  01ebf	0f 11 85 1c a9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+17512], xmm0
  01ec6	6a 00		 push	 0
  01ec8	50		 push	 eax
  01ec9	e8 00 00 00 00	 call	 _memset

; 102  : 	{  167,	"data\\se\\sak_17.wav", 110, 0, 1 /*, "îª??"*/ },

  01ece	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@
  01ed5	b8 a7 00 00 00	 mov	 eax, 167		; 000000a7H
  01eda	66 c7 85 e4 a9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+17712], 120 ; 00000078H
  01ee3	66 89 85 e8 a9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17716], ax
  01eea	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@+16
  01ef1	66 89 85 fa a9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17734], ax
  01ef8	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PMAHMFKG@data?2se?2sak_17?4wav@+18
  01eff	68 b5 00 00 00	 push	 181			; 000000b5H
  01f04	88 85 fc a9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+17736], al
  01f0a	8d 85 fd a9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+17737]
  01f10	6a 00		 push	 0
  01f12	50		 push	 eax
  01f13	c6 85 e6 a9 ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+17714], 1
  01f1a	0f 11 85 ea a9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+17718], xmm0
  01f21	e8 00 00 00 00	 call	 _memset

; 103  : 	{  168,	"data\\se\\sak_09b.wav", 120, 0, 1 /*, "î?î¡?î£?î£?"*/ },

  01f26	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@PLDLHOLA@data?2se?2sak_09b?4wav@
  01f2d	b8 a8 00 00 00	 mov	 eax, 168		; 000000a8H
  01f32	66 c7 85 b2 aa
	ff ff 6e 00	 mov	 WORD PTR _sndconfig$[ebp+17918], 110 ; 0000006eH
  01f3b	66 89 85 b6 aa
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+17922], ax
  01f42	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@PLDLHOLA@data?2se?2sak_09b?4wav@+16
  01f47	68 b4 00 00 00	 push	 180			; 000000b4H
  01f4c	89 85 c8 aa ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+17940], eax
  01f52	8d 85 cc aa ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+17944]
  01f58	6a 00		 push	 0
  01f5a	50		 push	 eax
  01f5b	c6 85 b4 aa ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+17920], 1
  01f62	0f 11 85 b8 aa
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+17924], xmm0
  01f69	e8 00 00 00 00	 call	 _memset

; 104  : 
; 105  : 	// ????
; 106  : 	{  201,	"data\\se\\sas_01.wav", 90, 0, 0 /*, "î¹î©?î??"*/ },

  01f6e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@
  01f75	b8 c9 00 00 00	 mov	 eax, 201		; 000000c9H
  01f7a	66 c7 85 80 ab
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+18124], 120 ; 00000078H
  01f83	66 89 85 84 ab
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18128], ax
  01f8a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@+16
  01f91	66 89 85 96 ab
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18146], ax
  01f98	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JLDBMNGG@data?2se?2sas_01?4wav@+18
  01f9f	68 b5 00 00 00	 push	 181			; 000000b5H
  01fa4	88 85 98 ab ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+18148], al
  01faa	8d 85 99 ab ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+18149]
  01fb0	6a 00		 push	 0
  01fb2	50		 push	 eax
  01fb3	c6 85 82 ab ff
	ff 01		 mov	 BYTE PTR _sndconfig$[ebp+18126], 1
  01fba	0f 11 85 86 ab
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+18130], xmm0
  01fc1	e8 00 00 00 00	 call	 _memset

; 107  : 	{  202,	"data\\se\\sas_02.wav", 80, 0, 0 /*, "????????"*/ },

  01fc6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@
  01fcd	b8 ca 00 00 00	 mov	 eax, 202		; 000000caH
  01fd2	66 c7 85 4e ac
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+18330], 90 ; 0000005aH
  01fdb	66 89 85 52 ac
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18334], ax
  01fe2	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@+16
  01fe9	66 89 85 64 ac
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18352], ax
  01ff0	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BNKFLPMI@data?2se?2sas_02?4wav@+18
  01ff7	68 b5 00 00 00	 push	 181			; 000000b5H
  01ffc	88 85 66 ac ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+18354], al
  02002	8d 85 67 ac ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+18355]
  02008	6a 00		 push	 0
  0200a	50		 push	 eax
  0200b	c6 85 50 ac ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+18332], 0
  02012	0f 11 85 54 ac
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+18336], xmm0
  02019	e8 00 00 00 00	 call	 _memset

; 108  : 	{  203,	"data\\se\\sas_03.wav", 75, 0, 0 /*, "??????î¼??"*/ },

  0201e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@
  02025	83 c4 48	 add	 esp, 72			; 00000048H
  02028	66 c7 85 1c ad
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+18536], 80 ; 00000050H
  02031	b8 cb 00 00 00	 mov	 eax, 203		; 000000cbH
  02036	c6 85 1e ad ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+18538], 0
  0203d	66 89 85 20 ad
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18540], ax
  02044	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@+16
  0204b	66 89 85 32 ad
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18558], ax
  02052	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NGPJGMGN@data?2se?2sas_03?4wav@+18
  02059	68 b5 00 00 00	 push	 181			; 000000b5H
  0205e	88 85 34 ad ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+18560], al
  02064	8d 85 35 ad ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+18561]
  0206a	6a 00		 push	 0
  0206c	50		 push	 eax
  0206d	0f 11 85 22 ad
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+18542], xmm0
  02074	e8 00 00 00 00	 call	 _memset

; 109  : 	{  204,	"data\\se\\sas_04.wav", 80, 0, 0 /*, "?????????"*/ },

  02079	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@
  02080	b8 cc 00 00 00	 mov	 eax, 204		; 000000ccH
  02085	66 c7 85 ea ad
	ff ff 4b 00	 mov	 WORD PTR _sndconfig$[ebp+18742], 75 ; 0000004bH
  0208e	c6 85 ec ad ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+18744], 0
  02095	66 89 85 ee ad
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18746], ax
  0209c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@+16
  020a3	66 89 85 00 ae
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18764], ax
  020aa	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MLPMFMNF@data?2se?2sas_04?4wav@+18
  020b1	68 b5 00 00 00	 push	 181			; 000000b5H
  020b6	88 85 02 ae ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+18766], al
  020bc	8d 85 03 ae ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+18767]
  020c2	6a 00		 push	 0
  020c4	50		 push	 eax
  020c5	0f 11 85 f0 ad
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+18748], xmm0
  020cc	e8 00 00 00 00	 call	 _memset

; 110  : 	{  205,	"data\\se\\sas_05.wav", 80, 0, 0 /*, "??????î¼???"*/ },

  020d1	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@
  020d8	b8 cd 00 00 00	 mov	 eax, 205		; 000000cdH
  020dd	66 c7 85 b8 ae
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+18948], 80 ; 00000050H
  020e6	66 89 85 bc ae
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18952], ax
  020ed	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@+16
  020f4	66 89 85 ce ae
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+18970], ax
  020fb	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KAIPHA@data?2se?2sas_05?4wav@+18
  02102	68 b5 00 00 00	 push	 181			; 000000b5H
  02107	88 85 d0 ae ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+18972], al
  0210d	8d 85 d1 ae ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+18973]
  02113	6a 00		 push	 0
  02115	50		 push	 eax
  02116	c6 85 ba ae ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+18950], 0
  0211d	0f 11 85 be ae
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+18954], xmm0
  02124	e8 00 00 00 00	 call	 _memset

; 111  : 	{  206,	"data\\se\\sas_06.wav", 80, 0, 0 /*, "???????"*/ },

  02129	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@
  02130	b8 ce 00 00 00	 mov	 eax, 206		; 000000ceH
  02135	66 c7 85 86 af
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+19154], 80 ; 00000050H
  0213e	66 89 85 8a af
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19158], ax
  02145	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@+16
  0214c	66 89 85 9c af
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19176], ax
  02153	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IGDEPNNO@data?2se?2sas_06?4wav@+18
  0215a	68 b5 00 00 00	 push	 181			; 000000b5H
  0215f	88 85 9e af ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+19178], al
  02165	8d 85 9f af ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+19179]
  0216b	6a 00		 push	 0
  0216d	50		 push	 eax
  0216e	c6 85 88 af ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+19156], 0
  02175	0f 11 85 8c af
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+19160], xmm0
  0217c	e8 00 00 00 00	 call	 _memset

; 112  : 	{  207,	"data\\se\\sas_07.wav", 123, 0, 0 /*, ""*/ },

  02181	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@
  02188	b8 cf 00 00 00	 mov	 eax, 207		; 000000cfH
  0218d	66 c7 85 54 b0
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+19360], 80 ; 00000050H
  02196	66 89 85 58 b0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19364], ax
  0219d	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@+16
  021a4	66 89 85 6a b0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19382], ax
  021ab	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@ENGICOHL@data?2se?2sas_07?4wav@+18
  021b2	68 b5 00 00 00	 push	 181			; 000000b5H
  021b7	88 85 6c b0 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+19384], al
  021bd	8d 85 6d b0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+19385]
  021c3	6a 00		 push	 0
  021c5	50		 push	 eax
  021c6	c6 85 56 b0 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+19362], 0
  021cd	0f 11 85 5a b0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+19366], xmm0
  021d4	e8 00 00 00 00	 call	 _memset

; 113  : 	{  208,	"data\\se\\sas_08.wav", 123, 0, 0 /*, ""*/ },

  021d9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@
  021e0	b8 d0 00 00 00	 mov	 eax, 208		; 000000d0H
  021e5	66 c7 85 22 b1
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+19566], 123 ; 0000007bH
  021ee	66 89 85 26 b1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19570], ax
  021f5	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@+16
  021fc	66 89 85 38 b1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19588], ax
  02203	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LMDOJMKO@data?2se?2sas_08?4wav@+18
  0220a	68 b5 00 00 00	 push	 181			; 000000b5H
  0220f	88 85 3a b1 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+19590], al
  02215	8d 85 3b b1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+19591]
  0221b	6a 00		 push	 0
  0221d	50		 push	 eax
  0221e	c6 85 24 b1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+19568], 0
  02225	0f 11 85 28 b1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+19572], xmm0
  0222c	e8 00 00 00 00	 call	 _memset

; 114  : 	{  209,	"data\\se\\sas_09.wav", 123, 0, 0 /*, ""*/ },

  02231	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@
  02238	b8 d1 00 00 00	 mov	 eax, 209		; 000000d1H
  0223d	66 c7 85 f0 b1
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+19772], 123 ; 0000007bH
  02246	66 89 85 f4 b1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19776], ax
  0224d	83 c4 48	 add	 esp, 72			; 00000048H
  02250	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@+16
  02257	66 89 85 06 b2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19794], ax
  0225e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HHGCEPAL@data?2se?2sas_09?4wav@+18
  02265	c6 85 f2 b1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+19774], 0
  0226c	0f 11 85 f6 b1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+19778], xmm0
  02273	88 85 08 b2 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+19796], al
  02279	68 b5 00 00 00	 push	 181			; 000000b5H
  0227e	8d 85 09 b2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+19797]
  02284	6a 00		 push	 0
  02286	50		 push	 eax
  02287	e8 00 00 00 00	 call	 _memset

; 115  : 	{  210,	"data\\se\\sas_10.wav", 123, 0, 0 /*, ""*/ },

  0228c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@
  02293	b8 d2 00 00 00	 mov	 eax, 210		; 000000d2H
  02298	66 c7 85 be b2
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+19978], 123 ; 0000007bH
  022a1	66 89 85 c2 b2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+19982], ax
  022a8	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@+16
  022af	66 89 85 d4 b2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20000], ax
  022b6	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PGBKBFHH@data?2se?2sas_10?4wav@+18
  022bd	68 b5 00 00 00	 push	 181			; 000000b5H
  022c2	88 85 d6 b2 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20002], al
  022c8	8d 85 d7 b2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+20003]
  022ce	6a 00		 push	 0
  022d0	50		 push	 eax
  022d1	c6 85 c0 b2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+19980], 0
  022d8	0f 11 85 c4 b2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+19984], xmm0
  022df	e8 00 00 00 00	 call	 _memset

; 116  : 	{  211,	"data\\se\\sas_11.wav", 65, 0, 0 /*, ??????""*/ },

  022e4	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@
  022eb	b8 d3 00 00 00	 mov	 eax, 211		; 000000d3H
  022f0	66 c7 85 8c b3
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+20184], 123 ; 0000007bH
  022f9	66 89 85 90 b3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20188], ax
  02300	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@+16
  02307	66 89 85 a2 b3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20206], ax
  0230e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DNEGMGNC@data?2se?2sas_11?4wav@+18
  02315	68 b5 00 00 00	 push	 181			; 000000b5H
  0231a	88 85 a4 b3 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20208], al
  02320	8d 85 a5 b3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+20209]
  02326	6a 00		 push	 0
  02328	50		 push	 eax
  02329	c6 85 8e b3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+20186], 0
  02330	0f 11 85 92 b3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+20190], xmm0
  02337	e8 00 00 00 00	 call	 _memset

; 117  : 	{  212,	"data\\se\\sas_12.wav", 80, 0, 0 /*, "????î¸?"*/ },

  0233c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@
  02343	b8 d4 00 00 00	 mov	 eax, 212		; 000000d4H
  02348	66 c7 85 5a b4
	ff ff 41 00	 mov	 WORD PTR _sndconfig$[ebp+20390], 65 ; 00000041H
  02351	66 89 85 5e b4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20394], ax
  02358	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@+16
  0235f	66 89 85 70 b4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20412], ax
  02366	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LLNCLEHM@data?2se?2sas_12?4wav@+18
  0236d	68 b5 00 00 00	 push	 181			; 000000b5H
  02372	88 85 72 b4 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20414], al
  02378	8d 85 73 b4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+20415]
  0237e	6a 00		 push	 0
  02380	50		 push	 eax
  02381	c6 85 5c b4 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+20392], 0
  02388	0f 11 85 60 b4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+20396], xmm0
  0238f	e8 00 00 00 00	 call	 _memset

; 118  : 	{  213,	"data\\se\\sas_13.wav", 123, 0, 0 /*, "???î?"*/ },

  02394	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@
  0239b	b8 d5 00 00 00	 mov	 eax, 213		; 000000d5H
  023a0	66 c7 85 28 b5
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+20596], 80 ; 00000050H
  023a9	66 89 85 2c b5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20600], ax
  023b0	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@+16
  023b7	66 89 85 3e b5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20618], ax
  023be	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HAIOGHNJ@data?2se?2sas_13?4wav@+18
  023c5	68 b5 00 00 00	 push	 181			; 000000b5H
  023ca	88 85 40 b5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20620], al
  023d0	8d 85 41 b5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+20621]
  023d6	6a 00		 push	 0
  023d8	50		 push	 eax
  023d9	c6 85 2a b5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+20598], 0
  023e0	0f 11 85 2e b5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+20602], xmm0
  023e7	e8 00 00 00 00	 call	 _memset

; 119  : //	{  214,	"data\\se\\sas_14.wav", 127, 0, 0 /*, "??"*/ },
; 120  : 	{  215,	"data\\se\\sas_15.wav", 82, 0, 0 /*, "??????"*/ },

  023ec	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@
  023f3	b8 d7 00 00 00	 mov	 eax, 215		; 000000d7H
  023f8	66 c7 85 f6 b5
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+20802], 123 ; 0000007bH
  02401	66 89 85 fa b5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20806], ax
  02408	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@+16
  0240f	66 89 85 0c b6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+20824], ax
  02416	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KGNHIEME@data?2se?2sas_15?4wav@+18
  0241d	68 b5 00 00 00	 push	 181			; 000000b5H
  02422	88 85 0e b6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+20826], al
  02428	8d 85 0f b6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+20827]
  0242e	6a 00		 push	 0
  02430	50		 push	 eax
  02431	c6 85 f8 b5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+20804], 0
  02438	0f 11 85 fc b5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+20808], xmm0
  0243f	e8 00 00 00 00	 call	 _memset
  02444	83 c4 48	 add	 esp, 72			; 00000048H

; 121  : 	{  216,	"data\\se\\sas_16.wav", 110, 0, 0 /*, "?????"*/ },

  02447	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@
  0244e	b8 d8 00 00 00	 mov	 eax, 216		; 000000d8H
  02453	66 c7 85 c4 b6
	ff ff 52 00	 mov	 WORD PTR _sndconfig$[ebp+21008], 82 ; 00000052H
  0245c	66 89 85 c8 b6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21012], ax
  02463	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@+16
  0246a	66 89 85 da b6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21030], ax
  02471	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CAEDPGGK@data?2se?2sas_16?4wav@+18
  02478	68 b5 00 00 00	 push	 181			; 000000b5H
  0247d	88 85 dc b6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+21032], al
  02483	8d 85 dd b6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21033]
  02489	6a 00		 push	 0
  0248b	50		 push	 eax
  0248c	c6 85 c6 b6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+21010], 0
  02493	0f 11 85 ca b6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+21014], xmm0
  0249a	e8 00 00 00 00	 call	 _memset

; 122  : 	{  217,	"data\\se\\sas_17.wav", 85, 0, 0 /*, "????????"*/ },

  0249f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@
  024a6	b8 d9 00 00 00	 mov	 eax, 217		; 000000d9H
  024ab	66 c7 85 92 b7
	ff ff 6e 00	 mov	 WORD PTR _sndconfig$[ebp+21214], 110 ; 0000006eH
  024b4	66 89 85 96 b7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21218], ax
  024bb	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@+16
  024c2	66 89 85 a8 b7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21236], ax
  024c9	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OLBPCFMP@data?2se?2sas_17?4wav@+18
  024d0	68 b5 00 00 00	 push	 181			; 000000b5H
  024d5	88 85 aa b7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+21238], al
  024db	8d 85 ab b7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21239]
  024e1	6a 00		 push	 0
  024e3	50		 push	 eax
  024e4	c6 85 94 b7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+21216], 0
  024eb	0f 11 85 98 b7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+21220], xmm0
  024f2	e8 00 00 00 00	 call	 _memset

; 123  : 	{  218,	"data\\se\\sas_18.wav", 123, 0, 0 /*, ""*/ },

  024f7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@
  024fe	b8 da 00 00 00	 mov	 eax, 218		; 000000daH
  02503	66 c7 85 60 b8
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+21420], 85 ; 00000055H
  0250c	66 89 85 64 b8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21424], ax
  02513	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@+16
  0251a	66 89 85 76 b8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21442], ax
  02521	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BKEJJHBK@data?2se?2sas_18?4wav@+18
  02528	68 b5 00 00 00	 push	 181			; 000000b5H
  0252d	88 85 78 b8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+21444], al
  02533	8d 85 79 b8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21445]
  02539	6a 00		 push	 0
  0253b	50		 push	 eax
  0253c	c6 85 62 b8 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+21422], 0
  02543	0f 11 85 66 b8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+21426], xmm0
  0254a	e8 00 00 00 00	 call	 _memset

; 124  : 	{  219,	"data\\se\\sas_19.wav", 82, 0, 0 /*, "î¹î©î?"*/ },

  0254f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@
  02556	b8 db 00 00 00	 mov	 eax, 219		; 000000dbH
  0255b	66 c7 85 2e b9
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+21626], 123 ; 0000007bH
  02564	66 89 85 32 b9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21630], ax
  0256b	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@+16
  02572	66 89 85 44 b9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21648], ax
  02579	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NBBFEELP@data?2se?2sas_19?4wav@+18
  02580	68 b5 00 00 00	 push	 181			; 000000b5H
  02585	88 85 46 b9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+21650], al
  0258b	8d 85 47 b9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21651]
  02591	6a 00		 push	 0
  02593	50		 push	 eax
  02594	c6 85 30 b9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+21628], 0
  0259b	0f 11 85 34 b9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+21632], xmm0
  025a2	e8 00 00 00 00	 call	 _memset

; 125  : 	{  220,	"data\\se\\sas_20.wav", 60, 0, 0 /*, "???î?"*/ },

  025a7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@
  025ae	b8 dc 00 00 00	 mov	 eax, 220		; 000000dcH
  025b3	66 c7 85 fc b9
	ff ff 52 00	 mov	 WORD PTR _sndconfig$[ebp+21832], 82 ; 00000052H
  025bc	66 89 85 00 ba
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21836], ax
  025c3	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@+16
  025ca	66 89 85 12 ba
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+21854], ax
  025d1	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MHPCAPOK@data?2se?2sas_20?4wav@+18
  025d8	68 b5 00 00 00	 push	 181			; 000000b5H
  025dd	88 85 14 ba ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+21856], al
  025e3	8d 85 15 ba ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+21857]
  025e9	6a 00		 push	 0
  025eb	50		 push	 eax
  025ec	c6 85 fe b9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+21834], 0
  025f3	0f 11 85 02 ba
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+21838], xmm0
  025fa	e8 00 00 00 00	 call	 _memset

; 126  : 	{  221,	"data\\se\\sas_21.wav", 123, 0, 0 /*, ""*/ },

  025ff	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@
  02606	b8 dd 00 00 00	 mov	 eax, 221		; 000000ddH
  0260b	66 c7 85 ca ba
	ff ff 3c 00	 mov	 WORD PTR _sndconfig$[ebp+22038], 60 ; 0000003cH
  02614	c6 85 cc ba ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+22040], 0
  0261b	66 89 85 ce ba
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22042], ax
  02622	0f 11 85 d0 ba
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+22044], xmm0
  02629	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@+16
  02630	66 89 85 e0 ba
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22060], ax
  02637	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MKONMEP@data?2se?2sas_21?4wav@+18
  0263e	68 b5 00 00 00	 push	 181			; 000000b5H
  02643	88 85 e2 ba ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+22062], al
  02649	8d 85 e3 ba ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+22063]
  0264f	6a 00		 push	 0
  02651	50		 push	 eax
  02652	e8 00 00 00 00	 call	 _memset

; 127  : 
; 128  : 	// ????
; 129  : 	{  250,	"data\\se\\sad_01.wav", 85, 0, 0 /*, "??????îî?"*/ },

  02657	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@
  0265e	b8 fa 00 00 00	 mov	 eax, 250		; 000000faH
  02663	66 c7 85 98 bb
	ff ff 7b 00	 mov	 WORD PTR _sndconfig$[ebp+22244], 123 ; 0000007bH
  0266c	66 89 85 9c bb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22248], ax
  02673	83 c4 48	 add	 esp, 72			; 00000048H
  02676	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@+16
  0267d	66 89 85 ae bb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22266], ax
  02684	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FDJAOCNO@data?2se?2sad_01?4wav@+18
  0268b	68 b5 00 00 00	 push	 181			; 000000b5H
  02690	88 85 b0 bb ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+22268], al
  02696	8d 85 b1 bb ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+22269]
  0269c	6a 00		 push	 0
  0269e	50		 push	 eax
  0269f	c6 85 9a bb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+22246], 0
  026a6	0f 11 85 9e bb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+22250], xmm0
  026ad	e8 00 00 00 00	 call	 _memset

; 130  : 	{  251,	"data\\se\\sad_02.wav", 80, 0, 0 /*, "?????????î ?"*/ },

  026b2	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@
  026b9	b8 fb 00 00 00	 mov	 eax, 251		; 000000fbH
  026be	66 c7 85 66 bc
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+22450], 85 ; 00000055H
  026c7	66 89 85 6a bc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22454], ax
  026ce	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@+16
  026d5	66 89 85 7c bc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22472], ax
  026dc	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NFAEJAHA@data?2se?2sad_02?4wav@+18
  026e3	68 b5 00 00 00	 push	 181			; 000000b5H
  026e8	88 85 7e bc ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+22474], al
  026ee	8d 85 7f bc ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+22475]
  026f4	6a 00		 push	 0
  026f6	50		 push	 eax
  026f7	c6 85 68 bc ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+22452], 0
  026fe	0f 11 85 6c bc
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+22456], xmm0
  02705	e8 00 00 00 00	 call	 _memset

; 131  : //x	{  252,	"data\\se\\sad_03.wav", 95, -3, 0 /*, "????????"*/ },
; 132  : 	{  252,	"data\\se\\sad_03.wav", 95, 0, 0 /*, "????????"*/ },

  0270a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@
  02711	b8 fc 00 00 00	 mov	 eax, 252		; 000000fcH
  02716	66 c7 85 34 bd
	ff ff 50 00	 mov	 WORD PTR _sndconfig$[ebp+22656], 80 ; 00000050H
  0271f	66 89 85 38 bd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22660], ax
  02726	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@+16
  0272d	66 89 85 4a bd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22678], ax
  02734	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BOFIEDNF@data?2se?2sad_03?4wav@+18
  0273b	68 b5 00 00 00	 push	 181			; 000000b5H
  02740	88 85 4c bd ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+22680], al
  02746	8d 85 4d bd ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+22681]
  0274c	6a 00		 push	 0
  0274e	50		 push	 eax
  0274f	c6 85 36 bd ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+22658], 0
  02756	0f 11 85 3a bd
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+22662], xmm0
  0275d	e8 00 00 00 00	 call	 _memset

; 133  : 	{  253,	"data\\se\\sad_04.wav", 85, 0, 0 /*, "????????"*/ },

  02762	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@
  02769	b8 fd 00 00 00	 mov	 eax, 253		; 000000fdH
  0276e	66 c7 85 02 be
	ff ff 5f 00	 mov	 WORD PTR _sndconfig$[ebp+22862], 95 ; 0000005fH
  02777	66 89 85 06 be
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22866], ax
  0277e	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@+16
  02785	66 89 85 18 be
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+22884], ax
  0278c	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DFNHDGN@data?2se?2sad_04?4wav@+18
  02793	68 b5 00 00 00	 push	 181			; 000000b5H
  02798	88 85 1a be ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+22886], al
  0279e	8d 85 1b be ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+22887]
  027a4	6a 00		 push	 0
  027a6	50		 push	 eax
  027a7	c6 85 04 be ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+22864], 0
  027ae	0f 11 85 08 be
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+22868], xmm0
  027b5	e8 00 00 00 00	 call	 _memset

; 134  : 	{  254,	"data\\se\\sad_05.wav", 90, 0, 0 /*, "??????î¿?"*/ },

  027ba	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@
  027c1	b8 fe 00 00 00	 mov	 eax, 254		; 000000feH
  027c6	66 c7 85 d0 be
	ff ff 55 00	 mov	 WORD PTR _sndconfig$[ebp+23068], 85 ; 00000055H
  027cf	66 89 85 d4 be
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23072], ax
  027d6	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@+16
  027dd	66 89 85 e6 be
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23090], ax
  027e4	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MIABKAMI@data?2se?2sad_05?4wav@+18
  027eb	c6 85 d2 be ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+23070], 0
  027f2	0f 11 85 d6 be
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+23074], xmm0
  027f9	88 85 e8 be ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+23092], al
  027ff	68 b5 00 00 00	 push	 181			; 000000b5H
  02804	8d 85 e9 be ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+23093]
  0280a	6a 00		 push	 0
  0280c	50		 push	 eax
  0280d	e8 00 00 00 00	 call	 _memset

; 135  : 
; 136  : #ifdef __ATTACK_MAGIC
; 137  : 	{  300,"data\\se\\saam_01.wav",120, 0, 0 /*, "åç½®é­æ³  é­æ³éµ"*/ },

  02812	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@PKJHILLA@data?2se?2saam_01?4wav@
  02819	b8 2c 01 00 00	 mov	 eax, 300		; 0000012cH
  0281e	66 c7 85 9e bf
	ff ff 5a 00	 mov	 WORD PTR _sndconfig$[ebp+23274], 90 ; 0000005aH
  02827	66 89 85 a2 bf
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23278], ax
  0282e	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@PKJHILLA@data?2se?2saam_01?4wav@+16
  02833	68 b4 00 00 00	 push	 180			; 000000b4H
  02838	89 85 b4 bf ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+23296], eax
  0283e	8d 85 b8 bf ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+23300]
  02844	6a 00		 push	 0
  02846	50		 push	 eax
  02847	c6 85 a0 bf ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+23276], 0
  0284e	0f 11 85 a4 bf
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+23280], xmm0
  02855	e8 00 00 00 00	 call	 _memset

; 138  : 	{  301,"data\\se\\saam_02.wav",120, 0, 0 /*, "åç½®é­æ³  åä¼¤å¾"*/ },

  0285a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@HMADPJBO@data?2se?2saam_02?4wav@
  02861	83 c4 48	 add	 esp, 72			; 00000048H
  02864	66 c7 85 6c c0
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+23480], 120 ; 00000078H
  0286d	b8 2d 01 00 00	 mov	 eax, 301		; 0000012dH
  02872	c6 85 6e c0 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+23482], 0
  02879	66 89 85 70 c0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23484], ax
  02880	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@HMADPJBO@data?2se?2saam_02?4wav@+16
  02885	68 b4 00 00 00	 push	 180			; 000000b4H
  0288a	89 85 82 c0 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+23502], eax
  02890	8d 85 86 c0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+23506]
  02896	6a 00		 push	 0
  02898	50		 push	 eax
  02899	0f 11 85 72 c0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+23486], xmm0
  028a0	e8 00 00 00 00	 call	 _memset

; 139  : 	{  302,"data\\se\\saam_03.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv1"*/ },

  028a5	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@LHFPCKLL@data?2se?2saam_03?4wav@
  028ac	b8 2e 01 00 00	 mov	 eax, 302		; 0000012eH
  028b1	66 c7 85 3a c1
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+23686], 120 ; 00000078H
  028ba	66 89 85 3e c1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23690], ax
  028c1	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@LHFPCKLL@data?2se?2saam_03?4wav@+16
  028c6	68 b4 00 00 00	 push	 180			; 000000b4H
  028cb	89 85 50 c1 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+23708], eax
  028d1	8d 85 54 c1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+23712]
  028d7	6a 00		 push	 0
  028d9	50		 push	 eax
  028da	c6 85 3c c1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+23688], 0
  028e1	0f 11 85 40 c1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+23692], xmm0
  028e8	e8 00 00 00 00	 call	 _memset

; 140  : 	{  303,"data\\se\\saam_04.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv2"*/ },

  028ed	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@KKFKBKAD@data?2se?2saam_04?4wav@
  028f4	b8 2f 01 00 00	 mov	 eax, 303		; 0000012fH
  028f9	66 c7 85 08 c2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+23892], 120 ; 00000078H
  02902	66 89 85 0c c2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+23896], ax
  02909	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@KKFKBKAD@data?2se?2saam_04?4wav@+16
  0290e	68 b4 00 00 00	 push	 180			; 000000b4H
  02913	89 85 1e c2 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+23914], eax
  02919	8d 85 22 c2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+23918]
  0291f	6a 00		 push	 0
  02921	50		 push	 eax
  02922	c6 85 0a c2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+23894], 0
  02929	0f 11 85 0e c2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+23898], xmm0
  02930	e8 00 00 00 00	 call	 _memset

; 141  : 	{  304,"data\\se\\saam_05.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv3-1"*/ },

  02935	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@GBAGMJKG@data?2se?2saam_05?4wav@
  0293c	b8 30 01 00 00	 mov	 eax, 304		; 00000130H
  02941	66 c7 85 d6 c2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+24098], 120 ; 00000078H
  0294a	66 89 85 da c2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+24102], ax
  02951	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@GBAGMJKG@data?2se?2saam_05?4wav@+16
  02956	68 b4 00 00 00	 push	 180			; 000000b4H
  0295b	89 85 ec c2 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+24120], eax
  02961	8d 85 f0 c2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+24124]
  02967	6a 00		 push	 0
  02969	50		 push	 eax
  0296a	c6 85 d8 c2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+24100], 0
  02971	0f 11 85 dc c2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+24104], xmm0
  02978	e8 00 00 00 00	 call	 _memset

; 142  : 	{  305,"data\\se\\saam_06.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv3-2*/ },

  0297d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@OHJCLLAI@data?2se?2saam_06?4wav@
  02984	b8 31 01 00 00	 mov	 eax, 305		; 00000131H
  02989	66 c7 85 a4 c3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+24304], 120 ; 00000078H
  02992	66 89 85 a8 c3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+24308], ax
  02999	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@OHJCLLAI@data?2se?2saam_06?4wav@+16
  0299e	68 b4 00 00 00	 push	 180			; 000000b4H
  029a3	89 85 ba c3 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+24326], eax
  029a9	8d 85 be c3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+24330]
  029af	c6 85 a6 c3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+24306], 0
  029b6	0f 11 85 aa c3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+24310], xmm0
  029bd	6a 00		 push	 0
  029bf	50		 push	 eax
  029c0	e8 00 00 00 00	 call	 _memset

; 143  : 	{  306,"data\\se\\saam_07.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv3-3*/ },

  029c5	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@CMMOGIKN@data?2se?2saam_07?4wav@
  029cc	b8 32 01 00 00	 mov	 eax, 306		; 00000132H
  029d1	66 c7 85 72 c4
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+24510], 120 ; 00000078H
  029da	66 89 85 76 c4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+24514], ax
  029e1	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@CMMOGIKN@data?2se?2saam_07?4wav@+16
  029e6	68 b4 00 00 00	 push	 180			; 000000b4H
  029eb	89 85 88 c4 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+24532], eax
  029f1	8d 85 8c c4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+24536]
  029f7	6a 00		 push	 0
  029f9	50		 push	 eax
  029fa	c6 85 74 c4 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+24512], 0
  02a01	0f 11 85 78 c4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+24516], xmm0
  02a08	e8 00 00 00 00	 call	 _memset

; 144  : 	{  307,"data\\se\\saam_08.wav",120, 0, 0 /*, "å°é­æ³  é­æ³Lv4*/ },

  02a0d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@NNJINKHI@data?2se?2saam_08?4wav@
  02a14	83 c4 48	 add	 esp, 72			; 00000048H
  02a17	66 c7 85 40 c5
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+24716], 120 ; 00000078H
  02a20	b8 33 01 00 00	 mov	 eax, 307		; 00000133H
  02a25	c6 85 42 c5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+24718], 0
  02a2c	66 89 85 44 c5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+24720], ax
  02a33	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@NNJINKHI@data?2se?2saam_08?4wav@+16
  02a38	68 b4 00 00 00	 push	 180			; 000000b4H
  02a3d	89 85 56 c5 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+24738], eax
  02a43	8d 85 5a c5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+24742]
  02a49	6a 00		 push	 0
  02a4b	50		 push	 eax
  02a4c	0f 11 85 46 c5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+24722], xmm0
  02a53	e8 00 00 00 00	 call	 _memset

; 145  : 	{  308,"data\\se\\saam_09.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv1"*/ },

  02a58	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@BGMEAJNN@data?2se?2saam_09?4wav@
  02a5f	b8 34 01 00 00	 mov	 eax, 308		; 00000134H
  02a64	66 c7 85 0e c6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+24922], 120 ; 00000078H
  02a6d	66 89 85 12 c6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+24926], ax
  02a74	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@BGMEAJNN@data?2se?2saam_09?4wav@+16
  02a79	68 b4 00 00 00	 push	 180			; 000000b4H
  02a7e	89 85 24 c6 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+24944], eax
  02a84	8d 85 28 c6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+24948]
  02a8a	6a 00		 push	 0
  02a8c	50		 push	 eax
  02a8d	c6 85 10 c6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+24924], 0
  02a94	0f 11 85 14 c6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+24928], xmm0
  02a9b	e8 00 00 00 00	 call	 _memset

; 146  : 	{  309,"data\\se\\saam_10.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv2"*/ },

  02aa0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@JHLMFDKB@data?2se?2saam_10?4wav@
  02aa7	b8 35 01 00 00	 mov	 eax, 309		; 00000135H
  02aac	66 c7 85 dc c6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+25128], 120 ; 00000078H
  02ab5	66 89 85 e0 c6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+25132], ax
  02abc	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@JHLMFDKB@data?2se?2saam_10?4wav@+16
  02ac1	68 b4 00 00 00	 push	 180			; 000000b4H
  02ac6	89 85 f2 c6 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+25150], eax
  02acc	8d 85 f6 c6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+25154]
  02ad2	6a 00		 push	 0
  02ad4	50		 push	 eax
  02ad5	c6 85 de c6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+25130], 0
  02adc	0f 11 85 e2 c6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+25134], xmm0
  02ae3	e8 00 00 00 00	 call	 _memset

; 147  : 	{  310,"data\\se\\saam_11.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv3-1"*/ },

  02ae8	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@FMOAIAAE@data?2se?2saam_11?4wav@
  02aef	b8 36 01 00 00	 mov	 eax, 310		; 00000136H
  02af4	66 c7 85 aa c7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+25334], 120 ; 00000078H
  02afd	66 89 85 ae c7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+25338], ax
  02b04	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@FMOAIAAE@data?2se?2saam_11?4wav@+16
  02b09	68 b4 00 00 00	 push	 180			; 000000b4H
  02b0e	89 85 c0 c7 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+25356], eax
  02b14	8d 85 c4 c7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+25360]
  02b1a	6a 00		 push	 0
  02b1c	50		 push	 eax
  02b1d	c6 85 ac c7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+25336], 0
  02b24	0f 11 85 b0 c7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+25340], xmm0
  02b2b	e8 00 00 00 00	 call	 _memset

; 148  : 	{  311,"data\\se\\saam_12.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv3-2"*/ },

  02b30	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@NKHEPCKK@data?2se?2saam_12?4wav@
  02b37	b8 37 01 00 00	 mov	 eax, 311		; 00000137H
  02b3c	66 c7 85 78 c8
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+25540], 120 ; 00000078H
  02b45	66 89 85 7c c8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+25544], ax
  02b4c	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@NKHEPCKK@data?2se?2saam_12?4wav@+16
  02b51	68 b4 00 00 00	 push	 180			; 000000b4H
  02b56	89 85 8e c8 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+25562], eax
  02b5c	8d 85 92 c8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+25566]
  02b62	6a 00		 push	 0
  02b64	50		 push	 eax
  02b65	c6 85 7a c8 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+25542], 0
  02b6c	0f 11 85 7e c8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+25546], xmm0
  02b73	e8 00 00 00 00	 call	 _memset

; 149  : 	{  312,"data\\se\\saam_13.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv3-3"*/ },

  02b78	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@BBCICBAP@data?2se?2saam_13?4wav@
  02b7f	b8 38 01 00 00	 mov	 eax, 312		; 00000138H
  02b84	66 c7 85 46 c9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+25746], 120 ; 00000078H
  02b8d	66 89 85 4a c9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+25750], ax
  02b94	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@BBCICBAP@data?2se?2saam_13?4wav@+16
  02b99	68 b4 00 00 00	 push	 180			; 000000b4H
  02b9e	89 85 5c c9 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+25768], eax
  02ba4	8d 85 60 c9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+25772]
  02baa	6a 00		 push	 0
  02bac	50		 push	 eax
  02bad	c6 85 48 c9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+25748], 0
  02bb4	0f 11 85 4c c9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+25752], xmm0
  02bbb	e8 00 00 00 00	 call	 _memset

; 150  : 	{  313,"data\\se\\saam_14.wav",120, 0, 0 /*, "æ°´é­æ³  é­æ³Lv4"*/ },

  02bc0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@MCNBBLH@data?2se?2saam_14?4wav@
  02bc7	83 c4 48	 add	 esp, 72			; 00000048H
  02bca	66 c7 85 14 ca
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+25952], 120 ; 00000078H
  02bd3	b8 39 01 00 00	 mov	 eax, 313		; 00000139H
  02bd8	c6 85 16 ca ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+25954], 0
  02bdf	66 89 85 18 ca
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+25956], ax
  02be6	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@MCNBBLH@data?2se?2saam_14?4wav@+16
  02beb	68 b4 00 00 00	 push	 180			; 000000b4H
  02bf0	89 85 2a ca ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+25974], eax
  02bf6	8d 85 2e ca ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+25978]
  02bfc	6a 00		 push	 0
  02bfe	50		 push	 eax
  02bff	0f 11 85 1a ca
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+25958], xmm0
  02c06	e8 00 00 00 00	 call	 _memset

; 151  : 	{  314,"data\\se\\saam_15.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv1"*/ },

  02c0b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@MHHBMCBC@data?2se?2saam_15?4wav@
  02c12	b8 3a 01 00 00	 mov	 eax, 314		; 0000013aH
  02c17	66 c7 85 e2 ca
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+26158], 120 ; 00000078H
  02c20	66 89 85 e6 ca
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+26162], ax
  02c27	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@MHHBMCBC@data?2se?2saam_15?4wav@+16
  02c2c	68 b4 00 00 00	 push	 180			; 000000b4H
  02c31	89 85 f8 ca ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+26180], eax
  02c37	8d 85 fc ca ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+26184]
  02c3d	6a 00		 push	 0
  02c3f	50		 push	 eax
  02c40	c6 85 e4 ca ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+26160], 0
  02c47	0f 11 85 e8 ca
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+26164], xmm0
  02c4e	e8 00 00 00 00	 call	 _memset

; 152  : 	{  315,"data\\se\\saam_16.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv2"*/ },

  02c53	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@EBOFLALM@data?2se?2saam_16?4wav@
  02c5a	b8 3b 01 00 00	 mov	 eax, 315		; 0000013bH
  02c5f	66 c7 85 b0 cb
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+26364], 120 ; 00000078H
  02c68	66 89 85 b4 cb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+26368], ax
  02c6f	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@EBOFLALM@data?2se?2saam_16?4wav@+16
  02c74	68 b4 00 00 00	 push	 180			; 000000b4H
  02c79	89 85 c6 cb ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+26386], eax
  02c7f	8d 85 ca cb ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+26390]
  02c85	6a 00		 push	 0
  02c87	50		 push	 eax
  02c88	c6 85 b2 cb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+26366], 0
  02c8f	0f 11 85 b6 cb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+26370], xmm0
  02c96	e8 00 00 00 00	 call	 _memset

; 153  : 	{  316,"data\\se\\saam_17.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv3-1"*/ },

  02c9b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@IKLJGDBJ@data?2se?2saam_17?4wav@
  02ca2	b8 3c 01 00 00	 mov	 eax, 316		; 0000013cH
  02ca7	66 c7 85 7e cc
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+26570], 120 ; 00000078H
  02cb0	66 89 85 82 cc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+26574], ax
  02cb7	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@IKLJGDBJ@data?2se?2saam_17?4wav@+16
  02cbc	68 b4 00 00 00	 push	 180			; 000000b4H
  02cc1	89 85 94 cc ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+26592], eax
  02cc7	8d 85 98 cc ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+26596]
  02ccd	6a 00		 push	 0
  02ccf	50		 push	 eax
  02cd0	c6 85 80 cc ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+26572], 0
  02cd7	0f 11 85 84 cc
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+26576], xmm0
  02cde	e8 00 00 00 00	 call	 _memset

; 154  : 	{  317,"data\\se\\saam_18.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv3-2"*/ },

  02ce3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@HLOPNBMM@data?2se?2saam_18?4wav@
  02cea	b8 3d 01 00 00	 mov	 eax, 317		; 0000013dH
  02cef	66 c7 85 4c cd
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+26776], 120 ; 00000078H
  02cf8	66 89 85 50 cd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+26780], ax
  02cff	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@HLOPNBMM@data?2se?2saam_18?4wav@+16
  02d04	68 b4 00 00 00	 push	 180			; 000000b4H
  02d09	89 85 62 cd ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+26798], eax
  02d0f	8d 85 66 cd ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+26802]
  02d15	6a 00		 push	 0
  02d17	50		 push	 eax
  02d18	c6 85 4e cd ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+26778], 0
  02d1f	0f 11 85 52 cd
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+26782], xmm0
  02d26	e8 00 00 00 00	 call	 _memset
  02d2b	66 c7 85 1a ce
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+26982], 120 ; 00000078H
  02d34	c6 85 1c ce ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+26984], 0

; 155  : 	{  318,"data\\se\\saam_19.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv3-3"*/ },

  02d3b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@LALDACGJ@data?2se?2saam_19?4wav@
  02d42	b8 3e 01 00 00	 mov	 eax, 318		; 0000013eH
  02d47	66 89 85 1e ce
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+26986], ax
  02d4e	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@LALDACGJ@data?2se?2saam_19?4wav@+16
  02d53	68 b4 00 00 00	 push	 180			; 000000b4H
  02d58	89 85 30 ce ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+27004], eax
  02d5e	8d 85 34 ce ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+27008]
  02d64	6a 00		 push	 0
  02d66	50		 push	 eax
  02d67	0f 11 85 20 ce
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+26988], xmm0
  02d6e	e8 00 00 00 00	 call	 _memset

; 156  : 	{  319,"data\\se\\saam_20.wav",120, 0, 0 /*, "ç«é­æ³  é­æ³Lv4"*/ },

  02d73	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@KGFEEJDM@data?2se?2saam_20?4wav@
  02d7a	83 c4 48	 add	 esp, 72			; 00000048H
  02d7d	66 c7 85 e8 ce
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+27188], 120 ; 00000078H
  02d86	b8 3f 01 00 00	 mov	 eax, 319		; 0000013fH
  02d8b	c6 85 ea ce ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+27190], 0
  02d92	66 89 85 ec ce
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+27192], ax
  02d99	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@KGFEEJDM@data?2se?2saam_20?4wav@+16
  02d9e	68 b4 00 00 00	 push	 180			; 000000b4H
  02da3	89 85 fe ce ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+27210], eax
  02da9	8d 85 02 cf ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+27214]
  02daf	6a 00		 push	 0
  02db1	50		 push	 eax
  02db2	0f 11 85 ee ce
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+27194], xmm0
  02db9	e8 00 00 00 00	 call	 _memset

; 157  : 	{  320,"data\\se\\saam_21.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv1"*/ },

  02dbe	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@GNAIJKJJ@data?2se?2saam_21?4wav@
  02dc5	b8 40 01 00 00	 mov	 eax, 320		; 00000140H
  02dca	66 c7 85 b6 cf
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+27394], 120 ; 00000078H
  02dd3	66 89 85 ba cf
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+27398], ax
  02dda	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@GNAIJKJJ@data?2se?2saam_21?4wav@+16
  02ddf	68 b4 00 00 00	 push	 180			; 000000b4H
  02de4	89 85 cc cf ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+27416], eax
  02dea	8d 85 d0 cf ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+27420]
  02df0	6a 00		 push	 0
  02df2	50		 push	 eax
  02df3	c6 85 b8 cf ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+27396], 0
  02dfa	0f 11 85 bc cf
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+27400], xmm0
  02e01	e8 00 00 00 00	 call	 _memset

; 158  : 	{  321,"data\\se\\saam_22.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv2"*/ },

  02e06	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@OLJMOIDH@data?2se?2saam_22?4wav@
  02e0d	b8 41 01 00 00	 mov	 eax, 321		; 00000141H
  02e12	66 c7 85 84 d0
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+27600], 120 ; 00000078H
  02e1b	66 89 85 88 d0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+27604], ax
  02e22	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@OLJMOIDH@data?2se?2saam_22?4wav@+16
  02e27	68 b4 00 00 00	 push	 180			; 000000b4H
  02e2c	89 85 9a d0 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+27622], eax
  02e32	8d 85 9e d0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+27626]
  02e38	6a 00		 push	 0
  02e3a	50		 push	 eax
  02e3b	c6 85 86 d0 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+27602], 0
  02e42	0f 11 85 8a d0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+27606], xmm0
  02e49	e8 00 00 00 00	 call	 _memset

; 159  : 	{  322,"data\\se\\saam_23.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv3-1"*/ },

  02e4e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@CAMADLJC@data?2se?2saam_23?4wav@
  02e55	b8 42 01 00 00	 mov	 eax, 322		; 00000142H
  02e5a	66 c7 85 52 d1
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+27806], 120 ; 00000078H
  02e63	66 89 85 56 d1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+27810], ax
  02e6a	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@CAMADLJC@data?2se?2saam_23?4wav@+16
  02e6f	68 b4 00 00 00	 push	 180			; 000000b4H
  02e74	89 85 68 d1 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+27828], eax
  02e7a	8d 85 6c d1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+27832]
  02e80	6a 00		 push	 0
  02e82	50		 push	 eax
  02e83	c6 85 54 d1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+27808], 0
  02e8a	0f 11 85 58 d1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+27812], xmm0
  02e91	e8 00 00 00 00	 call	 _memset

; 160  : 	{  323,"data\\se\\saam_24.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv3-2"*/ },

  02e96	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@DNMFALCK@data?2se?2saam_24?4wav@
  02e9d	b8 43 01 00 00	 mov	 eax, 323		; 00000143H
  02ea2	66 c7 85 20 d2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+28012], 120 ; 00000078H
  02eab	66 89 85 24 d2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28016], ax
  02eb2	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@DNMFALCK@data?2se?2saam_24?4wav@+16
  02eb7	68 b4 00 00 00	 push	 180			; 000000b4H
  02ebc	89 85 36 d2 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+28034], eax
  02ec2	8d 85 3a d2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+28038]
  02ec8	6a 00		 push	 0
  02eca	50		 push	 eax
  02ecb	c6 85 22 d2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+28014], 0
  02ed2	0f 11 85 26 d2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+28018], xmm0
  02ed9	e8 00 00 00 00	 call	 _memset

; 161  : 	{  324,"data\\se\\saam_25.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv3-3"*/ },

  02ede	b8 44 01 00 00	 mov	 eax, 324		; 00000144H
  02ee3	66 c7 85 ee d2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+28218], 120 ; 00000078H
  02eec	c6 85 f0 d2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+28220], 0
  02ef3	66 89 85 f2 d2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28222], ax
  02efa	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@PGJJNIIP@data?2se?2saam_25?4wav@+16
  02eff	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@PGJJNIIP@data?2se?2saam_25?4wav@
  02f06	68 b4 00 00 00	 push	 180			; 000000b4H
  02f0b	89 85 04 d3 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+28240], eax
  02f11	8d 85 08 d3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+28244]
  02f17	6a 00		 push	 0
  02f19	50		 push	 eax
  02f1a	0f 11 85 f4 d2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+28224], xmm0
  02f21	e8 00 00 00 00	 call	 _memset

; 162  : 	{  325,"data\\se\\saam_26.wav",120, 0, 0 /*, "é£é­æ³  é­æ³Lv4"*/ },

  02f26	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@HAANKKCB@data?2se?2saam_26?4wav@
  02f2d	83 c4 48	 add	 esp, 72			; 00000048H
  02f30	66 c7 85 bc d3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+28424], 120 ; 00000078H
  02f39	b8 45 01 00 00	 mov	 eax, 325		; 00000145H
  02f3e	c6 85 be d3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+28426], 0
  02f45	66 89 85 c0 d3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28428], ax
  02f4c	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@HAANKKCB@data?2se?2saam_26?4wav@+16
  02f51	68 b4 00 00 00	 push	 180			; 000000b4H
  02f56	89 85 d2 d3 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+28446], eax
  02f5c	8d 85 d6 d3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+28450]
  02f62	6a 00		 push	 0
  02f64	50		 push	 eax
  02f65	0f 11 85 c2 d3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+28430], xmm0
  02f6c	e8 00 00 00 00	 call	 _memset

; 163  : 	{  326,"data\\se\\saam_27.wav",120, 0, 0 /*, "é­çé­æ³  é­æ³Lv5"*/ },

  02f71	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BE@LLFBHJIE@data?2se?2saam_27?4wav@
  02f78	b8 46 01 00 00	 mov	 eax, 326		; 00000146H
  02f7d	66 c7 85 8a d4
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+28630], 120 ; 00000078H
  02f86	66 89 85 8e d4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28634], ax
  02f8d	a1 10 00 00 00	 mov	 eax, DWORD PTR ??_C@_0BE@LLFBHJIE@data?2se?2saam_27?4wav@+16
  02f92	68 b4 00 00 00	 push	 180			; 000000b4H
  02f97	89 85 a0 d4 ff
	ff		 mov	 DWORD PTR _sndconfig$[ebp+28652], eax
  02f9d	8d 85 a4 d4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+28656]
  02fa3	6a 00		 push	 0
  02fa5	50		 push	 eax
  02fa6	c6 85 8c d4 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+28632], 0
  02fad	0f 11 85 90 d4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+28636], xmm0
  02fb4	e8 00 00 00 00	 call	 _memset

; 164  : #endif
; 165  : #ifdef _NEWSOUNDEFFECT
; 166  : 	{  327,"data\\se\\sa1_01.wav",120, 0 ,0 } , //ä¸çæ«æ¥

  02fb9	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@
  02fc0	b8 47 01 00 00	 mov	 eax, 327		; 00000147H
  02fc5	66 c7 85 58 d5
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+28836], 120 ; 00000078H
  02fce	66 89 85 5c d5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28840], ax
  02fd5	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@+16
  02fdc	66 89 85 6e d5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+28858], ax
  02fe3	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GLFFOGOH@data?2se?2sa1_01?4wav@+18
  02fea	68 b5 00 00 00	 push	 181			; 000000b5H
  02fef	88 85 70 d5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+28860], al
  02ff5	8d 85 71 d5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+28861]
  02ffb	6a 00		 push	 0
  02ffd	50		 push	 eax
  02ffe	c6 85 5a d5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+28838], 0
  03005	0f 11 85 5e d5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+28842], xmm0
  0300c	e8 00 00 00 00	 call	 _memset

; 167  : 	{  328,"data\\se\\sa1_02.wav",120, 0 ,0 } , //ç«é¾æª

  03011	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@
  03018	b8 48 01 00 00	 mov	 eax, 328		; 00000148H
  0301d	66 c7 85 26 d6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+29042], 120 ; 00000078H
  03026	66 89 85 2a d6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29046], ax
  0302d	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@+16
  03034	66 89 85 3c d6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29064], ax
  0303b	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@ONMBJEEJ@data?2se?2sa1_02?4wav@+18
  03042	68 b5 00 00 00	 push	 181			; 000000b5H
  03047	88 85 3e d6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+29066], al
  0304d	8d 85 3f d6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+29067]
  03053	6a 00		 push	 0
  03055	50		 push	 eax
  03056	c6 85 28 d6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+29044], 0
  0305d	0f 11 85 2c d6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+29048], xmm0
  03064	e8 00 00 00 00	 call	 _memset

; 168  : 	{  371,"data\\se\\sa2_01.wav",120, 0 ,0 } , //åé¿

  03069	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@
  03070	b8 73 01 00 00	 mov	 eax, 371		; 00000173H
  03075	66 c7 85 f4 d6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+29248], 120 ; 00000078H
  0307e	66 89 85 f8 d6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29252], ax
  03085	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@+16
  0308c	66 89 85 0a d7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29270], ax
  03093	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FCNINKCC@data?2se?2sa2_01?4wav@+18
  0309a	68 b5 00 00 00	 push	 181			; 000000b5H
  0309f	88 85 0c d7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+29272], al
  030a5	8d 85 0d d7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+29273]
  030ab	6a 00		 push	 0
  030ad	50		 push	 eax
  030ae	c6 85 f6 d6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+29250], 0
  030b5	0f 11 85 fa d6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+29254], xmm0
  030bc	e8 00 00 00 00	 call	 _memset

; 169  : 	{  372,"data\\se\\sa2_02.wav",120, 0 ,0 } , //æ¿åæ»å»

  030c1	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@
  030c8	b8 74 01 00 00	 mov	 eax, 372		; 00000174H
  030cd	66 c7 85 c2 d7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+29454], 120 ; 00000078H
  030d6	66 89 85 c6 d7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29458], ax
  030dd	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@+16
  030e4	66 89 85 d8 d7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29476], ax
  030eb	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NEEMKIIM@data?2se?2sa2_02?4wav@+18
  030f2	68 b5 00 00 00	 push	 181			; 000000b5H
  030f7	88 85 da d7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+29478], al
  030fd	8d 85 db d7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+29479]
  03103	6a 00		 push	 0
  03105	50		 push	 eax
  03106	c6 85 c4 d7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+29456], 0
  0310d	0f 11 85 c8 d7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+29460], xmm0
  03114	e8 00 00 00 00	 call	 _memset

; 170  : 	{  373,"data\\se\\sa2_03.wav",120, 0 ,0 } , //è½éèé

  03119	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@
  03120	b8 75 01 00 00	 mov	 eax, 373		; 00000175H
  03125	66 c7 85 90 d8
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+29660], 120 ; 00000078H
  0312e	66 89 85 94 d8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29664], ax
  03135	83 c4 48	 add	 esp, 72			; 00000048H
  03138	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@+16
  0313f	66 89 85 a6 d8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29682], ax
  03146	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BPBAHLCJ@data?2se?2sa2_03?4wav@+18
  0314d	68 b5 00 00 00	 push	 181			; 000000b5H
  03152	88 85 a8 d8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+29684], al
  03158	8d 85 a9 d8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+29685]
  0315e	6a 00		 push	 0
  03160	50		 push	 eax
  03161	c6 85 92 d8 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+29662], 0
  03168	0f 11 85 96 d8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+29666], xmm0
  0316f	e8 00 00 00 00	 call	 _memset

; 171  : 	{  374,"data\\se\\sa2_04.wav",120, 0 ,0 } , //ä¸æ³¨ææ

  03174	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@
  0317b	b8 76 01 00 00	 mov	 eax, 374		; 00000176H
  03180	66 c7 85 5e d9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+29866], 120 ; 00000078H
  03189	66 89 85 62 d9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29870], ax
  03190	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@+16
  03197	66 89 85 74 d9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+29888], ax
  0319e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CBFELJB@data?2se?2sa2_04?4wav@+18
  031a5	68 b5 00 00 00	 push	 181			; 000000b5H
  031aa	88 85 76 d9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+29890], al
  031b0	8d 85 77 d9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+29891]
  031b6	6a 00		 push	 0
  031b8	50		 push	 eax
  031b9	c6 85 60 d9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+29868], 0
  031c0	0f 11 85 64 d9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+29872], xmm0
  031c7	e8 00 00 00 00	 call	 _memset

; 172  : 	{  375,"data\\se\\sa2_05.wav",120, 0 ,0 } , //æ¿æ­»æ»å»

  031cc	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@
  031d3	b8 77 01 00 00	 mov	 eax, 375		; 00000177H
  031d8	66 c7 85 2c da
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+30072], 120 ; 00000078H
  031e1	66 89 85 30 da
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30076], ax
  031e8	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@+16
  031ef	66 89 85 42 da
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30094], ax
  031f6	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MJEJJIDE@data?2se?2sa2_05?4wav@+18
  031fd	68 b5 00 00 00	 push	 181			; 000000b5H
  03202	88 85 44 da ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+30096], al
  03208	8d 85 45 da ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+30097]
  0320e	6a 00		 push	 0
  03210	50		 push	 eax
  03211	c6 85 2e da ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+30074], 0
  03218	0f 11 85 32 da
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+30078], xmm0
  0321f	e8 00 00 00 00	 call	 _memset

; 173  : 	{  376,"data\\se\\sa2_06.wav",120, 0, 0 } , //åå£«æè½æ»å»å½ä¸­åå­å

  03224	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@
  0322b	b8 78 01 00 00	 mov	 eax, 376		; 00000178H
  03230	66 c7 85 fa da
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+30278], 120 ; 00000078H
  03239	66 89 85 fe da
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30282], ax
  03240	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@+16
  03247	66 89 85 10 db
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30300], ax
  0324e	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EPNNOKJK@data?2se?2sa2_06?4wav@+18
  03255	68 b5 00 00 00	 push	 181			; 000000b5H
  0325a	88 85 12 db ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+30302], al
  03260	8d 85 13 db ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+30303]
  03266	6a 00		 push	 0
  03268	50		 push	 eax
  03269	c6 85 fc da ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+30280], 0
  03270	0f 11 85 00 db
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+30284], xmm0
  03277	e8 00 00 00 00	 call	 _memset

; 174  : 	{  377,"data\\se\\sa2_07.wav",120, 0, 0 } , //è´¯ç©¿æ»å»1

  0327c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@
  03283	b8 79 01 00 00	 mov	 eax, 377		; 00000179H
  03288	66 c7 85 c8 db
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+30484], 120 ; 00000078H
  03291	c6 85 ca db ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+30486], 0
  03298	66 89 85 cc db
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30488], ax
  0329f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@+16
  032a6	66 89 85 de db
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30506], ax
  032ad	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IEIBDJDP@data?2se?2sa2_07?4wav@+18
  032b4	68 b5 00 00 00	 push	 181			; 000000b5H
  032b9	88 85 e0 db ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+30508], al
  032bf	8d 85 e1 db ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+30509]
  032c5	6a 00		 push	 0
  032c7	50		 push	 eax
  032c8	0f 11 85 ce db
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+30490], xmm0
  032cf	e8 00 00 00 00	 call	 _memset

; 175  : 	{  378,"data\\se\\sa2_08.wav",120, 0, 0 } , //è´¯ç©¿æ»å»2

  032d4	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@
  032db	b8 7a 01 00 00	 mov	 eax, 378		; 0000017aH
  032e0	66 c7 85 96 dc
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+30690], 120 ; 00000078H
  032e9	66 89 85 9a dc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30694], ax
  032f0	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@+16
  032f7	66 89 85 ac dc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30712], ax
  032fe	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HFNHILOK@data?2se?2sa2_08?4wav@+18
  03305	68 b5 00 00 00	 push	 181			; 000000b5H
  0330a	88 85 ae dc ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+30714], al
  03310	8d 85 af dc ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+30715]
  03316	6a 00		 push	 0
  03318	50		 push	 eax
  03319	c6 85 98 dc ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+30692], 0
  03320	0f 11 85 9c dc
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+30696], xmm0
  03327	e8 00 00 00 00	 call	 _memset

; 176  : 	{  379,"data\\se\\sa2_09.wav",120, 0, 0 } , //åææ»å»1

  0332c	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@
  03333	b8 7b 01 00 00	 mov	 eax, 379		; 0000017bH
  03338	66 c7 85 64 dd
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+30896], 120 ; 00000078H
  03341	66 89 85 68 dd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30900], ax
  03348	83 c4 48	 add	 esp, 72			; 00000048H
  0334b	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@+16
  03352	66 89 85 7a dd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+30918], ax
  03359	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LOILFIEP@data?2se?2sa2_09?4wav@+18
  03360	68 b5 00 00 00	 push	 181			; 000000b5H
  03365	88 85 7c dd ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+30920], al
  0336b	8d 85 7d dd ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+30921]
  03371	6a 00		 push	 0
  03373	50		 push	 eax
  03374	c6 85 66 dd ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+30898], 0
  0337b	0f 11 85 6a dd
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+30902], xmm0
  03382	e8 00 00 00 00	 call	 _memset

; 177  : 	{  380,"data\\se\\sa2_10.wav",120, 0, 0 } , //åææ»å»2

  03387	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@
  0338e	b8 7c 01 00 00	 mov	 eax, 380		; 0000017cH
  03393	66 c7 85 32 de
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+31102], 120 ; 00000078H
  0339c	66 89 85 36 de
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31106], ax
  033a3	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@+16
  033aa	66 89 85 48 de
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31124], ax
  033b1	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DPPDACDD@data?2se?2sa2_10?4wav@+18
  033b8	68 b5 00 00 00	 push	 181			; 000000b5H
  033bd	88 85 4a de ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+31126], al
  033c3	8d 85 4b de ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+31127]
  033c9	6a 00		 push	 0
  033cb	50		 push	 eax
  033cc	c6 85 34 de ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+31104], 0
  033d3	0f 11 85 38 de
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+31108], xmm0
  033da	e8 00 00 00 00	 call	 _memset

; 178  : 	{  381,"data\\se\\sa3_01.wav",120, 0, 0 } , //è¿½å¯»æè¸ª

  033df	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@
  033e6	b8 7d 01 00 00	 mov	 eax, 381		; 0000017dH
  033eb	66 c7 85 00 df
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+31308], 120 ; 00000078H
  033f4	66 89 85 04 df
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31312], ax
  033fb	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@+16
  03402	66 89 85 16 df
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31330], ax
  03409	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EFKDMOGB@data?2se?2sa3_01?4wav@+18
  03410	68 b5 00 00 00	 push	 181			; 000000b5H
  03415	88 85 18 df ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+31332], al
  0341b	8d 85 19 df ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+31333]
  03421	6a 00		 push	 0
  03423	50		 push	 eax
  03424	c6 85 02 df ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+31310], 0
  0342b	0f 11 85 06 df
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+31314], xmm0
  03432	e8 00 00 00 00	 call	 _memset

; 179  : 	{  382,"data\\se\\sa3_02.wav",120, 0, 0 } , //æ æ ¹ç¼ ç»

  03437	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@
  0343e	b8 7e 01 00 00	 mov	 eax, 382		; 0000017eH
  03443	66 c7 85 ce df
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+31514], 120 ; 00000078H
  0344c	66 89 85 d2 df
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31518], ax
  03453	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@+16
  0345a	66 89 85 e4 df
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31536], ax
  03461	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MDDHLMMP@data?2se?2sa3_02?4wav@+18
  03468	c6 85 d0 df ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+31516], 0
  0346f	0f 11 85 d4 df
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+31520], xmm0
  03476	88 85 e6 df ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+31538], al
  0347c	68 b5 00 00 00	 push	 181			; 000000b5H
  03481	8d 85 e7 df ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+31539]
  03487	6a 00		 push	 0
  03489	50		 push	 eax
  0348a	e8 00 00 00 00	 call	 _memset

; 180  : 	{  383,"data\\se\\sa3_03.wav",120, 0, 0 } , //æ¯ç´ æ­¦å¨

  0348f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@
  03496	b8 7f 01 00 00	 mov	 eax, 383		; 0000017fH
  0349b	66 c7 85 9c e0
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+31720], 120 ; 00000078H
  034a4	66 89 85 a0 e0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31724], ax
  034ab	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@+16
  034b2	66 89 85 b2 e0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31742], ax
  034b9	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IGLGPGK@data?2se?2sa3_03?4wav@+18
  034c0	68 b5 00 00 00	 push	 181			; 000000b5H
  034c5	88 85 b4 e0 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+31744], al
  034cb	8d 85 b5 e0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+31745]
  034d1	6a 00		 push	 0
  034d3	50		 push	 eax
  034d4	c6 85 9e e0 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+31722], 0
  034db	0f 11 85 a2 e0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+31726], xmm0
  034e2	e8 00 00 00 00	 call	 _memset

; 181  : 	{  384,"data\\se\\sa3_04.wav",120, 0, 0 } , //å°å»ææ§

  034e7	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@
  034ee	b8 80 01 00 00	 mov	 eax, 384		; 00000180H
  034f3	66 c7 85 6a e1
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+31926], 120 ; 00000078H
  034fc	66 89 85 6e e1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31930], ax
  03503	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@+16
  0350a	66 89 85 80 e1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+31948], ax
  03511	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BFGOFPNC@data?2se?2sa3_04?4wav@+18
  03518	68 b5 00 00 00	 push	 181			; 000000b5H
  0351d	88 85 82 e1 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+31950], al
  03523	8d 85 83 e1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+31951]
  03529	6a 00		 push	 0
  0352b	50		 push	 eax
  0352c	c6 85 6c e1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+31928], 0
  03533	0f 11 85 70 e1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+31932], xmm0
  0353a	e8 00 00 00 00	 call	 _memset

; 182  : 	{  385,"data\\se\\sa3_05.wav",120, 0, 0 } , //é·çµææ§

  0353f	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@
  03546	b8 81 01 00 00	 mov	 eax, 385		; 00000181H
  0354b	66 c7 85 38 e2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+32132], 120 ; 00000078H
  03554	66 89 85 3c e2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32136], ax
  0355b	83 c4 48	 add	 esp, 72			; 00000048H
  0355e	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@+16
  03565	66 89 85 4e e2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32154], ax
  0356c	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NODCIMHH@data?2se?2sa3_05?4wav@+18
  03573	68 b5 00 00 00	 push	 181			; 000000b5H
  03578	88 85 50 e2 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+32156], al
  0357e	8d 85 51 e2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+32157]
  03584	6a 00		 push	 0
  03586	50		 push	 eax
  03587	c6 85 3a e2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+32134], 0
  0358e	0f 11 85 3e e2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+32138], xmm0
  03595	e8 00 00 00 00	 call	 _memset

; 183  : 	{  386,"data\\se\\sa3_06.wav",120, 0, 0 } , //ç«ç°ææ§æ¾

  0359a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@
  035a1	b8 82 01 00 00	 mov	 eax, 386		; 00000182H
  035a6	66 c7 85 06 e3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+32338], 120 ; 00000078H
  035af	66 89 85 0a e3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32342], ax
  035b6	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@+16
  035bd	66 89 85 1c e3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32360], ax
  035c4	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FIKGPONJ@data?2se?2sa3_06?4wav@+18
  035cb	68 b5 00 00 00	 push	 181			; 000000b5H
  035d0	88 85 1e e3 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+32362], al
  035d6	8d 85 1f e3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+32363]
  035dc	6a 00		 push	 0
  035de	50		 push	 eax
  035df	c6 85 08 e3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+32340], 0
  035e6	0f 11 85 0c e3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+32344], xmm0
  035ed	e8 00 00 00 00	 call	 _memset

; 184  : 	{  387,"data\\se\\sa3_07.wav",120, 0, 0 } , //ç«ç°ææ§ä¸­

  035f2	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@
  035f9	b8 83 01 00 00	 mov	 eax, 387		; 00000183H
  035fe	66 c7 85 d4 e3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+32544], 120 ; 00000078H
  03607	66 89 85 d8 e3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32548], ax
  0360e	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@+16
  03615	66 89 85 ea e3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32566], ax
  0361c	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JDPKCNHM@data?2se?2sa3_07?4wav@+18
  03623	68 b5 00 00 00	 push	 181			; 000000b5H
  03628	88 85 ec e3 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+32568], al
  0362e	8d 85 ed e3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+32569]
  03634	6a 00		 push	 0
  03636	50		 push	 eax
  03637	c6 85 d6 e3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+32546], 0
  0363e	0f 11 85 da e3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+32550], xmm0
  03645	e8 00 00 00 00	 call	 _memset

; 185  : 	{  388,"data\\se\\sa1_03.wav",120, 0, 0 } , //çµæµæ¯

  0364a	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@
  03651	b8 84 01 00 00	 mov	 eax, 388		; 00000184H
  03656	66 c7 85 a2 e4
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+32750], 120 ; 00000078H
  0365f	66 89 85 a6 e4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32754], ax
  03666	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@+16
  0366d	66 89 85 b8 e4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32772], ax
  03674	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CGJNEHOM@data?2se?2sa1_03?4wav@+18
  0367b	68 b5 00 00 00	 push	 181			; 000000b5H
  03680	88 85 ba e4 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+32774], al
  03686	8d 85 bb e4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+32775]
  0368c	6a 00		 push	 0
  0368e	50		 push	 eax
  0368f	c6 85 a4 e4 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+32752], 0
  03696	0f 11 85 a8 e4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+32756], xmm0
  0369d	e8 00 00 00 00	 call	 _memset

; 186  : 	{  389,"data\\se\\sa1_04.wav",120, 0, 0 } , //å¬é·æ¯

  036a2	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@
  036a9	b8 85 01 00 00	 mov	 eax, 389		; 00000185H
  036ae	66 c7 85 70 e5
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+32956], 120 ; 00000078H
  036b7	66 89 85 74 e5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32960], ax
  036be	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@+16
  036c5	66 89 85 86 e5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+32978], ax
  036cc	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DLJIHHFE@data?2se?2sa1_04?4wav@+18
  036d3	68 b5 00 00 00	 push	 181			; 000000b5H
  036d8	88 85 88 e5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+32980], al
  036de	8d 85 89 e5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+32981]
  036e4	6a 00		 push	 0
  036e6	50		 push	 eax
  036e7	c6 85 72 e5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+32958], 0
  036ee	0f 11 85 76 e5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+32962], xmm0
  036f5	e8 00 00 00 00	 call	 _memset

; 187  : 	{  390,"data\\se\\sa1_05.wav",120, 0, 0 } , //æ´é£é¨å¤§

  036fa	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@
  03701	b8 86 01 00 00	 mov	 eax, 390		; 00000186H
  03706	66 c7 85 3e e6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+33162], 120 ; 00000078H
  0370f	66 89 85 42 e6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33166], ax
  03716	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@+16
  0371d	66 89 85 54 e6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33184], ax
  03724	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PAMEKEPB@data?2se?2sa1_05?4wav@+18
  0372b	68 b5 00 00 00	 push	 181			; 000000b5H
  03730	88 85 56 e6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+33186], al
  03736	8d 85 57 e6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+33187]
  0373c	6a 00		 push	 0
  0373e	50		 push	 eax
  0373f	c6 85 40 e6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+33164], 0
  03746	0f 11 85 44 e6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+33168], xmm0
  0374d	e8 00 00 00 00	 call	 _memset

; 188  : 	{  391,"data\\se\\sa1_06.wav",120, 0, 0 } , //å°ç®­æ¯

  03752	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@
  03759	b8 87 01 00 00	 mov	 eax, 391		; 00000187H
  0375e	66 c7 85 0c e7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+33368], 120 ; 00000078H
  03767	66 89 85 10 e7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33372], ax
  0376e	83 c4 48	 add	 esp, 72			; 00000048H
  03771	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@+16
  03778	66 89 85 22 e7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33390], ax
  0377f	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HGFANGFP@data?2se?2sa1_06?4wav@+18
  03786	68 b5 00 00 00	 push	 181			; 000000b5H
  0378b	88 85 24 e7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+33392], al
  03791	8d 85 25 e7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+33393]
  03797	6a 00		 push	 0
  03799	50		 push	 eax
  0379a	c6 85 0e e7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+33370], 0
  037a1	0f 11 85 12 e7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+33374], xmm0
  037a8	e8 00 00 00 00	 call	 _memset

; 189  : 	{  392,"data\\se\\sa1_07.wav",120, 0, 0 } , //å°çæ¯

  037ad	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@
  037b4	b8 88 01 00 00	 mov	 eax, 392		; 00000188H
  037b9	66 c7 85 da e7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+33574], 120 ; 00000078H
  037c2	66 89 85 de e7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33578], ax
  037c9	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@+16
  037d0	66 89 85 f0 e7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33596], ax
  037d7	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LNAMAFPK@data?2se?2sa1_07?4wav@+18
  037de	68 b5 00 00 00	 push	 181			; 000000b5H
  037e3	88 85 f2 e7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+33598], al
  037e9	8d 85 f3 e7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+33599]
  037ef	6a 00		 push	 0
  037f1	50		 push	 eax
  037f2	c6 85 dc e7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+33576], 0
  037f9	0f 11 85 e0 e7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+33580], xmm0
  03800	e8 00 00 00 00	 call	 _memset

; 190  : 	{  393,"data\\se\\sa1_08.wav",120, 0, 0 } , //å°éæ¯

  03805	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@
  0380c	b8 89 01 00 00	 mov	 eax, 393		; 00000189H
  03811	66 c7 85 a8 e8
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+33780], 120 ; 00000078H
  0381a	c6 85 aa e8 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+33782], 0
  03821	66 89 85 ac e8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33784], ax
  03828	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@+16
  0382f	66 89 85 be e8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33802], ax
  03836	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EMFKLHCP@data?2se?2sa1_08?4wav@+18
  0383d	68 b5 00 00 00	 push	 181			; 000000b5H
  03842	88 85 c0 e8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+33804], al
  03848	8d 85 c1 e8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+33805]
  0384e	6a 00		 push	 0
  03850	50		 push	 eax
  03851	0f 11 85 ae e8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+33786], xmm0
  03858	e8 00 00 00 00	 call	 _memset

; 191  : 	{  394,"data\\se\\sa1_09.wav",120, 0, 0 } , //æ´é£é¨å°

  0385d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@
  03864	b8 8a 01 00 00	 mov	 eax, 394		; 0000018aH
  03869	66 c7 85 76 e9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+33986], 120 ; 00000078H
  03872	66 89 85 7a e9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+33990], ax
  03879	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@+16
  03880	66 89 85 8c e9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34008], ax
  03887	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IHAGGEIK@data?2se?2sa1_09?4wav@+18
  0388e	68 b5 00 00 00	 push	 181			; 000000b5H
  03893	88 85 8e e9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+34010], al
  03899	8d 85 8f e9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+34011]
  0389f	6a 00		 push	 0
  038a1	50		 push	 eax
  038a2	c6 85 78 e9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+33988], 0
  038a9	0f 11 85 7c e9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+33992], xmm0
  038b0	e8 00 00 00 00	 call	 _memset

; 192  : 	{  395,"data\\se\\sa1_10.wav",120, 0, 0 } , //ç«å±±æ³å¤§

  038b5	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@
  038bc	b8 8b 01 00 00	 mov	 eax, 395		; 0000018bH
  038c1	66 c7 85 44 ea
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+34192], 120 ; 00000078H
  038ca	66 89 85 48 ea
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34196], ax
  038d1	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@+16
  038d8	66 89 85 5a ea
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34214], ax
  038df	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GHODOPG@data?2se?2sa1_10?4wav@+18
  038e6	68 b5 00 00 00	 push	 181			; 000000b5H
  038eb	88 85 5c ea ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+34216], al
  038f1	8d 85 5d ea ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+34217]
  038f7	6a 00		 push	 0
  038f9	50		 push	 eax
  038fa	c6 85 46 ea ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+34194], 0
  03901	0f 11 85 4a ea
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+34198], xmm0
  03908	e8 00 00 00 00	 call	 _memset

; 193  : 	{  396,"data\\se\\sa1_11.wav",120, 0, 0 } , //ç«å±±æ³ä¸­

  0390d	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@
  03914	b8 8c 01 00 00	 mov	 eax, 396		; 0000018cH
  03919	66 c7 85 12 eb
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+34398], 120 ; 00000078H
  03922	66 89 85 16 eb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34402], ax
  03929	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@+16
  03930	66 89 85 28 eb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34420], ax
  03937	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@MNCCONFD@data?2se?2sa1_11?4wav@+18
  0393e	68 b5 00 00 00	 push	 181			; 000000b5H
  03943	88 85 2a eb ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+34422], al
  03949	8d 85 2b eb ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+34423]
  0394f	6a 00		 push	 0
  03951	50		 push	 eax
  03952	c6 85 14 eb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+34400], 0
  03959	0f 11 85 18 eb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+34404], xmm0
  03960	e8 00 00 00 00	 call	 _memset

; 194  : 	{  397,"data\\se\\sa1_12.wav",120, 0, 0 } , //ç«å±±æ³å°

  03965	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@
  0396c	83 c4 48	 add	 esp, 72			; 00000048H
  0396f	66 c7 85 e0 eb
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+34604], 120 ; 00000078H
  03978	b8 8d 01 00 00	 mov	 eax, 397		; 0000018dH
  0397d	c6 85 e2 eb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+34606], 0
  03984	66 89 85 e4 eb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34608], ax
  0398b	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@+16
  03992	66 89 85 f6 eb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34626], ax
  03999	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@ELLGJPPN@data?2se?2sa1_12?4wav@+18
  039a0	68 b5 00 00 00	 push	 181			; 000000b5H
  039a5	88 85 f8 eb ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+34628], al
  039ab	8d 85 f9 eb ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+34629]
  039b1	6a 00		 push	 0
  039b3	50		 push	 eax
  039b4	0f 11 85 e6 eb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+34610], xmm0
  039bb	e8 00 00 00 00	 call	 _memset

; 195  : 	{  398,"data\\se\\sa3_08.wav",120, 0, 0 } , //çäººä½¿ç¨

  039c0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@
  039c7	b8 8e 01 00 00	 mov	 eax, 398		; 0000018eH
  039cc	66 c7 85 ae ec
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+34810], 120 ; 00000078H
  039d5	66 89 85 b2 ec
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34814], ax
  039dc	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@+16
  039e3	66 89 85 c4 ec
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+34832], ax
  039ea	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@GCKMJPKJ@data?2se?2sa3_08?4wav@+18
  039f1	c6 85 b0 ec ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+34812], 0
  039f8	0f 11 85 b4 ec
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+34816], xmm0
  039ff	88 85 c6 ec ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+34834], al
  03a05	68 b5 00 00 00	 push	 181			; 000000b5H
  03a0a	8d 85 c7 ec ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+34835]
  03a10	6a 00		 push	 0
  03a12	50		 push	 eax
  03a13	e8 00 00 00 00	 call	 _memset

; 196  : 	{  399,"data\\se\\sa3_09.wav",120, 0, 0 } , //å¼±ç¹æ»å»

  03a18	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@
  03a1f	b8 8f 01 00 00	 mov	 eax, 399		; 0000018fH
  03a24	66 c7 85 7c ed
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+35016], 120 ; 00000078H
  03a2d	66 89 85 80 ed
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35020], ax
  03a34	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@+16
  03a3b	66 89 85 92 ed
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35038], ax
  03a42	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@KJPAEMAM@data?2se?2sa3_09?4wav@+18
  03a49	68 b5 00 00 00	 push	 181			; 000000b5H
  03a4e	88 85 94 ed ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+35040], al
  03a54	8d 85 95 ed ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+35041]
  03a5a	6a 00		 push	 0
  03a5c	50		 push	 eax
  03a5d	c6 85 7e ed ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+35018], 0
  03a64	0f 11 85 82 ed
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+35022], xmm0
  03a6b	e8 00 00 00 00	 call	 _memset

; 197  : 	{  271,"data\\se\\sa1_13.wav",120, 0, 0 } , //ä¸éè§è¡

  03a70	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@
  03a77	b8 0f 01 00 00	 mov	 eax, 271		; 0000010fH
  03a7c	66 c7 85 4a ee
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+35222], 120 ; 00000078H
  03a85	66 89 85 4e ee
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35226], ax
  03a8c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@+16
  03a93	66 89 85 60 ee
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35244], ax
  03a9a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@IAOKEMFI@data?2se?2sa1_13?4wav@+18
  03aa1	68 b5 00 00 00	 push	 181			; 000000b5H
  03aa6	88 85 62 ee ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+35246], al
  03aac	8d 85 63 ee ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+35247]
  03ab2	6a 00		 push	 0
  03ab4	50		 push	 eax
  03ab5	c6 85 4c ee ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+35224], 0
  03abc	0f 11 85 50 ee
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+35228], xmm0
  03ac3	e8 00 00 00 00	 call	 _memset

; 198  : 
; 199  : 	{  261,"data\\se\\sa1_14.wav",120, 0, 0 } , //é·éä½

  03ac8	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@
  03acf	b8 05 01 00 00	 mov	 eax, 261		; 00000105H
  03ad4	66 c7 85 18 ef
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+35428], 120 ; 00000078H
  03add	66 89 85 1c ef
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35432], ax
  03ae4	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@+16
  03aeb	66 89 85 2e ef
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35450], ax
  03af2	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JNOPHMOA@data?2se?2sa1_14?4wav@+18
  03af9	68 b5 00 00 00	 push	 181			; 000000b5H
  03afe	88 85 30 ef ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+35452], al
  03b04	8d 85 31 ef ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+35453]
  03b0a	6a 00		 push	 0
  03b0c	50		 push	 eax
  03b0d	c6 85 1a ef ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+35430], 0
  03b14	0f 11 85 1e ef
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+35434], xmm0
  03b1b	e8 00 00 00 00	 call	 _memset

; 200  : 	{  262,"data\\se\\sa1_15.wav",120, 0, 0 } , //å°ç«éä½

  03b20	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@
  03b27	b8 06 01 00 00	 mov	 eax, 262		; 00000106H
  03b2c	66 c7 85 e6 ef
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+35634], 120 ; 00000078H
  03b35	66 89 85 ea ef
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35638], ax
  03b3c	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@+16
  03b43	66 89 85 fc ef
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35656], ax
  03b4a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FGLDKPEF@data?2se?2sa1_15?4wav@+18
  03b51	68 b5 00 00 00	 push	 181			; 000000b5H
  03b56	88 85 fe ef ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+35658], al
  03b5c	8d 85 ff ef ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+35659]
  03b62	6a 00		 push	 0
  03b64	50		 push	 eax
  03b65	c6 85 e8 ef ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+35636], 0
  03b6c	0f 11 85 ec ef
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+35640], xmm0
  03b73	e8 00 00 00 00	 call	 _memset

; 201  : 	{  263,"data\\se\\sa1_16.wav",120, 0, 0 } , //åè¡è

  03b78	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@
  03b7f	83 c4 48	 add	 esp, 72			; 00000048H
  03b82	66 c7 85 b4 f0
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+35840], 120 ; 00000078H
  03b8b	b8 07 01 00 00	 mov	 eax, 263		; 00000107H
  03b90	c6 85 b6 f0 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+35842], 0
  03b97	66 89 85 b8 f0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35844], ax
  03b9e	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@+16
  03ba5	66 89 85 ca f0
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+35862], ax
  03bac	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@NACHNNOL@data?2se?2sa1_16?4wav@+18
  03bb3	68 b5 00 00 00	 push	 181			; 000000b5H
  03bb8	88 85 cc f0 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+35864], al
  03bbe	8d 85 cd f0 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+35865]
  03bc4	6a 00		 push	 0
  03bc6	50		 push	 eax
  03bc7	0f 11 85 ba f0
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+35846], xmm0
  03bce	e8 00 00 00 00	 call	 _memset

; 202  : 	{  264,"data\\se\\sa1_17.wav",120, 0, 0 } , //éèº«æ¯

  03bd3	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@
  03bda	b8 08 01 00 00	 mov	 eax, 264		; 00000108H
  03bdf	66 c7 85 82 f1
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+36046], 120 ; 00000078H
  03be8	66 89 85 86 f1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36050], ax
  03bef	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@+16
  03bf6	66 89 85 98 f1
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36068], ax
  03bfd	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BLHLAOEO@data?2se?2sa1_17?4wav@+18
  03c04	68 b5 00 00 00	 push	 181			; 000000b5H
  03c09	88 85 9a f1 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+36070], al
  03c0f	8d 85 9b f1 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+36071]
  03c15	6a 00		 push	 0
  03c17	50		 push	 eax
  03c18	c6 85 84 f1 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+36048], 0
  03c1f	0f 11 85 88 f1
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+36052], xmm0
  03c26	e8 00 00 00 00	 call	 _memset

; 203  : 	{  265,"data\\se\\sa1_18.wav",120, 0, 0 } , //åè¡ææ§10

  03c2b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@
  03c32	b8 09 01 00 00	 mov	 eax, 265		; 00000109H
  03c37	66 c7 85 50 f2
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+36252], 120 ; 00000078H
  03c40	66 89 85 54 f2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36256], ax
  03c47	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@+16
  03c4e	66 89 85 66 f2
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36274], ax
  03c55	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@OKCNLMJL@data?2se?2sa1_18?4wav@+18
  03c5c	68 b5 00 00 00	 push	 181			; 000000b5H
  03c61	88 85 68 f2 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+36276], al
  03c67	8d 85 69 f2 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+36277]
  03c6d	6a 00		 push	 0
  03c6f	50		 push	 eax
  03c70	c6 85 52 f2 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+36254], 0
  03c77	0f 11 85 56 f2
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+36258], xmm0
  03c7e	e8 00 00 00 00	 call	 _memset

; 204  : 	{  266,"data\\se\\sa1_19.wav",120, 0, 0 } , //åè¡ææ§7

  03c83	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@
  03c8a	b8 0a 01 00 00	 mov	 eax, 266		; 0000010aH
  03c8f	66 c7 85 1e f3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+36458], 120 ; 00000078H
  03c98	66 89 85 22 f3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36462], ax
  03c9f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@+16
  03ca6	66 89 85 34 f3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36480], ax
  03cad	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@CBHBGPDO@data?2se?2sa1_19?4wav@+18
  03cb4	68 b5 00 00 00	 push	 181			; 000000b5H
  03cb9	88 85 36 f3 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+36482], al
  03cbf	8d 85 37 f3 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+36483]
  03cc5	6a 00		 push	 0
  03cc7	50		 push	 eax
  03cc8	c6 85 20 f3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+36460], 0
  03ccf	0f 11 85 24 f3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+36464], xmm0
  03cd6	e8 00 00 00 00	 call	 _memset

; 205  : 	{  267,"data\\se\\sa1_20.wav",120, 0, 0 } , //åè¡ææ§4

  03cdb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@
  03ce2	b8 0b 01 00 00	 mov	 eax, 267		; 0000010bH
  03ce7	66 c7 85 ec f3
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+36664], 120 ; 00000078H
  03cf0	66 89 85 f0 f3
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36668], ax
  03cf7	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@+16
  03cfe	66 89 85 02 f4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36686], ax
  03d05	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@DHJGCEGL@data?2se?2sa1_20?4wav@+18
  03d0c	68 b5 00 00 00	 push	 181			; 000000b5H
  03d11	88 85 04 f4 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+36688], al
  03d17	8d 85 05 f4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+36689]
  03d1d	6a 00		 push	 0
  03d1f	50		 push	 eax
  03d20	c6 85 ee f3 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+36666], 0
  03d27	0f 11 85 f2 f3
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+36670], xmm0
  03d2e	e8 00 00 00 00	 call	 _memset

; 206  : 	{  268,"data\\se\\sa1_21.wav",120, 0, 0 } , //åè¡ææ§1

  03d33	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@
  03d3a	b8 0c 01 00 00	 mov	 eax, 268		; 0000010cH
  03d3f	66 c7 85 ba f4
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+36870], 120 ; 00000078H
  03d48	66 89 85 be f4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36874], ax
  03d4f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@+16
  03d56	66 89 85 d0 f4
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+36892], ax
  03d5d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@PMMKPHMO@data?2se?2sa1_21?4wav@+18
  03d64	68 b5 00 00 00	 push	 181			; 000000b5H
  03d69	88 85 d2 f4 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+36894], al
  03d6f	8d 85 d3 f4 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+36895]
  03d75	6a 00		 push	 0
  03d77	50		 push	 eax
  03d78	c6 85 bc f4 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+36872], 0
  03d7f	0f 11 85 c0 f4
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+36876], xmm0
  03d86	e8 00 00 00 00	 call	 _memset

; 207  : 	{  269,"data\\se\\sa1_22.wav",120, 0, 0 } , //ç«æç

  03d8b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@
  03d92	b8 0d 01 00 00	 mov	 eax, 269		; 0000010dH
  03d97	66 c7 85 88 f5
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+37076], 120 ; 00000078H
  03da0	83 c4 48	 add	 esp, 72			; 00000048H
  03da3	c6 85 8a f5 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+37078], 0
  03daa	66 89 85 8c f5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37080], ax
  03db1	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@+16
  03db8	66 89 85 9e f5
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37098], ax
  03dbf	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HKFOIFGA@data?2se?2sa1_22?4wav@+18
  03dc6	68 b5 00 00 00	 push	 181			; 000000b5H
  03dcb	88 85 a0 f5 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+37100], al
  03dd1	8d 85 a1 f5 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+37101]
  03dd7	6a 00		 push	 0
  03dd9	50		 push	 eax
  03dda	0f 11 85 8e f5
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+37082], xmm0
  03de1	e8 00 00 00 00	 call	 _memset

; 208  : 	{  270,"data\\se\\sa1_23.wav",120, 0, 0 } , //ç§»å½¢æ¢ä½

  03de6	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@
  03ded	b8 0e 01 00 00	 mov	 eax, 270		; 0000010eH
  03df2	66 c7 85 56 f6
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+37282], 120 ; 00000078H
  03dfb	66 89 85 5a f6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37286], ax
  03e02	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@+16
  03e09	66 89 85 6c f6
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37304], ax
  03e10	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@LBACFGMF@data?2se?2sa1_23?4wav@+18
  03e17	68 b5 00 00 00	 push	 181			; 000000b5H
  03e1c	88 85 6e f6 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+37306], al
  03e22	8d 85 6f f6 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+37307]
  03e28	6a 00		 push	 0
  03e2a	50		 push	 eax
  03e2b	c6 85 58 f6 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+37284], 0
  03e32	0f 11 85 5c f6
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+37288], xmm0
  03e39	e8 00 00 00 00	 call	 _memset

; 209  : 	{  272,"data\\se\\sa2_12.wav",120, 0, 0 } , //æ´å»æ°æµ

  03e3e	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@
  03e45	b8 10 01 00 00	 mov	 eax, 272		; 00000110H
  03e4a	66 c7 85 24 f7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+37488], 120 ; 00000078H
  03e53	66 89 85 28 f7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37492], ax
  03e5a	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@+16
  03e61	66 89 85 3a f7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37510], ax
  03e68	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@HCDLKDDI@data?2se?2sa2_12?4wav@+18
  03e6f	68 b5 00 00 00	 push	 181			; 000000b5H
  03e74	88 85 3c f7 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+37512], al
  03e7a	8d 85 3d f7 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+37513]
  03e80	6a 00		 push	 0
  03e82	50		 push	 eax
  03e83	c6 85 26 f7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+37490], 0
  03e8a	0f 11 85 2a f7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+37494], xmm0
  03e91	e8 00 00 00 00	 call	 _memset

; 210  : 
; 211  : 
; 212  : 
; 213  : #endif
; 214  : #ifdef _PROFESSION_ADDSKILL
; 215  : 	{  400,"data\\se\\sae_10.wav",120, 0, 0 } , //å·å¬èªç¶sak_92.wav

  03e96	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@CJMACOIM@data?2se?2sae_10?4wav@
  03e9d	b8 90 01 00 00	 mov	 eax, 400		; 00000190H
  03ea2	66 c7 85 f2 f7
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+37694], 120 ; 00000078H
  03eab	68 b5 00 00 00	 push	 181			; 000000b5H
  03eb0	66 89 85 f6 f7
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37698], ax
  03eb7	8d 85 0b f8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+37719]
  03ebd	6a 00		 push	 0
  03ebf	50		 push	 eax
  03ec0	c6 85 f4 f7 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+37696], 0
  03ec7	0f 11 85 f8 f7
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+37700], xmm0
  03ece	66 89 b5 08 f8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37716], si
  03ed5	88 9d 0a f8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+37718], bl
  03edb	e8 00 00 00 00	 call	 _memset

; 216  : #endif
; 217  : // BGM
; 218  : //	{  401,	"data\\bgm\\ls2b_01.wav", 5 /*, "????????"*/ },
; 219  : //	{  402,	"data\\bgm\\ls2b_02.wav", 5 /*, "??????"*/ },
; 220  : //	{  403,	"data\\bgm\\ls2b_03.wav", 5 /*, "ä½???"*/ },
; 221  : //	{  404,	"data\\bgm\\ls2b_04.wav", 5 /*, "????"*/ },
; 222  : 
; 223  : #ifdef _FIREWORK_SOUND
; 224  : 	{  405,"data\\se\\sax_01.wav",120, 0, 0 } , //äººåçç«é³æ

  03ee0	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@
  03ee7	b8 95 01 00 00	 mov	 eax, 405		; 00000195H
  03eec	66 c7 85 c0 f8
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+37900], 120 ; 00000078H
  03ef5	66 89 85 c4 f8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37904], ax
  03efc	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@+16
  03f03	66 89 85 d6 f8
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+37922], ax
  03f0a	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BJGEFDLL@data?2se?2sax_01?4wav@+18
  03f11	68 b5 00 00 00	 push	 181			; 000000b5H
  03f16	88 85 d8 f8 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+37924], al
  03f1c	8d 85 d9 f8 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+37925]
  03f22	6a 00		 push	 0
  03f24	50		 push	 eax
  03f25	c6 85 c2 f8 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+37902], 0
  03f2c	0f 11 85 c6 f8
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+37906], xmm0
  03f33	e8 00 00 00 00	 call	 _memset

; 225  : 	{  406,"data\\se\\sax_02.wav",120, 0, 0 } , //å® åçç«é³æ

  03f38	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@
  03f3f	b8 96 01 00 00	 mov	 eax, 406		; 00000196H
  03f44	66 c7 85 8e f9
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+38106], 120 ; 00000078H
  03f4d	66 89 85 92 f9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38110], ax
  03f54	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@+16
  03f5b	66 89 85 a4 f9
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38128], ax
  03f62	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@JPPACBBF@data?2se?2sax_02?4wav@+18
  03f69	68 b5 00 00 00	 push	 181			; 000000b5H
  03f6e	88 85 a6 f9 ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+38130], al
  03f74	8d 85 a7 f9 ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+38131]
  03f7a	c6 85 90 f9 ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+38108], 0
  03f81	0f 11 85 94 f9
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+38112], xmm0
  03f88	6a 00		 push	 0
  03f8a	50		 push	 eax
  03f8b	e8 00 00 00 00	 call	 _memset

; 226  : 	{  407,"data\\se\\sax_03.wav",120, 0, 0 } , //æ¿èçç«é³æ

  03f90	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@
  03f97	b8 97 01 00 00	 mov	 eax, 407		; 00000197H
  03f9c	66 c7 85 5c fa
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+38312], 120 ; 00000078H
  03fa5	66 89 85 60 fa
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38316], ax
  03fac	83 c4 48	 add	 esp, 72			; 00000048H
  03faf	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@+16
  03fb6	66 89 85 72 fa
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38334], ax
  03fbd	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FEKMPCLA@data?2se?2sax_03?4wav@+18
  03fc4	68 b5 00 00 00	 push	 181			; 000000b5H
  03fc9	88 85 74 fa ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+38336], al
  03fcf	8d 85 75 fa ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+38337]
  03fd5	6a 00		 push	 0
  03fd7	50		 push	 eax
  03fd8	c6 85 5e fa ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+38314], 0
  03fdf	0f 11 85 62 fa
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+38318], xmm0
  03fe6	e8 00 00 00 00	 call	 _memset

; 227  : #endif
; 228  : 	{  408,"data\\se\\sak_91.wav",120, 0, 0 } , //é¸¡å¹´å½ç¹ææ¶å½

  03feb	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@
  03ff2	b8 98 01 00 00	 mov	 eax, 408		; 00000198H
  03ff7	66 c7 85 2a fb
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+38518], 120 ; 00000078H
  04000	66 89 85 2e fb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38522], ax
  04007	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@+16
  0400e	66 89 85 40 fb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38540], ax
  04015	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@BJLBGINM@data?2se?2sak_91?4wav@+18
  0401c	68 b5 00 00 00	 push	 181			; 000000b5H
  04021	88 85 42 fb ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+38542], al
  04027	8d 85 43 fb ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+38543]
  0402d	6a 00		 push	 0
  0402f	50		 push	 eax
  04030	c6 85 2c fb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+38520], 0
  04037	0f 11 85 30 fb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+38524], xmm0
  0403e	e8 00 00 00 00	 call	 _memset

; 229  : 	{  409,"data\\se\\sak_93.wav",120, 0, 0 } , //ä¸è§é²¸ç¹ææ¶å½	

  04043	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@
  0404a	b8 99 01 00 00	 mov	 eax, 409		; 00000199H
  0404f	66 c7 85 f8 fb
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+38724], 120 ; 00000078H
  04058	66 89 85 fc fb
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38728], ax
  0405f	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@+16
  04066	66 89 85 0e fc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38746], ax
  0406d	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@FEHJMJNH@data?2se?2sak_93?4wav@+18
  04074	68 b5 00 00 00	 push	 181			; 000000b5H
  04079	88 85 10 fc ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+38748], al
  0407f	8d 85 11 fc ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+38749]
  04085	6a 00		 push	 0
  04087	50		 push	 eax
  04088	c6 85 fa fb ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+38726], 0
  0408f	0f 11 85 fe fb
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+38730], xmm0
  04096	e8 00 00 00 00	 call	 _memset

; 230  : 	{  130,"data\\se\\sap_14.wav",100, 0, 0	} , //æ²§é¾ä¸ç¨é³ææ¡£	

  0409b	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@FEAGGLKE@data?2se?2sap_14?4wav@
  040a2	b8 82 00 00 00	 mov	 eax, 130		; 00000082H
  040a7	66 c7 85 c6 fc
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+38930], 120 ; 00000078H
  040b0	68 b5 00 00 00	 push	 181			; 000000b5H
  040b5	66 89 85 ca fc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38934], ax
  040bc	8d 85 df fc ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+38955]
  040c2	6a 00		 push	 0
  040c4	50		 push	 eax
  040c5	c6 85 c8 fc ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+38932], 0
  040cc	0f 11 85 cc fc
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+38936], xmm0
  040d3	66 89 bd dc fc
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+38952], di
  040da	88 bd de fc ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+38954], bh
  040e0	e8 00 00 00 00	 call	 _memset

; 231  : 	{  410,"data\\se\\sak_94.wav",120, 0, 0 } , //èé¹°é³ææ¡£

  040e5	0f 10 05 00 00
	00 00		 movups	 xmm0, XMMWORD PTR ??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@
  040ec	b8 9a 01 00 00	 mov	 eax, 410		; 0000019aH
  040f1	66 c7 85 94 fd
	ff ff 64 00	 mov	 WORD PTR _sndconfig$[ebp+39136], 100 ; 00000064H
  040fa	66 89 85 98 fd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+39140], ax
  04101	0f b7 05 10 00
	00 00		 movzx	 eax, WORD PTR ??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@+16
  04108	66 89 85 aa fd
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+39158], ax
  0410f	0f b6 05 12 00
	00 00		 movzx	 eax, BYTE PTR ??_C@_0BD@EJHMPJGP@data?2se?2sak_94?4wav@+18
  04116	68 b5 00 00 00	 push	 181			; 000000b5H
  0411b	88 85 ac fd ff
	ff		 mov	 BYTE PTR _sndconfig$[ebp+39160], al
  04121	8d 85 ad fd ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+39161]
  04127	6a 00		 push	 0
  04129	50		 push	 eax
  0412a	c6 85 96 fd ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+39138], 0
  04131	0f 11 85 9a fd
	ff ff		 movups	 XMMWORD PTR _sndconfig$[ebp+39142], xmm0
  04138	e8 00 00 00 00	 call	 _memset

; 232  : 	{ -1 }	// î·î ???î???????

  0413d	83 c8 ff	 or	 eax, -1
  04140	66 c7 85 62 fe
	ff ff 78 00	 mov	 WORD PTR _sndconfig$[ebp+39342], 120 ; 00000078H
  04149	c6 85 64 fe ff
	ff 00		 mov	 BYTE PTR _sndconfig$[ebp+39344], 0
  04150	66 89 85 66 fe
	ff ff		 mov	 WORD PTR _sndconfig$[ebp+39346], ax
  04157	68 cc 00 00 00	 push	 204			; 000000ccH
  0415c	8d 85 68 fe ff
	ff		 lea	 eax, DWORD PTR _sndconfig$[ebp+39348]
  04162	6a 00		 push	 0
  04164	50		 push	 eax
  04165	e8 00 00 00 00	 call	 _memset
  0416a	83 c4 48	 add	 esp, 72			; 00000048H
  0416d	b8 00 00 00 00	 mov	 eax, OFFSET ?tone_tbl@@3PAUTONE_EQU@@A ; tone_tbl
$LL10@InitDSound:
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp

; 489  : 		tone_tbl[d7].voice_place = -1;

  04172	c7 00 ff ff ff
	ff		 mov	 DWORD PTR [eax], -1
  04178	83 c0 20	 add	 eax, 32			; 00000020H
  0417b	3d 80 3e 00 00	 cmp	 eax, OFFSET ?tone_tbl@@3PAUTONE_EQU@@A+16000
  04180	7c f0		 jl	 SHORT $LL10@InitDSound

; 490  : 	}
; 491  : 	//??????????  ?îî??????î¶  ??????????
; 492  : 	int d1 = 0;		//SNDCONFIG????????
; 493  : 	while (1) {
; 494  : 		if (sndconfig[d1].no == -1) {		//î·???

  04182	66 8b 85 b4 64
	ff ff		 mov	 ax, WORD PTR _sndconfig$[ebp]
  04189	c7 85 64 64 ff
	ff 00 00 00 00	 mov	 DWORD PTR _d1$1$[ebp], 0
  04193	66 83 f8 ff	 cmp	 ax, -1
  04197	0f 84 26 02 00
	00		 je	 $InitDSound_ok$136
  0419d	8d 8d b6 64 ff
	ff		 lea	 ecx, DWORD PTR _sndconfig$[ebp+2]
  041a3	8d b5 34 ff ff
	ff		 lea	 esi, DWORD PTR _fname$[ebp]
  041a9	2b f1		 sub	 esi, ecx
  041ab	8d 9d b4 64 ff
	ff		 lea	 ebx, DWORD PTR _sndconfig$[ebp]
  041b1	0f b7 c8	 movzx	 ecx, ax
  041b4	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__mmioOpenA@12
  041b9	89 85 54 64 ff
	ff		 mov	 DWORD PTR tv4164[ebp], eax
  041bf	a1 00 00 00 00	 mov	 eax, DWORD PTR __imp__mmioClose@8
  041c4	89 9d 5c 64 ff
	ff		 mov	 DWORD PTR tv4174[ebp], ebx
  041ca	89 b5 60 64 ff
	ff		 mov	 DWORD PTR tv4169[ebp], esi
  041d0	89 85 58 64 ff
	ff		 mov	 DWORD PTR tv4184[ebp], eax
  041d6	66 66 0f 1f 84
	00 00 00 00 00	 npad	 10
$LL11@InitDSound:

; 495  : 			goto InitDSound_ok;
; 496  : 		}
; 497  : 		program_no = sndconfig[d1].no;		//?îî±????
; 498  : 		if (program_no > TONE_MAX) {		//?????î¯??

  041e0	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  041e6	0f bf f9	 movsx	 edi, cx
  041e9	81 ff f4 01 00
	00		 cmp	 edi, 500		; 000001f4H
  041ef	0f 8f 8b 02 00
	00		 jg	 $InitDSound_err2$137

; 499  : 			goto InitDSound_err2;	//???
; 500  : 		}
; 501  : 		tone_tbl[program_no].voice_place = tone_max_buf;		//?î???îîî¼

  041f5	c1 e7 05	 shl	 edi, 5

; 502  : 		//î¡î·?îî¾
; 503  : 		strcpy(fname, sndconfig[d1].name);

  041f8	8d 43 02	 lea	 eax, DWORD PTR [ebx+2]
  041fb	89 97 00 00 00
	00		 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi], edx
$LL70@InitDSound:
  04201	8a 08		 mov	 cl, BYTE PTR [eax]
  04203	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  04206	88 4c 30 ff	 mov	 BYTE PTR [eax+esi-1], cl
  0420a	84 c9		 test	 cl, cl
  0420c	75 f3		 jne	 SHORT $LL70@InitDSound

; 504  : 
; 505  : 		if (sndconfig[d1].vol < 0) {		//????????????

  0420e	8a 83 ca 00 00
	00		 mov	 al, BYTE PTR [ebx+202]
  04214	84 c0		 test	 al, al
  04216	0f 88 64 02 00
	00		 js	 $InitDSound_err2$137

; 506  : 			goto InitDSound_err2;
; 507  : 		}
; 508  : 		tone_tbl[program_no].voice_volume = sndconfig[d1].vol;		//?î?????îî¼
; 509  : 
; 510  : 		if (sndconfig[d1].note > 60) {		//???î±??????

  0421c	8a 8b cb 00 00
	00		 mov	 cl, BYTE PTR [ebx+203]
  04222	0f be c0	 movsx	 eax, al
  04225	89 87 0c 00 00
	00		 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+12], eax
  0422b	80 f9 3c	 cmp	 cl, 60			; 0000003cH
  0422e	0f 8f 4c 02 00
	00		 jg	 $InitDSound_err2$137

; 511  : 			goto InitDSound_err2;
; 512  : 		}
; 513  : 		if (sndconfig[d1].note) {		//???î±?îî¼
; 514  : 			tone_tbl[program_no].voice_note = sndconfig[d1].note;
; 515  : 		}
; 516  : 		else {
; 517  : 			tone_tbl[program_no].voice_note = 0;
; 518  : 		}
; 519  : 		//?????????
; 520  : 		tone_tbl[program_no].voice_loop = sndconfig[d1].loop_flg;

  04234	33 d2		 xor	 edx, edx
  04236	0f be c1	 movsx	 eax, cl
  04239	84 c9		 test	 cl, cl

; 521  : 
; 522  : 		//?????????î?î?
; 523  : 		int d2;
; 524  : 		FILE* fp;
; 525  : 		fp = fopen(fname, "rb");

  0423b	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  04240	0f 44 c2	 cmove	 eax, edx
  04243	89 87 10 00 00
	00		 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+16], eax
  04249	0f be 83 cc 00
	00 00		 movsx	 eax, BYTE PTR [ebx+204]
  04250	89 87 08 00 00
	00		 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+8], eax
  04256	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _fname$[ebp]
  0425c	50		 push	 eax
  0425d	e8 00 00 00 00	 call	 _fopen
  04262	8b d8		 mov	 ebx, eax
  04264	83 c4 08	 add	 esp, 8

; 526  : 		if (fp == NULL) {

  04267	85 db		 test	 ebx, ebx
  04269	0f 84 1d 01 00
	00		 je	 $LN130@InitDSound

; 527  : 			d1++;		//SNDCONFIG??????î¡
; 528  : 			continue;
; 529  : 		}
; 530  : 		d2 = 8;						//??????????????
; 531  : 		d2 += 4;					//??????????????
; 532  : 		d2 += 4;					//????  ?????????
; 533  : 		d2 += 8;					//????????
; 534  : 		fseek(fp, d2, SEEK_CUR);		//??????????î®

  0426f	6a 01		 push	 1
  04271	6a 18		 push	 24			; 00000018H
  04273	53		 push	 ebx
  04274	e8 00 00 00 00	 call	 _fseek

; 535  : 		d2 = fgetc(fp);				//?????????î?î?

  04279	53		 push	 ebx
  0427a	e8 00 00 00 00	 call	 _fgetc

; 536  : 		d2 |= fgetc(fp) << 8;		//?????????î?î?

  0427f	53		 push	 ebx
  04280	8b f0		 mov	 esi, eax
  04282	e8 00 00 00 00	 call	 _fgetc
  04287	c1 e0 08	 shl	 eax, 8

; 537  : 		d2 |= fgetc(fp) << 16;		//?????????î?î?

  0428a	53		 push	 ebx
  0428b	0b f0		 or	 esi, eax
  0428d	e8 00 00 00 00	 call	 _fgetc
  04292	c1 e0 10	 shl	 eax, 16			; 00000010H

; 538  : 		d2 |= fgetc(fp) << 24;		//?????????î?î?

  04295	53		 push	 ebx
  04296	0b f0		 or	 esi, eax
  04298	e8 00 00 00 00	 call	 _fgetc
  0429d	c1 e0 18	 shl	 eax, 24			; 00000018H
  042a0	83 c4 1c	 add	 esp, 28			; 0000001cH
  042a3	0b c6		 or	 eax, esi

; 539  : 		switch (d2) {

  042a5	3d 11 2b 00 00	 cmp	 eax, 11025		; 00002b11H
  042aa	74 26		 je	 SHORT $LN46@InitDSound
  042ac	3d 22 56 00 00	 cmp	 eax, 22050		; 00005622H
  042b1	74 13		 je	 SHORT $LN47@InitDSound
  042b3	3d 44 ac 00 00	 cmp	 eax, 44100		; 0000ac44H
  042b8	75 22		 jne	 SHORT $LN13@InitDSound

; 546  : 		case 44100:
; 547  : 			tone_tbl[program_no].voice_rate = 49;

  042ba	c7 87 18 00 00
	00 31 00 00 00	 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+24], 49 ; 00000031H
  042c4	eb 16		 jmp	 SHORT $LN13@InitDSound
$LN47@InitDSound:

; 542  : 			break;
; 543  : 		case 22050:
; 544  : 			tone_tbl[program_no].voice_rate = 37;

  042c6	c7 87 18 00 00
	00 25 00 00 00	 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+24], 37 ; 00000025H

; 545  : 			break;

  042d0	eb 0a		 jmp	 SHORT $LN13@InitDSound
$LN46@InitDSound:

; 540  : 		case 11025:
; 541  : 			tone_tbl[program_no].voice_rate = 25;

  042d2	c7 87 18 00 00
	00 19 00 00 00	 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+24], 25 ; 00000019H
$LN13@InitDSound:

; 548  : 			break;
; 549  : 		}
; 550  : 		fclose(fp);

  042dc	53		 push	 ebx
  042dd	e8 00 00 00 00	 call	 _fclose
  042e2	83 c4 04	 add	 esp, 4

; 551  : 
; 552  : 		//????????????
; 553  : 		if ((hmmio = mmioOpen(fname, NULL, MMIO_READ | MMIO_ALLOCBUF)) == NULL) {

  042e5	8d 85 34 ff ff
	ff		 lea	 eax, DWORD PTR _fname$[ebp]
  042eb	68 00 00 01 00	 push	 65536			; 00010000H
  042f0	6a 00		 push	 0
  042f2	50		 push	 eax
  042f3	ff 95 54 64 ff
	ff		 call	 DWORD PTR tv4164[ebp]
  042f9	8b f0		 mov	 esi, eax
  042fb	85 f6		 test	 esi, esi
  042fd	0f 84 3a 01 00
	00		 je	 $InitDSound_err$138

; 554  : #ifdef  _STONDEBUG_
; 555  : 			MessageBox(hWnd, "æå¼WAVæ¡£å¤±è´¥ï¼", "Error", MB_OK);
; 556  : #endif
; 557  : 			goto InitDSound_err;
; 558  : 		}
; 559  : 		//???????????
; 560  : 		if (WaveFormatRead(hmmio, &Wfmtx, &WaveSize) == FALSE) {

  04303	8d 85 50 64 ff
	ff		 lea	 eax, DWORD PTR _WaveSize$[ebp]
  04309	50		 push	 eax
  0430a	8d 85 8c 64 ff
	ff		 lea	 eax, DWORD PTR _Wfmtx$[ebp]
  04310	50		 push	 eax
  04311	56		 push	 esi
  04312	e8 00 00 00 00	 call	 ?WaveFormatRead@@YAHPAUHMMIO__@@PAUtWAVEFORMATEX@@PAK@Z ; WaveFormatRead
  04317	83 c4 0c	 add	 esp, 12			; 0000000cH
  0431a	85 c0		 test	 eax, eax
  0431c	0f 84 1b 01 00
	00		 je	 $InitDSound_err$138

; 561  : #ifdef  _STONDEBUG_
; 562  : 			MessageBox(hWnd, "è¯»åWAVæ ¼å¼å¤±è´¥ï¼", "Error", MB_OK);
; 563  : #endif
; 564  : 			goto InitDSound_err;
; 565  : 		}
; 566  : 		DataSize = WaveSize;
; 567  : 		//??????????????
; 568  : 		if (dwSoundInit(&Wfmtx, DataSize, &pDSData_tone[tone_max_buf]) == FALSE) {

  04322	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  04327	8b 8d 50 64 ff
	ff		 mov	 ecx, DWORD PTR _WaveSize$[ebp]
  0432d	89 8d 4c 64 ff
	ff		 mov	 DWORD PTR _DataSize$[ebp], ecx
  04333	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  0433a	50		 push	 eax
  0433b	51		 push	 ecx
  0433c	8d 85 8c 64 ff
	ff		 lea	 eax, DWORD PTR _Wfmtx$[ebp]
  04342	50		 push	 eax
  04343	e8 00 00 00 00	 call	 ?dwSoundInit@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@@Z ; dwSoundInit
  04348	83 c4 0c	 add	 esp, 12			; 0000000cH
  0434b	85 c0		 test	 eax, eax
  0434d	0f 84 ea 00 00
	00		 je	 $InitDSound_err$138

; 569  : #ifdef  _STONDEBUG_
; 570  : 			MessageBox(hWnd, "åå§åå£°é³bufferå¤±è´¥ï¼", "Error", MB_OK);
; 571  : #endif
; 572  : 			goto InitDSound_err;
; 573  : 		}
; 574  : 		//???????
; 575  : 		if (WaveDataRead(hmmio, &DataSize, pDSData_tone[tone_max_buf]) == FALSE) {

  04353	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  04358	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  0435f	8d 85 4c 64 ff
	ff		 lea	 eax, DWORD PTR _DataSize$[ebp]
  04365	50		 push	 eax
  04366	56		 push	 esi
  04367	e8 00 00 00 00	 call	 ?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z ; WaveDataRead
  0436c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0436f	85 c0		 test	 eax, eax
  04371	0f 84 c6 00 00
	00		 je	 $InitDSound_err$138

; 576  : #ifdef  _STONDEBUG_
; 577  : 			MessageBox(hWnd, "è¯»åWAVæ¡£çèµæå¤±è´¥ï¼", "Error", MB_OK);
; 578  : #endif
; 579  : 			goto InitDSound_err;
; 580  : 		}
; 581  : 		mmioClose(hmmio, 0);

  04377	6a 00		 push	 0
  04379	56		 push	 esi
  0437a	ff 95 58 64 ff
	ff		 call	 DWORD PTR tv4184[ebp]

; 582  : 		hmmio = (HMMIO)-1;		//?????????
; 583  : 		d1++;		//SNDCONFIG??????î¡
; 584  : 		tone_max_buf++;		//?î???î?î¡

  04380	ff 05 00 00 00
	00		 inc	 DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  04386	8b b5 60 64 ff
	ff		 mov	 esi, DWORD PTR tv4169[ebp]
$LN130@InitDSound:

; 490  : 	}
; 491  : 	//??????????  ?îî??????î¶  ??????????
; 492  : 	int d1 = 0;		//SNDCONFIG????????
; 493  : 	while (1) {
; 494  : 		if (sndconfig[d1].no == -1) {		//î·???

  0438c	8b 9d 5c 64 ff
	ff		 mov	 ebx, DWORD PTR tv4174[ebp]
  04392	81 ee ce 00 00
	00		 sub	 esi, 206		; 000000ceH
  04398	ff 85 64 64 ff
	ff		 inc	 DWORD PTR _d1$1$[ebp]
  0439e	89 b5 60 64 ff
	ff		 mov	 DWORD PTR tv4169[ebp], esi
  043a4	0f b7 83 ce 00
	00 00		 movzx	 eax, WORD PTR [ebx+206]
  043ab	81 c3 ce 00 00
	00		 add	 ebx, 206		; 000000ceH
  043b1	89 9d 5c 64 ff
	ff		 mov	 DWORD PTR tv4174[ebp], ebx
  043b7	8b c8		 mov	 ecx, eax
  043b9	66 83 f8 ff	 cmp	 ax, -1
  043bd	0f 85 1d fe ff
	ff		 jne	 $LL11@InitDSound
$InitDSound_ok$136:

; 604  : 	RELEASE(pDSPrimary);
; 605  : 	RELEASE(pDSound);
; 606  : 	return FALSE;
; 607  : 
; 608  : InitDSound_ok:		//îî¹î·?
; 609  : 	// ????î¤?îî±???îî¤??
; 610  : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  043c3	be 00 00 00 00	 mov	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
  043c8	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL23@InitDSound:

; 611  : 		if (pDSound->DuplicateSoundBuffer(pDSData_tone[0], &pDSData[d7]) != DS_OK) {

  043d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  043d5	56		 push	 esi
  043d6	ff 35 00 00 00
	00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A
  043dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  043de	50		 push	 eax
  043df	ff 51 14	 call	 DWORD PTR [ecx+20]
  043e2	85 c0		 test	 eax, eax
  043e4	0f 85 cf 00 00
	00		 jne	 $LN91@InitDSound

; 604  : 	RELEASE(pDSPrimary);
; 605  : 	RELEASE(pDSound);
; 606  : 	return FALSE;
; 607  : 
; 608  : InitDSound_ok:		//îî¹î·?
; 609  : 	// ????î¤?îî±???îî¤??
; 610  : 	for (d7 = 0; d7 < VOICE_MAX; d7++) {

  043ea	83 c6 04	 add	 esi, 4
  043ed	81 fe 00 01 00
	00		 cmp	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A+256
  043f3	7c db		 jl	 SHORT $LL23@InitDSound

; 616  : 			RELEASE(pDSPrimary);
; 617  : 			RELEASE(pDSound);
; 618  : #ifdef  _STONDEBUG_
; 619  : 			MessageBox(hWnd, "å¤å¶å£°é³bufferå¤±è´¥ï¼", "Error", MB_OK);
; 620  : #endif
; 621  : 			return FALSE;
; 622  : 		}
; 623  : 	}
; 624  : 	// ????????î±?îî¾??
; 625  : 	pDSPrimary->GetVolume(&primaryVolume);

  043f5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  043fa	68 00 00 00 00	 push	 OFFSET ?primaryVolume@@3JA ; primaryVolume
  043ff	50		 push	 eax
  04400	8b 08		 mov	 ecx, DWORD PTR [eax]
  04402	ff 51 18	 call	 DWORD PTR [ecx+24]

; 626  : 	// ?????
; 627  : 	pDSPrimary->GetPan(&primaryPan);

  04405	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  0440b	68 00 00 00 00	 push	 OFFSET ?primaryPan@@3JA	; primaryPan
  04410	51		 push	 ecx
  04411	8b 11		 mov	 edx, DWORD PTR [ecx]
  04413	ff 52 1c	 call	 DWORD PTR [edx+28]

; 628  : 	// î«î¦?
; 629  : 	pDSPrimary->GetFrequency((DWORD*)&primaryFrequency);

  04416	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  0441c	68 00 00 00 00	 push	 OFFSET ?primaryFrequency@@3JA ; primaryFrequency
  04421	51		 push	 ecx
  04422	8b 11		 mov	 edx, DWORD PTR [ecx]
  04424	ff 52 20	 call	 DWORD PTR [edx+32]
  04427	5f		 pop	 edi

; 630  : 	return TRUE;
; 631  : }

  04428	5e		 pop	 esi
  04429	b8 01 00 00 00	 mov	 eax, 1
  0442e	5b		 pop	 ebx
  0442f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  04432	33 cd		 xor	 ecx, ebp
  04434	e8 00 00 00 00	 call	 @__security_check_cookie@4
  04439	8b e5		 mov	 esp, ebp
  0443b	5d		 pop	 ebp
  0443c	c3		 ret	 0
$InitDSound_err$138:

; 585  : 	}
; 586  : 
; 587  : InitDSound_err:		//?????????????
; 588  : 	mmioClose(hmmio, 0);

  0443d	6a 00		 push	 0
  0443f	56		 push	 esi
  04440	ff 95 58 64 ff
	ff		 call	 DWORD PTR tv4184[ebp]

; 589  : 	for (d7 = 0; d7 < tone_max_buf; d7++)

  04446	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  0444b	33 f6		 xor	 esi, esi
  0444d	85 c0		 test	 eax, eax
  0444f	0f 8e b8 00 00
	00		 jle	 $LN16@InitDSound
$LL17@InitDSound:

; 590  : 		RELEASE(pDSData_tone[d7]);

  04455	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  0445c	85 c9		 test	 ecx, ecx
  0445e	74 16		 je	 SHORT $LN15@InitDSound
  04460	8b 01		 mov	 eax, DWORD PTR [ecx]
  04462	51		 push	 ecx
  04463	ff 50 08	 call	 DWORD PTR [eax+8]
  04466	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  0446b	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4], 0
$LN15@InitDSound:

; 589  : 	for (d7 = 0; d7 < tone_max_buf; d7++)

  04476	46		 inc	 esi
  04477	3b f0		 cmp	 esi, eax
  04479	7c da		 jl	 SHORT $LL17@InitDSound

; 591  : 	RELEASE(pDSPrimary);
; 592  : 	RELEASE(pDSound);

  0447b	e9 8d 00 00 00	 jmp	 $LN16@InitDSound
$InitDSound_err2$137:

; 594  : 
; 595  : InitDSound_err2:	//î????????
; 596  : 	if (hmmio != (HMMIO)-1) {		//????????????
; 597  : 		mmioClose(hmmio, 0);
; 598  : 	}
; 599  : #ifdef  _STONDEBUG_
; 600  : 	MessageBox(hWnd, "?îîî???????", "Error", MB_OK);
; 601  : #endif
; 602  : 	for (d7 = 0; d7 < tone_max_buf; d7++)

  04480	33 f6		 xor	 esi, esi
  04482	85 d2		 test	 edx, edx
  04484	0f 8e 83 00 00
	00		 jle	 $LN16@InitDSound
  0448a	66 0f 1f 44 00
	00		 npad	 6
$LL20@InitDSound:

; 603  : 		RELEASE(pDSData_tone[d7]);

  04490	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  04497	85 c9		 test	 ecx, ecx
  04499	74 17		 je	 SHORT $LN18@InitDSound
  0449b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0449d	51		 push	 ecx
  0449e	ff 50 08	 call	 DWORD PTR [eax+8]
  044a1	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  044a7	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4], 0
$LN18@InitDSound:

; 594  : 
; 595  : InitDSound_err2:	//î????????
; 596  : 	if (hmmio != (HMMIO)-1) {		//????????????
; 597  : 		mmioClose(hmmio, 0);
; 598  : 	}
; 599  : #ifdef  _STONDEBUG_
; 600  : 	MessageBox(hWnd, "?îîî???????", "Error", MB_OK);
; 601  : #endif
; 602  : 	for (d7 = 0; d7 < tone_max_buf; d7++)

  044b2	46		 inc	 esi
  044b3	3b f2		 cmp	 esi, edx
  044b5	7c d9		 jl	 SHORT $LL20@InitDSound

; 590  : 		RELEASE(pDSData_tone[d7]);

  044b7	eb 54		 jmp	 SHORT $LN16@InitDSound
$LN91@InitDSound:

; 612  : 			for (d7 = 0; d7 < tone_max_buf; d7++)

  044b9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  044be	33 f6		 xor	 esi, esi
  044c0	85 c0		 test	 eax, eax
  044c2	7e 26		 jle	 SHORT $LN25@InitDSound
$LL26@InitDSound:

; 613  : 				RELEASE(pDSData_tone[d7]);

  044c4	8b 0c b5 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  044cb	85 c9		 test	 ecx, ecx
  044cd	74 16		 je	 SHORT $LN24@InitDSound
  044cf	8b 01		 mov	 eax, DWORD PTR [ecx]
  044d1	51		 push	 ecx
  044d2	ff 50 08	 call	 DWORD PTR [eax+8]
  044d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?tone_max_buf@@3HA ; tone_max_buf
  044da	c7 04 b5 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4], 0
$LN24@InitDSound:

; 612  : 			for (d7 = 0; d7 < tone_max_buf; d7++)

  044e5	46		 inc	 esi
  044e6	3b f0		 cmp	 esi, eax
  044e8	7c da		 jl	 SHORT $LL26@InitDSound
$LN25@InitDSound:

; 614  : 			for (d7 = 0; d7 < VOICE_MAX; d7++)

  044ea	be 00 00 00 00	 mov	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A ; pDSData
  044ef	90		 npad	 1
$LL29@InitDSound:

; 615  : 				RELEASE(pDSData[d7]);

  044f0	8b 0e		 mov	 ecx, DWORD PTR [esi]
  044f2	85 c9		 test	 ecx, ecx
  044f4	74 0c		 je	 SHORT $LN27@InitDSound
  044f6	8b 01		 mov	 eax, DWORD PTR [ecx]
  044f8	51		 push	 ecx
  044f9	ff 50 08	 call	 DWORD PTR [eax+8]
  044fc	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$LN27@InitDSound:

; 614  : 			for (d7 = 0; d7 < VOICE_MAX; d7++)

  04502	83 c6 04	 add	 esi, 4
  04505	81 fe 00 01 00
	00		 cmp	 esi, OFFSET ?pDSData@@3PAPAUIDirectSoundBuffer@@A+256
  0450b	7c e3		 jl	 SHORT $LL29@InitDSound
$LN16@InitDSound:

; 593  : 	return FALSE;

  0450d	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A ; pDSPrimary
  04513	85 c9		 test	 ecx, ecx
  04515	74 10		 je	 SHORT $LN67@InitDSound
  04517	8b 01		 mov	 eax, DWORD PTR [ecx]
  04519	51		 push	 ecx
  0451a	ff 50 08	 call	 DWORD PTR [eax+8]
  0451d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSPrimary@@3PAUIDirectSoundBuffer@@A, 0 ; pDSPrimary
$LN67@InitDSound:
  04527	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0452d	85 c9		 test	 ecx, ecx
  0452f	74 10		 je	 SHORT $LN59@InitDSound
  04531	8b 01		 mov	 eax, DWORD PTR [ecx]
  04533	51		 push	 ecx
  04534	ff 50 08	 call	 DWORD PTR [eax+8]
  04537	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSound@@3PAUIDirectSound@@A, 0 ; pDSound
$LN59@InitDSound:

; 630  : 	return TRUE;
; 631  : }

  04541	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  04544	33 c0		 xor	 eax, eax
  04546	5f		 pop	 edi
  04547	5e		 pop	 esi
  04548	33 cd		 xor	 ecx, ebp
  0454a	5b		 pop	 ebx
  0454b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  04550	8b e5		 mov	 esp, ebp
  04552	5d		 pop	 ebp
  04553	c3		 ret	 0
?InitDSound@@YAHXZ ENDP					; InitDSound
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?num_check@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
?num_check@@YAHPAU_iobuf@@@Z PROC			; num_check, COMDAT

; 1017 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1018 : 	int d0;
; 1019 : 	d0 = f_get(fp);		//????î?î?

  00004	ff 75 08	 push	 DWORD PTR _fp$[ebp]
  00007	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get

; 1020 : 	fseek(fp, -1, SEEK_CUR);		//??????

  0000c	6a 01		 push	 1
  0000e	6a ff		 push	 -1
  00010	ff 75 08	 push	 DWORD PTR _fp$[ebp]
  00013	8b f0		 mov	 esi, eax
  00015	e8 00 00 00 00	 call	 _fseek

; 1021 : 	if (d0 >= '0' && d0 <= '9')		//???

  0001a	8d 46 d0	 lea	 eax, DWORD PTR [esi-48]
  0001d	83 c4 10	 add	 esp, 16			; 00000010H
  00020	b9 09 00 00 00	 mov	 ecx, 9
  00025	3b c8		 cmp	 ecx, eax
  00027	1b c0		 sbb	 eax, eax
  00029	40		 inc	 eax
  0002a	5e		 pop	 esi

; 1022 : 		return 1;		//??
; 1023 : 	else
; 1024 : 		return 0;		//???
; 1025 : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?num_check@@YAHPAU_iobuf@@@Z ENDP			; num_check
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?get_num@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
?get_num@@YAHPAU_iobuf@@@Z PROC				; get_num, COMDAT

; 933  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 934  : 	int d0, d1;
; 935  : 	while (1) {
; 936  : 		d0 = f_get(fp);		//????î±?î?î?

  00004	8b 75 08	 mov	 esi, DWORD PTR _fp$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  0000d	83 c4 04	 add	 esp, 4

; 937  : 		if (d0 == EOF)

  00010	83 f8 ff	 cmp	 eax, -1
  00013	74 60		 je	 SHORT $LN1@get_num
$LL2@get_num:

; 938  : 			return d0;
; 939  : 		if (d0 >= '0' && d0 <= '9')		//???

  00015	83 f8 30	 cmp	 eax, 48			; 00000030H
  00018	7c 05		 jl	 SHORT $LN7@get_num
  0001a	83 f8 39	 cmp	 eax, 57			; 00000039H
  0001d	7e 11		 jle	 SHORT $LN16@get_num
$LN7@get_num:

; 934  : 	int d0, d1;
; 935  : 	while (1) {
; 936  : 		d0 = f_get(fp);		//????î±?î?î?

  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 ?f_get@@YAHPAU_iobuf@@@Z ; f_get
  00025	83 c4 04	 add	 esp, 4

; 937  : 		if (d0 == EOF)

  00028	83 f8 ff	 cmp	 eax, -1
  0002b	75 e8		 jne	 SHORT $LL2@get_num
  0002d	5e		 pop	 esi

; 955  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN16@get_num:
  00030	57		 push	 edi

; 940  : 			break;						//??????
; 941  : 	}
; 942  : 	d1 = d0 - '0';		//?????
; 943  : 
; 944  : 	while (1) {
; 945  : 		d0 = fgetc(fp);		//????î±?î?î?

  00031	56		 push	 esi
  00032	8d 78 d0	 lea	 edi, DWORD PTR [eax-48]
  00035	e8 00 00 00 00	 call	 _fgetc
  0003a	8b d0		 mov	 edx, eax
  0003c	83 c4 04	 add	 esp, 4

; 946  : 		if (d0 == EOF)

  0003f	83 fa ff	 cmp	 edx, -1
  00042	74 21		 je	 SHORT $LN24@get_num
$LL4@get_num:

; 947  : 			break;
; 948  : 		if (d0 < '0' || d0> '9')		//???

  00044	8d 4a d0	 lea	 ecx, DWORD PTR [edx-48]
  00047	83 f9 09	 cmp	 ecx, 9
  0004a	77 19		 ja	 SHORT $LN24@get_num

; 949  : 			break;						//?????????
; 950  : 		d1 *= 10;		//???????

  0004c	8d 47 fa	 lea	 eax, DWORD PTR [edi-6]
  0004f	8d 04 87	 lea	 eax, DWORD PTR [edi+eax*4]
  00052	56		 push	 esi
  00053	8d 3c 42	 lea	 edi, DWORD PTR [edx+eax*2]
  00056	e8 00 00 00 00	 call	 _fgetc
  0005b	8b d0		 mov	 edx, eax
  0005d	83 c4 04	 add	 esp, 4
  00060	83 fa ff	 cmp	 edx, -1
  00063	75 df		 jne	 SHORT $LL4@get_num
$LN24@get_num:

; 951  : 		d1 += d0 - '0';	//
; 952  : 	}
; 953  : 	fseek(fp, -1, SEEK_CUR);		//??????

  00065	6a 01		 push	 1
  00067	6a ff		 push	 -1
  00069	56		 push	 esi
  0006a	e8 00 00 00 00	 call	 _fseek
  0006f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 954  : 	return d1;

  00072	8b c7		 mov	 eax, edi
  00074	5f		 pop	 edi
$LN1@get_num:
  00075	5e		 pop	 esi

; 955  : }

  00076	5d		 pop	 ebp
  00077	c3		 ret	 0
?get_num@@YAHPAU_iobuf@@@Z ENDP				; get_num
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?f_get@@YAHPAU_iobuf@@@Z
_TEXT	SEGMENT
_fp$ = 8						; size = 4
?f_get@@YAHPAU_iobuf@@@Z PROC				; f_get, COMDAT

; 913  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 914  : 	int d0;
; 915  : 	while (1) {
; 916  : 		d0 = fgetc(fp);		//????î±?î?î?

  00004	8b 75 08	 mov	 esi, DWORD PTR _fp$[ebp]
  00007	56		 push	 esi
  00008	e8 00 00 00 00	 call	 _fgetc
  0000d	83 c4 04	 add	 esp, 4

; 917  : 		if (d0 == EOF)

  00010	83 f8 ff	 cmp	 eax, -1
  00013	74 29		 je	 SHORT $LN1@f_get
$LL2@f_get:

; 918  : 			return d0;
; 919  : 		if (d0 == '\t')		//???

  00015	83 f8 09	 cmp	 eax, 9
  00018	74 05		 je	 SHORT $LN6@f_get

; 920  : 			continue;
; 921  : 		if (d0 != 0x20)		//?????

  0001a	83 f8 20	 cmp	 eax, 32			; 00000020H
  0001d	75 11		 jne	 SHORT $LN13@f_get
$LN6@f_get:

; 914  : 	int d0;
; 915  : 	while (1) {
; 916  : 		d0 = fgetc(fp);		//????î±?î?î?

  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 _fgetc
  00025	83 c4 04	 add	 esp, 4

; 917  : 		if (d0 == EOF)

  00028	83 f8 ff	 cmp	 eax, -1
  0002b	75 e8		 jne	 SHORT $LL2@f_get
  0002d	5e		 pop	 esi

; 927  : }

  0002e	5d		 pop	 ebp
  0002f	c3		 ret	 0
$LN13@f_get:

; 922  : 			break;
; 923  : 	}
; 924  : 	if (d0 >= 'A' && d0 <= 'Z')		//î«î°??î¸î°?î?

  00030	8d 48 bf	 lea	 ecx, DWORD PTR [eax-65]

; 925  : 		d0 += 0x20;					//
; 926  : 	return d0;

  00033	8d 50 20	 lea	 edx, DWORD PTR [eax+32]
  00036	83 f9 19	 cmp	 ecx, 25			; 00000019H
  00039	0f 47 d0	 cmova	 edx, eax
  0003c	8b c2		 mov	 eax, edx
$LN1@f_get:
  0003e	5e		 pop	 esi

; 927  : }

  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
?f_get@@YAHPAU_iobuf@@@Z ENDP				; f_get
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?dwSoundInit@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_dsbufferdesc$ = -40					; size = 36
__$ArrayPad$ = -4					; size = 4
_pWfmtx$ = 8						; size = 4
_DataSize$ = 12						; size = 4
_ppData$ = 16						; size = 4
?dwSoundInit@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@@Z PROC ; dwSoundInit, COMDAT

; 358  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 359  : 	DSBUFFERDESC  dsbufferdesc;
; 360  : 
; 361  : 	//??????????????
; 362  : 	memset(&dsbufferdesc, 0, sizeof(DSBUFFERDESC));
; 363  : 	dsbufferdesc.dwSize = sizeof(DSBUFFERDESC);
; 364  : 	//	dsbufferdesc.dwFlags = DSBCAPS_CTRLPOSITIONNOTIFY | DSBCAPS_CTRLDEFAULT | DSBCAPS_GETCURRENTPOSITION2; 
; 365  : #if ACTIVE
; 366  : 	dsbufferdesc.dwFlags = DSBCAPS_STATIC | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2 | DSBCAPS_GLOBALFOCUS;
; 367  : #else
; 368  : 	dsbufferdesc.dwFlags = DSBCAPS_STATIC | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2;
; 369  : #endif
; 370  : 	dsbufferdesc.dwBufferBytes = DataSize;

  00010	8b 45 0c	 mov	 eax, DWORD PTR _DataSize$[ebp]
  00013	0f 57 c0	 xorps	 xmm0, xmm0
  00016	8b 55 10	 mov	 edx, DWORD PTR _ppData$[ebp]
  00019	8b 4d 08	 mov	 ecx, DWORD PTR _pWfmtx$[ebp]
  0001c	89 45 e0	 mov	 DWORD PTR _dsbufferdesc$[ebp+8], eax

; 371  : 	dsbufferdesc.lpwfxFormat = pWfmtx;
; 372  : 	if (pDSound->CreateSoundBuffer(&dsbufferdesc, ppData, NULL) != DS_OK)

  0001f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  00024	6a 00		 push	 0
  00026	52		 push	 edx
  00027	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dsbufferdesc$[ebp+12], 0
  0002e	8d 55 d8	 lea	 edx, DWORD PTR _dsbufferdesc$[ebp]
  00031	66 0f 13 45 ec	 movlpd	 QWORD PTR _dsbufferdesc$[ebp+20], xmm0
  00036	66 0f 13 45 f4	 movlpd	 QWORD PTR _dsbufferdesc$[ebp+28], xmm0
  0003b	c7 45 d8 24 00
	00 00		 mov	 DWORD PTR _dsbufferdesc$[ebp], 36 ; 00000024H
  00042	c7 45 dc e2 80
	01 00		 mov	 DWORD PTR _dsbufferdesc$[ebp+4], 98530 ; 000180e2H
  00049	89 4d e8	 mov	 DWORD PTR _dsbufferdesc$[ebp+16], ecx
  0004c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	ff 51 0c	 call	 DWORD PTR [ecx+12]

; 373  : 		return FALSE;
; 374  : 
; 375  : 	return TRUE;
; 376  : }

  00053	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00056	f7 d8		 neg	 eax
  00058	1b c0		 sbb	 eax, eax
  0005a	33 cd		 xor	 ecx, ebp
  0005c	40		 inc	 eax
  0005d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?dwSoundInit@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@@Z ENDP ; dwSoundInit
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_hmmio$ = 8						; size = 4
_pDataSize$ = 12					; size = 4
_pData$ = 16						; size = 4
?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z PROC ; WaveDataRead, COMDAT

; 331  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 332  : 	//	BYTE	*pDSbuffData;
; 333  : 
; 334  : 		//??????????
; 335  : 	if (pData->Lock(0, *pDataSize, (LPVOID*)&pDSbuffData, pDataSize, NULL, 0, 0) != DS_OK)

  00004	8b 75 10	 mov	 esi, DWORD PTR _pData$[ebp]
  00007	57		 push	 edi
  00008	8b 7d 0c	 mov	 edi, DWORD PTR _pDataSize$[ebp]
  0000b	6a 00		 push	 0
  0000d	8b 06		 mov	 eax, DWORD PTR [esi]
  0000f	6a 00		 push	 0
  00011	6a 00		 push	 0
  00013	57		 push	 edi
  00014	68 00 00 00 00	 push	 OFFSET ?pDSbuffData@@3PAEA
  00019	ff 37		 push	 DWORD PTR [edi]
  0001b	6a 00		 push	 0
  0001d	56		 push	 esi
  0001e	ff 50 2c	 call	 DWORD PTR [eax+44]
  00021	85 c0		 test	 eax, eax
  00023	75 31		 jne	 SHORT $LN5@WaveDataRe

; 336  : 		return FALSE;
; 337  : 
; 338  : 	//???????????
; 339  : 	*pDataSize = (DWORD)mmioRead(hmmio, (char*)pDSbuffData, *pDataSize);

  00025	ff 37		 push	 DWORD PTR [edi]
  00027	ff 35 00 00 00
	00		 push	 DWORD PTR ?pDSbuffData@@3PAEA
  0002d	ff 75 08	 push	 DWORD PTR _hmmio$[ebp]
  00030	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mmioRead@12

; 340  : 
; 341  : 	//?????
; 342  : 	if (pData->Unlock(pDSbuffData, *pDataSize, NULL, 0) != DS_OK)

  00036	6a 00		 push	 0
  00038	6a 00		 push	 0
  0003a	50		 push	 eax
  0003b	89 07		 mov	 DWORD PTR [edi], eax
  0003d	ff 35 00 00 00
	00		 push	 DWORD PTR ?pDSbuffData@@3PAEA
  00043	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00045	56		 push	 esi
  00046	ff 51 4c	 call	 DWORD PTR [ecx+76]
  00049	85 c0		 test	 eax, eax
  0004b	75 09		 jne	 SHORT $LN5@WaveDataRe

; 344  : 
; 345  : 	return TRUE;

  0004d	5f		 pop	 edi
  0004e	b8 01 00 00 00	 mov	 eax, 1

; 346  : }

  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
$LN5@WaveDataRe:
  00056	5f		 pop	 edi

; 343  : 		return FALSE;

  00057	33 c0		 xor	 eax, eax

; 346  : }

  00059	5e		 pop	 esi
  0005a	5d		 pop	 ebp
  0005b	c3		 ret	 0
?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z ENDP ; WaveDataRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?WaveFormatRead@@YAHPAUHMMIO__@@PAUtWAVEFORMATEX@@PAK@Z
_TEXT	SEGMENT
_pDataSize$GSCopy$1$ = -48				; size = 4
_child$ = -44						; size = 20
_parent$ = -24						; size = 20
__$ArrayPad$ = -4					; size = 4
_hmmio$ = 8						; size = 4
_pWfmtx$ = 12						; size = 4
_pDataSize$ = 16					; size = 4
?WaveFormatRead@@YAHPAUHMMIO__@@PAUtWAVEFORMATEX@@PAK@Z PROC ; WaveFormatRead, COMDAT

; 267  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 30	 sub	 esp, 48			; 00000030H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 10	 mov	 eax, DWORD PTR _pDataSize$[ebp]
  00013	53		 push	 ebx

; 268  : 	MMCKINFO parent, child;
; 269  : 
; 270  : 	parent.ckid = (FOURCC)0;
; 271  : 	parent.cksize = 0;
; 272  : 	parent.fccType = (FOURCC)0;
; 273  : 	parent.dwDataOffset = 0;
; 274  : 	parent.dwFlags = 0;
; 275  : 	child = parent;
; 276  : 
; 277  : 	//WAVE?????î?
; 278  : 	parent.fccType = mmioFOURCC('W', 'A', 'V', 'E');
; 279  : 	if ((int)mmioDescend(hmmio, &parent, NULL, MMIO_FINDRIFF)) {

  00014	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__mmioDescend@16
  0001a	56		 push	 esi
  0001b	8b 75 08	 mov	 esi, DWORD PTR _hmmio$[ebp]
  0001e	57		 push	 edi
  0001f	8b 7d 0c	 mov	 edi, DWORD PTR _pWfmtx$[ebp]
  00022	89 45 d0	 mov	 DWORD PTR _pDataSize$GSCopy$1$[ebp], eax
  00025	33 c0		 xor	 eax, eax
  00027	6a 20		 push	 32			; 00000020H
  00029	50		 push	 eax
  0002a	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp+8], 0
  00031	89 45 f8	 mov	 DWORD PTR _parent$[ebp+16], eax
  00034	89 45 e4	 mov	 DWORD PTR _child$[ebp+16], eax
  00037	8d 45 e8	 lea	 eax, DWORD PTR _parent$[ebp]
  0003a	c7 45 e8 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp], 0
  00041	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp+4], 0
  00048	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _parent$[ebp+12], 0
  0004f	0f 10 45 e8	 movups	 xmm0, XMMWORD PTR _parent$[ebp]
  00053	50		 push	 eax
  00054	56		 push	 esi
  00055	0f 11 45 d4	 movups	 XMMWORD PTR _child$[ebp], xmm0
  00059	c7 45 f0 57 41
	56 45		 mov	 DWORD PTR _parent$[ebp+8], 1163280727 ; 45564157H
  00060	ff d3		 call	 ebx
  00062	85 c0		 test	 eax, eax
  00064	75 74		 jne	 SHORT $LN9@WaveFormat

; 280  : 		//		ERRPRINT("WAVE?????î?");
; 281  : 		return FALSE;
; 282  : 	}
; 283  : 
; 284  : 	//fmt?????î¼?
; 285  : 	child.ckid = mmioFOURCC('f', 'm', 't', ' ');
; 286  : 	if (mmioDescend(hmmio, &child, &parent, MMIO_FINDCHUNK)) {

  00066	6a 10		 push	 16			; 00000010H
  00068	8d 45 e8	 lea	 eax, DWORD PTR _parent$[ebp]
  0006b	c7 45 d4 66 6d
	74 20		 mov	 DWORD PTR _child$[ebp], 544501094 ; 20746d66H
  00072	50		 push	 eax
  00073	8d 45 d4	 lea	 eax, DWORD PTR _child$[ebp]
  00076	50		 push	 eax
  00077	56		 push	 esi
  00078	ff d3		 call	 ebx
  0007a	85 c0		 test	 eax, eax
  0007c	75 5c		 jne	 SHORT $LN9@WaveFormat

; 287  : 		//		ERRPRINT("fmt?????î¼?");
; 288  : 		return FALSE;
; 289  : 	}
; 290  : 
; 291  : 	//??????????îî¾
; 292  : 	if (mmioRead(hmmio, (char*)pWfmtx, sizeof(WAVEFORMATEX)) != sizeof(WAVEFORMATEX)) {

  0007e	6a 12		 push	 18			; 00000012H
  00080	57		 push	 edi
  00081	56		 push	 esi
  00082	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mmioRead@12
  00088	83 f8 12	 cmp	 eax, 18			; 00000012H
  0008b	75 4d		 jne	 SHORT $LN9@WaveFormat

; 293  : 		//		ERRPRINT("??????????îî¾");
; 294  : 		return FALSE;
; 295  : 	}
; 296  : 
; 297  : 	//??????????????????
; 298  : 	if (pWfmtx->wFormatTag != WAVE_FORMAT_PCM) {

  0008d	66 83 3f 01	 cmp	 WORD PTR [edi], 1
  00091	75 47		 jne	 SHORT $LN9@WaveFormat

; 299  : 		//		ERRPRINT("????????????????");
; 300  : 		return FALSE;
; 301  : 	}
; 302  : 	//?????????î??
; 303  : 	if (mmioAscend(hmmio, &child, 0)) {

  00093	6a 00		 push	 0
  00095	8d 45 d4	 lea	 eax, DWORD PTR _child$[ebp]
  00098	50		 push	 eax
  00099	56		 push	 esi
  0009a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mmioAscend@12
  000a0	85 c0		 test	 eax, eax
  000a2	75 36		 jne	 SHORT $LN9@WaveFormat

; 304  : 		//		ERRPRINT("?????????î??");
; 305  : 		return FALSE;
; 306  : 	}
; 307  : 
; 308  : 	//data?????î¼?
; 309  : 	child.ckid = mmioFOURCC('d', 'a', 't', 'a');
; 310  : 	if (mmioDescend(hmmio, &child, &parent, MMIO_FINDCHUNK)) {

  000a4	6a 10		 push	 16			; 00000010H
  000a6	8d 45 e8	 lea	 eax, DWORD PTR _parent$[ebp]
  000a9	c7 45 d4 64 61
	74 61		 mov	 DWORD PTR _child$[ebp], 1635017060 ; 61746164H
  000b0	50		 push	 eax
  000b1	8d 45 d4	 lea	 eax, DWORD PTR _child$[ebp]
  000b4	50		 push	 eax
  000b5	56		 push	 esi
  000b6	ff d3		 call	 ebx
  000b8	85 c0		 test	 eax, eax
  000ba	75 1e		 jne	 SHORT $LN9@WaveFormat

; 311  : 		//		ERRPRINT("data?????î¼?");
; 312  : 		return FALSE;
; 313  : 	}
; 314  : 
; 315  : 	*pDataSize = child.cksize;

  000bc	8b 4d d0	 mov	 ecx, DWORD PTR _pDataSize$GSCopy$1$[ebp]
  000bf	8b 45 d8	 mov	 eax, DWORD PTR _child$[ebp+4]
  000c2	5f		 pop	 edi

; 316  : 
; 317  : 	return TRUE;
; 318  : }

  000c3	5e		 pop	 esi
  000c4	89 01		 mov	 DWORD PTR [ecx], eax
  000c6	b8 01 00 00 00	 mov	 eax, 1
  000cb	5b		 pop	 ebx
  000cc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cf	33 cd		 xor	 ecx, ebp
  000d1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d6	8b e5		 mov	 esp, ebp
  000d8	5d		 pop	 ebp
  000d9	c3		 ret	 0
$LN9@WaveFormat:
  000da	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000dd	33 c0		 xor	 eax, eax
  000df	5f		 pop	 edi
  000e0	5e		 pop	 esi
  000e1	33 cd		 xor	 ecx, ebp
  000e3	5b		 pop	 ebx
  000e4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e9	8b e5		 mov	 esp, ebp
  000eb	5d		 pop	 ebp
  000ec	c3		 ret	 0
?WaveFormatRead@@YAHPAUHMMIO__@@PAUtWAVEFORMATEX@@PAK@Z ENDP ; WaveFormatRead
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?CreateSoundData@@YAHPBDAAPAUIDirectSoundBuffer@@@Z
_TEXT	SEGMENT
_pbWaveData$ = -68					; size = 4
_pWaveHeader$ = -64					; size = 4
_cbWaveSize$ = -60					; size = 4
_lpvPtr1$ = -56						; size = 4
_lpvPtr2$ = -52						; size = 4
_dwBytes2$ = -48					; size = 4
_dwBytes1$ = -44					; size = 4
_dsbdesc$ = -40						; size = 36
__$ArrayPad$ = -4					; size = 4
_pName$ = 8						; size = 4
_pDSData$ = 12						; size = 4
?CreateSoundData@@YAHPBDAAPAUIDirectSoundBuffer@@@Z PROC ; CreateSoundData, COMDAT

; 196  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 44	 sub	 esp, 68			; 00000044H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _pName$[ebp]

; 197  : 	// ??????Wave????î???
; 198  : 	WAVEFORMATEX* pWaveHeader = NULL;	// WAVEFORMATEX?î¨î??????
; 199  : 	BYTE* pbWaveData = NULL;	// ??????????????
; 200  : 	DWORD cbWaveSize = 0;	// ????????????
; 201  : 	if (!LoadWave(pName, pWaveHeader, pbWaveData, cbWaveSize))

  00013	8d 4d c4	 lea	 ecx, DWORD PTR _cbWaveSize$[ebp]
  00016	56		 push	 esi
  00017	8b 75 0c	 mov	 esi, DWORD PTR _pDSData$[ebp]
  0001a	57		 push	 edi
  0001b	51		 push	 ecx
  0001c	8d 4d bc	 lea	 ecx, DWORD PTR _pbWaveData$[ebp]
  0001f	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _pWaveHeader$[ebp], 0
  00026	51		 push	 ecx
  00027	8d 4d c0	 lea	 ecx, DWORD PTR _pWaveHeader$[ebp]
  0002a	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _pbWaveData$[ebp], 0
  00031	51		 push	 ecx
  00032	50		 push	 eax
  00033	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _cbWaveSize$[ebp], 0
  0003a	e8 00 00 00 00	 call	 ?LoadWave@@YAHPBDAAPAUtWAVEFORMATEX@@AAPAEAAK@Z ; LoadWave
  0003f	83 c4 10	 add	 esp, 16			; 00000010H
  00042	85 c0		 test	 eax, eax
  00044	0f 84 ea 00 00
	00		 je	 $LN8@CreateSoun

; 202  : 	{
; 203  : #ifdef  _STONDEBUG_
; 204  : 		MessageBox(hWnd, "è¯»åWaveçèµæå¤±è´¥ï¼", "Error", MB_OK);
; 205  : #endif
; 206  : 		return FALSE;
; 207  : 	}
; 208  : 
; 209  : 	// ????????????î??
; 210  : 	DSBUFFERDESC dsbdesc;
; 211  : 	HRESULT hr;
; 212  : 	// DSBUFFERDESC?î¨î?îî
; 213  : 	ZeroMemory(&dsbdesc, sizeof(DSBUFFERDESC));
; 214  : 	dsbdesc.dwSize = sizeof(DSBUFFERDESC);
; 215  : 	// ??????????????
; 216  : #if ACTIVE
; 217  : 	dsbdesc.dwFlags = DSBCAPS_STATIC | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2 | DSBCAPS_GLOBALFOCUS;
; 218  : #else
; 219  : 	dsbdesc.dwFlags = DSBCAPS_STATIC | /*DSBCAPS_CTRLDEFAULT*/DSBCAPS_CTRLPAN | DSBCAPS_CTRLVOLUME | DSBCAPS_CTRLFREQUENCY | DSBCAPS_GETCURRENTPOSITION2;
; 220  : #endif
; 221  : 	dsbdesc.dwBufferBytes = cbWaveSize;
; 222  : 	dsbdesc.lpwfxFormat = pWaveHeader;

  0004a	8b 45 c0	 mov	 eax, DWORD PTR _pWaveHeader$[ebp]

; 223  : 	// ???????
; 224  : 	hr = pDSound->CreateSoundBuffer(&dsbdesc, &pDSData, NULL);

  0004d	8d 55 d8	 lea	 edx, DWORD PTR _dsbdesc$[ebp]
  00050	8b 7d c4	 mov	 edi, DWORD PTR _cbWaveSize$[ebp]
  00053	0f 57 c0	 xorps	 xmm0, xmm0
  00056	89 45 e8	 mov	 DWORD PTR _dsbdesc$[ebp+16], eax
  00059	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0005e	6a 00		 push	 0
  00060	56		 push	 esi
  00061	c7 45 e4 00 00
	00 00		 mov	 DWORD PTR _dsbdesc$[ebp+12], 0
  00068	66 0f 13 45 ec	 movlpd	 QWORD PTR _dsbdesc$[ebp+20], xmm0
  0006d	66 0f 13 45 f4	 movlpd	 QWORD PTR _dsbdesc$[ebp+28], xmm0
  00072	c7 45 d8 24 00
	00 00		 mov	 DWORD PTR _dsbdesc$[ebp], 36 ; 00000024H
  00079	c7 45 dc e2 80
	01 00		 mov	 DWORD PTR _dsbdesc$[ebp+4], 98530 ; 000180e2H
  00080	89 7d e0	 mov	 DWORD PTR _dsbdesc$[ebp+8], edi
  00083	8b 08		 mov	 ecx, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	50		 push	 eax
  00087	ff 51 0c	 call	 DWORD PTR [ecx+12]

; 225  : 	if (DS_OK != hr) {

  0008a	85 c0		 test	 eax, eax
  0008c	0f 85 a2 00 00
	00		 jne	 $LN8@CreateSoun

; 226  : 		// ??????î?î§î²
; 227  : 		return FALSE;
; 228  : 	}
; 229  : 
; 230  : 	// ???????????Wave????????
; 231  : 	LPVOID lpvPtr1; 	// ????????????
; 232  : 	DWORD dwBytes1; 	// ???????????
; 233  : 	LPVOID lpvPtr2; 	// ?î±???????????
; 234  : 	DWORD dwBytes2; 	// ?î±??????????
; 235  : 
; 236  : 	hr = pDSData->Lock(0, cbWaveSize, &lpvPtr1, &dwBytes1, &lpvPtr2, &dwBytes2, 0);

  00092	8b 06		 mov	 eax, DWORD PTR [esi]
  00094	8d 55 d0	 lea	 edx, DWORD PTR _dwBytes2$[ebp]
  00097	6a 00		 push	 0
  00099	52		 push	 edx
  0009a	8d 55 cc	 lea	 edx, DWORD PTR _lpvPtr2$[ebp]
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	52		 push	 edx
  000a0	8d 55 d4	 lea	 edx, DWORD PTR _dwBytes1$[ebp]
  000a3	52		 push	 edx
  000a4	8d 55 c8	 lea	 edx, DWORD PTR _lpvPtr1$[ebp]
  000a7	52		 push	 edx
  000a8	57		 push	 edi
  000a9	6a 00		 push	 0
  000ab	50		 push	 eax
  000ac	ff 51 2c	 call	 DWORD PTR [ecx+44]

; 237  : 
; 238  : 	// DSERR_BUFFERLOST?î???î¶??Restore?????î¸???????????
; 239  : 	if (DSERR_BUFFERLOST == hr) {

  000af	3d 96 00 78 88	 cmp	 eax, -2005401450	; 88780096H
  000b4	75 25		 jne	 SHORT $LN4@CreateSoun

; 240  : 		pDSData->Restore();

  000b6	8b 06		 mov	 eax, DWORD PTR [esi]
  000b8	50		 push	 eax
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	ff 51 50	 call	 DWORD PTR [ecx+80]

; 241  : 		hr = pDSData->Lock(0, cbWaveSize, &lpvPtr1, &dwBytes1, &lpvPtr2, &dwBytes2, 0);

  000be	8b 06		 mov	 eax, DWORD PTR [esi]
  000c0	8d 55 d0	 lea	 edx, DWORD PTR _dwBytes2$[ebp]
  000c3	6a 00		 push	 0
  000c5	52		 push	 edx
  000c6	8d 55 cc	 lea	 edx, DWORD PTR _lpvPtr2$[ebp]
  000c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cb	52		 push	 edx
  000cc	8d 55 d4	 lea	 edx, DWORD PTR _dwBytes1$[ebp]
  000cf	52		 push	 edx
  000d0	8d 55 c8	 lea	 edx, DWORD PTR _lpvPtr1$[ebp]
  000d3	52		 push	 edx
  000d4	57		 push	 edi
  000d5	6a 00		 push	 0
  000d7	50		 push	 eax
  000d8	ff 51 2c	 call	 DWORD PTR [ecx+44]
$LN4@CreateSoun:

; 242  : 	}
; 243  : 	if (DS_OK == hr) {

  000db	85 c0		 test	 eax, eax
  000dd	75 40		 jne	 SHORT $LN5@CreateSoun

; 244  : 		// ???î?
; 245  : 
; 246  : 		// ?????????????
; 247  : 		// ??????????????
; 248  : 		CopyMemory(lpvPtr1, pbWaveData, dwBytes1);

  000df	ff 75 d4	 push	 DWORD PTR _dwBytes1$[ebp]
  000e2	8b 7d bc	 mov	 edi, DWORD PTR _pbWaveData$[ebp]
  000e5	57		 push	 edi
  000e6	ff 75 c8	 push	 DWORD PTR _lpvPtr1$[ebp]
  000e9	e8 00 00 00 00	 call	 _memcpy

; 249  : 		if (0 != dwBytes2)

  000ee	8b 55 d0	 mov	 edx, DWORD PTR _dwBytes2$[ebp]
  000f1	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f4	85 d2		 test	 edx, edx
  000f6	74 15		 je	 SHORT $LN6@CreateSoun

; 250  : 			CopyMemory(lpvPtr2, pbWaveData + dwBytes1, dwBytes2);

  000f8	8b 45 d4	 mov	 eax, DWORD PTR _dwBytes1$[ebp]
  000fb	52		 push	 edx
  000fc	03 c7		 add	 eax, edi
  000fe	50		 push	 eax
  000ff	ff 75 cc	 push	 DWORD PTR _lpvPtr2$[ebp]
  00102	e8 00 00 00 00	 call	 _memcpy
  00107	8b 55 d0	 mov	 edx, DWORD PTR _dwBytes2$[ebp]
  0010a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN6@CreateSoun:

; 251  : 
; 252  : 		// ?????î·???????Unlock???
; 253  : 		hr = pDSData->Unlock(lpvPtr1, dwBytes1, lpvPtr2, dwBytes2);

  0010d	8b 06		 mov	 eax, DWORD PTR [esi]
  0010f	52		 push	 edx
  00110	ff 75 cc	 push	 DWORD PTR _lpvPtr2$[ebp]
  00113	ff 75 d4	 push	 DWORD PTR _dwBytes1$[ebp]
  00116	8b 08		 mov	 ecx, DWORD PTR [eax]
  00118	ff 75 c8	 push	 DWORD PTR _lpvPtr1$[ebp]
  0011b	50		 push	 eax
  0011c	ff 51 4c	 call	 DWORD PTR [ecx+76]
$LN5@CreateSoun:

; 254  : 	}
; 255  : 
; 256  : 	return TRUE;

  0011f	5f		 pop	 edi
  00120	b8 01 00 00 00	 mov	 eax, 1

; 257  : }

  00125	5e		 pop	 esi
  00126	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00129	33 cd		 xor	 ecx, ebp
  0012b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00130	8b e5		 mov	 esp, ebp
  00132	5d		 pop	 ebp
  00133	c3		 ret	 0
$LN8@CreateSoun:
  00134	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00137	33 c0		 xor	 eax, eax
  00139	5f		 pop	 edi
  0013a	33 cd		 xor	 ecx, ebp
  0013c	5e		 pop	 esi
  0013d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00142	8b e5		 mov	 esp, ebp
  00144	5d		 pop	 ebp
  00145	c3		 ret	 0
?CreateSoundData@@YAHPBDAAPAUIDirectSoundBuffer@@@Z ENDP ; CreateSoundData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?LoadWave@@YAHPBDAAPAUtWAVEFORMATEX@@AAPAEAAK@Z
_TEXT	SEGMENT
_pdwEnd$1$ = -16					; size = 4
_dwLength$1$ = -16					; size = 4
_c_szWAV$ = -12						; size = 5
__$ArrayPad$ = -4					; size = 4
_lpName$ = 8						; size = 4
_pWaveHeader$ = 12					; size = 4
_pbWaveData$ = 16					; size = 4
_cbWaveSize$ = 20					; size = 4
?LoadWave@@YAHPBDAAPAUtWAVEFORMATEX@@AAPAEAAK@Z PROC	; LoadWave, COMDAT

; 127  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 4d 08	 mov	 ecx, DWORD PTR _lpName$[ebp]
  00013	53		 push	 ebx
  00014	8b 5d 14	 mov	 ebx, DWORD PTR _cbWaveSize$[ebp]
  00017	56		 push	 esi
  00018	8b 75 0c	 mov	 esi, DWORD PTR _pWaveHeader$[ebp]
  0001b	57		 push	 edi
  0001c	8b 7d 10	 mov	 edi, DWORD PTR _pbWaveData$[ebp]

; 128  : 	pWaveHeader = NULL;	// WAVEFORMATEX?î¨î??????

  0001f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 129  : 	pbWaveData = NULL;	// ??????????????

  00025	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 130  : 	cbWaveSize = 0;	// ????????????

  0002b	c7 03 00 00 00
	00		 mov	 DWORD PTR [ebx], 0

; 131  : 	const char c_szWAV[] = "WAVE";	// ????î ??Wave??????î??"WAVE"???

  00031	a1 00 00 00 00	 mov	 eax, DWORD PTR ??_C@_04HFHJMNCD@WAVE@
  00036	89 45 f4	 mov	 DWORD PTR _c_szWAV$[ebp], eax
  00039	a0 04 00 00 00	 mov	 al, BYTE PTR ??_C@_04HFHJMNCD@WAVE@+4
  0003e	88 45 f8	 mov	 BYTE PTR _c_szWAV$[ebp+4], al

; 132  : 
; 133  : 	// ???????????????î???
; 134  : 	HRSRC hResInfo = FindResource(NULL, lpName, c_szWAV);

  00041	8d 45 f4	 lea	 eax, DWORD PTR _c_szWAV$[ebp]
  00044	50		 push	 eax
  00045	51		 push	 ecx
  00046	6a 00		 push	 0
  00048	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12

; 135  : 	if (hResInfo == NULL)

  0004e	85 c0		 test	 eax, eax
  00050	0f 84 9e 00 00
	00		 je	 $LN29@LoadWave

; 136  : 		return FALSE;
; 137  : 	HGLOBAL hResData = LoadResource(NULL, hResInfo);

  00056	50		 push	 eax
  00057	6a 00		 push	 0
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8

; 138  : 	if (hResData == NULL)

  0005f	85 c0		 test	 eax, eax
  00061	0f 84 8d 00 00
	00		 je	 $LN29@LoadWave

; 139  : 		return FALSE;
; 140  : 	void* pvRes = LockResource(hResData);

  00067	50		 push	 eax
  00068	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LockResource@4
  0006e	8b c8		 mov	 ecx, eax

; 141  : 	if (pvRes == NULL)

  00070	85 c9		 test	 ecx, ecx
  00072	0f 84 7c 00 00
	00		 je	 $LN29@LoadWave

; 142  : 		return FALSE;
; 143  : 
; 144  : 	// î??????????????î¶??î§??????????????????îî¾??
; 145  : 	DWORD* pdw = (DWORD*)pvRes;
; 146  : 	DWORD* pdwEnd;
; 147  : 	DWORD dwRiff = *pdw++;
; 148  : 	DWORD dwLength = *pdw++;

  00078	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0007b	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0007e	89 55 f0	 mov	 DWORD PTR _dwLength$1$[ebp], edx

; 149  : 	DWORD dwType = *pdw++;

  00081	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00084	83 c0 08	 add	 eax, 8

; 150  : 
; 151  : 	if (dwRiff != mmioFOURCC('R', 'I', 'F', 'F'))

  00087	81 39 52 49 46
	46		 cmp	 DWORD PTR [ecx], 1179011410 ; 46464952H
  0008d	75 65		 jne	 SHORT $LN29@LoadWave

; 152  : 		return FALSE;      // ???????RIFF?????????
; 153  : 	if (dwType != mmioFOURCC('W', 'A', 'V', 'E'))

  0008f	81 fa 57 41 56
	45		 cmp	 edx, 1163280727		; 45564157H
  00095	75 5d		 jne	 SHORT $LN29@LoadWave

; 154  : 		return FALSE;      // ???????Wave?î????????
; 155  : 	pdwEnd = (DWORD*)((BYTE*)pdw + dwLength - 4);

  00097	8b 4d f0	 mov	 ecx, DWORD PTR _dwLength$1$[ebp]
  0009a	83 c1 fc	 add	 ecx, -4			; fffffffcH
  0009d	03 c8		 add	 ecx, eax
  0009f	89 4d f0	 mov	 DWORD PTR _pdwEnd$1$[ebp], ecx

; 156  : 
; 157  : 	while (pdw < pdwEnd)

  000a2	3b c1		 cmp	 eax, ecx
  000a4	73 4e		 jae	 SHORT $LN29@LoadWave
$LL2@LoadWave:

; 158  : 	{
; 159  : 		dwType = *pdw++;

  000a6	8b 10		 mov	 edx, DWORD PTR [eax]

; 160  : 		dwLength = *pdw++;

  000a8	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000ab	83 c0 08	 add	 eax, 8

; 161  : 
; 162  : 		switch (dwType)

  000ae	81 fa 66 6d 74
	20		 cmp	 edx, 544501094		; 20746d66H
  000b4	74 18		 je	 SHORT $LN11@LoadWave
  000b6	81 fa 64 61 74
	61		 cmp	 edx, 1635017060		; 61746164H
  000bc	75 1c		 jne	 SHORT $LN12@LoadWave

; 170  : 			}
; 171  : 			break;
; 172  : 		case mmioFOURCC('d', 'a', 't', 'a'):
; 173  : 			if ((pbWaveData == NULL) || (!cbWaveSize))

  000be	83 3f 00	 cmp	 DWORD PTR [edi], 0
  000c1	74 05		 je	 SHORT $LN16@LoadWave
  000c3	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  000c6	75 12		 jne	 SHORT $LN12@LoadWave
$LN16@LoadWave:

; 174  : 			{
; 175  : 				pbWaveData = (LPBYTE)pdw;

  000c8	89 07		 mov	 DWORD PTR [edi], eax

; 176  : 				cbWaveSize = dwLength;

  000ca	89 0b		 mov	 DWORD PTR [ebx], ecx
  000cc	eb 0c		 jmp	 SHORT $LN12@LoadWave
$LN11@LoadWave:

; 163  : 		{
; 164  : 		case mmioFOURCC('f', 'm', 't', ' '):
; 165  : 			if (pWaveHeader == NULL)

  000ce	83 3e 00	 cmp	 DWORD PTR [esi], 0
  000d1	75 0c		 jne	 SHORT $LN28@LoadWave

; 166  : 			{
; 167  : 				if (dwLength < sizeof(WAVEFORMAT))

  000d3	83 f9 0e	 cmp	 ecx, 14			; 0000000eH
  000d6	72 1c		 jb	 SHORT $LN29@LoadWave

; 168  : 					return FALSE;      // ???????î??Wave?î????????
; 169  : 				pWaveHeader = (WAVEFORMATEX*)pdw;

  000d8	89 06		 mov	 DWORD PTR [esi], eax
$LN12@LoadWave:

; 177  : 			}
; 178  : 			break;
; 179  : 		}
; 180  : 		if (pWaveHeader && (pbWaveData != NULL) && cbWaveSize)

  000da	83 3e 00	 cmp	 DWORD PTR [esi], 0
  000dd	74 0a		 je	 SHORT $LN17@LoadWave
$LN28@LoadWave:
  000df	83 3f 00	 cmp	 DWORD PTR [edi], 0
  000e2	74 05		 je	 SHORT $LN17@LoadWave
  000e4	83 3b 00	 cmp	 DWORD PTR [ebx], 0
  000e7	75 1e		 jne	 SHORT $LN22@LoadWave
$LN17@LoadWave:

; 181  : 			break;
; 182  : 		pdw = (DWORD*)((BYTE*)pdw + ((dwLength + 1) & ~1));

  000e9	41		 inc	 ecx
  000ea	83 e1 fe	 and	 ecx, -2			; fffffffeH
  000ed	03 c1		 add	 eax, ecx
  000ef	3b 45 f0	 cmp	 eax, DWORD PTR _pdwEnd$1$[ebp]
  000f2	72 b2		 jb	 SHORT $LL2@LoadWave
$LN29@LoadWave:
  000f4	5f		 pop	 edi

; 185  : 		return FALSE;	// ???????î??Wave?î????????
; 186  : 
; 187  : 	// Wave???îî¾î?
; 188  : 
; 189  : 	return TRUE;
; 190  : }

  000f5	5e		 pop	 esi
  000f6	33 c0		 xor	 eax, eax
  000f8	5b		 pop	 ebx
  000f9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fc	33 cd		 xor	 ecx, ebp
  000fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
$LN22@LoadWave:

; 183  : 	}
; 184  : 	if (pdwEnd <= pdw)

  00107	39 45 f0	 cmp	 DWORD PTR _pdwEnd$1$[ebp], eax
  0010a	76 e8		 jbe	 SHORT $LN29@LoadWave

; 185  : 		return FALSE;	// ???????î??Wave?î????????
; 186  : 
; 187  : 	// Wave???îî¾î?
; 188  : 
; 189  : 	return TRUE;
; 190  : }

  0010c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0010f	b8 01 00 00 00	 mov	 eax, 1
  00114	5f		 pop	 edi
  00115	5e		 pop	 esi
  00116	33 cd		 xor	 ecx, ebp
  00118	5b		 pop	 ebx
  00119	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0011e	8b e5		 mov	 esp, ebp
  00120	5d		 pop	 ebp
  00121	c3		 ret	 0
?LoadWave@@YAHPBDAAPAUtWAVEFORMATEX@@AAPAEAAK@Z ENDP	; LoadWave
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1781 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1390 :         int const _Result = __stdio_common_vsprintf(

  00003	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00006	50		 push	 eax
  00007	6a 00		 push	 0
  00009	ff 75 0c	 push	 DWORD PTR __Format$[ebp]
  0000c	6a ff		 push	 -1
  0000e	ff 75 08	 push	 DWORD PTR __Buffer$[ebp]
  00011	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	ff 70 04	 push	 DWORD PTR [eax+4]
  0001b	83 c9 01	 or	 ecx, 1
  0001e	51		 push	 ecx
  0001f	e8 00 00 00 00	 call	 ___stdio_common_vsprintf

; 1391 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1392 :             _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1393 : 
; 1394 :         return _Result < 0 ? -1 : _Result;

  00024	83 c9 ff	 or	 ecx, -1
  00027	83 c4 1c	 add	 esp, 28			; 0000001cH
  0002a	85 c0		 test	 eax, eax
  0002c	0f 48 c1	 cmovs	 eax, ecx

; 1782 :         int _Result;
; 1783 :         va_list _ArgList;
; 1784 :         __crt_va_start(_ArgList, _Format);
; 1785 : 
; 1786 :         #pragma warning(push)
; 1787 :         #pragma warning(disable: 4996) // Deprecation
; 1788 :         _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);
; 1789 :         #pragma warning(pop)
; 1790 : 
; 1791 :         __crt_va_end(_ArgList);
; 1792 :         return _Result;
; 1793 :     }

  0002f	5d		 pop	 ebp
  00030	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_map_bgm@@YAHH@Z
_TEXT	SEGMENT
_filename$1 = -292					; size = 255
_vTemp$2 = -36						; size = 32
__$ArrayPad$ = -4					; size = 4
_tone$ = 8						; size = 4
?play_map_bgm@@YAHH@Z PROC				; play_map_bgm, COMDAT

; 3311 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 24 01 00
	00		 sub	 esp, 292		; 00000124H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	56		 push	 esi
  00014	8b 75 08	 mov	 esi, DWORD PTR _tone$[ebp]
  00017	57		 push	 edi

; 3312 : 
; 3313 : 	// shan 2002/01/18
; 3314 : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 æ°å°å¾é³ä¹
; 3315 : 	if (BakBgm != tone && tone >= 40 && tone <= 55)

  00018	39 35 00 00 00
	00		 cmp	 DWORD PTR ?BakBgm@@3HA, esi ; BakBgm
  0001e	0f 84 ad 00 00
	00		 je	 $LN4@play_map_b
  00024	8d 46 d8	 lea	 eax, DWORD PTR [esi-40]
  00027	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0002a	0f 87 a1 00 00
	00		 ja	 $LN4@play_map_b

; 3316 : #else
; 3317 : 	if (BakBgm != tone && tone >= 40 && tone <= 53)
; 3318 : #endif
; 3319 : 	{
; 3320 : 		FILE* fp;
; 3321 : 		char filename[255];
; 3322 : 		char vTemp[32];
; 3323 : 		BakBgm = tone;
; 3324 : 
; 3325 : 		sprintf(filename, "map\\bgm%d.dat", sCharSide);

  00030	ff 35 00 00 00
	00		 push	 DWORD PTR ?sCharSide@@3HA ; sCharSide
  00036	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  0003c	89 35 00 00 00
	00		 mov	 DWORD PTR ?BakBgm@@3HA, esi ; BakBgm
  00042	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PAAFIOGP@map?2bgm?$CFd?4dat@
  00047	50		 push	 eax
  00048	e8 00 00 00 00	 call	 _sprintf

; 3326 : 		sprintf(vTemp, "%d", tone);

  0004d	56		 push	 esi
  0004e	8d 45 dc	 lea	 eax, DWORD PTR _vTemp$2[ebp]
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_02DPKJAMEF@?$CFd@
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _sprintf

; 3327 : 
; 3328 : 		if ((fp = fopen(filename, "rb+")) == NULL)

  0005c	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  00062	68 00 00 00 00	 push	 OFFSET ??_C@_03CCKOKKND@rb?$CL@
  00067	50		 push	 eax
  00068	e8 00 00 00 00	 call	 _fopen
  0006d	8b f8		 mov	 edi, eax
  0006f	83 c4 20	 add	 esp, 32			; 00000020H
  00072	85 ff		 test	 edi, edi
  00074	75 3f		 jne	 SHORT $LN6@play_map_b

; 3329 : 		{
; 3330 : 			_mkdir("map");

  00076	68 00 00 00 00	 push	 OFFSET ??_C@_03HBNNNHNM@map@
  0007b	e8 00 00 00 00	 call	 __mkdir

; 3331 : 			fp = fopen(filename, "wb");

  00080	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  00086	68 00 00 00 00	 push	 OFFSET ??_C@_02GMLFBBN@wb@
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _fopen

; 3332 : 			fclose(fp);

  00091	50		 push	 eax
  00092	e8 00 00 00 00	 call	 _fclose

; 3333 : 			if ((fp = fopen(filename, "rb+")) == NULL)

  00097	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _filename$1[ebp]
  0009d	68 00 00 00 00	 push	 OFFSET ??_C@_03CCKOKKND@rb?$CL@
  000a2	50		 push	 eax
  000a3	e8 00 00 00 00	 call	 _fopen
  000a8	8b f8		 mov	 edi, eax
  000aa	83 c4 18	 add	 esp, 24			; 00000018H
  000ad	85 ff		 test	 edi, edi
  000af	0f 84 dd 01 00
	00		 je	 $LN2@play_map_b
$LN6@play_map_b:

; 3334 : 				return FALSE;
; 3335 : 		}
; 3336 : 		fwrite(vTemp, sizeof(char), 2, fp);

  000b5	57		 push	 edi
  000b6	6a 02		 push	 2
  000b8	8d 45 dc	 lea	 eax, DWORD PTR _vTemp$2[ebp]
  000bb	6a 01		 push	 1
  000bd	50		 push	 eax
  000be	e8 00 00 00 00	 call	 _fwrite

; 3337 : 		fclose(fp);

  000c3	57		 push	 edi
  000c4	e8 00 00 00 00	 call	 _fclose
  000c9	83 c4 14	 add	 esp, 20			; 00000014H
  000cc	83 c6 d8	 add	 esi, -40		; ffffffd8H
  000cf	eb 0c		 jmp	 SHORT $LN24@play_map_b
$LN4@play_map_b:

; 3338 : 	}
; 3339 : 	switch (tone) {

  000d1	83 c6 d8	 add	 esi, -40		; ffffffd8H
  000d4	83 fe 0f	 cmp	 esi, 15			; 0000000fH
  000d7	0f 87 b5 01 00
	00		 ja	 $LN2@play_map_b
$LN24@play_map_b:
  000dd	ff 24 b5 00 00
	00 00		 jmp	 DWORD PTR $LN25@play_map_b[esi*4]
$LN7@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  000e4	5f		 pop	 edi
  000e5	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 4 ; map_bgm_no
  000ef	33 c0		 xor	 eax, eax
  000f1	5e		 pop	 esi

; 3394 : }

  000f2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000f5	33 cd		 xor	 ecx, ebp
  000f7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000fc	8b e5		 mov	 esp, ebp
  000fe	5d		 pop	 ebp
  000ff	c3		 ret	 0
$LN8@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00100	5f		 pop	 edi
  00101	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 3 ; map_bgm_no
  0010b	33 c0		 xor	 eax, eax
  0010d	5e		 pop	 esi

; 3394 : }

  0010e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00111	33 cd		 xor	 ecx, ebp
  00113	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00118	8b e5		 mov	 esp, ebp
  0011a	5d		 pop	 ebp
  0011b	c3		 ret	 0
$LN9@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  0011c	5f		 pop	 edi
  0011d	c7 05 00 00 00
	00 07 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 7 ; map_bgm_no
  00127	33 c0		 xor	 eax, eax
  00129	5e		 pop	 esi

; 3394 : }

  0012a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0012d	33 cd		 xor	 ecx, ebp
  0012f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00134	8b e5		 mov	 esp, ebp
  00136	5d		 pop	 ebp
  00137	c3		 ret	 0
$LN10@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00138	5f		 pop	 edi
  00139	c7 05 00 00 00
	00 08 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 8 ; map_bgm_no
  00143	33 c0		 xor	 eax, eax
  00145	5e		 pop	 esi

; 3394 : }

  00146	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00149	33 cd		 xor	 ecx, ebp
  0014b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00150	8b e5		 mov	 esp, ebp
  00152	5d		 pop	 ebp
  00153	c3		 ret	 0
$LN11@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00154	5f		 pop	 edi
  00155	c7 05 00 00 00
	00 09 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 9 ; map_bgm_no
  0015f	33 c0		 xor	 eax, eax
  00161	5e		 pop	 esi

; 3394 : }

  00162	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00165	33 cd		 xor	 ecx, ebp
  00167	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0016c	8b e5		 mov	 esp, ebp
  0016e	5d		 pop	 ebp
  0016f	c3		 ret	 0
$LN12@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00170	5f		 pop	 edi
  00171	c7 05 00 00 00
	00 0a 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 10 ; map_bgm_no, 0000000aH
  0017b	33 c0		 xor	 eax, eax
  0017d	5e		 pop	 esi

; 3394 : }

  0017e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00181	33 cd		 xor	 ecx, ebp
  00183	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00188	8b e5		 mov	 esp, ebp
  0018a	5d		 pop	 ebp
  0018b	c3		 ret	 0
$LN13@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  0018c	5f		 pop	 edi
  0018d	c7 05 00 00 00
	00 0b 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 11 ; map_bgm_no, 0000000bH
  00197	33 c0		 xor	 eax, eax
  00199	5e		 pop	 esi

; 3394 : }

  0019a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0019d	33 cd		 xor	 ecx, ebp
  0019f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a4	8b e5		 mov	 esp, ebp
  001a6	5d		 pop	 ebp
  001a7	c3		 ret	 0
$LN14@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  001a8	5f		 pop	 edi
  001a9	c7 05 00 00 00
	00 0f 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 15 ; map_bgm_no, 0000000fH
  001b3	33 c0		 xor	 eax, eax
  001b5	5e		 pop	 esi

; 3394 : }

  001b6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b9	33 cd		 xor	 ecx, ebp
  001bb	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c0	8b e5		 mov	 esp, ebp
  001c2	5d		 pop	 ebp
  001c3	c3		 ret	 0
$LN15@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  001c4	5f		 pop	 edi
  001c5	c7 05 00 00 00
	00 10 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 16 ; map_bgm_no, 00000010H
  001cf	33 c0		 xor	 eax, eax
  001d1	5e		 pop	 esi

; 3394 : }

  001d2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001d5	33 cd		 xor	 ecx, ebp
  001d7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001dc	8b e5		 mov	 esp, ebp
  001de	5d		 pop	 ebp
  001df	c3		 ret	 0
$LN16@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  001e0	5f		 pop	 edi
  001e1	c7 05 00 00 00
	00 15 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 21 ; map_bgm_no, 00000015H
  001eb	33 c0		 xor	 eax, eax
  001ed	5e		 pop	 esi

; 3394 : }

  001ee	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001f1	33 cd		 xor	 ecx, ebp
  001f3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f8	8b e5		 mov	 esp, ebp
  001fa	5d		 pop	 ebp
  001fb	c3		 ret	 0
$LN17@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  001fc	5f		 pop	 edi
  001fd	c7 05 00 00 00
	00 1e 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 30 ; map_bgm_no, 0000001eH
  00207	33 c0		 xor	 eax, eax
  00209	5e		 pop	 esi

; 3394 : }

  0020a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0020d	33 cd		 xor	 ecx, ebp
  0020f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00214	8b e5		 mov	 esp, ebp
  00216	5d		 pop	 ebp
  00217	c3		 ret	 0
$LN18@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00218	5f		 pop	 edi
  00219	c7 05 00 00 00
	00 1f 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 31 ; map_bgm_no, 0000001fH
  00223	33 c0		 xor	 eax, eax
  00225	5e		 pop	 esi

; 3394 : }

  00226	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00229	33 cd		 xor	 ecx, ebp
  0022b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00230	8b e5		 mov	 esp, ebp
  00232	5d		 pop	 ebp
  00233	c3		 ret	 0
$LN19@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00234	5f		 pop	 edi
  00235	c7 05 00 00 00
	00 20 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 32 ; map_bgm_no, 00000020H
  0023f	33 c0		 xor	 eax, eax
  00241	5e		 pop	 esi

; 3394 : }

  00242	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00245	33 cd		 xor	 ecx, ebp
  00247	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0024c	8b e5		 mov	 esp, ebp
  0024e	5d		 pop	 ebp
  0024f	c3		 ret	 0
$LN20@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  00250	5f		 pop	 edi
  00251	c7 05 00 00 00
	00 14 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 20 ; map_bgm_no, 00000014H
  0025b	33 c0		 xor	 eax, eax
  0025d	5e		 pop	 esi

; 3394 : }

  0025e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00261	33 cd		 xor	 ecx, ebp
  00263	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00268	8b e5		 mov	 esp, ebp
  0026a	5d		 pop	 ebp
  0026b	c3		 ret	 0
$LN21@play_map_b:

; 3390 : 		break;
; 3391 : #endif
; 3392 : 	}
; 3393 : 	return 0;

  0026c	5f		 pop	 edi
  0026d	c7 05 00 00 00
	00 16 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 22 ; map_bgm_no, 00000016H
  00277	33 c0		 xor	 eax, eax
  00279	5e		 pop	 esi

; 3394 : }

  0027a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027d	33 cd		 xor	 ecx, ebp
  0027f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00284	8b e5		 mov	 esp, ebp
  00286	5d		 pop	 ebp
  00287	c3		 ret	 0
$LN22@play_map_b:

; 3340 : 		//BGM ì´ë¯¸ì§ ì½ë ì¡°ì 
; 3341 : 	case 40:	//ä¼¡?î«?
; 3342 : 		map_bgm_no = 4;
; 3343 : 		break;
; 3344 : 	case 41:	//ä¼¡?î¸?
; 3345 : 		map_bgm_no = 3;
; 3346 : 		break;
; 3347 : 	case 42:	//î´??
; 3348 : 		map_bgm_no = 7;
; 3349 : 		break;
; 3350 : 	case 43:	//î´??
; 3351 : 		map_bgm_no = 8;
; 3352 : 		break;
; 3353 : 	case 44:	//î´??
; 3354 : 		map_bgm_no = 9;
; 3355 : 		break;
; 3356 : 	case 45:	//?????
; 3357 : 		map_bgm_no = 10;
; 3358 : 		break;
; 3359 : 	case 46:	//????????????
; 3360 : 		map_bgm_no = 11;
; 3361 : 		break;
; 3362 : 	case 47:	//ä¼ç¸å¤§é
; 3363 : 		map_bgm_no = 15;
; 3364 : 		break;
; 3365 : 	case 48:	//ä¼ç¸å­
; 3366 : 		map_bgm_no = 16;
; 3367 : 		break;
; 3368 : 	case 49:	//èµåº
; 3369 : 		map_bgm_no = 21;
; 3370 : 		break;
; 3371 : 	case 50:	//íì´íëª¨
; 3372 : 		map_bgm_no = 30;
; 3373 : 		break;
; 3374 : 	case 51:	//íì´íëª¨
; 3375 : 		map_bgm_no = 31;
; 3376 : 		break;
; 3377 : 	case 52:	//ç«å
; 3378 : 		map_bgm_no = 32;
; 3379 : 		break;
; 3380 : 	case 53:	//é£å
; 3381 : 		map_bgm_no = 20;
; 3382 : 		break;
; 3383 : 
; 3384 : #ifdef _NEWMUSICFILE6_0		   // Syu ADD 6.0 æ°å°å¾é³ä¹
; 3385 : 	case 54:
; 3386 : 		map_bgm_no = 22;	   // æµ·åºæ´çª
; 3387 : 		break;
; 3388 : 	case 55:
; 3389 : 		map_bgm_no = 23;	   // æµ·åºå¹³å

  00288	c7 05 00 00 00
	00 17 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, 23 ; map_bgm_no, 00000017H
$LN2@play_map_b:

; 3394 : }

  00292	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00295	33 c0		 xor	 eax, eax
  00297	5f		 pop	 edi
  00298	33 cd		 xor	 ecx, ebp
  0029a	5e		 pop	 esi
  0029b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a0	8b e5		 mov	 esp, ebp
  002a2	5d		 pop	 ebp
  002a3	c3		 ret	 0
$LN25@play_map_b:
  002a4	00 00 00 00	 DD	 $LN7@play_map_b
  002a8	00 00 00 00	 DD	 $LN8@play_map_b
  002ac	00 00 00 00	 DD	 $LN9@play_map_b
  002b0	00 00 00 00	 DD	 $LN10@play_map_b
  002b4	00 00 00 00	 DD	 $LN11@play_map_b
  002b8	00 00 00 00	 DD	 $LN12@play_map_b
  002bc	00 00 00 00	 DD	 $LN13@play_map_b
  002c0	00 00 00 00	 DD	 $LN14@play_map_b
  002c4	00 00 00 00	 DD	 $LN15@play_map_b
  002c8	00 00 00 00	 DD	 $LN16@play_map_b
  002cc	00 00 00 00	 DD	 $LN17@play_map_b
  002d0	00 00 00 00	 DD	 $LN18@play_map_b
  002d4	00 00 00 00	 DD	 $LN19@play_map_b
  002d8	00 00 00 00	 DD	 $LN20@play_map_b
  002dc	00 00 00 00	 DD	 $LN21@play_map_b
  002e0	00 00 00 00	 DD	 $LN22@play_map_b
?play_map_bgm@@YAHH@Z ENDP				; play_map_bgm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_environment@@YAHHHH@Z
_TEXT	SEGMENT
_tone$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?play_environment@@YAHHHH@Z PROC			; play_environment, COMDAT

; 3398 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	51		 push	 ecx

; 3399 : 	int d0, d1, distance, volume;
; 3400 : 	d0 = d1 = 0;
; 3401 : 	float dx, dy;
; 3402 : #ifdef _NB_CANCEL_BGM
; 3403 : 	if (å£°é³å¼å³) return 0;

  00007	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  0000e	53		 push	 ebx
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	0f 85 b3 01 00
	00		 jne	 $LN6@play_envir

; 3404 : #endif
; 3405 : 	//	tone = 157;
; 3406 : 
; 3407 : 	if (tone < 20 || tone > 37) {		//î??î±??

  00017	8b 75 08	 mov	 esi, DWORD PTR _tone$[ebp]
  0001a	8d 46 ec	 lea	 eax, DWORD PTR [esi-20]
  0001d	83 f8 11	 cmp	 eax, 17			; 00000011H
  00020	0f 87 a4 01 00
	00		 ja	 $LN6@play_envir

; 3408 : 		return 0;					//î¡????
; 3409 : 	}
; 3410 : 
; 3411 : 	switch (tone) {

  00026	8b c6		 mov	 eax, esi
  00028	83 e8 1c	 sub	 eax, 28			; 0000001cH
  0002b	74 34		 je	 SHORT $LN7@play_envir
  0002d	83 e8 01	 sub	 eax, 1
  00030	74 1d		 je	 SHORT $LN9@play_envir
  00032	83 e8 08	 sub	 eax, 8
  00035	75 37		 jne	 SHORT $LN8@play_envir

; 3419 : 			return 0;					//î¡????
; 3420 : 		}
; 3421 : 		break;
; 3422 : 	case 37:		//î£?î
; 3423 : 		if (SaTimeZoneNo == LS_MORNING) {		//î??

  00037	a1 00 00 00 00	 mov	 eax, DWORD PTR ?SaTimeZoneNo@@3HA ; SaTimeZoneNo
  0003c	83 f8 03	 cmp	 eax, 3
  0003f	0f 84 85 01 00
	00		 je	 $LN6@play_envir

; 3424 : 			return 0;						//î¡????
; 3425 : 		}
; 3426 : 		if (SaTimeZoneNo == LS_NIGHT) {		//???

  00045	83 f8 02	 cmp	 eax, 2
  00048	75 24		 jne	 SHORT $LN8@play_envir

; 3427 : 			tone = 29;					//??î?

  0004a	8d 70 1b	 lea	 esi, DWORD PTR [eax+27]

; 3428 : 			break;

  0004d	eb 1f		 jmp	 SHORT $LN8@play_envir
$LN9@play_envir:

; 3414 : 			return 0;						//î¡????
; 3415 : 		}
; 3416 : 		break;
; 3417 : 	case 29:		//?
; 3418 : 		if (SaTimeZoneNo != LS_NIGHT) {		//??????

  0004f	83 3d 00 00 00
	00 02		 cmp	 DWORD PTR ?SaTimeZoneNo@@3HA, 2 ; SaTimeZoneNo
  00056	74 16		 je	 SHORT $LN8@play_envir

; 3475 : 	return 0;
; 3476 : }

  00058	33 c0		 xor	 eax, eax
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	5b		 pop	 ebx
  0005d	8b e5		 mov	 esp, ebp
  0005f	5d		 pop	 ebp
  00060	c3		 ret	 0
$LN7@play_envir:

; 3412 : 	case 28:		//???
; 3413 : 		if (SaTimeZoneNo != LS_MORNING) {		//î?????

  00061	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR ?SaTimeZoneNo@@3HA, 3 ; SaTimeZoneNo
  00068	0f 85 5c 01 00
	00		 jne	 $LN6@play_envir
$LN8@play_envir:

; 3429 : 		}
; 3430 : 		break;
; 3431 : 	}
; 3432 : 
; 3433 : 
; 3434 : 
; 3435 : 
; 3436 : 
; 3437 : 
; 3438 : 	dx = (float)(x - 320);

  0006e	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  00071	05 c0 fe ff ff	 add	 eax, -320		; fffffec0H
  00076	66 0f 6e c8	 movd	 xmm1, eax

; 3439 : 	dy = (float)(y - 240);

  0007a	8b 45 10	 mov	 eax, DWORD PTR _y$[ebp]
  0007d	05 10 ff ff ff	 add	 eax, -240		; ffffff10H
  00082	0f 5b c9	 cvtdq2ps xmm1, xmm1
  00085	66 0f 6e c0	 movd	 xmm0, eax
  00089	0f 5b c0	 cvtdq2ps xmm0, xmm0

; 3440 : 
; 3441 : 	distance = (int)sqrt((double)(dx * dx + dy * dy));

  0008c	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00090	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00094	f3 0f 58 c1	 addss	 xmm0, xmm1
  00098	0f 57 c9	 xorps	 xmm1, xmm1
  0009b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0009e	66 0f 2e c8	 ucomisd xmm1, xmm0
  000a2	77 06		 ja	 SHORT $LN22@play_envir
  000a4	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  000a8	eb 05		 jmp	 SHORT $LN23@play_envir
$LN22@play_envir:
  000aa	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
$LN23@play_envir:
  000af	f2 0f 2c c0	 cvttsd2si eax, xmm0

; 3442 : 
; 3443 : 	volume = distance << 4;		//?????î±?î?

  000b3	8b c8		 mov	 ecx, eax
  000b5	c1 e1 04	 shl	 ecx, 4

; 3444 : 	volume /= 0x6a;				//
; 3445 : 
; 3446 : 	if (volume >= 127)				//îª????

  000b8	81 f9 96 34 00
	00		 cmp	 ecx, 13462		; 00003496H
  000be	0f 8d 06 01 00
	00		 jge	 $LN6@play_envir

; 3447 : 		return 0;					//î¡????
; 3448 : 
; 3449 : 	d0 = tone - 20;
; 3450 : 	tone = 151 + d0;

  000c4	8d be 83 00 00
	00		 lea	 edi, DWORD PTR [esi+131]

; 3451 : 	if (env_tbl[d0].count == 0) {		//î¡???

  000ca	8d 34 f6	 lea	 esi, DWORD PTR [esi+esi*8]
  000cd	8d b6 4c ff ff
	ff		 lea	 esi, DWORD PTR [esi-180]
  000d3	8b 1c b5 08 00
	00 00		 mov	 ebx, DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+8]
  000da	85 db		 test	 ebx, ebx
  000dc	75 72		 jne	 SHORT $LN15@play_envir

; 3452 : 		//??î©î¼
; 3453 : 		env_tbl[d0].distance = distance;

  000de	89 04 b5 0c 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+12], eax

; 3454 : 		volume = (127 - volume) * tone_tbl[tone].voice_volume / 127;

  000e5	b8 ed 73 48 4d	 mov	 eax, 1296593901		; 4d4873edH
  000ea	f7 e9		 imul	 ecx
  000ec	b9 7f 00 00 00	 mov	 ecx, 127		; 0000007fH
  000f1	c1 fa 05	 sar	 edx, 5
  000f4	8b c2		 mov	 eax, edx
  000f6	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f9	03 c2		 add	 eax, edx
  000fb	2b c8		 sub	 ecx, eax
  000fd	8b c7		 mov	 eax, edi
  000ff	c1 e0 05	 shl	 eax, 5
  00102	0f af 88 0c 00
	00 00		 imul	 ecx, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[eax+12]
  00109	b8 09 04 02 81	 mov	 eax, -2130574327	; 81020409H
  0010e	f7 e9		 imul	 ecx

; 3455 : 		env_tbl[d0].volume = volume * t_music_se_volume / 15;

  00110	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  00115	03 d1		 add	 edx, ecx
  00117	c1 fa 06	 sar	 edx, 6
  0011a	8b ca		 mov	 ecx, edx
  0011c	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  0011f	03 ca		 add	 ecx, edx
  00121	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?t_music_se_volume@@3HA ; t_music_se_volume
  00128	f7 e9		 imul	 ecx
  0012a	03 d1		 add	 edx, ecx
  0012c	c1 fa 03	 sar	 edx, 3
  0012f	8b c2		 mov	 eax, edx
  00131	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00134	03 c2		 add	 eax, edx

; 3456 : 		d1 = 1;		//????????
; 3457 : 		if (env_tbl[d0].voice_address == -1) {		//î¡???

  00136	83 3c b5 00 00
	00 00 ff	 cmp	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4], -1
  0013e	89 04 b5 10 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+16], eax
  00145	75 6f		 jne	 SHORT $LN21@play_envir

; 3458 : 			env_tbl[d0].tone = tone;

  00147	89 3c b5 04 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+4], edi

; 3459 : 		}
; 3460 : 	}

  0014e	eb 66		 jmp	 SHORT $LN21@play_envir
$LN15@play_envir:

; 3461 : 	else {
; 3462 : 		//??îµ???î©î¼
; 3463 : 		if (env_tbl[d0].distance > distance) {

  00150	39 04 b5 0c 00
	00 00		 cmp	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+12], eax
  00157	7e 67		 jle	 SHORT $LN19@play_envir

; 3464 : 			env_tbl[d0].distance = distance;

  00159	89 04 b5 0c 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+12], eax

; 3465 : 			volume = (127 - volume) * tone_tbl[tone].voice_volume / 127;

  00160	b8 ed 73 48 4d	 mov	 eax, 1296593901		; 4d4873edH
  00165	f7 e9		 imul	 ecx
  00167	c1 e7 05	 shl	 edi, 5
  0016a	b9 7f 00 00 00	 mov	 ecx, 127		; 0000007fH
  0016f	c1 fa 05	 sar	 edx, 5
  00172	8b c2		 mov	 eax, edx
  00174	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00177	03 c2		 add	 eax, edx
  00179	2b c8		 sub	 ecx, eax
  0017b	b8 09 04 02 81	 mov	 eax, -2130574327	; 81020409H
  00180	0f af 8f 0c 00
	00 00		 imul	 ecx, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[edi+12]
  00187	f7 e9		 imul	 ecx

; 3466 : 			env_tbl[d0].volume = volume * t_music_se_volume / 15;

  00189	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0018e	03 d1		 add	 edx, ecx
  00190	c1 fa 06	 sar	 edx, 6
  00193	8b ca		 mov	 ecx, edx
  00195	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00198	03 ca		 add	 ecx, edx
  0019a	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?t_music_se_volume@@3HA ; t_music_se_volume
  001a1	f7 e9		 imul	 ecx
  001a3	03 d1		 add	 edx, ecx
  001a5	c1 fa 03	 sar	 edx, 3
  001a8	8b c2		 mov	 eax, edx
  001aa	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001ad	03 c2		 add	 eax, edx
  001af	89 04 b5 10 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+16], eax
$LN21@play_envir:

; 3467 : 			d1 = 1;		//????????
; 3468 : 		}
; 3469 : 	}
; 3470 : 	//????
; 3471 : 	if (d1) {
; 3472 : 		env_tbl[d0].side = x;

  001b6	8b 45 0c	 mov	 eax, DWORD PTR _x$[ebp]
  001b9	89 04 b5 18 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+24], eax
$LN19@play_envir:

; 3473 : 	}
; 3474 : 	env_tbl[d0].count++;

  001c0	8d 43 01	 lea	 eax, DWORD PTR [ebx+1]
  001c3	89 04 b5 08 00
	00 00		 mov	 DWORD PTR ?env_tbl@@3PAUENVIRONMENT_EQU@@A[esi*4+8], eax
$LN6@play_envir:

; 3475 : 	return 0;
; 3476 : }

  001ca	5f		 pop	 edi
  001cb	5e		 pop	 esi
  001cc	33 c0		 xor	 eax, eax
  001ce	5b		 pop	 ebx
  001cf	8b e5		 mov	 esp, ebp
  001d1	5d		 pop	 ebp
  001d2	c3		 ret	 0
?play_environment@@YAHHHH@Z ENDP			; play_environment
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?fade_out_bgm@@YAXXZ
_TEXT	SEGMENT
?fade_out_bgm@@YAXXZ PROC				; fade_out_bgm, COMDAT

; 684  : 	//????????î¿
; 685  : 	t_music_fade_flg = 1;
; 686  : 	//?????îî¼
; 687  : 	t_music_fade_vol = bgm_tbl[t_music_bgm_no].volume * t_music_bgm_volume / 15;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?t_music_bgm_no@@3HA ; t_music_bgm_no
  00005	c1 e0 04	 shl	 eax, 4
  00008	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?t_music_fade_flg@@3HA, 1 ; t_music_fade_flg
  00012	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[eax+4]
  00018	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0001d	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?t_music_bgm_volume@@3HA ; t_music_bgm_volume
  00024	f7 e9		 imul	 ecx
  00026	03 d1		 add	 edx, ecx
  00028	c1 fa 03	 sar	 edx, 3
  0002b	8b c2		 mov	 eax, edx
  0002d	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00030	03 c2		 add	 eax, edx
  00032	a3 00 00 00 00	 mov	 DWORD PTR ?t_music_fade_vol@@3HA, eax ; t_music_fade_vol

; 688  : }

  00037	c3		 ret	 0
?fade_out_bgm@@YAXXZ ENDP				; fade_out_bgm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?stop_bgm@@YAXXZ
_TEXT	SEGMENT
?stop_bgm@@YAXXZ PROC					; stop_bgm, COMDAT

; 665  : #ifdef _NB_CANCEL_BGM
; 666  : 	if (å£°é³å¼å³) return;

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  00007	75 52		 jne	 SHORT $LN1@stop_bgm

; 667  : #endif
; 668  : 	if (thread_stop_flg) {

  00009	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?thread_stop_flg@@3HA, 0
  00010	74 07		 je	 SHORT $LN3@stop_bgm

; 669  : 		stop_thread();

  00012	e8 00 00 00 00	 call	 ?stop_thread@@YAXXZ	; stop_thread

; 670  : 	}

  00017	eb 1a		 jmp	 SHORT $LN5@stop_bgm
$LN3@stop_bgm:

; 671  : 	else {
; 672  : 		RELEASE(pDSData_tone[TONE_MAX]);

  00019	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  0001f	85 c9		 test	 ecx, ecx
  00021	74 10		 je	 SHORT $LN5@stop_bgm
  00023	8b 01		 mov	 eax, DWORD PTR [ecx]
  00025	51		 push	 ecx
  00026	ff 50 08	 call	 DWORD PTR [eax+8]
  00029	c7 05 d0 07 00
	00 00 00 00 00	 mov	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000, 0
$LN5@stop_bgm:

; 673  : 	}
; 674  : 	t_music_fade_flg = 0;
; 675  : 	t_music_playing_flg = 0;
; 676  : 	map_bgm_vct_no = 0;
; 677  : 	map_bgm_no = t_music_bgm_no;

  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR ?t_music_bgm_no@@3HA ; t_music_bgm_no
  00038	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?t_music_fade_flg@@3HA, 0 ; t_music_fade_flg
  00042	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?t_music_playing_flg@@3HA, 0 ; t_music_playing_flg
  0004c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?map_bgm_vct_no@@3HA, 0
  00056	a3 00 00 00 00	 mov	 DWORD PTR ?map_bgm_no@@3HA, eax ; map_bgm_no
$LN1@stop_bgm:

; 678  : }

  0005b	c3		 ret	 0
?stop_bgm@@YAXXZ ENDP					; stop_bgm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?set_gbm_pitch@@YAXXZ
_TEXT	SEGMENT
?set_gbm_pitch@@YAXXZ PROC				; set_gbm_pitch, COMDAT

; 3047 : 	if (dsound_flg == -1)

  00000	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00007	74 1f		 je	 SHORT $LN1@set_gbm_pi

; 3048 : 		return;
; 3049 : 
; 3050 : 	//??????
; 3051 : 	pDSData_tone[TONE_MAX]->SetFrequency((DWORD)freq_tbl[36 + 1 + t_music_bgm_pitch[t_music_bgm_no]]);

  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ?t_music_bgm_no@@3HA ; t_music_bgm_no
  0000e	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  00014	0f be 80 00 00
	00 00		 movsx	 eax, BYTE PTR ?t_music_bgm_pitch@@3PADA[eax]
  0001b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001d	ff 34 85 94 00
	00 00		 push	 DWORD PTR ?freq_tbl@@3PAHA[eax*4+148]
  00024	51		 push	 ecx
  00025	ff 52 44	 call	 DWORD PTR [edx+68]
$LN1@set_gbm_pi:

; 3052 : }

  00028	c3		 ret	 0
?set_gbm_pitch@@YAXXZ ENDP				; set_gbm_pitch
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?bgm_volume_change@@YAXXZ
_TEXT	SEGMENT
?bgm_volume_change@@YAXXZ PROC				; bgm_volume_change, COMDAT

; 3028 : #ifdef _NB_CANCEL_BGM
; 3029 : 	if (å£°é³å¼å³) return;

  00000	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  00007	75 63		 jne	 SHORT $LN1@bgm_volume

; 3030 : #endif
; 3031 : 	if (dsound_flg == -1)

  00009	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00010	74 5a		 je	 SHORT $LN1@bgm_volume

; 3032 : 		return;
; 3033 : 
; 3034 : 	if (t_music_bgm_volume > 15) {		//îª????

  00012	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?t_music_bgm_volume@@3HA ; t_music_bgm_volume
  00018	83 fa 0f	 cmp	 edx, 15			; 0000000fH
  0001b	7e 07		 jle	 SHORT $LN4@bgm_volume

; 3035 : 		t_music_bgm_volume = 15;

  0001d	ba 0f 00 00 00	 mov	 edx, 15			; 0000000fH

; 3036 : 	}
; 3037 : 	if (t_music_bgm_volume < 0) {		//îª????

  00022	eb 07		 jmp	 SHORT $LN7@bgm_volume
$LN4@bgm_volume:
  00024	33 c0		 xor	 eax, eax
  00026	85 d2		 test	 edx, edx
  00028	0f 48 d0	 cmovs	 edx, eax
$LN7@bgm_volume:

; 3038 : 		t_music_bgm_volume = 0;
; 3039 : 	}
; 3040 : 	//?????
; 3041 : 	pDSData_tone[TONE_MAX]->SetVolume(volume_tbl[bgm_tbl[t_music_bgm_no].volume * t_music_bgm_volume / 15]);		// ????????

  0002b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?t_music_bgm_no@@3HA ; t_music_bgm_no
  00030	c1 e0 04	 shl	 eax, 4
  00033	89 15 00 00 00
	00		 mov	 DWORD PTR ?t_music_bgm_volume@@3HA, edx ; t_music_bgm_volume
  00039	56		 push	 esi
  0003a	8b 35 d0 07 00
	00		 mov	 esi, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  00040	8b 88 04 00 00
	00		 mov	 ecx, DWORD PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[eax+4]
  00046	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0004b	0f af ca	 imul	 ecx, edx
  0004e	57		 push	 edi
  0004f	8b 3e		 mov	 edi, DWORD PTR [esi]
  00051	f7 e9		 imul	 ecx
  00053	03 d1		 add	 edx, ecx
  00055	c1 fa 03	 sar	 edx, 3
  00058	8b c2		 mov	 eax, edx
  0005a	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0005d	03 c2		 add	 eax, edx
  0005f	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  00066	56		 push	 esi
  00067	ff 57 3c	 call	 DWORD PTR [edi+60]
  0006a	5f		 pop	 edi
  0006b	5e		 pop	 esi
$LN1@bgm_volume:

; 3042 : }

  0006c	c3		 ret	 0
?bgm_volume_change@@YAXXZ ENDP				; bgm_volume_change
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_bgm@@YAHH@Z
_TEXT	SEGMENT
tv423 = -40						; size = 4
_hmmio$1$ = -36						; size = 4
_DataSize$ = -32					; size = 4
_d0$1$ = -28						; size = 4
_WaveSize$ = -28					; size = 4
_Wfmtx$ = -24						; size = 18
__$ArrayPad$ = -4					; size = 4
_bgm_no$ = 8						; size = 4
?play_bgm@@YAHH@Z PROC					; play_bgm, COMDAT

; 2874 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 2875 : #ifdef _NB_CANCEL_BGM
; 2876 : 	if (å£°é³å¼å³) return -1;

  00010	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  00017	8b 45 08	 mov	 eax, DWORD PTR _bgm_no$[ebp]
  0001a	53		 push	 ebx
  0001b	0f 85 79 02 00
	00		 jne	 $LN22@play_bgm

; 2877 : #endif
; 2878 : 	HMMIO hmmio;			//????????
; 2879 : 	WAVEFORMATEX	Wfmtx;			//WAVE??????????????
; 2880 : 	DWORD			DataSize;		//?????????
; 2881 : 	DWORD			WaveSize;		//Wave????????
; 2882 : 
; 2883 : //	bgm_no = 0;
; 2884 : 	//cary 2001 7 17
; 2885 : 	if (bgm_no < 0)
; 2886 : 		bgm_no = 0;
; 2887 : 
; 2888 : 	//??????????
; 2889 : 	t_music_fade_flg = 0;

  00021	33 db		 xor	 ebx, ebx
  00023	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?t_music_fade_flg@@3HA, 0 ; t_music_fade_flg
  0002d	85 c0		 test	 eax, eax
  0002f	0f 49 d8	 cmovns	 ebx, eax

; 2890 : 
; 2891 : 	if (dsound_flg == -1)

  00032	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00039	89 5d d8	 mov	 DWORD PTR tv423[ebp], ebx
  0003c	0f 84 58 02 00
	00		 je	 $LN22@play_bgm

; 2892 : 		return -1;
; 2893 : 
; 2894 : 	//???????????
; 2895 : 	if (t_music_bgm_no != -1) {

  00042	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?t_music_bgm_no@@3HA, -1 ; t_music_bgm_no
  00049	74 05		 je	 SHORT $LN5@play_bgm

; 2896 : 		//????îî?
; 2897 : 		stop_thread();

  0004b	e8 00 00 00 00	 call	 ?stop_thread@@YAXXZ	; stop_thread
$LN5@play_bgm:
  00050	56		 push	 esi
  00051	57		 push	 edi

; 2898 : 	}
; 2899 : 
; 2900 : 	//????????????
; 2901 : //	if( (hmmio = mmioOpen(fname[bgm_no], NULL, MMIO_READ | MMIO_ALLOCBUF )) == NULL){
; 2902 : 	if ((hmmio = mmioOpen(bgm_tbl[bgm_no].fname, NULL, MMIO_READ | MMIO_ALLOCBUF)) == NULL) {

  00052	68 00 00 01 00	 push	 65536			; 00010000H
  00057	c1 e3 04	 shl	 ebx, 4
  0005a	6a 00		 push	 0
  0005c	ff b3 00 00 00
	00		 push	 DWORD PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[ebx]
  00062	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mmioOpenA@12
  00068	89 45 dc	 mov	 DWORD PTR _hmmio$1$[ebp], eax
  0006b	85 c0		 test	 eax, eax
  0006d	0f 84 14 02 00
	00		 je	 $LN21@play_bgm

; 2903 : #ifdef  _STONDEBUG_
; 2904 : 		MessageBox(hWnd, "æå¼WAVæ¡£å¤±è´¥ï¼", "Error", MB_OK);
; 2905 : #endif
; 2906 : 		return FALSE;
; 2907 : 	}
; 2908 : 	//???????????
; 2909 : 	if (WaveFormatRead(hmmio, &Wfmtx, &WaveSize) == FALSE) {

  00073	8d 4d e4	 lea	 ecx, DWORD PTR _WaveSize$[ebp]
  00076	51		 push	 ecx
  00077	8d 4d e8	 lea	 ecx, DWORD PTR _Wfmtx$[ebp]
  0007a	51		 push	 ecx
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ?WaveFormatRead@@YAHPAUHMMIO__@@PAUtWAVEFORMATEX@@PAK@Z ; WaveFormatRead
  00081	83 c4 0c	 add	 esp, 12			; 0000000cH
  00084	85 c0		 test	 eax, eax
  00086	0f 84 fb 01 00
	00		 je	 $LN21@play_bgm

; 2910 : #ifdef  _STONDEBUG_
; 2911 : 		MessageBox(hWnd, "è¯»åå£°é³æ ¼å¼å¤±è´¥ï¼", "Error", MB_OK);
; 2912 : #endif
; 2913 : 		return FALSE;
; 2914 : 	}
; 2915 : 	DataSize = WaveSize;
; 2916 : 	//??????????????
; 2917 : 	if (bgm_tbl[bgm_no].loop_flg == 2) {		//î??????

  0008c	80 bb 08 00 00
	00 02		 cmp	 BYTE PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[ebx+8], 2
  00093	8b 45 e4	 mov	 eax, DWORD PTR _WaveSize$[ebp]
  00096	89 45 e0	 mov	 DWORD PTR _DataSize$[ebp], eax
  00099	0f 85 fd 00 00
	00		 jne	 $LN8@play_bgm

; 2918 : 		thread_stop_flg = 1;		//?????
; 2919 : 		//???îºî«???
; 2920 : #if BGM_AUTO_LOOP
; 2921 : 		FILE* fp;
; 2922 : 		int d0, d1, d2;
; 2923 : 		fp = fopen(bgm_tbl[bgm_no].fname, "rb");

  0009f	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  000a4	ff b3 00 00 00
	00		 push	 DWORD PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[ebx]
  000aa	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?thread_stop_flg@@3HA, 1
  000b4	e8 00 00 00 00	 call	 _fopen
  000b9	8b f8		 mov	 edi, eax
  000bb	83 c4 08	 add	 esp, 8

; 2924 : 		if (fp == NULL) {

  000be	85 ff		 test	 edi, edi
  000c0	0f 84 c1 01 00
	00		 je	 $LN21@play_bgm

; 2925 : #ifdef  _STONDEBUG_
; 2926 : 			MessageBox(hWnd, "æå¼å£°é³æ¡£å¤±è´¥ï¼", "Error", MB_OK);
; 2927 : #endif
; 2928 : 			return FALSE;
; 2929 : 		}
; 2930 : 		d2 = 8;							//??????????????
; 2931 : 		d2 += 4;						//??????????????
; 2932 : 		d2 += 4;						//????  ?????????
; 2933 : 		d2 += 16;						//?????????
; 2934 : 		fseek(fp, d2, SEEK_CUR);			//??????????î®

  000c6	6a 01		 push	 1
  000c8	6a 20		 push	 32			; 00000020H
  000ca	57		 push	 edi
  000cb	e8 00 00 00 00	 call	 _fseek

; 2935 : 		d0 = fgetc(fp);					//î¦??????î¸????î?î?

  000d0	57		 push	 edi
  000d1	e8 00 00 00 00	 call	 _fgetc

; 2936 : 		d0 |= fgetc(fp) << 8;			//

  000d6	57		 push	 edi
  000d7	8b f0		 mov	 esi, eax
  000d9	e8 00 00 00 00	 call	 _fgetc
  000de	8b 4d e0	 mov	 ecx, DWORD PTR _DataSize$[ebp]
  000e1	c1 e0 08	 shl	 eax, 8
  000e4	0b f0		 or	 esi, eax

; 2937 : 		d2 = 2;							//????????
; 2938 : 		d2 += 12 + DataSize;				//??????????  ?  ??????????
; 2939 : 		if (DataSize & 1) {					//????????

  000e6	f6 c1 01	 test	 cl, 1

; 2940 : 			d2++;						//?????î«
; 2941 : 		}
; 2942 : 		d2 += 12 * 4;						//î´??????????
; 2943 : 		fseek(fp, d2, SEEK_CUR);			//??????????î®

  000e9	6a 01		 push	 1
  000eb	8d 51 0e	 lea	 edx, DWORD PTR [ecx+14]
  000ee	89 75 e4	 mov	 DWORD PTR _d0$1$[ebp], esi
  000f1	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  000f4	0f 44 c2	 cmove	 eax, edx
  000f7	83 c0 30	 add	 eax, 48			; 00000030H
  000fa	50		 push	 eax
  000fb	57		 push	 edi
  000fc	e8 00 00 00 00	 call	 _fseek

; 2944 : 
; 2945 : 		//????î¿?îº
; 2946 : 		d1 = fgetc(fp);					//????î¿????î?î?

  00101	57		 push	 edi
  00102	e8 00 00 00 00	 call	 _fgetc

; 2947 : 		d1 |= fgetc(fp) << 8;			//

  00107	57		 push	 edi
  00108	8b f0		 mov	 esi, eax
  0010a	e8 00 00 00 00	 call	 _fgetc
  0010f	c1 e0 08	 shl	 eax, 8

; 2948 : 		d1 |= fgetc(fp) << 16;			//

  00112	57		 push	 edi
  00113	0b f0		 or	 esi, eax
  00115	e8 00 00 00 00	 call	 _fgetc
  0011a	c1 e0 10	 shl	 eax, 16			; 00000010H

; 2949 : 		d1 |= fgetc(fp) << 24;			//

  0011d	57		 push	 edi
  0011e	0b f0		 or	 esi, eax
  00120	e8 00 00 00 00	 call	 _fgetc
  00125	c1 e0 18	 shl	 eax, 24			; 00000018H
  00128	83 c4 30	 add	 esp, 48			; 00000030H
  0012b	0b f0		 or	 esi, eax

; 2950 : 		if (d1 < 0)

  0012d	7d 04		 jge	 SHORT $LN12@play_bgm

; 2951 : 			thread_loop_start = 0;

  0012f	33 f6		 xor	 esi, esi
  00131	eb 04		 jmp	 SHORT $LN13@play_bgm
$LN12@play_bgm:

; 2952 : 		else
; 2953 : 			thread_loop_start = d1 * d0;	//????îº???

  00133	0f af 75 e4	 imul	 esi, DWORD PTR _d0$1$[ebp]
$LN13@play_bgm:

; 2954 : 		//???î·??îº
; 2955 : 		d1 = fgetc(fp);

  00137	57		 push	 edi
  00138	89 35 00 00 00
	00		 mov	 DWORD PTR ?thread_loop_start@@3HA, esi
  0013e	e8 00 00 00 00	 call	 _fgetc

; 2956 : 		d1 |= fgetc(fp) << 8;

  00143	57		 push	 edi
  00144	8b f0		 mov	 esi, eax
  00146	e8 00 00 00 00	 call	 _fgetc
  0014b	c1 e0 08	 shl	 eax, 8

; 2957 : 		d1 |= fgetc(fp) << 16;

  0014e	57		 push	 edi
  0014f	0b f0		 or	 esi, eax
  00151	e8 00 00 00 00	 call	 _fgetc
  00156	c1 e0 10	 shl	 eax, 16			; 00000010H

; 2958 : 		d1 |= fgetc(fp) << 24;

  00159	57		 push	 edi
  0015a	0b f0		 or	 esi, eax
  0015c	e8 00 00 00 00	 call	 _fgetc
  00161	c1 e0 18	 shl	 eax, 24			; 00000018H

; 2959 : 		//		thread_loop_end = d1 * d0;
; 2960 : 
; 2961 : 		fclose(fp);

  00164	57		 push	 edi
  00165	0b f0		 or	 esi, eax
  00167	e8 00 00 00 00	 call	 _fclose

; 2962 : #else
; 2963 : 		thread_loop_start = bgm_tbl[bgm_no].loop_point << 1;
; 2964 : #endif
; 2965 : 		//		thread_loop_start = bgm_tbl[bgm_no].loop_start;
; 2966 : 		//		thread_loop_end = bgm_tbl[bgm_no].loop_end;
; 2967 : 		//		if( dwSoundInit2( &Wfmtx, DataSize, &pDSData_tone[TONE_MAX], hmmio ) == FALSE ){
; 2968 : 		if (dwSoundInit2(&Wfmtx, DataSize, &pDSData_stream, hmmio) == FALSE) {

  0016c	8b 7d dc	 mov	 edi, DWORD PTR _hmmio$1$[ebp]
  0016f	8d 45 e8	 lea	 eax, DWORD PTR _Wfmtx$[ebp]
  00172	57		 push	 edi
  00173	68 00 00 00 00	 push	 OFFSET ?pDSData_stream@@3PAUIDirectSoundBuffer@@A ; pDSData_stream
  00178	ff 75 e0	 push	 DWORD PTR _DataSize$[ebp]
  0017b	50		 push	 eax
  0017c	e8 00 00 00 00	 call	 ?dwSoundInit2@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@PAUHMMIO__@@@Z ; dwSoundInit2
  00181	83 c4 24	 add	 esp, 36			; 00000024H
  00184	85 c0		 test	 eax, eax
  00186	0f 84 fb 00 00
	00		 je	 $LN21@play_bgm

; 2969 : #ifdef  _STONDEBUG_
; 2970 : 			MessageBox(hWnd, "å»ºç«å£°é³çbufferå¤±è´¥ï¼", "Error", MB_OK);
; 2971 : #endif
; 2972 : 			return FALSE;
; 2973 : 		}
; 2974 : #if BGM_AUTO_LOOP
; 2975 : 		if (d1 > 0)

  0018c	85 f6		 test	 esi, esi
  0018e	7e 4e		 jle	 SHORT $LN17@play_bgm

; 2976 : 			sd.dwWaveSize = d1 * d0;		//???î·??îº????????????????

  00190	0f af 75 e4	 imul	 esi, DWORD PTR _d0$1$[ebp]
  00194	89 35 14 00 00
	00		 mov	 DWORD PTR ?sd@@3USoundData@@A+20, esi

; 2977 : #endif
; 2978 : 	}

  0019a	eb 42		 jmp	 SHORT $LN17@play_bgm
$LN8@play_bgm:

; 2979 : 	else {
; 2980 : 		thread_stop_flg = 0;		//?????
; 2981 : 		if (dwSoundInit(&Wfmtx, DataSize, &pDSData_tone[TONE_MAX]) == FALSE) {

  0019c	68 d0 07 00 00	 push	 OFFSET ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  001a1	50		 push	 eax
  001a2	8d 45 e8	 lea	 eax, DWORD PTR _Wfmtx$[ebp]
  001a5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?thread_stop_flg@@3HA, 0
  001af	50		 push	 eax
  001b0	e8 00 00 00 00	 call	 ?dwSoundInit@@YAHPAUtWAVEFORMATEX@@KPAPAUIDirectSoundBuffer@@@Z ; dwSoundInit
  001b5	83 c4 0c	 add	 esp, 12			; 0000000cH
  001b8	85 c0		 test	 eax, eax
  001ba	0f 84 c7 00 00
	00		 je	 $LN21@play_bgm

; 2982 : #ifdef  _STONDEBUG_
; 2983 : 			MessageBox(hWnd, "å»ºç«å£°é³çbufferå¤±è´¥ï¼", "Error", MB_OK);
; 2984 : #endif
; 2985 : 			return FALSE;
; 2986 : 		}
; 2987 : 		//???????
; 2988 : 		if (WaveDataRead(hmmio, &DataSize, pDSData_tone[TONE_MAX]) == FALSE) {

  001c0	ff 35 d0 07 00
	00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  001c6	8b 7d dc	 mov	 edi, DWORD PTR _hmmio$1$[ebp]
  001c9	8d 45 e0	 lea	 eax, DWORD PTR _DataSize$[ebp]
  001cc	50		 push	 eax
  001cd	57		 push	 edi
  001ce	e8 00 00 00 00	 call	 ?WaveDataRead@@YAHPAUHMMIO__@@PAKPAUIDirectSoundBuffer@@@Z ; WaveDataRead
  001d3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001d6	85 c0		 test	 eax, eax
  001d8	0f 84 a9 00 00
	00		 je	 $LN21@play_bgm
$LN17@play_bgm:

; 2993 : 		}
; 2994 : 	}
; 2995 : 	mmioClose(hmmio, 0);

  001de	6a 00		 push	 0
  001e0	57		 push	 edi
  001e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mmioClose@8

; 2996 : 
; 2997 : 	//??????
; 2998 : 	pDSData_tone[TONE_MAX]->SetFrequency((DWORD)freq_tbl[36 + 1 + t_music_bgm_pitch[bgm_no]]);

  001e7	8b 45 d8	 mov	 eax, DWORD PTR tv423[ebp]
  001ea	8b 0d d0 07 00
	00		 mov	 ecx, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  001f0	0f be 80 00 00
	00 00		 movsx	 eax, BYTE PTR ?t_music_bgm_pitch@@3PADA[eax]
  001f7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001f9	ff 34 85 94 00
	00 00		 push	 DWORD PTR ?freq_tbl@@3PAHA[eax*4+148]
  00200	51		 push	 ecx
  00201	ff 52 44	 call	 DWORD PTR [edx+68]

; 2999 : 	//?????
; 3000 : 	pDSData_tone[TONE_MAX]->SetVolume(volume_tbl[bgm_tbl[bgm_no].volume * t_music_bgm_volume / 15]);		// ????????

  00204	8b 8b 04 00 00
	00		 mov	 ecx, DWORD PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[ebx+4]
  0020a	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0020f	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?t_music_bgm_volume@@3HA ; t_music_bgm_volume
  00216	8b 35 d0 07 00
	00		 mov	 esi, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  0021c	8b 3e		 mov	 edi, DWORD PTR [esi]
  0021e	f7 e9		 imul	 ecx
  00220	03 d1		 add	 edx, ecx
  00222	c1 fa 03	 sar	 edx, 3
  00225	8b c2		 mov	 eax, edx
  00227	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0022a	03 c2		 add	 eax, edx
  0022c	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  00233	56		 push	 esi
  00234	ff 57 3c	 call	 DWORD PTR [edi+60]

; 3001 : 
; 3002 : 	//????î?î¿
; 3003 : 	if (bgm_tbl[bgm_no].loop_flg) {		//?????

  00237	80 bb 08 00 00
	00 00		 cmp	 BYTE PTR ?bgm_tbl@@3PAUT_MUSIC_BGM@@A[ebx+8], 0
  0023e	a1 d0 07 00 00	 mov	 eax, DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A+2000
  00243	8b 08		 mov	 ecx, DWORD PTR [eax]
  00245	74 04		 je	 SHORT $LN18@play_bgm

; 3004 : 		pDSData_tone[TONE_MAX]->Play(0, 0, DSBPLAY_LOOPING);

  00247	6a 01		 push	 1

; 3005 : 	}

  00249	eb 02		 jmp	 SHORT $LN25@play_bgm
$LN18@play_bgm:

; 3006 : 	else {
; 3007 : 		pDSData_tone[TONE_MAX]->Play(0, 0, 0);

  0024b	6a 00		 push	 0
$LN25@play_bgm:

; 3008 : 	}
; 3009 : 
; 3010 : 	//?î????î±?îî¼
; 3011 : 	t_music_bgm_no = bgm_no;

  0024d	6a 00		 push	 0
  0024f	6a 00		 push	 0
  00251	50		 push	 eax
  00252	ff 51 30	 call	 DWORD PTR [ecx+48]
  00255	8b 45 d8	 mov	 eax, DWORD PTR tv423[ebp]
  00258	a3 00 00 00 00	 mov	 DWORD PTR ?t_music_bgm_no@@3HA, eax ; t_music_bgm_no

; 3012 : 
; 3013 : 	// ????????
; 3014 : 	NowTime = TimeGetTime();

  0025d	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime
  00262	5f		 pop	 edi
  00263	5e		 pop	 esi
  00264	a3 00 00 00 00	 mov	 DWORD PTR ?NowTime@@3KA, eax ; NowTime

; 3015 : 
; 3016 : 	//?î???????
; 3017 : 	t_music_playing_flg = 1;
; 3018 : 
; 3019 : 	//?î????î±?îî¼
; 3020 : 	//map_bgm_no = t_music_bgm_no;
; 3021 : 
; 3022 : 	return TRUE;

  00269	b8 01 00 00 00	 mov	 eax, 1
  0026e	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?t_music_playing_flg@@3HA, 1 ; t_music_playing_flg
  00278	5b		 pop	 ebx

; 3023 : }

  00279	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0027c	33 cd		 xor	 ecx, ebp
  0027e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00283	8b e5		 mov	 esp, ebp
  00285	5d		 pop	 ebp
  00286	c3		 ret	 0
$LN21@play_bgm:
  00287	5f		 pop	 edi
  00288	5e		 pop	 esi

; 2989 : #ifdef  _STONDEBUG_
; 2990 : 			MessageBox(hWnd, "è¯»åWAVæ¡£çèµæå¤±è´¥ï¼", "Error", MB_OK);
; 2991 : #endif
; 2992 : 			return FALSE;

  00289	33 c0		 xor	 eax, eax
  0028b	5b		 pop	 ebx

; 3023 : }

  0028c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0028f	33 cd		 xor	 ecx, ebp
  00291	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00296	8b e5		 mov	 esp, ebp
  00298	5d		 pop	 ebp
  00299	c3		 ret	 0
$LN22@play_bgm:
  0029a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0029d	83 c8 ff	 or	 eax, -1
  002a0	33 cd		 xor	 ecx, ebp
  002a2	5b		 pop	 ebx
  002a3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002a8	8b e5		 mov	 esp, ebp
  002aa	5d		 pop	 ebp
  002ab	c3		 ret	 0
?play_bgm@@YAHH@Z ENDP					; play_bgm
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?play_se@@YAHHHH@Z
_TEXT	SEGMENT
_x$2$ = -4						; size = 4
_tone$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?play_se@@YAHHHH@Z PROC					; play_se, COMDAT

; 3058 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 3059 : #ifdef _NB_CANCEL_BGM
; 3060 : 	if (å£°é³å¼å³) return -1;

  00004	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ??ëå??@@3HA, 0 ; ?ëå??
  0000b	53		 push	 ebx
  0000c	56		 push	 esi
  0000d	0f 85 da 01 00
	00		 jne	 $LN25@play_se

; 3061 : #endif
; 3062 : 	int d0;
; 3063 : 	int total_level = 127;
; 3064 : 	t_music_se_no = tone;
; 3065 : 
; 3066 : 	if (dsound_flg == -1)

  00013	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR _tone$[ebp]
  0001d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?t_music_se_no@@3HA, ecx ; t_music_se_no
  00023	0f 84 c4 01 00
	00		 je	 $LN25@play_se

; 3067 : 		return -1;
; 3068 : 
; 3069 : 	if (tone > TONE_MAX) {		//?????î¯??

  00029	81 f9 f4 01 00
	00		 cmp	 ecx, 500		; 000001f4H
  0002f	0f 8f b8 01 00
	00		 jg	 $LN25@play_se

; 3070 : 		return -1;
; 3071 : 	}
; 3072 : 
; 3073 : 	if (tone_tbl[tone].voice_place == -1) {		//î ¹î??î??

  00035	8b d9		 mov	 ebx, ecx
  00037	c1 e3 05	 shl	 ebx, 5
  0003a	8b b3 00 00 00
	00		 mov	 esi, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx]
  00040	83 fe ff	 cmp	 esi, -1
  00043	0f 84 a4 01 00
	00		 je	 $LN25@play_se

; 3075 : 	}
; 3076 : 
; 3077 : 
; 3078 : 	//CCIS_WXscript 20160825
; 3079 : 	//ä¸ç¥éè¿éä¸ºå¥è¦play_time
; 3080 : 	//å»æä»¥åé³æå¥½åæ­£å¸¸å·¥ä½
; 3081 : 	//if(tone_tbl[ tone ].play_time){		//???î???
; 3082 : 	//	return 0;
; 3083 : 	//}
; 3084 : 
; 3085 : 	//î·???îî±????
; 3086 : 	d0 = voice[voice_seek_point].tone_no;

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  0004e	8b d0		 mov	 edx, eax
  00050	c1 e2 04	 shl	 edx, 4
  00053	2b d0		 sub	 edx, eax
  00055	57		 push	 edi
  00056	8b 3c 95 04 00
	00 00		 mov	 edi, DWORD PTR ?voice@@3PAUVOICE_EQU@@A[edx*4+4]

; 3087 : 	if (voice[voice_seek_point].tone_no != tone) {		//î¯??îî±??????

  0005d	3b f9		 cmp	 edi, ecx
  0005f	74 76		 je	 SHORT $LN8@play_se

; 3088 : 		voice[voice_seek_point].tone_no = tone;		//?îî±?îî¼

  00061	89 0c 95 04 00
	00 00		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[edx*4+4], ecx

; 3089 : 		//???????????îî¤î§î²?????
; 3090 : 		if (d0 != -2) {

  00068	83 ff fe	 cmp	 edi, -2			; fffffffeH
  0006b	74 27		 je	 SHORT $LN11@play_se

; 3091 : 			RELEASE(pDSData[voice_seek_point]);		//?î´

  0006d	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00074	85 c9		 test	 ecx, ecx
  00076	74 1c		 je	 SHORT $LN11@play_se
  00078	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007a	51		 push	 ecx
  0007b	ff 50 08	 call	 DWORD PTR [eax+8]
  0007e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  00083	8b b3 00 00 00
	00		 mov	 esi, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx]
  00089	c7 04 85 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4], 0
$LN11@play_se:

; 3092 : 		}
; 3093 : 		//?î???
; 3094 : 		if (pDSound->DuplicateSoundBuffer(pDSData_tone[tone_tbl[tone].voice_place], &pDSData[voice_seek_point]) != DS_OK) {

  00094	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?pDSound@@3PAUIDirectSound@@A ; pDSound
  0009a	8d 04 85 00 00
	00 00		 lea	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  000a1	50		 push	 eax
  000a2	ff 34 b5 00 00
	00 00		 push	 DWORD PTR ?pDSData_tone@@3PAPAUIDirectSoundBuffer@@A[esi*4]
  000a9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ab	51		 push	 ecx
  000ac	ff 52 14	 call	 DWORD PTR [edx+20]
  000af	85 c0		 test	 eax, eax
  000b1	74 33		 je	 SHORT $LN9@play_se

; 3095 : #ifdef  _STONDEBUG_
; 3096 : 			MessageBox(hWnd, "å¤å¶å£°é³bufferå¤±è´¥ï¼", "Error", MB_OK);
; 3097 : #endif
; 3098 : 			//???????????îî¤î§î²??????
; 3099 : 			voice[voice_seek_point].tone_no = -2;

  000b3	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?voice_seek_point@@3HA
  000b9	c1 e1 04	 shl	 ecx, 4
  000bc	2b 0d 00 00 00
	00		 sub	 ecx, DWORD PTR ?voice_seek_point@@3HA

; 3100 : 			return -1;

  000c2	83 c8 ff	 or	 eax, -1
  000c5	5f		 pop	 edi
  000c6	5e		 pop	 esi

; 3168 : }

  000c7	5b		 pop	 ebx
  000c8	c7 04 8d 04 00
	00 00 fe ff ff
	ff		 mov	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+4], -2 ; fffffffeH
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c3		 ret	 0
$LN8@play_se:

; 3101 : 		}
; 3102 : 	}
; 3103 : 	else {
; 3104 : 		pDSData[voice_seek_point]->SetCurrentPosition(0);	//?î????????

  000d7	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  000de	6a 00		 push	 0
  000e0	50		 push	 eax
  000e1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e3	ff 51 34	 call	 DWORD PTR [ecx+52]
$LN9@play_se:

; 3105 : 	}
; 3106 : #if 0
; 3107 : 	total_level = abs(y - 240);		//?î?????î³???
; 3108 : 	y = abs(x - 320) >> 1;		//?î?????î³???
; 3109 : 	if (total_level < y)		//??îµ??
; 3110 : 		total_level = y;		//
; 3111 : 
; 3112 : 	total_level = total_level << 4;		//?????î±?î?
; 3113 : 	total_level /= 0x5a;				//
; 3114 : 
; 3115 : 	if (total_level >= 127)		//îª????
; 3116 : 		return 0;			//î¡????
; 3117 : 
; 3118 : 	total_level = 127 - total_level;				//
; 3119 : 
; 3120 : #endif
; 3121 : 
; 3122 : 	if (stereo_flg == T_MUSIC_MONO) {		//??????

  000e6	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?stereo_flg@@3HA, 0 ; stereo_flg
  000ed	75 09		 jne	 SHORT $LN13@play_se

; 3123 : 		x = 64;

  000ef	c7 45 fc 40 00
	00 00		 mov	 DWORD PTR _x$2$[ebp], 64 ; 00000040H

; 3124 : 	}

  000f6	eb 26		 jmp	 SHORT $LN16@play_se
$LN13@play_se:

; 3125 : 	else {
; 3126 : 		x /= 5;			//?????î±?î?

  000f8	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H

; 3127 : 		if (x < 0)		//
; 3128 : 			x = 0;		//
; 3129 : 		if (x > 127)		//

  000fd	b9 00 00 00 00	 mov	 ecx, 0
  00102	f7 6d 0c	 imul	 DWORD PTR _x$[ebp]
  00105	d1 fa		 sar	 edx, 1
  00107	8b c2		 mov	 eax, edx
  00109	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0010c	03 c2		 add	 eax, edx
  0010e	0f 49 c8	 cmovns	 ecx, eax
  00111	b8 7f 00 00 00	 mov	 eax, 127		; 0000007fH
  00116	3b c8		 cmp	 ecx, eax
  00118	0f 4f c8	 cmovg	 ecx, eax
  0011b	89 4d fc	 mov	 DWORD PTR _x$2$[ebp], ecx
$LN16@play_se:

; 3130 : 			x = 127;	//
; 3131 : 	}
; 3132 : 
; 3133 : 	//?î?????
; 3134 : 	total_level = 127 * tone_tbl[tone].voice_volume / 127;
; 3135 : 	//	total_level = total_level * tone_tbl[ tone ].voice_volume / 127;
; 3136 : 
; 3137 : 		//?????????
; 3138 : 	total_level = total_level * t_music_se_volume / 15;
; 3139 : 
; 3140 : 	pDSData[voice_seek_point]->SetVolume(volume_tbl[total_level]);		// ????????

  0011e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  00123	8b 8b 0c 00 00
	00		 mov	 ecx, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx+12]
  00129	0f af 0d 00 00
	00 00		 imul	 ecx, DWORD PTR ?t_music_se_volume@@3HA ; t_music_se_volume
  00130	8b 34 85 00 00
	00 00		 mov	 esi, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00137	b8 89 88 88 88	 mov	 eax, -2004318071	; 88888889H
  0013c	f7 e9		 imul	 ecx
  0013e	8b 3e		 mov	 edi, DWORD PTR [esi]
  00140	03 d1		 add	 edx, ecx
  00142	c1 fa 03	 sar	 edx, 3
  00145	8b c2		 mov	 eax, edx
  00147	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0014a	03 c2		 add	 eax, edx
  0014c	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?volume_tbl@@3PAJA[eax*4]
  00153	56		 push	 esi
  00154	ff 57 3c	 call	 DWORD PTR [edi+60]

; 3141 : 	pDSData[voice_seek_point]->SetPan(panpot_tbl[x]);			// ????????

  00157	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  0015c	8b 55 fc	 mov	 edx, DWORD PTR _x$2$[ebp]
  0015f	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00166	ff 34 95 00 00
	00 00		 push	 DWORD PTR ?panpot_tbl@@3PAJA[edx*4]
  0016d	50		 push	 eax
  0016e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00170	ff 51 40	 call	 DWORD PTR [ecx+64]

; 3142 : 	if (tone_tbl[tone].voice_note) {		//???î±?îî??

  00173	8b b3 10 00 00
	00		 mov	 esi, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx+16]
  00179	85 f6		 test	 esi, esi
  0017b	74 21		 je	 SHORT $LN17@play_se

; 3143 : 		pDSData[voice_seek_point]->SetFrequency(

  0017d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  00182	8b 0c 85 00 00
	00 00		 mov	 ecx, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  00189	8b 83 18 00 00
	00		 mov	 eax, DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx+24]
  0018f	03 c6		 add	 eax, esi
  00191	8b 11		 mov	 edx, DWORD PTR [ecx]
  00193	ff 34 85 00 00
	00 00		 push	 DWORD PTR ?freq_tbl@@3PAHA[eax*4]
  0019a	51		 push	 ecx
  0019b	ff 52 44	 call	 DWORD PTR [edx+68]
$LN17@play_se:

; 3144 : 			(DWORD)freq_tbl[tone_tbl[tone].voice_note + tone_tbl[tone].voice_rate]);
; 3145 : 	}
; 3146 : 
; 3147 : #if 0
; 3148 : 	if (tone_tbl[tone].voice_loop == 0) {		//???î¡???
; 3149 : 		pDSData[voice_seek_point]->Play(0, 0, 0);			//????
; 3150 : 	}
; 3151 : 	else {
; 3152 : 		voice[voice_seek_point].loop_flg = 1;		//????î
; 3153 : 		pDSData[voice_seek_point]->Play(0, 0, DSBPLAY_LOOPING);		//????
; 3154 : 	}
; 3155 : #else
; 3156 : 	pDSData[voice_seek_point]->Play(0, 0, 0);			//????

  0019e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  001a3	6a 00		 push	 0
  001a5	6a 00		 push	 0
  001a7	6a 00		 push	 0
  001a9	8b 04 85 00 00
	00 00		 mov	 eax, DWORD PTR ?pDSData@@3PAPAUIDirectSoundBuffer@@A[eax*4]
  001b0	50		 push	 eax
  001b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b3	ff 51 30	 call	 DWORD PTR [ecx+48]
  001b6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?voice_seek_point@@3HA
  001bb	0f 1f 44 00 00	 npad	 5
$LL2@play_se:

; 3157 : #endif
; 3158 : 	while (1) {
; 3159 : 		voice_seek_point++;		//??????î¡

  001c0	40		 inc	 eax

; 3160 : 		voice_seek_point &= VOICE_MAX - 1;				//

  001c1	83 e0 3f	 and	 eax, 63			; 0000003fH

; 3161 : 		if (voice[voice_seek_point].loop_flg == 0) {		//????î??????

  001c4	8b c8		 mov	 ecx, eax
  001c6	c1 e1 04	 shl	 ecx, 4
  001c9	2b c8		 sub	 ecx, eax
  001cb	83 3c 8d 30 00
	00 00 00	 cmp	 DWORD PTR ?voice@@3PAUVOICE_EQU@@A[ecx*4+48], 0
  001d3	75 eb		 jne	 SHORT $LL2@play_se

; 3160 : 		voice_seek_point &= VOICE_MAX - 1;				//

  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	a3 00 00 00 00	 mov	 DWORD PTR ?voice_seek_point@@3HA, eax

; 3162 : 			break;
; 3163 : 		}
; 3164 : 	}
; 3165 : 	tone_tbl[tone].play_time = 5;		//?î??????
; 3166 : 
; 3167 : 	return 0;

  001dc	33 c0		 xor	 eax, eax
  001de	c7 83 14 00 00
	00 05 00 00 00	 mov	 DWORD PTR ?tone_tbl@@3PAUTONE_EQU@@A[ebx+20], 5

; 3168 : }

  001e8	5b		 pop	 ebx
  001e9	8b e5		 mov	 esp, ebp
  001eb	5d		 pop	 ebp
  001ec	c3		 ret	 0
$LN25@play_se:
  001ed	5e		 pop	 esi

; 3074 : 		return -1;

  001ee	83 c8 ff	 or	 eax, -1

; 3168 : }

  001f1	5b		 pop	 ebx
  001f2	8b e5		 mov	 esp, ebp
  001f4	5d		 pop	 ebp
  001f5	c3		 ret	 0
?play_se@@YAHHHH@Z ENDP					; play_se
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?cdda_stop@@YA_NXZ
_TEXT	SEGMENT
?cdda_stop@@YA_NXZ PROC					; cdda_stop, COMDAT

; 3665 : 	if (cdda_flg == 1)		//??????????

  00000	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?cdda_flg@@3HA, 1
  00007	74 36		 je	 SHORT $LN3@cdda_stop

; 3666 : 		return TRUE;
; 3667 : 
; 3668 : 	mciSendCommand(open.wDeviceID, MCI_STOP, 0, NULL);

  00009	6a 00		 push	 0
  0000b	6a 00		 push	 0
  0000d	68 08 08 00 00	 push	 2056			; 00000808H
  00012	ff 35 04 00 00
	00		 push	 DWORD PTR ?open@@3UtagMCI_OPEN_PARMSA@@A+4
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mciSendCommandA@16

; 3669 : 
; 3670 : 	// ?????î¼??
; 3671 : 	dwRes = mciSendCommand(open.wDeviceID, MCI_CLOSE, 0, (DWORD)NULL);

  0001e	6a 00		 push	 0
  00020	6a 00		 push	 0
  00022	68 04 08 00 00	 push	 2052			; 00000804H
  00027	ff 35 04 00 00
	00		 push	 DWORD PTR ?open@@3UtagMCI_OPEN_PARMSA@@A+4
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__mciSendCommandA@16
  00033	a3 00 00 00 00	 mov	 DWORD PTR ?dwRes@@3KA, eax

; 3672 : 	if (dwRes)

  00038	85 c0		 test	 eax, eax
  0003a	74 03		 je	 SHORT $LN3@cdda_stop

; 3673 : 	{
; 3674 : #ifdef  _STONDEBUG_
; 3675 : 		//	    MessageBox(hWnd, "??????????????", "??", MB_OK);
; 3676 : #endif
; 3677 : 		return FALSE;

  0003c	32 c0		 xor	 al, al

; 3680 : }

  0003e	c3		 ret	 0
$LN3@cdda_stop:

; 3678 : 	}
; 3679 : 	return TRUE;

  0003f	b0 01		 mov	 al, 1

; 3680 : }

  00041	c3		 ret	 0
?cdda_stop@@YA_NXZ ENDP					; cdda_stop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?cdda_play@@YA_NH@Z
_TEXT	SEGMENT
_n$ = 8							; size = 4
?cdda_play@@YA_NH@Z PROC				; cdda_play, COMDAT

; 3689 : 	check_se_loop();		//????????

  00000	e8 00 00 00 00	 call	 ?check_se_loop@@YAXXZ	; check_se_loop

; 3690 : 
; 3691 : 	cdda_flg = 1;		//??????????

  00005	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?cdda_flg@@3HA, 1

; 3692 : 	return TRUE;

  0000f	b0 01		 mov	 al, 1

; 3693 : 
; 3694 : 	if (cdda_flg == 1)		//??????????
; 3695 : 		return TRUE;
; 3696 : 
; 3697 : 	if (cdda_no != n) {		//??î????
; 3698 : 		cdda_flg = 0;		//??????
; 3699 : 		cdda_check_cnt = -1;
; 3700 : 	}
; 3701 : 
; 3702 : 	if (cdda_flg)		//??????
; 3703 : 		return TRUE;
; 3704 : 
; 3705 : 	cdda_check_cnt++;
; 3706 : 	cdda_check_cnt &= 63;
; 3707 : 	if (cdda_check_cnt)
; 3708 : 		return TRUE;
; 3709 : 
; 3710 : 	if (cdda_no == n) {		//?î???
; 3711 : 		MCI_STATUS_PARMS mcisp;	mcisp.dwItem = MCI_STATUS_MODE;
; 3712 : 		if (mciSendCommand(open.wDeviceID, MCI_STATUS, MCI_STATUS_ITEM, (DWORD)&mcisp)) {		//?î¹??
; 3713 : 			cdda_flg = 3;		//??????????î¹
; 3714 : 			return FALSE;
; 3715 : 		}
; 3716 : 		if (mcisp.dwReturn == MCI_MODE_PLAY) {		//?î???
; 3717 : 			return TRUE;
; 3718 : 		}
; 3719 : 		else {		//î?????
; 3720 : 			cdda_no = Rnd(11, 34);
; 3721 : 			cdda_start(cdda_no);
; 3722 : 			// ???î½?î ????
; 3723 : 			NowTime = TimeGetTime();
; 3724 : 			return TRUE;
; 3725 : 		}
; 3726 : 	}
; 3727 : 	else {
; 3728 : 		cdda_no = n;		//?î??
; 3729 : 		cdda_stop();
; 3730 : 		cdda_open(n);
; 3731 : 		cdda_start(n);
; 3732 : 		// ???î½?î ????
; 3733 : 		NowTime = TimeGetTime();
; 3734 : 	}
; 3735 : 	return TRUE;
; 3736 : }

  00011	c3		 ret	 0
?cdda_play@@YA_NH@Z ENDP				; cdda_play
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?check_se_loop@@YAXXZ
_TEXT	SEGMENT
?check_se_loop@@YAXXZ PROC				; check_se_loop, COMDAT

; 3556 : 	int d7;
; 3557 : 
; 3558 : 	if (dsound_flg == -1)

  00000	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00007	74 57		 je	 SHORT $LN1@check_se_l

; 3559 : 		return;
; 3560 : 	for (d7 = 0; d7 < TONE_MAX; d7++) {

  00009	b8 34 00 00 00	 mov	 eax, OFFSET ?tone_tbl@@3PAUTONE_EQU@@A+52
  0000e	66 90		 npad	 2
$LL4@check_se_l:

; 3561 : 		if (tone_tbl[d7].play_time) {		//?î???î¡

  00010	8b 48 e0	 mov	 ecx, DWORD PTR [eax-32]
  00013	85 c9		 test	 ecx, ecx
  00015	74 04		 je	 SHORT $LN2@check_se_l

; 3562 : 			tone_tbl[d7].play_time--;

  00017	49		 dec	 ecx
  00018	89 48 e0	 mov	 DWORD PTR [eax-32], ecx
$LN2@check_se_l:

; 3561 : 		if (tone_tbl[d7].play_time) {		//?î???î¡

  0001b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0001d	85 c9		 test	 ecx, ecx
  0001f	74 03		 je	 SHORT $LN22@check_se_l

; 3562 : 			tone_tbl[d7].play_time--;

  00021	49		 dec	 ecx
  00022	89 08		 mov	 DWORD PTR [eax], ecx
$LN22@check_se_l:

; 3561 : 		if (tone_tbl[d7].play_time) {		//?î???î¡

  00024	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  00027	85 c9		 test	 ecx, ecx
  00029	74 04		 je	 SHORT $LN23@check_se_l

; 3562 : 			tone_tbl[d7].play_time--;

  0002b	49		 dec	 ecx
  0002c	89 48 20	 mov	 DWORD PTR [eax+32], ecx
$LN23@check_se_l:

; 3561 : 		if (tone_tbl[d7].play_time) {		//?î???î¡

  0002f	8b 48 40	 mov	 ecx, DWORD PTR [eax+64]
  00032	85 c9		 test	 ecx, ecx
  00034	74 04		 je	 SHORT $LN24@check_se_l

; 3562 : 			tone_tbl[d7].play_time--;

  00036	49		 dec	 ecx
  00037	89 48 40	 mov	 DWORD PTR [eax+64], ecx
$LN24@check_se_l:

; 3561 : 		if (tone_tbl[d7].play_time) {		//?î???î¡

  0003a	8b 48 60	 mov	 ecx, DWORD PTR [eax+96]
  0003d	85 c9		 test	 ecx, ecx
  0003f	74 04		 je	 SHORT $LN15@check_se_l

; 3562 : 			tone_tbl[d7].play_time--;

  00041	49		 dec	 ecx
  00042	89 48 60	 mov	 DWORD PTR [eax+96], ecx
$LN15@check_se_l:

; 3559 : 		return;
; 3560 : 	for (d7 = 0; d7 < TONE_MAX; d7++) {

  00045	05 a0 00 00 00	 add	 eax, 160		; 000000a0H
  0004a	3d b4 3e 00 00	 cmp	 eax, OFFSET ?tone_tbl@@3PAUTONE_EQU@@A+16052
  0004f	7c bf		 jl	 SHORT $LL4@check_se_l

; 3563 : 		}
; 3564 : 	}
; 3565 : 	//???????
; 3566 : 	play_environment_check();

  00051	e8 00 00 00 00	 call	 ?play_environment_check@@YAXXZ ; play_environment_check

; 3567 : 	//??????????
; 3568 : 	play_map_bgm_check();

  00056	e8 00 00 00 00	 call	 ?play_map_bgm_check@@YAXXZ ; play_map_bgm_check

; 3569 : 	//???????????????
; 3570 : 	bgm_fade_check();

  0005b	e9 00 00 00 00	 jmp	 ?bgm_fade_check@@YAXXZ	; bgm_fade_check
$LN1@check_se_l:

; 3571 : }

  00060	c3		 ret	 0
?check_se_loop@@YAXXZ ENDP				; check_se_loop
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?t_music_end@@YAXXZ
_TEXT	SEGMENT
?t_music_end@@YAXXZ PROC				; t_music_end, COMDAT

; 2474 : 	//???????î¹??
; 2475 : 	if (dsound_flg == -1)

  00000	83 3d 00 00 00
	00 ff		 cmp	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg
  00007	0f 85 00 00 00
	00		 jne	 ?EndApp@@YAHXZ		; EndApp

; 2476 : 		return;
; 2477 : #if THREAD_ON
; 2478 : 	//	thread_flg=1;
; 2479 : 	//	while(thread_flg!=2);
; 2480 : #endif
; 2481 : 	EndApp();
; 2482 : }

  0000d	c3		 ret	 0
?t_music_end@@YAXXZ ENDP				; t_music_end
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\t_music.cpp
;	COMDAT ?t_music_init@@YAHXZ
_TEXT	SEGMENT
?t_music_init@@YAHXZ PROC				; t_music_init, COMDAT

; 2432 : 	if (GetAsyncKeyState(VK_SHIFT) & 0x8000) {		//?????????????

  00000	6a 10		 push	 16			; 00000010H
  00002	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetAsyncKeyState@4
  00008	66 0f ba e0 0f	 bt	 ax, 15			; 0000000fH
  0000d	72 14		 jb	 SHORT $LN5@t_music_in

; 2433 : 		dsound_flg = -1;
; 2434 : 		return FALSE;
; 2435 : 	}
; 2436 : 	if (!InitDSound()) {

  0000f	e8 00 00 00 00	 call	 ?InitDSound@@YAHXZ	; InitDSound
  00014	85 c0		 test	 eax, eax
  00016	74 0b		 je	 SHORT $LN5@t_music_in

; 2439 : 	}
; 2440 : 	music_init();		//????????

  00018	e8 00 00 00 00	 call	 ?music_init@@YAXXZ	; music_init

; 2441 : 
; 2442 : /*
; 2443 : //cary	è¯»åé³ä¹
; 2444 : 	if(!music_read()){
; 2445 : 		play_start();
; 2446 : 	} else {
; 2447 : 		play_stop();
; 2448 : 		dsound_flg = -1;
; 2449 : 		return FALSE;
; 2450 : 	}
; 2451 : 	QueryPerformanceCounter(&d_cnt);
; 2452 : #if THREAD_ON
; 2453 : 	static DWORD dwChildThreadId = 0;
; 2454 : 	HANDLE hChildThred = CreateThread( NULL,
; 2455 : 										16384,
; 2456 : 										(LPTHREAD_START_ROUTINE)music,
; 2457 : //										(LPVOID)hWnd,
; 2458 : 										NULL,
; 2459 : 										NULL,
; 2460 : 										&dwChildThreadId );
; 2461 : #if CLASS_UP
; 2462 : 	SetThreadPriority(hChildThred,THREAD_PRIORITY_HIGHEST);
; 2463 : #endif
; 2464 : #endif
; 2465 : */
; 2466 : 	return TRUE;

  0001d	b8 01 00 00 00	 mov	 eax, 1

; 2467 : }

  00022	c3		 ret	 0
$LN5@t_music_in:

; 2437 : 		dsound_flg = -1;

  00023	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?dsound_flg@@3HA, -1 ; dsound_flg

; 2438 : 		return FALSE;

  0002d	33 c0		 xor	 eax, eax

; 2467 : }

  0002f	c3		 ret	 0
?t_music_init@@YAHXZ ENDP				; t_music_init
_TEXT	ENDS
END
