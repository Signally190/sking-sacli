; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\loadsprbin.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SpriteData@@3PAUSPRITEDATA@@A			; SpriteData
_BSS	SEGMENT
?SpriteData@@3PAUSPRITEDATA@@A DQ 09c40H DUP (?)	; SpriteData
_BSS	ENDS
PUBLIC	?InitSprBinFileOpen@@YAHPAD0@Z			; InitSprBinFileOpen
PUBLIC	??_C@_02JDPG@rb@				; `string'
EXTRN	_calloc:PROC
EXTRN	_free:PROC
EXTRN	_fclose:PROC
EXTRN	_feof:PROC
EXTRN	_fopen:PROC
EXTRN	_fread:PROC
EXTRN	_fseek:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?nextMaxAdrnID@@3HA:DWORD			; nextMaxAdrnID
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ?Sprflg1@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA
_DATA	SEGMENT
?Sprflg1@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA DD 01H	; `InitSprBinFileOpen'::`2'::Sprflg1
_DATA	ENDS
;	COMDAT ?Sprflg@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA
_DATA	SEGMENT
?Sprflg@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA DD 01H	; `InitSprBinFileOpen'::`2'::Sprflg
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\loadsprbin.cpp
;	COMDAT ?InitSprBinFileOpen@@YAHPAD0@Z
_TEXT	SEGMENT
tv1915 = -60						; size = 4
_fp2$1$ = -56						; size = 4
_fp1$1$ = -52						; size = 4
tv1928 = -48						; size = 4
tv1921 = -48						; size = 4
_k$1$ = -48						; size = 4
tv1922 = -44						; size = 4
_j$1$ = -44						; size = 4
__spradrn$ = -40					; size = 12
_sprdata$ = -28						; size = 12
_sprhead$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_SPR_BIN$ = 8						; size = 4
_SPRADRN_BIN$ = 12					; size = 4
?InitSprBinFileOpen@@YAHPAD0@Z PROC			; InitSprBinFileOpen, COMDAT

; 15   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 3c	 sub	 esp, 60			; 0000003cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _SPR_BIN$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b 75 0c	 mov	 esi, DWORD PTR _SPRADRN_BIN$[ebp]
  00018	57		 push	 edi

; 16   : 	SPRADRN _spradrn;
; 17   : 	ANIM_HEADER sprhead;
; 18   : 	FRAMELIST sprdata;
; 19   : 	FILE *fp1, *fp2;
; 20   : 	int j;
; 21   : 	unsigned int k;
; 22   : 	if ((fp1 = fopen(SPR_BIN, "rb")) == NULL)

  00019	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _fopen
  00024	8b d8		 mov	 ebx, eax
  00026	83 c4 08	 add	 esp, 8
  00029	89 5d cc	 mov	 DWORD PTR _fp1$1$[ebp], ebx
  0002c	85 db		 test	 ebx, ebx
  0002e	0f 84 75 09 00
	00		 je	 $LN109@InitSprBin

; 23   : 		return FALSE;
; 24   : 	if ((fp2 = fopen(SPRADRN_BIN, "rb")) == NULL)

  00034	68 00 00 00 00	 push	 OFFSET ??_C@_02JDPG@rb@
  00039	56		 push	 esi
  0003a	e8 00 00 00 00	 call	 _fopen
  0003f	8b f8		 mov	 edi, eax
  00041	83 c4 08	 add	 esp, 8
  00044	89 7d c8	 mov	 DWORD PTR _fp2$1$[ebp], edi
  00047	85 ff		 test	 edi, edi
  00049	0f 84 5a 09 00
	00		 je	 $LN109@InitSprBin

; 25   : 		return FALSE;
; 26   : 	static BOOL Sprflg = TRUE;
; 27   : 	static BOOL Sprflg1 = TRUE;
; 28   : 	if (Sprflg) {

  0004f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?Sprflg@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA, 0
  00056	74 1e		 je	 SHORT $LN21@InitSprBin

; 29   : 		Sprflg = FALSE;
; 30   : 		memset(SpriteData, 0, sizeof(SpriteData));

  00058	68 00 e2 04 00	 push	 320000			; 0004e200H
  0005d	6a 00		 push	 0
  0005f	68 00 00 00 00	 push	 OFFSET ?SpriteData@@3PAUSPRITEDATA@@A ; SpriteData
  00064	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Sprflg@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA, 0
  0006e	e8 00 00 00 00	 call	 _memset
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN21@InitSprBin:

; 31   : 	}
; 32   : 	int no = 0;
; 33   : 	while (TRUE) {
; 34   : 		fread(&_spradrn, 1, sizeof(_spradrn), fp2);

  00076	57		 push	 edi
  00077	6a 0c		 push	 12			; 0000000cH
  00079	8d 45 d8	 lea	 eax, DWORD PTR __spradrn$[ebp]
  0007c	6a 01		 push	 1
  0007e	50		 push	 eax
  0007f	e8 00 00 00 00	 call	 _fread

; 35   : 		if (feof(fp2) != 0)

  00084	57		 push	 edi
  00085	e8 00 00 00 00	 call	 _feof
  0008a	83 c4 14	 add	 esp, 20			; 00000014H
  0008d	85 c0		 test	 eax, eax
  0008f	0f 85 e5 08 00
	00		 jne	 $LN110@InitSprBin
  00095	66 66 66 0f 1f
	84 00 00 00 00
	00		 npad	 11
$LL2@InitSprBin:

; 36   : 			break;
; 37   : 		no = _spradrn.sprNo - SPRSTART;

  000a0	8b 75 d8	 mov	 esi, DWORD PTR __spradrn$[ebp]
  000a3	81 c6 60 79 fe
	ff		 add	 esi, -100000		; fffe7960H

; 38   : 		if (no > mxSPRITE) break;

  000a9	81 fe 40 9c 00
	00		 cmp	 esi, 40000		; 00009c40H
  000af	0f 8f c5 08 00
	00		 jg	 $LN110@InitSprBin

; 39   : 		SpriteData[no].animSize = _spradrn.animSize;

  000b5	66 8b 45 e0	 mov	 ax, WORD PTR __spradrn$[ebp+8]
  000b9	66 89 04 f5 00
	00 00 00	 mov	 WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8], ax

; 40   : 		SpriteData[no].ptAnimlist = (ANIMLIST*)calloc(SpriteData[no].animSize, sizeof(ANIMLIST));

  000c1	0f b7 c0	 movzx	 eax, ax
  000c4	6a 10		 push	 16			; 00000010H
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 _calloc

; 41   : 		fseek(fp1, _spradrn.offset, SEEK_SET);

  000cc	6a 00		 push	 0
  000ce	ff 75 dc	 push	 DWORD PTR __spradrn$[ebp+4]
  000d1	89 04 f5 04 00
	00 00		 mov	 DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4], eax
  000d8	53		 push	 ebx
  000d9	e8 00 00 00 00	 call	 _fseek

; 42   : 		for (j = 0; j < SpriteData[no].animSize; j++) {

  000de	33 c0		 xor	 eax, eax
  000e0	c7 45 d4 00 00
	00 00		 mov	 DWORD PTR _j$1$[ebp], 0
  000e7	83 c4 14	 add	 esp, 20			; 00000014H
  000ea	66 3b 04 f5 00
	00 00 00	 cmp	 ax, WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8]
  000f2	0f 83 48 01 00
	00		 jae	 $LN108@InitSprBin

; 39   : 		SpriteData[no].animSize = _spradrn.animSize;

  000f8	33 ff		 xor	 edi, edi
  000fa	66 0f 1f 44 00
	00		 npad	 6
$LL6@InitSprBin:

; 43   : 			fread(&sprhead, 1, 12, fp1);

  00100	53		 push	 ebx
  00101	6a 0c		 push	 12			; 0000000cH
  00103	8d 45 f0	 lea	 eax, DWORD PTR _sprhead$[ebp]
  00106	6a 01		 push	 1
  00108	50		 push	 eax
  00109	e8 00 00 00 00	 call	 _fread

; 44   : 			SpriteData[no].ptAnimlist[j].dir = sprhead.dir;

  0010e	8b 0c f5 04 00
	00 00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00115	83 c4 10	 add	 esp, 16			; 00000010H
  00118	0f b7 45 f0	 movzx	 eax, WORD PTR _sprhead$[ebp]
  0011c	66 89 04 0f	 mov	 WORD PTR [edi+ecx], ax

; 45   : 			SpriteData[no].ptAnimlist[j].no = sprhead.no;

  00120	8b 0c f5 04 00
	00 00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00127	0f b7 45 f2	 movzx	 eax, WORD PTR _sprhead$[ebp+2]
  0012b	66 89 44 39 02	 mov	 WORD PTR [ecx+edi+2], ax
  00130	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]

; 46   : 			if (!sprhead.frameCnt) SpriteData[no].ptAnimlist[j].dtAnim = 0;

  00137	8b 4d f8	 mov	 ecx, DWORD PTR _sprhead$[ebp+8]
  0013a	83 c0 04	 add	 eax, 4
  0013d	03 c7		 add	 eax, edi
  0013f	89 45 d0	 mov	 DWORD PTR tv1928[ebp], eax
  00142	85 c9		 test	 ecx, ecx
  00144	75 04		 jne	 SHORT $LN24@InitSprBin
  00146	33 c0		 xor	 eax, eax
  00148	eb 0a		 jmp	 SHORT $LN25@InitSprBin
$LN24@InitSprBin:

; 47   : 			else SpriteData[no].ptAnimlist[j].dtAnim = sprhead.dtAnim / sprhead.frameCnt / 16;

  0014a	8b 45 f4	 mov	 eax, DWORD PTR _sprhead$[ebp+4]
  0014d	33 d2		 xor	 edx, edx
  0014f	f7 f1		 div	 ecx
  00151	c1 e8 04	 shr	 eax, 4
$LN25@InitSprBin:

; 48   : 			SpriteData[no].ptAnimlist[j].frameCnt = sprhead.frameCnt;

  00154	8b 4d d0	 mov	 ecx, DWORD PTR tv1928[ebp]

; 49   : 			SpriteData[no].ptAnimlist[j].ptFramelist = (FRAMELIST*)calloc(SpriteData[no].ptAnimlist[j].frameCnt, sizeof(FRAMELIST));

  00157	6a 0c		 push	 12			; 0000000cH
  00159	89 01		 mov	 DWORD PTR [ecx], eax
  0015b	8b 0c f5 04 00
	00 00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00162	8b 45 f8	 mov	 eax, DWORD PTR _sprhead$[ebp+8]
  00165	89 44 39 08	 mov	 DWORD PTR [ecx+edi+8], eax
  00169	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00170	ff 74 38 08	 push	 DWORD PTR [eax+edi+8]
  00174	e8 00 00 00 00	 call	 _calloc
  00179	8b 0c f5 04 00
	00 00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00180	83 c4 08	 add	 esp, 8

; 50   : 			for (k = 0; k < SpriteData[no].ptAnimlist[j].frameCnt; k++) {

  00183	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _k$1$[ebp], 0
  0018a	89 44 39 0c	 mov	 DWORD PTR [ecx+edi+12], eax
  0018e	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00195	83 7c 38 08 00	 cmp	 DWORD PTR [eax+edi+8], 0
  0019a	0f 86 83 00 00
	00		 jbe	 $LN4@InitSprBin

; 48   : 			SpriteData[no].ptAnimlist[j].frameCnt = sprhead.frameCnt;

  001a0	33 db		 xor	 ebx, ebx
$LL9@InitSprBin:

; 51   : 				fread(&sprdata, 1, 10, fp1);

  001a2	ff 75 cc	 push	 DWORD PTR _fp1$1$[ebp]
  001a5	8d 45 e4	 lea	 eax, DWORD PTR _sprdata$[ebp]
  001a8	6a 0a		 push	 10			; 0000000aH
  001aa	6a 01		 push	 1
  001ac	50		 push	 eax
  001ad	e8 00 00 00 00	 call	 _fread

; 52   : 				SpriteData[no].ptAnimlist[j].ptFramelist[k].BmpNo = sprdata.BmpNo + nextMaxAdrnID;

  001b2	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  001b9	8d 5b 0c	 lea	 ebx, DWORD PTR [ebx+12]
  001bc	8b 4d e4	 mov	 ecx, DWORD PTR _sprdata$[ebp]
  001bf	83 c4 10	 add	 esp, 16			; 00000010H
  001c2	03 0d 00 00 00
	00		 add	 ecx, DWORD PTR ?nextMaxAdrnID@@3HA ; nextMaxAdrnID
  001c8	8b 44 38 0c	 mov	 eax, DWORD PTR [eax+edi+12]
  001cc	89 4c 03 f4	 mov	 DWORD PTR [ebx+eax-12], ecx

; 53   : 				SpriteData[no].ptAnimlist[j].ptFramelist[k].PosX = sprdata.PosX;

  001d0	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  001d7	8b 4c 38 0c	 mov	 ecx, DWORD PTR [eax+edi+12]
  001db	0f b7 45 e8	 movzx	 eax, WORD PTR _sprdata$[ebp+4]
  001df	66 89 44 19 f8	 mov	 WORD PTR [ecx+ebx-8], ax

; 54   : 				SpriteData[no].ptAnimlist[j].ptFramelist[k].PosY = sprdata.PosY;

  001e4	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  001eb	8b 4c 38 0c	 mov	 ecx, DWORD PTR [eax+edi+12]
  001ef	0f b7 45 ea	 movzx	 eax, WORD PTR _sprdata$[ebp+6]
  001f3	66 89 44 19 fa	 mov	 WORD PTR [ecx+ebx-6], ax

; 55   : 				SpriteData[no].ptAnimlist[j].ptFramelist[k].SoundNo = sprdata.SoundNo;

  001f8	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  001ff	8b 4c 38 0c	 mov	 ecx, DWORD PTR [eax+edi+12]
  00203	0f b7 45 ec	 movzx	 eax, WORD PTR _sprdata$[ebp+8]
  00207	66 89 44 19 fc	 mov	 WORD PTR [ecx+ebx-4], ax
  0020c	8b 4d d0	 mov	 ecx, DWORD PTR _k$1$[ebp]
  0020f	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00216	41		 inc	 ecx
  00217	89 4d d0	 mov	 DWORD PTR _k$1$[ebp], ecx
  0021a	3b 4c 38 08	 cmp	 ecx, DWORD PTR [eax+edi+8]
  0021e	72 82		 jb	 SHORT $LL9@InitSprBin
  00220	8b 5d cc	 mov	 ebx, DWORD PTR _fp1$1$[ebp]
$LN4@InitSprBin:

; 42   : 		for (j = 0; j < SpriteData[no].animSize; j++) {

  00223	8b 4d d4	 mov	 ecx, DWORD PTR _j$1$[ebp]
  00226	83 c7 10	 add	 edi, 16			; 00000010H
  00229	0f b7 04 f5 00
	00 00 00	 movzx	 eax, WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8]
  00231	41		 inc	 ecx
  00232	89 4d d4	 mov	 DWORD PTR _j$1$[ebp], ecx
  00235	3b c8		 cmp	 ecx, eax
  00237	0f 8c c3 fe ff
	ff		 jl	 $LL6@InitSprBin
  0023d	8b 7d c8	 mov	 edi, DWORD PTR _fp2$1$[ebp]
$LN108@InitSprBin:

; 56   : 			}
; 57   : 		}
; 58   : 		if (no == 1059) SpriteData[1059].ptAnimlist[80].ptFramelist[8].BmpNo = 283639;

  00240	81 fe 23 04 00
	00		 cmp	 esi, 1059		; 00000423H
  00246	75 29		 jne	 SHORT $LN27@InitSprBin
  00248	a1 1c 21 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+8476
  0024d	8b 80 0c 05 00
	00		 mov	 eax, DWORD PTR [eax+1292]
  00253	c7 40 60 f7 53
	04 00		 mov	 DWORD PTR [eax+96], 283639 ; 000453f7H

; 59   : 		if (no == 1059) SpriteData[1059].ptAnimlist[93].ptFramelist[8].BmpNo = 283640;

  0025a	a1 1c 21 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+8476
  0025f	8b 80 dc 05 00
	00		 mov	 eax, DWORD PTR [eax+1500]
  00265	c7 40 60 f8 53
	04 00		 mov	 DWORD PTR [eax+96], 283640 ; 000453f8H

; 60   : 		if (no == 1283) SpriteData[1283].ptAnimlist[7].ptFramelist[6].SoundNo = 10100;

  0026c	e9 e7 06 00 00	 jmp	 $LN51@InitSprBin
$LN27@InitSprBin:
  00271	81 fe 03 05 00
	00		 cmp	 esi, 1283		; 00000503H
  00277	75 25		 jne	 SHORT $LN29@InitSprBin
  00279	a1 1c 28 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+10268
  0027e	b9 74 27 00 00	 mov	 ecx, 10100		; 00002774H
  00283	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  00286	66 89 48 50	 mov	 WORD PTR [eax+80], cx

; 61   : 		if (no == 1283) SpriteData[1283].ptAnimlist[49].ptFramelist[6].SoundNo = 10100;

  0028a	a1 1c 28 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+10268
  0028f	8b 80 1c 03 00
	00		 mov	 eax, DWORD PTR [eax+796]
  00295	66 89 48 50	 mov	 WORD PTR [eax+80], cx

; 62   : 		if (no == 1404) SpriteData[1404].ptAnimlist[0].ptFramelist[6].BmpNo = 284436;

  00299	e9 ba 06 00 00	 jmp	 $LN51@InitSprBin
$LN29@InitSprBin:
  0029e	81 fe 7c 05 00
	00		 cmp	 esi, 1404		; 0000057cH
  002a4	75 14		 jne	 SHORT $LN30@InitSprBin
  002a6	a1 e4 2b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+11236
  002ab	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  002ae	c7 40 48 14 57
	04 00		 mov	 DWORD PTR [eax+72], 284436 ; 00045714H

; 63   : 		if (no == 1409) SpriteData[1409].ptAnimlist[0].ptFramelist[6].BmpNo = 284476;

  002b5	e9 9e 06 00 00	 jmp	 $LN51@InitSprBin
$LN30@InitSprBin:
  002ba	81 fe 81 05 00
	00		 cmp	 esi, 1409		; 00000581H
  002c0	75 14		 jne	 SHORT $LN31@InitSprBin
  002c2	a1 0c 2c 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+11276
  002c7	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  002ca	c7 40 48 3c 57
	04 00		 mov	 DWORD PTR [eax+72], 284476 ; 0004573cH

; 64   : 		if (no == 373)

  002d1	e9 82 06 00 00	 jmp	 $LN51@InitSprBin
$LN31@InitSprBin:
  002d6	81 fe 75 01 00
	00		 cmp	 esi, 373		; 00000175H
  002dc	0f 85 95 01 00
	00		 jne	 $LN84@InitSprBin

; 65   : 			for (int kk = 0; kk < 8; kk++) {
; 66   : 				SpriteData[373].ptAnimlist[kk * 7].ptFramelist[8].SoundNo = 254;

  002e2	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  002e7	b9 fe 00 00 00	 mov	 ecx, 254		; 000000feH

; 67   : 				SpriteData[373].ptAnimlist[kk * 7].ptFramelist[10].SoundNo = 254;
; 68   : 				SpriteData[373].ptAnimlist[kk * 7].ptFramelist[15].SoundNo = 250;

  002ec	ba fa 00 00 00	 mov	 edx, 250		; 000000faH
  002f1	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  002f4	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  002f8	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  002fd	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00300	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  00307	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  0030c	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0030f	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  00316	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  0031b	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  0031e	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  00322	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00327	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  0032a	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  00331	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00336	8b 40 7c	 mov	 eax, DWORD PTR [eax+124]
  00339	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  00340	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00345	8b 80 ec 00 00
	00		 mov	 eax, DWORD PTR [eax+236]
  0034b	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  0034f	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00354	8b 80 ec 00 00
	00		 mov	 eax, DWORD PTR [eax+236]
  0035a	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  00361	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00366	8b 80 ec 00 00
	00		 mov	 eax, DWORD PTR [eax+236]
  0036c	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  00373	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00378	8b 80 5c 01 00
	00		 mov	 eax, DWORD PTR [eax+348]
  0037e	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  00382	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00387	8b 80 5c 01 00
	00		 mov	 eax, DWORD PTR [eax+348]
  0038d	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  00394	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00399	8b 80 5c 01 00
	00		 mov	 eax, DWORD PTR [eax+348]
  0039f	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  003a6	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003ab	8b 80 cc 01 00
	00		 mov	 eax, DWORD PTR [eax+460]
  003b1	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  003b5	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003ba	8b 80 cc 01 00
	00		 mov	 eax, DWORD PTR [eax+460]
  003c0	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  003c7	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003cc	8b 80 cc 01 00
	00		 mov	 eax, DWORD PTR [eax+460]
  003d2	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  003d9	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003de	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  003e4	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  003e8	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003ed	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  003f3	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  003fa	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  003ff	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  00405	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  0040c	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00411	8b 80 ac 02 00
	00		 mov	 eax, DWORD PTR [eax+684]
  00417	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  0041b	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00420	8b 80 ac 02 00
	00		 mov	 eax, DWORD PTR [eax+684]
  00426	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  0042d	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00432	8b 80 ac 02 00
	00		 mov	 eax, DWORD PTR [eax+684]
  00438	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx
  0043f	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00444	8b 80 1c 03 00
	00		 mov	 eax, DWORD PTR [eax+796]
  0044a	66 89 48 68	 mov	 WORD PTR [eax+104], cx
  0044e	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00453	8b 80 1c 03 00
	00		 mov	 eax, DWORD PTR [eax+796]
  00459	66 89 88 80 00
	00 00		 mov	 WORD PTR [eax+128], cx
  00460	a1 ac 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2988
  00465	8b 80 1c 03 00
	00		 mov	 eax, DWORD PTR [eax+796]
  0046b	66 89 90 bc 00
	00 00		 mov	 WORD PTR [eax+188], dx

; 69   : 			}
; 70   : 		if (no == 102) SpriteData[102].ptAnimlist[82].ptFramelist[0].BmpNo = 126235;

  00472	e9 e1 04 00 00	 jmp	 $LN51@InitSprBin
$LN84@InitSprBin:
  00477	83 fe 66	 cmp	 esi, 102		; 00000066H
  0047a	75 4b		 jne	 SHORT $LN36@InitSprBin
  0047c	a1 34 03 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+820
  00481	8b 80 2c 05 00
	00		 mov	 eax, DWORD PTR [eax+1324]
  00487	c7 00 1b ed 01
	00		 mov	 DWORD PTR [eax], 126235	; 0001ed1bH

; 71   : 		if (no == 102) SpriteData[102].ptAnimlist[83].ptFramelist[0].BmpNo = 126236;

  0048d	a1 34 03 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+820
  00492	8b 80 3c 05 00
	00		 mov	 eax, DWORD PTR [eax+1340]
  00498	c7 00 1c ed 01
	00		 mov	 DWORD PTR [eax], 126236	; 0001ed1cH

; 72   : 		if (no == 102) SpriteData[102].ptAnimlist[83].ptFramelist[1].BmpNo = 126237;

  0049e	a1 34 03 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+820
  004a3	8b 80 3c 05 00
	00		 mov	 eax, DWORD PTR [eax+1340]
  004a9	c7 40 0c 1d ed
	01 00		 mov	 DWORD PTR [eax+12], 126237 ; 0001ed1dH

; 73   : 		if (no == 102) SpriteData[102].ptAnimlist[84].ptFramelist[1].BmpNo = 126238;

  004b0	a1 34 03 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+820
  004b5	8b 80 4c 05 00
	00		 mov	 eax, DWORD PTR [eax+1356]
  004bb	c7 40 0c 1e ed
	01 00		 mov	 DWORD PTR [eax+12], 126238 ; 0001ed1eH

; 74   : 		if (no == 1058) SpriteData[1058].ptAnimlist[80].ptFramelist[8].BmpNo = 232475;

  004c2	e9 91 04 00 00	 jmp	 $LN51@InitSprBin
$LN36@InitSprBin:
  004c7	81 fe 22 04 00
	00		 cmp	 esi, 1058		; 00000422H
  004cd	75 29		 jne	 SHORT $LN38@InitSprBin
  004cf	a1 14 21 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+8468
  004d4	8b 80 0c 05 00
	00		 mov	 eax, DWORD PTR [eax+1292]
  004da	c7 40 60 1b 8c
	03 00		 mov	 DWORD PTR [eax+96], 232475 ; 00038c1bH

; 75   : 		if (no == 1058) SpriteData[1058].ptAnimlist[93].ptFramelist[8].BmpNo = 232476;

  004e1	a1 14 21 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+8468
  004e6	8b 80 dc 05 00
	00		 mov	 eax, DWORD PTR [eax+1500]
  004ec	c7 40 60 1c 8c
	03 00		 mov	 DWORD PTR [eax+96], 232476 ; 00038c1cH

; 76   : 
; 77   : 		if (no == 260) SpriteData[260].ptAnimlist[21].ptFramelist[5].SoundNo = 10001;

  004f3	e9 60 04 00 00	 jmp	 $LN51@InitSprBin
$LN38@InitSprBin:
  004f8	81 fe 04 01 00
	00		 cmp	 esi, 260		; 00000104H
  004fe	75 15		 jne	 SHORT $LN39@InitSprBin
  00500	a1 24 08 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+2084
  00505	b9 11 27 00 00	 mov	 ecx, 10001		; 00002711H
  0050a	8b 80 5c 01 00
	00		 mov	 eax, DWORD PTR [eax+348]

; 78   : 		if (no == 502) SpriteData[502].animSize = 1;

  00510	e9 3f 04 00 00	 jmp	 $LN112@InitSprBin
$LN39@InitSprBin:
  00515	81 fe f6 01 00
	00		 cmp	 esi, 502		; 000001f6H
  0051b	0f 85 b8 00 00
	00		 jne	 $LN46@InitSprBin
  00521	b8 01 00 00 00	 mov	 eax, 1

; 79   : 		if (no == 502) SpriteData[502].ptAnimlist = (ANIMLIST*)calloc(SpriteData[502].animSize, sizeof(ANIMLIST));

  00526	6a 10		 push	 16			; 00000010H
  00528	50		 push	 eax
  00529	66 a3 b0 0f 00
	00		 mov	 WORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4016, ax
  0052f	e8 00 00 00 00	 call	 _calloc
  00534	a3 b4 0f 00 00	 mov	 DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020, eax

; 80   : 		if (no == 502) SpriteData[502].ptAnimlist[0].dir = 0;

  00539	33 c9		 xor	 ecx, ecx

; 81   : 		if (no == 502) SpriteData[502].ptAnimlist[0].no = 0;
; 82   : 		if (no == 502) SpriteData[502].ptAnimlist[0].dtAnim = 4;
; 83   : 		if (no == 502) SpriteData[502].ptAnimlist[0].frameCnt = 3;
; 84   : 		if (no == 502) SpriteData[502].ptAnimlist[0].ptFramelist = (FRAMELIST*)calloc(SpriteData[502].ptAnimlist[0].frameCnt, sizeof(FRAMELIST));

  0053b	6a 0c		 push	 12			; 0000000cH
  0053d	66 89 08	 mov	 WORD PTR [eax], cx
  00540	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  00545	66 89 48 02	 mov	 WORD PTR [eax+2], cx
  00549	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  0054e	c7 40 04 04 00
	00 00		 mov	 DWORD PTR [eax+4], 4
  00555	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  0055a	c7 40 08 03 00
	00 00		 mov	 DWORD PTR [eax+8], 3
  00561	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  00566	ff 70 08	 push	 DWORD PTR [eax+8]
  00569	e8 00 00 00 00	 call	 _calloc
  0056e	8b 0d b4 0f 00
	00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020

; 108  : 			}
; 109  : 		}
; 110  : 		if (no == 502)
; 111  : 			for (k = 0; k < SpriteData[502].ptAnimlist[0].frameCnt; k++) {

  00574	33 f6		 xor	 esi, esi
  00576	83 c4 10	 add	 esp, 16			; 00000010H
  00579	89 41 0c	 mov	 DWORD PTR [ecx+12], eax
  0057c	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  00581	39 70 08	 cmp	 DWORD PTR [eax+8], esi
  00584	0f 86 ce 03 00
	00		 jbe	 $LN51@InitSprBin
  0058a	33 d2		 xor	 edx, edx
  0058c	0f 1f 40 00	 npad	 4
$LL18@InitSprBin:

; 112  : 				SpriteData[502].ptAnimlist[0].ptFramelist[k].BmpNo = iTemp++;

  00590	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  00593	8d 8e 8e 21 00
	00		 lea	 ecx, DWORD PTR [esi+8590]
  00599	46		 inc	 esi
  0059a	8d 52 0c	 lea	 edx, DWORD PTR [edx+12]
  0059d	89 4c 02 f4	 mov	 DWORD PTR [edx+eax-12], ecx

; 113  : 				SpriteData[502].ptAnimlist[0].ptFramelist[k].PosX = 0;

  005a1	33 c9		 xor	 ecx, ecx
  005a3	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  005a8	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  005ab	66 89 4c 10 f8	 mov	 WORD PTR [eax+edx-8], cx

; 114  : 				SpriteData[502].ptAnimlist[0].ptFramelist[k].PosY = 0;

  005b0	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  005b5	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  005b8	66 89 4c 10 fa	 mov	 WORD PTR [eax+edx-6], cx

; 115  : 				SpriteData[502].ptAnimlist[0].ptFramelist[k].SoundNo = 0;

  005bd	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  005c2	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  005c5	66 89 4c 10 fc	 mov	 WORD PTR [eax+edx-4], cx
  005ca	a1 b4 0f 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+4020
  005cf	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  005d2	72 bc		 jb	 SHORT $LL18@InitSprBin
  005d4	e9 7f 03 00 00	 jmp	 $LN51@InitSprBin
$LN46@InitSprBin:

; 85   : 		int iTemp = 8590;
; 86   : 		if (no == 382) {

  005d9	81 fe 7e 01 00
	00		 cmp	 esi, 382		; 0000017eH
  005df	0f 85 87 01 00
	00		 jne	 $LN17@InitSprBin

; 87   : 			for (int kkk = 0; kkk < 8; kkk++) {

  005e5	33 f6		 xor	 esi, esi
  005e7	bf bf e6 01 00	 mov	 edi, 124607		; 0001e6bfH
  005ec	89 75 d4	 mov	 DWORD PTR tv1922[ebp], esi
  005ef	89 7d d0	 mov	 DWORD PTR tv1921[ebp], edi
$LL15@InitSprBin:

; 88   : 				SpriteData[382].ptAnimlist[7 * kkk].frameCnt = 14;

  005f2	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  005f7	c7 44 06 08 0e
	00 00 00	 mov	 DWORD PTR [esi+eax+8], 14 ; 0000000eH

; 89   : 				free(SpriteData[382].ptAnimlist[7 * kkk].ptFramelist);

  005ff	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00604	ff 74 06 0c	 push	 DWORD PTR [esi+eax+12]
  00608	e8 00 00 00 00	 call	 _free

; 90   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist = (FRAMELIST*)calloc(SpriteData[382].ptAnimlist[7 * kkk].frameCnt, sizeof(FRAMELIST));

  0060d	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00612	6a 0c		 push	 12			; 0000000cH
  00614	ff 74 06 08	 push	 DWORD PTR [esi+eax+8]
  00618	e8 00 00 00 00	 call	 _calloc
  0061d	8b 0d f4 0b 00
	00		 mov	 ecx, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060

; 91   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[4].SoundNo = SpriteData[381].ptAnimlist[0].ptFramelist[4].SoundNo;
; 92   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[9].SoundNo = SpriteData[381].ptAnimlist[0].ptFramelist[9].SoundNo;
; 93   : 				SpriteData[382].ptAnimlist[7 * kkk].dtAnim = SpriteData[381].ptAnimlist[0].dtAnim;
; 94   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[0].BmpNo = 124604 + kkk * 29;

  00623	8d 5f fd	 lea	 ebx, DWORD PTR [edi-3]
  00626	83 c4 0c	 add	 esp, 12			; 0000000cH
  00629	89 5d c4	 mov	 DWORD PTR tv1915[ebp], ebx
  0062c	89 44 0e 0c	 mov	 DWORD PTR [esi+ecx+12], eax
  00630	a1 ec 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3052
  00635	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00638	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  0063d	8b 4c 06 0c	 mov	 ecx, DWORD PTR [esi+eax+12]
  00641	0f b7 42 38	 movzx	 eax, WORD PTR [edx+56]
  00645	66 89 41 38	 mov	 WORD PTR [ecx+56], ax
  00649	a1 ec 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3052
  0064e	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00651	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00656	8b 4c 06 0c	 mov	 ecx, DWORD PTR [esi+eax+12]
  0065a	0f b7 42 74	 movzx	 eax, WORD PTR [edx+116]
  0065e	8d 57 ff	 lea	 edx, DWORD PTR [edi-1]
  00661	66 89 41 74	 mov	 WORD PTR [ecx+116], ax
  00665	a1 ec 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3052
  0066a	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0066d	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00672	89 4c 06 04	 mov	 DWORD PTR [esi+eax+4], ecx
  00676	8d 4a ff	 lea	 ecx, DWORD PTR [edx-1]
  00679	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  0067e	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00682	89 18		 mov	 DWORD PTR [eax], ebx
  00684	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00689	8b 5d d0	 mov	 ebx, DWORD PTR tv1921[ebp]
  0068c	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00690	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00693	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00698	8b 4d d4	 mov	 ecx, DWORD PTR tv1922[ebp]
  0069b	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  0069f	89 50 18	 mov	 DWORD PTR [eax+24], edx
  006a2	8d 53 03	 lea	 edx, DWORD PTR [ebx+3]
  006a5	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006aa	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  006ae	89 78 24	 mov	 DWORD PTR [eax+36], edi
  006b1	47		 inc	 edi
  006b2	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006b7	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  006bb	8d 73 02	 lea	 esi, DWORD PTR [ebx+2]
  006be	89 78 30	 mov	 DWORD PTR [eax+48], edi
  006c1	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006c6	8b 44 01 0c	 mov	 eax, DWORD PTR [ecx+eax+12]
  006ca	89 70 3c	 mov	 DWORD PTR [eax+60], esi
  006cd	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006d2	8b 44 01 0c	 mov	 eax, DWORD PTR [ecx+eax+12]
  006d6	8d 4b 04	 lea	 ecx, DWORD PTR [ebx+4]
  006d9	8b 5d d4	 mov	 ebx, DWORD PTR tv1922[ebp]
  006dc	89 50 48	 mov	 DWORD PTR [eax+72], edx
  006df	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006e4	8b 44 03 0c	 mov	 eax, DWORD PTR [ebx+eax+12]
  006e8	89 48 54	 mov	 DWORD PTR [eax+84], ecx

; 95   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[1].BmpNo = 124605 + kkk * 29;
; 96   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[2].BmpNo = 124606 + kkk * 29;
; 97   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[3].BmpNo = 124607 + kkk * 29;
; 98   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[4].BmpNo = 124608 + kkk * 29;
; 99   : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[5].BmpNo = 124609 + kkk * 29;
; 100  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[6].BmpNo = 124610 + kkk * 29;
; 101  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[7].BmpNo = 124611 + kkk * 29;
; 102  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[8].BmpNo = 124607 + kkk * 29;

  006eb	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006f0	8b 44 03 0c	 mov	 eax, DWORD PTR [ebx+eax+12]
  006f4	8b 5d d0	 mov	 ebx, DWORD PTR tv1921[ebp]
  006f7	89 58 60	 mov	 DWORD PTR [eax+96], ebx

; 103  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[9].BmpNo = 124608 + kkk * 29;

  006fa	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  006ff	8b 5d d4	 mov	 ebx, DWORD PTR tv1922[ebp]
  00702	8b 44 03 0c	 mov	 eax, DWORD PTR [ebx+eax+12]
  00706	89 78 6c	 mov	 DWORD PTR [eax+108], edi

; 104  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[10].BmpNo = 124609 + kkk * 29;

  00709	8b fb		 mov	 edi, ebx
  0070b	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00710	8b 44 07 0c	 mov	 eax, DWORD PTR [edi+eax+12]
  00714	89 70 78	 mov	 DWORD PTR [eax+120], esi

; 105  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[11].BmpNo = 124610 + kkk * 29;

  00717	8b f3		 mov	 esi, ebx
  00719	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  0071e	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  00722	89 90 84 00 00
	00		 mov	 DWORD PTR [eax+132], edx

; 106  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[12].BmpNo = 124611 + kkk * 29;

  00728	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  0072d	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]

; 107  : 				SpriteData[382].ptAnimlist[7 * kkk].ptFramelist[13].BmpNo = 124604 + kkk * 29;

  00731	8b 7d d0	 mov	 edi, DWORD PTR tv1921[ebp]
  00734	8b 5d c4	 mov	 ebx, DWORD PTR tv1915[ebp]
  00737	83 c7 1d	 add	 edi, 29			; 0000001dH
  0073a	89 88 90 00 00
	00		 mov	 DWORD PTR [eax+144], ecx
  00740	a1 f4 0b 00 00	 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A+3060
  00745	89 7d d0	 mov	 DWORD PTR tv1921[ebp], edi
  00748	8b 44 06 0c	 mov	 eax, DWORD PTR [esi+eax+12]
  0074c	83 c6 70	 add	 esi, 112		; 00000070H
  0074f	89 75 d4	 mov	 DWORD PTR tv1922[ebp], esi
  00752	89 98 9c 00 00
	00		 mov	 DWORD PTR [eax+156], ebx
  00758	81 ff a7 e7 01
	00		 cmp	 edi, 124839		; 0001e7a7H
  0075e	0f 8c 8e fe ff
	ff		 jl	 $LL15@InitSprBin
  00764	8b 7d c8	 mov	 edi, DWORD PTR _fp2$1$[ebp]
  00767	e9 ec 01 00 00	 jmp	 $LN51@InitSprBin
$LN17@InitSprBin:

; 116  : 			}
; 117  : 
; 118  : 
; 119  : 		//Change fix 投掷动作没有设定SoundNo,战斗时会当
; 120  : 		if (no >= 1965 && no < 1987) {

  0076c	8d 86 53 f8 ff
	ff		 lea	 eax, DWORD PTR [esi-1965]
  00772	b9 16 27 00 00	 mov	 ecx, 10006		; 00002716H
  00777	83 f8 15	 cmp	 eax, 21			; 00000015H
  0077a	0f 87 88 00 00
	00		 ja	 $LN49@InitSprBin

; 121  : 			//for(int kk=1965;kk<1987;kk++)
; 122  : 			//{
; 123  : 			SpriteData[no].ptAnimlist[9].ptFramelist[4].SoundNo = 10006;

  00780	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00787	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]
  0078d	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 124  : 			SpriteData[no].ptAnimlist[22].ptFramelist[4].SoundNo = 10006;

  00791	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00798	8b 80 6c 01 00
	00		 mov	 eax, DWORD PTR [eax+364]
  0079e	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 125  : 			SpriteData[no].ptAnimlist[35].ptFramelist[4].SoundNo = 10006;

  007a2	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007a9	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  007af	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 126  : 			SpriteData[no].ptAnimlist[48].ptFramelist[4].SoundNo = 10006;

  007b3	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007ba	8b 80 0c 03 00
	00		 mov	 eax, DWORD PTR [eax+780]
  007c0	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 127  : 			SpriteData[no].ptAnimlist[61].ptFramelist[4].SoundNo = 10006;

  007c4	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007cb	8b 80 dc 03 00
	00		 mov	 eax, DWORD PTR [eax+988]
  007d1	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 128  : 			SpriteData[no].ptAnimlist[74].ptFramelist[4].SoundNo = 10006;

  007d5	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007dc	8b 80 ac 04 00
	00		 mov	 eax, DWORD PTR [eax+1196]
  007e2	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 129  : 			SpriteData[no].ptAnimlist[87].ptFramelist[4].SoundNo = 10006;

  007e6	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007ed	8b 80 7c 05 00
	00		 mov	 eax, DWORD PTR [eax+1404]
  007f3	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 130  : 			SpriteData[no].ptAnimlist[100].ptFramelist[4].SoundNo = 10006;

  007f7	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  007fe	8b 80 4c 06 00
	00		 mov	 eax, DWORD PTR [eax+1612]
  00804	66 89 48 38	 mov	 WORD PTR [eax+56], cx
$LN49@InitSprBin:

; 131  : 			//}
; 132  : 		}
; 133  : 		if (no >= 1988 && no < 1990) {

  00808	8d 86 3c f8 ff
	ff		 lea	 eax, DWORD PTR [esi-1988]
  0080e	83 f8 01	 cmp	 eax, 1
  00811	0f 87 88 00 00
	00		 ja	 $LN50@InitSprBin

; 134  : 			//for(int kk=1988;kk<1990;kk++)
; 135  : 			//{
; 136  : 			SpriteData[no].ptAnimlist[9].ptFramelist[4].SoundNo = 10006;

  00817	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0081e	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]
  00824	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 137  : 			SpriteData[no].ptAnimlist[22].ptFramelist[4].SoundNo = 10006;

  00828	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0082f	8b 80 6c 01 00
	00		 mov	 eax, DWORD PTR [eax+364]
  00835	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 138  : 			SpriteData[no].ptAnimlist[35].ptFramelist[4].SoundNo = 10006;

  00839	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00840	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  00846	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 139  : 			SpriteData[no].ptAnimlist[48].ptFramelist[4].SoundNo = 10006;

  0084a	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00851	8b 80 0c 03 00
	00		 mov	 eax, DWORD PTR [eax+780]
  00857	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 140  : 			SpriteData[no].ptAnimlist[61].ptFramelist[4].SoundNo = 10006;

  0085b	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00862	8b 80 dc 03 00
	00		 mov	 eax, DWORD PTR [eax+988]
  00868	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 141  : 			SpriteData[no].ptAnimlist[74].ptFramelist[4].SoundNo = 10006;

  0086c	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00873	8b 80 ac 04 00
	00		 mov	 eax, DWORD PTR [eax+1196]
  00879	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 142  : 			SpriteData[no].ptAnimlist[87].ptFramelist[4].SoundNo = 10006;

  0087d	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00884	8b 80 7c 05 00
	00		 mov	 eax, DWORD PTR [eax+1404]
  0088a	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 143  : 			SpriteData[no].ptAnimlist[100].ptFramelist[4].SoundNo = 10006;

  0088e	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  00895	8b 80 4c 06 00
	00		 mov	 eax, DWORD PTR [eax+1612]
  0089b	66 89 48 38	 mov	 WORD PTR [eax+56], cx
$LN50@InitSprBin:

; 144  : 			//}
; 145  : 		}
; 146  : 
; 147  : 		//103347 红狗
; 148  : 		//103348 金飞
; 149  : 		//103349 机暴
; 150  : #ifdef 新机暴红狗金飞
; 151  : 		if (no >= 3350 && no <= 3370)

  0089f	8d 86 ea f2 ff
	ff		 lea	 eax, DWORD PTR [esi-3350]
  008a5	83 f8 14	 cmp	 eax, 20			; 00000014H
  008a8	0f 87 aa 00 00
	00		 ja	 $LN51@InitSprBin

; 152  : #else
; 153  : 		if (no >= 3347 && no <= 3370)
; 154  : #endif
; 155  : 		{
; 156  : 			SpriteData[no].ptAnimlist[9].ptFramelist[4].SoundNo = 10006;

  008ae	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  008b5	8b 80 9c 00 00
	00		 mov	 eax, DWORD PTR [eax+156]
  008bb	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 157  : 			SpriteData[no].ptAnimlist[22].ptFramelist[4].SoundNo = 10006;

  008bf	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  008c6	8b 80 6c 01 00
	00		 mov	 eax, DWORD PTR [eax+364]
  008cc	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 158  : 			SpriteData[no].ptAnimlist[35].ptFramelist[4].SoundNo = 10006;

  008d0	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  008d7	8b 80 3c 02 00
	00		 mov	 eax, DWORD PTR [eax+572]
  008dd	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 159  : 			SpriteData[no].ptAnimlist[48].ptFramelist[4].SoundNo = 10006;

  008e1	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  008e8	8b 80 0c 03 00
	00		 mov	 eax, DWORD PTR [eax+780]
  008ee	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 160  : 			SpriteData[no].ptAnimlist[61].ptFramelist[4].SoundNo = 10006;

  008f2	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  008f9	8b 80 dc 03 00
	00		 mov	 eax, DWORD PTR [eax+988]
  008ff	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 161  : 			SpriteData[no].ptAnimlist[74].ptFramelist[4].SoundNo = 10006;

  00903	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0090a	8b 80 ac 04 00
	00		 mov	 eax, DWORD PTR [eax+1196]
  00910	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 162  : 			SpriteData[no].ptAnimlist[87].ptFramelist[4].SoundNo = 10006;

  00914	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0091b	8b 80 7c 05 00
	00		 mov	 eax, DWORD PTR [eax+1404]
  00921	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 163  : 			SpriteData[no].ptAnimlist[100].ptFramelist[4].SoundNo = 10006;

  00925	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0092c	8b 80 4c 06 00
	00		 mov	 eax, DWORD PTR [eax+1612]
  00932	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 164  : 			SpriteData[no].ptAnimlist[52].ptFramelist[4].SoundNo = 10006;

  00936	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0093d	8b 80 4c 03 00
	00		 mov	 eax, DWORD PTR [eax+844]
  00943	66 89 48 38	 mov	 WORD PTR [eax+56], cx

; 165  : 			SpriteData[no].ptAnimlist[39].ptFramelist[5].SoundNo = 10006;

  00947	8b 04 f5 04 00
	00 00		 mov	 eax, DWORD PTR ?SpriteData@@3PAUSPRITEDATA@@A[esi*8+4]
  0094e	8b 80 7c 02 00
	00		 mov	 eax, DWORD PTR [eax+636]
$LN112@InitSprBin:

; 31   : 	}
; 32   : 	int no = 0;
; 33   : 	while (TRUE) {
; 34   : 		fread(&_spradrn, 1, sizeof(_spradrn), fp2);

  00954	66 89 48 44	 mov	 WORD PTR [eax+68], cx
$LN51@InitSprBin:
  00958	57		 push	 edi
  00959	6a 0c		 push	 12			; 0000000cH
  0095b	8d 45 d8	 lea	 eax, DWORD PTR __spradrn$[ebp]
  0095e	6a 01		 push	 1
  00960	50		 push	 eax
  00961	e8 00 00 00 00	 call	 _fread

; 35   : 		if (feof(fp2) != 0)

  00966	57		 push	 edi
  00967	e8 00 00 00 00	 call	 _feof
  0096c	8b 5d cc	 mov	 ebx, DWORD PTR _fp1$1$[ebp]
  0096f	83 c4 14	 add	 esp, 20			; 00000014H
  00972	85 c0		 test	 eax, eax
  00974	0f 84 26 f7 ff
	ff		 je	 $LL2@InitSprBin
$LN110@InitSprBin:

; 166  : 		}
; 167  : 	}
; 168  : 	fclose(fp1);

  0097a	53		 push	 ebx
  0097b	e8 00 00 00 00	 call	 _fclose

; 169  : 	fclose(fp2);

  00980	57		 push	 edi
  00981	e8 00 00 00 00	 call	 _fclose
  00986	83 c4 08	 add	 esp, 8

; 170  : 	if (Sprflg1) {

  00989	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Sprflg1@?1??InitSprBinFileOpen@@YAHPAD0@Z@4HA, 0

; 171  : 		Sprflg1 = FALSE;
; 172  : 	}
; 173  : 	return TRUE;

  00993	b8 01 00 00 00	 mov	 eax, 1
  00998	5f		 pop	 edi

; 174  : }

  00999	5e		 pop	 esi
  0099a	5b		 pop	 ebx
  0099b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0099e	33 cd		 xor	 ecx, ebp
  009a0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009a5	8b e5		 mov	 esp, ebp
  009a7	5d		 pop	 ebp
  009a8	c3		 ret	 0
$LN109@InitSprBin:
  009a9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009ac	33 c0		 xor	 eax, eax
  009ae	5f		 pop	 edi
  009af	5e		 pop	 esi
  009b0	33 cd		 xor	 ecx, ebp
  009b2	5b		 pop	 ebx
  009b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009b8	8b e5		 mov	 esp, ebp
  009ba	5d		 pop	 ebp
  009bb	c3		 ret	 0
?InitSprBinFileOpen@@YAHPAD0@Z ENDP			; InitSprBinFileOpen
_TEXT	ENDS
END
