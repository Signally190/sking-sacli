; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

	TITLE	\\VBOXSVR\_stoneage\repos\ssm-sacli\Release\produce.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?ProduceInitFlag@@3HA				; ProduceInitFlag
_DATA	SEGMENT
?ProduceInitFlag@@3HA DD 01H				; ProduceInitFlag
_DATA	ENDS
PUBLIC	?CopyBackBuffer@@YAXXZ				; CopyBackBuffer
PUBLIC	?DrawProduce@@YAHH@Z				; DrawProduce
PUBLIC	?TitleProduce@@YAXXZ				; TitleProduce
PUBLIC	?ProduceAccele@@YAHH@Z				; ProduceAccele
PUBLIC	?ProduceBrake@@YAHH@Z				; ProduceBrake
PUBLIC	?Produce4Way@@YAHH@Z				; Produce4Way
PUBLIC	?ProduceHagare@@YAHH@Z				; ProduceHagare
PUBLIC	?Produce_bran_small@@YAHH@Z			; Produce_bran_small
PUBLIC	?Produce_break_up@@YAHH@Z			; Produce_break_up
PUBLIC	?Produce_break_up2@@YAHH@Z			; Produce_break_up2
PUBLIC	?ProduceCenterPress@@YAHH@Z			; ProduceCenterPress
PUBLIC	__real@3e99999a
PUBLIC	__real@3ecccccd
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@418b3333
PUBLIC	__real@41b66666
PUBLIC	__real@43200000
PUBLIC	__real@43f00000
PUBLIC	__real@44004ccd
PUBLIC	__real@44200000
PUBLIC	__real@44254000
PUBLIC	__real@bf000000
PUBLIC	__real@c3f00000
PUBLIC	__real@c4004ccd
PUBLIC	__real@c4200000
PUBLIC	__real@c4254000
PUBLIC	__xmm@00000001000000010000000100000001
PUBLIC	__xmm@00000002000000020000000200000002
PUBLIC	__xmm@ffffffa0ffffffa0ffffffa0ffffffa0
EXTRN	?TimeGetTime@@YAIXZ:PROC			; TimeGetTime
EXTRN	?LoadBmp@@YAHH@Z:PROC				; LoadBmp
EXTRN	?ClearBackSurface@@YAXXZ:PROC			; ClearBackSurface
EXTRN	?ClearSurface@@YAXPAUIDirectDrawSurface@@@Z:PROC ; ClearSurface
EXTRN	?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z:PROC ; DrawSurfaceFast2
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?Rnd@@YAHHH@Z:PROC				; Rnd
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	@__security_check_cookie@4:PROC
EXTRN	?DISPLACEMENT_X@@3HA:DWORD			; DISPLACEMENT_X
EXTRN	?DISPLACEMENT_Y@@3HA:DWORD			; DISPLACEMENT_Y
EXTRN	?lpBattleSurface@@3PAUIDirectDrawSurface@@A:DWORD ; lpBattleSurface
EXTRN	?lpDraw@@3PAUDIRECT_DRAW@@A:DWORD		; lpDraw
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?ResoMode@@3HA:DWORD				; ResoMode
EXTRN	?GameState@@3HA:DWORD				; GameState
EXTRN	?NowTime@@3KA:DWORD				; NowTime
EXTRN	?BRAN_SIZE_X@@3HA:DWORD				; BRAN_SIZE_X
EXTRN	?BRAN_SIZE_Y@@3HA:DWORD				; BRAN_SIZE_Y
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT ?x@?1??ProduceAccele@@YAHH@Z@4MA
_BSS	SEGMENT
?x@?1??ProduceAccele@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceAccele'::`2'::x
_BSS	ENDS
;	COMDAT ?x2@?1??ProduceAccele@@YAHH@Z@4MA
_BSS	SEGMENT
?x2@?1??ProduceAccele@@YAHH@Z@4MA DD 01H DUP (?)	; `ProduceAccele'::`2'::x2
_BSS	ENDS
;	COMDAT ?y@?1??ProduceAccele@@YAHH@Z@4MA
_BSS	SEGMENT
?y@?1??ProduceAccele@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceAccele'::`2'::y
_BSS	ENDS
;	COMDAT ?y2@?1??ProduceAccele@@YAHH@Z@4MA
_BSS	SEGMENT
?y2@?1??ProduceAccele@@YAHH@Z@4MA DD 01H DUP (?)	; `ProduceAccele'::`2'::y2
_BSS	ENDS
;	COMDAT ?a@?1??ProduceAccele@@YAHH@Z@4MA
_BSS	SEGMENT
?a@?1??ProduceAccele@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceAccele'::`2'::a
_BSS	ENDS
;	COMDAT ?x@?1??ProduceBrake@@YAHH@Z@4MA
_BSS	SEGMENT
?x@?1??ProduceBrake@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceBrake'::`2'::x
_BSS	ENDS
;	COMDAT ?x2@?1??ProduceBrake@@YAHH@Z@4MA
_BSS	SEGMENT
?x2@?1??ProduceBrake@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceBrake'::`2'::x2
_BSS	ENDS
;	COMDAT ?y@?1??ProduceBrake@@YAHH@Z@4MA
_BSS	SEGMENT
?y@?1??ProduceBrake@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceBrake'::`2'::y
_BSS	ENDS
;	COMDAT ?y2@?1??ProduceBrake@@YAHH@Z@4MA
_BSS	SEGMENT
?y2@?1??ProduceBrake@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceBrake'::`2'::y2
_BSS	ENDS
;	COMDAT ?a@?1??ProduceBrake@@YAHH@Z@4MA
_BSS	SEGMENT
?a@?1??ProduceBrake@@YAHH@Z@4MA DD 01H DUP (?)		; `ProduceBrake'::`2'::a
_BSS	ENDS
;	COMDAT ?x@?1??Produce4Way@@YAHH@Z@4PAHA
_BSS	SEGMENT
?x@?1??Produce4Way@@YAHH@Z@4PAHA DD 04H DUP (?)		; `Produce4Way'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??Produce4Way@@YAHH@Z@4PAHA
_BSS	SEGMENT
?y@?1??Produce4Way@@YAHH@Z@4PAHA DD 04H DUP (?)		; `Produce4Way'::`2'::y
_BSS	ENDS
;	COMDAT ?x@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?x@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?y@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::y
_BSS	ENDS
;	COMDAT ?a@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?a@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::a
_BSS	ENDS
;	COMDAT ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
_BSS	SEGMENT
?cnt@?1??ProduceHagare@@YAHH@Z@4HA DD 01H DUP (?)	; `ProduceHagare'::`2'::cnt
_BSS	ENDS
;	COMDAT ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA
_BSS	SEGMENT
?cnt2@?1??ProduceHagare@@YAHH@Z@4HA DD 01H DUP (?)	; `ProduceHagare'::`2'::cnt2
_BSS	ENDS
;	COMDAT ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?posX@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::posX
_BSS	ENDS
;	COMDAT ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?posY@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::posY
_BSS	ENDS
;	COMDAT ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA
_BSS	SEGMENT
?flag@?1??ProduceHagare@@YAHH@Z@4PAHA DD 040H DUP (?)	; `ProduceHagare'::`2'::flag
_BSS	ENDS
_BSS	SEGMENT
?bran_cnt@@3HA DD 01H DUP (?)				; bran_cnt
?pos_tbl@@3PAHA DD 01452H DUP (?)			; pos_tbl
?bran_flg@@3HA DD 01H DUP (?)				; bran_flg
_BSS	ENDS
;	COMDAT ?line@?1??ProduceCenterPress@@YAHH@Z@4HA
_BSS	SEGMENT
?line@?1??ProduceCenterPress@@YAHH@Z@4HA DD 01H DUP (?)	; `ProduceCenterPress'::`2'::line
_BSS	ENDS
;	COMDAT ?x@?1??TitleProduce@@YAXXZ@4PAMA
_BSS	SEGMENT
?x@?1??TitleProduce@@YAXXZ@4PAMA DD 0aH DUP (?)		; `TitleProduce'::`2'::x
_BSS	ENDS
;	COMDAT ?y@?1??TitleProduce@@YAXXZ@4PAMA
_BSS	SEGMENT
?y@?1??TitleProduce@@YAXXZ@4PAMA DD 0aH DUP (?)		; `TitleProduce'::`2'::y
_BSS	ENDS
;	COMDAT ?a@?1??TitleProduce@@YAXXZ@4PAMA
_BSS	SEGMENT
?a@?1??TitleProduce@@YAXXZ@4PAMA DD 0aH DUP (?)		; `TitleProduce'::`2'::a
_BSS	ENDS
;	COMDAT ?flag@?1??TitleProduce@@YAXXZ@4HA
_BSS	SEGMENT
?flag@?1??TitleProduce@@YAXXZ@4HA DD 01H DUP (?)	; `TitleProduce'::`2'::flag
_BSS	ENDS
;	COMDAT ?cnt@?1??TitleProduce@@YAXXZ@4HA
_BSS	SEGMENT
?cnt@?1??TitleProduce@@YAXXZ@4HA DD 01H DUP (?)		; `TitleProduce'::`2'::cnt
_BSS	ENDS
;	COMDAT ?cnt2@?1??TitleProduce@@YAXXZ@4HA
_BSS	SEGMENT
?cnt2@?1??TitleProduce@@YAXXZ@4HA DD 01H DUP (?)	; `TitleProduce'::`2'::cnt2
_BSS	ENDS
;	COMDAT ?cnt3@?1??TitleProduce@@YAXXZ@4HA
_BSS	SEGMENT
?cnt3@?1??TitleProduce@@YAXXZ@4HA DD 01H DUP (?)	; `TitleProduce'::`2'::cnt3
_BSS	ENDS
;	COMDAT ?fall@?1??TitleProduce@@YAXXZ@4PAHA
_BSS	SEGMENT
?fall@?1??TitleProduce@@YAXXZ@4PAHA DD 08H DUP (?)	; `TitleProduce'::`2'::fall
_BSS	ENDS
;	COMDAT ?time@?1??TitleProduce@@YAXXZ@4HA
_BSS	SEGMENT
?time@?1??TitleProduce@@YAXXZ@4HA DD 01H DUP (?)	; `TitleProduce'::`2'::time
_BSS	ENDS
;	COMDAT __xmm@ffffffa0ffffffa0ffffffa0ffffffa0
CONST	SEGMENT
__xmm@ffffffa0ffffffa0ffffffa0ffffffa0 DB 0a0H, 0ffH, 0ffH, 0ffH, 0a0H, 0ffH
	DB	0ffH, 0ffH, 0a0H, 0ffH, 0ffH, 0ffH, 0a0H, 0ffH, 0ffH, 0ffH
CONST	ENDS
;	COMDAT __xmm@00000002000000020000000200000002
CONST	SEGMENT
__xmm@00000002000000020000000200000002 DB 02H, 00H, 00H, 00H, 02H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 02H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __xmm@00000001000000010000000100000001
CONST	SEGMENT
__xmm@00000001000000010000000100000001 DB 01H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 01H, 00H, 00H, 00H, 01H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c4254000
CONST	SEGMENT
__real@c4254000 DD 0c4254000r			; -661
CONST	ENDS
;	COMDAT __real@c4200000
CONST	SEGMENT
__real@c4200000 DD 0c4200000r			; -640
CONST	ENDS
;	COMDAT __real@c4004ccd
CONST	SEGMENT
__real@c4004ccd DD 0c4004ccdr			; -513.2
CONST	ENDS
;	COMDAT __real@c3f00000
CONST	SEGMENT
__real@c3f00000 DD 0c3f00000r			; -480
CONST	ENDS
;	COMDAT __real@bf000000
CONST	SEGMENT
__real@bf000000 DD 0bf000000r			; -0.5
CONST	ENDS
;	COMDAT __real@44254000
CONST	SEGMENT
__real@44254000 DD 044254000r			; 661
CONST	ENDS
;	COMDAT __real@44200000
CONST	SEGMENT
__real@44200000 DD 044200000r			; 640
CONST	ENDS
;	COMDAT __real@44004ccd
CONST	SEGMENT
__real@44004ccd DD 044004ccdr			; 513.2
CONST	ENDS
;	COMDAT __real@43f00000
CONST	SEGMENT
__real@43f00000 DD 043f00000r			; 480
CONST	ENDS
;	COMDAT __real@43200000
CONST	SEGMENT
__real@43200000 DD 043200000r			; 160
CONST	ENDS
;	COMDAT __real@41b66666
CONST	SEGMENT
__real@41b66666 DD 041b66666r			; 22.8
CONST	ENDS
;	COMDAT __real@418b3333
CONST	SEGMENT
__real@418b3333 DD 0418b3333r			; 17.4
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e99999a
CONST	SEGMENT
__real@3e99999a DD 03e99999ar			; 0.3
CONST	ENDS
;	COMDAT ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA
_DATA	SEGMENT
?endFlag@?1??ProduceHagare@@YAHH@Z@4HA DD 0ffffffffH	; `ProduceHagare'::`2'::endFlag
_DATA	ENDS
;	COMDAT ?endFlag@?1??Produce4Way@@YAHH@Z@4HA
_DATA	SEGMENT
?endFlag@?1??Produce4Way@@YAHH@Z@4HA DD 0ffffffffH	; `Produce4Way'::`2'::endFlag
_DATA	ENDS
;	COMDAT ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA
_DATA	SEGMENT
?endFlag@?1??ProduceBrake@@YAHH@Z@4HA DD 0ffffffffH	; `ProduceBrake'::`2'::endFlag
_DATA	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?ProduceCenterPress@@YAHH@Z
_TEXT	SEGMENT
_spd$1$ = -40						; size = 4
_rect2$ = -36						; size = 16
_rect1$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?ProduceCenterPress@@YAHH@Z PROC			; ProduceCenterPress, COMDAT

; 1007 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx

; 1008 : 	static int line;
; 1009 : 	RECT rect1, rect2;
; 1010 : 	int i;
; 1011 : 	int h = 240 + (DISPLACEMENT_Y >> 1);
; 1012 : 	int spd = 8;
; 1013 : 	// ???
; 1014 : 	if( ProduceInitFlag == TRUE ){

  00011	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?ResoMode@@3HA ; ResoMode
  00017	56		 push	 esi
  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0001e	d1 fe		 sar	 esi, 1
  00020	57		 push	 edi
  00021	81 c6 f0 00 00
	00		 add	 esi, 240		; 000000f0H
  00027	bf 08 00 00 00	 mov	 edi, 8
  0002c	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00033	89 7d d8	 mov	 DWORD PTR _spd$1$[ebp], edi
  00036	75 37		 jne	 SHORT $LN20@ProduceCen

; 1015 : 		ProduceInitFlag = FALSE;
; 1016 : 		if( mode == 0 ){

  00038	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0003c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag
  00046	75 1d		 jne	 SHORT $LN6@ProduceCen

; 1017 : 			line = 240;

  00048	b9 f0 00 00 00	 mov	 ecx, 240		; 000000f0H
  0004d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA, ecx

; 1018 : 			if( ResoMode == 1 ) line >>= 1;

  00053	83 fb 01	 cmp	 ebx, 1
  00056	75 1d		 jne	 SHORT $LN7@ProduceCen
  00058	b9 78 00 00 00	 mov	 ecx, 120		; 00000078H
  0005d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA, ecx
  00063	eb 10		 jmp	 SHORT $LN7@ProduceCen
$LN6@ProduceCen:

; 1019 : 		}else	line = 0;

  00065	33 c9		 xor	 ecx, ecx
  00067	89 0d 00 00 00
	00		 mov	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA, ecx
  0006d	eb 06		 jmp	 SHORT $LN7@ProduceCen
$LN20@ProduceCen:

; 1008 : 	static int line;
; 1009 : 	RECT rect1, rect2;
; 1010 : 	int i;
; 1011 : 	int h = 240 + (DISPLACEMENT_Y >> 1);
; 1012 : 	int spd = 8;
; 1013 : 	// ???
; 1014 : 	if( ProduceInitFlag == TRUE ){

  0006f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA
$LN7@ProduceCen:

; 1020 : 	}
; 1021 : 	// ???????????????
; 1022 : //	ClearBackSurface();	
; 1023 : 	rect1.left  = 0;
; 1024 : 	rect1.right = DEF_APPSIZEX;

  00075	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX

; 1025 : 	rect2.left  = 0;
; 1026 : 	rect2.right = DEF_APPSIZEX;

  0007a	8b d0		 mov	 edx, eax
  0007c	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect1$[ebp], 0
  00083	89 45 f4	 mov	 DWORD PTR _rect1$[ebp+8], eax
  00086	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _rect2$[ebp], 0
  0008d	89 55 e4	 mov	 DWORD PTR _rect2$[ebp+8], edx

; 1027 : 	if( ResoMode == 1 ){

  00090	83 fb 01	 cmp	 ebx, 1
  00093	75 14		 jne	 SHORT $LN9@ProduceCen

; 1028 : 		h >>= 1;
; 1029 : 		rect1.right >>= 1;

  00095	d1 f8		 sar	 eax, 1

; 1030 : 		rect2.right >>= 1;
; 1031 : 		spd >>= 1;

  00097	bf 04 00 00 00	 mov	 edi, 4
  0009c	d1 fe		 sar	 esi, 1
  0009e	d1 fa		 sar	 edx, 1
  000a0	89 45 f4	 mov	 DWORD PTR _rect1$[ebp+8], eax
  000a3	89 55 e4	 mov	 DWORD PTR _rect2$[ebp+8], edx
  000a6	89 7d d8	 mov	 DWORD PTR _spd$1$[ebp], edi
$LN9@ProduceCen:

; 1032 : 	}
; 1033 : 	for( i = 0; i < line; i++ ){

  000a9	33 db		 xor	 ebx, ebx
  000ab	85 c9		 test	 ecx, ecx
  000ad	7e 77		 jle	 SHORT $LN3@ProduceCen
  000af	33 ff		 xor	 edi, edi
$LL4@ProduceCen:

; 1034 : 		rect1.top = h-i*h/line;

  000b1	8b c7		 mov	 eax, edi
  000b3	99		 cdq
  000b4	f7 f9		 idiv	 ecx
  000b6	8b ce		 mov	 ecx, esi
  000b8	2b c8		 sub	 ecx, eax

; 1035 : 		rect1.bottom = rect1.top + 1;
; 1036 : 		lpDraw->lpBACKBUFFER->BltFast( 0, h-i, lpBattleSurface, &rect1, DDBLTFAST_WAIT );

  000ba	6a 10		 push	 16			; 00000010H
  000bc	89 4d f0	 mov	 DWORD PTR _rect1$[ebp+4], ecx
  000bf	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  000c2	89 45 f8	 mov	 DWORD PTR _rect1$[ebp+12], eax
  000c5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  000ca	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000cd	8d 45 ec	 lea	 eax, DWORD PTR _rect1$[ebp]
  000d0	50		 push	 eax
  000d1	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  000d7	8b c6		 mov	 eax, esi
  000d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000db	2b c3		 sub	 eax, ebx
  000dd	50		 push	 eax
  000de	6a 00		 push	 0
  000e0	51		 push	 ecx
  000e1	ff 52 1c	 call	 DWORD PTR [edx+28]

; 1037 : 		rect2.top = i*h/line+h;

  000e4	8b c7		 mov	 eax, edi
  000e6	99		 cdq
  000e7	f7 3d 00 00 00
	00		 idiv	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA

; 1038 : 		rect2.bottom = rect2.top + 1;
; 1039 : 		lpDraw->lpBACKBUFFER->BltFast( 0, i+h, lpBattleSurface, &rect2, DDBLTFAST_WAIT );

  000ed	6a 10		 push	 16			; 00000010H
  000ef	03 c6		 add	 eax, esi
  000f1	89 45 e0	 mov	 DWORD PTR _rect2$[ebp+4], eax
  000f4	40		 inc	 eax
  000f5	89 45 e8	 mov	 DWORD PTR _rect2$[ebp+12], eax
  000f8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  000fd	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00100	8d 45 dc	 lea	 eax, DWORD PTR _rect2$[ebp]
  00103	50		 push	 eax
  00104	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  0010a	8d 04 33	 lea	 eax, DWORD PTR [ebx+esi]
  0010d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010f	50		 push	 eax
  00110	6a 00		 push	 0
  00112	51		 push	 ecx
  00113	ff 52 1c	 call	 DWORD PTR [edx+28]
  00116	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA
  0011c	43		 inc	 ebx
  0011d	03 fe		 add	 edi, esi
  0011f	3b d9		 cmp	 ebx, ecx
  00121	7c 8e		 jl	 SHORT $LL4@ProduceCen
  00123	8b 7d d8	 mov	 edi, DWORD PTR _spd$1$[ebp]
$LN3@ProduceCen:

; 1040 : 	}
; 1041 : 	if( mode == 0 ){

  00126	83 7d 08 00	 cmp	 DWORD PTR _mode$[ebp], 0
  0012a	75 1d		 jne	 SHORT $LN10@ProduceCen

; 1042 : 		line -= spd;

  0012c	2b cf		 sub	 ecx, edi
  0012e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA, ecx

; 1043 : 		if( line < 0 ) return TRUE;

  00134	78 1f		 js	 SHORT $LN19@ProduceCen
$LN13@ProduceCen:
  00136	5f		 pop	 edi

; 1047 : 	}
; 1048 : 	return FALSE;
; 1049 : }

  00137	5e		 pop	 esi
  00138	33 c0		 xor	 eax, eax
  0013a	5b		 pop	 ebx
  0013b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013e	33 cd		 xor	 ecx, ebp
  00140	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c3		 ret	 0
$LN10@ProduceCen:

; 1044 : 	}else{
; 1045 : 		line += spd;

  00149	03 cf		 add	 ecx, edi
  0014b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?line@?1??ProduceCenterPress@@YAHH@Z@4HA, ecx
  00151	3b ce		 cmp	 ecx, esi

; 1046 : 		if( line > h ) return TRUE;

  00153	7e e1		 jle	 SHORT $LN13@ProduceCen
$LN19@ProduceCen:

; 1047 : 	}
; 1048 : 	return FALSE;
; 1049 : }

  00155	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	b8 01 00 00 00	 mov	 eax, 1
  0015d	5f		 pop	 edi
  0015e	5e		 pop	 esi
  0015f	33 cd		 xor	 ecx, ebp
  00161	5b		 pop	 ebx
  00162	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00167	8b e5		 mov	 esp, ebp
  00169	5d		 pop	 ebp
  0016a	c3		 ret	 0
?ProduceCenterPress@@YAHH@Z ENDP			; ProduceCenterPress
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?Produce_break_up2@@YAHH@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ang$ = 8						; size = 4
?Produce_break_up2@@YAHH@Z PROC				; Produce_break_up2, COMDAT

; 960  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 961  : 	RECT rect = { 0, 0, 640, 0 };
; 962  : 	int d7;
; 963  : 	// ??????
; 964  : 	if( ProduceInitFlag == TRUE ){

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00017	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  0001e	c7 45 f4 80 02
	00 00		 mov	 DWORD PTR _rect$[ebp+8], 640 ; 00000280H
  00025	75 0c		 jne	 SHORT $LN5@Produce_br

; 965  : 		ProduceInitFlag = FALSE;

  00027	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag

; 966  : 		bran_flg = 0;
; 967  : 	}
; 968  : 	if(bran_flg == 0){		//????

  00031	eb 09		 jmp	 SHORT $LN24@Produce_br
$LN5@Produce_br:
  00033	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bran_flg@@3HA, 0
  0003a	75 27		 jne	 SHORT $LN26@Produce_br
$LN24@Produce_br:

; 969  : 		bran_flg = 1;		//????
; 970  : 		if(ang < 0){

  0003c	83 7d 08 00	 cmp	 DWORD PTR _ang$[ebp], 0
  00040	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 1
  0004a	7d 0d		 jge	 SHORT $LN7@Produce_br

; 971  : 			bran_cnt = 480;

  0004c	b9 e0 01 00 00	 mov	 ecx, 480		; 000001e0H
  00051	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx

; 972  : 		} else {

  00057	eb 14		 jmp	 SHORT $LN25@Produce_br
$LN7@Produce_br:

; 973  : 			bran_cnt = 0;

  00059	33 c9		 xor	 ecx, ecx
  0005b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx
  00061	eb 06		 jmp	 SHORT $LN8@Produce_br
$LN26@Produce_br:

; 966  : 		bran_flg = 0;
; 967  : 	}
; 968  : 	if(bran_flg == 0){		//????

  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?bran_cnt@@3HA
$LN8@Produce_br:

; 974  : 		}
; 975  : 	}
; 976  : 	// ???????????????
; 977  : //	ClearBackSurface();	
; 978  : 	for(d7=0; d7<bran_cnt; d7++){

  00069	85 c9		 test	 ecx, ecx
  0006b	7e 52		 jle	 SHORT $LN3@Produce_br
$LN25@Produce_br:
  0006d	56		 push	 esi
  0006e	57		 push	 edi
  0006f	33 ff		 xor	 edi, edi
  00071	33 f6		 xor	 esi, esi
$LL4@Produce_br:

; 979  : 		rect.top = 480-d7*480/bran_cnt;

  00073	8b c7		 mov	 eax, edi
  00075	99		 cdq
  00076	f7 f9		 idiv	 ecx
  00078	b9 e0 01 00 00	 mov	 ecx, 480		; 000001e0H
  0007d	2b c8		 sub	 ecx, eax

; 980  : 		rect.bottom = rect.top+1;
; 981  : 		lpDraw->lpBACKBUFFER->BltFast( 0, 480-d7, lpBattleSurface, &rect, DDBLTFAST_WAIT );

  0007f	6a 10		 push	 16			; 00000010H
  00081	89 4d f0	 mov	 DWORD PTR _rect$[ebp+4], ecx
  00084	8d 41 01	 lea	 eax, DWORD PTR [ecx+1]
  00087	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax
  0008a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  0008f	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  00092	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00095	50		 push	 eax
  00096	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  0009c	b8 e0 01 00 00	 mov	 eax, 480		; 000001e0H
  000a1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a3	2b c6		 sub	 eax, esi
  000a5	50		 push	 eax
  000a6	6a 00		 push	 0
  000a8	51		 push	 ecx
  000a9	ff 52 1c	 call	 DWORD PTR [edx+28]
  000ac	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?bran_cnt@@3HA
  000b2	46		 inc	 esi
  000b3	81 c7 e0 01 00
	00		 add	 edi, 480		; 000001e0H
  000b9	3b f1		 cmp	 esi, ecx
  000bb	7c b6		 jl	 SHORT $LL4@Produce_br
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
$LN3@Produce_br:

; 982  : 	}
; 983  : 	if(ang < 0){

  000bf	83 7d 08 00	 cmp	 DWORD PTR _ang$[ebp], 0
  000c3	7d 45		 jge	 SHORT $LN9@Produce_br

; 984  : 		bran_cnt -= BREAK_UP;

  000c5	83 e9 08	 sub	 ecx, 8
  000c8	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx

; 985  : 		if(bran_cnt < 0){

  000ce	0f 89 a5 00 00
	00		 jns	 $LN15@Produce_br

; 986  : 			// ?????
; 987  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  000d4	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  000d9	83 f8 02	 cmp	 eax, 2
  000dc	74 47		 je	 SHORT $LN27@Produce_br

; 988  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  000de	83 f8 03	 cmp	 eax, 3
  000e1	75 79		 jne	 SHORT $LN18@Produce_br
  000e3	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 4 ; GameState

; 999  : 			return TRUE;

  000ed	b8 01 00 00 00	 mov	 eax, 1
  000f2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 1000 : 		}
; 1001 : 	}
; 1002 : 	return FALSE;
; 1003 : }

  000fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ff	33 cd		 xor	 ecx, ebp
  00101	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00106	8b e5		 mov	 esp, ebp
  00108	5d		 pop	 ebp
  00109	c3		 ret	 0
$LN9@Produce_br:

; 989  : 			bran_flg = 0;		//????
; 990  : 			return TRUE;
; 991  : 		}
; 992  : 	} else {
; 993  : 		bran_cnt += BREAK_UP;

  0010a	83 c1 08	 add	 ecx, 8
  0010d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx
  00113	81 f9 e0 01 00
	00		 cmp	 ecx, 480		; 000001e0H

; 994  : 		if(bran_cnt > 480){

  00119	7e 5e		 jle	 SHORT $LN15@Produce_br

; 995  : 			// ?????
; 996  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  0011b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  00120	83 f8 02	 cmp	 eax, 2
  00123	75 27		 jne	 SHORT $LN16@Produce_br
$LN27@Produce_br:

; 998  : 			bran_flg = 0;		//????

  00125	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 999  : 			return TRUE;

  0012f	b8 01 00 00 00	 mov	 eax, 1
  00134	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 1000 : 		}
; 1001 : 	}
; 1002 : 	return FALSE;
; 1003 : }

  0013e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00141	33 cd		 xor	 ecx, ebp
  00143	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00148	8b e5		 mov	 esp, ebp
  0014a	5d		 pop	 ebp
  0014b	c3		 ret	 0
$LN16@Produce_br:

; 997  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  0014c	83 f8 03	 cmp	 eax, 3
  0014f	b9 04 00 00 00	 mov	 ecx, 4
  00154	0f 44 c1	 cmove	 eax, ecx
  00157	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState
$LN18@Produce_br:

; 998  : 			bran_flg = 0;		//????

  0015c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 999  : 			return TRUE;

  00166	b8 01 00 00 00	 mov	 eax, 1

; 1000 : 		}
; 1001 : 	}
; 1002 : 	return FALSE;
; 1003 : }

  0016b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016e	33 cd		 xor	 ecx, ebp
  00170	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00175	8b e5		 mov	 esp, ebp
  00177	5d		 pop	 ebp
  00178	c3		 ret	 0
$LN15@Produce_br:
  00179	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0017c	33 c0		 xor	 eax, eax
  0017e	33 cd		 xor	 ecx, ebp
  00180	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00185	8b e5		 mov	 esp, ebp
  00187	5d		 pop	 ebp
  00188	c3		 ret	 0
?Produce_break_up2@@YAHH@Z ENDP				; Produce_break_up2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?Produce_break_up@@YAHH@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ang$ = 8						; size = 4
?Produce_break_up@@YAHH@Z PROC				; Produce_break_up, COMDAT

; 912  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 913  : 	RECT rect = { 0, 0, 640, 0 };
; 914  : 	int d7;
; 915  : 	// ??????
; 916  : 	if( ProduceInitFlag == TRUE ){

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00017	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  0001e	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 0
  00025	c7 45 f4 80 02
	00 00		 mov	 DWORD PTR _rect$[ebp+8], 640 ; 00000280H
  0002c	75 0c		 jne	 SHORT $LN5@Produce_br

; 917  : 		ProduceInitFlag = FALSE;

  0002e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag

; 918  : 		bran_flg = 0;
; 919  : 	}
; 920  : 	if(bran_flg == 0){		//????

  00038	eb 09		 jmp	 SHORT $LN24@Produce_br
$LN5@Produce_br:
  0003a	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bran_flg@@3HA, 0
  00041	75 27		 jne	 SHORT $LN26@Produce_br
$LN24@Produce_br:

; 921  : 		bran_flg = 1;		//????
; 922  : 		if(ang < 0){

  00043	83 7d 08 00	 cmp	 DWORD PTR _ang$[ebp], 0
  00047	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 1
  00051	7d 0d		 jge	 SHORT $LN7@Produce_br

; 923  : 			bran_cnt = 480;

  00053	b9 e0 01 00 00	 mov	 ecx, 480		; 000001e0H
  00058	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx

; 924  : 		} else {

  0005e	eb 14		 jmp	 SHORT $LN25@Produce_br
$LN7@Produce_br:

; 925  : 			bran_cnt = 0;

  00060	33 c9		 xor	 ecx, ecx
  00062	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx
  00068	eb 06		 jmp	 SHORT $LN8@Produce_br
$LN26@Produce_br:

; 918  : 		bran_flg = 0;
; 919  : 	}
; 920  : 	if(bran_flg == 0){		//????

  0006a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?bran_cnt@@3HA
$LN8@Produce_br:

; 926  : 		}
; 927  : 	}
; 928  : 	// ???????????????
; 929  : //	ClearBackSurface();	
; 930  : 	for(d7=0; d7<bran_cnt; d7++){

  00070	85 c9		 test	 ecx, ecx
  00072	7e 48		 jle	 SHORT $LN3@Produce_br
$LN25@Produce_br:
  00074	56		 push	 esi
  00075	57		 push	 edi
  00076	33 ff		 xor	 edi, edi
  00078	33 f6		 xor	 esi, esi
  0007a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Produce_br:

; 931  : 		rect.top = d7*480/bran_cnt;

  00080	8b c7		 mov	 eax, edi
  00082	99		 cdq
  00083	f7 f9		 idiv	 ecx

; 932  : 		rect.bottom = rect.top+1;
; 933  : 		lpDraw->lpBACKBUFFER->BltFast( 0, d7, lpBattleSurface, &rect, DDBLTFAST_WAIT );

  00085	6a 10		 push	 16			; 00000010H
  00087	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax
  0008a	8d 55 ec	 lea	 edx, DWORD PTR _rect$[ebp]
  0008d	40		 inc	 eax
  0008e	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax
  00091	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  00096	52		 push	 edx
  00097	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  0009d	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  000a0	56		 push	 esi
  000a1	6a 00		 push	 0
  000a3	50		 push	 eax
  000a4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a6	ff 51 1c	 call	 DWORD PTR [ecx+28]
  000a9	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?bran_cnt@@3HA
  000af	46		 inc	 esi
  000b0	81 c7 e0 01 00
	00		 add	 edi, 480		; 000001e0H
  000b6	3b f1		 cmp	 esi, ecx
  000b8	7c c6		 jl	 SHORT $LL4@Produce_br
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
$LN3@Produce_br:

; 934  : 	}
; 935  : 	if(ang < 0){

  000bc	83 7d 08 00	 cmp	 DWORD PTR _ang$[ebp], 0
  000c0	7d 45		 jge	 SHORT $LN9@Produce_br

; 936  : 		bran_cnt -= BREAK_UP;

  000c2	83 e9 08	 sub	 ecx, 8
  000c5	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx

; 937  : 		if(bran_cnt < 0){

  000cb	0f 89 a5 00 00
	00		 jns	 $LN15@Produce_br

; 938  : 			// ?????
; 939  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  000d1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  000d6	83 f8 02	 cmp	 eax, 2
  000d9	74 47		 je	 SHORT $LN27@Produce_br

; 940  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  000db	83 f8 03	 cmp	 eax, 3
  000de	75 79		 jne	 SHORT $LN18@Produce_br
  000e0	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 4 ; GameState

; 951  : 			return TRUE;

  000ea	b8 01 00 00 00	 mov	 eax, 1
  000ef	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 952  : 		}
; 953  : 	}
; 954  : 	return FALSE;
; 955  : }

  000f9	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000fc	33 cd		 xor	 ecx, ebp
  000fe	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00103	8b e5		 mov	 esp, ebp
  00105	5d		 pop	 ebp
  00106	c3		 ret	 0
$LN9@Produce_br:

; 941  : 			bran_flg = 0;		//????
; 942  : 			return TRUE;
; 943  : 		}
; 944  : 	} else {
; 945  : 		bran_cnt += BREAK_UP;

  00107	83 c1 08	 add	 ecx, 8
  0010a	89 0d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, ecx
  00110	81 f9 e0 01 00
	00		 cmp	 ecx, 480		; 000001e0H

; 946  : 		if(bran_cnt > 480){

  00116	7e 5e		 jle	 SHORT $LN15@Produce_br

; 947  : 			// ?????
; 948  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  00118	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  0011d	83 f8 02	 cmp	 eax, 2
  00120	75 27		 jne	 SHORT $LN16@Produce_br
$LN27@Produce_br:

; 950  : 			bran_flg = 0;		//????

  00122	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 951  : 			return TRUE;

  0012c	b8 01 00 00 00	 mov	 eax, 1
  00131	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 952  : 		}
; 953  : 	}
; 954  : 	return FALSE;
; 955  : }

  0013b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013e	33 cd		 xor	 ecx, ebp
  00140	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00145	8b e5		 mov	 esp, ebp
  00147	5d		 pop	 ebp
  00148	c3		 ret	 0
$LN16@Produce_br:

; 949  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  00149	83 f8 03	 cmp	 eax, 3
  0014c	b9 04 00 00 00	 mov	 ecx, 4
  00151	0f 44 c1	 cmove	 eax, ecx
  00154	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState
$LN18@Produce_br:

; 950  : 			bran_flg = 0;		//????

  00159	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 951  : 			return TRUE;

  00163	b8 01 00 00 00	 mov	 eax, 1

; 952  : 		}
; 953  : 	}
; 954  : 	return FALSE;
; 955  : }

  00168	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0016b	33 cd		 xor	 ecx, ebp
  0016d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00172	8b e5		 mov	 esp, ebp
  00174	5d		 pop	 ebp
  00175	c3		 ret	 0
$LN15@Produce_br:
  00176	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00179	33 c0		 xor	 eax, eax
  0017b	33 cd		 xor	 ecx, ebp
  0017d	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00182	8b e5		 mov	 esp, ebp
  00184	5d		 pop	 ebp
  00185	c3		 ret	 0
?Produce_break_up@@YAHH@Z ENDP				; Produce_break_up
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?Produce_bran_small@@YAHH@Z
_TEXT	SEGMENT
?DISPLACEMENT_Y@@3HA$1 = -40				; size = 4
?DISPLACEMENT_X@@3HA$1 = -36				; size = 4
$T1 = -32						; size = 4
_d7$2$ = -32						; size = 4
_a0$1$ = -28						; size = 4
_d7$1$ = -28						; size = 4
tv601 = -24						; size = 4
?bran_cnt@@3HA$1 = -24					; size = 4
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_ang$ = 8						; size = 4
?Produce_bran_small@@YAHH@Z PROC			; Produce_bran_small, COMDAT

; 838  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 28	 sub	 esp, 40			; 00000028H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 839  : 	RECT rect;
; 840  : 	int d0,d6,d7;
; 841  : 	int *a0,x,y;
; 842  : 	// ??????
; 843  : 	if( ProduceInitFlag == TRUE ){

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0001c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BRAN_SIZE_X@@3HA ; BRAN_SIZE_X
  00022	53		 push	 ebx
  00023	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?BRAN_SIZE_Y@@3HA ; BRAN_SIZE_Y
  00029	56		 push	 esi
  0002a	57		 push	 edi
  0002b	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00031	89 45 d8	 mov	 DWORD PTR ?DISPLACEMENT_Y@@3HA$1[ebp], eax
  00034	89 7d dc	 mov	 DWORD PTR ?DISPLACEMENT_X@@3HA$1[ebp], edi
  00037	75 0c		 jne	 SHORT $LN14@Produce_br

; 844  : 		ProduceInitFlag = FALSE;

  00039	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag

; 845  : 		bran_flg = 0;
; 846  : 	}
; 847  : 	if(bran_flg == 0){		//????

  00043	eb 0d		 jmp	 SHORT $LN47@Produce_br
$LN14@Produce_br:
  00045	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?bran_flg@@3HA, 0
  0004c	0f 85 a1 00 00
	00		 jne	 $LN49@Produce_br
$LN47@Produce_br:

; 848  : 		bran_flg = 1;		//?????
; 849  : 		d0 = 0;
; 850  : 		for( d7= -240 - (DISPLACEMENT_Y >> 1) + (BRAN_SIZE_Y >> 1); d7<240 + (DISPLACEMENT_Y >> 1) + (BRAN_SIZE_Y >> 1); d7+=BRAN_SIZE_Y){

  00052	8b d3		 mov	 edx, ebx
  00054	d1 f8		 sar	 eax, 1
  00056	d1 fa		 sar	 edx, 1
  00058	33 ff		 xor	 edi, edi
  0005a	8b f2		 mov	 esi, edx
  0005c	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 1
  00066	2b f0		 sub	 esi, eax
  00068	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  0006d	81 ee f0 00 00
	00		 sub	 esi, 240		; 000000f0H
  00073	03 c2		 add	 eax, edx
  00075	89 75 e4	 mov	 DWORD PTR _d7$1$[ebp], esi
  00078	89 45 e0	 mov	 DWORD PTR $T1[ebp], eax
  0007b	3b f0		 cmp	 esi, eax
  0007d	7d 5a		 jge	 SHORT $LN3@Produce_br
  0007f	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00085	8b f1		 mov	 esi, ecx
  00087	d1 fe		 sar	 esi, 1
  00089	d1 fa		 sar	 edx, 1
  0008b	8b c6		 mov	 eax, esi
  0008d	2b c2		 sub	 eax, edx
  0008f	81 c2 40 01 00
	00		 add	 edx, 320		; 00000140H
  00095	05 c0 fe ff ff	 add	 eax, -320		; fffffec0H
  0009a	03 f2		 add	 esi, edx
  0009c	8b 55 e0	 mov	 edx, DWORD PTR $T1[ebp]
  0009f	89 45 e8	 mov	 DWORD PTR tv601[ebp], eax
$LL4@Produce_br:

; 851  : 			for(d6=-320 - (DISPLACEMENT_X >> 1) + (BRAN_SIZE_X >> 1); d6<320 + (DISPLACEMENT_X >> 1) + (BRAN_SIZE_X >> 1); d6+=BRAN_SIZE_X){

  000a2	3b c6		 cmp	 eax, esi
  000a4	7d 24		 jge	 SHORT $LN2@Produce_br
  000a6	8b 55 e4	 mov	 edx, DWORD PTR _d7$1$[ebp]
  000a9	0f 1f 80 00 00
	00 00		 npad	 7
$LL7@Produce_br:

; 852  : 				pos_tbl[d0++] = d6;

  000b0	89 04 bd 00 00
	00 00		 mov	 DWORD PTR ?pos_tbl@@3PAHA[edi*4], eax
  000b7	03 c1		 add	 eax, ecx

; 853  : 				pos_tbl[d0++] = d7;

  000b9	89 14 bd 04 00
	00 00		 mov	 DWORD PTR ?pos_tbl@@3PAHA[edi*4+4], edx
  000c0	83 c7 02	 add	 edi, 2
  000c3	3b c6		 cmp	 eax, esi
  000c5	7c e9		 jl	 SHORT $LL7@Produce_br
  000c7	8b 55 e0	 mov	 edx, DWORD PTR $T1[ebp]
$LN2@Produce_br:

; 848  : 		bran_flg = 1;		//?????
; 849  : 		d0 = 0;
; 850  : 		for( d7= -240 - (DISPLACEMENT_Y >> 1) + (BRAN_SIZE_Y >> 1); d7<240 + (DISPLACEMENT_Y >> 1) + (BRAN_SIZE_Y >> 1); d7+=BRAN_SIZE_Y){

  000ca	8b 45 e4	 mov	 eax, DWORD PTR _d7$1$[ebp]
  000cd	03 c3		 add	 eax, ebx
  000cf	89 45 e4	 mov	 DWORD PTR _d7$1$[ebp], eax
  000d2	3b c2		 cmp	 eax, edx
  000d4	8b 45 e8	 mov	 eax, DWORD PTR tv601[ebp]
  000d7	7c c9		 jl	 SHORT $LL4@Produce_br
$LN3@Produce_br:

; 854  : 			}
; 855  : 		}
; 856  : 		bran_cnt = ang < 0 ? 64:0;

  000d9	8b 7d 08	 mov	 edi, DWORD PTR _ang$[ebp]
  000dc	c1 ff 1f	 sar	 edi, 31			; 0000001fH
  000df	83 e7 40	 and	 edi, 64			; 00000040H
  000e2	89 7d e8	 mov	 DWORD PTR ?bran_cnt@@3HA$1[ebp], edi
  000e5	89 3d 00 00 00
	00		 mov	 DWORD PTR ?bran_cnt@@3HA, edi
  000eb	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  000f1	eb 08		 jmp	 SHORT $LN15@Produce_br
$LN49@Produce_br:

; 845  : 		bran_flg = 0;
; 846  : 	}
; 847  : 	if(bran_flg == 0){		//????

  000f3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bran_cnt@@3HA
  000f8	89 45 e8	 mov	 DWORD PTR ?bran_cnt@@3HA$1[ebp], eax
$LN15@Produce_br:

; 857  : 	}
; 858  : 	// ???????????????
; 859  : //	ClearBackSurface();	
; 860  : 	a0 = pos_tbl + (((DISPLACEMENT_Y + 480) / BRAN_SIZE_Y) * ((DISPLACEMENT_X + 640) / BRAN_SIZE_X) << 1) - 2;

  000fb	8d 87 80 02 00
	00		 lea	 eax, DWORD PTR [edi+640]
  00101	99		 cdq
  00102	f7 f9		 idiv	 ecx
  00104	8b f0		 mov	 esi, eax
  00106	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0010b	05 e0 01 00 00	 add	 eax, 480		; 000001e0H
  00110	99		 cdq
  00111	f7 fb		 idiv	 ebx

; 861  : 	for(d7=480 + DISPLACEMENT_Y -BRAN_SIZE_Y; d7>=0; d7-=BRAN_SIZE_Y){

  00113	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00119	0f af f0	 imul	 esi, eax
  0011c	2b d3		 sub	 edx, ebx
  0011e	81 c2 e0 01 00
	00		 add	 edx, 480		; 000001e0H
  00124	89 55 e0	 mov	 DWORD PTR _d7$2$[ebp], edx
  00127	8d 04 f5 f8 ff
	ff ff		 lea	 eax, DWORD PTR ?pos_tbl@@3PAHA[esi*8-8]
  0012e	89 45 e4	 mov	 DWORD PTR _a0$1$[ebp], eax
  00131	0f 88 42 01 00
	00		 js	 $LN9@Produce_br
  00137	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL10@Produce_br:

; 862  : 		for(d6=640 + DISPLACEMENT_X-BRAN_SIZE_X; d6>=0; d6-=BRAN_SIZE_X){

  00140	2b f9		 sub	 edi, ecx
  00142	81 c7 80 02 00
	00		 add	 edi, 640		; 00000280H
  00148	0f 88 1d 01 00
	00		 js	 $LN54@Produce_br
  0014e	66 90		 npad	 2
$LL13@Produce_br:

; 863  : 			//???????????????
; 864  : 			if(ResoMode == 1){

  00150	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ResoMode@@3HA, 1 ; ResoMode
  00157	6a 10		 push	 16			; 00000010H
  00159	75 62		 jne	 SHORT $LN16@Produce_br

; 865  : 				rect.left = d6 >> 1;

  0015b	8b c7		 mov	 eax, edi
  0015d	d1 e8		 shr	 eax, 1
  0015f	89 45 ec	 mov	 DWORD PTR _rect$[ebp], eax

; 866  : 				rect.right = (d6+BRAN_SIZE_X) >> 1;

  00162	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  00165	d1 f8		 sar	 eax, 1
  00167	89 45 f4	 mov	 DWORD PTR _rect$[ebp+8], eax

; 867  : 				rect.top = d7 >> 1;

  0016a	8b c2		 mov	 eax, edx
  0016c	d1 f8		 sar	 eax, 1
  0016e	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax

; 868  : 				rect.bottom = (d7+BRAN_SIZE_Y) >> 1;

  00171	8d 04 13	 lea	 eax, DWORD PTR [ebx+edx]
  00174	d1 f8		 sar	 eax, 1
  00176	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax

; 874  : 			}
; 875  : 			//???????????????
; 876  : 			if(ResoMode == 1){
; 877  : 				x = (((*a0 * bran_cnt) >> 6) + 320 - (BRAN_SIZE_X >> 1)) >> 1;
; 878  : 				y = (((*(a0 + 1) * bran_cnt) >> 6) + 240 - (BRAN_SIZE_Y >> 1)) >> 1;
; 879  : 				lpDraw->lpBACKBUFFER->BltFast(x,y,lpBattleSurface,&rect,DDBLTFAST_WAIT);

  00179	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  0017e	d1 fb		 sar	 ebx, 1
  00180	d1 f9		 sar	 ecx, 1
  00182	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  00185	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00188	50		 push	 eax
  00189	8b 45 e4	 mov	 eax, DWORD PTR _a0$1$[ebp]
  0018c	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00192	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00195	0f af 45 e8	 imul	 eax, DWORD PTR ?bran_cnt@@3HA$1[ebp]
  00199	c1 f8 06	 sar	 eax, 6
  0019c	2b c3		 sub	 eax, ebx
  0019e	05 f0 00 00 00	 add	 eax, 240		; 000000f0H
  001a3	d1 f8		 sar	 eax, 1
  001a5	50		 push	 eax
  001a6	8b 45 e4	 mov	 eax, DWORD PTR _a0$1$[ebp]
  001a9	8b 00		 mov	 eax, DWORD PTR [eax]
  001ab	0f af 45 e8	 imul	 eax, DWORD PTR ?bran_cnt@@3HA$1[ebp]
  001af	c1 f8 06	 sar	 eax, 6
  001b2	2b c1		 sub	 eax, ecx
  001b4	05 40 01 00 00	 add	 eax, 320		; 00000140H
  001b9	d1 f8		 sar	 eax, 1

; 880  : 			} else {

  001bb	eb 60		 jmp	 SHORT $LN55@Produce_br
$LN16@Produce_br:

; 869  : 			} else {
; 870  : 				rect.left = d6;
; 871  : 				rect.right = (d6+BRAN_SIZE_X);

  001bd	8d 04 39	 lea	 eax, DWORD PTR [ecx+edi]
  001c0	89 7d ec	 mov	 DWORD PTR _rect$[ebp], edi
  001c3	89 45 f4	 mov	 DWORD PTR _rect$[ebp+8], eax

; 872  : 				rect.top = d7;
; 873  : 				rect.bottom = (d7+BRAN_SIZE_Y);

  001c6	8d 04 13	 lea	 eax, DWORD PTR [ebx+edx]
  001c9	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax

; 881  : 				x = ((*a0 * bran_cnt) >> 6) + 320 + (DISPLACEMENT_X >> 1) - (BRAN_SIZE_X >> 1);
; 882  : 				y = ((*(a0 + 1) * bran_cnt) >> 6) + 240 + (DISPLACEMENT_Y >> 1) - (BRAN_SIZE_Y >> 1);
; 883  : 				lpDraw->lpBACKBUFFER->BltFast(x,y,lpBattleSurface,&rect,DDBLTFAST_WAIT);

  001cc	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  001d1	89 55 f0	 mov	 DWORD PTR _rect$[ebp+4], edx
  001d4	d1 fb		 sar	 ebx, 1
  001d6	d1 f9		 sar	 ecx, 1
  001d8	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001db	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  001de	50		 push	 eax
  001df	8b 45 e4	 mov	 eax, DWORD PTR _a0$1$[ebp]
  001e2	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  001e8	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001eb	0f af 45 e8	 imul	 eax, DWORD PTR ?bran_cnt@@3HA$1[ebp]
  001ef	c1 f8 06	 sar	 eax, 6
  001f2	2b c3		 sub	 eax, ebx
  001f4	8b 5d d8	 mov	 ebx, DWORD PTR ?DISPLACEMENT_Y@@3HA$1[ebp]
  001f7	d1 fb		 sar	 ebx, 1
  001f9	81 c3 f0 00 00
	00		 add	 ebx, 240		; 000000f0H
  001ff	03 c3		 add	 eax, ebx
  00201	50		 push	 eax
  00202	8b 45 e4	 mov	 eax, DWORD PTR _a0$1$[ebp]
  00205	8b 00		 mov	 eax, DWORD PTR [eax]
  00207	0f af 45 e8	 imul	 eax, DWORD PTR ?bran_cnt@@3HA$1[ebp]
  0020b	c1 f8 06	 sar	 eax, 6
  0020e	2b c1		 sub	 eax, ecx
  00210	8b 4d dc	 mov	 ecx, DWORD PTR ?DISPLACEMENT_X@@3HA$1[ebp]
  00213	d1 f9		 sar	 ecx, 1
  00215	81 c1 40 01 00
	00		 add	 ecx, 320		; 00000140H
  0021b	03 c1		 add	 eax, ecx
$LN55@Produce_br:

; 884  : 			}
; 885  : 			a0 -= 2;

  0021d	8b 32		 mov	 esi, DWORD PTR [edx]
  0021f	50		 push	 eax
  00220	52		 push	 edx
  00221	ff 56 1c	 call	 DWORD PTR [esi+28]
  00224	83 6d e4 08	 sub	 DWORD PTR _a0$1$[ebp], 8
  00228	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?BRAN_SIZE_X@@3HA ; BRAN_SIZE_X
  0022e	2b f9		 sub	 edi, ecx
  00230	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00235	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR ?BRAN_SIZE_Y@@3HA ; BRAN_SIZE_Y
  0023b	8b 55 e0	 mov	 edx, DWORD PTR _d7$2$[ebp]
  0023e	89 45 d8	 mov	 DWORD PTR ?DISPLACEMENT_Y@@3HA$1[ebp], eax
  00241	78 15		 js	 SHORT $LN53@Produce_br

; 862  : 		for(d6=640 + DISPLACEMENT_X-BRAN_SIZE_X; d6>=0; d6-=BRAN_SIZE_X){

  00243	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00248	89 45 dc	 mov	 DWORD PTR ?DISPLACEMENT_X@@3HA$1[ebp], eax
  0024b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bran_cnt@@3HA
  00250	89 45 e8	 mov	 DWORD PTR ?bran_cnt@@3HA$1[ebp], eax
  00253	e9 f8 fe ff ff	 jmp	 $LL13@Produce_br
$LN53@Produce_br:
  00258	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  0025e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bran_cnt@@3HA
  00263	89 7d dc	 mov	 DWORD PTR ?DISPLACEMENT_X@@3HA$1[ebp], edi
  00266	89 45 e8	 mov	 DWORD PTR ?bran_cnt@@3HA$1[ebp], eax
  00269	eb 03		 jmp	 SHORT $LN8@Produce_br
$LN54@Produce_br:
  0026b	8b 7d dc	 mov	 edi, DWORD PTR ?DISPLACEMENT_X@@3HA$1[ebp]
$LN8@Produce_br:

; 861  : 	for(d7=480 + DISPLACEMENT_Y -BRAN_SIZE_Y; d7>=0; d7-=BRAN_SIZE_Y){

  0026e	2b d3		 sub	 edx, ebx
  00270	89 55 e0	 mov	 DWORD PTR _d7$2$[ebp], edx
  00273	0f 89 c7 fe ff
	ff		 jns	 $LL10@Produce_br
$LN9@Produce_br:

; 886  : 		}
; 887  : 	}
; 888  : 	bran_cnt += ang;

  00279	8b 45 e8	 mov	 eax, DWORD PTR ?bran_cnt@@3HA$1[ebp]
  0027c	8b 4d 08	 mov	 ecx, DWORD PTR _ang$[ebp]
  0027f	03 c1		 add	 eax, ecx
  00281	a3 00 00 00 00	 mov	 DWORD PTR ?bran_cnt@@3HA, eax
  00286	5f		 pop	 edi
  00287	5e		 pop	 esi
  00288	5b		 pop	 ebx

; 889  : 	if(ang < 0){

  00289	85 c9		 test	 ecx, ecx
  0028b	79 3e		 jns	 SHORT $LN20@Produce_br

; 890  : 		if(bran_cnt < 0){

  0028d	85 c0		 test	 eax, eax
  0028f	0f 89 99 00 00
	00		 jns	 $LN26@Produce_br

; 891  : 			// ?????
; 892  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  00295	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  0029a	83 f8 02	 cmp	 eax, 2
  0029d	74 3b		 je	 SHORT $LN56@Produce_br

; 893  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  0029f	83 f8 03	 cmp	 eax, 3
  002a2	75 6d		 jne	 SHORT $LN29@Produce_br
  002a4	c7 05 00 00 00
	00 04 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 4 ; GameState

; 903  : 			return TRUE;

  002ae	b8 01 00 00 00	 mov	 eax, 1
  002b3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 904  : 		}
; 905  : 	}
; 906  : 	return FALSE;
; 907  : }

  002bd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002c0	33 cd		 xor	 ecx, ebp
  002c2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c7	8b e5		 mov	 esp, ebp
  002c9	5d		 pop	 ebp
  002ca	c3		 ret	 0
$LN20@Produce_br:

; 894  : 			bran_flg = 0;
; 895  : 			return TRUE;
; 896  : 		}
; 897  : 	} else {
; 898  : 		if(bran_cnt > 64){

  002cb	83 f8 40	 cmp	 eax, 64			; 00000040H
  002ce	7e 5e		 jle	 SHORT $LN26@Produce_br

; 899  : 			// ?????
; 900  : 			if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  002d5	83 f8 02	 cmp	 eax, 2
  002d8	75 27		 jne	 SHORT $LN27@Produce_br
$LN56@Produce_br:

; 902  : 			bran_flg = 0;

  002da	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 903  : 			return TRUE;

  002e4	b8 01 00 00 00	 mov	 eax, 1
  002e9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 904  : 		}
; 905  : 	}
; 906  : 	return FALSE;
; 907  : }

  002f3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002f6	33 cd		 xor	 ecx, ebp
  002f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002fd	8b e5		 mov	 esp, ebp
  002ff	5d		 pop	 ebp
  00300	c3		 ret	 0
$LN27@Produce_br:

; 901  : 			else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  00301	83 f8 03	 cmp	 eax, 3
  00304	b9 04 00 00 00	 mov	 ecx, 4
  00309	0f 44 c1	 cmove	 eax, ecx
  0030c	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState
$LN29@Produce_br:

; 902  : 			bran_flg = 0;

  00311	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?bran_flg@@3HA, 0

; 903  : 			return TRUE;

  0031b	b8 01 00 00 00	 mov	 eax, 1

; 904  : 		}
; 905  : 	}
; 906  : 	return FALSE;
; 907  : }

  00320	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00323	33 cd		 xor	 ecx, ebp
  00325	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0032a	8b e5		 mov	 esp, ebp
  0032c	5d		 pop	 ebp
  0032d	c3		 ret	 0
$LN26@Produce_br:
  0032e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00331	33 c0		 xor	 eax, eax
  00333	33 cd		 xor	 ecx, ebp
  00335	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0033a	8b e5		 mov	 esp, ebp
  0033c	5d		 pop	 ebp
  0033d	c3		 ret	 0
?Produce_bran_small@@YAHH@Z ENDP			; Produce_bran_small
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?ProduceHagare@@YAHH@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?ProduceHagare@@YAHH@Z PROC				; ProduceHagare, COMDAT

; 379  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi

; 380  : 	//区块切割单位大小
; 381  : 	//1024 * 768 
; 382  : 	int CutX = 128 ; 
; 383  : 	int CutY = 96 ; 
; 384  : 	// 800 * 600 
; 385  : 	//int CutX = 100 ; 
; 386  : 	//int CutY = 75 ; 
; 387  : 
; 388  : 	RECT rect;
; 389  : 	static int endFlag = -1;
; 390  : 	static int x[ 64 ], y[ 64 ], a[ 64 ], cnt,cnt2; 
; 391  : 	static int posX[ 64 ], posY[ 64 ]; 
; 392  : 	static BOOL flag[ 64 ]; 
; 393  : 	int i, j, nowX = 0, nowY = 0;

  00013	33 f6		 xor	 esi, esi

; 394  : 	int rnd = Rnd( 0, 63 );

  00015	6a 3f		 push	 63			; 0000003fH
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  0001d	83 c4 08	 add	 esp, 8

; 395  : 	int no = 0;

  00020	33 c9		 xor	 ecx, ecx

; 396  : 	// ??????
; 397  : 	if( ProduceInitFlag == TRUE ){

  00022	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00029	8b d0		 mov	 edx, eax
  0002b	75 11		 jne	 SHORT $LN153@ProduceHag

; 398  : 		ProduceInitFlag = FALSE;
; 399  : 		endFlag = -1;

  0002d	83 cf ff	 or	 edi, -1
  00030	89 0d 00 00 00
	00		 mov	 DWORD PTR ?ProduceInitFlag@@3HA, ecx ; ProduceInitFlag
  00036	89 3d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, edi
  0003c	eb 06		 jmp	 SHORT $LN48@ProduceHag
$LN153@ProduceHag:

; 396  : 	// ??????
; 397  : 	if( ProduceInitFlag == TRUE ){

  0003e	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA
$LN48@ProduceHag:

; 400  : 	}
; 401  : 	// ????
; 402  : 	switch( mode ){

  00044	8b 45 08	 mov	 eax, DWORD PTR _mode$[ebp]
  00047	bb 01 00 00 00	 mov	 ebx, 1
  0004c	83 f8 03	 cmp	 eax, 3
  0004f	0f 87 65 05 00
	00		 ja	 $LN66@ProduceHag
  00055	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN152@ProduceHag[eax*4]
$LN49@ProduceHag:

; 403  : 	case 0:	// ??
; 404  : 		// ???
; 405  : 		if( endFlag == -1 ){

  0005c	83 ff ff	 cmp	 edi, -1
  0005f	0f 85 e0 00 00
	00		 jne	 $LN154@ProduceHag

; 406  : 			for( i = 0 ; i < 8 ; i++ ){

  00065	8d 5f 09	 lea	 ebx, DWORD PTR [edi+9]
  00068	0f 1f 84 00 00
	00 00 00	 npad	 8
$LL6@ProduceHag:

; 407  : 				for( j = 0 ; j < 8 ; j++ ){

  00070	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000001000000010000000100000001
  00077	33 c0		 xor	 eax, eax
  00079	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  00080	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  00087	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  0008e	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  00095	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  00098	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  0009f	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  000a6	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  000ad	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  000b4	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  000bc	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  000c3	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  000ca	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  000d2	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  000d9	0f 57 c0	 xorps	 xmm0, xmm0
  000dc	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  000e3	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  000eb	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  000f2	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  000f9	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  00101	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  00108	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  0010f	90		 npad	 1
$LL9@ProduceHag:

; 408  : 					x[ no ] = nowX;

  00110	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 409  : 					y[ no ] = nowY;
; 410  : 					posX[ no ] = nowX;

  00117	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 411  : 					posY[ no ] = nowY;
; 412  : 					a[ no ] = 0;
; 413  : 					flag[ no++ ] = TRUE;

  0011e	41		 inc	 ecx

; 414  : 					nowX += CutX;

  0011f	83 e8 80	 sub	 eax, -128		; ffffff80H
  00122	83 ef 01	 sub	 edi, 1
  00125	75 e9		 jne	 SHORT $LL9@ProduceHag

; 415  : 				}
; 416  : 				nowY += CutY;

  00127	83 c6 60	 add	 esi, 96			; 00000060H
  0012a	83 eb 01	 sub	 ebx, 1
  0012d	0f 85 3d ff ff
	ff		 jne	 $LL6@ProduceHag

; 417  : 				nowX = 0;
; 418  : 			}
; 419  : 			endFlag = FALSE;
; 420  : 			cnt = 0;

  00133	33 c0		 xor	 eax, eax
  00135	89 1d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, ebx
  0013b	a3 00 00 00 00	 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, eax
  00140	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
  00143	eb 05		 jmp	 SHORT $LN80@ProduceHag
$LN154@ProduceHag:

; 403  : 	case 0:	// ??
; 404  : 		// ???
; 405  : 		if( endFlag == -1 ){

  00145	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
$LN80@ProduceHag:

; 421  : 		}
; 422  : 		while( flag[ rnd ] == FALSE ){

  0014a	83 3c 95 00 00
	00 00 00	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 0
  00152	75 1d		 jne	 SHORT $LN11@ProduceHag
$LL10@ProduceHag:

; 423  : 			rnd = Rnd( 0, 63 );

  00154	6a 3f		 push	 63			; 0000003fH
  00156	6a 00		 push	 0
  00158	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  0015d	8b d0		 mov	 edx, eax
  0015f	83 c4 08	 add	 esp, 8
  00162	83 3c 95 00 00
	00 00 00	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 0
  0016a	74 e8		 je	 SHORT $LL10@ProduceHag
  0016c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
$LN11@ProduceHag:

; 424  : 		}
; 425  : 		// ?????
; 426  : 		flag[ rnd ] = FALSE;

  00171	c7 04 95 00 00
	00 00 00 00 00
	00		 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 0
$LN158@ProduceHag:

; 545  : 		break;
; 546  : 	}
; 547  : 	// ???????????????
; 548  : //	ClearBackSurface();	
; 549  : 	for( i = 0 ; i < 64 ; i++ ){

  0017c	40		 inc	 eax
  0017d	a3 00 00 00 00	 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, eax
  00182	83 f8 40	 cmp	 eax, 64			; 00000040H
$LN159@ProduceHag:
  00185	0f 8c 2f 04 00
	00		 jl	 $LN66@ProduceHag
  0018b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, 1
  00195	e9 20 04 00 00	 jmp	 $LN66@ProduceHag
$LN52@ProduceHag:

; 427  : 		cnt++;
; 428  : 		// ????????
; 429  : 		if( cnt >= 64 ) endFlag = TRUE;
; 430  : 		break;
; 431  : 	case 1:	// ???
; 432  : 		// ???
; 433  : 		if( endFlag == -1 ){

  0019a	83 ff ff	 cmp	 edi, -1
  0019d	0f 85 d2 00 00
	00		 jne	 $LN155@ProduceHag

; 434  : 			for( i = 0 ; i < 8 ; i++ ){

  001a3	8d 5f 09	 lea	 ebx, DWORD PTR [edi+9]
$LL14@ProduceHag:

; 435  : 				for( j = 0 ; j < 8 ; j++ ){

  001a6	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  001ad	0f 57 c0	 xorps	 xmm0, xmm0
  001b0	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  001b7	33 c0		 xor	 eax, eax
  001b9	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  001c0	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  001c7	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  001ce	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  001d5	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  001d8	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  001df	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  001e6	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  001ed	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  001f4	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  001fb	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  00202	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  0020a	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  00211	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  00219	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  00220	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  00228	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  0022f	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  00237	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  0023e	66 90		 npad	 2
$LL17@ProduceHag:

; 436  : 					x[ no ] = nowX;

  00240	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 437  : 					y[ no ] = nowY;
; 438  : 					posX[ no ] = nowX;

  00247	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 439  : 					posY[ no ] = nowY;
; 440  : 					a[ no ] = 0;
; 441  : 					flag[ no++ ] = FALSE;

  0024e	41		 inc	 ecx

; 442  : 					nowX += CutX;

  0024f	83 e8 80	 sub	 eax, -128		; ffffff80H
  00252	83 ef 01	 sub	 edi, 1
  00255	75 e9		 jne	 SHORT $LL17@ProduceHag

; 443  : 				}
; 444  : 				nowY += CutY;

  00257	83 c6 60	 add	 esi, 96			; 00000060H
  0025a	83 eb 01	 sub	 ebx, 1
  0025d	0f 85 43 ff ff
	ff		 jne	 $LL14@ProduceHag

; 445  : 				nowX = 0;
; 446  : 			}
; 447  : 			endFlag = FALSE;
; 448  : 			cnt = 0;

  00263	33 c0		 xor	 eax, eax
  00265	89 1d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, ebx
  0026b	a3 00 00 00 00	 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, eax
  00270	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
  00273	eb 05		 jmp	 SHORT $LN83@ProduceHag
$LN155@ProduceHag:

; 427  : 		cnt++;
; 428  : 		// ????????
; 429  : 		if( cnt >= 64 ) endFlag = TRUE;
; 430  : 		break;
; 431  : 	case 1:	// ???
; 432  : 		// ???
; 433  : 		if( endFlag == -1 ){

  00275	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
$LN83@ProduceHag:

; 449  : 		}
; 450  : 		while( flag[ rnd ] == TRUE ){

  0027a	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  00282	75 1d		 jne	 SHORT $LN19@ProduceHag
$LL18@ProduceHag:

; 451  : 			rnd = Rnd( 0, 63 );

  00284	6a 3f		 push	 63			; 0000003fH
  00286	6a 00		 push	 0
  00288	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  0028d	8b d0		 mov	 edx, eax
  0028f	83 c4 08	 add	 esp, 8
  00292	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  0029a	74 e8		 je	 SHORT $LL18@ProduceHag
  0029c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
$LN19@ProduceHag:

; 452  : 		}
; 453  : 		// ?????
; 454  : 		flag[ rnd ] = TRUE;

  002a1	c7 04 95 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1

; 455  : 		cnt++;
; 456  : 		// ????????
; 457  : 		if( cnt >= 64 ) endFlag = TRUE;
; 458  : 		break;

  002ac	e9 cb fe ff ff	 jmp	 $LN158@ProduceHag
$LN55@ProduceHag:

; 459  : 	case 2:	// ???????
; 460  : 		// ???
; 461  : 		if( endFlag == -1 ){

  002b1	83 ff ff	 cmp	 edi, -1
  002b4	0f 85 e3 00 00
	00		 jne	 $LN56@ProduceHag

; 462  : 			for( i = 0 ; i < 8 ; i++ ){

  002ba	8d 5f 09	 lea	 ebx, DWORD PTR [edi+9]
  002bd	0f 1f 00	 npad	 3
$LL22@ProduceHag:

; 463  : 				for( j = 0 ; j < 8 ; j++ ){

  002c0	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@00000002000000020000000200000002
  002c7	33 c0		 xor	 eax, eax
  002c9	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  002d0	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  002d7	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  002de	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  002e5	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  002e8	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  002ef	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  002f6	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  002fd	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  00304	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  0030c	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  00313	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  0031a	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  00322	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  00329	0f 57 c0	 xorps	 xmm0, xmm0
  0032c	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  00333	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  0033b	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  00342	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  00349	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  00351	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  00358	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  0035f	90		 npad	 1
$LL25@ProduceHag:

; 464  : 					x[ no ] = nowX;

  00360	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 465  : 					y[ no ] = nowY;
; 466  : 					posX[ no ] = nowX;

  00367	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 467  : 					posY[ no ] = nowY;
; 468  : 					a[ no ] = 0;
; 469  : 					flag[ no++ ] = 2;

  0036e	41		 inc	 ecx

; 470  : 					nowX += CutX;

  0036f	83 e8 80	 sub	 eax, -128		; ffffff80H
  00372	83 ef 01	 sub	 edi, 1
  00375	75 e9		 jne	 SHORT $LL25@ProduceHag

; 471  : 				}
; 472  : 				nowY += CutY;

  00377	83 c6 60	 add	 esi, 96			; 00000060H
  0037a	83 eb 01	 sub	 ebx, 1
  0037d	0f 85 3d ff ff
	ff		 jne	 $LL22@ProduceHag

; 473  : 				nowX = 0;
; 474  : 			}
; 475  : 			endFlag = FALSE;
; 476  : 			cnt = 0;

  00383	33 f6		 xor	 esi, esi
  00385	89 1d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, ebx

; 477  : 			cnt2 = 0;

  0038b	33 c0		 xor	 eax, eax
  0038d	89 35 00 00 00
	00		 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, esi
  00393	a3 00 00 00 00	 mov	 DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA, eax

; 478  : 		}
; 479  : 		// ?????????
; 480  : 		if( cnt2 < 64 ){

  00398	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
  0039b	eb 10		 jmp	 SHORT $LN150@ProduceHag
$LN56@ProduceHag:
  0039d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA
  003a2	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
  003a8	83 f8 40	 cmp	 eax, 64			; 00000040H
  003ab	7d 3e		 jge	 SHORT $LN57@ProduceHag
$LN150@ProduceHag:

; 481  : 			while( flag[ rnd ] <= 1 ){

  003ad	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  003b5	7f 23		 jg	 SHORT $LN27@ProduceHag
$LL26@ProduceHag:

; 482  : 				rnd = Rnd( 0, 63 );

  003b7	6a 3f		 push	 63			; 0000003fH
  003b9	6a 00		 push	 0
  003bb	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  003c0	8b d0		 mov	 edx, eax
  003c2	83 c4 08	 add	 esp, 8
  003c5	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  003cd	7e e8		 jle	 SHORT $LL26@ProduceHag
  003cf	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
  003d5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA
$LN27@ProduceHag:

; 483  : 			}
; 484  : 			// ???????
; 485  : 			flag[ rnd ] = 1;
; 486  : 			cnt2++;

  003da	40		 inc	 eax
  003db	c7 04 95 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  003e6	a3 00 00 00 00	 mov	 DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA, eax
$LN57@ProduceHag:

; 487  : 		}
; 488  : 		// ?
; 489  : 		for( i = 0 ; i < 64 ; i++ ){

  003eb	33 c9		 xor	 ecx, ecx
  003ed	0f 1f 00	 npad	 3
$LL110@ProduceHag:

; 490  : 			if( flag[ i ] == 1 ){

  003f0	83 b9 00 00 00
	00 01		 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], 1
  003f7	75 29		 jne	 SHORT $LN111@ProduceHag

; 491  : 				a[ i ]++;

  003f9	ff 81 00 00 00
	00		 inc	 DWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx]
  003ff	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx]

; 492  : 				y[ i ] += a[ i ];

  00405	01 81 00 00 00
	00		 add	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], eax

; 493  : 				if( y[ i ] >= 800 ){ 

  0040b	81 b9 00 00 00
	00 20 03 00 00	 cmp	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], 800 ; 00000320H
  00415	7c 0b		 jl	 SHORT $LN111@ProduceHag

; 494  : 					flag[ i ] = 0;

  00417	c7 81 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], 0

; 495  : 					cnt++;

  00421	46		 inc	 esi
$LN111@ProduceHag:

; 487  : 		}
; 488  : 		// ?
; 489  : 		for( i = 0 ; i < 64 ; i++ ){

  00422	83 c1 04	 add	 ecx, 4
  00425	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  0042b	7c c3		 jl	 SHORT $LL110@ProduceHag

; 495  : 					cnt++;

  0042d	89 35 00 00 00
	00		 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, esi

; 496  : 				}
; 497  : 			}
; 498  : 		}
; 499  : 		// ????????
; 500  : 		if( cnt >= 64 ) endFlag = TRUE;

  00433	83 fe 40	 cmp	 esi, 64			; 00000040H

; 501  : 		break;

  00436	e9 4a fd ff ff	 jmp	 $LN159@ProduceHag
$LN61@ProduceHag:

; 502  : 	case 3:	// ??????
; 503  : 		// ???
; 504  : 		if( endFlag == -1 ){

  0043b	83 ff ff	 cmp	 edi, -1
  0043e	0f 85 c9 00 00
	00		 jne	 $LN62@ProduceHag

; 505  : 			for( i = 0 ; i < 8 ; i++ ){

  00444	8d 5f 09	 lea	 ebx, DWORD PTR [edi+9]
  00447	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL33@ProduceHag:

; 506  : 				for( j = 0 ; j < 8 ; j++ ){

  00450	89 34 8d 00 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], esi
  00457	0f 57 c0	 xorps	 xmm0, xmm0
  0045a	89 34 8d 04 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+4], esi
  00461	33 c0		 xor	 eax, eax
  00463	89 34 8d 08 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+8], esi
  0046a	89 34 8d 0c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+12], esi
  00471	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  00479	89 34 8d 10 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], esi
  00480	8d 78 08	 lea	 edi, DWORD PTR [eax+8]
  00483	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  0048b	89 34 8d 14 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+20], esi
  00492	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  0049a	89 34 8d 18 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+24], esi
  004a1	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  004a9	89 34 8d 1c 00
	00 00		 mov	 DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+28], esi
  004b0	0f 28 05 00 00
	00 00		 movaps	 xmm0, XMMWORD PTR __xmm@ffffffa0ffffffa0ffffffa0ffffffa0
  004b7	0f 11 04 8d 00
	00 00 00	 movups	 XMMWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], xmm0
  004bf	0f 11 04 8d 10
	00 00 00	 movups	 XMMWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4+16], xmm0
  004c7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL36@ProduceHag:

; 507  : 					x[ no ] = nowX;

  004d0	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 508  : 					y[ no ] = -CutY;
; 509  : 					posX[ no ] = nowX;

  004d7	89 04 8d 00 00
	00 00		 mov	 DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx*4], eax

; 510  : 					posY[ no ] = nowY;
; 511  : 					a[ no ] = 0;
; 512  : 					flag[ no++ ] = FALSE;

  004de	41		 inc	 ecx

; 513  : 					nowX += CutX;

  004df	83 e8 80	 sub	 eax, -128		; ffffff80H
  004e2	83 ef 01	 sub	 edi, 1
  004e5	75 e9		 jne	 SHORT $LL36@ProduceHag

; 514  : 				}
; 515  : 				nowY += CutY;

  004e7	83 c6 60	 add	 esi, 96			; 00000060H
  004ea	83 eb 01	 sub	 ebx, 1
  004ed	0f 85 5d ff ff
	ff		 jne	 $LL33@ProduceHag

; 516  : 				nowX = 0;
; 517  : 			}
; 518  : 			endFlag = FALSE;
; 519  : 			cnt = 0;

  004f3	33 f6		 xor	 esi, esi
  004f5	89 3d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, edi

; 520  : 			cnt2 = 0;

  004fb	33 c0		 xor	 eax, eax
  004fd	89 35 00 00 00
	00		 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, esi
  00503	a3 00 00 00 00	 mov	 DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA, eax

; 521  : 		}
; 522  : 		// ?????????
; 523  : 		if( cnt2 < 64 ){

  00508	8d 5f 01	 lea	 ebx, DWORD PTR [edi+1]
  0050b	eb 10		 jmp	 SHORT $LN151@ProduceHag
$LN62@ProduceHag:
  0050d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA
  00512	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
  00518	83 f8 40	 cmp	 eax, 64			; 00000040H
  0051b	7d 44		 jge	 SHORT $LN63@ProduceHag
$LN151@ProduceHag:

; 524  : 			while( flag[ rnd ] >= 1 ){

  0051d	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  00525	7c 29		 jl	 SHORT $LN38@ProduceHag
$LL37@ProduceHag:

; 525  : 				rnd = Rnd( 0, 63 );

  00527	6a 3f		 push	 63			; 0000003fH
  00529	6a 00		 push	 0
  0052b	e8 00 00 00 00	 call	 ?Rnd@@YAHHH@Z		; Rnd
  00530	8b d0		 mov	 edx, eax
  00532	83 c4 08	 add	 esp, 8
  00535	83 3c 95 00 00
	00 00 01	 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  0053d	7d e8		 jge	 SHORT $LL37@ProduceHag
  0053f	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA
  00545	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA
  0054b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA
$LN38@ProduceHag:

; 526  : 			}
; 527  : 			// ???????
; 528  : 			flag[ rnd ] = 1;
; 529  : 			cnt2++;

  00550	40		 inc	 eax
  00551	c7 04 95 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[edx*4], 1
  0055c	a3 00 00 00 00	 mov	 DWORD PTR ?cnt2@?1??ProduceHagare@@YAHH@Z@4HA, eax
$LN63@ProduceHag:

; 530  : 		}
; 531  : 		// ?
; 532  : 		for( i = 0 ; i < 64 ; i++ ){

  00561	33 c9		 xor	 ecx, ecx
$LL114@ProduceHag:

; 533  : 			if( flag[ i ] == 1 ){

  00563	83 b9 00 00 00
	00 01		 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], 1
  0056a	75 31		 jne	 SHORT $LN115@ProduceHag

; 534  : 				a[ i ]++;

  0056c	ff 81 00 00 00
	00		 inc	 DWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx]
  00572	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?a@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx]

; 535  : 				y[ i ] += a[ i ];

  00578	01 81 00 00 00
	00		 add	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], eax

; 536  : 				if( y[ i ] >= posY[ i ] ){ 

  0057e	8b 81 00 00 00
	00		 mov	 eax, DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx]
  00584	39 81 00 00 00
	00		 cmp	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], eax
  0058a	7c 11		 jl	 SHORT $LN115@ProduceHag

; 537  : 					y[ i ] = posY[ i ];

  0058c	89 81 00 00 00
	00		 mov	 DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], eax

; 538  : 					flag[ i ] = 2;
; 539  : 					cnt++;

  00592	46		 inc	 esi
  00593	c7 81 00 00 00
	00 02 00 00 00	 mov	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[ecx], 2
$LN115@ProduceHag:

; 530  : 		}
; 531  : 		// ?
; 532  : 		for( i = 0 ; i < 64 ; i++ ){

  0059d	83 c1 04	 add	 ecx, 4
  005a0	81 f9 00 01 00
	00		 cmp	 ecx, 256		; 00000100H
  005a6	7c bb		 jl	 SHORT $LL114@ProduceHag

; 540  : 				}
; 541  : 			}
; 542  : 		}
; 543  : 		// ????????
; 544  : 		if( cnt >= 64 ) endFlag = TRUE;

  005a8	83 fe 40	 cmp	 esi, 64			; 00000040H
  005ab	89 35 00 00 00
	00		 mov	 DWORD PTR ?cnt@?1??ProduceHagare@@YAHH@Z@4HA, esi
  005b1	0f 4d fb	 cmovge	 edi, ebx
  005b4	89 3d 00 00 00
	00		 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, edi
$LN66@ProduceHag:

; 545  : 		break;
; 546  : 	}
; 547  : 	// ???????????????
; 548  : //	ClearBackSurface();	
; 549  : 	for( i = 0 ; i < 64 ; i++ ){

  005ba	33 f6		 xor	 esi, esi
  005bc	0f 1f 40 00	 npad	 4
$LL44@ProduceHag:

; 550  : 		if( flag[ i ] == 2 ){

  005c0	83 be 00 00 00
	00 02		 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[esi], 2
  005c7	0f 85 7d 00 00
	00		 jne	 $LN42@ProduceHag

; 551  : 			rect.left = posX[ i ];
; 552  : 			rect.top = posY[ i ];
; 553  : 			rect.right = posX[ i ] + CutX;
; 554  : 			rect.bottom = posY[ i ] + CutY;
; 555  : 			//???????????????
; 556  : 			if(ResoMode == 1){

  005cd	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ResoMode@@3HA, 1 ; ResoMode
  005d4	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  005da	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  005e0	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  005e6	89 4d ec	 mov	 DWORD PTR _rect$[ebp], ecx
  005e9	8d 91 80 00 00
	00		 lea	 edx, DWORD PTR [ecx+128]
  005ef	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax
  005f2	8d 78 60	 lea	 edi, DWORD PTR [eax+96]
  005f5	89 55 f4	 mov	 DWORD PTR _rect$[ebp+8], edx
  005f8	89 7d f8	 mov	 DWORD PTR _rect$[ebp+12], edi
  005fb	75 31		 jne	 SHORT $LN68@ProduceHag

; 557  : 				rect.top >>= 1;

  005fd	d1 f8		 sar	 eax, 1
  005ff	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax

; 558  : 				rect.left >>= 1;
; 559  : 				rect.right >>= 1;
; 560  : 				rect.bottom >>= 1;
; 561  : 				// ????????????钅??
; 562  : 				DrawSurfaceFast2( x[ i ] / 2, y[ i ] / 2, &rect, lpBattleSurface );

  00602	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00605	50		 push	 eax
  00606	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  0060c	d1 fa		 sar	 edx, 1
  0060e	89 55 f4	 mov	 DWORD PTR _rect$[ebp+8], edx
  00611	99		 cdq
  00612	2b c2		 sub	 eax, edx
  00614	d1 f9		 sar	 ecx, 1
  00616	d1 f8		 sar	 eax, 1
  00618	50		 push	 eax
  00619	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  0061f	99		 cdq
  00620	d1 ff		 sar	 edi, 1
  00622	2b c2		 sub	 eax, edx
  00624	89 4d ec	 mov	 DWORD PTR _rect$[ebp], ecx
  00627	89 7d f8	 mov	 DWORD PTR _rect$[ebp+12], edi
  0062a	d1 f8		 sar	 eax, 1

; 563  : 			} else {

  0062c	eb 13		 jmp	 SHORT $LN160@ProduceHag
$LN68@ProduceHag:

; 564  : 				// ????????????钅??
; 565  : 				DrawSurfaceFast2( x[ i ], y[ i ], &rect, lpBattleSurface );

  0062e	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00631	50		 push	 eax
  00632	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  00639	50		 push	 eax
  0063a	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
$LN160@ProduceHag:

; 545  : 		break;
; 546  : 	}
; 547  : 	// ???????????????
; 548  : //	ClearBackSurface();	
; 549  : 	for( i = 0 ; i < 64 ; i++ ){

  00641	50		 push	 eax
  00642	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  00647	83 c4 10	 add	 esp, 16			; 00000010H
$LN42@ProduceHag:
  0064a	83 c6 04	 add	 esi, 4
  0064d	81 fe 00 01 00
	00		 cmp	 esi, 256		; 00000100H
  00653	0f 8c 67 ff ff
	ff		 jl	 $LL44@ProduceHag

; 566  : 			}
; 567  : 		}
; 568  : 	}
; 569  : 	for( i = 0 ; i < 64 ; i++ ){

  00659	33 f6		 xor	 esi, esi
  0065b	0f 1f 44 00 00	 npad	 5
$LL47@ProduceHag:

; 570  : 		if( flag[ i ] == 1 ){

  00660	83 be 00 00 00
	00 01		 cmp	 DWORD PTR ?flag@?1??ProduceHagare@@YAHH@Z@4PAHA[esi], 1
  00667	0f 85 7d 00 00
	00		 jne	 $LN45@ProduceHag

; 571  : 			rect.left = posX[ i ];
; 572  : 			rect.top = posY[ i ];
; 573  : 			rect.right = posX[ i ] + CutX;
; 574  : 			rect.bottom = posY[ i ] + CutY;
; 575  : 			//???????????????
; 576  : 			if(ResoMode == 1){

  0066d	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ResoMode@@3HA, 1 ; ResoMode
  00674	8b 8e 00 00 00
	00		 mov	 ecx, DWORD PTR ?posX@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  0067a	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?posY@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  00680	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00686	89 4d ec	 mov	 DWORD PTR _rect$[ebp], ecx
  00689	8d 91 80 00 00
	00		 lea	 edx, DWORD PTR [ecx+128]
  0068f	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax
  00692	8d 78 60	 lea	 edi, DWORD PTR [eax+96]
  00695	89 55 f4	 mov	 DWORD PTR _rect$[ebp+8], edx
  00698	89 7d f8	 mov	 DWORD PTR _rect$[ebp+12], edi
  0069b	75 31		 jne	 SHORT $LN71@ProduceHag

; 577  : 				rect.top >>= 1;

  0069d	d1 f8		 sar	 eax, 1
  0069f	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax

; 578  : 				rect.left >>= 1;
; 579  : 				rect.right >>= 1;
; 580  : 				rect.bottom >>= 1;
; 581  : 				// ????????????钅??
; 582  : 				DrawSurfaceFast2( x[ i ] / 2, y[ i ] / 2, &rect, lpBattleSurface );

  006a2	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  006a5	50		 push	 eax
  006a6	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  006ac	d1 fa		 sar	 edx, 1
  006ae	89 55 f4	 mov	 DWORD PTR _rect$[ebp+8], edx
  006b1	99		 cdq
  006b2	2b c2		 sub	 eax, edx
  006b4	d1 f9		 sar	 ecx, 1
  006b6	d1 f8		 sar	 eax, 1
  006b8	50		 push	 eax
  006b9	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  006bf	99		 cdq
  006c0	d1 ff		 sar	 edi, 1
  006c2	2b c2		 sub	 eax, edx
  006c4	89 4d ec	 mov	 DWORD PTR _rect$[ebp], ecx
  006c7	89 7d f8	 mov	 DWORD PTR _rect$[ebp+12], edi
  006ca	d1 f8		 sar	 eax, 1

; 583  : 			} else {

  006cc	eb 13		 jmp	 SHORT $LN161@ProduceHag
$LN71@ProduceHag:

; 584  : 				// ????????????钅??
; 585  : 				DrawSurfaceFast2( x[ i ], y[ i ], &rect, lpBattleSurface );

  006ce	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  006d1	50		 push	 eax
  006d2	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?y@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
  006d9	50		 push	 eax
  006da	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?x@?1??ProduceHagare@@YAHH@Z@4PAHA[esi]
$LN161@ProduceHag:

; 566  : 			}
; 567  : 		}
; 568  : 	}
; 569  : 	for( i = 0 ; i < 64 ; i++ ){

  006e1	50		 push	 eax
  006e2	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  006e7	83 c4 10	 add	 esp, 16			; 00000010H
$LN45@ProduceHag:
  006ea	83 c6 04	 add	 esi, 4
  006ed	81 fe 00 01 00
	00		 cmp	 esi, 256		; 00000100H
  006f3	0f 8c 67 ff ff
	ff		 jl	 $LL47@ProduceHag

; 586  : 			}
; 587  : 		}
; 588  : 	}
; 589  : 	if( endFlag == TRUE ){

  006f9	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, 1
  00700	75 5e		 jne	 SHORT $LN73@ProduceHag

; 590  : 		// ?????
; 591  : 		if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  00702	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  00707	83 f8 02	 cmp	 eax, 2
  0070a	75 27		 jne	 SHORT $LN74@ProduceHag

; 596  : 	}
; 597  : 	return FALSE;
; 598  : }

  0070c	5f		 pop	 edi
  0070d	5e		 pop	 esi
  0070e	8b c3		 mov	 eax, ebx
  00710	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState
  0071a	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, -1
  00724	5b		 pop	 ebx
  00725	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00728	33 cd		 xor	 ecx, ebp
  0072a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0072f	8b e5		 mov	 esp, ebp
  00731	5d		 pop	 ebp
  00732	c3		 ret	 0
$LN74@ProduceHag:

; 592  : 		else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  00733	83 f8 03	 cmp	 eax, 3

; 593  : 		// ??????
; 594  : 		endFlag = -1;

  00736	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??ProduceHagare@@YAHH@Z@4HA, -1
  00740	b9 04 00 00 00	 mov	 ecx, 4
  00745	0f 44 c1	 cmove	 eax, ecx
  00748	5f		 pop	 edi
  00749	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState

; 595  : 		return TRUE;

  0074e	8b c3		 mov	 eax, ebx

; 596  : 	}
; 597  : 	return FALSE;
; 598  : }

  00750	5e		 pop	 esi
  00751	5b		 pop	 ebx
  00752	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00755	33 cd		 xor	 ecx, ebp
  00757	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0075c	8b e5		 mov	 esp, ebp
  0075e	5d		 pop	 ebp
  0075f	c3		 ret	 0
$LN73@ProduceHag:
  00760	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00763	33 c0		 xor	 eax, eax
  00765	5f		 pop	 edi
  00766	5e		 pop	 esi
  00767	33 cd		 xor	 ecx, ebp
  00769	5b		 pop	 ebx
  0076a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0076f	8b e5		 mov	 esp, ebp
  00771	5d		 pop	 ebp
  00772	c3		 ret	 0
  00773	90		 npad	 1
$LN152@ProduceHag:
  00774	00 00 00 00	 DD	 $LN49@ProduceHag
  00778	00 00 00 00	 DD	 $LN52@ProduceHag
  0077c	00 00 00 00	 DD	 $LN55@ProduceHag
  00780	00 00 00 00	 DD	 $LN61@ProduceHag
?ProduceHagare@@YAHH@Z ENDP				; ProduceHagare
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?Produce4Way@@YAHH@Z
_TEXT	SEGMENT
?y@?1??Produce4Way@@YAHH@Z@4PAHA$8 = -80		; size = 4
?y@?1??Produce4Way@@YAHH@Z@4PAHA$7 = -76		; size = 4
?x@?1??Produce4Way@@YAHH@Z@4PAHA$6 = -76		; size = 4
?x@?1??Produce4Way@@YAHH@Z@4PAHA$8 = -72		; size = 4
?x@?1??Produce4Way@@YAHH@Z@4PAHA$7 = -72		; size = 4
_rect$ = -68						; size = 64
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?Produce4Way@@YAHH@Z PROC				; Produce4Way, COMDAT

; 284  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 50	 sub	 esp, 80			; 00000050H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 285  : 	RECT rect[ 4 ] = {	
; 286  : 		{ 0 , 0 , 320 + (DISPLACEMENT_X >> 1) , 240 + (DISPLACEMENT_Y >> 1) }, 

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	57		 push	 edi
  0001e	8b f9		 mov	 edi, ecx
  00020	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  00027	8b d8		 mov	 ebx, eax
  00029	d1 ff		 sar	 edi, 1
  0002b	d1 fb		 sar	 ebx, 1

; 287  : 		{ 320 + (DISPLACEMENT_X >> 1) , 0 , 640 + DISPLACEMENT_X , 240 + (DISPLACEMENT_Y >> 1) },

  0002d	81 c1 80 02 00
	00		 add	 ecx, 640		; 00000280H

; 288  : 		{ 0 , 240 + (DISPLACEMENT_Y >> 1) , 320 + (DISPLACEMENT_X >> 1) , 480 + DISPLACEMENT_Y }, 

  00033	05 e0 01 00 00	 add	 eax, 480		; 000001e0H
  00038	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 0

; 289  : 		{ 320 + (DISPLACEMENT_X >> 1) , 240 + (DISPLACEMENT_Y >> 1) , 640 + DISPLACEMENT_X , 480 + DISPLACEMENT_Y } };
; 290  : 	static int endFlag = -1;
; 291  : 	static int x[ 4 ], y[ 4 ]; 
; 292  : 	int d = 4,i;
; 293  : 	// ??????
; 294  : 	if( ProduceInitFlag == TRUE ){

  0003f	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00046	8d 97 40 01 00
	00		 lea	 edx, DWORD PTR [edi+320]
  0004c	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+20], 0
  00053	8d b3 f0 00 00
	00		 lea	 esi, DWORD PTR [ebx+240]
  00059	89 55 c4	 mov	 DWORD PTR _rect$[ebp+8], edx
  0005c	89 75 c8	 mov	 DWORD PTR _rect$[ebp+12], esi
  0005f	89 55 cc	 mov	 DWORD PTR _rect$[ebp+16], edx
  00062	89 4d d4	 mov	 DWORD PTR _rect$[ebp+24], ecx
  00065	89 75 d8	 mov	 DWORD PTR _rect$[ebp+28], esi
  00068	c7 45 dc 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+32], 0
  0006f	89 75 e0	 mov	 DWORD PTR _rect$[ebp+36], esi
  00072	89 55 e4	 mov	 DWORD PTR _rect$[ebp+40], edx
  00075	89 45 e8	 mov	 DWORD PTR _rect$[ebp+44], eax
  00078	89 55 ec	 mov	 DWORD PTR _rect$[ebp+48], edx
  0007b	89 75 f0	 mov	 DWORD PTR _rect$[ebp+52], esi
  0007e	89 4d f4	 mov	 DWORD PTR _rect$[ebp+56], ecx
  00081	89 45 f8	 mov	 DWORD PTR _rect$[ebp+60], eax
  00084	75 14		 jne	 SHORT $LN26@Produce4Wa

; 295  : 		ProduceInitFlag = FALSE;
; 296  : 		endFlag = -1;

  00086	83 c8 ff	 or	 eax, -1
  00089	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag
  00093	a3 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, eax
  00098	eb 05		 jmp	 SHORT $LN7@Produce4Wa
$LN26@Produce4Wa:

; 289  : 		{ 320 + (DISPLACEMENT_X >> 1) , 240 + (DISPLACEMENT_Y >> 1) , 640 + DISPLACEMENT_X , 480 + DISPLACEMENT_Y } };
; 290  : 	static int endFlag = -1;
; 291  : 	static int x[ 4 ], y[ 4 ]; 
; 292  : 	int d = 4,i;
; 293  : 	// ??????
; 294  : 	if( ProduceInitFlag == TRUE ){

  0009a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA
$LN7@Produce4Wa:

; 297  : 	}
; 298  : 	// ????
; 299  : 	switch( mode ){

  0009f	8b 4d 08	 mov	 ecx, DWORD PTR _mode$[ebp]
  000a2	83 e9 00	 sub	 ecx, 0
  000a5	0f 84 c8 00 00
	00		 je	 $LN8@Produce4Wa
  000ab	83 e9 01	 sub	 ecx, 1
  000ae	0f 85 71 01 00
	00		 jne	 $LN10@Produce4Wa

; 323  : 		break;
; 324  : 	case 1:	// ??
; 325  : 		if( endFlag == -1 ){

  000b4	83 f8 ff	 cmp	 eax, -1
  000b7	75 2b		 jne	 SHORT $LN27@Produce4Wa

; 326  : 			x[ 0 ] = -280;
; 327  : 			y[ 0 ] = -280;
; 328  : 			x[ 1 ] = 320 + 280 + (DISPLACEMENT_X >> 1);

  000b9	8d 8f 58 02 00
	00		 lea	 ecx, DWORD PTR [edi+600]

; 329  : 			y[ 1 ] = -280;
; 330  : 			x[ 2 ] = -280;
; 331  : 			y[ 2 ] = 240 + 280 + (DISPLACEMENT_Y >> 1);
; 332  : 			x[ 3 ] = 320 + 280 + (DISPLACEMENT_X >> 1);
; 333  : 			y[ 3 ] = 240 + 280 + (DISPLACEMENT_Y >> 1);
; 334  : 			endFlag = FALSE;

  000bf	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, 0
  000c9	8d 93 08 02 00
	00		 lea	 edx, DWORD PTR [ebx+520]
  000cf	b8 e8 fe ff ff	 mov	 eax, -280		; fffffee8H
  000d4	8b d9		 mov	 ebx, ecx
  000d6	89 55 b4	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp], edx
  000d9	89 5d b8	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp], ebx
  000dc	8b f0		 mov	 esi, eax
  000de	8b f8		 mov	 edi, eax
  000e0	8b d8		 mov	 ebx, eax
  000e2	eb 35		 jmp	 SHORT $LN12@Produce4Wa
$LN27@Produce4Wa:

; 323  : 		break;
; 324  : 	case 1:	// ??
; 325  : 		if( endFlag == -1 ){

  000e4	8b 1d 0c 00 00
	00		 mov	 ebx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+12
  000ea	8b 15 0c 00 00
	00		 mov	 edx, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+12
  000f0	8b 0d 04 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+4
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA
  000fb	8b 3d 04 00 00
	00		 mov	 edi, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+4
  00101	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA
  00107	89 5d b8	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp], ebx
  0010a	8b 1d 08 00 00
	00		 mov	 ebx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+8
  00110	89 55 b4	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp], edx
  00113	8b 15 08 00 00
	00		 mov	 edx, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+8
$LN12@Produce4Wa:

; 335  : 		}
; 336  : 		// ?
; 337  : 		x[ 0 ] += d;
; 338  : 		y[ 0 ] += d;
; 339  : 		x[ 1 ] -= d;

  00119	83 e9 04	 sub	 ecx, 4
  0011c	83 c0 04	 add	 eax, 4
  0011f	89 0d 04 00 00
	00		 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+4, ecx
  00125	83 c6 04	 add	 esi, 4

; 340  : 		y[ 1 ] += d;
; 341  : 		x[ 2 ] += d;
; 342  : 		y[ 2 ] -= d;
; 343  : 		x[ 3 ] -= d;

  00128	8b 4d b8	 mov	 ecx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp]
  0012b	83 c7 04	 add	 edi, 4
  0012e	83 e9 04	 sub	 ecx, 4
  00131	a3 00 00 00 00	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA, eax
  00136	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+12, ecx
  0013c	83 c3 04	 add	 ebx, 4

; 344  : 		y[ 3 ] -= d;

  0013f	8b 4d b4	 mov	 ecx, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$7[ebp]
  00142	83 ea 04	 sub	 edx, 4
  00145	83 e9 04	 sub	 ecx, 4
  00148	89 35 00 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA, esi
  0014e	89 3d 04 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+4, edi
  00154	89 1d 08 00 00
	00		 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+8, ebx
  0015a	89 15 08 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+8, edx
  00160	89 0d 0c 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+12, ecx
  00166	85 c0		 test	 eax, eax

; 345  : 		// ????????
; 346  : 		if( x[ 0 ] >= 0 ) endFlag = TRUE;

  00168	0f 88 b7 00 00
	00		 js	 $LN10@Produce4Wa
  0016e	e9 a8 00 00 00	 jmp	 $LN25@Produce4Wa
$LN8@Produce4Wa:

; 300  : 	case 0:	// ???
; 301  : 		if( endFlag == -1 ){

  00173	83 f8 ff	 cmp	 eax, -1
  00176	75 16		 jne	 SHORT $LN28@Produce4Wa

; 302  : 			x[ 0 ] = 0;
; 303  : 			y[ 0 ] = 0;

  00178	33 c0		 xor	 eax, eax

; 304  : 			x[ 1 ] = 320 + (DISPLACEMENT_X >> 1);
; 305  : 			y[ 1 ] = 0;
; 306  : 			x[ 2 ] = 0;
; 307  : 			y[ 2 ] = 240 + (DISPLACEMENT_Y >> 1);
; 308  : 			x[ 3 ] = 320 + (DISPLACEMENT_X >> 1);

  0017a	89 55 b8	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp], edx
  0017d	33 c9		 xor	 ecx, ecx
  0017f	89 45 b4	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$6[ebp], eax
  00182	33 db		 xor	 ebx, ebx

; 309  : 			y[ 3 ] = 240 + (DISPLACEMENT_Y >> 1);

  00184	89 75 b0	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp], esi

; 310  : 			endFlag = FALSE;

  00187	a3 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, eax
  0018c	eb 35		 jmp	 SHORT $LN9@Produce4Wa
$LN28@Produce4Wa:

; 300  : 	case 0:	// ???
; 301  : 		if( endFlag == -1 ){

  0018e	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+12
  00193	8b 15 04 00 00
	00		 mov	 edx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+4
  00199	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA
  0019f	8b 35 08 00 00
	00		 mov	 esi, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+8
  001a5	8b 1d 04 00 00
	00		 mov	 ebx, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+4
  001ab	89 45 b8	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp], eax
  001ae	a1 08 00 00 00	 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+8
  001b3	89 45 b4	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$6[ebp], eax
  001b6	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+12
  001bb	89 45 b0	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp], eax
  001be	a1 00 00 00 00	 mov	 eax, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA
$LN9@Produce4Wa:

; 311  : 		}
; 312  : 		// ?
; 313  : 		x[ 0 ] -= d;
; 314  : 		y[ 0 ] -= d;

  001c3	83 e8 04	 sub	 eax, 4
  001c6	83 e9 04	 sub	 ecx, 4
  001c9	a3 00 00 00 00	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA, eax

; 315  : 		x[ 1 ] += d;

  001ce	83 c2 04	 add	 edx, 4

; 316  : 		y[ 1 ] -= d;
; 317  : 		x[ 2 ] -= d;

  001d1	8b 45 b4	 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$6[ebp]
  001d4	83 eb 04	 sub	 ebx, 4
  001d7	83 e8 04	 sub	 eax, 4
  001da	89 0d 00 00 00
	00		 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA, ecx
  001e0	a3 08 00 00 00	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+8, eax

; 318  : 		y[ 2 ] += d;

  001e5	83 c6 04	 add	 esi, 4

; 319  : 		x[ 3 ] += d;

  001e8	8b 45 b8	 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp]
  001eb	83 c0 04	 add	 eax, 4
  001ee	89 15 04 00 00
	00		 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+4, edx
  001f4	a3 0c 00 00 00	 mov	 DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA+12, eax

; 320  : 		y[ 3 ] += d;

  001f9	8b 45 b0	 mov	 eax, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA$8[ebp]
  001fc	83 c0 04	 add	 eax, 4
  001ff	89 1d 04 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+4, ebx
  00205	a3 0c 00 00 00	 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+12, eax

; 321  : 		// ????????
; 322  : 		if( x[ 0 ] <= -320 - (DISPLACEMENT_X >> 1) ) endFlag = TRUE;

  0020a	b8 c0 fe ff ff	 mov	 eax, -320		; fffffec0H
  0020f	2b c7		 sub	 eax, edi
  00211	89 35 08 00 00
	00		 mov	 DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA+8, esi
  00217	3b c8		 cmp	 ecx, eax
  00219	7f 0a		 jg	 SHORT $LN10@Produce4Wa
$LN25@Produce4Wa:
  0021b	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, 1
$LN10@Produce4Wa:

; 347  : 		break;
; 348  : 	}
; 349  : 	// ???????????????
; 350  : //	ClearBackSurface();	
; 351  : 	for( i = 0 ; i < 4 ; i++ ){

  00225	8d 7d c4	 lea	 edi, DWORD PTR _rect$[ebp+8]
  00228	33 f6		 xor	 esi, esi
  0022a	66 0f 1f 44 00
	00		 npad	 6
$LL6@Produce4Wa:

; 352  : 		//???????????????
; 353  : 		if(ResoMode == 1){

  00230	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ResoMode@@3HA, 1 ; ResoMode
  00237	8d 47 f8	 lea	 eax, DWORD PTR [edi-8]
  0023a	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00240	50		 push	 eax
  00241	75 23		 jne	 SHORT $LN14@Produce4Wa

; 354  : 			rect[i].top >>= 1;
; 355  : 			rect[i].left >>= 1;

  00243	d1 38		 sar	 DWORD PTR [eax], 1

; 356  : 			rect[i].right >>= 1;
; 357  : 			rect[i].bottom >>= 1;
; 358  : 			// ????????????钅??
; 359  : 			DrawSurfaceFast2( x[ i ] / 2, y[ i ] / 2, &rect[ i ], lpBattleSurface );

  00245	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA[esi]
  0024b	d1 7f fc	 sar	 DWORD PTR [edi-4], 1
  0024e	d1 3f		 sar	 DWORD PTR [edi], 1
  00250	d1 7f 04	 sar	 DWORD PTR [edi+4], 1
  00253	99		 cdq
  00254	2b c2		 sub	 eax, edx
  00256	d1 f8		 sar	 eax, 1
  00258	50		 push	 eax
  00259	8b 86 00 00 00
	00		 mov	 eax, DWORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA[esi]
  0025f	99		 cdq
  00260	2b c2		 sub	 eax, edx
  00262	d1 f8		 sar	 eax, 1

; 360  : 		} else {

  00264	eb 0f		 jmp	 SHORT $LN29@Produce4Wa
$LN14@Produce4Wa:

; 361  : 			// ????????????钅??
; 362  : 			DrawSurfaceFast2( x[ i ], y[ i ], &rect[ i ], lpBattleSurface );

  00266	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?y@?1??Produce4Way@@YAHH@Z@4PAHA[esi]
  0026d	50		 push	 eax
  0026e	0f b7 86 00 00
	00 00		 movzx	 eax, WORD PTR ?x@?1??Produce4Way@@YAHH@Z@4PAHA[esi]
$LN29@Produce4Wa:

; 347  : 		break;
; 348  : 	}
; 349  : 	// ???????????????
; 350  : //	ClearBackSurface();	
; 351  : 	for( i = 0 ; i < 4 ; i++ ){

  00275	50		 push	 eax
  00276	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  0027b	83 c6 04	 add	 esi, 4
  0027e	83 c4 10	 add	 esp, 16			; 00000010H
  00281	83 c7 10	 add	 edi, 16			; 00000010H
  00284	83 fe 10	 cmp	 esi, 16			; 00000010H
  00287	7c a7		 jl	 SHORT $LL6@Produce4Wa

; 363  : 		}
; 364  : 	}
; 365  : 	if( endFlag == TRUE ){

  00289	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, 1
  00290	5f		 pop	 edi
  00291	5e		 pop	 esi
  00292	5b		 pop	 ebx
  00293	75 5c		 jne	 SHORT $LN16@Produce4Wa

; 366  : 		// ?????
; 367  : 		if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  00295	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  0029a	83 f8 02	 cmp	 eax, 2
  0029d	75 27		 jne	 SHORT $LN17@Produce4Wa
  0029f	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 371  : 		return TRUE;

  002a9	b8 01 00 00 00	 mov	 eax, 1
  002ae	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, -1

; 372  : 	}
; 373  : 	return FALSE;
; 374  : }	

  002b8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002bb	33 cd		 xor	 ecx, ebp
  002bd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002c2	8b e5		 mov	 esp, ebp
  002c4	5d		 pop	 ebp
  002c5	c3		 ret	 0
$LN17@Produce4Wa:

; 368  : 		else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  002c6	83 f8 03	 cmp	 eax, 3

; 369  : 		// ??????
; 370  : 		endFlag = -1;

  002c9	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??Produce4Way@@YAHH@Z@4HA, -1
  002d3	b9 04 00 00 00	 mov	 ecx, 4
  002d8	0f 44 c1	 cmove	 eax, ecx
  002db	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState

; 371  : 		return TRUE;

  002e0	8d 41 fd	 lea	 eax, DWORD PTR [ecx-3]

; 372  : 	}
; 373  : 	return FALSE;
; 374  : }	

  002e3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002e6	33 cd		 xor	 ecx, ebp
  002e8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002ed	8b e5		 mov	 esp, ebp
  002ef	5d		 pop	 ebp
  002f0	c3		 ret	 0
$LN16@Produce4Wa:
  002f1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  002f4	33 c0		 xor	 eax, eax
  002f6	33 cd		 xor	 ecx, ebp
  002f8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  002fd	8b e5		 mov	 esp, ebp
  002ff	5d		 pop	 ebp
  00300	c3		 ret	 0
?Produce4Way@@YAHH@Z ENDP				; Produce4Way
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?ProduceBrake@@YAHH@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?ProduceBrake@@YAHH@Z PROC				; ProduceBrake, COMDAT

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 140  : 	RECT rect = { 0, 0, DEF_APPSIZEX, DEF_APPSIZEY };
; 141  : 	static int endFlag = -1;
; 142  : 	static float x = 0,x2 = 0, y = 0, y2 = 0; 
; 143  : 	static float a;
; 144  : 	// ??????
; 145  : 	if( ProduceInitFlag == TRUE ){

  00010	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00017	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  0001d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00022	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  00029	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 0
  00030	89 4d f4	 mov	 DWORD PTR _rect$[ebp+8], ecx
  00033	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax
  00036	75 14		 jne	 SHORT $LN49@ProduceBra

; 146  : 		ProduceInitFlag = FALSE;
; 147  : 		endFlag = -1;

  00038	83 c8 ff	 or	 eax, -1
  0003b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag
  00045	a3 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, eax
  0004a	eb 05		 jmp	 SHORT $LN7@ProduceBra
$LN49@ProduceBra:

; 140  : 	RECT rect = { 0, 0, DEF_APPSIZEX, DEF_APPSIZEY };
; 141  : 	static int endFlag = -1;
; 142  : 	static float x = 0,x2 = 0, y = 0, y2 = 0; 
; 143  : 	static float a;
; 144  : 	// ??????
; 145  : 	if( ProduceInitFlag == TRUE ){

  0004c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA
$LN7@ProduceBra:
  00051	57		 push	 edi

; 148  : 	}
; 149  : 	// ????
; 150  : 	switch( mode ){

  00052	8b 7d 08	 mov	 edi, DWORD PTR _mode$[ebp]
  00055	83 ff 05	 cmp	 edi, 5
  00058	0f 87 f6 02 00
	00		 ja	 $LN25@ProduceBra
  0005e	ff 24 bd 00 00
	00 00		 jmp	 DWORD PTR $LN48@ProduceBra[edi*4]
$LN8@ProduceBra:
  00065	0f 57 d2	 xorps	 xmm2, xmm2

; 151  : 	case 0:	// ??
; 152  : 		if( endFlag == -1 ){

  00068	83 f8 ff	 cmp	 eax, -1
  0006b	75 26		 jne	 SHORT $LN50@ProduceBra

; 153  : 			x = 0;
; 154  : 			y = 513.2F;

  0006d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@44004ccd

; 155  : 			a = 17.4F;

  00075	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@418b3333
  0007d	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 156  : 			endFlag = FALSE;

  00087	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  00091	eb 10		 jmp	 SHORT $LN9@ProduceBra
$LN50@ProduceBra:

; 151  : 	case 0:	// ??
; 152  : 		if( endFlag == -1 ){

  00093	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA
  0009b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
$LN9@ProduceBra:

; 157  : 		}
; 158  : 		y -= a;	// ?

  000a3	f3 0f 5c c8	 subss	 xmm1, xmm0

; 159  : 		// ????
; 160  : 		a -= 0.3F; 

  000a7	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3e99999a
  000af	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, xmm1
  000b7	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
  000bf	0f 2f d0	 comiss	 xmm2, xmm0
  000c2	e9 19 01 00 00	 jmp	 $LN64@ProduceBra
$LN11@ProduceBra:
  000c7	0f 57 db	 xorps	 xmm3, xmm3

; 161  : 		// ????????
; 162  : 		if( a <= 0 ) endFlag = TRUE;
; 163  : 		break;
; 164  : 	case 1:	// ???
; 165  : 		if( endFlag == -1 ){

  000ca	83 f8 ff	 cmp	 eax, -1
  000cd	75 26		 jne	 SHORT $LN51@ProduceBra

; 166  : 			x = 0;
; 167  : 			y = -513.2F;

  000cf	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@c4004ccd

; 168  : 			a = 17.4F;

  000d7	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@418b3333
  000df	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 169  : 			endFlag = FALSE;

  000e9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  000f3	eb 10		 jmp	 SHORT $LN12@ProduceBra
$LN51@ProduceBra:

; 161  : 		// ????????
; 162  : 		if( a <= 0 ) endFlag = TRUE;
; 163  : 		break;
; 164  : 	case 1:	// ???
; 165  : 		if( endFlag == -1 ){

  000f5	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA
  000fd	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
$LN12@ProduceBra:

; 170  : 		}
; 171  : 		y += a;	// ?

  00105	0f 28 c1	 movaps	 xmm0, xmm1

; 172  : 		// ????
; 173  : 		a -= 0.3F; 

  00108	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3e99999a
  00110	f3 0f 58 c2	 addss	 xmm0, xmm2
  00114	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
  0011c	e9 b4 00 00 00	 jmp	 $LN65@ProduceBra
$LN14@ProduceBra:
  00121	0f 57 d2	 xorps	 xmm2, xmm2

; 174  : 		// ????????
; 175  : 		if( a <= 0 ) endFlag = TRUE;
; 176  : 		break;
; 177  : 	case 2:	// ???
; 178  : 		if( endFlag == -1 ){

  00124	83 f8 ff	 cmp	 eax, -1
  00127	75 26		 jne	 SHORT $LN52@ProduceBra

; 179  : 			x = 661;

  00129	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@44254000

; 180  : 			y = 0;
; 181  : 			a = 22.8F;

  00131	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@41b66666
  00139	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 182  : 			endFlag = FALSE;

  00143	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  0014d	eb 10		 jmp	 SHORT $LN15@ProduceBra
$LN52@ProduceBra:

; 174  : 		// ????????
; 175  : 		if( a <= 0 ) endFlag = TRUE;
; 176  : 		break;
; 177  : 	case 2:	// ???
; 178  : 		if( endFlag == -1 ){

  0014f	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA
  00157	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
$LN15@ProduceBra:

; 183  : 		}
; 184  : 		x -= a;	// ?

  0015f	f3 0f 5c c8	 subss	 xmm1, xmm0

; 185  : 		// ????
; 186  : 		a -= 0.4F; 

  00163	f3 0f 5c 05 00
	00 00 00	 subss	 xmm0, DWORD PTR __real@3ecccccd
  0016b	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, xmm1
  00173	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
  0017b	0f 2f d0	 comiss	 xmm2, xmm0
  0017e	eb 60		 jmp	 SHORT $LN64@ProduceBra
$LN17@ProduceBra:
  00180	0f 57 db	 xorps	 xmm3, xmm3

; 187  : 		// ????????
; 188  : 		if( a <= 0 ) endFlag = TRUE;
; 189  : 		break;
; 190  : 	case 3:	// ???
; 191  : 		if( endFlag == -1 ){

  00183	83 f8 ff	 cmp	 eax, -1
  00186	75 26		 jne	 SHORT $LN53@ProduceBra

; 192  : 			x = -661;

  00188	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@c4254000

; 193  : 			y = 0;
; 194  : 			a = 22.8F;

  00190	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@41b66666
  00198	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 195  : 			endFlag = FALSE;

  001a2	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  001ac	eb 10		 jmp	 SHORT $LN18@ProduceBra
$LN53@ProduceBra:

; 187  : 		// ????????
; 188  : 		if( a <= 0 ) endFlag = TRUE;
; 189  : 		break;
; 190  : 	case 3:	// ???
; 191  : 		if( endFlag == -1 ){

  001ae	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA
  001b6	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
$LN18@ProduceBra:

; 196  : 		}
; 197  : 		x += a;	// ?

  001be	0f 28 c1	 movaps	 xmm0, xmm1

; 198  : 		// ????
; 199  : 		a -= 0.4F; 

  001c1	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3ecccccd
  001c9	f3 0f 58 c2	 addss	 xmm0, xmm2
  001cd	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
$LN65@ProduceBra:

; 200  : 		// ????????
; 201  : 		if( a <= 0 ) endFlag = TRUE;

  001d5	0f 2f d9	 comiss	 xmm3, xmm1
  001d8	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA, xmm1
$LN64@ProduceBra:
  001e0	0f 82 80 01 00
	00		 jb	 $LN45@ProduceBra
  001e6	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 1

; 202  : 		break;

  001f0	e9 71 01 00 00	 jmp	 $LN45@ProduceBra
$LN20@ProduceBra:
  001f5	0f 57 e4	 xorps	 xmm4, xmm4

; 203  : 	case 4:	// ????
; 204  : 		if( endFlag == -1 ){

  001f8	83 f8 ff	 cmp	 eax, -1
  001fb	75 2e		 jne	 SHORT $LN54@ProduceBra

; 205  : 			x = -661;

  001fd	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@c4254000

; 206  : 			x2 = 661;

  00205	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@44254000

; 207  : 			y = 0;
; 208  : 			a = 22.8F;

  0020d	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@41b66666
  00215	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 209  : 			endFlag = FALSE;

  0021f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  00229	eb 18		 jmp	 SHORT $LN21@ProduceBra
$LN54@ProduceBra:

; 203  : 	case 4:	// ????
; 204  : 		if( endFlag == -1 ){

  0022b	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA
  00233	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
  0023b	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?x2@?1??ProduceBrake@@YAHH@Z@4MA
$LN21@ProduceBra:

; 210  : 		}
; 211  : 		x += a;		// ?

  00243	0f 28 c1	 movaps	 xmm0, xmm1

; 212  : 		x2 -= a;	// ?

  00246	f3 0f 5c d1	 subss	 xmm2, xmm1

; 213  : 		// ????
; 214  : 		a -= 0.4F; 

  0024a	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3ecccccd
  00252	f3 0f 58 c3	 addss	 xmm0, xmm3
  00256	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?x2@?1??ProduceBrake@@YAHH@Z@4MA, xmm2
  0025e	0f 2f e1	 comiss	 xmm4, xmm1
  00261	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
  00269	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA, xmm1

; 215  : 		// ????????
; 216  : 		if( a <= 0 ) endFlag = TRUE;

  00271	0f 83 ce 00 00
	00		 jae	 $LN46@ProduceBra
$LN56@ProduceBra:

; 238  : 		int i;
; 239  : 		// ?????
; 240  : 		for( i = 0 ; i < 480 ; i++ ){

  00277	33 c0		 xor	 eax, eax
  00279	56		 push	 esi
  0027a	66 0f 1f 44 00
	00		 npad	 6
$LL6@ProduceBra:

; 241  : 			rect.top = i;
; 242  : 			rect.bottom = i + 1;
; 243  : 			rect.left = 0;
; 244  : 			rect.right = DEF_APPSIZEX;
; 245  : 			// ??????
; 246  : 			if( mode == 4 ){

  00280	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00286	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  00289	89 4d f4	 mov	 DWORD PTR _rect$[ebp+8], ecx
  0028c	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax
  0028f	0f b7 c8	 movzx	 ecx, ax
  00292	83 e0 01	 and	 eax, 1
  00295	89 75 f8	 mov	 DWORD PTR _rect$[ebp+12], esi
  00298	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  0029f	83 ff 04	 cmp	 edi, 4
  002a2	0f 85 ef 00 00
	00		 jne	 $LN29@ProduceBra

; 247  : 				// ????
; 248  : 				if( i & 1 ){

  002a8	85 c0		 test	 eax, eax
  002aa	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  002ad	50		 push	 eax
  002ae	51		 push	 ecx
  002af	0f 84 d7 00 00
	00		 je	 $LN31@ProduceBra

; 249  : 					// ????????????钅??
; 250  : 					DrawSurfaceFast2( (int)x, i, &rect, lpBattleSurface );

  002b5	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA
  002bd	50		 push	 eax

; 251  : 				}else{

  002be	e9 f1 00 00 00	 jmp	 $LN66@ProduceBra
$LN23@ProduceBra:
  002c3	0f 57 e4	 xorps	 xmm4, xmm4

; 217  : 		break;
; 218  : 	case 5:	// ???
; 219  : 		if( endFlag == -1 ){

  002c6	83 f8 ff	 cmp	 eax, -1
  002c9	75 2e		 jne	 SHORT $LN55@ProduceBra

; 220  : 			x = 0;
; 221  : 			y = -513.2F;

  002cb	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR __real@c4004ccd

; 222  : 			y2 = 513.2F;

  002d3	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@44004ccd

; 223  : 			a = 17.4F;

  002db	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@418b3333
  002e3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA, 0

; 224  : 			endFlag = FALSE;

  002ed	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 0
  002f7	eb 18		 jmp	 SHORT $LN24@ProduceBra
$LN55@ProduceBra:

; 217  : 		break;
; 218  : 	case 5:	// ???
; 219  : 		if( endFlag == -1 ){

  002f9	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA
  00301	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA
  00309	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?y2@?1??ProduceBrake@@YAHH@Z@4MA
$LN24@ProduceBra:

; 225  : 		}
; 226  : 		y += a;	// ?

  00311	0f 28 c1	 movaps	 xmm0, xmm1

; 227  : 		y2 -= a;	// ?

  00314	f3 0f 5c d1	 subss	 xmm2, xmm1

; 228  : 		// ????
; 229  : 		a -= 0.3F; 

  00318	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@3e99999a
  00320	f3 0f 58 c3	 addss	 xmm0, xmm3
  00324	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?y2@?1??ProduceBrake@@YAHH@Z@4MA, xmm2
  0032c	0f 2f e1	 comiss	 xmm4, xmm1
  0032f	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA, xmm0
  00337	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceBrake@@YAHH@Z@4MA, xmm1

; 230  : 		// ????????
; 231  : 		if( a <= 0 ) endFlag = TRUE;

  0033f	0f 82 32 ff ff
	ff		 jb	 $LN56@ProduceBra
$LN46@ProduceBra:
  00345	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 1

; 232  : 		break;
; 233  : 	}
; 234  : 	// ???????????????
; 235  : //	ClearBackSurface();	
; 236  : 	// ?????
; 237  : 	if( mode == 4 || mode == 5 ){

  0034f	e9 23 ff ff ff	 jmp	 $LN56@ProduceBra
$LN25@ProduceBra:
  00354	83 ff 04	 cmp	 edi, 4
  00357	0f 84 1a ff ff
	ff		 je	 $LN56@ProduceBra
  0035d	83 ff 05	 cmp	 edi, 5
  00360	0f 84 11 ff ff
	ff		 je	 $LN56@ProduceBra
$LN45@ProduceBra:

; 263  : 				}
; 264  : 			}
; 265  : 		}
; 266  : 		
; 267  : 	}else{
; 268  : 		// ????????????钅??
; 269  : 		DrawSurfaceFast2( (int)x, (int)y, &rect, lpBattleSurface );

  00366	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  0036c	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  0036f	50		 push	 eax
  00370	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA
  00378	50		 push	 eax
  00379	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?x@?1??ProduceBrake@@YAHH@Z@4MA
  00381	50		 push	 eax
  00382	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  00387	83 c4 10	 add	 esp, 16			; 00000010H
  0038a	eb 45		 jmp	 SHORT $LN62@ProduceBra
$LN31@ProduceBra:

; 252  : 					// ????????????钅??
; 253  : 					DrawSurfaceFast2( (int)x2, i, &rect, lpBattleSurface );

  0038c	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?x2@?1??ProduceBrake@@YAHH@Z@4MA
  00394	50		 push	 eax

; 254  : 				}
; 255  : 			}else{

  00395	eb 1d		 jmp	 SHORT $LN66@ProduceBra
$LN29@ProduceBra:

; 256  : 				// ????
; 257  : 				if( i & 1 ){

  00397	85 c0		 test	 eax, eax
  00399	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  0039c	50		 push	 eax

; 258  : 					// ????????????钅??
; 259  : 					DrawSurfaceFast2( 0, i + (int)y, &rect, lpBattleSurface );

  0039d	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?y@?1??ProduceBrake@@YAHH@Z@4MA
  003a5	75 08		 jne	 SHORT $LN67@ProduceBra

; 260  : 				}else{
; 261  : 					// ????????????钅??
; 262  : 					DrawSurfaceFast2( 0, i + (int)y2, &rect, lpBattleSurface );

  003a7	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?y2@?1??ProduceBrake@@YAHH@Z@4MA
$LN67@ProduceBra:

; 238  : 		int i;
; 239  : 		// ?????
; 240  : 		for( i = 0 ; i < 480 ; i++ ){

  003af	03 c1		 add	 eax, ecx
  003b1	50		 push	 eax
  003b2	6a 00		 push	 0
$LN66@ProduceBra:
  003b4	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  003b9	8b c6		 mov	 eax, esi
  003bb	83 c4 10	 add	 esp, 16			; 00000010H
  003be	3d e0 01 00 00	 cmp	 eax, 480		; 000001e0H
  003c3	7d 0b		 jge	 SHORT $LN63@ProduceBra
  003c5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  003cb	e9 b0 fe ff ff	 jmp	 $LL6@ProduceBra
$LN63@ProduceBra:
  003d0	5e		 pop	 esi
$LN62@ProduceBra:

; 270  : 	}
; 271  : 	if( endFlag == TRUE ){

  003d1	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, 1
  003d8	5f		 pop	 edi
  003d9	75 5c		 jne	 SHORT $LN35@ProduceBra

; 272  : 		// ?????
; 273  : 		if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  003db	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  003e0	83 f8 02	 cmp	 eax, 2
  003e3	75 27		 jne	 SHORT $LN36@ProduceBra
  003e5	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 277  : 		return TRUE;

  003ef	b8 01 00 00 00	 mov	 eax, 1
  003f4	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, -1

; 278  : 	}
; 279  : 	return FALSE;
; 280  : }

  003fe	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00401	33 cd		 xor	 ecx, ebp
  00403	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00408	8b e5		 mov	 esp, ebp
  0040a	5d		 pop	 ebp
  0040b	c3		 ret	 0
$LN36@ProduceBra:

; 274  : 		else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  0040c	83 f8 03	 cmp	 eax, 3

; 275  : 		// ??????
; 276  : 		endFlag = -1;

  0040f	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?endFlag@?1??ProduceBrake@@YAHH@Z@4HA, -1
  00419	b9 04 00 00 00	 mov	 ecx, 4
  0041e	0f 44 c1	 cmove	 eax, ecx
  00421	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState

; 277  : 		return TRUE;

  00426	8d 41 fd	 lea	 eax, DWORD PTR [ecx-3]

; 278  : 	}
; 279  : 	return FALSE;
; 280  : }

  00429	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0042c	33 cd		 xor	 ecx, ebp
  0042e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00433	8b e5		 mov	 esp, ebp
  00435	5d		 pop	 ebp
  00436	c3		 ret	 0
$LN35@ProduceBra:
  00437	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0043a	33 c0		 xor	 eax, eax
  0043c	33 cd		 xor	 ecx, ebp
  0043e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00443	8b e5		 mov	 esp, ebp
  00445	5d		 pop	 ebp
  00446	c3		 ret	 0
  00447	90		 npad	 1
$LN48@ProduceBra:
  00448	00 00 00 00	 DD	 $LN8@ProduceBra
  0044c	00 00 00 00	 DD	 $LN11@ProduceBra
  00450	00 00 00 00	 DD	 $LN14@ProduceBra
  00454	00 00 00 00	 DD	 $LN17@ProduceBra
  00458	00 00 00 00	 DD	 $LN20@ProduceBra
  0045c	00 00 00 00	 DD	 $LN23@ProduceBra
?ProduceBrake@@YAHH@Z ENDP				; ProduceBrake
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?ProduceAccele@@YAHH@Z
_TEXT	SEGMENT
_rect$ = -20						; size = 16
__$ArrayPad$ = -4					; size = 4
_mode$ = 8						; size = 4
?ProduceAccele@@YAHH@Z PROC				; ProduceAccele, COMDAT

; 27   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 28   : 	RECT rect = { 0, 0, DEF_APPSIZEX, DEF_APPSIZEY };

  00010	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00016	0f 57 c9	 xorps	 xmm1, xmm1
  00019	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  0001e	53		 push	 ebx
  0001f	57		 push	 edi

; 29   : 	int endFlag = FALSE;

  00020	33 ff		 xor	 edi, edi
  00022	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0

; 30   : 	static float x = 0, x2 = 0, y = 0, y2 = 0; 
; 31   : 	static float a = 0;
; 32   : 	// ??????
; 33   : 	if( ProduceInitFlag == TRUE ){

  00029	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  00030	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp+4], 0
  00037	89 4d f4	 mov	 DWORD PTR _rect$[ebp+8], ecx
  0003a	89 45 f8	 mov	 DWORD PTR _rect$[ebp+12], eax
  0003d	75 31		 jne	 SHORT $LN41@ProduceAcc

; 34   : 		ProduceInitFlag = FALSE;

  0003f	0f 57 e4	 xorps	 xmm4, xmm4
  00042	89 3d 00 00 00
	00		 mov	 DWORD PTR ?ProduceInitFlag@@3HA, edi ; ProduceInitFlag
  00048	0f 57 d2	 xorps	 xmm2, xmm2

; 35   : 		x = 0; x2 = 0; y = 0;a = 0;

  0004b	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA, xmm1
  00053	0f 57 db	 xorps	 xmm3, xmm3
  00056	f3 0f 11 25 00
	00 00 00	 movss	 DWORD PTR ?x2@?1??ProduceAccele@@YAHH@Z@4MA, xmm4
  0005e	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA, xmm2
  00066	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3
  0006e	eb 20		 jmp	 SHORT $LN7@ProduceAcc
$LN41@ProduceAcc:

; 30   : 	static float x = 0, x2 = 0, y = 0, y2 = 0; 
; 31   : 	static float a = 0;
; 32   : 	// ??????
; 33   : 	if( ProduceInitFlag == TRUE ){

  00070	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA
  00078	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR ?x2@?1??ProduceAccele@@YAHH@Z@4MA
  00080	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA
  00088	f3 0f 10 1d 00
	00 00 00	 movss	 xmm3, DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA
$LN7@ProduceAcc:

; 36   : 	}
; 37   : 	// ????
; 38   : 	switch( mode ){

  00090	8b 5d 08	 mov	 ebx, DWORD PTR _mode$[ebp]
  00093	83 fb 05	 cmp	 ebx, 5
  00096	0f 87 9e 01 00
	00		 ja	 $LN19@ProduceAcc
  0009c	ff 24 9d 00 00
	00 00		 jmp	 DWORD PTR $LN40@ProduceAcc[ebx*4]
$LN8@ProduceAcc:

; 39   : 	case 0:	// ??
; 40   : 		y -= a;	// ?
; 41   : 		// ????
; 42   : 		a += 0.3F; 

  000a3	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c3f00000
  000ab	f3 0f 5c d3	 subss	 xmm2, xmm3
  000af	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3e99999a
  000b7	0f 2f c2	 comiss	 xmm0, xmm2
  000ba	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA, xmm2
  000c2	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3

; 43   : 		// ????????
; 44   : 		if( y <= -480 ) endFlag = TRUE;

  000ca	0f 82 7c 01 00
	00		 jb	 $LN39@ProduceAcc
  000d0	bf 01 00 00 00	 mov	 edi, 1

; 45   : 		break;

  000d5	e9 72 01 00 00	 jmp	 $LN39@ProduceAcc
$LN10@ProduceAcc:

; 46   : 	case 1:	// ???
; 47   : 		y += a;	// ?

  000da	0f 28 c3	 movaps	 xmm0, xmm3

; 48   : 		// ????
; 49   : 		a += 0.3F; 

  000dd	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3e99999a
  000e5	f3 0f 58 d0	 addss	 xmm2, xmm0
  000e9	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3
  000f1	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@43f00000
  000f8	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA, xmm2

; 50   : 		// ????????
; 51   : 		if( y >= 480 ) endFlag = TRUE;

  00100	0f 82 46 01 00
	00		 jb	 $LN39@ProduceAcc
  00106	bf 01 00 00 00	 mov	 edi, 1

; 52   : 		break;

  0010b	e9 3c 01 00 00	 jmp	 $LN39@ProduceAcc
$LN12@ProduceAcc:

; 53   : 	case 2:	// ???
; 54   : 		x -= a;	// ?
; 55   : 		// ????
; 56   : 		a += 0.4F; 

  00110	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@c4200000
  00118	f3 0f 5c cb	 subss	 xmm1, xmm3
  0011c	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3ecccccd
  00124	0f 2f c1	 comiss	 xmm0, xmm1
  00127	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA, xmm1
  0012f	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3

; 57   : 		// ????????
; 58   : 		if( x <= -640 ) endFlag = TRUE;

  00137	0f 82 0f 01 00
	00		 jb	 $LN39@ProduceAcc
  0013d	bf 01 00 00 00	 mov	 edi, 1

; 59   : 		break;

  00142	e9 05 01 00 00	 jmp	 $LN39@ProduceAcc
$LN14@ProduceAcc:

; 60   : 	case 3:	// ???
; 61   : 		x += a;	// ?

  00147	0f 28 c3	 movaps	 xmm0, xmm3

; 62   : 		// ????
; 63   : 		a += 0.4F; 

  0014a	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3ecccccd
  00152	f3 0f 58 c8	 addss	 xmm1, xmm0
  00156	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3
  0015e	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@44200000
  00165	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA, xmm1

; 64   : 		// ????????
; 65   : 		if( x >= 640 ) endFlag = TRUE;

  0016d	0f 82 d9 00 00
	00		 jb	 $LN39@ProduceAcc
  00173	bf 01 00 00 00	 mov	 edi, 1

; 66   : 		break;

  00178	e9 cf 00 00 00	 jmp	 $LN39@ProduceAcc
$LN16@ProduceAcc:

; 67   : 	case 4:	// ????
; 68   : 		x += a;		// ?

  0017d	0f 28 c3	 movaps	 xmm0, xmm3

; 69   : 		x2 -= a;	// ?

  00180	f3 0f 5c e3	 subss	 xmm4, xmm3

; 70   : 		// ????
; 71   : 		a += 0.4F; 

  00184	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3ecccccd
  0018c	f3 0f 58 c8	 addss	 xmm1, xmm0
  00190	f3 0f 11 25 00
	00 00 00	 movss	 DWORD PTR ?x2@?1??ProduceAccele@@YAHH@Z@4MA, xmm4
  00198	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3
  001a0	0f 2f 0d 00 00
	00 00		 comiss	 xmm1, DWORD PTR __real@44200000
  001a7	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA, xmm1
$LN48@ProduceAcc:

; 88   : 		int i;
; 89   : 		// ?????
; 90   : 		for( i = 0 ; i < 480 ; i++ ){

  001af	72 05		 jb	 SHORT $LN42@ProduceAcc
  001b1	bf 01 00 00 00	 mov	 edi, 1
$LN42@ProduceAcc:
  001b6	33 c0		 xor	 eax, eax
  001b8	56		 push	 esi
  001b9	0f 1f 80 00 00
	00 00		 npad	 7
$LL6@ProduceAcc:

; 91   : 			rect.top = i;
; 92   : 			rect.bottom = i + 1;
; 93   : 			rect.left = 0;
; 94   : 			rect.right = DEF_APPSIZEX;
; 95   : 			// ???????
; 96   : 			if( mode == 4 ){

  001c0	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  001c6	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
  001c9	89 4d f4	 mov	 DWORD PTR _rect$[ebp+8], ecx
  001cc	89 45 f0	 mov	 DWORD PTR _rect$[ebp+4], eax
  001cf	0f b7 c8	 movzx	 ecx, ax
  001d2	83 e0 01	 and	 eax, 1
  001d5	89 75 f8	 mov	 DWORD PTR _rect$[ebp+12], esi
  001d8	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR _rect$[ebp], 0
  001df	83 fb 04	 cmp	 ebx, 4
  001e2	0f 85 89 00 00
	00		 jne	 $LN23@ProduceAcc

; 97   : 				// ????
; 98   : 				if( i & 1 ){

  001e8	85 c0		 test	 eax, eax
  001ea	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  001ed	50		 push	 eax
  001ee	51		 push	 ecx
  001ef	74 79		 je	 SHORT $LN25@ProduceAcc

; 99   : 					// ????????????钅??
; 100  : 					DrawSurfaceFast2( (int)x, i, &rect, lpBattleSurface );

  001f1	f3 0f 2c c1	 cvttss2si eax, xmm1
  001f5	50		 push	 eax

; 101  : 				}else{

  001f6	e9 8f 00 00 00	 jmp	 $LN49@ProduceAcc
$LN18@ProduceAcc:

; 72   : 		// ????????
; 73   : 		if( x >= 640 ) endFlag = TRUE;
; 74   : 		break;
; 75   : 	case 5:	// ???
; 76   : 		y += a;	// ?

  001fb	0f 28 c3	 movaps	 xmm0, xmm3
  001fe	f3 0f 58 d0	 addss	 xmm2, xmm0

; 77   : 		y2 -= a;	// ?

  00202	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?y2@?1??ProduceAccele@@YAHH@Z@4MA
  0020a	f3 0f 5c c3	 subss	 xmm0, xmm3

; 78   : 		// ????
; 79   : 		a += 0.3F; 

  0020e	f3 0f 58 1d 00
	00 00 00	 addss	 xmm3, DWORD PTR __real@3e99999a
  00216	0f 2f 15 00 00
	00 00		 comiss	 xmm2, DWORD PTR __real@43f00000
  0021d	f3 0f 11 15 00
	00 00 00	 movss	 DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA, xmm2
  00225	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?y2@?1??ProduceAccele@@YAHH@Z@4MA, xmm0
  0022d	f3 0f 11 1d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, xmm3

; 80   : 		// ????????
; 81   : 		if( y >= 480 ) endFlag = TRUE;
; 82   : 		break;
; 83   : 	}
; 84   : 	// ???????????????
; 85   : //	ClearBackSurface();	
; 86   : 	// ?????
; 87   : 	if( mode == 4 || mode == 5 ){

  00235	e9 75 ff ff ff	 jmp	 $LN48@ProduceAcc
$LN19@ProduceAcc:
  0023a	83 fb 04	 cmp	 ebx, 4
  0023d	0f 84 73 ff ff
	ff		 je	 $LN42@ProduceAcc
  00243	83 fb 05	 cmp	 ebx, 5
  00246	0f 84 6a ff ff
	ff		 je	 $LN42@ProduceAcc
$LN39@ProduceAcc:

; 113  : 				}
; 114  : 			}
; 115  : 		}
; 116  : 	}else{
; 117  : 		// ????????????钅??
; 118  : 		DrawSurfaceFast2( (int)x, (int)y, &rect, lpBattleSurface );

  0024c	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00252	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00255	50		 push	 eax
  00256	f3 0f 2c c2	 cvttss2si eax, xmm2
  0025a	50		 push	 eax
  0025b	f3 0f 2c c1	 cvttss2si eax, xmm1
  0025f	50		 push	 eax
  00260	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  00265	83 c4 10	 add	 esp, 16			; 00000010H
  00268	eb 55		 jmp	 SHORT $LN46@ProduceAcc
$LN25@ProduceAcc:

; 102  : 					// ????????????钅??
; 103  : 					DrawSurfaceFast2( (int)x2, i, &rect, lpBattleSurface );

  0026a	f3 0f 2c c4	 cvttss2si eax, xmm4
  0026e	50		 push	 eax

; 104  : 				}
; 105  : 			}else{

  0026f	eb 19		 jmp	 SHORT $LN49@ProduceAcc
$LN23@ProduceAcc:

; 106  : 				// ????
; 107  : 				if( i & 1 ){

  00271	85 c0		 test	 eax, eax
  00273	8d 45 ec	 lea	 eax, DWORD PTR _rect$[ebp]
  00276	50		 push	 eax

; 108  : 					// ????????????钅??
; 109  : 					DrawSurfaceFast2( 0, i + (int)y, &rect, lpBattleSurface );

  00277	f3 0f 2c c2	 cvttss2si eax, xmm2
  0027b	75 08		 jne	 SHORT $LN50@ProduceAcc

; 110  : 				}else{
; 111  : 					// ????????????钅??
; 112  : 					DrawSurfaceFast2( 0, i + (int)y2, &rect, lpBattleSurface );

  0027d	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?y2@?1??ProduceAccele@@YAHH@Z@4MA
$LN50@ProduceAcc:

; 88   : 		int i;
; 89   : 		// ?????
; 90   : 		for( i = 0 ; i < 480 ; i++ ){

  00285	03 c1		 add	 eax, ecx
  00287	50		 push	 eax
  00288	6a 00		 push	 0
$LN49@ProduceAcc:
  0028a	e8 00 00 00 00	 call	 ?DrawSurfaceFast2@@YAJFFPAUtagRECT@@PAUIDirectDrawSurface@@@Z ; DrawSurfaceFast2
  0028f	8b c6		 mov	 eax, esi
  00291	83 c4 10	 add	 esp, 16			; 00000010H
  00294	3d e0 01 00 00	 cmp	 eax, 480		; 000001e0H
  00299	7d 23		 jge	 SHORT $LN47@ProduceAcc
  0029b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  002a1	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA
  002a9	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR ?x2@?1??ProduceAccele@@YAHH@Z@4MA
  002b1	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA
  002b9	e9 02 ff ff ff	 jmp	 $LL6@ProduceAcc
$LN47@ProduceAcc:
  002be	5e		 pop	 esi
$LN46@ProduceAcc:

; 119  : 	}
; 120  : 	if( endFlag == TRUE ){

  002bf	83 ff 01	 cmp	 edi, 1
  002c2	5f		 pop	 edi
  002c3	5b		 pop	 ebx
  002c4	75 7a		 jne	 SHORT $LN29@ProduceAcc

; 121  : 		// ???
; 122  : 		x = 0;
; 123  : 		x2 = 0;
; 124  : 		y = 0; 
; 125  : 		y2 = 0; 
; 126  : 		a = 0;
; 127  : 		// ?????
; 128  : 		if( GameState == GAME_FIELD_TO_ENCOUNT ) GameState = GAME_ENCOUNT_TO_BATTLE; 

  002c6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?GameState@@3HA ; GameState
  002cb	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?x@?1??ProduceAccele@@YAHH@Z@4MA, 0
  002d5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?x2@?1??ProduceAccele@@YAHH@Z@4MA, 0
  002df	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?y@?1??ProduceAccele@@YAHH@Z@4MA, 0
  002e9	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?y2@?1??ProduceAccele@@YAHH@Z@4MA, 0
  002f3	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?a@?1??ProduceAccele@@YAHH@Z@4MA, 0
  002fd	83 f8 02	 cmp	 eax, 2
  00300	75 1d		 jne	 SHORT $LN30@ProduceAcc
  00302	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, 3 ; GameState

; 130  : 		return TRUE;

  0030c	b8 01 00 00 00	 mov	 eax, 1

; 131  : 	}
; 132  : 	return FALSE;
; 133  : }	

  00311	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00314	33 cd		 xor	 ecx, ebp
  00316	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0031b	8b e5		 mov	 esp, ebp
  0031d	5d		 pop	 ebp
  0031e	c3		 ret	 0
$LN30@ProduceAcc:

; 129  : 		else if( GameState == GAME_ENCOUNT_TO_BATTLE ) GameState = GAME_BATTLE; 

  0031f	83 f8 03	 cmp	 eax, 3
  00322	b9 04 00 00 00	 mov	 ecx, 4
  00327	0f 44 c1	 cmove	 eax, ecx
  0032a	a3 00 00 00 00	 mov	 DWORD PTR ?GameState@@3HA, eax ; GameState

; 130  : 		return TRUE;

  0032f	8d 41 fd	 lea	 eax, DWORD PTR [ecx-3]

; 131  : 	}
; 132  : 	return FALSE;
; 133  : }	

  00332	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00335	33 cd		 xor	 ecx, ebp
  00337	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0033c	8b e5		 mov	 esp, ebp
  0033e	5d		 pop	 ebp
  0033f	c3		 ret	 0
$LN29@ProduceAcc:
  00340	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00343	33 c0		 xor	 eax, eax
  00345	33 cd		 xor	 ecx, ebp
  00347	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0034c	8b e5		 mov	 esp, ebp
  0034e	5d		 pop	 ebp
  0034f	c3		 ret	 0
$LN40@ProduceAcc:
  00350	00 00 00 00	 DD	 $LN8@ProduceAcc
  00354	00 00 00 00	 DD	 $LN10@ProduceAcc
  00358	00 00 00 00	 DD	 $LN12@ProduceAcc
  0035c	00 00 00 00	 DD	 $LN14@ProduceAcc
  00360	00 00 00 00	 DD	 $LN16@ProduceAcc
  00364	00 00 00 00	 DD	 $LN18@ProduceAcc
?ProduceAccele@@YAHH@Z ENDP				; ProduceAccele
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?TitleProduce@@YAXXZ
_TEXT	SEGMENT
_no$1 = -4						; size = 4
?TitleProduce@@YAXXZ PROC				; TitleProduce, COMDAT

; 1177 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1178 : 	static float x[ 10 ], y[ 10 ], a[ 10 ];
; 1179 : 	static int flag = 0, cnt,cnt2, cnt3;
; 1180 : 	static int fall[ 8 ];
; 1181 : 	static int time;
; 1182 : 	int i,bmpNo;
; 1183 : #ifdef _STONDEBUG_		
; 1184 : 	// pass
; 1185 : 	if( joy_con[ 0 ] & JOY_UP ){ 
; 1186 : 		NowTime = TimeGetTime();
; 1187 : 		return;
; 1188 : 	}
; 1189 : #endif
; 1190 : 	if( ProduceInitFlag == TRUE ){

  00004	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?ProduceInitFlag@@3HA, 1 ; ProduceInitFlag
  0000b	56		 push	 esi
  0000c	75 16		 jne	 SHORT $LN14@TitleProdu

; 1191 : 		ProduceInitFlag = FALSE;

  0000e	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?ProduceInitFlag@@3HA, 0 ; ProduceInitFlag

; 1192 : 		flag = 0;

  00018	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA, 0

; 1193 : 	}
; 1194 : 	if( flag == 0 ){

  00022	eb 0e		 jmp	 SHORT $LN88@TitleProdu
$LN14@TitleProdu:
  00024	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA
  0002a	85 c9		 test	 ecx, ecx
  0002c	0f 85 e3 01 00
	00		 jne	 $LN15@TitleProdu
$LN88@TitleProdu:

; 1195 : 		for( i = 0 ; i < 8 ; i++ ){
; 1196 : 			x[ i ] = 320;

  00032	c7 05 00 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA, 1134559232 ; 43a00000H

; 1197 : 			y[ i ] = -100;
; 1198 : 			a[ i ] = 1;
; 1199 : 			fall[ i ] = 0;
; 1200 : 			cnt = 0;
; 1201 : 			cnt2 = 0;
; 1202 : 			cnt3 = 0;
; 1203 : 			time = 0;
; 1204 : 		}
; 1205 : 		// ???????
; 1206 : 		x[ 9 ] = -319;

  0003c	be 4a 71 00 00	 mov	 esi, 29002		; 0000714aH
  00041	c7 05 00 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA, -1027080192 ; c2c80000H
  0004b	c7 05 00 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA, 1065353216 ; 3f800000H
  00055	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA, 0
  0005f	c7 05 04 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+4, 1134559232 ; 43a00000H
  00069	c7 05 04 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+4, -1027080192 ; c2c80000H
  00073	c7 05 04 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+4, 1065353216 ; 3f800000H
  0007d	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+4, 0
  00087	c7 05 08 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+8, 1134559232 ; 43a00000H
  00091	c7 05 08 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+8, -1027080192 ; c2c80000H
  0009b	c7 05 08 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+8, 1065353216 ; 3f800000H
  000a5	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+8, 0
  000af	c7 05 0c 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+12, 1134559232 ; 43a00000H
  000b9	c7 05 0c 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+12, -1027080192 ; c2c80000H
  000c3	c7 05 0c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+12, 1065353216 ; 3f800000H
  000cd	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+12, 0
  000d7	c7 05 10 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+16, 1134559232 ; 43a00000H
  000e1	c7 05 10 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+16, -1027080192 ; c2c80000H
  000eb	c7 05 10 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+16, 1065353216 ; 3f800000H
  000f5	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+16, 0
  000ff	c7 05 14 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+20, 1134559232 ; 43a00000H
  00109	c7 05 14 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+20, -1027080192 ; c2c80000H
  00113	c7 05 14 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+20, 1065353216 ; 3f800000H
  0011d	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+20, 0
  00127	c7 05 18 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+24, 1134559232 ; 43a00000H
  00131	c7 05 18 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+24, -1027080192 ; c2c80000H
  0013b	c7 05 18 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+24, 1065353216 ; 3f800000H
  00145	c7 05 18 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+24, 0
  0014f	c7 05 1c 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+28, 1134559232 ; 43a00000H
  00159	c7 05 1c 00 00
	00 00 00 c8 c2	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+28, -1027080192 ; c2c80000H
  00163	c7 05 1c 00 00
	00 00 00 80 3f	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+28, 1065353216 ; 3f800000H
  0016d	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+28, 0
  00177	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cnt@?1??TitleProduce@@YAXXZ@4HA, 0
  00181	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cnt2@?1??TitleProduce@@YAXXZ@4HA, 0
  0018b	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, 0
  00195	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?time@?1??TitleProduce@@YAXXZ@4HA, 0
  0019f	c7 05 24 00 00
	00 00 80 9f c3	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+36, -1012957184 ; c39f8000H

; 1207 : 		//cary 2001 07 10
; 1208 : 		y[ 9 ] = 410 + 5;

  001a9	c7 05 24 00 00
	00 00 80 cf 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+36, 1137672192 ; 43cf8000H

; 1209 : //		y[ 9 ] = 410;
; 1210 : 		a[ 9 ] = 25.5;

  001b3	c7 05 24 00 00
	00 00 00 cc 41	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+36, 1103888384 ; 41cc0000H

; 1211 : 		x[ 8 ] = 959;

  001bd	c7 05 20 00 00
	00 00 c0 6f 44	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+32, 1148174336 ; 446fc000H

; 1212 : 		y[ 8 ] = 444;

  001c7	c7 05 20 00 00
	00 00 00 de 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+32, 1138622464 ; 43de0000H

; 1213 : 		a[ 8 ] = 25.5;

  001d1	c7 05 20 00 00
	00 00 00 cc 41	 mov	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+32, 1103888384 ; 41cc0000H
  001db	0f 1f 44 00 00	 npad	 5
$LL7@TitleProdu:

; 1214 : 		// ?????????
; 1215 : 		for( bmpNo = CG_TITLE_NAME_S ; bmpNo <= CG_TITLE_DREAM_LOGO ; bmpNo++ ){
; 1216 : 			DWORD no;
; 1217 : 			realGetNo( bmpNo , &no );

  001e0	8d 45 fc	 lea	 eax, DWORD PTR _no$1[ebp]
  001e3	50		 push	 eax
  001e4	56		 push	 esi
  001e5	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo

; 1218 : 			LoadBmp( no );

  001ea	ff 75 fc	 push	 DWORD PTR _no$1[ebp]
  001ed	e8 00 00 00 00	 call	 ?LoadBmp@@YAHH@Z	; LoadBmp
  001f2	46		 inc	 esi
  001f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  001f6	81 fe 5a 71 00
	00		 cmp	 esi, 29018		; 0000715aH
  001fc	7e e2		 jle	 SHORT $LL7@TitleProdu

; 1219 : 		}
; 1220 : 		// ????????
; 1221 : 		NowTime = TimeGetTime();

  001fe	e8 00 00 00 00	 call	 ?TimeGetTime@@YAIXZ	; TimeGetTime

; 1226 : 		//time++;
; 1227 : 		//if( time >= 120 ) 
; 1228 : 		flag = 2;

  00203	b9 02 00 00 00	 mov	 ecx, 2
  00208	a3 00 00 00 00	 mov	 DWORD PTR ?NowTime@@3KA, eax ; NowTime
  0020d	89 0d 00 00 00
	00		 mov	 DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1229 : 	}
; 1230 : 	// ???
; 1231 : 	if( flag == 2 ){

  00213	eb 1b		 jmp	 SHORT $LN90@TitleProdu
$LN15@TitleProdu:

; 1222 : 		flag = 1;
; 1223 : 	}
; 1224 : 	// ???
; 1225 : 	if( flag == 1 ){

  00215	83 f9 01	 cmp	 ecx, 1
  00218	75 0d		 jne	 SHORT $LN16@TitleProdu

; 1226 : 		//time++;
; 1227 : 		//if( time >= 120 ) 
; 1228 : 		flag = 2;

  0021a	b9 02 00 00 00	 mov	 ecx, 2
  0021f	89 0d 00 00 00
	00		 mov	 DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1229 : 	}
; 1230 : 	// ???
; 1231 : 	if( flag == 2 ){

  00225	eb 09		 jmp	 SHORT $LN90@TitleProdu
$LN16@TitleProdu:
  00227	83 f9 02	 cmp	 ecx, 2
  0022a	0f 85 a4 00 00
	00		 jne	 $LN19@TitleProdu
$LN90@TitleProdu:
  00230	f3 0f 10 05 20
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+32
  00238	0f 57 db	 xorps	 xmm3, xmm3

; 1232 : 		a[ 8 ] -= 0.5;

  0023b	f2 0f 10 15 00
	00 00 00	 movsd	 xmm2, QWORD PTR __real@3fe0000000000000
  00243	0f 5a c0	 cvtps2pd xmm0, xmm0
  00246	f2 0f 5c c2	 subsd	 xmm0, xmm2
  0024a	66 0f 5a c8	 cvtpd2ps xmm1, xmm0
  0024e	f3 0f 10 05 20
	00 00 00	 movss	 xmm0, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+32

; 1233 : 		x[ 8 ] -= a[ 8 ];

  00256	0f 2e cb	 ucomiss xmm1, xmm3
  00259	f3 0f 5c c1	 subss	 xmm0, xmm1
  0025d	f3 0f 11 0d 20
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+32, xmm1
  00265	9f		 lahf
  00266	f3 0f 11 05 20
	00 00 00	 movss	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+32, xmm0
  0026e	f6 c4 44	 test	 ah, 68			; 00000044H

; 1234 : 		if( a[ 8 ] == 0 ){

  00271	7a 15		 jp	 SHORT $LN18@TitleProdu

; 1235 : 			x[ 8 ] = 320;
; 1236 : 			flag = 3;

  00273	b9 03 00 00 00	 mov	 ecx, 3
  00278	c7 05 20 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+32, 1134559232 ; 43a00000H
  00282	89 0d 00 00 00
	00		 mov	 DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA, ecx
$LN18@TitleProdu:

; 1237 : 		}
; 1238 : 		// ?????
; 1239 : 		a[ 9 ] -= 0.5;

  00288	f3 0f 10 05 24
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+36
  00290	0f 5a c0	 cvtps2pd xmm0, xmm0
  00293	f2 0f 5c c2	 subsd	 xmm0, xmm2
  00297	66 0f 5a c8	 cvtpd2ps xmm1, xmm0

; 1240 : 		x[ 9 ] += a[ 9 ];

  0029b	0f 2e cb	 ucomiss xmm1, xmm3
  0029e	0f 28 c1	 movaps	 xmm0, xmm1
  002a1	f3 0f 11 0d 24
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+36, xmm1
  002a9	f3 0f 58 05 24
	00 00 00	 addss	 xmm0, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+36
  002b1	9f		 lahf
  002b2	f3 0f 11 05 24
	00 00 00	 movss	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+36, xmm0
  002ba	f6 c4 44	 test	 ah, 68			; 00000044H

; 1241 : 		if( a[ 9 ] == 0 ){

  002bd	7a 15		 jp	 SHORT $LN19@TitleProdu

; 1242 : 			x[ 9 ] = 320;
; 1243 : 			flag = 3;

  002bf	b9 03 00 00 00	 mov	 ecx, 3
  002c4	c7 05 24 00 00
	00 00 00 a0 43	 mov	 DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA+36, 1134559232 ; 43a00000H
  002ce	89 0d 00 00 00
	00		 mov	 DWORD PTR ?flag@?1??TitleProduce@@YAXXZ@4HA, ecx
$LN19@TitleProdu:

; 1244 : 		}
; 1245 : 	}
; 1246 : 	// ??????
; 1247 : 	if( cnt < 8 && flag == 3 ){

  002d4	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?cnt@?1??TitleProduce@@YAXXZ@4HA
  002da	83 fa 08	 cmp	 edx, 8
  002dd	7d 3c		 jge	 SHORT $LN20@TitleProdu
  002df	83 f9 03	 cmp	 ecx, 3
  002e2	0f 85 30 04 00
	00		 jne	 $LN94@TitleProdu

; 1248 : 		if( cnt2 % 4 == 0 ){

  002e8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?cnt2@?1??TitleProduce@@YAXXZ@4HA
  002ee	8b c1		 mov	 eax, ecx
  002f0	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  002f5	79 07		 jns	 SHORT $LN95@TitleProdu
  002f7	48		 dec	 eax
  002f8	83 c8 fc	 or	 eax, -4			; fffffffcH
  002fb	83 c0 01	 add	 eax, 1
$LN95@TitleProdu:
  002fe	75 12		 jne	 SHORT $LN21@TitleProdu

; 1249 : 			fall[ cnt ] = 1;

  00300	c7 04 95 00 00
	00 00 01 00 00
	00		 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA[edx*4], 1

; 1250 : 			cnt++;

  0030b	42		 inc	 edx
  0030c	89 15 00 00 00
	00		 mov	 DWORD PTR ?cnt@?1??TitleProduce@@YAXXZ@4HA, edx
$LN21@TitleProdu:

; 1251 : 		}
; 1252 : 		cnt2++;

  00312	41		 inc	 ecx
  00313	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt2@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1253 : 	}
; 1254 : 	// ?
; 1255 : 	if( flag == 3 ){

  00319	eb 09		 jmp	 SHORT $LN91@TitleProdu
$LN20@TitleProdu:
  0031b	83 f9 03	 cmp	 ecx, 3
  0031e	0f 85 f4 03 00
	00		 jne	 $LN94@TitleProdu
$LN91@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  00324	a1 00 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA
  00329	f2 0f 10 2d 00
	00 00 00	 movsd	 xmm5, QWORD PTR __real@3ff0000000000000
  00331	f3 0f 10 15 00
	00 00 00	 movss	 xmm2, DWORD PTR __real@43200000
  00339	f3 0f 10 25 00
	00 00 00	 movss	 xmm4, DWORD PTR __real@bf000000
  00341	83 f8 01	 cmp	 eax, 1
  00344	7c 7a		 jl	 SHORT $LN92@TitleProdu
  00346	83 f8 03	 cmp	 eax, 3
  00349	7f 75		 jg	 SHORT $LN92@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  0034b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA
  00353	0f 5a c0	 cvtps2pd xmm0, xmm0

; 1260 : 				if( y[ i ] >= 160 ){

  00356	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA
  0035c	f2 0f 58 c5	 addsd	 xmm0, xmm5
  00360	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00364	0f 28 c8	 movaps	 xmm1, xmm0
  00367	f3 0f 11 05 00
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA, xmm0
  0036f	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA
  00377	0f 2f ca	 comiss	 xmm1, xmm2
  0037a	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA, xmm1
  00382	72 4a		 jb	 SHORT $LN45@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00384	40		 inc	 eax
  00385	0f 28 ca	 movaps	 xmm1, xmm2
  00388	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA, xmm1
  00390	a3 00 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00395	83 f8 04	 cmp	 eax, 4
  00398	75 09		 jne	 SHORT $LN44@TitleProdu

; 1264 : 						cnt3++;

  0039a	41		 inc	 ecx
  0039b	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  003a1	eb 2b		 jmp	 SHORT $LN45@TitleProdu
$LN44@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  003a3	0f 28 c8	 movaps	 xmm1, xmm0
  003a6	f3 0f 59 cc	 mulss	 xmm1, xmm4
  003aa	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA, xmm1

; 1268 : 					y[ i ] += a[ i ];

  003b2	f3 0f 58 ca	 addss	 xmm1, xmm2
  003b6	f3 0f 11 0d 00
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA, xmm1
  003be	eb 0e		 jmp	 SHORT $LN45@TitleProdu
$LN92@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  003c0	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA
  003c8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA
$LN45@TitleProdu:
  003ce	a1 04 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+4
  003d3	83 f8 01	 cmp	 eax, 1
  003d6	7c 6e		 jl	 SHORT $LN66@TitleProdu
  003d8	83 f8 03	 cmp	 eax, 3
  003db	7f 69		 jg	 SHORT $LN66@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  003dd	f3 0f 10 05 04
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+4
  003e5	0f 5a c0	 cvtps2pd xmm0, xmm0
  003e8	f2 0f 58 c5	 addsd	 xmm0, xmm5
  003ec	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  003f0	0f 28 c3	 movaps	 xmm0, xmm3
  003f3	f3 0f 11 1d 04
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+4, xmm3
  003fb	f3 0f 58 05 04
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+4

; 1260 : 				if( y[ i ] >= 160 ){

  00403	0f 2f c2	 comiss	 xmm0, xmm2
  00406	f3 0f 11 05 04
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+4, xmm0
  0040e	72 36		 jb	 SHORT $LN66@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00410	40		 inc	 eax
  00411	c7 05 04 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+4, 1126170624 ; 43200000H
  0041b	a3 04 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+4, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00420	83 f8 04	 cmp	 eax, 4
  00423	75 09		 jne	 SHORT $LN65@TitleProdu

; 1264 : 						cnt3++;

  00425	41		 inc	 ecx
  00426	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  0042c	eb 18		 jmp	 SHORT $LN66@TitleProdu
$LN65@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  0042e	f3 0f 59 dc	 mulss	 xmm3, xmm4
  00432	f3 0f 11 1d 04
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+4, xmm3

; 1268 : 					y[ i ] += a[ i ];

  0043a	f3 0f 58 da	 addss	 xmm3, xmm2
  0043e	f3 0f 11 1d 04
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+4, xmm3
$LN66@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  00446	a1 08 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+8
  0044b	83 f8 01	 cmp	 eax, 1
  0044e	7c 6e		 jl	 SHORT $LN69@TitleProdu
  00450	83 f8 03	 cmp	 eax, 3
  00453	7f 69		 jg	 SHORT $LN69@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  00455	f3 0f 10 05 08
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+8
  0045d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00460	f2 0f 58 c5	 addsd	 xmm0, xmm5
  00464	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  00468	0f 28 c3	 movaps	 xmm0, xmm3
  0046b	f3 0f 11 1d 08
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+8, xmm3
  00473	f3 0f 58 05 08
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+8

; 1260 : 				if( y[ i ] >= 160 ){

  0047b	0f 2f c2	 comiss	 xmm0, xmm2
  0047e	f3 0f 11 05 08
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+8, xmm0
  00486	72 36		 jb	 SHORT $LN69@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00488	40		 inc	 eax
  00489	c7 05 08 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+8, 1126170624 ; 43200000H
  00493	a3 08 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+8, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00498	83 f8 04	 cmp	 eax, 4
  0049b	75 09		 jne	 SHORT $LN68@TitleProdu

; 1264 : 						cnt3++;

  0049d	41		 inc	 ecx
  0049e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  004a4	eb 18		 jmp	 SHORT $LN69@TitleProdu
$LN68@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  004a6	f3 0f 59 dc	 mulss	 xmm3, xmm4
  004aa	f3 0f 11 1d 08
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+8, xmm3

; 1268 : 					y[ i ] += a[ i ];

  004b2	f3 0f 58 da	 addss	 xmm3, xmm2
  004b6	f3 0f 11 1d 08
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+8, xmm3
$LN69@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  004be	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+12
  004c3	83 f8 01	 cmp	 eax, 1
  004c6	7c 6e		 jl	 SHORT $LN72@TitleProdu
  004c8	83 f8 03	 cmp	 eax, 3
  004cb	7f 69		 jg	 SHORT $LN72@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  004cd	f3 0f 10 05 0c
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+12
  004d5	0f 5a c0	 cvtps2pd xmm0, xmm0
  004d8	f2 0f 58 c5	 addsd	 xmm0, xmm5
  004dc	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  004e0	0f 28 c3	 movaps	 xmm0, xmm3
  004e3	f3 0f 11 1d 0c
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+12, xmm3
  004eb	f3 0f 58 05 0c
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+12

; 1260 : 				if( y[ i ] >= 160 ){

  004f3	0f 2f c2	 comiss	 xmm0, xmm2
  004f6	f3 0f 11 05 0c
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+12, xmm0
  004fe	72 36		 jb	 SHORT $LN72@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00500	40		 inc	 eax
  00501	c7 05 0c 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+12, 1126170624 ; 43200000H
  0050b	a3 0c 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+12, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00510	83 f8 04	 cmp	 eax, 4
  00513	75 09		 jne	 SHORT $LN71@TitleProdu

; 1264 : 						cnt3++;

  00515	41		 inc	 ecx
  00516	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  0051c	eb 18		 jmp	 SHORT $LN72@TitleProdu
$LN71@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  0051e	f3 0f 59 dc	 mulss	 xmm3, xmm4
  00522	f3 0f 11 1d 0c
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+12, xmm3

; 1268 : 					y[ i ] += a[ i ];

  0052a	f3 0f 58 da	 addss	 xmm3, xmm2
  0052e	f3 0f 11 1d 0c
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+12, xmm3
$LN72@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  00536	a1 10 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+16
  0053b	83 f8 01	 cmp	 eax, 1
  0053e	7c 6e		 jl	 SHORT $LN75@TitleProdu
  00540	83 f8 03	 cmp	 eax, 3
  00543	7f 69		 jg	 SHORT $LN75@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  00545	f3 0f 10 05 10
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+16
  0054d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00550	f2 0f 58 c5	 addsd	 xmm0, xmm5
  00554	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  00558	0f 28 c3	 movaps	 xmm0, xmm3
  0055b	f3 0f 11 1d 10
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+16, xmm3
  00563	f3 0f 58 05 10
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+16

; 1260 : 				if( y[ i ] >= 160 ){

  0056b	0f 2f c2	 comiss	 xmm0, xmm2
  0056e	f3 0f 11 05 10
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+16, xmm0
  00576	72 36		 jb	 SHORT $LN75@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00578	40		 inc	 eax
  00579	c7 05 10 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+16, 1126170624 ; 43200000H
  00583	a3 10 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+16, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00588	83 f8 04	 cmp	 eax, 4
  0058b	75 09		 jne	 SHORT $LN74@TitleProdu

; 1264 : 						cnt3++;

  0058d	41		 inc	 ecx
  0058e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  00594	eb 18		 jmp	 SHORT $LN75@TitleProdu
$LN74@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  00596	f3 0f 59 dc	 mulss	 xmm3, xmm4
  0059a	f3 0f 11 1d 10
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+16, xmm3

; 1268 : 					y[ i ] += a[ i ];

  005a2	f3 0f 58 da	 addss	 xmm3, xmm2
  005a6	f3 0f 11 1d 10
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+16, xmm3
$LN75@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  005ae	a1 14 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+20
  005b3	83 f8 01	 cmp	 eax, 1
  005b6	7c 6e		 jl	 SHORT $LN78@TitleProdu
  005b8	83 f8 03	 cmp	 eax, 3
  005bb	7f 69		 jg	 SHORT $LN78@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  005bd	f3 0f 10 05 14
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+20
  005c5	0f 5a c0	 cvtps2pd xmm0, xmm0
  005c8	f2 0f 58 c5	 addsd	 xmm0, xmm5
  005cc	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  005d0	0f 28 c3	 movaps	 xmm0, xmm3
  005d3	f3 0f 11 1d 14
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+20, xmm3
  005db	f3 0f 58 05 14
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+20

; 1260 : 				if( y[ i ] >= 160 ){

  005e3	0f 2f c2	 comiss	 xmm0, xmm2
  005e6	f3 0f 11 05 14
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+20, xmm0
  005ee	72 36		 jb	 SHORT $LN78@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  005f0	40		 inc	 eax
  005f1	c7 05 14 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+20, 1126170624 ; 43200000H
  005fb	a3 14 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+20, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00600	83 f8 04	 cmp	 eax, 4
  00603	75 09		 jne	 SHORT $LN77@TitleProdu

; 1264 : 						cnt3++;

  00605	41		 inc	 ecx
  00606	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  0060c	eb 18		 jmp	 SHORT $LN78@TitleProdu
$LN77@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  0060e	f3 0f 59 dc	 mulss	 xmm3, xmm4
  00612	f3 0f 11 1d 14
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+20, xmm3

; 1268 : 					y[ i ] += a[ i ];

  0061a	f3 0f 58 da	 addss	 xmm3, xmm2
  0061e	f3 0f 11 1d 14
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+20, xmm3
$LN78@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  00626	a1 18 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+24
  0062b	83 f8 01	 cmp	 eax, 1
  0062e	7c 6e		 jl	 SHORT $LN81@TitleProdu
  00630	83 f8 03	 cmp	 eax, 3
  00633	7f 69		 jg	 SHORT $LN81@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  00635	f3 0f 10 05 18
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+24
  0063d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00640	f2 0f 58 c5	 addsd	 xmm0, xmm5
  00644	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  00648	0f 28 c3	 movaps	 xmm0, xmm3
  0064b	f3 0f 11 1d 18
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+24, xmm3
  00653	f3 0f 58 05 18
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+24

; 1260 : 				if( y[ i ] >= 160 ){

  0065b	0f 2f c2	 comiss	 xmm0, xmm2
  0065e	f3 0f 11 05 18
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+24, xmm0
  00666	72 36		 jb	 SHORT $LN81@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  00668	40		 inc	 eax
  00669	c7 05 18 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+24, 1126170624 ; 43200000H
  00673	a3 18 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+24, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  00678	83 f8 04	 cmp	 eax, 4
  0067b	75 09		 jne	 SHORT $LN80@TitleProdu

; 1264 : 						cnt3++;

  0067d	41		 inc	 ecx
  0067e	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  00684	eb 18		 jmp	 SHORT $LN81@TitleProdu
$LN80@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  00686	f3 0f 59 dc	 mulss	 xmm3, xmm4
  0068a	f3 0f 11 1d 18
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+24, xmm3

; 1268 : 					y[ i ] += a[ i ];

  00692	f3 0f 58 da	 addss	 xmm3, xmm2
  00696	f3 0f 11 1d 18
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+24, xmm3
$LN81@TitleProdu:

; 1256 : 		for( i = 0 ; i < 8 ; i++ ){
; 1257 : 			if( fall[ i ] >= 1 && fall[ i ] <= 3 ){

  0069e	a1 1c 00 00 00	 mov	 eax, DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+28
  006a3	83 f8 01	 cmp	 eax, 1
  006a6	7c 7e		 jl	 SHORT $LN84@TitleProdu
  006a8	83 f8 03	 cmp	 eax, 3
  006ab	7f 79		 jg	 SHORT $LN84@TitleProdu

; 1258 : 				a[ i ] += 1.0;

  006ad	f3 0f 10 05 1c
	00 00 00	 movss	 xmm0, DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+28
  006b5	0f 5a c0	 cvtps2pd xmm0, xmm0
  006b8	f2 0f 58 c5	 addsd	 xmm0, xmm5
  006bc	66 0f 5a d8	 cvtpd2ps xmm3, xmm0

; 1259 : 				y[ i ] += a[ i ];

  006c0	0f 28 c3	 movaps	 xmm0, xmm3
  006c3	f3 0f 11 1d 1c
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+28, xmm3
  006cb	f3 0f 58 05 1c
	00 00 00	 addss	 xmm0, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+28

; 1260 : 				if( y[ i ] >= 160 ){

  006d3	0f 2f c2	 comiss	 xmm0, xmm2
  006d6	f3 0f 11 05 1c
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+28, xmm0
  006de	72 46		 jb	 SHORT $LN84@TitleProdu

; 1261 : 					y[ i ] = 160;
; 1262 : 					fall[ i ]++;

  006e0	40		 inc	 eax
  006e1	c7 05 1c 00 00
	00 00 00 20 43	 mov	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+28, 1126170624 ; 43200000H
  006eb	a3 1c 00 00 00	 mov	 DWORD PTR ?fall@?1??TitleProduce@@YAXXZ@4PAHA+28, eax

; 1263 : 					if( fall[ i ] == 4 ){ 

  006f0	83 f8 04	 cmp	 eax, 4
  006f3	75 09		 jne	 SHORT $LN83@TitleProdu

; 1264 : 						cnt3++;

  006f5	41		 inc	 ecx
  006f6	89 0d 00 00 00
	00		 mov	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA, ecx

; 1265 : 						continue;

  006fc	eb 28		 jmp	 SHORT $LN84@TitleProdu
$LN83@TitleProdu:

; 1266 : 					}
; 1267 : 					a[ i ] *= -0.5F;

  006fe	f3 0f 59 dc	 mulss	 xmm3, xmm4
  00702	f3 0f 11 1d 1c
	00 00 00	 movss	 DWORD PTR ?a@?1??TitleProduce@@YAXXZ@4PAMA+28, xmm3

; 1268 : 					y[ i ] += a[ i ];

  0070a	f3 0f 58 da	 addss	 xmm3, xmm2
  0070e	f3 0f 11 1d 1c
	00 00 00	 movss	 DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA+28, xmm3
  00716	eb 0e		 jmp	 SHORT $LN84@TitleProdu
$LN94@TitleProdu:

; 1253 : 	}
; 1254 : 	// ?
; 1255 : 	if( flag == 3 ){

  00718	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA
  00720	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA
$LN84@TitleProdu:

; 1269 : 				}
; 1270 : 			}
; 1271 : 		}
; 1272 : 	}
; 1273 : 	// ???????
; 1274 : 	//StockDispBuffer( ( int )x[ 8 ], ( int )y[ 8 ], DISP_PRIO_CHAR, CG_TITLE_JSS_LOGO, 0 );
; 1275 : 	//Syu Cancel 06/24/2002
; 1276 : 	//StockDispBuffer( ( int )x[ 9 ], ( int )y[ 9 ], DISP_PRIO_CHAR, CG_TITLE_DREAM_LOGO, 0 );
; 1277 : 	if( cnt3 < 8 ){

  00726	83 f9 08	 cmp	 ecx, 8
  00729	7d 4f		 jge	 SHORT $LN87@TitleProdu

; 1278 : 		// 
; 1279 : 		for( i = 0 ; i < 8 ; i++ ){

  0072b	33 f6		 xor	 esi, esi
  0072d	0f 1f 00	 npad	 3
$LL13@TitleProdu:

; 1280 : 			StockDispBuffer( ( int )x[ i ] + DISPLACEMENT_X / 2, ( int )y[ i ] + DISPLACEMENT_Y / 2, DISP_PRIO_CHAR, CG_TITLE_NAME_S + i, 0 );

  00730	f3 0f 2c 0c b5
	00 00 00 00	 cvttss2si ecx, DWORD PTR ?y@?1??TitleProduce@@YAXXZ@4PAMA[esi*4]
  00739	6a 00		 push	 0
  0073b	8d 86 4a 71 00
	00		 lea	 eax, DWORD PTR [esi+29002]
  00741	50		 push	 eax
  00742	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  00747	99		 cdq
  00748	2b c2		 sub	 eax, edx
  0074a	d1 f8		 sar	 eax, 1
  0074c	6a 0a		 push	 10			; 0000000aH
  0074e	03 c8		 add	 ecx, eax
  00750	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00755	51		 push	 ecx
  00756	f3 0f 2c 0c b5
	00 00 00 00	 cvttss2si ecx, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA[esi*4]
  0075f	99		 cdq
  00760	2b c2		 sub	 eax, edx
  00762	d1 f8		 sar	 eax, 1
  00764	03 c8		 add	 ecx, eax
  00766	51		 push	 ecx
  00767	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  0076c	46		 inc	 esi
  0076d	83 c4 14	 add	 esp, 20			; 00000014H
  00770	83 fe 08	 cmp	 esi, 8
  00773	7c bb		 jl	 SHORT $LL13@TitleProdu
  00775	5e		 pop	 esi

; 1291 : }

  00776	8b e5		 mov	 esp, ebp
  00778	5d		 pop	 ebp
  00779	c3		 ret	 0
$LN87@TitleProdu:

; 1281 : 		}
; 1282 : 	}else if( cnt3 >= 8 && cnt3 < 31 ){

  0077a	83 f9 1f	 cmp	 ecx, 31			; 0000001fH
  0077d	7d 70		 jge	 SHORT $LN28@TitleProdu

; 1283 : 		if( cnt3 < 26 ){

  0077f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00784	99		 cdq
  00785	2b c2		 sub	 eax, edx
  00787	8b f0		 mov	 esi, eax
  00789	d1 fe		 sar	 esi, 1
  0078b	83 f9 1a	 cmp	 ecx, 26			; 0000001aH
  0078e	7d 23		 jge	 SHORT $LN30@TitleProdu

; 1284 : 			StockDispBuffer( ( int )x[ 0 ] + DISPLACEMENT_X / 2, ( int )y[ 0 ] + DISPLACEMENT_Y / 2, DISP_PRIO_CHAR, CG_TITLE_NAME_FLASH, 0 );

  00790	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA
  00798	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  0079d	99		 cdq
  0079e	2b c2		 sub	 eax, edx
  007a0	8b d0		 mov	 edx, eax
  007a2	d1 fa		 sar	 edx, 1
  007a4	03 f1		 add	 esi, ecx
  007a6	f3 0f 2c c9	 cvttss2si ecx, xmm1
  007aa	03 d1		 add	 edx, ecx
  007ac	b9 53 71 00 00	 mov	 ecx, 29011		; 00007153H

; 1285 : 		}else{

  007b1	eb 22		 jmp	 SHORT $LN31@TitleProdu
$LN30@TitleProdu:

; 1286 : 			StockDispBuffer( ( int )x[ 0 ] + DISPLACEMENT_X / 2, ( int )y[ 0 ] + DISPLACEMENT_Y / 2, DISP_PRIO_CHAR, CG_TITLE_NAME_FLASH1 + cnt3 - 26 , 0 );

  007b3	f3 0f 2c 05 00
	00 00 00	 cvttss2si eax, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA
  007bb	03 f0		 add	 esi, eax
  007bd	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  007c2	99		 cdq
  007c3	2b c2		 sub	 eax, edx
  007c5	8b d0		 mov	 edx, eax
  007c7	f3 0f 2c c1	 cvttss2si eax, xmm1
  007cb	d1 fa		 sar	 edx, 1
  007cd	03 d0		 add	 edx, eax
  007cf	81 c1 3a 71 00
	00		 add	 ecx, 28986		; 0000713aH
$LN31@TitleProdu:

; 1287 : 		}	
; 1288 : 		cnt3++;

  007d5	6a 00		 push	 0
  007d7	51		 push	 ecx
  007d8	6a 0a		 push	 10			; 0000000aH
  007da	52		 push	 edx
  007db	56		 push	 esi
  007dc	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  007e1	83 c4 14	 add	 esp, 20			; 00000014H
  007e4	ff 05 00 00 00
	00		 inc	 DWORD PTR ?cnt3@?1??TitleProduce@@YAXXZ@4HA
  007ea	5e		 pop	 esi

; 1291 : }

  007eb	8b e5		 mov	 esp, ebp
  007ed	5d		 pop	 ebp
  007ee	c3		 ret	 0
$LN28@TitleProdu:

; 1289 : 	}else
; 1290 : 		StockDispBuffer( ( int )x[ 0 ]  +DISPLACEMENT_X / 2, ( int )y[ 0 ] + DISPLACEMENT_Y / 2, DISP_PRIO_CHAR, CG_TITLE_NAME, 0 );

  007ef	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_Y@@3HA ; DISPLACEMENT_Y
  007f4	99		 cdq
  007f5	2b c2		 sub	 eax, edx
  007f7	f3 0f 2c c9	 cvttss2si ecx, xmm1
  007fb	d1 f8		 sar	 eax, 1
  007fd	6a 00		 push	 0
  007ff	68 52 71 00 00	 push	 29010			; 00007152H
  00804	6a 0a		 push	 10			; 0000000aH
  00806	03 c1		 add	 eax, ecx
  00808	f3 0f 2c 0d 00
	00 00 00	 cvttss2si ecx, DWORD PTR ?x@?1??TitleProduce@@YAXXZ@4PAMA
  00810	50		 push	 eax
  00811	a1 00 00 00 00	 mov	 eax, DWORD PTR ?DISPLACEMENT_X@@3HA ; DISPLACEMENT_X
  00816	99		 cdq
  00817	2b c2		 sub	 eax, edx
  00819	d1 f8		 sar	 eax, 1
  0081b	03 c1		 add	 eax, ecx
  0081d	50		 push	 eax
  0081e	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  00823	83 c4 14	 add	 esp, 20			; 00000014H
  00826	5e		 pop	 esi

; 1291 : }

  00827	8b e5		 mov	 esp, ebp
  00829	5d		 pop	 ebp
  0082a	c3		 ret	 0
?TitleProduce@@YAXXZ ENDP				; TitleProduce
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?DrawProduce@@YAHH@Z
_TEXT	SEGMENT
_no$ = 8						; size = 4
?DrawProduce@@YAHH@Z PROC				; DrawProduce, COMDAT

; 1053 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 1054 : #ifdef _STONDEBUG_
; 1055 : 	// pass
; 1056 : 	if( joy_con[ 0 ] & JOY_UP ){ 
; 1057 : 		// ????????
; 1058 : 		NowTime = TimeGetTime();
; 1059 : 		return FALSE;
; 1060 : 	}
; 1061 : #endif
; 1062 : 	BOOL ret = TRUE;

  00004	be 01 00 00 00	 mov	 esi, 1

; 1063 : 	ClearBackSurface();	

  00009	e8 00 00 00 00	 call	 ?ClearBackSurface@@YAXXZ ; ClearBackSurface

; 1064 : 	//JLWG 关闭特效
; 1065 : 	//goto _ret;
; 1066 : 
; 1067 : 	switch( no ){

  0000e	8b 45 08	 mov	 eax, DWORD PTR _no$[ebp]
  00011	83 f8 1d	 cmp	 eax, 29			; 0000001dH
  00014	0f 87 14 01 00
	00		 ja	 $LN36@DrawProduc
  0001a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $LN37@DrawProduc[eax*4]
$LN4@DrawProduc:

; 1068 : 	case PRODUCE_UP_ACCELE:
; 1069 : 		ret = ProduceAccele( 0 );

  00021	6a 00		 push	 0
  00023	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1070 : 		break;

  00028	e9 f8 00 00 00	 jmp	 $LN39@DrawProduc
$LN5@DrawProduc:

; 1071 : 	case PRODUCE_DOWN_ACCELE:
; 1072 : 		ret = ProduceAccele( 1 );

  0002d	6a 01		 push	 1
  0002f	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1073 : 		break;

  00034	e9 ec 00 00 00	 jmp	 $LN39@DrawProduc
$LN6@DrawProduc:

; 1074 : 	case PRODUCE_LEFT_ACCELE:
; 1075 : 		ret = ProduceAccele( 2 );

  00039	6a 02		 push	 2
  0003b	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1076 : 		break;

  00040	e9 e0 00 00 00	 jmp	 $LN39@DrawProduc
$LN7@DrawProduc:

; 1077 : 	case PRODUCE_RIGHT_ACCELE:	// ???
; 1078 : 		ret = ProduceAccele( 3 );

  00045	6a 03		 push	 3
  00047	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1079 : 		break;

  0004c	e9 d4 00 00 00	 jmp	 $LN39@DrawProduc
$LN8@DrawProduc:

; 1080 : 	case PRODUCE_LEFT_RIGHT_ACCELE:	// ????
; 1081 : 		ret = ProduceAccele( 4 );

  00051	6a 04		 push	 4
  00053	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1082 : 		break;

  00058	e9 c8 00 00 00	 jmp	 $LN39@DrawProduc
$LN9@DrawProduc:

; 1083 : 	case PRODUCE_UP_DOWM_ACCELE:	// ???
; 1084 : 		ret = ProduceAccele( 5 );

  0005d	6a 05		 push	 5
  0005f	e8 00 00 00 00	 call	 ?ProduceAccele@@YAHH@Z	; ProduceAccele

; 1085 : 		break;

  00064	e9 bc 00 00 00	 jmp	 $LN39@DrawProduc
$LN10@DrawProduc:

; 1086 : 	case PRODUCE_UP_BRAKE:		// ??
; 1087 : 		ret = ProduceBrake( 0 );

  00069	6a 00		 push	 0
  0006b	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1088 : 		break;

  00070	e9 b0 00 00 00	 jmp	 $LN39@DrawProduc
$LN11@DrawProduc:

; 1089 : 	case PRODUCE_DOWN_BRAKE:	// ???
; 1090 : 		ret = ProduceBrake( 1 );

  00075	6a 01		 push	 1
  00077	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1091 : 		break;

  0007c	e9 a4 00 00 00	 jmp	 $LN39@DrawProduc
$LN12@DrawProduc:

; 1092 : 		
; 1093 : 	case PRODUCE_LEFT_BRAKE:	// ???
; 1094 : 		ret = ProduceBrake( 2 );

  00081	6a 02		 push	 2
  00083	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1095 : 		break;

  00088	e9 98 00 00 00	 jmp	 $LN39@DrawProduc
$LN13@DrawProduc:

; 1096 : 		
; 1097 : 	case PRODUCE_RIGHT_BRAKE:	// ???
; 1098 : 		ret = ProduceBrake( 3 );

  0008d	6a 03		 push	 3
  0008f	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1099 : 		break;

  00094	e9 8c 00 00 00	 jmp	 $LN39@DrawProduc
$LN14@DrawProduc:

; 1100 : 		
; 1101 : 	case PRODUCE_LEFT_RIGHT_BRAKE:	// ???
; 1102 : 		ret = ProduceBrake( 4 );

  00099	6a 04		 push	 4
  0009b	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1103 : 		break;

  000a0	e9 80 00 00 00	 jmp	 $LN39@DrawProduc
$LN15@DrawProduc:

; 1104 : 		
; 1105 : 	case PRODUCE_UP_DOWM_BRAKE:	// // ???
; 1106 : 		ret = ProduceBrake( 5 );

  000a5	6a 05		 push	 5
  000a7	e8 00 00 00 00	 call	 ?ProduceBrake@@YAHH@Z	; ProduceBrake

; 1107 : 		break;

  000ac	eb 77		 jmp	 SHORT $LN39@DrawProduc
$LN16@DrawProduc:

; 1108 : 	case PRODUCE_4WAY_OUT:		// ?????
; 1109 : 		ret = Produce4Way( 0 );

  000ae	6a 00		 push	 0
  000b0	e8 00 00 00 00	 call	 ?Produce4Way@@YAHH@Z	; Produce4Way

; 1110 : 		break;

  000b5	eb 6e		 jmp	 SHORT $LN39@DrawProduc
$LN17@DrawProduc:

; 1111 : 	case PRODUCE_4WAY_IN:		// ????
; 1112 : 		ret = Produce4Way( 1 );

  000b7	6a 01		 push	 1
  000b9	e8 00 00 00 00	 call	 ?Produce4Way@@YAHH@Z	; Produce4Way

; 1113 : 		break;

  000be	eb 65		 jmp	 SHORT $LN39@DrawProduc
$LN18@DrawProduc:

; 1114 : 	case PRODUCE_HAGARE_OUT:	// ?????????
; 1115 : 		ret = ProduceHagare( 0 );

  000c0	6a 00		 push	 0
  000c2	e8 00 00 00 00	 call	 ?ProduceHagare@@YAHH@Z	; ProduceHagare

; 1116 : 		break;

  000c7	eb 5c		 jmp	 SHORT $LN39@DrawProduc
$LN19@DrawProduc:

; 1117 : 	case PRODUCE_HAGARE_IN:		// ??????????
; 1118 : 		ret = ProduceHagare( 1 );

  000c9	6a 01		 push	 1
  000cb	e8 00 00 00 00	 call	 ?ProduceHagare@@YAHH@Z	; ProduceHagare

; 1119 : 		break;

  000d0	eb 53		 jmp	 SHORT $LN39@DrawProduc
$LN20@DrawProduc:

; 1120 : 	case PRODUCE_HAGARE_OCHI_OUT:	// ?????????
; 1121 : 		ret = ProduceHagare( 2 );

  000d2	6a 02		 push	 2
  000d4	e8 00 00 00 00	 call	 ?ProduceHagare@@YAHH@Z	; ProduceHagare

; 1122 : 		break;

  000d9	eb 4a		 jmp	 SHORT $LN39@DrawProduc
$LN21@DrawProduc:

; 1123 : 	case PRODUCE_HAGARE_OCHI_IN:	// ??????????
; 1124 : 		ret = ProduceHagare( 3 );

  000db	6a 03		 push	 3
  000dd	e8 00 00 00 00	 call	 ?ProduceHagare@@YAHH@Z	; ProduceHagare

; 1125 : 		break;

  000e2	eb 41		 jmp	 SHORT $LN39@DrawProduc
$LN22@DrawProduc:

; 1126 : 	case PRODUCE_BRAN_SMALL:	// ???
; 1127 : 		ret = Produce_bran_small(-1);

  000e4	6a ff		 push	 -1
  000e6	e8 00 00 00 00	 call	 ?Produce_bran_small@@YAHH@Z ; Produce_bran_small

; 1128 : 		break;

  000eb	eb 38		 jmp	 SHORT $LN39@DrawProduc
$LN23@DrawProduc:

; 1129 : 	case PRODUCE_BRAN_BIG:		// ????
; 1130 : 		ret = Produce_bran_small(1);

  000ed	6a 01		 push	 1
  000ef	e8 00 00 00 00	 call	 ?Produce_bran_small@@YAHH@Z ; Produce_bran_small

; 1131 : 		break;

  000f4	eb 2f		 jmp	 SHORT $LN39@DrawProduc
$LN24@DrawProduc:

; 1161 : 		break;
; 1162 : 
; 1163 : 	}
; 1164 : 	_ret:
; 1165 : #ifdef __SKYISLAND
; 1166 : 	if( ret){

  000f6	6a ff		 push	 -1
  000f8	e8 00 00 00 00	 call	 ?Produce_break_up@@YAHH@Z ; Produce_break_up
  000fd	eb 26		 jmp	 SHORT $LN39@DrawProduc
$LN25@DrawProduc:
  000ff	6a 01		 push	 1
  00101	e8 00 00 00 00	 call	 ?Produce_break_up@@YAHH@Z ; Produce_break_up
  00106	eb 1d		 jmp	 SHORT $LN39@DrawProduc
$LN27@DrawProduc:
  00108	6a 01		 push	 1
  0010a	e8 00 00 00 00	 call	 ?Produce_break_up2@@YAHH@Z ; Produce_break_up2
  0010f	eb 14		 jmp	 SHORT $LN39@DrawProduc
$LN28@DrawProduc:
  00111	6a ff		 push	 -1
  00113	e8 00 00 00 00	 call	 ?Produce_break_up2@@YAHH@Z ; Produce_break_up2
  00118	eb 0b		 jmp	 SHORT $LN39@DrawProduc
$LN32@DrawProduc:

; 1132 : 	case PRODUCE_BREAK_UP1:		//???????
; 1133 : 		ret = Produce_break_up(-1);
; 1134 : 		break;
; 1135 : 	case PRODUCE_BREAK_UP2:		//??????
; 1136 : 		ret = Produce_break_up(1);
; 1137 : 		break;
; 1138 : 	case PRODUCE_BREAK_UP3:		//???????
; 1139 : 		ret = Produce_break_up(-1);
; 1140 : 		break;
; 1141 : 	case PRODUCE_BREAK_UP4:		//???????
; 1142 : 		ret = Produce_break_up2(1);
; 1143 : 		break;
; 1144 : 	case PRODUCE_BREAK_UP5:		//????????
; 1145 : 		ret = Produce_break_up2(-1);
; 1146 : 		break;
; 1147 : 	case PRODUCE_BREAK_UP6:		//???????
; 1148 : 		ret = Produce_break_up2(1);
; 1149 : 		break;
; 1150 : 	case PRODUCE_BREAK_UP7:		//????????
; 1151 : 		ret = Produce_break_up2(-1);
; 1152 : 		break;
; 1153 : 	case PRODUCE_BREAK_UP8:		//??????
; 1154 : 		ret = Produce_break_up(1);
; 1155 : 		break;
; 1156 : 	case PRODUCE_CENTER_PRESSIN:
; 1157 : 		ret = ProduceCenterPress( 0 );

  0011a	6a 00		 push	 0

; 1158 : 		break;

  0011c	eb 02		 jmp	 SHORT $LN40@DrawProduc
$LN33@DrawProduc:

; 1159 : 	case PRODUCE_CENTER_PRESSOUT:
; 1160 : 		ret = ProduceCenterPress( 1 );

  0011e	6a 01		 push	 1
$LN40@DrawProduc:

; 1161 : 		break;
; 1162 : 
; 1163 : 	}
; 1164 : 	_ret:
; 1165 : #ifdef __SKYISLAND
; 1166 : 	if( ret){

  00120	e8 00 00 00 00	 call	 ?ProduceCenterPress@@YAHH@Z ; ProduceCenterPress
$LN39@DrawProduc:
  00125	8b f0		 mov	 esi, eax
  00127	83 c4 04	 add	 esp, 4
$_ret$43:
  0012a	85 f6		 test	 esi, esi
  0012c	74 0e		 je	 SHORT $LN41@DrawProduc
$LN36@DrawProduc:

; 1167 : 		ClearSurface( lpBattleSurface);

  0012e	ff 35 00 00 00
	00		 push	 DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  00134	e8 00 00 00 00	 call	 ?ClearSurface@@YAXPAUIDirectDrawSurface@@@Z ; ClearSurface
  00139	83 c4 04	 add	 esp, 4
$LN41@DrawProduc:

; 1168 : #ifdef _READ16BITBMP
; 1169 : 		if(g_bUseAlpha) ClearSurface( lpBattleSurfaceSys);
; 1170 : #endif
; 1171 : 	}
; 1172 : #endif
; 1173 : 	
; 1174 : 	return ret;
; 1175 : }

  0013c	8b c6		 mov	 eax, esi
  0013e	5e		 pop	 esi
  0013f	5d		 pop	 ebp
  00140	c3		 ret	 0
  00141	0f 1f 00	 npad	 3
$LN37@DrawProduc:
  00144	00 00 00 00	 DD	 $LN4@DrawProduc
  00148	00 00 00 00	 DD	 $LN10@DrawProduc
  0014c	00 00 00 00	 DD	 $LN5@DrawProduc
  00150	00 00 00 00	 DD	 $LN11@DrawProduc
  00154	00 00 00 00	 DD	 $LN6@DrawProduc
  00158	00 00 00 00	 DD	 $LN12@DrawProduc
  0015c	00 00 00 00	 DD	 $LN7@DrawProduc
  00160	00 00 00 00	 DD	 $LN13@DrawProduc
  00164	00 00 00 00	 DD	 $LN8@DrawProduc
  00168	00 00 00 00	 DD	 $LN14@DrawProduc
  0016c	00 00 00 00	 DD	 $LN9@DrawProduc
  00170	00 00 00 00	 DD	 $LN15@DrawProduc
  00174	00 00 00 00	 DD	 $LN16@DrawProduc
  00178	00 00 00 00	 DD	 $LN17@DrawProduc
  0017c	00 00 00 00	 DD	 $LN18@DrawProduc
  00180	00 00 00 00	 DD	 $LN19@DrawProduc
  00184	00 00 00 00	 DD	 $LN20@DrawProduc
  00188	00 00 00 00	 DD	 $LN21@DrawProduc
  0018c	00 00 00 00	 DD	 $LN22@DrawProduc
  00190	00 00 00 00	 DD	 $LN23@DrawProduc
  00194	00 00 00 00	 DD	 $LN24@DrawProduc
  00198	00 00 00 00	 DD	 $LN25@DrawProduc
  0019c	00 00 00 00	 DD	 $LN24@DrawProduc
  001a0	00 00 00 00	 DD	 $LN27@DrawProduc
  001a4	00 00 00 00	 DD	 $LN28@DrawProduc
  001a8	00 00 00 00	 DD	 $LN27@DrawProduc
  001ac	00 00 00 00	 DD	 $LN28@DrawProduc
  001b0	00 00 00 00	 DD	 $LN25@DrawProduc
  001b4	00 00 00 00	 DD	 $LN32@DrawProduc
  001b8	00 00 00 00	 DD	 $LN33@DrawProduc
?DrawProduce@@YAHH@Z ENDP				; DrawProduce
_TEXT	ENDS
; Function compile flags: /Ogtp
; File \\VBOXSVR\_stoneage\repos\ssm-sacli\system\produce.cpp
;	COMDAT ?CopyBackBuffer@@YAXXZ
_TEXT	SEGMENT
?CopyBackBuffer@@YAXXZ PROC				; CopyBackBuffer, COMDAT

; 17   : 	// ??????????????????????
; 18   : 	lpBattleSurface->BltFast( 0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT );

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lpDraw@@3PAUDIRECT_DRAW@@A ; lpDraw
  00005	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lpBattleSurface@@3PAUIDirectDrawSurface@@A ; lpBattleSurface
  0000b	6a 10		 push	 16			; 00000010H
  0000d	6a 00		 push	 0
  0000f	ff 70 0c	 push	 DWORD PTR [eax+12]
  00012	8b 11		 mov	 edx, DWORD PTR [ecx]
  00014	6a 00		 push	 0
  00016	6a 00		 push	 0
  00018	51		 push	 ecx
  00019	ff 52 1c	 call	 DWORD PTR [edx+28]

; 19   : #ifdef _READ16BITBMP
; 20   : 	if(g_bUseAlpha) lpBattleSurfaceSys->BltFast(0,0,lpDraw->lpBACKBUFFERSYS,NULL,DDBLTFAST_WAIT);
; 21   : #endif
; 22   : }	

  0001c	c3		 ret	 0
?CopyBackBuffer@@YAXXZ ENDP				; CopyBackBuffer
_TEXT	ENDS
END
