; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?randTbl@@3PAHA					; randTbl
PUBLIC	?SinTbl@@3PANA					; SinTbl
PUBLIC	?atan_table@@3PANA				; atan_table
_BSS	SEGMENT
?randTbl@@3PAHA DD 064H DUP (?)				; randTbl
_BSS	ENDS
_DATA	SEGMENT
?SinTbl@@3PANA DQ 00000000000000000r		; 0	; SinTbl
	DQ	03f91deefe4ffc979r		; 0.017452
	DQ	03fa1de481f53825er		; 0.034899
	DQ	03faacbc8c0ce91c9r		; 0.052336
	DQ	03fb1db877ab32485r		; 0.069756
	DQ	03fb64fdb09a671efr		; 0.087156
	DQ	03fbac258d5842b73r		; 0.104528
	DQ	03fbf32ce89656ef0r		; 0.121869
	DQ	03fc1d06bbdbe3c10r		; 0.139173
	DQ	03fc4060780fdc161r		; 0.156434
	DQ	03fc63a19008205ffr		; 0.173648
	DQ	03fc86c6de76427c8r		; 0.190809
	DQ	03fca9cdc443914f5r		; 0.207912
	DQ	03fcccb31c219eb64r		; 0.224951
	DQ	03fcef74cd31769a9r		; 0.241922
	DQ	03fd0907d912556d2r		; 0.258819
	DQ	03fd1a4095f2452c6r		; 0.275637
	DQ	03fd2b6390c9107fbr		; 0.292372
	DQ	03fd3c6ef3d3a1d32r		; 0.309017
	DQ	03fd4d61b2a27f1b7r		; 0.325568
	DQ	03fd5e3a7daa4fca4r		; 0.34202
	DQ	03fd6ef8055fbb518r		; 0.358368
	DQ	03fd7f98fa376922er		; 0.374607
	DQ	03fd901bc98a222d5r		; 0.390731
	DQ	03fda07faa044ae86r		; 0.406737
	DQ	03fdb0c2c5e2cdc01r		; 0.422618
	DQ	03fdc0e453d20f2bfr		; 0.438371
	DQ	03fdd0e30446b69dbr		; 0.453991
	DQ	03fde0bd44998d046r		; 0.469472
	DQ	03fdf072085b18549r		; 0.48481
	DQ	03fe0000000000000r		; 0.5
	DQ	03fe07b30f8c64fdbr		; 0.515038
	DQ	03fe0f518b0d0edc4r		; 0.529919
	DQ	03fe16daec4a4095fr		; 0.544639
	DQ	03fe1e4e8b7e4de3cr		; 0.559193
	DQ	03fe25abc0e38a7e7r		; 0.573576
	DQ	03fe2cf227d028a1er		; 0.587785
	DQ	03fe3421187e7c06er		; 0.601815
	DQ	03fe3b380cb6c7a7dr		; 0.615662
	DQ	03fe42363b256ffc1r		; 0.62932
	DQ	03fe491b823c85c25r		; 0.642788
	DQ	03fe4fe6f71a7e308r		; 0.656059
	DQ	03fe569856a37ac3fr		; 0.669131
	DQ	03fe5d2ed783dff3fr		; 0.681998
	DQ	03fe63aa369fcf3dcr		; 0.694658
	DQ	03fe6a09edbf8b9bbr		; 0.707107
	DQ	03fe704d551d68c69r		; 0.71934
	DQ	03fe7674080f98fa3r		; 0.731354
	DQ	03fe7c7d805e5f30er		; 0.743145
	DQ	03fe8269595feda66r		; 0.75471
	DQ	03fe8836eb4e98138r		; 0.766044
	DQ	03fe8de6149c6f36fr		; 0.777146
	DQ	03fe93762d83c6c98r		; 0.788011
	DQ	03fe98e6afcce1c58r		; 0.798635
	DQ	03fe9e3779e9d0e99r		; 0.809017
	DQ	03fea367e414e7ee9r		; 0.819152
	DQ	03fea877ab324851br		; 0.829038
	DQ	03fead66490a350d3r		; 0.838671
	DQ	03feb23358f2e05cdr		; 0.848048
	DQ	03feb6de97d06bbdcr		; 0.857167
	DQ	03febb67a0f9096bcr		; 0.866025
	DQ	03febfce3150dae3er		; 0.87462
	DQ	03fec411c2a023209r		; 0.882948
	DQ	03fec83211cb039efr		; 0.891007
	DQ	03fecc2eba27ae9abr		; 0.898794
	DQ	03fed0079a2834d27r		; 0.906308
	DQ	03fed3bc2b94d9408r		; 0.913545
	DQ	03fed74c6e6d9be4dr		; 0.920505
	DQ	03fedab7dc7abfb9cr		; 0.927184
	DQ	03feddfe32a0663c7r		; 0.93358
	DQ	03fee11f70de8f6cfr		; 0.939693
	DQ	03fee41b10fd7e458r		; 0.945519
	DQ	03fee6f0f16f4384cr		; 0.951057
	DQ	03fee9a0cf1800a7cr		; 0.956305
	DQ	03feec2a8869c66d3r		; 0.961262
	DQ	03feee8dda48b6523r		; 0.965926
	DQ	03fef0caa326e1156r		; 0.970296
	DQ	03fef2e09fe86833cr		; 0.97437
	DQ	03fef4cfd08d4bad8r		; 0.978148
	DQ	03fef697d06bbdbe4r		; 0.981627
	DQ	03fef838c111ada77r		; 0.984808
	DQ	03fef9b23dd54da4dr		; 0.987688
	DQ	03fefb0468448cf7dr		; 0.990268
	DQ	03fefc2efd438d1d9r		; 0.992546
	DQ	03fefd31fcd24e161r		; 0.994522
	DQ	03fefe0d4562e09ffr		; 0.996195
	DQ	03fefec0b5675579br		; 0.997564
	DQ	03feff4c6e6d9be4dr		; 0.99863
	DQ	03feffb02d59d55e7r		; 0.999391
	DQ	03feffec13b9f127fr		; 0.999848
	DQ	03ff0000000000000r		; 1
	DQ	03feffec13b9f127fr		; 0.999848
	DQ	03feffb02d59d55e7r		; 0.999391
	DQ	03feff4c6e6d9be4dr		; 0.99863
	DQ	03fefec0b5675579br		; 0.997564
	DQ	03fefe0d4562e09ffr		; 0.996195
	DQ	03fefd31fcd24e161r		; 0.994522
	DQ	03fefc2efd438d1d9r		; 0.992546
	DQ	03fefb0468448cf7dr		; 0.990268
	DQ	03fef9b23dd54da4dr		; 0.987688
	DQ	03fef838c111ada77r		; 0.984808
	DQ	03fef697d06bbdbe4r		; 0.981627
	DQ	03fef4cfd08d4bad8r		; 0.978148
	DQ	03fef2e09fe86833cr		; 0.97437
	DQ	03fef0caa326e1156r		; 0.970296
	DQ	03feee8dda48b6523r		; 0.965926
	DQ	03feec2a8869c66d3r		; 0.961262
	DQ	03fee9a0cf1800a7cr		; 0.956305
	DQ	03fee6f0cfe154435r		; 0.951056
	DQ	03fee41b10fd7e458r		; 0.945519
	DQ	03fee11f70de8f6cfr		; 0.939693
	DQ	03feddfe32a0663c7r		; 0.93358
	DQ	03fedab7dc7abfb9cr		; 0.927184
	DQ	03fed74c6e6d9be4dr		; 0.920505
	DQ	03fed3bc2b94d9408r		; 0.913545
	DQ	03fed0079a2834d27r		; 0.906308
	DQ	03fecc2eba27ae9abr		; 0.898794
	DQ	03fec83211cb039efr		; 0.891007
	DQ	03fec411c2a023209r		; 0.882948
	DQ	03febfce3150dae3er		; 0.87462
	DQ	03febb67a0f9096bcr		; 0.866025
	DQ	03feb6de97d06bbdcr		; 0.857167
	DQ	03feb23358f2e05cdr		; 0.848048
	DQ	03fead66490a350d3r		; 0.838671
	DQ	03fea87789a459104r		; 0.829037
	DQ	03fea367e414e7ee9r		; 0.819152
	DQ	03fe9e3779e9d0e99r		; 0.809017
	DQ	03fe98e6afcce1c58r		; 0.798635
	DQ	03fe93762d83c6c98r		; 0.788011
	DQ	03fe8de6149c6f36fr		; 0.777146
	DQ	03fe8836eb4e98138r		; 0.766044
	DQ	03fe8269595feda66r		; 0.75471
	DQ	03fe7c7d805e5f30er		; 0.743145
	DQ	03fe7674080f98fa3r		; 0.731354
	DQ	03fe704d551d68c69r		; 0.71934
	DQ	03fe6a09edbf8b9bbr		; 0.707107
	DQ	03fe63aa369fcf3dcr		; 0.694658
	DQ	03fe5d2ed783dff3fr		; 0.681998
	DQ	03fe569856a37ac3fr		; 0.669131
	DQ	03fe4fe6f71a7e308r		; 0.656059
	DQ	03fe491b823c85c25r		; 0.642788
	DQ	03fe42363b256ffc1r		; 0.62932
	DQ	03fe3b37eb28d8666r		; 0.615661
	DQ	03fe3421187e7c06er		; 0.601815
	DQ	03fe2cf227d028a1er		; 0.587785
	DQ	03fe25abc0e38a7e7r		; 0.573576
	DQ	03fe1e4e8b7e4de3cr		; 0.559193
	DQ	03fe16daec4a4095fr		; 0.544639
	DQ	03fe0f518b0d0edc4r		; 0.529919
	DQ	03fe07b30f8c64fdbr		; 0.515038
	DQ	03fe0000000000000r		; 0.5
	DQ	03fdf072085b18549r		; 0.48481
	DQ	03fde0bd44998d046r		; 0.469472
	DQ	03fdd0e2c12ad81aer		; 0.45399
	DQ	03fdc0e453d20f2bfr		; 0.438371
	DQ	03fdb0c2c5e2cdc01r		; 0.422618
	DQ	03fda07faa044ae86r		; 0.406737
	DQ	03fd901bc98a222d5r		; 0.390731
	DQ	03fd7f98fa376922er		; 0.374607
	DQ	03fd6ef8055fbb518r		; 0.358368
	DQ	03fd5e3a7daa4fca4r		; 0.34202
	DQ	03fd4d61b2a27f1b7r		; 0.325568
	DQ	03fd3c6ef3d3a1d32r		; 0.309017
	DQ	03fd2b6390c9107fbr		; 0.292372
	DQ	03fd1a4095f2452c6r		; 0.275637
	DQ	03fd0907d912556d2r		; 0.258819
	DQ	03fcef74cd31769a9r		; 0.241922
	DQ	03fcccb31c219eb64r		; 0.224951
	DQ	03fca9cdc443914f5r		; 0.207912
	DQ	03fc86c6de76427c8r		; 0.190809
	DQ	03fc63a19008205ffr		; 0.173648
	DQ	03fc4060780fdc161r		; 0.156434
	DQ	03fc1d06bbdbe3c10r		; 0.139173
	DQ	03fbf32ce89656ef0r		; 0.121869
	DQ	03fbac258d5842b73r		; 0.104528
	DQ	03fb64fdb09a671efr		; 0.087156
	DQ	03fb1db877ab32485r		; 0.069756
	DQ	03faacbc8c0ce91c9r		; 0.052336
	DQ	03fa1de69ad42c3car		; 0.0349
	DQ	03f91deefe4ffc979r		; 0.017452
	DQ	08000000000000000r		; -0
	DQ	0bf91deefe4ffc979r		; -0.017452
	DQ	0bfa1de69ad42c3car		; -0.0349
	DQ	0bfaacbc8c0ce91c9r		; -0.052336
	DQ	0bfb1db9841aac53br		; -0.069757
	DQ	0bfb64fdb09a671efr		; -0.087156
	DQ	0bfbac258d5842b73r		; -0.104528
	DQ	0bfbf32ce89656ef0r		; -0.121869
	DQ	0bfc1d06bbdbe3c10r		; -0.139173
	DQ	0bfc4060780fdc161r		; -0.156434
	DQ	0bfc63a19008205ffr		; -0.173648
	DQ	0bfc86c6de76427c8r		; -0.190809
	DQ	0bfca9cdc443914f5r		; -0.207912
	DQ	0bfcccb31c219eb64r		; -0.224951
	DQ	0bfcef74cd31769a9r		; -0.241922
	DQ	0bfd0907d912556d2r		; -0.258819
	DQ	0bfd1a4095f2452c6r		; -0.275637
	DQ	0bfd2b6390c9107fbr		; -0.292372
	DQ	0bfd3c6ef3d3a1d32r		; -0.309017
	DQ	0bfd4d61b2a27f1b7r		; -0.325568
	DQ	0bfd5e3a7daa4fca4r		; -0.34202
	DQ	0bfd6ef8055fbb518r		; -0.358368
	DQ	0bfd7f98b71b8aa00r		; -0.374606
	DQ	0bfd901bc98a222d5r		; -0.390731
	DQ	0bfda07faa044ae86r		; -0.406737
	DQ	0bfdb0c2c5e2cdc01r		; -0.422618
	DQ	0bfdc0e453d20f2bfr		; -0.438371
	DQ	0bfdd0e30446b69dbr		; -0.453991
	DQ	0bfde0bd44998d046r		; -0.469472
	DQ	0bfdf072085b18549r		; -0.48481
	DQ	0bfe0000000000000r		; -0.5
	DQ	0bfe07b30f8c64fdbr		; -0.515038
	DQ	0bfe0f518b0d0edc4r		; -0.529919
	DQ	0bfe16daec4a4095fr		; -0.544639
	DQ	0bfe1e4e8b7e4de3cr		; -0.559193
	DQ	0bfe25abc0e38a7e7r		; -0.573576
	DQ	0bfe2cf227d028a1er		; -0.587785
	DQ	0bfe3421187e7c06er		; -0.601815
	DQ	0bfe3b37eb28d8666r		; -0.615661
	DQ	0bfe42363b256ffc1r		; -0.62932
	DQ	0bfe491b823c85c25r		; -0.642788
	DQ	0bfe4fe6f71a7e308r		; -0.656059
	DQ	0bfe569856a37ac3fr		; -0.669131
	DQ	0bfe5d2ed783dff3fr		; -0.681998
	DQ	0bfe63aa369fcf3dcr		; -0.694658
	DQ	0bfe6a09edbf8b9bbr		; -0.707107
	DQ	0bfe704d551d68c69r		; -0.71934
	DQ	0bfe7674080f98fa3r		; -0.731354
	DQ	0bfe7c7d805e5f30er		; -0.743145
	DQ	0bfe8269595feda66r		; -0.75471
	DQ	0bfe88370cdc8754fr		; -0.766045
	DQ	0bfe8de6149c6f36fr		; -0.777146
	DQ	0bfe93762d83c6c98r		; -0.788011
	DQ	0bfe98e6afcce1c58r		; -0.798635
	DQ	0bfe9e3779e9d0e99r		; -0.809017
	DQ	0bfea367e414e7ee9r		; -0.819152
	DQ	0bfea877ab324851br		; -0.829038
	DQ	0bfead66490a350d3r		; -0.838671
	DQ	0bfeb23358f2e05cdr		; -0.848048
	DQ	0bfeb6de97d06bbdcr		; -0.857167
	DQ	0bfebb67a0f9096bcr		; -0.866025
	DQ	0bfebfce3150dae3er		; -0.87462
	DQ	0bfec411c2a023209r		; -0.882948
	DQ	0bfec83211cb039efr		; -0.891007
	DQ	0bfecc2eba27ae9abr		; -0.898794
	DQ	0bfed0079a2834d27r		; -0.906308
	DQ	0bfed3bc2b94d9408r		; -0.913545
	DQ	0bfed74c6e6d9be4dr		; -0.920505
	DQ	0bfedab7dc7abfb9cr		; -0.927184
	DQ	0bfeddfe542e557der		; -0.933581
	DQ	0bfee11f4f50a02b8r		; -0.939692
	DQ	0bfee41b10fd7e458r		; -0.945519
	DQ	0bfee6f0cfe154435r		; -0.951056
	DQ	0bfee9a0cf1800a7cr		; -0.956305
	DQ	0bfeec2a8869c66d3r		; -0.961262
	DQ	0bfeee8dda48b6523r		; -0.965926
	DQ	0bfef0caa326e1156r		; -0.970296
	DQ	0bfef2e09fe86833cr		; -0.97437
	DQ	0bfef4cfd08d4bad8r		; -0.978148
	DQ	0bfef697d06bbdbe4r		; -0.981627
	DQ	0bfef838c111ada77r		; -0.984808
	DQ	0bfef9b23dd54da4dr		; -0.987688
	DQ	0bfefb0468448cf7dr		; -0.990268
	DQ	0bfefc2efd438d1d9r		; -0.992546
	DQ	0bfefd31fcd24e161r		; -0.994522
	DQ	0bfefe0d4562e09ffr		; -0.996195
	DQ	0bfefec0b5675579br		; -0.997564
	DQ	0bfeff4c6e6d9be4dr		; -0.99863
	DQ	0bfeffb02d59d55e7r		; -0.999391
	DQ	0bfeffec13b9f127fr		; -0.999848
	DQ	0bff0000000000000r		; -1
	DQ	0bfeffec13b9f127fr		; -0.999848
	DQ	0bfeffb02d59d55e7r		; -0.999391
	DQ	0bfeff4c6e6d9be4dr		; -0.99863
	DQ	0bfefec0b5675579br		; -0.997564
	DQ	0bfefe0d4562e09ffr		; -0.996195
	DQ	0bfefd31fcd24e161r		; -0.994522
	DQ	0bfefc2efd438d1d9r		; -0.992546
	DQ	0bfefb0468448cf7dr		; -0.990268
	DQ	0bfef9b23dd54da4dr		; -0.987688
	DQ	0bfef838c111ada77r		; -0.984808
	DQ	0bfef697d06bbdbe4r		; -0.981627
	DQ	0bfef4cfd08d4bad8r		; -0.978148
	DQ	0bfef2e09fe86833cr		; -0.97437
	DQ	0bfef0caa326e1156r		; -0.970296
	DQ	0bfeee8dda48b6523r		; -0.965926
	DQ	0bfeec2a8869c66d3r		; -0.961262
	DQ	0bfee9a0cf1800a7cr		; -0.956305
	DQ	0bfee6f0cfe154435r		; -0.951056
	DQ	0bfee41b10fd7e458r		; -0.945519
	DQ	0bfee11f70de8f6cfr		; -0.939693
	DQ	0bfeddfe32a0663c7r		; -0.93358
	DQ	0bfedab7dc7abfb9cr		; -0.927184
	DQ	0bfed74c6e6d9be4dr		; -0.920505
	DQ	0bfed3bc2b94d9408r		; -0.913545
	DQ	0bfed0079a2834d27r		; -0.906308
	DQ	0bfecc2eba27ae9abr		; -0.898794
	DQ	0bfec83211cb039efr		; -0.891007
	DQ	0bfec411c2a023209r		; -0.882948
	DQ	0bfebfce3150dae3er		; -0.87462
	DQ	0bfebb67a0f9096bcr		; -0.866025
	DQ	0bfeb6de97d06bbdcr		; -0.857167
	DQ	0bfeb23358f2e05cdr		; -0.848048
	DQ	0bfead66490a350d3r		; -0.838671
	DQ	0bfea877ab324851br		; -0.829038
	DQ	0bfea367e414e7ee9r		; -0.819152
	DQ	0bfe9e3779e9d0e99r		; -0.809017
	DQ	0bfe98e6afcce1c58r		; -0.798635
	DQ	0bfe93762d83c6c98r		; -0.788011
	DQ	0bfe8de6149c6f36fr		; -0.777146
	DQ	0bfe8836eb4e98138r		; -0.766044
	DQ	0bfe8269595feda66r		; -0.75471
	DQ	0bfe7c7d805e5f30er		; -0.743145
	DQ	0bfe7674080f98fa3r		; -0.731354
	DQ	0bfe704d551d68c69r		; -0.71934
	DQ	0bfe6a09edbf8b9bbr		; -0.707107
	DQ	0bfe63aa582dbe7f3r		; -0.694659
	DQ	0bfe5d2ed783dff3fr		; -0.681998
	DQ	0bfe569856a37ac3fr		; -0.669131
	DQ	0bfe4fe6f71a7e308r		; -0.656059
	DQ	0bfe491b823c85c25r		; -0.642788
	DQ	0bfe42365cb35f3d8r		; -0.629321
	DQ	0bfe3b37eb28d8666r		; -0.615661
	DQ	0bfe3421187e7c06er		; -0.601815
	DQ	0bfe2cf227d028a1er		; -0.587785
	DQ	0bfe25abc0e38a7e7r		; -0.573576
	DQ	0bfe1e4e8b7e4de3cr		; -0.559193
	DQ	0bfe16daec4a4095fr		; -0.544639
	DQ	0bfe0f518b0d0edc4r		; -0.529919
	DQ	0bfe07b30f8c64fdbr		; -0.515038
	DQ	0bfe0000000000000r		; -0.5
	DQ	0bfdf071c53f39d1br		; -0.484809
	DQ	0bfde0bd44998d046r		; -0.469472
	DQ	0bfdd0e30446b69dbr		; -0.453991
	DQ	0bfdc0e453d20f2bfr		; -0.438371
	DQ	0bfdb0c2c5e2cdc01r		; -0.422618
	DQ	0bfda07f66e86c658r		; -0.406736
	DQ	0bfd901bc98a222d5r		; -0.390731
	DQ	0bfd7f98fa376922er		; -0.374607
	DQ	0bfd6ef8055fbb518r		; -0.358368
	DQ	0bfd5e3a7daa4fca4r		; -0.34202
	DQ	0bfd4d61b2a27f1b7r		; -0.325568
	DQ	0bfd3c6ef3d3a1d32r		; -0.309017
	DQ	0bfd2b6390c9107fbr		; -0.292372
	DQ	0bfd1a40d90e23af3r		; -0.275638
	DQ	0bfd0907d912556d2r		; -0.258819
	DQ	0bfcef74cd31769a9r		; -0.241922
	DQ	0bfcccb31c219eb64r		; -0.224951
	DQ	0bfca9cdc443914f5r		; -0.207912
	DQ	0bfc86c6de76427c8r		; -0.190809
	DQ	0bfc63a19008205ffr		; -0.173648
	DQ	0bfc4060780fdc161r		; -0.156434
	DQ	0bfc1d06bbdbe3c10r		; -0.139173
	DQ	0bfbf32ce89656ef0r		; -0.121869
	DQ	0bfbac258d5842b73r		; -0.104528
	DQ	0bfb64fdb09a671efr		; -0.087156
	DQ	0bfb1db9841aac53br		; -0.069757
	DQ	0bfaacbc8c0ce91c9r		; -0.052336
	DQ	0bfa1de69ad42c3car		; -0.0349
	DQ	0bf91deefe4ffc979r		; -0.017452
?atan_table@@3PANA DQ 00000000000000000r	; 0	; atan_table
	DQ	03feca543f1c75819r		; 0.895174
	DQ	03ffca379b77c02b0r		; 1.78991
	DQ	04005785f06f69446r		; 2.68377
	DQ	0400c9c55000c953ar		; 3.57633
	DQ	04011de5eedcc20d5r		; 4.46716
	DQ	040156c5d63886595r		; 5.35583
	DQ	04018f7b84db9c737r		; 6.24191
	DQ	0401c800431bde82dr		; 7.12502
	DQ	04020026bd6e8af81r		; 8.00473
	DQ	04021c2e5bc87db2br		; 8.88066
	DQ	04023813dd97f62b7r		; 9.75243
	DQ	040253d436b8f9b13r		; 10.6197
	DQ	04026f6c7863beec4r		; 11.482
	DQ	04028ad9ccfaeff5cr		; 12.3391
	DQ	0402a6197c3d68406r		; 13.1906
	DQ	0402c128e71476af9r		; 14.0362
	DQ	0402dc059641f6449r		; 14.8757
	DQ	0402f6ad2999567dcr		; 15.7086
	DQ	0403088eb24a6a876r		; 16.5348
	DQ	040315aa161e4f766r		; 17.354
	DQ	040322a7c286f8ad2r		; 18.166
	DQ	04032f86ca89fc6dar		; 18.9704
	DQ	04033c46530058149r		; 19.7672
	DQ	040348e58f7121ab5r		; 20.556
	DQ	04035563c64345cffr		; 21.3369
	DQ	040361c04c8bc9cd4r		; 22.1094
	DQ	04036dfa8826aa8ebr		; 22.8737
	DQ	04037a11eeaa6d267r		; 23.6294
	DQ	04038606045baf534r		; 24.3765
	DQ	040391d65d3996fa8r		; 25.1148
	DQ	04039d829cfdd2285r		; 25.8444
	DQ	0403a90a72ead9275r		; 26.5651
	DQ	0403b46d9f0a1be2br		; 27.2768
	DQ	0403bfabecedd4845r		; 27.9795
	DQ	0403cac535c9e6688r		; 28.6731
	DQ	0403d5b95c4220360r		; 29.3578
	DQ	0403e088509bf9c63r		; 30.0333
	DQ	0403eb3210be9424er		; 30.6997
	DQ	0403f5b69ec2ce465r		; 31.3571
	DQ	0404000b063e07a29r		; 32.0054
	DQ	0404052839042d8c3r		; 32.6446
	DQ	04040a32f87ad080br		; 33.2749
	DQ	04040f2b599aa6091r		; 33.8962
	DQ	040414117481b21c4r		; 34.5085
	DQ	040418e56605ee569r		; 35.112
	DQ	04041da74d9c6b053r		; 35.7067
	DQ	040422574e65bea0cr		; 36.2926
	DQ	040426f58d1526d8br		; 36.8699
	DQ	04042b8232096787dr		; 37.4386
	DQ	04042ffd6733ebbfdr		; 37.9987
	DQ	040434675a31a4bdcr		; 38.5505
	DQ	040438c03925bb7b7r		; 39.0939
	DQ	04043d0833c60029fr		; 39.629
	DQ	0404413f7ced91687r		; 40.156
	DQ	0404456646f156191r		; 40.6749
	DQ	0404497cc63f14120r		; 41.1859
	DQ	04044d83315d701dar		; 41.6891
	DQ	04045179bd4067cf2r		; 42.1844
	DQ	04045560a2877ee4er		; 42.6722
	DQ	04045938183f91e64r		; 43.1524
	DQ	04045d005681ecd4br		; 43.6252
	DQ	040460b996fa82e88r		; 44.0906
	DQ	0404646411c2a0232r		; 44.5489
	DQ	04046800000000000r		; 45
_DATA	ENDS
PUBLIC	?AdjustDir@@YAXPAM@Z				; AdjustDir
PUBLIC	?AdjustDir@@YAXPAH@Z				; AdjustDir
PUBLIC	?SinT@@YAMM@Z					; SinT
PUBLIC	?CosT@@YAMM@Z					; CosT
PUBLIC	?Atan@@YAMMM@Z					; Atan
PUBLIC	?Rnd@@YAHHH@Z					; Rnd
PUBLIC	?initRand2@@YAXXZ				; initRand2
PUBLIC	?rand2@@YAHXZ					; rand2
PUBLIC	?pointLen@@YAMMMMM@Z				; pointLen
PUBLIC	?pointLen2@@YAMMMMM@Z				; pointLen2
PUBLIC	__real@00000000
PUBLIC	__real@3f800000
PUBLIC	__real@4076800000000000
PUBLIC	__real@42800000
PUBLIC	__real@42b40000
PUBLIC	__real@43070000
PUBLIC	__real@43340000
PUBLIC	__real@43870000
PUBLIC	__real@43b40000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_rand:PROC
EXTRN	__libm_sse2_sqrt_precise:PROC
EXTRN	__fltused:DWORD
;	COMDAT ?r@?1??rand2@@YAHXZ@4HA
_BSS	SEGMENT
?r@?1??rand2@@YAHXZ@4HA DD 01H DUP (?)			; `rand2'::`2'::r
_BSS	ENDS
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@43870000
CONST	SEGMENT
__real@43870000 DD 043870000r			; 270
CONST	ENDS
;	COMDAT __real@43340000
CONST	SEGMENT
__real@43340000 DD 043340000r			; 180
CONST	ENDS
;	COMDAT __real@43070000
CONST	SEGMENT
__real@43070000 DD 043070000r			; 135
CONST	ENDS
;	COMDAT __real@42b40000
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@42800000
CONST	SEGMENT
__real@42800000 DD 042800000r			; 64
CONST	ENDS
;	COMDAT __real@4076800000000000
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?pointLen2@@YAMMMMM@Z
_TEXT	SEGMENT
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
tv130 = 16						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
?pointLen2@@YAMMMMM@Z PROC				; pointLen2, COMDAT

; 375  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 376  : 	float x, y;
; 377  : 
; 378  : 	x = x2 - x1;

  00003	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _x2$[ebp]

; 379  : 	y = y2 - y1;

  00008	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  0000d	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00012	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _x1$[ebp]

; 380  : 
; 381  : 	return( x*x + y*y );

  00017	f3 0f 59 c0	 mulss	 xmm0, xmm0
  0001b	f3 0f 59 c9	 mulss	 xmm1, xmm1
  0001f	f3 0f 58 c1	 addss	 xmm0, xmm1
  00023	f3 0f 11 45 10	 movss	 DWORD PTR tv130[ebp], xmm0
  00028	d9 45 10	 fld	 DWORD PTR tv130[ebp]

; 382  : }

  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?pointLen2@@YAMMMMM@Z ENDP				; pointLen2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?pointLen@@YAMMMMM@Z
_TEXT	SEGMENT
tv128 = -4						; size = 4
_x1$ = 8						; size = 4
_y1$ = 12						; size = 4
_x2$ = 16						; size = 4
_y2$ = 20						; size = 4
?pointLen@@YAMMMMM@Z PROC				; pointLen, COMDAT

; 365  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H

; 366  : 	float x, y;
; 367  : 
; 368  : 	x = x2 - x1;

  00006	f3 0f 10 4d 10	 movss	 xmm1, DWORD PTR _x2$[ebp]
  0000b	83 ec 08	 sub	 esp, 8

; 369  : 	y = y2 - y1;

  0000e	f3 0f 10 45 14	 movss	 xmm0, DWORD PTR _y2$[ebp]
  00013	f3 0f 5c 45 0c	 subss	 xmm0, DWORD PTR _y1$[ebp]
  00018	f3 0f 5c 4d 08	 subss	 xmm1, DWORD PTR _x1$[ebp]

; 370  : 
; 371  : 	return (float)sqrt( x*x + y*y );

  0001d	f3 0f 59 c0	 mulss	 xmm0, xmm0
  00021	f3 0f 59 c9	 mulss	 xmm1, xmm1
  00025	f3 0f 58 c1	 addss	 xmm0, xmm1
  00029	0f 57 c9	 xorps	 xmm1, xmm1
  0002c	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002f	66 0f 2e c8	 ucomisd xmm1, xmm0
  00033	77 16		 ja	 SHORT $LN3@pointLen
  00035	f2 0f 51 c0	 sqrtsd	 xmm0, xmm0
  00039	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0003d	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv128[esp+8], xmm0
  00043	d9 44 24 04	 fld	 DWORD PTR tv128[esp+8]

; 372  : }

  00047	8b e5		 mov	 esp, ebp
  00049	5d		 pop	 ebp
  0004a	c3		 ret	 0
$LN3@pointLen:

; 370  : 
; 371  : 	return (float)sqrt( x*x + y*y );

  0004b	e8 00 00 00 00	 call	 __libm_sse2_sqrt_precise
  00050	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  00054	f3 0f 11 44 24
	04		 movss	 DWORD PTR tv128[esp+8], xmm0
  0005a	d9 44 24 04	 fld	 DWORD PTR tv128[esp+8]

; 372  : }

  0005e	8b e5		 mov	 esp, ebp
  00060	5d		 pop	 ebp
  00061	c3		 ret	 0
?pointLen@@YAMMMMM@Z ENDP				; pointLen
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?rand2@@YAHXZ
_TEXT	SEGMENT
?rand2@@YAHXZ PROC					; rand2, COMDAT

; 295  : 	static int r = 0;
; 296  : 	int ret;
; 297  : 
; 298  : 	ret = randTbl[r];

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?r@?1??rand2@@YAHXZ@4HA

; 299  : 	r++;
; 300  : 	if( r >= MAX_RND2_TBL )

  00006	33 d2		 xor	 edx, edx
  00008	8b 04 8d 00 00
	00 00		 mov	 eax, DWORD PTR ?randTbl@@3PAHA[ecx*4]
  0000f	41		 inc	 ecx
  00010	83 f9 64	 cmp	 ecx, 100		; 00000064H
  00013	0f 4d ca	 cmovge	 ecx, edx
  00016	89 0d 00 00 00
	00		 mov	 DWORD PTR ?r@?1??rand2@@YAHXZ@4HA, ecx

; 301  : 		r = 0;
; 302  : 
; 303  : 	return ret;
; 304  : }

  0001c	c3		 ret	 0
?rand2@@YAHXZ ENDP					; rand2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?initRand2@@YAXXZ
_TEXT	SEGMENT
?initRand2@@YAXXZ PROC					; initRand2, COMDAT

; 280  : 	int i;
; 281  : 	int j;
; 282  : 	j = (rand() % 100);

  00000	e8 00 00 00 00	 call	 _rand
  00005	b9 64 00 00 00	 mov	 ecx, 100		; 00000064H
  0000a	99		 cdq
  0000b	f7 f9		 idiv	 ecx
  0000d	33 c9		 xor	 ecx, ecx
  0000f	90		 npad	 1
$LL4@initRand2:

; 283  : 	for( i = 0; i < MAX_RND2_TBL; i++ ){
; 284  : 		randTbl[j] = i;

  00010	89 0c 95 00 00
	00 00		 mov	 DWORD PTR ?randTbl@@3PAHA[edx*4], ecx
  00017	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  0001a	33 d2		 xor	 edx, edx
  0001c	41		 inc	 ecx
  0001d	83 f8 64	 cmp	 eax, 100		; 00000064H
  00020	0f 4c d0	 cmovl	 edx, eax
  00023	83 f9 64	 cmp	 ecx, 100		; 00000064H
  00026	7c e8		 jl	 SHORT $LL4@initRand2

; 285  : 		j++;
; 286  : 		if( j >= MAX_RND2_TBL )
; 287  : 			j = 0;
; 288  : 	}
; 289  : }

  00028	c3		 ret	 0
?initRand2@@YAXXZ ENDP					; initRand2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?Rnd@@YAHHH@Z
_TEXT	SEGMENT
_min$ = 8						; size = 4
_max$ = 12						; size = 4
?Rnd@@YAHHH@Z PROC					; Rnd, COMDAT

; 270  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 271  : 	int rnd;
; 272  : 	if( ( max + 1 - min ) + min == 0 ) return 0;

  00004	8b 75 0c	 mov	 esi, DWORD PTR _max$[ebp]
  00007	8d 46 01	 lea	 eax, DWORD PTR [esi+1]
  0000a	85 c0		 test	 eax, eax
  0000c	75 03		 jne	 SHORT $LN2@Rnd
  0000e	5e		 pop	 esi

; 276  : }

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
$LN2@Rnd:

; 273  : 	rnd = rand() % ( max + 1 - min ) + min;

  00011	e8 00 00 00 00	 call	 _rand

; 274  : 
; 275  : 	return rnd;

  00016	8b 4d 08	 mov	 ecx, DWORD PTR _min$[ebp]
  00019	2b f1		 sub	 esi, ecx
  0001b	46		 inc	 esi
  0001c	99		 cdq
  0001d	f7 fe		 idiv	 esi
  0001f	5e		 pop	 esi
  00020	8d 04 11	 lea	 eax, DWORD PTR [ecx+edx]

; 276  : }

  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
?Rnd@@YAHHH@Z ENDP					; Rnd
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?Atan@@YAMMM@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
?Atan@@YAMMM@Z PROC					; Atan, COMDAT

; 189  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 190  : 	int		c = 0;
; 191  : 	float	a;
; 192  : 	float	r = 0;
; 193  : 	float	v, w;
; 194  : 	int		index1, index2;
; 195  : 	float	a1, a2;
; 196  : 	float	ratio;
; 197  : 
; 198  : 
; 199  : 	if (0.0 == x && 0.0 == y) {

  00003	f3 0f 10 65 08	 movss	 xmm4, DWORD PTR _x$[ebp]
  00008	0f 57 d2	 xorps	 xmm2, xmm2
  0000b	f3 0f 10 5d 0c	 movss	 xmm3, DWORD PTR _y$[ebp]
  00010	0f 57 ed	 xorps	 xmm5, xmm5
  00013	0f 5a c4	 cvtps2pd xmm0, xmm4
  00016	0f 57 c9	 xorps	 xmm1, xmm1
  00019	66 0f 2e d0	 ucomisd xmm2, xmm0
  0001d	9f		 lahf
  0001e	f6 c4 44	 test	 ah, 68			; 00000044H
  00021	7a 11		 jp	 SHORT $LN4@Atan
  00023	0f 5a c3	 cvtps2pd xmm0, xmm3
  00026	66 0f 2e d0	 ucomisd xmm2, xmm0
  0002a	9f		 lahf
  0002b	f6 c4 44	 test	 ah, 68			; 00000044H
  0002e	7a 04		 jp	 SHORT $LN4@Atan

; 200  : 		return 0.0;

  00030	d9 ee		 fldz

; 266  : }

  00032	5d		 pop	 ebp
  00033	c3		 ret	 0
$LN4@Atan:

; 201  : 	}
; 202  : 
; 203  : 	if ( x < 0 ) {

  00034	0f 2f ec	 comiss	 xmm5, xmm4
  00037	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __xmm@80000000800000008000000080000000
  0003f	0f 28 d4	 movaps	 xmm2, xmm4
  00042	76 03		 jbe	 SHORT $LN6@Atan

; 204  : 		c += 1;
; 205  : 		v = -x;

  00044	0f 57 d0	 xorps	 xmm2, xmm0
$LN6@Atan:

; 206  : 	} else {
; 207  : 		v = x;
; 208  : 	}
; 209  : 
; 210  : 	if ( y < 0 ) {

  00047	33 c9		 xor	 ecx, ecx
  00049	0f 2f ec	 comiss	 xmm5, xmm4
  0004c	0f 97 c1	 seta	 cl
  0004f	0f 2f eb	 comiss	 xmm5, xmm3
  00052	76 06		 jbe	 SHORT $LN7@Atan

; 211  : 		c += 2;

  00054	83 c1 02	 add	 ecx, 2

; 212  : 		w = -y;

  00057	0f 57 d8	 xorps	 xmm3, xmm0
$LN7@Atan:

; 213  : 	} else {
; 214  : 		w = y;
; 215  : 	}
; 216  : 
; 217  : 	if ( v < w ) {

  0005a	0f 2f da	 comiss	 xmm3, xmm2
  0005d	76 15		 jbe	 SHORT $LN9@Atan

; 218  : 		c += 4;
; 219  : 		index1 = ( int )( v / w * ATAN_DIV );

  0005f	f3 0f 5e d3	 divss	 xmm2, xmm3
  00063	83 c1 04	 add	 ecx, 4
  00066	f3 0f 59 15 00
	00 00 00	 mulss	 xmm2, DWORD PTR __real@42800000
  0006e	f3 0f 2c d2	 cvttss2si edx, xmm2

; 220  : 		index2 = index1 + 1;
; 221  : 		ratio = ( v / w * ATAN_DIV ) - ( float ) index1;
; 222  : 	} else {

  00072	eb 13		 jmp	 SHORT $LN23@Atan
$LN9@Atan:

; 223  : 		index1 =  ( int )( w / v * ATAN_DIV );

  00074	f3 0f 5e da	 divss	 xmm3, xmm2
  00078	f3 0f 59 1d 00
	00 00 00	 mulss	 xmm3, DWORD PTR __real@42800000
  00080	0f 28 d3	 movaps	 xmm2, xmm3
  00083	f3 0f 2c d3	 cvttss2si edx, xmm3
$LN23@Atan:

; 224  : 		index2 = index1 + 1;
; 225  : 		ratio = ( w / v * ATAN_DIV ) - ( float ) index1;
; 226  : 	}
; 227  : 
; 228  : 	if ( index2 > ATAN_DIV ) index2 = ATAN_DIV;

  00087	f2 0f 10 1c d5
	00 00 00 00	 movsd	 xmm3, QWORD PTR ?atan_table@@3PANA[edx*8]
  00090	8d 42 01	 lea	 eax, DWORD PTR [edx+1]
  00093	66 0f 6e c2	 movd	 xmm0, edx
  00097	0f 5b c0	 cvtdq2ps xmm0, xmm0
  0009a	56		 push	 esi
  0009b	be 40 00 00 00	 mov	 esi, 64			; 00000040H
  000a0	3b c6		 cmp	 eax, esi

; 229  : 	a1 = ( float )atan_table[ index1 ];

  000a2	66 0f 5a db	 cvtpd2ps xmm3, xmm3
  000a6	0f 4f c6	 cmovg	 eax, esi

; 230  : 	a2 = ( float )atan_table[ index2 ];
; 231  : 	a = ( 1 - ratio ) * a1 + ratio * a2;

  000a9	5e		 pop	 esi
  000aa	f3 0f 5c d0	 subss	 xmm2, xmm0
  000ae	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  000b6	f3 0f 5c c2	 subss	 xmm0, xmm2
  000ba	f3 0f 59 d8	 mulss	 xmm3, xmm0
  000be	f2 0f 10 04 c5
	00 00 00 00	 movsd	 xmm0, QWORD PTR ?atan_table@@3PANA[eax*8]
  000c7	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000cb	f3 0f 59 c2	 mulss	 xmm0, xmm2
  000cf	f3 0f 58 d8	 addss	 xmm3, xmm0

; 232  : 
; 233  : 	switch (c) {

  000d3	83 f9 07	 cmp	 ecx, 7
  000d6	77 5d		 ja	 SHORT $LN2@Atan
  000d8	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN22@Atan[ecx*4]
$LN12@Atan:

; 234  : 	  case 0:
; 235  : 		r = a;

  000df	0f 28 cb	 movaps	 xmm1, xmm3

; 236  : 		break;

  000e2	eb 51		 jmp	 SHORT $LN2@Atan
$LN13@Atan:

; 237  : 	  case 1:
; 238  : 		r = 180.0f - a;

  000e4	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43340000

; 239  : 		break;

  000ec	eb 43		 jmp	 SHORT $LN24@Atan
$LN14@Atan:

; 240  : 	  case 2:
; 241  : 		r = 360.0f - a;

  000ee	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43b40000

; 242  : 		break;

  000f6	eb 39		 jmp	 SHORT $LN24@Atan
$LN15@Atan:

; 243  : 	  case 3:
; 244  : 		r = 180.0f + a;

  000f8	0f 28 cb	 movaps	 xmm1, xmm3
  000fb	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@43340000

; 245  : 		break;

  00103	eb 30		 jmp	 SHORT $LN2@Atan
$LN16@Atan:

; 246  : 	  case 4:
; 247  : 		r = 90.0f - a;

  00105	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@42b40000

; 248  : 		break;

  0010d	eb 22		 jmp	 SHORT $LN24@Atan
$LN17@Atan:

; 249  : 	  case 5:
; 250  : 		r = 90.0f + a;

  0010f	0f 28 cb	 movaps	 xmm1, xmm3
  00112	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@42b40000

; 251  : 		break;

  0011a	eb 19		 jmp	 SHORT $LN2@Atan
$LN18@Atan:

; 252  : 	  case 6:
; 253  : 		r = 270.0f + a;

  0011c	0f 28 cb	 movaps	 xmm1, xmm3
  0011f	f3 0f 58 0d 00
	00 00 00	 addss	 xmm1, DWORD PTR __real@43870000

; 254  : 		break;

  00127	eb 0c		 jmp	 SHORT $LN2@Atan
$LN19@Atan:

; 255  : 	  case 7:
; 256  : 		r = 270.0f - a;

  00129	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43870000
$LN24@Atan:

; 257  : 		break;
; 258  : 	}
; 259  : 
; 260  : 	// StoneAge?
; 261  : 	r -= 135;

  00131	f3 0f 5c cb	 subss	 xmm1, xmm3
$LN2@Atan:
  00135	f3 0f 5c 0d 00
	00 00 00	 subss	 xmm1, DWORD PTR __real@43070000

; 262  : 	if (r < 0.0) r += 360.0;

  0013d	0f 2f e9	 comiss	 xmm5, xmm1
  00140	f3 0f 11 4d 08	 movss	 DWORD PTR _r$[ebp], xmm1
  00145	76 14		 jbe	 SHORT $LN20@Atan
  00147	0f 5a c1	 cvtps2pd xmm0, xmm1
  0014a	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@4076800000000000
  00152	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00156	f3 0f 11 45 08	 movss	 DWORD PTR _r$[ebp], xmm0
$LN20@Atan:

; 263  : 	/////////////
; 264  : 
; 265  : 	return r;

  0015b	d9 45 08	 fld	 DWORD PTR _r$[ebp]

; 266  : }

  0015e	5d		 pop	 ebp
  0015f	c3		 ret	 0
$LN22@Atan:
  00160	00 00 00 00	 DD	 $LN12@Atan
  00164	00 00 00 00	 DD	 $LN13@Atan
  00168	00 00 00 00	 DD	 $LN14@Atan
  0016c	00 00 00 00	 DD	 $LN15@Atan
  00170	00 00 00 00	 DD	 $LN16@Atan
  00174	00 00 00 00	 DD	 $LN17@Atan
  00178	00 00 00 00	 DD	 $LN18@Atan
  0017c	00 00 00 00	 DD	 $LN19@Atan
?Atan@@YAMMM@Z ENDP					; Atan
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?CosT@@YAMM@Z
_TEXT	SEGMENT
_theat$ = 8						; size = 4
?CosT@@YAMM@Z PROC					; CosT, COMDAT

; 179  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 180  : 	float ans;
; 181  : 	
; 182  : 	ans = SinT( theat + 90.0f );

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _theat$[ebp]
  00008	f3 0f 58 05 00
	00 00 00	 addss	 xmm0, DWORD PTR __real@42b40000
  00010	51		 push	 ecx
  00011	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00016	e8 00 00 00 00	 call	 ?SinT@@YAMM@Z		; SinT
  0001b	83 c4 04	 add	 esp, 4

; 183  : 	
; 184  : 	return ans;
; 185  : }

  0001e	5d		 pop	 ebp
  0001f	c3		 ret	 0
?CosT@@YAMM@Z ENDP					; CosT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?SinT@@YAMM@Z
_TEXT	SEGMENT
tv131 = 8						; size = 4
_theat$ = 8						; size = 4
?SinT@@YAMM@Z PROC					; SinT, COMDAT

; 166  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 167  : 	float ans;
; 168  : 	
; 169  : 	/* ?îî±î */
; 170  : 	AdjustDir( &theat );

  00003	8d 45 08	 lea	 eax, DWORD PTR _theat$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?AdjustDir@@YAXPAM@Z	; AdjustDir

; 171  : 	/* ??????î???? */
; 172  : 	ans = ( float )SinTbl[ (int)theat ];

  0000c	f3 0f 2c 45 08	 cvttss2si eax, DWORD PTR _theat$[ebp]
  00011	83 c4 04	 add	 esp, 4
  00014	dd 04 c5 00 00
	00 00		 fld	 QWORD PTR ?SinTbl@@3PANA[eax*8]
  0001b	d9 5d 08	 fstp	 DWORD PTR tv131[ebp]
  0001e	d9 45 08	 fld	 DWORD PTR tv131[ebp]

; 173  : 	
; 174  : 	return ans;
; 175  : }

  00021	5d		 pop	 ebp
  00022	c3		 ret	 0
?SinT@@YAMM@Z ENDP					; SinT
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?AdjustDir@@YAXPAH@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?AdjustDir@@YAXPAH@Z PROC				; AdjustDir, COMDAT

; 153  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 08	 mov	 ecx, DWORD PTR _dir$[ebp]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
$LL6@AdjustDir:

; 154  : 	if( *dir >= 360 ){

  00008	3d 68 01 00 00	 cmp	 eax, 360		; 00000168H
  0000d	7c 09		 jl	 SHORT $LN2@AdjustDir

; 155  : 		*dir -= 360;

  0000f	05 98 fe ff ff	 add	 eax, -360		; fffffe98H
  00014	89 01		 mov	 DWORD PTR [ecx], eax

; 156  : 		AdjustDir(dir);

  00016	eb f0		 jmp	 SHORT $LL6@AdjustDir
$LN2@AdjustDir:

; 157  : 	}else 
; 158  : 	if ( *dir < 0 ){

  00018	85 c0		 test	 eax, eax
  0001a	79 09		 jns	 SHORT $LN4@AdjustDir

; 159  : 		*dir += 360;

  0001c	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00021	89 01		 mov	 DWORD PTR [ecx], eax

; 160  : 		AdjustDir(dir);

  00023	eb e3		 jmp	 SHORT $LL6@AdjustDir
$LN4@AdjustDir:

; 161  : 	}
; 162  : }

  00025	5d		 pop	 ebp
  00026	c3		 ret	 0
?AdjustDir@@YAXPAH@Z ENDP				; AdjustDir
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\math2.cpp
;	COMDAT ?AdjustDir@@YAXPAM@Z
_TEXT	SEGMENT
_dir$ = 8						; size = 4
?AdjustDir@@YAXPAM@Z PROC				; AdjustDir, COMDAT

; 141  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR _dir$[ebp]
  00006	0f 57 d2	 xorps	 xmm2, xmm2
  00009	f3 0f 10 0d 00
	00 00 00	 movss	 xmm1, DWORD PTR __real@43b40000
  00011	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
$LL6@AdjustDir:

; 142  : 	if( *dir >= 360.0 ){

  00015	0f 2f c1	 comiss	 xmm0, xmm1
  00018	72 0a		 jb	 SHORT $LN2@AdjustDir

; 143  : 		*dir -= 360.0F;

  0001a	f3 0f 5c c1	 subss	 xmm0, xmm1
  0001e	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 144  : 		AdjustDir(dir);

  00022	eb f1		 jmp	 SHORT $LL6@AdjustDir
$LN2@AdjustDir:

; 145  : 	}else 
; 146  : 	if ( *dir < 0.0 ){

  00024	0f 2f d0	 comiss	 xmm2, xmm0
  00027	76 0a		 jbe	 SHORT $LN4@AdjustDir

; 147  : 		*dir += 360.0F;

  00029	f3 0f 58 c1	 addss	 xmm0, xmm1
  0002d	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 148  : 		AdjustDir(dir);

  00031	eb e2		 jmp	 SHORT $LL6@AdjustDir
$LN4@AdjustDir:

; 149  : 	}
; 150  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?AdjustDir@@YAXPAM@Z ENDP				; AdjustDir
_TEXT	ENDS
END
