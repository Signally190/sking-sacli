; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?LUA_WINDOW_OPEN@@3_NA				; LUA_WINDOW_OPEN
PUBLIC	??_C@_0L@FGLDLGNA@InitWindow@			; `string'
PUBLIC	??_C@_0BC@DHJEOION@getMouseLeftCrick@		; `string'
PUBLIC	??_C@_0L@PBHIBJIH@getIndexWN@			; `string'
PUBLIC	??_C@_07OPGAKFHD@getIdWN@			; `string'
PUBLIC	??_C@_0M@JAOKBFKC@CloseWindow@			; `string'
PUBLIC	??_C@_09GCKOACLD@DelWindow@			; `string'
PUBLIC	??_C@_08NDJBCPM@CloseFlg@			; `string'
PUBLIC	??_C@_0BA@MKMIAAOI@getButtonTypeWN@		; `string'
PUBLIC	??_C@_0N@KMPBGEFK@getHitFontNo@			; `string'
PUBLIC	??_C@_0N@PKCFFCAK@getHitDispNo@			; `string'
PUBLIC	??_C@_0O@MPGNGFP@InitStrBuffer@			; `string'
PUBLIC	??_C@_0BB@DGGHMCDG@InitNewStrBuffer@		; `string'
PUBLIC	??_C@_0BB@PDIFIMKJ@GetKeyInputFocus@		; `string'
PUBLIC	??_C@_0P@NDKBLEHK@getMessageData@		; `string'
PUBLIC	??_C@_0BB@POCDHCJM@StockFontBuffer2@		; `string'
PUBLIC	??_C@_0M@HAANOHN@GetInputMsg@			; `string'
PUBLIC	??_C@_0P@HECOHJOG@SetInputMsgNum@		; `string'
PUBLIC	??_C@_08HOMKCKLH@NewPrint@			; `string'
PUBLIC	??_C@_0BF@MEGLFBID@ShowBottomLineString@	; `string'
PUBLIC	??_C@_04IOGGDNCH@atoi@				; `string'
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	?joy_trg@@3PAKA:QWORD				; joy_trg
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitFontNo@@3HA:DWORD				; HitFontNo
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?disconnectServerFlag@@3HA:DWORD		; disconnectServerFlag
EXTRN	?cloasewindows@@3HA:DWORD			; cloasewindows
EXTRN	?windows@@3USA_WINDOWS@@A:BYTE			; windows
EXTRN	?windowTypeWN@@3HA:DWORD			; windowTypeWN
EXTRN	?wnCloseFlag@@3FA:WORD				; wnCloseFlag
EXTRN	?indexWN@@3HA:DWORD				; indexWN
EXTRN	?idWN@@3HA:DWORD				; idWN
EXTRN	?buttonTypeWN@@3HA:DWORD			; buttonTypeWN
EXTRN	?actBtn@@3FA:WORD				; actBtn
EXTRN	?menuBtn@@3FA:WORD				; menuBtn
_BSS	SEGMENT
?LUA_WINDOW_OPEN@@3_NA DB 01H DUP (?)			; LUA_WINDOW_OPEN
_BSS	ENDS
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT ??_C@_04IOGGDNCH@atoi@
CONST	SEGMENT
??_C@_04IOGGDNCH@atoi@ DB 'atoi', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MEGLFBID@ShowBottomLineString@
CONST	SEGMENT
??_C@_0BF@MEGLFBID@ShowBottomLineString@ DB 'ShowBottomLineString', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HOMKCKLH@NewPrint@
CONST	SEGMENT
??_C@_08HOMKCKLH@NewPrint@ DB 'NewPrint', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HECOHJOG@SetInputMsgNum@
CONST	SEGMENT
??_C@_0P@HECOHJOG@SetInputMsgNum@ DB 'SetInputMsgNum', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HAANOHN@GetInputMsg@
CONST	SEGMENT
??_C@_0M@HAANOHN@GetInputMsg@ DB 'GetInputMsg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POCDHCJM@StockFontBuffer2@
CONST	SEGMENT
??_C@_0BB@POCDHCJM@StockFontBuffer2@ DB 'StockFontBuffer2', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NDKBLEHK@getMessageData@
CONST	SEGMENT
??_C@_0P@NDKBLEHK@getMessageData@ DB 'getMessageData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PDIFIMKJ@GetKeyInputFocus@
CONST	SEGMENT
??_C@_0BB@PDIFIMKJ@GetKeyInputFocus@ DB 'GetKeyInputFocus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DGGHMCDG@InitNewStrBuffer@
CONST	SEGMENT
??_C@_0BB@DGGHMCDG@InitNewStrBuffer@ DB 'InitNewStrBuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MPGNGFP@InitStrBuffer@
CONST	SEGMENT
??_C@_0O@MPGNGFP@InitStrBuffer@ DB 'InitStrBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PKCFFCAK@getHitDispNo@
CONST	SEGMENT
??_C@_0N@PKCFFCAK@getHitDispNo@ DB 'getHitDispNo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KMPBGEFK@getHitFontNo@
CONST	SEGMENT
??_C@_0N@KMPBGEFK@getHitFontNo@ DB 'getHitFontNo', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MKMIAAOI@getButtonTypeWN@
CONST	SEGMENT
??_C@_0BA@MKMIAAOI@getButtonTypeWN@ DB 'getButtonTypeWN', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NDJBCPM@CloseFlg@
CONST	SEGMENT
??_C@_08NDJBCPM@CloseFlg@ DB 'CloseFlg', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GCKOACLD@DelWindow@
CONST	SEGMENT
??_C@_09GCKOACLD@DelWindow@ DB 'DelWindow', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAOKBFKC@CloseWindow@
CONST	SEGMENT
??_C@_0M@JAOKBFKC@CloseWindow@ DB 'CloseWindow', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07OPGAKFHD@getIdWN@
CONST	SEGMENT
??_C@_07OPGAKFHD@getIdWN@ DB 'getIdWN', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PBHIBJIH@getIndexWN@
CONST	SEGMENT
??_C@_0L@PBHIBJIH@getIndexWN@ DB 'getIndexWN', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DHJEOION@getMouseLeftCrick@
CONST	SEGMENT
??_C@_0BC@DHJEOION@getMouseLeftCrick@ DB 'getMouseLeftCrick', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FGLDLGNA@InitWindow@
CONST	SEGMENT
??_C@_0L@FGLDLGNA@InitWindow@ DB 'InitWindow', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
?winlib@@3QBUluaL_Reg@@B DD FLAT:??_C@_0L@FGLDLGNA@InitWindow@ ; winlib
	DD	FLAT:?InitWindow@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BC@DHJEOION@getMouseLeftCrick@
	DD	FLAT:?getMouseLeftCrick@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0L@PBHIBJIH@getIndexWN@
	DD	FLAT:?getIndexWN@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_07OPGAKFHD@getIdWN@
	DD	FLAT:?getIdWN@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0M@JAOKBFKC@CloseWindow@
	DD	FLAT:?CloseWindow@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_09GCKOACLD@DelWindow@
	DD	FLAT:?DelWindow@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_08NDJBCPM@CloseFlg@
	DD	FLAT:?CloseFlg@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BA@MKMIAAOI@getButtonTypeWN@
	DD	FLAT:?getButtonTypeWN@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0N@KMPBGEFK@getHitFontNo@
	DD	FLAT:?getHitFontNo@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0N@PKCFFCAK@getHitDispNo@
	DD	FLAT:?getHitDispNo@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0O@MPGNGFP@InitStrBuffer@
	DD	FLAT:?SaInitStrBuffer@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BB@DGGHMCDG@InitNewStrBuffer@
	DD	FLAT:?SaInitNewStrBuffer@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BB@PDIFIMKJ@GetKeyInputFocus@
	DD	FLAT:?SaWinGetKeyInputFocus@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0P@NDKBLEHK@getMessageData@
	DD	FLAT:?getMessageData@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BB@POCDHCJM@StockFontBuffer2@
	DD	FLAT:?SaStockFontBuffer2@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0M@HAANOHN@GetInputMsg@
	DD	FLAT:?SaGetInputMsg@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0P@HECOHJOG@SetInputMsgNum@
	DD	FLAT:?SaSetInputMsgNum@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_08HOMKCKLH@NewPrint@
	DD	FLAT:?NewPrint@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0BF@MEGLFBID@ShowBottomLineString@
	DD	FLAT:?SaShowBottomLineString@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_04IOGGDNCH@atoi@
	DD	FLAT:?SaAtoi@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_printf
PUBLIC	?luaopen_Win@@YAHPAUlua_State@@@Z		; luaopen_Win
PUBLIC	??_C@_03JECLAOEA@win@				; `string'
EXTRN	_atoi:PROC
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
EXTRN	?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z:PROC	; GetKeyInputFocus
EXTRN	?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z:PROC	; StockFontBuffer2
EXTRN	_lua_pushinteger:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_luaL_register:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	?makeStringFromEscaped@@YAPADPAD@Z:PROC		; makeStringFromEscaped
EXTRN	?CheckMenuFlag@@YAHXZ:PROC			; CheckMenuFlag
EXTRN	?GetImeString@@YAPADXZ:PROC			; GetImeString
EXTRN	?getStrSplit@@YAXPAD0HHH@Z:PROC			; getStrSplit
EXTRN	?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z:PROC	; initStrBuffer
EXTRN	?ShowBottomLineString@@YAXHPAD@Z:PROC		; ShowBottomLineString
;	COMDAT ??_C@_03JECLAOEA@win@
CONST	SEGMENT
??_C@_03JECLAOEA@win@ DB 'win', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaAtoi@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -4						; size = 4
_L$ = 8							; size = 4
?SaAtoi@@YAHPAUlua_State@@@Z PROC			; SaAtoi, COMDAT

; 221  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 222  : 	size_t l;
; 223  : 	const char *data = luaL_checklstring(L, 1, &l);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _l$[ebp]
  00007	50		 push	 eax
  00008	6a 01		 push	 1
  0000a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000d	e8 00 00 00 00	 call	 _luaL_checklstring

; 224  : 	lua_pushinteger(L,  atoi(data));

  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _atoi
  00018	50		 push	 eax
  00019	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001c	e8 00 00 00 00	 call	 _lua_pushinteger
  00021	83 c4 18	 add	 esp, 24			; 00000018H

; 225  : 	return 1;

  00024	b8 01 00 00 00	 mov	 eax, 1

; 226  : }

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
?SaAtoi@@YAHPAUlua_State@@@Z ENDP			; SaAtoi
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaShowBottomLineString@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -4						; size = 4
_L$ = 8							; size = 4
?SaShowBottomLineString@@YAHPAUlua_State@@@Z PROC	; SaShowBottomLineString, COMDAT

; 211  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	57		 push	 edi

; 212  : 	size_t l;
; 213  : 	const int color = luaL_checkint(L, 1);

  00005	6a 01		 push	 1
  00007	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000a	e8 00 00 00 00	 call	 _luaL_checkinteger
  0000f	8b f8		 mov	 edi, eax

; 214  : 	const char *data = luaL_checklstring(L, 2, &l);

  00011	8d 45 fc	 lea	 eax, DWORD PTR _l$[ebp]
  00014	50		 push	 eax
  00015	6a 02		 push	 2
  00017	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0001a	e8 00 00 00 00	 call	 _luaL_checklstring

; 215  : 	ShowBottomLineString(color,(char *)data);

  0001f	50		 push	 eax
  00020	57		 push	 edi
  00021	e8 00 00 00 00	 call	 ?ShowBottomLineString@@YAXHPAD@Z ; ShowBottomLineString
  00026	83 c4 1c	 add	 esp, 28			; 0000001cH

; 216  : 	return 1;

  00029	b8 01 00 00 00	 mov	 eax, 1
  0002e	5f		 pop	 edi

; 217  : }

  0002f	8b e5		 mov	 esp, ebp
  00031	5d		 pop	 ebp
  00032	c3		 ret	 0
?SaShowBottomLineString@@YAHPAUlua_State@@@Z ENDP	; SaShowBottomLineString
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaGetInputMsg@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?SaGetInputMsg@@YAHPAUlua_State@@@Z PROC		; SaGetInputMsg, COMDAT

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 206  : 	lua_pushstring(L,  windows.input.buffer);

  00003	68 04 00 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+4
  00008	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000b	e8 00 00 00 00	 call	 _lua_pushstring
  00010	83 c4 08	 add	 esp, 8

; 207  : 	return 1;

  00013	b8 01 00 00 00	 mov	 eax, 1

; 208  : }

  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?SaGetInputMsg@@YAHPAUlua_State@@@Z ENDP		; SaGetInputMsg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaSetInputMsgNum@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?SaSetInputMsgNum@@YAHPAUlua_State@@@Z PROC		; SaSetInputMsgNum, COMDAT

; 189  : 	for(int i = 0; i < windows.input.cnt;i++)

  00000	8a 15 0b 01 00
	00		 mov	 dl, BYTE PTR ?windows@@3USA_WINDOWS@@A+267
  00006	33 c0		 xor	 eax, eax
  00008	84 d2		 test	 dl, dl
  0000a	74 30		 je	 SHORT $LN14@SaSetInput
  0000c	0f 1f 40 00	 npad	 4
$LL4@SaSetInput:

; 190  : 	{
; 191  : 		if (windows.input.buffer[i] < '0' || windows.input.buffer[i] > '9')

  00010	8a 88 04 00 00
	00		 mov	 cl, BYTE PTR ?windows@@3USA_WINDOWS@@A[eax+4]
  00016	80 f9 30	 cmp	 cl, 48			; 00000030H
  00019	7c 05		 jl	 SHORT $LN6@SaSetInput
  0001b	80 f9 39	 cmp	 cl, 57			; 00000039H
  0001e	7e 14		 jle	 SHORT $LN2@SaSetInput
$LN6@SaSetInput:

; 192  : 		{
; 193  : 			if(i == 0){

  00020	85 c0		 test	 eax, eax
  00022	0f 94 c1	 sete	 cl
  00025	80 c1 30	 add	 cl, 48			; 00000030H
  00028	88 88 04 00 00
	00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A[eax+4], cl
  0002e	8a 15 0b 01 00
	00		 mov	 dl, BYTE PTR ?windows@@3USA_WINDOWS@@A+267
$LN2@SaSetInput:

; 189  : 	for(int i = 0; i < windows.input.cnt;i++)

  00034	40		 inc	 eax
  00035	0f b6 ca	 movzx	 ecx, dl
  00038	3b c1		 cmp	 eax, ecx
  0003a	7c d4		 jl	 SHORT $LL4@SaSetInput
$LN14@SaSetInput:

; 194  : 				windows.input.buffer[i] = '1';
; 195  : 			}else{
; 196  : 				windows.input.buffer[i] = '0';
; 197  : 			}
; 198  : 		}
; 199  : 	}
; 200  : 	return 1;
; 201  : }

  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	c3		 ret	 0
?SaSetInputMsgNum@@YAHPAUlua_State@@@Z ENDP		; SaSetInputMsgNum
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaStockFontBuffer2@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?SaStockFontBuffer2@@YAHPAUlua_State@@@Z PROC		; SaStockFontBuffer2, COMDAT

; 184  : 	StockFontBuffer2(&windows.input);

  00000	68 04 00 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+4
  00005	e8 00 00 00 00	 call	 ?StockFontBuffer2@@YAXPAUSTR_BUFFER@@@Z ; StockFontBuffer2
  0000a	83 c4 04	 add	 esp, 4

; 185  : 	return 1;

  0000d	b8 01 00 00 00	 mov	 eax, 1

; 186  : }

  00012	c3		 ret	 0
?SaStockFontBuffer2@@YAHPAUlua_State@@@Z ENDP		; SaStockFontBuffer2
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaWinGetKeyInputFocus@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?SaWinGetKeyInputFocus@@YAHPAUlua_State@@@Z PROC	; SaWinGetKeyInputFocus, COMDAT

; 178  : 	GetKeyInputFocus( &windows.input );

  00000	68 04 00 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+4
  00005	e8 00 00 00 00	 call	 ?GetKeyInputFocus@@YAXPAUSTR_BUFFER@@@Z ; GetKeyInputFocus
  0000a	83 c4 04	 add	 esp, 4

; 179  : 	return 1;

  0000d	b8 01 00 00 00	 mov	 eax, 1

; 180  : }

  00012	c3		 ret	 0
?SaWinGetKeyInputFocus@@YAHPAUlua_State@@@Z ENDP	; SaWinGetKeyInputFocus
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaInitNewStrBuffer@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -16						; size = 4
_len$1$ = -12						; size = 4
_color$1$ = -8						; size = 4
_prio$1$ = -4						; size = 4
_L$ = 8							; size = 4
?SaInitNewStrBuffer@@YAHPAUlua_State@@@Z PROC		; SaInitNewStrBuffer, COMDAT

; 151  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 152  : 	size_t l;
; 153  : 	const int x = luaL_checkint(L, 1);

  00008	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	56		 push	 esi
  0000f	e8 00 00 00 00	 call	 _luaL_checkinteger

; 154  : 	const int y = luaL_checkint(L, 2);

  00014	6a 02		 push	 2
  00016	56		 push	 esi
  00017	8b f8		 mov	 edi, eax
  00019	e8 00 00 00 00	 call	 _luaL_checkinteger

; 155  : 	const int len = luaL_checkint(L, 3);

  0001e	6a 03		 push	 3
  00020	56		 push	 esi
  00021	8b d8		 mov	 ebx, eax
  00023	e8 00 00 00 00	 call	 _luaL_checkinteger

; 156  : 	const int color = luaL_checkint(L, 4);

  00028	6a 04		 push	 4
  0002a	56		 push	 esi
  0002b	89 45 f4	 mov	 DWORD PTR _len$1$[ebp], eax
  0002e	e8 00 00 00 00	 call	 _luaL_checkinteger

; 157  : 	const int prio = luaL_checkint(L, 5);

  00033	6a 05		 push	 5
  00035	56		 push	 esi
  00036	89 45 f8	 mov	 DWORD PTR _color$1$[ebp], eax
  00039	e8 00 00 00 00	 call	 _luaL_checkinteger
  0003e	89 45 fc	 mov	 DWORD PTR _prio$1$[ebp], eax

; 158  : 	const char *str = luaL_checklstring(L, 6, &l);

  00041	8d 45 f0	 lea	 eax, DWORD PTR _l$[ebp]
  00044	50		 push	 eax
  00045	6a 06		 push	 6
  00047	56		 push	 esi
  00048	e8 00 00 00 00	 call	 _luaL_checklstring

; 159  : 	//åå§åè¾å¥ä¿¡æ¯
; 160  : 	int slen = strlen((char *)str);

  0004d	8b d0		 mov	 edx, eax
  0004f	83 c4 34	 add	 esp, 52			; 00000034H
  00052	8d 72 01	 lea	 esi, DWORD PTR [edx+1]
$LL9@SaInitNewS:
  00055	8a 0a		 mov	 cl, BYTE PTR [edx]
  00057	42		 inc	 edx
  00058	84 c9		 test	 cl, cl
  0005a	75 f9		 jne	 SHORT $LL9@SaInitNewS
  0005c	2b d6		 sub	 edx, esi

; 161  : 	if(slen > 0){

  0005e	85 d2		 test	 edx, edx
  00060	7e 29		 jle	 SHORT $LN2@SaInitNewS

; 162  : 		strcpy(windows.input.buffer, str);

  00062	be 04 00 00 00	 mov	 esi, OFFSET ?windows@@3USA_WINDOWS@@A+4
  00067	2b f0		 sub	 esi, eax
  00069	0f 1f 80 00 00
	00 00		 npad	 7
$LL5@SaInitNewS:
  00070	8a 08		 mov	 cl, BYTE PTR [eax]
  00072	8d 40 01	 lea	 eax, DWORD PTR [eax+1]
  00075	88 4c 06 ff	 mov	 BYTE PTR [esi+eax-1], cl
  00079	84 c9		 test	 cl, cl
  0007b	75 f3		 jne	 SHORT $LL5@SaInitNewS

; 163  : 		windows.input.cnt = slen;

  0007d	88 15 0b 01 00
	00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+267, dl

; 164  : 		windows.input.cursor=slen;

  00083	88 15 0d 01 00
	00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+269, dl

; 165  : 	}else{

  00089	eb 15		 jmp	 SHORT $LN3@SaInitNewS
$LN2@SaInitNewS:

; 166  : 		windows.input.buffer[0] = '\0';

  0008b	c6 05 04 00 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+4, 0

; 167  : 		windows.input.cnt = 0;

  00092	c6 05 0b 01 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+267, 0

; 168  : 		windows.input.cursor=0;

  00099	c6 05 0d 01 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+269, 0
$LN3@SaInitNewS:

; 169  : 		
; 170  : 	}	
; 171  : 	initStrBuffer( &windows.input, x, y, len, color, prio );

  000a0	ff 75 fc	 push	 DWORD PTR _prio$1$[ebp]
  000a3	ff 75 f8	 push	 DWORD PTR _color$1$[ebp]
  000a6	ff 75 f4	 push	 DWORD PTR _len$1$[ebp]
  000a9	53		 push	 ebx
  000aa	57		 push	 edi
  000ab	68 04 00 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+4
  000b0	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer
  000b5	83 c4 18	 add	 esp, 24			; 00000018H

; 172  : 	
; 173  : 	return 1;

  000b8	b8 01 00 00 00	 mov	 eax, 1
  000bd	5f		 pop	 edi
  000be	5e		 pop	 esi
  000bf	5b		 pop	 ebx

; 174  : }

  000c0	8b e5		 mov	 esp, ebp
  000c2	5d		 pop	 ebp
  000c3	c3		 ret	 0
?SaInitNewStrBuffer@@YAHPAUlua_State@@@Z ENDP		; SaInitNewStrBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?SaInitStrBuffer@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_x$1$ = -8						; size = 4
_y$1$ = -4						; size = 4
_L$ = 8							; size = 4
?SaInitStrBuffer@@YAHPAUlua_State@@@Z PROC		; SaInitStrBuffer, COMDAT

; 136  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	53		 push	 ebx

; 137  : 	const int x = luaL_checkint(L, 1);

  00007	8b 5d 08	 mov	 ebx, DWORD PTR _L$[ebp]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	6a 01		 push	 1
  0000e	53		 push	 ebx
  0000f	e8 00 00 00 00	 call	 _luaL_checkinteger

; 138  : 	const int y = luaL_checkint(L, 2);

  00014	6a 02		 push	 2
  00016	53		 push	 ebx
  00017	89 45 f8	 mov	 DWORD PTR _x$1$[ebp], eax
  0001a	e8 00 00 00 00	 call	 _luaL_checkinteger

; 139  : 	const int len = luaL_checkint(L, 3);

  0001f	6a 03		 push	 3
  00021	53		 push	 ebx
  00022	89 45 fc	 mov	 DWORD PTR _y$1$[ebp], eax
  00025	e8 00 00 00 00	 call	 _luaL_checkinteger

; 140  : 	const int color = luaL_checkint(L, 4);

  0002a	6a 04		 push	 4
  0002c	53		 push	 ebx
  0002d	8b f8		 mov	 edi, eax
  0002f	e8 00 00 00 00	 call	 _luaL_checkinteger

; 141  : 	const int prio = luaL_checkint(L, 5);

  00034	6a 05		 push	 5
  00036	53		 push	 ebx
  00037	8b f0		 mov	 esi, eax
  00039	e8 00 00 00 00	 call	 _luaL_checkinteger

; 142  : 	//åå§åè¾å¥ä¿¡æ¯
; 143  : 	windows.input.buffer[0] = '\0';
; 144  : 	windows.input.cnt = 0;
; 145  : 	windows.input.cursor=0;
; 146  : 	initStrBuffer( &windows.input, x, y, len, color, prio );

  0003e	50		 push	 eax
  0003f	56		 push	 esi
  00040	57		 push	 edi
  00041	ff 75 fc	 push	 DWORD PTR _y$1$[ebp]
  00044	c6 05 04 00 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+4, 0
  0004b	ff 75 f8	 push	 DWORD PTR _x$1$[ebp]
  0004e	c6 05 0b 01 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+267, 0
  00055	68 04 00 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+4
  0005a	c6 05 0d 01 00
	00 00		 mov	 BYTE PTR ?windows@@3USA_WINDOWS@@A+269, 0
  00061	e8 00 00 00 00	 call	 ?initStrBuffer@@YAXPAUSTR_BUFFER@@HHHHH@Z ; initStrBuffer
  00066	83 c4 40	 add	 esp, 64			; 00000040H

; 147  : 	return 1;

  00069	b8 01 00 00 00	 mov	 eax, 1
  0006e	5f		 pop	 edi
  0006f	5e		 pop	 esi
  00070	5b		 pop	 ebx

; 148  : }

  00071	8b e5		 mov	 esp, ebp
  00073	5d		 pop	 ebp
  00074	c3		 ret	 0
?SaInitStrBuffer@@YAHPAUlua_State@@@Z ENDP		; SaInitStrBuffer
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?DelWindow@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?DelWindow@@YAHPAUlua_State@@@Z PROC			; DelWindow, COMDAT

; 114  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 115  : 	if( CheckMenuFlag()
; 116  : 		|| ((joy_trg[ 0 ] & JOY_ESC) && GetImeString() == NULL)
; 117  : 		|| actBtn == 1
; 118  : 		|| menuBtn == 1
; 119  : 		|| disconnectServerFlag == TRUE
; 120  : 		|| wnCloseFlag == 1 
; 121  : 		|| cloasewindows == 1)

  00003	e8 00 00 00 00	 call	 ?CheckMenuFlag@@YAHXZ	; CheckMenuFlag
  00008	85 c0		 test	 eax, eax
  0000a	75 5a		 jne	 SHORT $LN4@DelWindow
  0000c	f7 05 00 00 00
	00 00 00 00 80	 test	 DWORD PTR ?joy_trg@@3PAKA, -2147483648 ; 80000000H
  00016	74 09		 je	 SHORT $LN5@DelWindow
  00018	e8 00 00 00 00	 call	 ?GetImeString@@YAPADXZ	; GetImeString
  0001d	85 c0		 test	 eax, eax
  0001f	74 45		 je	 SHORT $LN4@DelWindow
$LN5@DelWindow:
  00021	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?actBtn@@3FA, 1 ; actBtn
  00029	74 3b		 je	 SHORT $LN4@DelWindow
  0002b	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?menuBtn@@3FA, 1 ; menuBtn
  00033	74 31		 je	 SHORT $LN4@DelWindow
  00035	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?disconnectServerFlag@@3HA, 1 ; disconnectServerFlag
  0003c	74 28		 je	 SHORT $LN4@DelWindow
  0003e	66 83 3d 00 00
	00 00 01	 cmp	 WORD PTR ?wnCloseFlag@@3FA, 1 ; wnCloseFlag
  00046	74 1e		 je	 SHORT $LN4@DelWindow
  00048	83 3d 00 00 00
	00 01		 cmp	 DWORD PTR ?cloasewindows@@3HA, 1 ; cloasewindows
  0004f	74 15		 je	 SHORT $LN4@DelWindow

; 129  : 	}else{
; 130  : 		lua_pushinteger(L,  0);

  00051	33 c0		 xor	 eax, eax

; 131  : 	}
; 132  : 	return 1;

  00053	50		 push	 eax
  00054	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00057	e8 00 00 00 00	 call	 _lua_pushinteger
  0005c	83 c4 08	 add	 esp, 8
  0005f	b8 01 00 00 00	 mov	 eax, 1

; 133  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
$LN4@DelWindow:

; 122  : 	{
; 123  : #ifdef _Jason_ä¿®å¤å¤æåç»é®é¢
; 124  : 		LUA_WINDOW_OPEN = false;
; 125  : #endif
; 126  : 		wnCloseFlag = 0;

  00066	33 c0		 xor	 eax, eax
  00068	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?LUA_WINDOW_OPEN@@3_NA, 0 ; LUA_WINDOW_OPEN
  0006f	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag

; 127  : 		cloasewindows = 0;

  00075	a3 00 00 00 00	 mov	 DWORD PTR ?cloasewindows@@3HA, eax ; cloasewindows

; 128  : 		lua_pushinteger(L,  1);

  0007a	b8 01 00 00 00	 mov	 eax, 1

; 131  : 	}
; 132  : 	return 1;

  0007f	50		 push	 eax
  00080	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00083	e8 00 00 00 00	 call	 _lua_pushinteger
  00088	83 c4 08	 add	 esp, 8
  0008b	b8 01 00 00 00	 mov	 eax, 1

; 133  : }

  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
?DelWindow@@YAHPAUlua_State@@@Z ENDP			; DelWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?CloseFlg@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?CloseFlg@@YAHPAUlua_State@@@Z PROC			; CloseFlg, COMDAT

; 109  : 	wnCloseFlag = 0;

  00000	33 c0		 xor	 eax, eax
  00002	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag

; 110  : 	return 1;

  00008	b8 01 00 00 00	 mov	 eax, 1

; 111  : }

  0000d	c3		 ret	 0
?CloseFlg@@YAHPAUlua_State@@@Z ENDP			; CloseFlg
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?CloseWindow@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?CloseWindow@@YAHPAUlua_State@@@Z PROC			; CloseWindow, COMDAT

; 99   : #ifdef _Jason_ä¿®å¤å¤æåç»é®é¢
; 100  : 	LUA_WINDOW_OPEN = false;
; 101  : #endif
; 102  : 	windowTypeWN = -1;
; 103  : 	wnCloseFlag = 1;

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c6 05 00 00 00
	00 00		 mov	 BYTE PTR ?LUA_WINDOW_OPEN@@3_NA, 0 ; LUA_WINDOW_OPEN
  0000c	c7 05 00 00 00
	00 ff ff ff ff	 mov	 DWORD PTR ?windowTypeWN@@3HA, -1 ; windowTypeWN
  00016	66 a3 00 00 00
	00		 mov	 WORD PTR ?wnCloseFlag@@3FA, ax ; wnCloseFlag

; 104  : 	return 1;
; 105  : }

  0001c	c3		 ret	 0
?CloseWindow@@YAHPAUlua_State@@@Z ENDP			; CloseWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getHitDispNo@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getHitDispNo@@YAHPAUlua_State@@@Z PROC			; getHitDispNo, COMDAT

; 92   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 93   : 	lua_pushinteger(L,  HitDispNo);

  00003	ff 35 00 00 00
	00		 push	 DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
  00011	83 c4 08	 add	 esp, 8

; 94   : 	return 1;

  00014	b8 01 00 00 00	 mov	 eax, 1

; 95   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getHitDispNo@@YAHPAUlua_State@@@Z ENDP			; getHitDispNo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getHitFontNo@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getHitFontNo@@YAHPAUlua_State@@@Z PROC			; getHitFontNo, COMDAT

; 86   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 87   : 	lua_pushinteger(L,  HitFontNo);

  00003	ff 35 00 00 00
	00		 push	 DWORD PTR ?HitFontNo@@3HA ; HitFontNo
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
  00011	83 c4 08	 add	 esp, 8

; 88   : 	return 1;

  00014	b8 01 00 00 00	 mov	 eax, 1

; 89   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getHitFontNo@@YAHPAUlua_State@@@Z ENDP			; getHitFontNo
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getButtonTypeWN@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getButtonTypeWN@@YAHPAUlua_State@@@Z PROC		; getButtonTypeWN, COMDAT

; 79   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 80   : 	lua_pushinteger(L,  buttonTypeWN);

  00003	ff 35 00 00 00
	00		 push	 DWORD PTR ?buttonTypeWN@@3HA ; buttonTypeWN
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
  00011	83 c4 08	 add	 esp, 8

; 81   : 	return 1;

  00014	b8 01 00 00 00	 mov	 eax, 1

; 82   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getButtonTypeWN@@YAHPAUlua_State@@@Z ENDP		; getButtonTypeWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getIdWN@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getIdWN@@YAHPAUlua_State@@@Z PROC			; getIdWN, COMDAT

; 72   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 73   : 	lua_pushinteger(L,  idWN);

  00003	ff 35 00 00 00
	00		 push	 DWORD PTR ?idWN@@3HA	; idWN
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
  00011	83 c4 08	 add	 esp, 8

; 74   : 	return 1;

  00014	b8 01 00 00 00	 mov	 eax, 1

; 75   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getIdWN@@YAHPAUlua_State@@@Z ENDP			; getIdWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getIndexWN@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getIndexWN@@YAHPAUlua_State@@@Z PROC			; getIndexWN, COMDAT

; 66   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 67   : 	lua_pushinteger(L, indexWN);

  00003	ff 35 00 00 00
	00		 push	 DWORD PTR ?indexWN@@3HA	; indexWN
  00009	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000c	e8 00 00 00 00	 call	 _lua_pushinteger
  00011	83 c4 08	 add	 esp, 8

; 68   : 	return 1;

  00014	b8 01 00 00 00	 mov	 eax, 1

; 69   : }

  00019	5d		 pop	 ebp
  0001a	c3		 ret	 0
?getIndexWN@@YAHPAUlua_State@@@Z ENDP			; getIndexWN
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getMouseLeftCrick@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getMouseLeftCrick@@YAHPAUlua_State@@@Z PROC		; getMouseLeftCrick, COMDAT

; 59   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 60   : 	lua_pushinteger(L, (mouse.onceState & MOUSE_LEFT_CRICK));

  00003	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00008	83 e0 01	 and	 eax, 1
  0000b	50		 push	 eax
  0000c	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000f	e8 00 00 00 00	 call	 _lua_pushinteger
  00014	83 c4 08	 add	 esp, 8

; 61   : 	return 1;

  00017	b8 01 00 00 00	 mov	 eax, 1

; 62   : }

  0001c	5d		 pop	 ebp
  0001d	c3		 ret	 0
?getMouseLeftCrick@@YAHPAUlua_State@@@Z ENDP		; getMouseLeftCrick
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?getMessageData@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?getMessageData@@YAHPAUlua_State@@@Z PROC		; getMessageData, COMDAT

; 53   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 54   : 	const int id = luaL_checkint(L, 1);

  00003	6a 01		 push	 1
  00005	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00008	e8 00 00 00 00	 call	 _luaL_checkinteger

; 55   : 	lua_pushstring(L, windows.message.data[id]);

  0000d	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00010	05 2c 01 00 00	 add	 eax, OFFSET ?windows@@3USA_WINDOWS@@A+300
  00015	50		 push	 eax
  00016	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00019	e8 00 00 00 00	 call	 _lua_pushstring
  0001e	83 c4 10	 add	 esp, 16			; 00000010H

; 56   : 	return 1;

  00021	b8 01 00 00 00	 mov	 eax, 1

; 57   : }

  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?getMessageData@@YAHPAUlua_State@@@Z ENDP		; getMessageData
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?NewPrint@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -4						; size = 4
_L$ = 8							; size = 4
?NewPrint@@YAHPAUlua_State@@@Z PROC			; NewPrint, COMDAT

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 44   : 	size_t l;
; 45   : 	const char *data = luaL_checklstring(L, 1, &l);

  00004	8d 45 fc	 lea	 eax, DWORD PTR _l$[ebp]
  00007	50		 push	 eax
  00008	6a 01		 push	 1
  0000a	ff 75 08	 push	 DWORD PTR _L$[ebp]
  0000d	e8 00 00 00 00	 call	 _luaL_checklstring

; 46   : 	printf(data);

  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 _printf
  00018	83 c4 10	 add	 esp, 16			; 00000010H

; 47   : 	return 1;

  0001b	b8 01 00 00 00	 mov	 eax, 1

; 48   : }

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c3		 ret	 0
?NewPrint@@YAHPAUlua_State@@@Z ENDP			; NewPrint
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?InitWindow@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_l$ = -4						; size = 4
_L$ = 8							; size = 4
?InitWindow@@YAHPAUlua_State@@@Z PROC			; InitWindow, COMDAT

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi

; 30   : 	LUA_WINDOW_OPEN = true;
; 31   : 	size_t l;
; 32   : 	const int winW = luaL_checkint(L, 1);

  00005	8b 75 08	 mov	 esi, DWORD PTR _L$[ebp]
  00008	57		 push	 edi
  00009	6a 01		 push	 1
  0000b	56		 push	 esi
  0000c	c6 05 00 00 00
	00 01		 mov	 BYTE PTR ?LUA_WINDOW_OPEN@@3_NA, 1 ; LUA_WINDOW_OPEN
  00013	e8 00 00 00 00	 call	 _luaL_checkinteger

; 33   : 	const int winH = luaL_checkint(L, 2);

  00018	6a 02		 push	 2
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 _luaL_checkinteger

; 34   : 	const int msgWNLen = luaL_checkint(L, 3);

  00020	6a 03		 push	 3
  00022	56		 push	 esi
  00023	e8 00 00 00 00	 call	 _luaL_checkinteger
  00028	8b f8		 mov	 edi, eax

; 35   : 	const char *data = luaL_checklstring(L, 4, &l);

  0002a	8d 45 fc	 lea	 eax, DWORD PTR _l$[ebp]
  0002d	50		 push	 eax
  0002e	6a 04		 push	 4
  00030	56		 push	 esi
  00031	e8 00 00 00 00	 call	 _luaL_checklstring
  00036	8b f0		 mov	 esi, eax

; 36   : 	extern void getStrSplit( char *, char *, int, int, int );
; 37   : 	makeStringFromEscaped((char *)data);

  00038	56		 push	 esi
  00039	e8 00 00 00 00	 call	 ?makeStringFromEscaped@@YAPADPAD@Z ; makeStringFromEscaped

; 38   : 	getStrSplit(windows.message.data[0], (char *)data, 1024, 25, msgWNLen);

  0003e	57		 push	 edi
  0003f	6a 19		 push	 25			; 00000019H
  00041	68 00 04 00 00	 push	 1024			; 00000400H
  00046	56		 push	 esi
  00047	68 2c 01 00 00	 push	 OFFSET ?windows@@3USA_WINDOWS@@A+300
  0004c	e8 00 00 00 00	 call	 ?getStrSplit@@YAXPAD0HHH@Z ; getStrSplit
  00051	83 c4 3c	 add	 esp, 60			; 0000003cH

; 39   : 	return 1;

  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi

; 40   : }

  0005b	8b e5		 mov	 esp, ebp
  0005d	5d		 pop	 ebp
  0005e	c3		 ret	 0
?InitWindow@@YAHPAUlua_State@@@Z ENDP			; InitWindow
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\mylua\win.cpp
;	COMDAT ?luaopen_Win@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_Win@@YAHPAUlua_State@@@Z PROC			; luaopen_Win, COMDAT

; 252  : LUALIB_API int luaopen_Win (lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 253  : 	luaL_register(L, "win", winlib);

  00003	68 00 00 00 00	 push	 OFFSET ?winlib@@3QBUluaL_Reg@@B
  00008	68 00 00 00 00	 push	 OFFSET ??_C@_03JECLAOEA@win@
  0000d	ff 75 08	 push	 DWORD PTR _L$[ebp]
  00010	e8 00 00 00 00	 call	 _luaL_register
  00015	83 c4 0c	 add	 esp, 12			; 0000000cH

; 254  : 	return 1;

  00018	b8 01 00 00 00	 mov	 eax, 1

; 255  : }

  0001d	5d		 pop	 ebp
  0001e	c3		 ret	 0
?luaopen_Win@@YAHPAUlua_State@@@Z ENDP			; luaopen_Win
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 954  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 955  :         int _Result;
; 956  :         va_list _ArgList;
; 957  :         __crt_va_start(_ArgList, _Format);
; 958  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00004	8b 75 08	 mov	 esi, DWORD PTR __Format$[ebp]
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ___acrt_iob_func
  0000e	83 c4 04	 add	 esp, 4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00011	8d 4d 0c	 lea	 ecx, DWORD PTR __Format$[ebp+4]
  00014	51		 push	 ecx
  00015	6a 00		 push	 0
  00017	56		 push	 esi
  00018	50		 push	 eax
  00019	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  0001e	ff 70 04	 push	 DWORD PTR [eax+4]
  00021	ff 30		 push	 DWORD PTR [eax]
  00023	e8 00 00 00 00	 call	 ___stdio_common_vfprintf
  00028	83 c4 18	 add	 esp, 24			; 00000018H

; 959  :         __crt_va_end(_ArgList);
; 960  :         return _Result;

  0002b	5e		 pop	 esi

; 961  :     }

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

  00000	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

  00005	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
