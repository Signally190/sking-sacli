; Listing generated by Microsoft (R) Optimizing Compiler Version 19.28.29336.0 

	TITLE	C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?old_lssproto_W_send@@YAXHHHPAD@Z		; old_lssproto_W_send
PUBLIC	?old_lssproto_w_send@@YAXHHHPAD@Z		; old_lssproto_w_send
PUBLIC	?old_lssproto_EV_send@@YAXHHHHHH@Z		; old_lssproto_EV_send
PUBLIC	?old_lssproto_EN_send@@YAXHHH@Z			; old_lssproto_EN_send
PUBLIC	?old_lssproto_DU_send@@YAXHHH@Z			; old_lssproto_DU_send
PUBLIC	?old_lssproto_EO_send@@YAXHH@Z			; old_lssproto_EO_send
PUBLIC	?old_lssproto_BU_send@@YAXHH@Z			; old_lssproto_BU_send
PUBLIC	?old_lssproto_JB_send@@YAXHHH@Z			; old_lssproto_JB_send
PUBLIC	?old_lssproto_LB_send@@YAXHHH@Z			; old_lssproto_LB_send
PUBLIC	?old_lssproto_B_send@@YAXHPAD@Z			; old_lssproto_B_send
PUBLIC	?old_lssproto_SKD_send@@YAXHHH@Z		; old_lssproto_SKD_send
PUBLIC	?old_lssproto_ID_send@@YAXHHHHH@Z		; old_lssproto_ID_send
PUBLIC	?old_lssproto_PI_send@@YAXHHHH@Z		; old_lssproto_PI_send
PUBLIC	?old_lssproto_DI_send@@YAXHHHH@Z		; old_lssproto_DI_send
PUBLIC	?old_lssproto_DG_send@@YAXHHHH@Z		; old_lssproto_DG_send
PUBLIC	?old_lssproto_DP_send@@YAXHHHH@Z		; old_lssproto_DP_send
PUBLIC	?old_lssproto_MI_send@@YAXHHH@Z			; old_lssproto_MI_send
PUBLIC	?old_lssproto_MSG_send@@YAXHHPADH@Z		; old_lssproto_MSG_send
PUBLIC	?old_lssproto_PMSG_send@@YAXHHHHPADH@Z		; old_lssproto_PMSG_send
PUBLIC	?old_lssproto_AB_send@@YAXH@Z			; old_lssproto_AB_send
PUBLIC	?old_lssproto_DAB_send@@YAXHH@Z			; old_lssproto_DAB_send
PUBLIC	?old_lssproto_AAB_send@@YAXHHH@Z		; old_lssproto_AAB_send
PUBLIC	?old_lssproto_L_send@@YAXHH@Z			; old_lssproto_L_send
PUBLIC	?old_lssproto_TK_send@@YAXHHHPADHH@Z		; old_lssproto_TK_send
PUBLIC	?old_lssproto_M_send@@YAXHHHHHH@Z		; old_lssproto_M_send
PUBLIC	?old_lssproto_C_send@@YAXHH@Z			; old_lssproto_C_send
PUBLIC	?old_lssproto_S_send@@YAXHPAD@Z			; old_lssproto_S_send
PUBLIC	?old_lssproto_FS_send@@YAXHH@Z			; old_lssproto_FS_send
PUBLIC	?old_lssproto_HL_send@@YAXHH@Z			; old_lssproto_HL_send
PUBLIC	?old_lssproto_PR_send@@YAXHHHH@Z		; old_lssproto_PR_send
PUBLIC	?old_lssproto_KS_send@@YAXHH@Z			; old_lssproto_KS_send
PUBLIC	?old_lssproto_AC_send@@YAXHHHH@Z		; old_lssproto_AC_send
PUBLIC	?old_lssproto_MU_send@@YAXHHHHH@Z		; old_lssproto_MU_send
PUBLIC	?old_lssproto_PS_send@@YAXHHHHPAD@Z		; old_lssproto_PS_send
PUBLIC	?old_lssproto_ST_send@@YAXHH@Z			; old_lssproto_ST_send
PUBLIC	?old_lssproto_DT_send@@YAXHH@Z			; old_lssproto_DT_send
PUBLIC	?old_lssproto_FT_send@@YAXHPAD@Z		; old_lssproto_FT_send
PUBLIC	?old_lssproto_SKUP_send@@YAXHH@Z		; old_lssproto_SKUP_send
PUBLIC	?old_lssproto_KN_send@@YAXHHPAD@Z		; old_lssproto_KN_send
PUBLIC	?old_lssproto_WN_send@@YAXHHHHHHPAD@Z		; old_lssproto_WN_send
PUBLIC	?old_lssproto_SP_send@@YAXHHHH@Z		; old_lssproto_SP_send
PUBLIC	?old_lssproto_ClientLogin_send@@YAXHPAD0@Z	; old_lssproto_ClientLogin_send
PUBLIC	?old_lssproto_CreateNewChar_send@@YAXHHPADHHHHHHHHHHH@Z ; old_lssproto_CreateNewChar_send
PUBLIC	?old_lssproto_CharDelete_send@@YAXHPAD@Z	; old_lssproto_CharDelete_send
PUBLIC	?old_lssproto_CharLogin_send@@YAXHPAD@Z		; old_lssproto_CharLogin_send
PUBLIC	?old_lssproto_CharList_send@@YAXH@Z		; old_lssproto_CharList_send
PUBLIC	?old_lssproto_CharLogout_send@@YAXH@Z		; old_lssproto_CharLogout_send
PUBLIC	?old_lssproto_ProcGet_send@@YAXH@Z		; old_lssproto_ProcGet_send
PUBLIC	?old_lssproto_PlayerNumGet_send@@YAXH@Z		; old_lssproto_PlayerNumGet_send
PUBLIC	?old_lssproto_Echo_send@@YAXHPAD@Z		; old_lssproto_Echo_send
PUBLIC	?old_lssproto_Shutdown_send@@YAXHPADH@Z		; old_lssproto_Shutdown_send
PUBLIC	?lssproto_InitClient@@YAHP6AHHPADH@ZHH@Z	; lssproto_InitClient
PUBLIC	?lssproto_SetClientLogFiles@@YAXPAD0@Z		; lssproto_SetClientLogFiles
PUBLIC	?lssproto_CleanupClient@@YAXXZ			; lssproto_CleanupClient
PUBLIC	?lssproto_ClientDispatchMessage@@YAHHPAD@Z	; lssproto_ClientDispatchMessage
PUBLIC	?old_lssproto_TD_send@@YAXHPAD@Z		; old_lssproto_TD_send
PUBLIC	?old_lssproto_FM_send@@YAXHPAD@Z		; old_lssproto_FM_send
PUBLIC	?old_lssproto_FC_send@@YAXH@Z			; old_lssproto_FC_send
PUBLIC	??_C@_02KPPNMLFJ@FC@				; `string'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_01ELNMCGJD@W@				; `string'
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_02JKAOJDBE@EV@				; `string'
PUBLIC	??_C@_02BIBFALEN@EN@				; `string'
PUBLIC	??_C@_02LAOBKKOA@DU@				; `string'
PUBLIC	??_C@_02BAODKAM@EO@				; `string'
PUBLIC	??_C@_02LEGMNGFC@BU@				; `string'
PUBLIC	??_C@_02LPPMADHM@JB@				; `string'
PUBLIC	??_C@_02LLHBHPMO@LB@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B@				; `string'
PUBLIC	??_C@_03OPNJGIIP@SKD@				; `string'
PUBLIC	??_C@_02OLOABKKD@ID@				; `string'
PUBLIC	??_C@_02ENLJPMBB@PI@				; `string'
PUBLIC	??_C@_02FGJGPHLN@DI@				; `string'
PUBLIC	??_C@_02MIBFNKDD@DG@				; `string'
PUBLIC	??_C@_02MNJGFOKF@DP@				; `string'
PUBLIC	??_C@_02FJEHMMDC@MI@				; `string'
PUBLIC	??_C@_03GGAHOJCI@MSG@				; `string'
PUBLIC	??_C@_04LJHCAOOC@PMSG@				; `string'
PUBLIC	??_C@_02LDKJOMJN@AB@				; `string'
PUBLIC	??_C@_03HJNKCFPJ@DAB@				; `string'
PUBLIC	??_C@_03EOAENFML@AAB@				; `string'
PUBLIC	??_C@_01OCOKONAJ@L@				; `string'
PUBLIC	??_C@_02HIIGDGEP@TK@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M@				; `string'
PUBLIC	??_C@_01GFHCPBMG@C@				; `string'
PUBLIC	??_C@_01CPLAODJH@S@				; `string'
PUBLIC	??_C@_02OFDPNJAI@FS@				; `string'
PUBLIC	??_C@_02CCPLPKJM@HL@				; `string'
PUBLIC	??_C@_02OEIPDHIL@PR@				; `string'
PUBLIC	??_C@_02ONOHEKFL@KS@				; `string'
PUBLIC	??_C@_02KKLCNNNM@AC@				; `string'
PUBLIC	??_C@_02LPDAJBGP@MU@				; `string'
PUBLIC	??_C@_02PNJEAGMK@PS@				; `string'
PUBLIC	??_C@_02LAJDCOFE@ST@				; `string'
PUBLIC	??_C@_02KJPKJLKB@DT@				; `string'
PUBLIC	??_C@_02KKHOEPMP@FT@				; `string'
PUBLIC	??_C@_04NKLHNDMK@SKUP@				; `string'
PUBLIC	??_C@_02BCILCGEH@KN@				; `string'
PUBLIC	??_C@_02HLHHMFD@WN@				; `string'
PUBLIC	??_C@_02NEPPOLFA@SP@				; `string'
PUBLIC	??_C@_0M@GCIKGDI@ClientLogin@			; `string'
PUBLIC	??_C@_0O@EHKKOHMG@CreateNewChar@		; `string'
PUBLIC	??_C@_0L@EPLKHLOD@CharDelete@			; `string'
PUBLIC	??_C@_09JAIEDKAG@CharLogin@			; `string'
PUBLIC	??_C@_08FAAFODDM@CharList@			; `string'
PUBLIC	??_C@_0L@JHLIIOLA@CharLogout@			; `string'
PUBLIC	??_C@_07JALAHHPN@ProcGet@			; `string'
PUBLIC	??_C@_0N@JKCLOODO@PlayerNumGet@			; `string'
PUBLIC	??_C@_04CEPMGKMG@Echo@				; `string'
PUBLIC	??_C@_08NKPDJDJD@Shutdown@			; `string'
PUBLIC	??_C@_02PPBOCKIA@TD@				; `string'
PUBLIC	??_C@_02DBHOOGNH@FM@				; `string'
PUBLIC	??_C@_03CHHKJIJA@XYD@				; `string'
PUBLIC	??_C@_02POBANCKE@RS@				; `string'
PUBLIC	??_C@_02PLJDFGDC@RD@				; `string'
PUBLIC	??_C@_01JPJNBJEM@I@				; `string'
PUBLIC	??_C@_02EPPPECEI@SI@				; `string'
PUBLIC	??_C@_03OAPKIKJC@PME@				; `string'
PUBLIC	??_C@_03KPLGLCFJ@ABI@				; `string'
PUBLIC	??_C@_02KDKICELI@MC@				; `string'
PUBLIC	??_C@_02JLAAGLDA@CA@				; `string'
PUBLIC	??_C@_02OGHHJPHF@CD@				; `string'
PUBLIC	??_C@_01DGKLNCNG@R@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D@				; `string'
PUBLIC	??_C@_02NAMMIBEF@EF@				; `string'
PUBLIC	??_C@_02ODEKANEE@SE@				; `string'
PUBLIC	??_C@_02LNHGCPDG@NU@				; `string'
EXTRN	_free:PROC
EXTRN	_malloc:PROC
EXTRN	?lssproto_XYD_recv@@YAXHHHH@Z:PROC		; lssproto_XYD_recv
EXTRN	?lssproto_EV_recv@@YAXHHH@Z:PROC		; lssproto_EV_recv
EXTRN	?lssproto_EN_recv@@YAXHHH@Z:PROC		; lssproto_EN_recv
EXTRN	?lssproto_RS_recv@@YAXHPAD@Z:PROC		; lssproto_RS_recv
EXTRN	?lssproto_RD_recv@@YAXHPAD@Z:PROC		; lssproto_RD_recv
EXTRN	?lssproto_B_recv@@YAXHPAD@Z:PROC		; lssproto_B_recv
EXTRN	?lssproto_I_recv@@YAXHPAD@Z:PROC		; lssproto_I_recv
EXTRN	?lssproto_SI_recv@@YAXHHH@Z:PROC		; lssproto_SI_recv
EXTRN	?lssproto_MSG_recv@@YAXHHPADH@Z:PROC		; lssproto_MSG_recv
EXTRN	?lssproto_PME_recv@@YAXHHHHHHHHPAD@Z:PROC	; lssproto_PME_recv
EXTRN	?lssproto_AB_recv@@YAXHPAD@Z:PROC		; lssproto_AB_recv
EXTRN	?lssproto_ABI_recv@@YAXHHPAD@Z:PROC		; lssproto_ABI_recv
EXTRN	?lssproto_TK_recv@@YAXHHPADH@Z:PROC		; lssproto_TK_recv
EXTRN	?lssproto_MC_recv@@YAXHHHHHHHHHPAD@Z:PROC	; lssproto_MC_recv
EXTRN	?lssproto_M_recv@@YAXHHHHHHPAD@Z:PROC		; lssproto_M_recv
EXTRN	?lssproto_C_recv@@YAXHPAD@Z:PROC		; lssproto_C_recv
EXTRN	?lssproto_CA_recv@@YAXHPAD@Z:PROC		; lssproto_CA_recv
EXTRN	?lssproto_CD_recv@@YAXHPAD@Z:PROC		; lssproto_CD_recv
EXTRN	?lssproto_R_recv@@YAXHPAD@Z:PROC		; lssproto_R_recv
EXTRN	?lssproto_S_recv@@YAXHPAD@Z:PROC		; lssproto_S_recv
EXTRN	?lssproto_D_recv@@YAXHHHHPAD@Z:PROC		; lssproto_D_recv
EXTRN	?lssproto_FS_recv@@YAXHH@Z:PROC			; lssproto_FS_recv
EXTRN	?lssproto_HL_recv@@YAXHH@Z:PROC			; lssproto_HL_recv
EXTRN	?lssproto_PR_recv@@YAXHHH@Z:PROC		; lssproto_PR_recv
EXTRN	?lssproto_KS_recv@@YAXHHH@Z:PROC		; lssproto_KS_recv
EXTRN	?lssproto_PS_recv@@YAXHHHHH@Z:PROC		; lssproto_PS_recv
EXTRN	?lssproto_SKUP_recv@@YAXHH@Z:PROC		; lssproto_SKUP_recv
EXTRN	?lssproto_WN_recv@@YAXHHHHHPAD@Z:PROC		; lssproto_WN_recv
EXTRN	?lssproto_EF_recv@@YAXHHHPAD@Z:PROC		; lssproto_EF_recv
EXTRN	?lssproto_SE_recv@@YAXHHHHH@Z:PROC		; lssproto_SE_recv
EXTRN	?lssproto_ClientLogin_recv@@YAXHPAD@Z:PROC	; lssproto_ClientLogin_recv
EXTRN	?lssproto_CreateNewChar_recv@@YAXHPAD0@Z:PROC	; lssproto_CreateNewChar_recv
EXTRN	?lssproto_CharDelete_recv@@YAXHPAD0@Z:PROC	; lssproto_CharDelete_recv
EXTRN	?lssproto_CharLogin_recv@@YAXHPAD0@Z:PROC	; lssproto_CharLogin_recv
EXTRN	?lssproto_CharList_recv@@YAXHPAD0@Z:PROC	; lssproto_CharList_recv
EXTRN	?lssproto_CharLogout_recv@@YAXHPAD0@Z:PROC	; lssproto_CharLogout_recv
EXTRN	?lssproto_ProcGet_recv@@YAXHPAD@Z:PROC		; lssproto_ProcGet_recv
EXTRN	?lssproto_PlayerNumGet_recv@@YAXHHH@Z:PROC	; lssproto_PlayerNumGet_recv
EXTRN	?lssproto_Echo_recv@@YAXHPAD@Z:PROC		; lssproto_Echo_recv
EXTRN	?lssproto_NU_recv@@YAXHH@Z:PROC			; lssproto_NU_recv
EXTRN	?lssproto_TD_recv@@YAXHPAD@Z:PROC		; lssproto_TD_recv
EXTRN	?lssproto_FM_recv@@YAXHPAD@Z:PROC		; lssproto_FM_recv
EXTRN	?lssproto_splitString@@YAXPAD@Z:PROC		; lssproto_splitString
EXTRN	?lssproto_strcpysafe@@YAXPAD0H@Z:PROC		; lssproto_strcpysafe
EXTRN	?lssproto_strcatsafe@@YAXPAD0H@Z:PROC		; lssproto_strcatsafe
EXTRN	?lssproto_mkstr_int@@YAPADH@Z:PROC		; lssproto_mkstr_int
EXTRN	?lssproto_mkstr_string@@YAPADPAD@Z:PROC		; lssproto_mkstr_string
EXTRN	?lssproto_demkstr_int@@YAHPAD@Z:PROC		; lssproto_demkstr_int
EXTRN	?lssproto_demkstr_string@@YAPADPAD@Z:PROC	; lssproto_demkstr_string
EXTRN	?lssproto_wrapStringAddr@@YAPADPADH0@Z:PROC	; lssproto_wrapStringAddr
EXTRN	?lssproto_GetMessageInfo@@YAXPAHPADHPAPAD@Z:PROC ; lssproto_GetMessageInfo
EXTRN	?lssproto_Send@@YAXHPAD@Z:PROC			; lssproto_Send
EXTRN	?lssproto_AllocateCommonWork@@YAHH@Z:PROC	; lssproto_AllocateCommonWork
EXTRN	?lssproto_CreateHeader@@YAXPAD0@Z:PROC		; lssproto_CreateHeader
EXTRN	?lssproto_default_write_wrap@@YAHHPADH@Z:PROC	; lssproto_default_write_wrap
EXTRN	?SkyIslandSetNo@@YAXH@Z:PROC			; SkyIslandSetNo
EXTRN	@__security_check_cookie@4:PROC
EXTRN	_memset:PROC
EXTRN	?lssproto@@3Ulssproto_@@A:BYTE			; lssproto
EXTRN	?lssproto_stringwrapper@@3PAPADA:DWORD		; lssproto_stringwrapper
EXTRN	?lssproto_readlogfilename@@3PADA:BYTE		; lssproto_readlogfilename
EXTRN	?lssproto_writelogfilename@@3PADA:BYTE		; lssproto_writelogfilename
EXTRN	?SendCount@@3HA:DWORD				; SendCount
EXTRN	___security_cookie:DWORD
;	COMDAT ??_C@_02LNHGCPDG@NU@
CONST	SEGMENT
??_C@_02LNHGCPDG@NU@ DB 'NU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ODEKANEE@SE@
CONST	SEGMENT
??_C@_02ODEKANEE@SE@ DB 'SE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02NAMMIBEF@EF@
CONST	SEGMENT
??_C@_02NAMMIBEF@EF@ DB 'EF', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D@
CONST	SEGMENT
??_C@_01CKDDGHAB@D@ DB 'D', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01DGKLNCNG@R@
CONST	SEGMENT
??_C@_01DGKLNCNG@R@ DB 'R', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02OGHHJPHF@CD@
CONST	SEGMENT
??_C@_02OGHHJPHF@CD@ DB 'CD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JLAAGLDA@CA@
CONST	SEGMENT
??_C@_02JLAAGLDA@CA@ DB 'CA', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KDKICELI@MC@
CONST	SEGMENT
??_C@_02KDKICELI@MC@ DB 'MC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03KPLGLCFJ@ABI@
CONST	SEGMENT
??_C@_03KPLGLCFJ@ABI@ DB 'ABI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OAPKIKJC@PME@
CONST	SEGMENT
??_C@_03OAPKIKJC@PME@ DB 'PME', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02EPPPECEI@SI@
CONST	SEGMENT
??_C@_02EPPPECEI@SI@ DB 'SI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01JPJNBJEM@I@
CONST	SEGMENT
??_C@_01JPJNBJEM@I@ DB 'I', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02PLJDFGDC@RD@
CONST	SEGMENT
??_C@_02PLJDFGDC@RD@ DB 'RD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02POBANCKE@RS@
CONST	SEGMENT
??_C@_02POBANCKE@RS@ DB 'RS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03CHHKJIJA@XYD@
CONST	SEGMENT
??_C@_03CHHKJIJA@XYD@ DB 'XYD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02DBHOOGNH@FM@
CONST	SEGMENT
??_C@_02DBHOOGNH@FM@ DB 'FM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PPBOCKIA@TD@
CONST	SEGMENT
??_C@_02PPBOCKIA@TD@ DB 'TD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08NKPDJDJD@Shutdown@
CONST	SEGMENT
??_C@_08NKPDJDJD@Shutdown@ DB 'Shutdown', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04CEPMGKMG@Echo@
CONST	SEGMENT
??_C@_04CEPMGKMG@Echo@ DB 'Echo', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JKCLOODO@PlayerNumGet@
CONST	SEGMENT
??_C@_0N@JKCLOODO@PlayerNumGet@ DB 'PlayerNumGet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JALAHHPN@ProcGet@
CONST	SEGMENT
??_C@_07JALAHHPN@ProcGet@ DB 'ProcGet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JHLIIOLA@CharLogout@
CONST	SEGMENT
??_C@_0L@JHLIIOLA@CharLogout@ DB 'CharLogout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FAAFODDM@CharList@
CONST	SEGMENT
??_C@_08FAAFODDM@CharList@ DB 'CharList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JAIEDKAG@CharLogin@
CONST	SEGMENT
??_C@_09JAIEDKAG@CharLogin@ DB 'CharLogin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPLKHLOD@CharDelete@
CONST	SEGMENT
??_C@_0L@EPLKHLOD@CharDelete@ DB 'CharDelete', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EHKKOHMG@CreateNewChar@
CONST	SEGMENT
??_C@_0O@EHKKOHMG@CreateNewChar@ DB 'CreateNewChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCIKGDI@ClientLogin@
CONST	SEGMENT
??_C@_0M@GCIKGDI@ClientLogin@ DB 'ClientLogin', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NEPPOLFA@SP@
CONST	SEGMENT
??_C@_02NEPPOLFA@SP@ DB 'SP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HLHHMFD@WN@
CONST	SEGMENT
??_C@_02HLHHMFD@WN@ DB 'WN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BCILCGEH@KN@
CONST	SEGMENT
??_C@_02BCILCGEH@KN@ DB 'KN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NKLHNDMK@SKUP@
CONST	SEGMENT
??_C@_04NKLHNDMK@SKUP@ DB 'SKUP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KKHOEPMP@FT@
CONST	SEGMENT
??_C@_02KKHOEPMP@FT@ DB 'FT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KJPKJLKB@DT@
CONST	SEGMENT
??_C@_02KJPKJLKB@DT@ DB 'DT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LAJDCOFE@ST@
CONST	SEGMENT
??_C@_02LAJDCOFE@ST@ DB 'ST', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PNJEAGMK@PS@
CONST	SEGMENT
??_C@_02PNJEAGMK@PS@ DB 'PS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LPDAJBGP@MU@
CONST	SEGMENT
??_C@_02LPDAJBGP@MU@ DB 'MU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02KKLCNNNM@AC@
CONST	SEGMENT
??_C@_02KKLCNNNM@AC@ DB 'AC', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ONOHEKFL@KS@
CONST	SEGMENT
??_C@_02ONOHEKFL@KS@ DB 'KS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OEIPDHIL@PR@
CONST	SEGMENT
??_C@_02OEIPDHIL@PR@ DB 'PR', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02CCPLPKJM@HL@
CONST	SEGMENT
??_C@_02CCPLPKJM@HL@ DB 'HL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OFDPNJAI@FS@
CONST	SEGMENT
??_C@_02OFDPNJAI@FS@ DB 'FS', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S@
CONST	SEGMENT
??_C@_01CPLAODJH@S@ DB 'S', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01GFHCPBMG@C@
CONST	SEGMENT
??_C@_01GFHCPBMG@C@ DB 'C', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M@
CONST	SEGMENT
??_C@_01PLPBNMEI@M@ DB 'M', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02HIIGDGEP@TK@
CONST	SEGMENT
??_C@_02HIIGDGEP@TK@ DB 'TK', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01OCOKONAJ@L@
CONST	SEGMENT
??_C@_01OCOKONAJ@L@ DB 'L', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_03EOAENFML@AAB@
CONST	SEGMENT
??_C@_03EOAENFML@AAB@ DB 'AAB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HJNKCFPJ@DAB@
CONST	SEGMENT
??_C@_03HJNKCFPJ@DAB@ DB 'DAB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LDKJOMJN@AB@
CONST	SEGMENT
??_C@_02LDKJOMJN@AB@ DB 'AB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LJHCAOOC@PMSG@
CONST	SEGMENT
??_C@_04LJHCAOOC@PMSG@ DB 'PMSG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03GGAHOJCI@MSG@
CONST	SEGMENT
??_C@_03GGAHOJCI@MSG@ DB 'MSG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FJEHMMDC@MI@
CONST	SEGMENT
??_C@_02FJEHMMDC@MI@ DB 'MI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MNJGFOKF@DP@
CONST	SEGMENT
??_C@_02MNJGFOKF@DP@ DB 'DP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02MIBFNKDD@DG@
CONST	SEGMENT
??_C@_02MIBFNKDD@DG@ DB 'DG', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02FGJGPHLN@DI@
CONST	SEGMENT
??_C@_02FGJGPHLN@DI@ DB 'DI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02ENLJPMBB@PI@
CONST	SEGMENT
??_C@_02ENLJPMBB@PI@ DB 'PI', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OLOABKKD@ID@
CONST	SEGMENT
??_C@_02OLOABKKD@ID@ DB 'ID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03OPNJGIIP@SKD@
CONST	SEGMENT
??_C@_03OPNJGIIP@SKD@ DB 'SKD', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B@
CONST	SEGMENT
??_C@_01HMGJMAIH@B@ DB 'B', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02LLHBHPMO@LB@
CONST	SEGMENT
??_C@_02LLHBHPMO@LB@ DB 'LB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LPPMADHM@JB@
CONST	SEGMENT
??_C@_02LPPMADHM@JB@ DB 'JB', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LEGMNGFC@BU@
CONST	SEGMENT
??_C@_02LEGMNGFC@BU@ DB 'BU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BAODKAM@EO@
CONST	SEGMENT
??_C@_02BAODKAM@EO@ DB 'EO', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02LAOBKKOA@DU@
CONST	SEGMENT
??_C@_02LAOBKKOA@DU@ DB 'DU', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BIBFALEN@EN@
CONST	SEGMENT
??_C@_02BIBFALEN@EN@ DB 'EN', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02JKAOJDBE@EV@
CONST	SEGMENT
??_C@_02JKAOJDBE@EV@ DB 'EV', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01ELNMCGJD@W@
CONST	SEGMENT
??_C@_01ELNMCGJD@W@ DB 'W', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_02KPPNMLFJ@FC@
CONST	SEGMENT
??_C@_02KPPNMLFJ@FC@ DB 'FC', 00H			; `string'
CONST	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_FC_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_FC_send@@YAXH@Z PROC			; old_lssproto_FC_send, COMDAT

; 88   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 89   : 	lssproto_CreateHeader( lssproto.work , "FC" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02KPPNMLFJ@FC@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 90   : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 91   : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 92   : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_FC_send@@YAXH@Z ENDP			; old_lssproto_FC_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_FM_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_message$ = 12						; size = 4
?old_lssproto_FM_send@@YAXHPAD@Z PROC			; old_lssproto_FM_send, COMDAT

; 1613 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1614 : 	lssproto_CreateHeader( lssproto.work , "FM" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02DBHOOGNH@FM@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1615 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( message ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _message$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1616 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1617 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_FM_send@@YAXHPAD@Z ENDP			; old_lssproto_FM_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_TD_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_message$ = 12						; size = 4
?old_lssproto_TD_send@@YAXHPAD@Z PROC			; old_lssproto_TD_send, COMDAT

; 1606 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1607 : 	lssproto_CreateHeader( lssproto.work , "TD" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02PPBOCKIA@TD@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1608 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( message ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _message$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1609 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1610 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_TD_send@@YAXHPAD@Z ENDP			; old_lssproto_TD_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?lssproto_ClientDispatchMessage@@YAHHPAD@Z
_TEXT	SEGMENT
_msgid$ = -1056						; size = 4
_fl$1$ = -1052						; size = 4
_y1$1$ = -1052						; size = 4
_tilesum$1$ = -1048					; size = 4
_objindex$1$ = -1048					; size = 4
_y2$1$ = -1044						; size = 4
_graphicsno$1$ = -1044					; size = 4
_x2$1$ = -1040						; size = 4
_x$1$ = -1040						; size = 4
_fl$1$ = -1036						; size = 4
_y$1$ = -1036						; size = 4
_windowtype$1$ = -1032					; size = 4
_x1$1$ = -1032						; size = 4
_x1$1$ = -1032						; size = 4
_funcname$ = -1028					; size = 1024
__$ArrayPad$ = -4					; size = 4
_fd$ = 8						; size = 4
_line$ = 12						; size = 4
?lssproto_ClientDispatchMessage@@YAHHPAD@Z PROC		; lssproto_ClientDispatchMessage, COMDAT

; 1620 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 04 00
	00		 sub	 esp, 1056		; 00000420H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 1621 : 	int msgid;
; 1622 : 	char funcname[1024];
; 1623 : 	lssproto_strcpysafe( lssproto.work , line,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	8b 45 0c	 mov	 eax, DWORD PTR _line$[ebp]
  0001c	50		 push	 eax
  0001d	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00023	e8 00 00 00 00	 call	 ?lssproto_strcpysafe@@YAXPAD0H@Z ; lssproto_strcpysafe

; 1624 : 	lssproto_splitString( lssproto.work);

  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_splitString@@YAXPAD@Z ; lssproto_splitString

; 1625 : 	lssproto_GetMessageInfo( &msgid , funcname , sizeof(funcname),lssproto.token_list);

  00033	ff 35 2c 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00039	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0003f	68 00 04 00 00	 push	 1024			; 00000400H
  00044	50		 push	 eax
  00045	8d 85 e0 fb ff
	ff		 lea	 eax, DWORD PTR _msgid$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ?lssproto_GetMessageInfo@@YAXPAHPADHPAPAD@Z ; lssproto_GetMessageInfo
  00051	83 c4 20	 add	 esp, 32			; 00000020H

; 1626 : /*
; 1627 : 209 :   <LI><a name="SC_XYD"><font color=blue>servertoclient XYD( int x, int y, int dir );<br></font></a>
; 1628 : 210 : 	î?îî¬î·??????????îº?îîî?????î¸??
; 1629 : 211 :       <br><br>
; 1630 : */
; 1631 : 
; 1632 : 	if( strcmp( funcname , "XYD" ) == 0 ){

  00054	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0005a	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_03CHHKJIJA@XYD@
  0005f	90		 npad	 1
$LL45@lssproto_C:
  00060	8a 10		 mov	 dl, BYTE PTR [eax]
  00062	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00064	75 1a		 jne	 SHORT $LN46@lssproto_C
  00066	84 d2		 test	 dl, dl
  00068	74 12		 je	 SHORT $LN47@lssproto_C
  0006a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0006d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00070	75 0e		 jne	 SHORT $LN46@lssproto_C
  00072	83 c0 02	 add	 eax, 2
  00075	83 c1 02	 add	 ecx, 2
  00078	84 d2		 test	 dl, dl
  0007a	75 e4		 jne	 SHORT $LL45@lssproto_C
$LN47@lssproto_C:
  0007c	33 c0		 xor	 eax, eax
  0007e	eb 05		 jmp	 SHORT $LN48@lssproto_C
$LN46@lssproto_C:
  00080	1b c0		 sbb	 eax, eax
  00082	83 c8 01	 or	 eax, 1
$LN48@lssproto_C:
  00085	56		 push	 esi
  00086	57		 push	 edi
  00087	85 c0		 test	 eax, eax
  00089	75 4d		 jne	 SHORT $LN2@lssproto_C

; 1633 : 		int x;
; 1634 : 		int y;
; 1635 : 		int dir;
; 1636 : 		x = lssproto_demkstr_int( lssproto.token_list[2] );

  0008b	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00090	ff 70 08	 push	 DWORD PTR [eax+8]
  00093	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1637 : 		y = lssproto_demkstr_int( lssproto.token_list[3] );

  00098	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0009e	8b f8		 mov	 edi, eax
  000a0	ff 71 0c	 push	 DWORD PTR [ecx+12]
  000a3	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1638 : 		dir = lssproto_demkstr_int( lssproto.token_list[4] );

  000a8	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  000ae	8b f0		 mov	 esi, eax
  000b0	ff 71 10	 push	 DWORD PTR [ecx+16]
  000b3	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1639 : 		lssproto_XYD_recv( fd,x,y,dir);

  000b8	50		 push	 eax
  000b9	56		 push	 esi
  000ba	57		 push	 edi
  000bb	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000be	e8 00 00 00 00	 call	 ?lssproto_XYD_recv@@YAXHHHH@Z ; lssproto_XYD_recv
  000c3	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1640 : 		return 0;

  000c6	33 c0		 xor	 eax, eax
  000c8	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  000c9	5e		 pop	 esi
  000ca	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000cd	33 cd		 xor	 ecx, ebp
  000cf	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d4	8b e5		 mov	 esp, ebp
  000d6	5d		 pop	 ebp
  000d7	c3		 ret	 0
$LN2@lssproto_C:

; 1641 : 	}
; 1642 : /*
; 1643 : 247 :   <LI><a name="SC_EV"><font color=blue>servertoclient EV(int seqno,int result);<br></font></a>
; 1644 : 248 : 	???????EV?î???î?????
; 1645 : 249 : 	???î¢?î????????????î????????
; 1646 : 250 : 	î????
; 1647 : 251 :       
; 1648 : 252 :       <dl>
; 1649 : 253 : 	<dt>int seqno
; 1650 : 254 : 	<dd>??????EV?seqno?î????
; 1651 : 255 : 	<dt>int result
; 1652 : 256 : 	<dd>???0:????î¯?î?? 1:î??????î???????î??î­î???????????????
; 1653 : 257 :       </dL>	
; 1654 : 258 :       <br>
; 1655 : 259 :       <hr>
; 1656 : 260 :       <br>
; 1657 : */
; 1658 : 
; 1659 : 	if( strcmp( funcname , "EV" ) == 0 ){

  000d8	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02JKAOJDBE@EV@
  000dd	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL49@lssproto_C:
  000e3	8a 10		 mov	 dl, BYTE PTR [eax]
  000e5	3a 11		 cmp	 dl, BYTE PTR [ecx]
  000e7	75 1a		 jne	 SHORT $LN50@lssproto_C
  000e9	84 d2		 test	 dl, dl
  000eb	74 12		 je	 SHORT $LN51@lssproto_C
  000ed	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  000f0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  000f3	75 0e		 jne	 SHORT $LN50@lssproto_C
  000f5	83 c0 02	 add	 eax, 2
  000f8	83 c1 02	 add	 ecx, 2
  000fb	84 d2		 test	 dl, dl
  000fd	75 e4		 jne	 SHORT $LL49@lssproto_C
$LN51@lssproto_C:
  000ff	33 c0		 xor	 eax, eax
  00101	eb 05		 jmp	 SHORT $LN52@lssproto_C
$LN50@lssproto_C:
  00103	1b c0		 sbb	 eax, eax
  00105	83 c8 01	 or	 eax, 1
$LN52@lssproto_C:
  00108	85 c0		 test	 eax, eax
  0010a	75 3c		 jne	 SHORT $LN3@lssproto_C

; 1660 : 		int seqno;
; 1661 : 		int result;
; 1662 : 		seqno = lssproto_demkstr_int( lssproto.token_list[2] );

  0010c	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00111	ff 70 08	 push	 DWORD PTR [eax+8]
  00114	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1663 : 		result = lssproto_demkstr_int( lssproto.token_list[3] );

  00119	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0011f	8b f0		 mov	 esi, eax
  00121	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00124	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1664 : 		lssproto_EV_recv( fd,seqno,result);

  00129	50		 push	 eax
  0012a	56		 push	 esi
  0012b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0012e	e8 00 00 00 00	 call	 ?lssproto_EV_recv@@YAXHHH@Z ; lssproto_EV_recv
  00133	83 c4 14	 add	 esp, 20			; 00000014H

; 1665 : 		return 0;

  00136	33 c0		 xor	 eax, eax
  00138	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00139	5e		 pop	 esi
  0013a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0013d	33 cd		 xor	 ecx, ebp
  0013f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00144	8b e5		 mov	 esp, ebp
  00146	5d		 pop	 ebp
  00147	c3		 ret	 0
$LN3@lssproto_C:

; 1666 : 	}
; 1667 : /*
; 1668 : 285 :   <LI><a name="SC_EN"><font color=blue>servertoclient EN(int result,int field);<br></font></a>
; 1669 : 286 : 	???????EN??DU?î???î???????????î???î°?????????î¶?????????
; 1670 : 287 :       
; 1671 : 288 :       <dl>
; 1672 : 289 : 	<dt>int result
; 1673 : 290 : 	<dd>???0:??????î?or???? 1:î©??îî¬ï¼¯ï¼«?2:îî·??îî¬ï¼¯ï¼«?????îî¬????î­î	???????????????
; 1674 : 291 : 	<dt>int field
; 1675 : 292 : 	<dd>????????î±??
; 1676 : 293 :      </dL>
; 1677 : 294 :       <br>
; 1678 : 295 :       <hr>
; 1679 : 296 :       <br>
; 1680 : 297 : 
; 1681 : */
; 1682 : 
; 1683 : 	if( strcmp( funcname , "EN" ) == 0 ){

  00148	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02BIBFALEN@EN@
  0014d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL53@lssproto_C:
  00153	8a 10		 mov	 dl, BYTE PTR [eax]
  00155	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00157	75 1a		 jne	 SHORT $LN54@lssproto_C
  00159	84 d2		 test	 dl, dl
  0015b	74 12		 je	 SHORT $LN55@lssproto_C
  0015d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00160	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00163	75 0e		 jne	 SHORT $LN54@lssproto_C
  00165	83 c0 02	 add	 eax, 2
  00168	83 c1 02	 add	 ecx, 2
  0016b	84 d2		 test	 dl, dl
  0016d	75 e4		 jne	 SHORT $LL53@lssproto_C
$LN55@lssproto_C:
  0016f	33 c0		 xor	 eax, eax
  00171	eb 05		 jmp	 SHORT $LN56@lssproto_C
$LN54@lssproto_C:
  00173	1b c0		 sbb	 eax, eax
  00175	83 c8 01	 or	 eax, 1
$LN56@lssproto_C:
  00178	85 c0		 test	 eax, eax
  0017a	75 3c		 jne	 SHORT $LN4@lssproto_C

; 1684 : 		int result;
; 1685 : 		int field;
; 1686 : 		result = lssproto_demkstr_int( lssproto.token_list[2] );

  0017c	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00181	ff 70 08	 push	 DWORD PTR [eax+8]
  00184	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1687 : 		field = lssproto_demkstr_int( lssproto.token_list[3] );

  00189	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0018f	8b f0		 mov	 esi, eax
  00191	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00194	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1688 : 		lssproto_EN_recv( fd,result,field);

  00199	50		 push	 eax
  0019a	56		 push	 esi
  0019b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0019e	e8 00 00 00 00	 call	 ?lssproto_EN_recv@@YAXHHH@Z ; lssproto_EN_recv
  001a3	83 c4 14	 add	 esp, 20			; 00000014H

; 1689 : 		return 0;

  001a6	33 c0		 xor	 eax, eax
  001a8	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  001a9	5e		 pop	 esi
  001aa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ad	33 cd		 xor	 ecx, ebp
  001af	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b4	8b e5		 mov	 esp, ebp
  001b6	5d		 pop	 ebp
  001b7	c3		 ret	 0
$LN4@lssproto_C:

; 1690 : 	}
; 1691 : /*
; 1692 : 342 :   <LI><a name="SC_RS"><font color=blue>servertoclient RS( string data );<br></font></a>
; 1693 : 343 : 	îî¬î·???îî¾????????????î­î²?<br>
; 1694 : 344 :         RS|î±?(10î´)|?????????(10î´)|EXP(62î´),î±?|?????????|EXP,???,????î¡|????î¡|????î¡<br><br>
; 1695 : 345 :         î±????î±?5î·î¤??î·î¤??î??","?????î·???î§???????????????î±??-2?<br>
; 1696 : 346 : 	2î·???4î·????????î±??0?4)??????î±????????î¶?????î¡??????","????<br>
; 1697 : 347 : 	????????î¡î·?"|"??î???????î«???î¡???î¶???????"|"????
; 1698 : 348 : 
; 1699 : */
; 1700 : 
; 1701 : 	if( strcmp( funcname , "RS" ) == 0 ){

  001b8	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02POBANCKE@RS@
  001bd	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL57@lssproto_C:
  001c3	8a 10		 mov	 dl, BYTE PTR [eax]
  001c5	3a 11		 cmp	 dl, BYTE PTR [ecx]
  001c7	75 1a		 jne	 SHORT $LN58@lssproto_C
  001c9	84 d2		 test	 dl, dl
  001cb	74 12		 je	 SHORT $LN59@lssproto_C
  001cd	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  001d0	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  001d3	75 0e		 jne	 SHORT $LN58@lssproto_C
  001d5	83 c0 02	 add	 eax, 2
  001d8	83 c1 02	 add	 ecx, 2
  001db	84 d2		 test	 dl, dl
  001dd	75 e4		 jne	 SHORT $LL57@lssproto_C
$LN59@lssproto_C:
  001df	33 c0		 xor	 eax, eax
  001e1	eb 05		 jmp	 SHORT $LN60@lssproto_C
$LN58@lssproto_C:
  001e3	1b c0		 sbb	 eax, eax
  001e5	83 c8 01	 or	 eax, 1
$LN60@lssproto_C:
  001e8	85 c0		 test	 eax, eax
  001ea	75 3f		 jne	 SHORT $LN5@lssproto_C

; 1702 : 		char* data;
; 1703 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  001ec	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  001f1	ff 70 08	 push	 DWORD PTR [eax+8]
  001f4	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  001f9	50		 push	 eax
  001fa	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  001ff	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00205	ff 70 04	 push	 DWORD PTR [eax+4]
  00208	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 1704 : 		lssproto_RS_recv( fd,data);

  0020d	50		 push	 eax
  0020e	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00211	e8 00 00 00 00	 call	 ?lssproto_RS_recv@@YAXHPAD@Z ; lssproto_RS_recv
  00216	83 c4 18	 add	 esp, 24			; 00000018H

; 1705 : 		return 0;

  00219	33 c0		 xor	 eax, eax
  0021b	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0021c	5e		 pop	 esi
  0021d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00220	33 cd		 xor	 ecx, ebp
  00222	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00227	8b e5		 mov	 esp, ebp
  00229	5d		 pop	 ebp
  0022a	c3		 ret	 0
$LN5@lssproto_C:

; 1706 : 	}
; 1707 : /*
; 1708 : 349 :   <LI><a name="SC_RD"><font color=blue>servertoclient RD( string data );<br></font></a>
; 1709 : 350 : 	????î·???îî¾??î§???????????î­î²?<br>
; 1710 : 351 :         RD|î¾?(î§??)DP(62î´)|?î·î«?DP(62î´)|<br><br>
; 1711 : 352 : 
; 1712 : 353 : 
; 1713 : */
; 1714 : 
; 1715 : 	if( strcmp( funcname , "RD" ) == 0 ){

  0022b	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02PLJDFGDC@RD@
  00230	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL61@lssproto_C:
  00236	8a 10		 mov	 dl, BYTE PTR [eax]
  00238	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0023a	75 1a		 jne	 SHORT $LN62@lssproto_C
  0023c	84 d2		 test	 dl, dl
  0023e	74 12		 je	 SHORT $LN63@lssproto_C
  00240	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00243	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00246	75 0e		 jne	 SHORT $LN62@lssproto_C
  00248	83 c0 02	 add	 eax, 2
  0024b	83 c1 02	 add	 ecx, 2
  0024e	84 d2		 test	 dl, dl
  00250	75 e4		 jne	 SHORT $LL61@lssproto_C
$LN63@lssproto_C:
  00252	33 c0		 xor	 eax, eax
  00254	eb 05		 jmp	 SHORT $LN64@lssproto_C
$LN62@lssproto_C:
  00256	1b c0		 sbb	 eax, eax
  00258	83 c8 01	 or	 eax, 1
$LN64@lssproto_C:
  0025b	85 c0		 test	 eax, eax
  0025d	75 3f		 jne	 SHORT $LN6@lssproto_C

; 1716 : 		char* data;
; 1717 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  0025f	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00264	ff 70 08	 push	 DWORD PTR [eax+8]
  00267	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0026c	50		 push	 eax
  0026d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00272	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00278	ff 70 04	 push	 DWORD PTR [eax+4]
  0027b	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 1718 : 		lssproto_RD_recv( fd,data);

  00280	50		 push	 eax
  00281	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00284	e8 00 00 00 00	 call	 ?lssproto_RD_recv@@YAXHPAD@Z ; lssproto_RD_recv
  00289	83 c4 18	 add	 esp, 24			; 00000018H

; 1719 : 		return 0;

  0028c	33 c0		 xor	 eax, eax
  0028e	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0028f	5e		 pop	 esi
  00290	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00293	33 cd		 xor	 ecx, ebp
  00295	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0029a	8b e5		 mov	 esp, ebp
  0029c	5d		 pop	 ebp
  0029d	c3		 ret	 0
$LN6@lssproto_C:

; 1720 : 	}
; 1721 : /*
; 1722 : 377 :   <LI><a name="SC_B"><font color=blue>servertoclient B( string command );<br></font></a>
; 1723 : 378 : îî¬???????î»?????î±??î»? î«î°?16î´?î¸??<BR>
; 1724 : 379 : ???[?îî±?]????????????î±?????
; 1725 : 380 : îî·??????????îî·???????????îª??????????
; 1726 : 381 : 	<br><br>
; 1727 : 382 : <h4>
; 1728 : 383 : ???????
; 1729 : 384 : </h4>
; 1730 : 385 : ????????î¤?î»??????î°?????????î°?????îµ?<BR>
; 1731 : 386 : ???( BATTLESTR_ADD( î°?? ) )?î¸????????????î°?????î·??????????????î¿????<BR>
; 1732 : 387 : ????????????î»??î±????????î±???î¡????î¸î°????î¡?(???????î¸????)<br>
; 1733 : 388 : 
; 1734 : 389 : <BR>
; 1735 : 390 : ???????????î ¸ï¼????????<BR>
; 1736 : 391 : ---?????ï¼?î ?<BR>
; 1737 : 392 : ---?????ï¼î­î¹???<BR>
; 1738 : 393 : ---?????ï¼?î???<BR>
; 1739 : 394 : ---?????ï¼î ¡?<BR>
; 1740 : 395 : ---?????ï¼?????<BR>
; 1741 : 396 : ---?????ï¼???<BR>
; 1742 : 397 : ---?????ï¼????????????<BR>
; 1743 : 398 : ---?????ï¼????????????<BR>
; 1744 : 399 : ---?????ï¼???????????<BR>
; 1745 : 400 : ---?????ï¼î?î???<BR>
; 1746 : 401 : <br>
; 1747 : 402 : <ul>
; 1748 : 403 : <li>BH|????î­î¹??????<br>
; 1749 : 404 : BH|??îªî±?|îîîªî±?|???|????|îîîªî±?|???|????|???????î??îîîªî±??FF???????????î·??????<br>
; 1750 : 405 : <br>
; 1751 : 406 : 
; 1752 : 407 : (î­î¹???) B|BH|attack_0|defense_A|flag_2|damage_32|defense_B|flag_2|damage_32|FF|<BR>
; 1753 : 408 : ???0î±?(attack_0)Aî±(defense_A)?0x32???????(damage_32)???Bî±(defense_B)????????0x32????(damage_32)??????????<Br><Br>
; 1754 : 409 : 
; 1755 : 410 : (???????) B|BH|attack_0|defense_A|flag_2|dagame_32|counter_0|flag_10|damage_16|FF|<BR>
; 1756 : 411 : ???0î±?(attack_0)?Aî±????(defense_A)????0x32(damage_32)???????0î±(counter_0)???????(flag_10)????0x16(damage_16)?î????????????????îî®??????îî·?????????î±????<Br><br>
; 1757 : 412 : 
; 1758 : 413 : (î?î????) B|BH|attack_0|defense_A|flag_202|dagame_32|gardian_B|FF|<BR>
; 1759 : 414 : ???0î±?(attack_0)?Aî±????(defense_A)????0x32(damage_32)?????????Bî±?î?î??????????????????<Br><Br>
; 1760 : 415 : <Br>
; 1761 : 416 : 
; 1762 : 417 : <li>BT|????î©î?????<br>
; 1763 : 418 : BT|??îªî±?|îîîªî±?|???|<br>
; 1764 : 419 : ?????????î?î???????î?î§î²?î§î²?????????î©?
; 1765 : 420 : ??î??????????????????îî???<br><br>
; 1766 : 421 : 
; 1767 : 422 : <li>BE|????î¦î ????<br>
; 1768 : 423 : BE|î¦??îªî±?|îîîªî±?|???|<br>
; 1769 : 424 : ?????????î?î???????î?î§î²?î§î²?????????î©?
; 1770 : 425 : ??î??????????????????îî????????????î¦??
; 1771 : 426 : î¶???????BE?î¡??????î¦????????<br>
; 1772 : 427 : <br>
; 1773 : 428 : 
; 1774 : 429 : <li>bg|???????????<br>
; 1775 : 430 : bg|?????îªî±?|<br>
; 1776 : 431 : ???î¸î°?????????????î®??î¡?????????î???î°???????????????????î¸î°??
; 1777 : 432 : ??????????????????<br>
; 1778 : 433 : <br>
; 1779 : 434 : 
; 1780 : 435 : <li>BD|?????????î?????<br>
; 1781 : 436 : BD|î???????î±?|î??î?|?????????|??î±|<br>
; 1782 : 437 : î??î?????????????????????????????????<br>
; 1783 : 438 : <br>
; 1784 : 439 : 
; 1785 : 440 : <li>BF|??????????????????<br>
; 1786 : 441 : BF|??????î±?|<br>
; 1787 : 442 : ??????î¸?????????????????î¶?????????????
; 1788 : 443 : ?î????ä½??î??î¸?<br>
; 1789 : 444 : <br>
; 1790 : 445 : 
; 1791 : 446 : <li>BJ|????î£î??????î????<br>
; 1792 : 447 : BJ|î£îî¸????î±?|î£îî¸?îª?????î±?|î£îî¢?îª?????î±?|î¢?????î±?|î¢?????î±?|???|FF|<br>
; 1793 : 448 : ?????î£î?î¸???î¶??î¸?????î¢?????î±???î·???î???????FF?????
; 1794 : 449 : <br>
; 1795 : 450 : <br>
; 1796 : 451 : 
; 1797 : 452 : <li>BB|????î?î¹???????<br>
; 1798 : 453 : BB|??îªî±?|î?î¹??î?|îîîªî±?|???|????|îîîªî±?|???|FF|<BR>
; 1799 : 454 : ?î±?????î?î¹??î??î¼????î ??î­î¹???î¯??<br>
; 1800 : 455 : î?î¹??î???????????î¡???î??????????î¡???î©??????<br>
; 1801 : 456 : 
; 1802 : 457 : <br>
; 1803 : 458 : <li>BM|??????????î¹î?????<br>
; 1804 : 459 : BM|?????î??????î±?|????????î¹?|<br>
; 1805 : 460 : ??????î¹î±??<br>
; 1806 : 461 : ---?ï¼??????î¹î¡?<br>
; 1807 : 462 : ---?ï¼î<br>
; 1808 : 463 : ---?ï¼??<br>
; 1809 : 464 : ---?ï¼î¡?<br>
; 1810 : 465 : ---?ï¼î·?<br>
; 1811 : 466 : ---?ï¼??î?<br>
; 1812 : 467 : ---?ï¼??<br>
; 1813 : 468 : <br>
; 1814 : 469 : 
; 1815 : 470 : <li>BO|?????????????<br>
; 1816 : 471 : BO|??îªî±?|îîîªî±?|???|????|îîîªî±?|???|FF|<BR>
; 1817 : 472 : ?î±?????î?î¹??î??î¼????î ??î­î¹???î¯??<br>
; 1818 : 473 : <br>
; 1819 : 474 : 
; 1820 : 475 : <li>BS|???????î?î¼?????<br>
; 1821 : 476 : BS|????î±?[0?19](%X)|???|??î±?|???|??|î¡î·|<BR>
; 1822 : 477 : ???????????????????????????î°??î¡????<br>
; 1823 : 478 : ???????????î??????????????î¶???????î?????????BS??????????<br>
; 1824 : 479 : 
; 1825 : 480 : <li>BU|????îî¬??î??????<br>
; 1826 : 481 : ??î¡?????????????????????î¿î??î¹?î½????????î????????î¶??????????????îî¬??î?????????????î????<br>
; 1827 : 482 : <br>
; 1828 : 483 : 
; 1829 : 484 : <li>BV|?????????î´îî?????<br>
; 1830 : 485 : BV|î????????î±?|î???î´îî±?|<br>
; 1831 : 486 : î???î´îî±???<br>
; 1832 : 487 : ---?ï¼î¡î´î<br>
; 1833 : 488 : ---?ï¼ä½î´î<br>
; 1834 : 489 : ---?ï¼?î´î<br>
; 1835 : 490 : ---?ï¼?î´î<br>
; 1836 : 491 : ---?ï¼?î´î<br>
; 1837 : 492 : <br>
; 1838 : 493 : 
; 1839 : 494 : <li>BY|?????î??????<br>
; 1840 : 495 : BY|îîîªî±?|??îªî±?|???|????|??îªî±?|???|????|???????î??î­î¹????î?î¼?î?????<br>
; 1841 : 496 : <br>
; 1842 : 497 : </ul>
; 1843 : 498 : 
; 1844 : 499 : <h4>
; 1845 : 500 : ??????????????
; 1846 : 501 : </h4>
; 1847 : 502 : <ul>
; 1848 : 503 : <li>BC|?????????????????????î»??î¯?????????<br>
; 1849 : 504 : BC|î±?[0?19](%X)|???î¡(%s)|??î±?(%X)|???(%X)|HP(%X)|???(%X)|???<BR><BR>
; 1850 : 505 : ?????î ¸ï¼????????<BR>
; 1851 : 506 : ---?????ï¼î¡?î¢?<BR>
; 1852 : 507 : ---?????ï¼?î <BR>
; 1853 : 508 : ---?????ï¼?????????<BR>
; 1854 : 509 : ---?????ï¼î<BR>
; 1855 : 510 : ---?????ï¼??<BR>
; 1856 : 511 : ---?????ï¼î¡?<BR>
; 1857 : 512 : ---?????ï¼î·?<BR>
; 1858 : 513 : ---?????ï¼??î?<BR>
; 1859 : 514 : ---?????ï¼??<BR>
; 1860 : 515 : <br>
; 1861 : 516 : <li>BP|????îî¤??î·???????????î ´î·????????<br>
; 1862 : 517 : BP|îî¤?î±?[0?19](%X)|???(%X)|?????(%X)|???<BR><BR>
; 1863 : 518 : ?????î ¸ï¼????????<BR>
; 1864 : 519 : ---?????ï¼îî¤?î¡?î¢?<BR>
; 1865 : 520 : ---?????ï¼îî¤?î?î??î?????<BR>
; 1866 : 521 : ---?????ï¼????????????<BR>
; 1867 : 522 : </ul>
; 1868 : 523 : <h4>
; 1869 : 524 : ?????????î???????????????????
; 1870 : 525 : </h4>
; 1871 : 526 : <ul>
; 1872 : 527 : <li>BA|??????????????????????î??????????????????î»???????<br>
; 1873 : 528 : BA|?????????(%X)|????(%X)|
; 1874 : 529 : <BR><BR>
; 1875 : 530 : ?????????????î???î???î±?????????????????
; 1876 : 531 : ?????????????????????????????????????
; 1877 : 532 : ??????????????????????????îî??????????????????î???<BR>
; 1878 : 533 : ??????????î»??î¿??????î¶??????????????
; 1879 : 534 : ??î¿???î£?????????????
; 1880 : 535 : </ul>
; 1881 : 536 :       <br>
; 1882 : 537 :       <br>
; 1883 : 538 :       <hr>
; 1884 : 539 :       <br>
; 1885 : 540 : 
; 1886 : 541 : 
; 1887 : */
; 1888 : 
; 1889 : 	if( strcmp( funcname , "B" ) == 0 ){

  0029e	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01HMGJMAIH@B@
  002a3	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  002a9	0f 1f 80 00 00
	00 00		 npad	 7
$LL65@lssproto_C:
  002b0	8a 10		 mov	 dl, BYTE PTR [eax]
  002b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  002b4	75 1a		 jne	 SHORT $LN66@lssproto_C
  002b6	84 d2		 test	 dl, dl
  002b8	74 12		 je	 SHORT $LN67@lssproto_C
  002ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  002bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  002c0	75 0e		 jne	 SHORT $LN66@lssproto_C
  002c2	83 c0 02	 add	 eax, 2
  002c5	83 c1 02	 add	 ecx, 2
  002c8	84 d2		 test	 dl, dl
  002ca	75 e4		 jne	 SHORT $LL65@lssproto_C
$LN67@lssproto_C:
  002cc	33 c0		 xor	 eax, eax
  002ce	eb 05		 jmp	 SHORT $LN68@lssproto_C
$LN66@lssproto_C:
  002d0	1b c0		 sbb	 eax, eax
  002d2	83 c8 01	 or	 eax, 1
$LN68@lssproto_C:
  002d5	85 c0		 test	 eax, eax
  002d7	75 3f		 jne	 SHORT $LN7@lssproto_C

; 1890 : 		char* command;
; 1891 : 		command = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  002d9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  002de	ff 70 08	 push	 DWORD PTR [eax+8]
  002e1	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  002e6	50		 push	 eax
  002e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  002ec	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  002f2	ff 70 04	 push	 DWORD PTR [eax+4]
  002f5	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 1892 : 		lssproto_B_recv( fd,command);

  002fa	50		 push	 eax
  002fb	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  002fe	e8 00 00 00 00	 call	 ?lssproto_B_recv@@YAXHPAD@Z ; lssproto_B_recv
  00303	83 c4 18	 add	 esp, 24			; 00000018H

; 1893 : 		return 0;

  00306	33 c0		 xor	 eax, eax
  00308	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00309	5e		 pop	 esi
  0030a	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0030d	33 cd		 xor	 ecx, ebp
  0030f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00314	8b e5		 mov	 esp, ebp
  00316	5d		 pop	 ebp
  00317	c3		 ret	 0
$LN7@lssproto_C:

; 1894 : 	}
; 1895 : /*
; 1896 : 722 :   <LI><a name="SC_I"><font color=blue>servertoclient I( string data );<br></font></a>
; 1897 : 723 :       (item)<br>
; 1898 : 724 :       <br>
; 1899 : 725 :       ????îºî«?S I ?î»??????î????î?????îî???????î±???????
; 1900 : 726 :       î???î?????î???
; 1901 : 727 :       
; 1902 : 728 :       <dl>
; 1903 : 729 :         <dt>string data
; 1904 : 730 :         <dd>????îºî«?
; 1905 : 731 :             ?????î ?????îµî¹???????
; 1906 : 732 : 	    ???????????????????????
; 1907 : 733 : 	    ?î?????????S I???????î¯????îîª???????????î¶??
; 1908 : 734 : 	    î?????????????î±????????îî«???<br>
; 1909 : 735 :         </dl>
; 1910 : 736 :       <br>
; 1911 : 737 :       <hr>
; 1912 : 738 :       <br>
; 1913 : 739 :       <br>
; 1914 : 740 : 
; 1915 : */
; 1916 : 
; 1917 : 	if( strcmp( funcname , "I" ) == 0 ){

  00318	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01JPJNBJEM@I@
  0031d	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL69@lssproto_C:
  00323	8a 10		 mov	 dl, BYTE PTR [eax]
  00325	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00327	75 1a		 jne	 SHORT $LN70@lssproto_C
  00329	84 d2		 test	 dl, dl
  0032b	74 12		 je	 SHORT $LN71@lssproto_C
  0032d	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00330	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00333	75 0e		 jne	 SHORT $LN70@lssproto_C
  00335	83 c0 02	 add	 eax, 2
  00338	83 c1 02	 add	 ecx, 2
  0033b	84 d2		 test	 dl, dl
  0033d	75 e4		 jne	 SHORT $LL69@lssproto_C
$LN71@lssproto_C:
  0033f	33 c0		 xor	 eax, eax
  00341	eb 05		 jmp	 SHORT $LN72@lssproto_C
$LN70@lssproto_C:
  00343	1b c0		 sbb	 eax, eax
  00345	83 c8 01	 or	 eax, 1
$LN72@lssproto_C:
  00348	85 c0		 test	 eax, eax
  0034a	75 3f		 jne	 SHORT $LN8@lssproto_C

; 1918 : 		char* data;
; 1919 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  0034c	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00351	ff 70 08	 push	 DWORD PTR [eax+8]
  00354	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00359	50		 push	 eax
  0035a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0035f	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00365	ff 70 04	 push	 DWORD PTR [eax+4]
  00368	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 1920 : 		lssproto_I_recv( fd,data);

  0036d	50		 push	 eax
  0036e	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00371	e8 00 00 00 00	 call	 ?lssproto_I_recv@@YAXHPAD@Z ; lssproto_I_recv
  00376	83 c4 18	 add	 esp, 24			; 00000018H

; 1921 : 		return 0;

  00379	33 c0		 xor	 eax, eax
  0037b	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0037c	5e		 pop	 esi
  0037d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00380	33 cd		 xor	 ecx, ebp
  00382	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00387	8b e5		 mov	 esp, ebp
  00389	5d		 pop	 ebp
  0038a	c3		 ret	 0
$LN8@lssproto_C:

; 1922 : 	}
; 1923 : /*
; 1924 : 763 :   <LI><a name="SI"><font color=blue>servertoclient SI( int fromindex, int toindex );</font><br>
; 1925 : 764 : 	  (SwapItem)
; 1926 : 765 : 	  ??????????????î¯??î ¸?MI?î¯????
; 1927 : 766 : 	  ??????????????î­î²??????????
; 1928 : 767 : 	  î¸????î«?????SI???????î??????
; 1929 : 768 : 	  î¿??î??????(î¶?î«????î?î?????)??
; 1930 : 769 : 	  ???????????î®?????????????î­î²?????
; 1931 : 770 : 	  î¸???????î«??????????????????????
; 1932 : 771 : 	  ?î?î???????î?????????
; 1933 : 772 : 	  ?î?î??????????????????????????
; 1934 : 773 : 	  ????????????????î´??????????????????
; 1935 : 774 : 	  ???????î?î???????
; 1936 : 775 : 	  ?î±???î±?î?????????????î­î²???
; 1937 : 776 : 
; 1938 : 777 :       <dl>
; 1939 : 778 : 	<dt>int fromindex
; 1940 : 779 : 	<dd>?î®?????????????
; 1941 : 780 : 	<dt>int toindex
; 1942 : 781 : 	<dd>?î«ä½???????????
; 1943 : 782 :       </dl>
; 1944 : 783 :       ?î«ä½??î ¸??MI?î¯?????
; 1945 : 784 :       <br>
; 1946 : 785 :       <hr>
; 1947 : 786 :       <br>
; 1948 : 787 : 	  
; 1949 : */
; 1950 : 
; 1951 : 	if( strcmp( funcname , "SI" ) == 0 ){

  0038b	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02EPPPECEI@SI@
  00390	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL73@lssproto_C:
  00396	8a 10		 mov	 dl, BYTE PTR [eax]
  00398	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0039a	75 1a		 jne	 SHORT $LN74@lssproto_C
  0039c	84 d2		 test	 dl, dl
  0039e	74 12		 je	 SHORT $LN75@lssproto_C
  003a0	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  003a3	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  003a6	75 0e		 jne	 SHORT $LN74@lssproto_C
  003a8	83 c0 02	 add	 eax, 2
  003ab	83 c1 02	 add	 ecx, 2
  003ae	84 d2		 test	 dl, dl
  003b0	75 e4		 jne	 SHORT $LL73@lssproto_C
$LN75@lssproto_C:
  003b2	33 c0		 xor	 eax, eax
  003b4	eb 05		 jmp	 SHORT $LN76@lssproto_C
$LN74@lssproto_C:
  003b6	1b c0		 sbb	 eax, eax
  003b8	83 c8 01	 or	 eax, 1
$LN76@lssproto_C:
  003bb	85 c0		 test	 eax, eax
  003bd	75 3c		 jne	 SHORT $LN9@lssproto_C

; 1952 : 		int fromindex;
; 1953 : 		int toindex;
; 1954 : 		fromindex = lssproto_demkstr_int( lssproto.token_list[2] );

  003bf	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  003c4	ff 70 08	 push	 DWORD PTR [eax+8]
  003c7	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1955 : 		toindex = lssproto_demkstr_int( lssproto.token_list[3] );

  003cc	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  003d2	8b f0		 mov	 esi, eax
  003d4	ff 71 0c	 push	 DWORD PTR [ecx+12]
  003d7	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1956 : 		lssproto_SI_recv( fd,fromindex,toindex);

  003dc	50		 push	 eax
  003dd	56		 push	 esi
  003de	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  003e1	e8 00 00 00 00	 call	 ?lssproto_SI_recv@@YAXHHH@Z ; lssproto_SI_recv
  003e6	83 c4 14	 add	 esp, 20			; 00000014H

; 1957 : 		return 0;

  003e9	33 c0		 xor	 eax, eax
  003eb	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  003ec	5e		 pop	 esi
  003ed	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003f0	33 cd		 xor	 ecx, ebp
  003f2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003f7	8b e5		 mov	 esp, ebp
  003f9	5d		 pop	 ebp
  003fa	c3		 ret	 0
$LN9@lssproto_C:

; 1958 : 	}
; 1959 : /*
; 1960 : 806 :   <LI><a name="SC_MSG"><font color=blue>servertoclient MSG( int aindex , string text , int color );</font></a><br>
; 1961 : 807 :       (MeSsaGe)
; 1962 : 808 :       ????????????????????????????????
; 1963 : 809 :       ??î??????î­î¹????????????????î¢î???
; 1964 : 810 :       ?????????????????T??î????????????
; 1965 : 811 :       <dl>
; 1966 : 812 : 	<dt>int aindex
; 1967 : 813 : 	<dd>??????????????????????îî????î
; 1968 : 814 : 	    ??????????????????
; 1969 : 815 : 	<dt>string text
; 1970 : 816 : 	<dd>??????î ?????????î§???????????î ???mm/dd hh:mm|text...|graphicsno|lv|name|itemgraphicsno
; 1971 : 817 : 	    ??????????????îºî????î¼???????î¯????????î ??????î±??
; 1972 : 818 : 	    î­î¹????-1???î¶????????????î¼????????mm/dd hh:mm|text|-1
; 1973 : 819 : 	    ???????î¶??????????????î±???î??????
; 1974 : 820 : 	    lv????????????????????î¡î·??î????????????????????
; 1975 : 821 : 	    itemgraphicsno ?????????????î±???î??????
; 1976 : 822 : 	<dt>int color
; 1977 : 823 : 	<dd>î?
; 1978 : 824 : 	<dt>
; 1979 : 825 :       </dl>
; 1980 : 826 :       <br>
; 1981 : 827 :       <hr>
; 1982 : 828 :       <br>
; 1983 : 829 :   
; 1984 : */
; 1985 : 
; 1986 : 	if( strcmp( funcname , "MSG" ) == 0 ){

  003fb	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_03GGAHOJCI@MSG@
  00400	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL77@lssproto_C:
  00406	8a 10		 mov	 dl, BYTE PTR [eax]
  00408	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0040a	75 1a		 jne	 SHORT $LN78@lssproto_C
  0040c	84 d2		 test	 dl, dl
  0040e	74 12		 je	 SHORT $LN79@lssproto_C
  00410	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00413	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00416	75 0e		 jne	 SHORT $LN78@lssproto_C
  00418	83 c0 02	 add	 eax, 2
  0041b	83 c1 02	 add	 ecx, 2
  0041e	84 d2		 test	 dl, dl
  00420	75 e4		 jne	 SHORT $LL77@lssproto_C
$LN79@lssproto_C:
  00422	33 c0		 xor	 eax, eax
  00424	eb 05		 jmp	 SHORT $LN80@lssproto_C
$LN78@lssproto_C:
  00426	1b c0		 sbb	 eax, eax
  00428	83 c8 01	 or	 eax, 1
$LN80@lssproto_C:
  0042b	85 c0		 test	 eax, eax
  0042d	75 62		 jne	 SHORT $LN10@lssproto_C

; 1987 : 		int aindex;
; 1988 : 		char* text;
; 1989 : 		int color;
; 1990 : 		aindex = lssproto_demkstr_int( lssproto.token_list[2] );

  0042f	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00434	ff 70 08	 push	 DWORD PTR [eax+8]
  00437	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1991 : 		text = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  0043c	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00442	8b f8		 mov	 edi, eax
  00444	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00447	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0044c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00452	50		 push	 eax
  00453	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00459	ff 71 08	 push	 DWORD PTR [ecx+8]
  0045c	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 1992 : 		color = lssproto_demkstr_int( lssproto.token_list[4] );

  00461	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00467	8b f0		 mov	 esi, eax
  00469	ff 71 10	 push	 DWORD PTR [ecx+16]
  0046c	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 1993 : 		lssproto_MSG_recv( fd,aindex,text,color);

  00471	50		 push	 eax
  00472	56		 push	 esi
  00473	57		 push	 edi
  00474	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00477	e8 00 00 00 00	 call	 ?lssproto_MSG_recv@@YAXHHPADH@Z ; lssproto_MSG_recv
  0047c	83 c4 28	 add	 esp, 40			; 00000028H

; 1994 : 		return 0;

  0047f	33 c0		 xor	 eax, eax
  00481	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00482	5e		 pop	 esi
  00483	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00486	33 cd		 xor	 ecx, ebp
  00488	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0048d	8b e5		 mov	 esp, ebp
  0048f	5d		 pop	 ebp
  00490	c3		 ret	 0
$LN10@lssproto_C:

; 1995 : 	}
; 1996 : /*
; 1997 : 851 :   <LI><a name="SC_PME"><font color=blue>servertoclient PME( int objindex, int graphicsno, int x, int y, int dir, int flg, int no, string cdata );<br></font></a>
; 1998 : 852 :       (PetMeSsaEffect)
; 1999 : 853 :       ?????????????îî¶?î¸????<br><br>
; 2000 : 854 :       <dl>
; 2001 : 855 : 	<dt>int objindex
; 2002 : 856 : 	<dd>??????????î±??
; 2003 : 857 : 	<dt>int graphicsno
; 2004 : 858 : 	<dd>îî¶????????î±?
; 2005 : 859 : 	<dt>int x,y
; 2006 : 860 : 	<dd>???îº?î????
; 2007 : 861 : 	<dt>int dir;
; 2008 : 862 : 	<dd>??îµ??????????
; 2009 : 863 : 	<dt>int flg
; 2010 : 864 : 	<dd>?????(0)??????(1)?
; 2011 : 865 : 	<dt>int no
; 2012 : 866 : 	<dd>?îî±??
; 2013 : 867 : 	<dt>string cdata
; 2014 : 868 : 	<dd>C ?????î¼????????????????î????????????????????
; 2015 : 869 : 	    ???î§???????????????î?????????????î¶??
; 2016 : 870 : 	    ????????C ??????????
; 2017 : 871 :       </dl>
; 2018 : 872 :       <br>
; 2019 : 873 :       <br>
; 2020 : 874 :       <hr>
; 2021 : 875 :       <br>
; 2022 : 876 : 	  
; 2023 : */
; 2024 : 
; 2025 : 	if( strcmp( funcname , "PME" ) == 0 ){

  00491	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_03OAPKIKJC@PME@
  00496	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0049c	0f 1f 40 00	 npad	 4
$LL81@lssproto_C:
  004a0	8a 10		 mov	 dl, BYTE PTR [eax]
  004a2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  004a4	75 1a		 jne	 SHORT $LN82@lssproto_C
  004a6	84 d2		 test	 dl, dl
  004a8	74 12		 je	 SHORT $LN83@lssproto_C
  004aa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  004ad	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  004b0	75 0e		 jne	 SHORT $LN82@lssproto_C
  004b2	83 c0 02	 add	 eax, 2
  004b5	83 c1 02	 add	 ecx, 2
  004b8	84 d2		 test	 dl, dl
  004ba	75 e4		 jne	 SHORT $LL81@lssproto_C
$LN83@lssproto_C:
  004bc	33 c0		 xor	 eax, eax
  004be	eb 05		 jmp	 SHORT $LN84@lssproto_C
$LN82@lssproto_C:
  004c0	1b c0		 sbb	 eax, eax
  004c2	83 c8 01	 or	 eax, 1
$LN84@lssproto_C:
  004c5	53		 push	 ebx
  004c6	85 c0		 test	 eax, eax
  004c8	0f 85 dc 00 00
	00		 jne	 $LN11@lssproto_C

; 2026 : 		int objindex;
; 2027 : 		int graphicsno;
; 2028 : 		int x;
; 2029 : 		int y;
; 2030 : 		int dir;
; 2031 : 		int flg;
; 2032 : 		int no;
; 2033 : 		char* cdata;
; 2034 : 		objindex = lssproto_demkstr_int( lssproto.token_list[2] );

  004ce	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  004d3	ff 70 08	 push	 DWORD PTR [eax+8]
  004d6	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2035 : 		graphicsno = lssproto_demkstr_int( lssproto.token_list[3] );

  004db	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  004e1	89 85 e8 fb ff
	ff		 mov	 DWORD PTR _objindex$1$[ebp], eax
  004e7	ff 71 0c	 push	 DWORD PTR [ecx+12]
  004ea	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2036 : 		x = lssproto_demkstr_int( lssproto.token_list[4] );

  004ef	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  004f5	89 85 ec fb ff
	ff		 mov	 DWORD PTR _graphicsno$1$[ebp], eax
  004fb	ff 71 10	 push	 DWORD PTR [ecx+16]
  004fe	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2037 : 		y = lssproto_demkstr_int( lssproto.token_list[5] );

  00503	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00509	89 85 f0 fb ff
	ff		 mov	 DWORD PTR _x$1$[ebp], eax
  0050f	ff 71 14	 push	 DWORD PTR [ecx+20]
  00512	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2038 : 		dir = lssproto_demkstr_int( lssproto.token_list[6] );

  00517	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0051d	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _y$1$[ebp], eax
  00523	ff 71 18	 push	 DWORD PTR [ecx+24]
  00526	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2039 : 		flg = lssproto_demkstr_int( lssproto.token_list[7] );

  0052b	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00531	8b d8		 mov	 ebx, eax
  00533	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00536	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2040 : 		no = lssproto_demkstr_int( lssproto.token_list[8] );

  0053b	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00541	8b f8		 mov	 edi, eax
  00543	ff 71 20	 push	 DWORD PTR [ecx+32]
  00546	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2041 : 		cdata = lssproto_wrapStringAddr( lssproto_stringwrapper[8] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[9] ));

  0054b	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00551	8b f0		 mov	 esi, eax
  00553	ff 71 24	 push	 DWORD PTR [ecx+36]
  00556	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0055b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00561	50		 push	 eax
  00562	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00568	ff 71 20	 push	 DWORD PTR [ecx+32]
  0056b	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2042 : 		lssproto_PME_recv( fd,objindex,graphicsno,x,y,dir,flg,no,cdata);

  00570	50		 push	 eax
  00571	56		 push	 esi
  00572	57		 push	 edi
  00573	53		 push	 ebx
  00574	ff b5 f4 fb ff
	ff		 push	 DWORD PTR _y$1$[ebp]
  0057a	ff b5 f0 fb ff
	ff		 push	 DWORD PTR _x$1$[ebp]
  00580	ff b5 ec fb ff
	ff		 push	 DWORD PTR _graphicsno$1$[ebp]
  00586	ff b5 e8 fb ff
	ff		 push	 DWORD PTR _objindex$1$[ebp]
  0058c	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0058f	e8 00 00 00 00	 call	 ?lssproto_PME_recv@@YAXHHHHHHHHPAD@Z ; lssproto_PME_recv
  00594	83 c4 50	 add	 esp, 80			; 00000050H

; 2043 : 		return 0;

  00597	33 c0		 xor	 eax, eax
  00599	5b		 pop	 ebx
  0059a	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0059b	5e		 pop	 esi
  0059c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0059f	33 cd		 xor	 ecx, ebp
  005a1	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005a6	8b e5		 mov	 esp, ebp
  005a8	5d		 pop	 ebp
  005a9	c3		 ret	 0
$LN11@lssproto_C:

; 2044 : 	}
; 2045 : /*
; 2046 : 882 :   <LI><a name="SC_AB"><font color=blue>servertoclient AB( string data );</font></a><br>
; 2047 : 883 :       ?????????????î??????????î»î ??
; 2048 : 884 :       <dl>
; 2049 : 885 : 	<dt>string data
; 2050 : 886 : 	<dd>îºî«?î ??î¸î?????î§??îºî«?????î¡????????î?????î¡î·?
; 2051 : 887 : 	    ???????????????????????????
; 2052 : 888 : 	    ???î·?î¤???????
; 2053 : 889 : 	    ???????î???î¡????
; 2054 : 890 : 	    <code>?î·?|î±î·?|...</code>î·??î?????
; 2055 : 891 : 	    
; 2056 : 892 : 	    ?î·î¤???????????î????
; 2057 : 893 : 	    <br>
; 2058 : 894 : 	    <code>î¸????|î¡î·(î°??)|????î±|duelpoint|???|??î±?
; 2059 : 895 : 	    </code>
; 2060 : 896 : 	    <br>
; 2061 : 897 : 	    ?????? Nî·??î¡î·????????? 4(N-1)+1î±??
; 2062 : 898 : 	    ??????????????????????????î¼??
; 2063 : 899 : 	    ????????????????î¼?????î¡î·î°???<a
; 2064 : 900 : 	    href="#escaping">?????</a>??????î ?????
; 2065 : 901 : 	    ????0????????1?î¯???????????
; 2066 : 902 : 	    ??î±???????î·?????????î¤?????
; 2067 : 903 : 	    setup.cf?? servernumber=n ?n?î±??î????
; 2068 : 904 : 	    îî??î????î¡î·????????î¶????î·?AB
; 2069 : 905 : 	    ?????î¢î??î¡î·?îºî«??î¡???????????
; 2070 : 906 : 	    ??????î¡????????î¡î·?îºî«?????î?
; 2071 : 907 : 	    2î??î¡????????
; 2072 : 908 : 		
; 2073 : 909 :       </dl>
; 2074 : 910 :       <br>
; 2075 : 911 :       <hr>
; 2076 : 912 :       <br>
; 2077 : */
; 2078 : 
; 2079 : 	if( strcmp( funcname , "AB" ) == 0 ){

  005aa	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02LDKJOMJN@AB@
  005af	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL85@lssproto_C:
  005b5	8a 10		 mov	 dl, BYTE PTR [eax]
  005b7	3a 11		 cmp	 dl, BYTE PTR [ecx]
  005b9	75 1a		 jne	 SHORT $LN86@lssproto_C
  005bb	84 d2		 test	 dl, dl
  005bd	74 12		 je	 SHORT $LN87@lssproto_C
  005bf	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  005c2	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  005c5	75 0e		 jne	 SHORT $LN86@lssproto_C
  005c7	83 c0 02	 add	 eax, 2
  005ca	83 c1 02	 add	 ecx, 2
  005cd	84 d2		 test	 dl, dl
  005cf	75 e4		 jne	 SHORT $LL85@lssproto_C
$LN87@lssproto_C:
  005d1	33 c0		 xor	 eax, eax
  005d3	eb 05		 jmp	 SHORT $LN88@lssproto_C
$LN86@lssproto_C:
  005d5	1b c0		 sbb	 eax, eax
  005d7	83 c8 01	 or	 eax, 1
$LN88@lssproto_C:
  005da	85 c0		 test	 eax, eax
  005dc	75 40		 jne	 SHORT $LN12@lssproto_C

; 2080 : 		char* data;
; 2081 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  005de	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  005e3	ff 70 08	 push	 DWORD PTR [eax+8]
  005e6	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  005eb	50		 push	 eax
  005ec	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  005f1	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  005f7	ff 70 04	 push	 DWORD PTR [eax+4]
  005fa	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2082 : 		lssproto_AB_recv( fd,data);

  005ff	50		 push	 eax
  00600	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00603	e8 00 00 00 00	 call	 ?lssproto_AB_recv@@YAXHPAD@Z ; lssproto_AB_recv
  00608	83 c4 18	 add	 esp, 24			; 00000018H

; 2083 : 		return 0;

  0060b	33 c0		 xor	 eax, eax
  0060d	5b		 pop	 ebx
  0060e	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0060f	5e		 pop	 esi
  00610	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00613	33 cd		 xor	 ecx, ebp
  00615	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0061a	8b e5		 mov	 esp, ebp
  0061c	5d		 pop	 ebp
  0061d	c3		 ret	 0
$LN12@lssproto_C:

; 2084 : 	}
; 2085 : /*
; 2086 : 913 :   <LI><a name="SC_ABI"><font color=blue>servertoclient ABI( int num, string data );</font></a><br>
; 2087 : 914 : 	AB?îîî¢?num ??îî¤??????????î±???????î¼?????
; 2088 : 915 : 	data??î²?AB?????<br>
; 2089 : 916 :       <br>
; 2090 : 917 :       <br>
; 2091 : 918 :       <hr>
; 2092 : 919 :       <br>
; 2093 : 920 : 
; 2094 : */
; 2095 : 
; 2096 : 	if( strcmp( funcname , "ABI" ) == 0 ){

  0061e	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_03KPLGLCFJ@ABI@
  00623	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  00629	0f 1f 80 00 00
	00 00		 npad	 7
$LL89@lssproto_C:
  00630	8a 10		 mov	 dl, BYTE PTR [eax]
  00632	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00634	75 1a		 jne	 SHORT $LN90@lssproto_C
  00636	84 d2		 test	 dl, dl
  00638	74 12		 je	 SHORT $LN91@lssproto_C
  0063a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0063d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00640	75 0e		 jne	 SHORT $LN90@lssproto_C
  00642	83 c0 02	 add	 eax, 2
  00645	83 c1 02	 add	 ecx, 2
  00648	84 d2		 test	 dl, dl
  0064a	75 e4		 jne	 SHORT $LL89@lssproto_C
$LN91@lssproto_C:
  0064c	33 c0		 xor	 eax, eax
  0064e	eb 05		 jmp	 SHORT $LN92@lssproto_C
$LN90@lssproto_C:
  00650	1b c0		 sbb	 eax, eax
  00652	83 c8 01	 or	 eax, 1
$LN92@lssproto_C:
  00655	85 c0		 test	 eax, eax
  00657	75 52		 jne	 SHORT $LN13@lssproto_C

; 2097 : 		int num;
; 2098 : 		char* data;
; 2099 : 		num = lssproto_demkstr_int( lssproto.token_list[2] );

  00659	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0065e	ff 70 08	 push	 DWORD PTR [eax+8]
  00661	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2100 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  00666	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0066c	8b f0		 mov	 esi, eax
  0066e	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00671	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00676	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0067c	50		 push	 eax
  0067d	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00683	ff 71 08	 push	 DWORD PTR [ecx+8]
  00686	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2101 : 		lssproto_ABI_recv( fd,num,data);

  0068b	50		 push	 eax
  0068c	56		 push	 esi
  0068d	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00690	e8 00 00 00 00	 call	 ?lssproto_ABI_recv@@YAXHHPAD@Z ; lssproto_ABI_recv
  00695	83 c4 20	 add	 esp, 32			; 00000020H

; 2102 : 		return 0;

  00698	33 c0		 xor	 eax, eax
  0069a	5b		 pop	 ebx
  0069b	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0069c	5e		 pop	 esi
  0069d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  006a0	33 cd		 xor	 ecx, ebp
  006a2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  006a7	8b e5		 mov	 esp, ebp
  006a9	5d		 pop	 ebp
  006aa	c3		 ret	 0
$LN13@lssproto_C:

; 2103 : 	}
; 2104 : /*
; 2105 : 1011 :     <LI><a name="S2CTK"><font color=blue>servertoclient TK( int index,string message ,int color);<br></font></a>
; 2106 : 1012 :       <dl>
; 2107 : 1013 : 	<dt>index
; 2108 : 1014 : 	<dd>????????????????-1 ?????????î§
; 2109 : 1015 : 	    ?????????????<br>
; 2110 : 1016 : 	<dt>string
; 2111 : 1017 : 	<dd>string ?î ??, "|" ?2???î?????????????
; 2112 : 1018 : 	    ???î°?????2????????î ??î?????2??
; 2113 : 1019 : 	    ??????<a href="#escaping">?????</a>??????
; 2114 : 1020 : 	    ?????????????????????
; 2115 : 1021 : 	    <ul>
; 2116 : 1022 : 	      <li>"P" ???<br>
; 2117 : 1023 : 		  ??????????îî¤??????????????
; 2118 : 1024 : 		  ??????????????????????
; 2119 : 1025 : 		  <pre>
; 2120 : 1026 : 		  "P|?????"
; 2121 : 1027 : 		  </pre>
; 2122 : 1028 : 	      <li>"F"???<br>
; 2123 : 1029 : 	          <pre>
; 2124 : 1030 : 	          F|charaindex|?????
; 2125 : 1031 : 	          </pre>
; 2126 : 1032 : 	          ??î?î°????????îî???charaindex???î??î?
; 2127 : 1033 : 	          ??????î¸î???<br>
; 2128 : 1034 : 	          
; 2129 : 1035 : 	    </ul>
; 2130 : 1036 : 	<dt>color
; 2131 : 1037 : 	<dd>??????î?î?î???
; 2132 : 1038 :       </dl>
; 2133 : 1039 :       <br>
; 2134 : 1040 :       <hr>
; 2135 : 1041 :       <br>
; 2136 : 1042 : 
; 2137 : */
; 2138 : 
; 2139 : 	if( strcmp( funcname , "TK" ) == 0 ){

  006ab	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02HIIGDGEP@TK@
  006b0	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL93@lssproto_C:
  006b6	8a 10		 mov	 dl, BYTE PTR [eax]
  006b8	3a 11		 cmp	 dl, BYTE PTR [ecx]
  006ba	75 1a		 jne	 SHORT $LN94@lssproto_C
  006bc	84 d2		 test	 dl, dl
  006be	74 12		 je	 SHORT $LN95@lssproto_C
  006c0	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  006c3	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  006c6	75 0e		 jne	 SHORT $LN94@lssproto_C
  006c8	83 c0 02	 add	 eax, 2
  006cb	83 c1 02	 add	 ecx, 2
  006ce	84 d2		 test	 dl, dl
  006d0	75 e4		 jne	 SHORT $LL93@lssproto_C
$LN95@lssproto_C:
  006d2	33 c0		 xor	 eax, eax
  006d4	eb 05		 jmp	 SHORT $LN96@lssproto_C
$LN94@lssproto_C:
  006d6	1b c0		 sbb	 eax, eax
  006d8	83 c8 01	 or	 eax, 1
$LN96@lssproto_C:
  006db	85 c0		 test	 eax, eax
  006dd	75 63		 jne	 SHORT $LN14@lssproto_C

; 2140 : 		int index;
; 2141 : 		char* message;
; 2142 : 		int color;
; 2143 : 		index = lssproto_demkstr_int( lssproto.token_list[2] );

  006df	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  006e4	ff 70 08	 push	 DWORD PTR [eax+8]
  006e7	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2144 : 		message = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  006ec	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  006f2	8b f8		 mov	 edi, eax
  006f4	ff 71 0c	 push	 DWORD PTR [ecx+12]
  006f7	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  006fc	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00702	50		 push	 eax
  00703	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00709	ff 71 08	 push	 DWORD PTR [ecx+8]
  0070c	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2145 : 		color = lssproto_demkstr_int( lssproto.token_list[4] );

  00711	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00717	8b f0		 mov	 esi, eax
  00719	ff 71 10	 push	 DWORD PTR [ecx+16]
  0071c	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2146 : 		lssproto_TK_recv( fd,index,message,color);

  00721	50		 push	 eax
  00722	56		 push	 esi
  00723	57		 push	 edi
  00724	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00727	e8 00 00 00 00	 call	 ?lssproto_TK_recv@@YAXHHPADH@Z ; lssproto_TK_recv
  0072c	83 c4 28	 add	 esp, 40			; 00000028H

; 2147 : 		return 0;

  0072f	33 c0		 xor	 eax, eax
  00731	5b		 pop	 ebx
  00732	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00733	5e		 pop	 esi
  00734	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00737	33 cd		 xor	 ecx, ebp
  00739	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0073e	8b e5		 mov	 esp, ebp
  00740	5d		 pop	 ebp
  00741	c3		 ret	 0
$LN14@lssproto_C:

; 2148 : 	}
; 2149 : /*
; 2150 : 1043 :   <LI><a name="SC_MC"><font color=blue>servertoclient MC(int fl , int x1 , int y1 , int x2, int y2, int tilesum, int objsum, int eventsum,string data );<br></font></a>
; 2151 : 1044 :       ??????î·??????????????????????îî¤?????????????????????î«??
; 2152 : 1045 :       ???î???????????M??î????????î¶??M???????????????????????î¸??
; 2153 : 1046 :       <dl>
; 2154 : 1047 : 	<dt>int fl
; 2155 : 1048 : 	<dd>???î±?
; 2156 : 1049 : 	<dt>int x1
; 2157 : 1050 : 	<dd>?î¯X
; 2158 : 1051 : 	<dt>int y1
; 2159 : 1052 : 	<dd>?î¯Y
; 2160 : 1053 : 	<dt>int x2
; 2161 : 1054 : 	<dd>??X
; 2162 : 1055 : 	<dt>int y2
; 2163 : 1056 : 	<dd>??Y
; 2164 : 1057 : 	<dt>int timesum
; 2165 : 1058 : 	<dd>??????????
; 2166 : 1059 : 	<dt>int objsum
; 2167 : 1060 : 	<dd>?????????????
; 2168 : 1061 : 	<dt>int eventsum
; 2169 : 1062 : 	<dd>????????????????????????????????î???????î±î¯??????????î¯??????î¸?????
; 2170 : 1063 : 	<dt>string data
; 2171 : 1064 : 	<dd>????î¡î·î°??????????M?????????î¸????
; 2172 : 1065 : 	
; 2173 : 1066 :       </dl>
; 2174 : 1067 :       <br>
; 2175 : 1068 :       <hr>
; 2176 : 1069 :       <br>
; 2177 : 1070 :       
; 2178 : */
; 2179 : 
; 2180 : 	if( strcmp( funcname , "MC" ) == 0 ){

  00742	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02KDKICELI@MC@
  00747	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0074d	0f 1f 00	 npad	 3
$LL97@lssproto_C:
  00750	8a 10		 mov	 dl, BYTE PTR [eax]
  00752	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00754	75 1a		 jne	 SHORT $LN98@lssproto_C
  00756	84 d2		 test	 dl, dl
  00758	74 12		 je	 SHORT $LN99@lssproto_C
  0075a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0075d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00760	75 0e		 jne	 SHORT $LN98@lssproto_C
  00762	83 c0 02	 add	 eax, 2
  00765	83 c1 02	 add	 ecx, 2
  00768	84 d2		 test	 dl, dl
  0076a	75 e4		 jne	 SHORT $LL97@lssproto_C
$LN99@lssproto_C:
  0076c	33 c0		 xor	 eax, eax
  0076e	eb 05		 jmp	 SHORT $LN100@lssproto_C
$LN98@lssproto_C:
  00770	1b c0		 sbb	 eax, eax
  00772	83 c8 01	 or	 eax, 1
$LN100@lssproto_C:
  00775	85 c0		 test	 eax, eax
  00777	0f 85 0c 01 00
	00		 jne	 $LN15@lssproto_C

; 2181 : 		int fl;
; 2182 : 		int x1;
; 2183 : 		int y1;
; 2184 : 		int x2;
; 2185 : 		int y2;
; 2186 : 		int tilesum;
; 2187 : 		int objsum;
; 2188 : 		int eventsum;
; 2189 : 		char* data;
; 2190 : 		fl = lssproto_demkstr_int( lssproto.token_list[2] );

  0077d	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00782	ff 70 08	 push	 DWORD PTR [eax+8]
  00785	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2191 : 		x1 = lssproto_demkstr_int( lssproto.token_list[3] );

  0078a	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00790	89 85 f4 fb ff
	ff		 mov	 DWORD PTR _fl$1$[ebp], eax
  00796	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00799	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2192 : 		y1 = lssproto_demkstr_int( lssproto.token_list[4] );

  0079e	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  007a4	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _x1$1$[ebp], eax
  007aa	ff 71 10	 push	 DWORD PTR [ecx+16]
  007ad	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2193 : 		x2 = lssproto_demkstr_int( lssproto.token_list[5] );

  007b2	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  007b8	89 85 e4 fb ff
	ff		 mov	 DWORD PTR _y1$1$[ebp], eax
  007be	ff 71 14	 push	 DWORD PTR [ecx+20]
  007c1	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2194 : 		y2 = lssproto_demkstr_int( lssproto.token_list[6] );

  007c6	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  007cc	89 85 f0 fb ff
	ff		 mov	 DWORD PTR _x2$1$[ebp], eax
  007d2	ff 71 18	 push	 DWORD PTR [ecx+24]
  007d5	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2195 : 		tilesum = lssproto_demkstr_int( lssproto.token_list[7] );

  007da	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  007e0	89 85 ec fb ff
	ff		 mov	 DWORD PTR _y2$1$[ebp], eax
  007e6	ff 71 1c	 push	 DWORD PTR [ecx+28]
  007e9	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2196 : 		objsum = lssproto_demkstr_int( lssproto.token_list[8] );

  007ee	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  007f4	89 85 e8 fb ff
	ff		 mov	 DWORD PTR _tilesum$1$[ebp], eax
  007fa	ff 71 20	 push	 DWORD PTR [ecx+32]
  007fd	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2197 : 		eventsum = lssproto_demkstr_int( lssproto.token_list[9] );

  00802	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00808	8b d8		 mov	 ebx, eax
  0080a	ff 71 24	 push	 DWORD PTR [ecx+36]
  0080d	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2198 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[9] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[10] ));

  00812	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00818	8b f8		 mov	 edi, eax
  0081a	ff 71 28	 push	 DWORD PTR [ecx+40]
  0081d	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00822	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00828	50		 push	 eax
  00829	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0082f	ff 71 24	 push	 DWORD PTR [ecx+36]
  00832	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2199 : #ifdef __SKYISLAND
; 2200 : 		extern void SkyIslandSetNo( int fl);
; 2201 : 		SkyIslandSetNo( fl);

  00837	ff b5 f4 fb ff
	ff		 push	 DWORD PTR _fl$1$[ebp]
  0083d	8b f0		 mov	 esi, eax
  0083f	e8 00 00 00 00	 call	 ?SkyIslandSetNo@@YAXH@Z	; SkyIslandSetNo

; 2202 : #endif
; 2203 : 		lssproto_MC_recv( fd,fl,x1,y1,x2,y2,tilesum,objsum,eventsum,data);

  00844	56		 push	 esi
  00845	57		 push	 edi
  00846	53		 push	 ebx
  00847	ff b5 e8 fb ff
	ff		 push	 DWORD PTR _tilesum$1$[ebp]
  0084d	ff b5 ec fb ff
	ff		 push	 DWORD PTR _y2$1$[ebp]
  00853	ff b5 f0 fb ff
	ff		 push	 DWORD PTR _x2$1$[ebp]
  00859	ff b5 e4 fb ff
	ff		 push	 DWORD PTR _y1$1$[ebp]
  0085f	ff b5 f8 fb ff
	ff		 push	 DWORD PTR _x1$1$[ebp]
  00865	ff b5 f4 fb ff
	ff		 push	 DWORD PTR _fl$1$[ebp]
  0086b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0086e	e8 00 00 00 00	 call	 ?lssproto_MC_recv@@YAXHHHHHHHHHPAD@Z ; lssproto_MC_recv
  00873	83 c4 5c	 add	 esp, 92			; 0000005cH

; 2204 : 		return 0;

  00876	33 c0		 xor	 eax, eax
  00878	5b		 pop	 ebx
  00879	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0087a	5e		 pop	 esi
  0087b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0087e	33 cd		 xor	 ecx, ebp
  00880	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00885	8b e5		 mov	 esp, ebp
  00887	5d		 pop	 ebp
  00888	c3		 ret	 0
$LN15@lssproto_C:

; 2205 : 	}
; 2206 : /*
; 2207 : 1091 :   <LI><a name="SC_M"><font color=blue>servertoclient M(int fl , int x1 , int y1 , int x2, int y2 ,string data );<br></font></a>
; 2208 : 1092 :       ?????î??????é????î?????????î«???
; 2209 : 1093 :       ??????????????????????î????????
; 2210 : 1094 :       ????????????î??????????????????
; 2211 : 1095 :       ???î¤??????????î£???ä½??î????î£?????
; 2212 : 1096 :       <br><br>
; 2213 : 1097 :       <dl>
; 2214 : 1098 : 	<dt>int fl
; 2215 : 1099 : 	<dd>?????????î±?
; 2216 : 1100 : 	<dt>int x1
; 2217 : 1101 : 	<dd>?????????îî?îº??î¯X
; 2218 : 1102 : 	<dt>int y1
; 2219 : 1103 : 	<dd>?????????îî?îº??î¯Y
; 2220 : 1104 : 	<dt>int x2
; 2221 : 1105 : 	<dd>?????????îî?îº???X
; 2222 : 1106 : 	<dt>int y2
; 2223 : 1107 : 	<dd>?????????îî?îº???Y
; 2224 : 1108 : 	<dt>string data
; 2225 : 1109 : 	<dd>???????î°??|???|??????|??????????
; 2226 : 1110 : 	    ???????
; 2227 : 1111 : 	    data???????î±??"76,76,77,78,98,90,1,1,1,2"???
; 2228 : 1112 : 	    ???î§???î?îº???????????????????
; 2229 : 1113 : 	    ???î¯????????????????????î®???î´
; 2230 : 1114 : 	    ??î¶??î»?î¡¡î¤??î????î???î¶???îî¤???
; 2231 : 1115 : 	    ???????îî«????????????????????
; 2232 : 1116 : 	    ???????????????????????îî¼?????
; 2233 : 1117 : 	    ??????îºî«????????î°???<a
; 2234 : 1118 : 	    href="#escaping">?????</a>??î§?????
; 2235 : 1119 :       	    ??????????????î???????î±î¯??????????î¯??????î¸?????
; 2236 : 1120 :       </dl>
; 2237 : 1121 :       <br>
; 2238 : 1122 :       <br>
; 2239 : 1123 :       <hr>
; 2240 : 1124 :       <br>
; 2241 : 1125 : 
; 2242 : 1126 : 
; 2243 : 1127 : 
; 2244 : */
; 2245 : 
; 2246 : 	if( strcmp( funcname , "M" ) == 0 ){

  00889	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01PLPBNMEI@M@
  0088e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL101@lssproto_C:
  00894	8a 10		 mov	 dl, BYTE PTR [eax]
  00896	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00898	75 1a		 jne	 SHORT $LN102@lssproto_C
  0089a	84 d2		 test	 dl, dl
  0089c	74 12		 je	 SHORT $LN103@lssproto_C
  0089e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  008a1	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  008a4	75 0e		 jne	 SHORT $LN102@lssproto_C
  008a6	83 c0 02	 add	 eax, 2
  008a9	83 c1 02	 add	 ecx, 2
  008ac	84 d2		 test	 dl, dl
  008ae	75 e4		 jne	 SHORT $LL101@lssproto_C
$LN103@lssproto_C:
  008b0	33 c0		 xor	 eax, eax
  008b2	eb 05		 jmp	 SHORT $LN104@lssproto_C
$LN102@lssproto_C:
  008b4	1b c0		 sbb	 eax, eax
  008b6	83 c8 01	 or	 eax, 1
$LN104@lssproto_C:
  008b9	85 c0		 test	 eax, eax
  008bb	0f 85 a8 00 00
	00		 jne	 $LN16@lssproto_C

; 2247 : 		int fl;
; 2248 : 		int x1;
; 2249 : 		int y1;
; 2250 : 		int x2;
; 2251 : 		int y2;
; 2252 : 		char* data;
; 2253 : 		fl = lssproto_demkstr_int( lssproto.token_list[2] );

  008c1	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  008c6	ff 70 08	 push	 DWORD PTR [eax+8]
  008c9	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2254 : 		x1 = lssproto_demkstr_int( lssproto.token_list[3] );

  008ce	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  008d4	89 85 e4 fb ff
	ff		 mov	 DWORD PTR _fl$1$[ebp], eax
  008da	ff 71 0c	 push	 DWORD PTR [ecx+12]
  008dd	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2255 : 		y1 = lssproto_demkstr_int( lssproto.token_list[4] );

  008e2	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  008e8	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _x1$1$[ebp], eax
  008ee	ff 71 10	 push	 DWORD PTR [ecx+16]
  008f1	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2256 : 		x2 = lssproto_demkstr_int( lssproto.token_list[5] );

  008f6	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  008fc	8b d8		 mov	 ebx, eax
  008fe	ff 71 14	 push	 DWORD PTR [ecx+20]
  00901	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2257 : 		y2 = lssproto_demkstr_int( lssproto.token_list[6] );

  00906	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0090c	8b f8		 mov	 edi, eax
  0090e	ff 71 18	 push	 DWORD PTR [ecx+24]
  00911	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2258 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[6] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[7] ));

  00916	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0091c	8b f0		 mov	 esi, eax
  0091e	ff 71 1c	 push	 DWORD PTR [ecx+28]
  00921	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00926	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0092c	50		 push	 eax
  0092d	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00933	ff 71 18	 push	 DWORD PTR [ecx+24]
  00936	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2259 : 		lssproto_M_recv( fd,fl,x1,y1,x2,y2,data);

  0093b	50		 push	 eax
  0093c	56		 push	 esi
  0093d	57		 push	 edi
  0093e	53		 push	 ebx
  0093f	ff b5 f8 fb ff
	ff		 push	 DWORD PTR _x1$1$[ebp]
  00945	ff b5 e4 fb ff
	ff		 push	 DWORD PTR _fl$1$[ebp]
  0094b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0094e	e8 00 00 00 00	 call	 ?lssproto_M_recv@@YAXHHHHHHPAD@Z ; lssproto_M_recv
  00953	83 c4 40	 add	 esp, 64			; 00000040H

; 2260 : 		return 0;

  00956	33 c0		 xor	 eax, eax
  00958	5b		 pop	 ebx
  00959	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0095a	5e		 pop	 esi
  0095b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0095e	33 cd		 xor	 ecx, ebp
  00960	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00965	8b e5		 mov	 esp, ebp
  00967	5d		 pop	 ebp
  00968	c3		 ret	 0
$LN16@lssproto_C:

; 2261 : 	}
; 2262 : /*
; 2263 : 1135 :   <LI><a name="S2CC"><font color=blue>servertoclient C( string data );<bR></font></a>
; 2264 : 1136 :       (Characters)
; 2265 : 1137 :       ??????? CA ?????????????î??????? C 
; 2266 : 1138 :       ????????????????????????
; 2267 : 1139 :       <br><br>
; 2268 : 1140 :       <dl>
; 2269 : 1141 : 	<dt>string data
; 2270 : 1142 : 	<dd>	  ??????? ???3î?????????????
; 2271 : 1143 : 	    ?????.?????????î²??????î '|'?????
; 2272 : 1144 : 	    ????
; 2273 : 1145 : 
; 2274 : 1146 : 	    <ul>
; 2275 : 1147 : 	      <li>??î ???????????12??î¶?<br>
; 2276 : 1148 : 		  ?????î ??
; 2277 : 1149 : 
; 2278 : 1150 : 		  <code>WHICHTYPE|CHARINDEX|X|Y|DIR|BASEIMG|LEVEL|NAMECOLOR|NAME|SELFTITLE|WALKABLE|HEIGHT|POPUPNAMECOLOR</code>
; 2279 : 1151 : 		  ???????????????????????????<br>
; 2280 : 1152 : 		  
; 2281 : 1153 : 		  WHICHTYPE ????????????????î????
; 2282 : 1154 : 		  ????????????????????î???????<br>
; 2283 : 1155 : 		  <pre>
; 2284 : 1156 : 		typedef enum
; 2285 : 1157 : 		{
; 2286 : 1158 : 		    CHAR_TYPENONE,          ?????
; 2287 : 1159 : 		    CHAR_TYPEPLAYER,        ?????
; 2288 : 1160 : 		    CHAR_TYPEENEMY,         î©
; 2289 : 1161 : 		    CHAR_TYPEPET,           ???
; 2290 : 1162 : 		    CHAR_TYPEDOOR,          ??
; 2291 : 1163 : 		    CHAR_TYPEBOX ,          î­?
; 2292 : 1164 : 		    CHAR_TYPEMSG ,          ?î
; 2293 : 1165 : 		    CHAR_TYPEWARP ,         ??????
; 2294 : 1166 : 		    CHAR_TYPESHOP ,         îº
; 2295 : 1167 : 		    CHAR_TYPEHEALER ,       ????
; 2296 : 1168 : 		    CHAR_TYPEOLDMAN ,       î?
; 2297 : 1169 : 		    CHAR_TYPEROOMADMIN,     îî®îª?
; 2298 : 1170 : 		    CHAR_TYPETOWNPEOPLE,    ?????
; 2299 : 1171 : 		    CHAR_TYPEDENGON,        î?î¢
; 2300 : 1172 : 		    CHAR_TYPEADM,           î?î¢
; 2301 : 1173 : 		    CHAR_TYPETEMPLE,        Temple master
; 2302 : 1174 : 		    CHAR_TYPESTORYTELLER,   ???
; 2303 : 1175 : 		    CHAR_TYPERANKING,       îî®îª?????î¸î???
; 2304 : 1176 : 		    CHAR_TYPEOTHERNPC,      ??î???îî§?????NPC
; 2305 : 1177 : 		    CHAR_TYPEPRINTPASSMAN,  ????????î¸î??NPC
; 2306 : 1178 : 		    CHAR_TYPENPCENEMY,      ?îî©
; 2307 : 1179 : 		    CHAR_TYPEACTION,        ??????î???NPC
; 2308 : 1180 : 		    CHAR_TYPEWINDOWMAN,     ?????î¸î??NPC??????)
; 2309 : 1181 : 		    CHAR_TYPESAVEPOINT,     ???????
; 2310 : 1182 : 		    CHAR_TYPEWINDOWHEALER,  ?????????????
; 2311 : 1183 : 		    CHAR_TYPEITEMSHOP,	    ?îº
; 2312 : 1184 : 		    CHAR_TYPESTONESHOP,	    î·î²?????????
; 2313 : 1185 : 		    CHAR_TYPEDUELRANKING,   DUEL?????NPC
; 2314 : 1186 : 		    CHAR_TYPEWARPMAN,	    ?????NPC
; 2315 : 1187 : 		    CHAR_TYPEEVENT,	    ????NPC
; 2316 : 1188 : 		    CHAR_TYPEMIC,	    ????NPC
; 2317 : 1189 : 		    CHAR_TYPELUCKYMAN,	    ????NPC
; 2318 : 1190 : 		    CHAR_TYPEBUS,	    ??????
; 2319 : 1191 : 		    CHAR_TYPECHARM,	    ????NPC
; 2320 : 1192 : 		    CHAR_TYPENUM,
; 2321 : 1193 : 		}CHAR_TYPE;
; 2322 : 1194 : 		  </pre>
; 2323 : 1195 : 		  
; 2324 : 1196 : 		  ???î???????NPC?î©??????????î
; 2325 : 1197 : 		  ????????îª?????î»??î?????
; 2326 : 1198 : 		  ????????????????î¢?????????
; 2327 : 1199 : 		  ??????????????????????î???
; 2328 : 1200 : 		  ??????????????????????????
; 2329 : 1201 : 		  ??????î¸î??îºî«???îºî«?????????
; 2330 : 1202 : 		  ???????????????????î¸î?????
; 2331 : 1203 : 		  î????î¶??????????????îî®î«???
; 2332 : 1204 : 		  ??????????? SELFTITLE??????????
; 2333 : 1205 : 		  ?????î ????????????????????
; 2334 : 1206 : 		  ?????????????????(CA)???????
; 2335 : 1207 : 		  ??î¸î???CHARINDEX????î ????????î
; 2336 : 1208 : 		  î???î±??BASEIMG?î¸î????î±??LEVEL???
; 2337 : 1209 : 		  ?????(0??î¸î??????î±?NPC???î¸??)
; 2338 : 1210 : 		  WALKABLE?1?????î¯?î­?????????0??î­
; 2339 : 1211 : 		  ???????????HEIGHT????????????
; 2340 : 1212 : 		  ?????îî?
; 2341 : 1213 : 		  
; 2342 : 1214 : 		  ???????î¡î·?î?î???<a href="#escaping">
; 2343 : 1215 : 		  ?????</a>???????????'|'??????
; 2344 : 1216 : 		  î?????????????????????????'
; 2345 : 1217 : 		  |'????î°?????????????î??'|'??
; 2346 : 1218 : 		  ??????????î??îµ??î¡î·?î?î????
; 2347 : 1219 :                   ?????????î ????????î???
; 2348 : 1220 :                   ???????î¶??î?î??î©????????îî
; 2349 : 1221 :                   ??????î¡î·??î??????<br>
; 2350 : 1222 : 		  
; 2351 : 1223 : 	      <Li>??î ???????????6??î¶?<br>
; 2352 : 1224 : 		  ?????î ??
; 2353 : 1225 : 		  <code>INDEX|X|Y|BASEIMG|LEVEL|ITEM1LINEINFO</code>
; 2354 : 1226 : 		  ?ä½î¡¡???????????????îºî«????
; 2355 : 1227 : 		  INDEX?????????????????INDEX????
; 2356 : 1228 : 		  ???????î???î¸????X,Y?????????
; 2357 : 1229 : 		  ???îº?BASEIMG????î±??ITEM1LINEINFO?1?
; 2358 : 1230 : 		  info?î¸î?????îºî«?????????????î 
; 2359 : 1231 : 		  ?î¸î??îºî«?î?îµî¹??????????????
; 2360 : 1232 : 		  ?CA?????ITEM1LINEINFO?<a href="#escape">????
; 2361 : 1233 : 		  ?</a>????????????îµî¹?î¯????î¢î?
; 2362 : 1234 : 
; 2363 : 1235 : 	      <Li>??î ???????????4??î¶?<br>
; 2364 : 1236 : 		  ?????î ??
; 2365 : 1237 : 		  <code>INDEX|X|Y|VALUE</code>
; 2366 : 1238 : 		  ?ä½î¡¡?????????????îºî«????î ???
; 2367 : 1239 : 		  ?????INDEX,X,Y ??????î¯??VALUE ????
; 2368 : 1240 : 		  ?????????????????????îºî«????
; 2369 : 1241 : 	      <li>??î ???????????1??î¶?<br>
; 2370 : 1242 : 		  <code>INDEX</code>
; 2371 : 1243 : 		  ??????C????????
; 2372 : 1244 : 	    </ul>
; 2373 : 1245 :       </dl>
; 2374 : 1246 :       <br>
; 2375 : 1247 :       <br>
; 2376 : 1248 :       <hr>
; 2377 : 1249 :       <br>
; 2378 : 1250 : 
; 2379 : 1251 : 
; 2380 : 1252 :       
; 2381 : */
; 2382 : 
; 2383 : 	if( strcmp( funcname , "C" ) == 0 ){

  00969	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01GFHCPBMG@C@
  0096e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL105@lssproto_C:
  00974	8a 10		 mov	 dl, BYTE PTR [eax]
  00976	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00978	75 1a		 jne	 SHORT $LN106@lssproto_C
  0097a	84 d2		 test	 dl, dl
  0097c	74 12		 je	 SHORT $LN107@lssproto_C
  0097e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00981	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00984	75 0e		 jne	 SHORT $LN106@lssproto_C
  00986	83 c0 02	 add	 eax, 2
  00989	83 c1 02	 add	 ecx, 2
  0098c	84 d2		 test	 dl, dl
  0098e	75 e4		 jne	 SHORT $LL105@lssproto_C
$LN107@lssproto_C:
  00990	33 c0		 xor	 eax, eax
  00992	eb 05		 jmp	 SHORT $LN108@lssproto_C
$LN106@lssproto_C:
  00994	1b c0		 sbb	 eax, eax
  00996	83 c8 01	 or	 eax, 1
$LN108@lssproto_C:
  00999	85 c0		 test	 eax, eax
  0099b	75 40		 jne	 SHORT $LN17@lssproto_C

; 2384 : 		char* data;
; 2385 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  0099d	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  009a2	ff 70 08	 push	 DWORD PTR [eax+8]
  009a5	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  009aa	50		 push	 eax
  009ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  009b0	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  009b6	ff 70 04	 push	 DWORD PTR [eax+4]
  009b9	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2386 : 		lssproto_C_recv( fd,data);

  009be	50		 push	 eax
  009bf	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  009c2	e8 00 00 00 00	 call	 ?lssproto_C_recv@@YAXHPAD@Z ; lssproto_C_recv
  009c7	83 c4 18	 add	 esp, 24			; 00000018H

; 2387 : 		return 0;

  009ca	33 c0		 xor	 eax, eax
  009cc	5b		 pop	 ebx
  009cd	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  009ce	5e		 pop	 esi
  009cf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  009d2	33 cd		 xor	 ecx, ebp
  009d4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  009d9	8b e5		 mov	 esp, ebp
  009db	5d		 pop	 ebp
  009dc	c3		 ret	 0
$LN17@lssproto_C:

; 2388 : 	}
; 2389 : /*
; 2390 : 1253 :   <LI><a name="SC_CA"><font color=blue>servertoclient CA( string data );<br></font></a>
; 2391 : 1254 :       (CharacterAction)
; 2392 : 1255 :       ???îª?????????????î¿î??î¡???
; 2393 : 1256 :       ??????????????îµî«??î???
; 2394 : 1257 :       ?????1?????????î????????????????
; 2395 : 1258 :       ??î?????<br><br>
; 2396 : 1259 : 
; 2397 : 1260 :       <dl>
; 2398 : 1261 : 	<dt>string data
; 2399 : 1262 : 	<dd>CHARINDEX|X|Y|ACTION|PARAM1|PARAM2|PARAM3|PARAM4|....??
; 2400 : 1263 : 	    ?????????????PARAM????????????
; 2401 : 1264 : 	    î¸????????????????????X,Y??îº??
; 2402 : 1265 : 	    ???????????????îº?îî???
; 2403 : 1266 : 	    ??î°?????????????
; 2404 : 1267 : 	    <table border>
; 2405 : 1268 : 	      <tr><td>ACTION</td><td>PARAM1</td><td>PARAM2</td>
; 2406 : 1269 : 	      <td>PARAM3</td><td>PARAM4</td></tr>
; 2407 : 1270 : 	      <tr><td>Stand:0</td><td>îµ?0~7</td><td></td><td></td><td></td></tr>
; 2408 : 1271 : 	      <tr><td>Walk:1</td><td>îµ?0~7</td><td></td><td></td><td></td></tr>
; 2409 : 1272 : 	      <tr><td>Attack:2</td><td>îµ?0~7</td><td></td><td></td><td></td></tr>
; 2410 : 1273 : 	      <tr><td>Throw:3</td><td>îµ?0~7</td><td></td><td></td><td></td></tr>
; 2411 : 1274 : 	      <tr><td>Damage:4</td><td>îµ?0~7</td><td></td><td></td></tr>
; 2412 : 1275 : 	      <tr><td>Dead:5</td><td>îµ?0~7</td><td></td><td></td><td></td></tr>
; 2413 : 1276 : 	      <tr><td>UseMagic:6</td><td>îµ?0~7</td></tr>
; 2414 : 1277 : 	      <tr><td>UseItem:7</td><td>îµ?0~7</td></tr>
; 2415 : 1278 : 	      <tr><td>Effect:8</td><td>îµ?0~7</td><td>?????î±?</td></tr>
; 2416 : 1279 : 	      <tr><td>Down:10 (î??)</td><td>îµ?0~7</td></tr>
; 2417 : 1280 : 	      <tr><td>Sit:11 (??)</td><td>îµ?0~7</td></tr>
; 2418 : 1281 : 	      <tr><td>Hand:12 (î?î ?)</td><td>îµ?0~7</td></tr>
; 2419 : 1282 : 	      <tr><td>Pleasure:13 (??)</td><td>îµ?0~7</td></tr>
; 2420 : 1283 : 	      <tr><td>Angry:14 (î?)</td><td>îµ?0~7</td></tr>
; 2421 : 1284 : 	      <tr><td>Sad:15 (î¼??)</td><td>îµ?0~7</td></tr>
; 2422 : 1285 : 	      <tr><td>Guard:16 (???)</td><td>îµ?0~7</td></tr>
; 2423 : 1286 : 	      <tr><td>actionwalk:17 (??????î?)</td><td>îµ?0~7</td></tr>
; 2424 : 1287 : 	      <tr><td>nod:18 (????)</td><td>îµ?0~7</td></tr>
; 2425 : 1288 : 	      <tr><td>actionstand:19 (???????????)</td><td>îµ?0~7</td></tr>
; 2426 : 1289 : 	      <tr><td>Battle:20 (îî¬îºî«)</td><td>îµ?0~7</td><td>BattleNo(-1 ??î¸îî??</td><td>SideNo</td><td>HelpNo?????????CAî¸î????î?????î¡??</td></tr>
; 2427 : 1290 : 	      <tr><td>Leader:21 (????îºî«)</td><td>îµ?0~7</td><td>0:î¸îî? 1:î¸î</td></tr>
; 2428 : 1291 : 	      <tr><td>Watch:22 (îî¬?î)</td><td>îµ?0~7</td><td>0:î¸îî? 1:î¸î</td></tr>
; 2429 : 1292 : 	      <tr><td>namecolor:23(î¡î·?îîºî«)</td><td>îµ?0~7</td><td>î¡î·?îî±?</td></tr>
; 2430 : 1293 : 	      <tr><td>Turn:30(îµ?î?)</td><td>îµ?0~7</td><td></td></tr>
; 2431 : 1294 : 	      <tr><td>Warp:31(???)</td><td>îµ?0~7</td><td></td></tr>
; 2432 : 1295 : 	      
; 2433 : 1296 : 	</table>
; 2434 : 1297 : 	ACTION?î±?î???î ??î¯?î¸??î ???????
; 2435 : 1298 :   </dl>
; 2436 : 1299 :   <br>
; 2437 : 1300 :   <br>
; 2438 : 1301 :       <hr>
; 2439 : 1302 :       <br>
; 2440 : 1303 : 
; 2441 : 1304 : 
; 2442 : */
; 2443 : 
; 2444 : 	if( strcmp( funcname , "CA" ) == 0 ){

  009dd	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02JLAAGLDA@CA@
  009e2	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL109@lssproto_C:
  009e8	8a 10		 mov	 dl, BYTE PTR [eax]
  009ea	3a 11		 cmp	 dl, BYTE PTR [ecx]
  009ec	75 1a		 jne	 SHORT $LN110@lssproto_C
  009ee	84 d2		 test	 dl, dl
  009f0	74 12		 je	 SHORT $LN111@lssproto_C
  009f2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  009f5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  009f8	75 0e		 jne	 SHORT $LN110@lssproto_C
  009fa	83 c0 02	 add	 eax, 2
  009fd	83 c1 02	 add	 ecx, 2
  00a00	84 d2		 test	 dl, dl
  00a02	75 e4		 jne	 SHORT $LL109@lssproto_C
$LN111@lssproto_C:
  00a04	33 c0		 xor	 eax, eax
  00a06	eb 05		 jmp	 SHORT $LN112@lssproto_C
$LN110@lssproto_C:
  00a08	1b c0		 sbb	 eax, eax
  00a0a	83 c8 01	 or	 eax, 1
$LN112@lssproto_C:
  00a0d	85 c0		 test	 eax, eax
  00a0f	75 40		 jne	 SHORT $LN18@lssproto_C

; 2445 : 		char* data;
; 2446 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  00a11	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00a16	ff 70 08	 push	 DWORD PTR [eax+8]
  00a19	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00a1e	50		 push	 eax
  00a1f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00a24	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00a2a	ff 70 04	 push	 DWORD PTR [eax+4]
  00a2d	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2447 : 		lssproto_CA_recv( fd,data);

  00a32	50		 push	 eax
  00a33	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00a36	e8 00 00 00 00	 call	 ?lssproto_CA_recv@@YAXHPAD@Z ; lssproto_CA_recv
  00a3b	83 c4 18	 add	 esp, 24			; 00000018H

; 2448 : 		return 0;

  00a3e	33 c0		 xor	 eax, eax
  00a40	5b		 pop	 ebx
  00a41	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00a42	5e		 pop	 esi
  00a43	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00a46	33 cd		 xor	 ecx, ebp
  00a48	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00a4d	8b e5		 mov	 esp, ebp
  00a4f	5d		 pop	 ebp
  00a50	c3		 ret	 0
$LN18@lssproto_C:

; 2449 : 	}
; 2450 : /*
; 2451 : 1305 :   <LI><a name="CD"><font color=blue>servertoclient CD( string data );<bR></font></a>
; 2452 : 1306 :       (CharacterDelete)
; 2453 : 1307 : 	data ??????,???î??????????
; 2454 : 1308 : 	î??????î???
; 2455 : 1309 :       ??ID????????????î????????????????
; 2456 : 1310 :       ?î???
; 2457 : 1311 :       <br>
; 2458 : 1312 :       <hr>
; 2459 : 1313 :       <br>
; 2460 : 1314 :   
; 2461 : */
; 2462 : 
; 2463 : 	if( strcmp( funcname , "CD" ) == 0 ){

  00a51	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02OGHHJPHF@CD@
  00a56	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  00a5c	0f 1f 40 00	 npad	 4
$LL113@lssproto_C:
  00a60	8a 10		 mov	 dl, BYTE PTR [eax]
  00a62	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00a64	75 1a		 jne	 SHORT $LN114@lssproto_C
  00a66	84 d2		 test	 dl, dl
  00a68	74 12		 je	 SHORT $LN115@lssproto_C
  00a6a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00a6d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00a70	75 0e		 jne	 SHORT $LN114@lssproto_C
  00a72	83 c0 02	 add	 eax, 2
  00a75	83 c1 02	 add	 ecx, 2
  00a78	84 d2		 test	 dl, dl
  00a7a	75 e4		 jne	 SHORT $LL113@lssproto_C
$LN115@lssproto_C:
  00a7c	33 c0		 xor	 eax, eax
  00a7e	eb 05		 jmp	 SHORT $LN116@lssproto_C
$LN114@lssproto_C:
  00a80	1b c0		 sbb	 eax, eax
  00a82	83 c8 01	 or	 eax, 1
$LN116@lssproto_C:
  00a85	85 c0		 test	 eax, eax
  00a87	75 40		 jne	 SHORT $LN19@lssproto_C

; 2464 : 		char* data;
; 2465 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  00a89	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00a8e	ff 70 08	 push	 DWORD PTR [eax+8]
  00a91	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00a96	50		 push	 eax
  00a97	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00a9c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00aa2	ff 70 04	 push	 DWORD PTR [eax+4]
  00aa5	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2466 : 		lssproto_CD_recv( fd,data);

  00aaa	50		 push	 eax
  00aab	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00aae	e8 00 00 00 00	 call	 ?lssproto_CD_recv@@YAXHPAD@Z ; lssproto_CD_recv
  00ab3	83 c4 18	 add	 esp, 24			; 00000018H

; 2467 : 		return 0;

  00ab6	33 c0		 xor	 eax, eax
  00ab8	5b		 pop	 ebx
  00ab9	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00aba	5e		 pop	 esi
  00abb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00abe	33 cd		 xor	 ecx, ebp
  00ac0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ac5	8b e5		 mov	 esp, ebp
  00ac7	5d		 pop	 ebp
  00ac8	c3		 ret	 0
$LN19@lssproto_C:

; 2468 : 	}
; 2469 : /*
; 2470 : 1315 :   <LI><a name="R"><font color=blue>servertoclient R( string data );<br></font></a>
; 2471 : 1316 :       (Radar)
; 2472 : 1317 :       ?????î ??????????î?????????????î?
; 2473 : 1318 :       ???????????????î­?????????î???
; 2474 : 1319 :       ????10î????????1î¤?????<br><br>
; 2475 : 1320 : 
; 2476 : 1321 :       <dl>
; 2477 : 1322 : 	<dt>string data
; 2478 : 1323 : 	<dd>x ,y, kind ,???î±?'|'????????????
; 2479 : 1324 : 	    ???'|'????????
; 2480 : 1325 : 	    x,y???????îî?îº?kind????????î±????
; 2481 : 1326 : 	    ???????????î¢?î??îî???????????
; 2482 : 1327 : 	    ?î????????î±???î¹???????î??????
; 2483 : 1328 : 	    ?????????
; 2484 : 1329 : 	    <table border>
; 2485 : 1330 : 	      <tr><td>kind?î±</td><td>î ?</td></tr>
; 2486 : 1331 : 	      <tr><td>E</td><td>î©</td></tr>
; 2487 : 1332 : 	      <tr><td>P</td><td>?????</td></tr>
; 2488 : 1333 : 	      <tr><td>S</td><td>?</td></tr>
; 2489 : 1334 : 	      <tr><td>G</td><td>??</td></tr>
; 2490 : 1335 : 	      <tr><td>I</td><td>????(???)</td></tr>
; 2491 : 1336 : 	</table>
; 2492 : 1337 :   </dl>
; 2493 : 1338 :   data??ï¼<code>"12|22|E|13|24|P|14|28|P"</code>
; 2494 : 1339 :   ??î°?????????????
; 2495 : 1340 :   <br>
; 2496 : 1341 :   <br>
; 2497 : 1342 :       <hr>
; 2498 : 1343 :       <br>
; 2499 : 1344 : 
; 2500 : */
; 2501 : 
; 2502 : 	if( strcmp( funcname , "R" ) == 0 ){

  00ac9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01DGKLNCNG@R@
  00ace	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL117@lssproto_C:
  00ad4	8a 10		 mov	 dl, BYTE PTR [eax]
  00ad6	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00ad8	75 1a		 jne	 SHORT $LN118@lssproto_C
  00ada	84 d2		 test	 dl, dl
  00adc	74 12		 je	 SHORT $LN119@lssproto_C
  00ade	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00ae1	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00ae4	75 0e		 jne	 SHORT $LN118@lssproto_C
  00ae6	83 c0 02	 add	 eax, 2
  00ae9	83 c1 02	 add	 ecx, 2
  00aec	84 d2		 test	 dl, dl
  00aee	75 e4		 jne	 SHORT $LL117@lssproto_C
$LN119@lssproto_C:
  00af0	33 c0		 xor	 eax, eax
  00af2	eb 05		 jmp	 SHORT $LN120@lssproto_C
$LN118@lssproto_C:
  00af4	1b c0		 sbb	 eax, eax
  00af6	83 c8 01	 or	 eax, 1
$LN120@lssproto_C:
  00af9	85 c0		 test	 eax, eax
  00afb	75 40		 jne	 SHORT $LN20@lssproto_C

; 2503 : 		char* data;
; 2504 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  00afd	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00b02	ff 70 08	 push	 DWORD PTR [eax+8]
  00b05	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00b0a	50		 push	 eax
  00b0b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00b10	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00b16	ff 70 04	 push	 DWORD PTR [eax+4]
  00b19	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2505 : 		lssproto_R_recv( fd,data);

  00b1e	50		 push	 eax
  00b1f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00b22	e8 00 00 00 00	 call	 ?lssproto_R_recv@@YAXHPAD@Z ; lssproto_R_recv
  00b27	83 c4 18	 add	 esp, 24			; 00000018H

; 2506 : 		return 0;

  00b2a	33 c0		 xor	 eax, eax
  00b2c	5b		 pop	 ebx
  00b2d	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00b2e	5e		 pop	 esi
  00b2f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00b32	33 cd		 xor	 ecx, ebp
  00b34	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00b39	8b e5		 mov	 esp, ebp
  00b3b	5d		 pop	 ebp
  00b3c	c3		 ret	 0
$LN20@lssproto_C:

; 2507 : 	}
; 2508 : /*
; 2509 : 1369 :   <LI><a name="SC_S"><font color=blue>servertoclient S( string data );<br></font></a>
; 2510 : 1370 :       (Status)
; 2511 : 1371 :       ???????????î???
; 2512 : 1372 :       ???? ??????î°?(?î°?)î ? ?????????????
; 2513 : 1373 :       1î°?????????????î¤??î ??2î°????????
; 2514 : 1374 :       î ???????????????????î ??'|'?????????
; 2515 : 1375 :       2??????????î ?????<br>
; 2516 : 1376 :       <br>
; 2517 : 1377 :       <UL>
; 2518 : 1378 : 	<LI>P î»?????<br><br>
; 2519 : 1379 : 	    kubun hp maxhp mp maxmp str tough exp maxexp exp 
; 2520 : 1380 : 	    level attackpower deffencepower 
; 2521 : 1381 : 	    fixdex fixcharm fixluck fixfireat fixwaterat fixearthat fixwindat
; 2522 : 1382 : 	    gold î????
; 2523 : 1383 : 	    î??index î¡î· î?î? <br>
; 2524 : 1384 : 
; 2525 : 1385 : 	    ????? '|' ??????î¡î·?î?î???
; 2526 : 1386 : 	    <a href="#escaping">?????</a>?????
; 2527 : 1387 : 	    ??î ????????î­î????<br>
; 2528 : 1388 : 	    ?????î±??????<br>
; 2529 : 1389 : 	    kubun ???î¼?????î·???????î?
; 2530 : 1390 : 	    ??î¯???????????????????????î±?î¼???î??????
; 2531 : 1391 : 	   ?????????hp?Maxhp?kubun ????????î???????<br>
; 2532 : 1392 : 	    <table border>
; 2533 : 1393 : 	      <tr><td>kunun</td><td>int</td></tr>
; 2534 : 1394 : 	      <tr><td>Hp(î?)hp</td><td>int</td></tr>
; 2535 : 1395 : 	      <tr><td>MaxHp</td><td>int</td></tr>
; 2536 : 1396 : 	      <tr><td>Mp(î£î???)</td><td>int</td></tr>
; 2537 : 1397 : 	      <tr><td>MaxMp</td><td>int</td></tr>
; 2538 : 1398 : 	      <tr><td>Vital(î?)</td><td>int</td></tr>
; 2539 : 1399 : 	      <tr><td>Str(??)</td><td>int</td></tr>
; 2540 : 1400 : 	      <tr><td>Tough(î°î?)</td><td>int</td></tr>
; 2541 : 1401 : 	      <tr><td>Dex(î??)</td><td>int</td></tr>
; 2542 : 1402 : 	      <tr><td>Exp(??î±)exp</td><td>int</td></tr>
; 2543 : 1403 : 	      <tr><td>MaxExp(??????î±)</td><td>int</td></tr>
; 2544 : 1404 : 	      <tr><td>Level(???)</td><td>int</td></tr>
; 2545 : 1405 : 	      <tr><td>Attack(???)</td><td>int</td></tr>
; 2546 : 1406 :      	      <tr><td>Defense(îî?)</td><td>int</td></tr>
; 2547 : 1407 : 	      <tr><td>fQuick(?î·î??)</td><td>int</td></tr>
; 2548 : 1408 : 	      <tr><td>fCharm(î º?)</td><td>int</td></tr>
; 2549 : 1409 : 	      <tr><td>fLuck(?)</td><td>int</td></tr>
; 2550 : 1410 : 	      <tr><td>fEarth(ä½)fixearthat</td><td>int</td></tr>
; 2551 : 1411 : 	      <tr><td>fWater(?)</td><td>int</td></tr>
; 2552 : 1412 : 	      <tr><td>fFire(?)</td><td>int</td></tr>
; 2553 : 1413 : 	      <tr><td>fWid(?)fixwindat</td><td>int</td></tr>
; 2554 : 1414 : 	      <tr><td>Gold(??)</td><td>int</td></tr>
; 2555 : 1415 : 	      <tr><td>î??index</td><td>int</td></tr>
; 2556 : 1416 : 	      <tr><td>????????</td><td>int</td></tr>
; 2557 : 1417 : 	      <tr><td>î¡î·</td><td>î°??</td></tr>
; 2558 : 1418 : 	      <tr><td>î?î?</td><td>î°??</td></tr>
; 2559 : 1419 : 	    </table>
; 2560 : 1420 : 	    ?î?( char ?î¹??????? )<br>
; 2561 : 1421 : 	    <code>
; 2562 : 1422 : 	    P10|20|10|20|10|10|10|1|2|13|13|1|100|10|???|abc|def
; 2563 : 1423 : 	    </code>
; 2564 : 1424 : 	<br><br>
; 2565 : 1425 : 	<li>C ?î³<br><br>
; 2566 : 1426 : 	    floor maxx maxy x y<br>
; 2567 : 1427 : 	    ?  | ??î?????<br>
; 2568 : 1428 : 	    ?î?( char ?î¹??????? )<br>
; 2569 : 1429 : 	    <code>
; 2570 : 1430 : 	    C1024|100|100|10|20
; 2571 : 1431 : 	    </code>
; 2572 : 1432 : 	    î¯?????????ID1024, ???100x100 X 10,Y 20???
; 2573 : 1433 : 	    ??????????????î ??????????????
; 2574 : 1434 : 	    ????????î³????????î²???????????
; 2575 : 1435 : 	    ??????????î????????î ??îº??????
; 2576 : 1436 : 	    ??????????î¿???î®î¸?????????????
; 2577 : 1437 : 	    ?????????????î??î±??î??????????
; 2578 : 1438 : 	    
; 2579 : 1439 : 
; 2580 : 1440 : 	<br><br>
; 2581 : 1441 : 	<LI>I î»????<br><br>
; 2582 : 1442 : 	    (????1)|(????2)...(????n)<br>
; 2583 : 1443 : 	    ?????î ?????îµî¹???????
; 2584 : 1444 : 	    ?????????????????6???????????
; 2585 : 1445 : 	    ?î???????????î ???<br>
; 2586 : 1446 : 	    <br>
; 2587 : 1447 : 	    î¡î·|î¡î·2|????|?????îî¡|???î±?|î¸??îî¶?|î¸?îî§|???????|????<br>
; 2588 : 1448 : 	    <br>
; 2589 : 1449 : 	    <ul>
; 2590 : 1450 : 	      <li>????î¡?îî????îî®î«?î?????
; 2591 : 1451 : 	      <li>î¡î·2?îî?????????????î??î¼??î?
; 2592 : 1452 : 		  ?????????????2???î¼????
; 2593 : 1453 : 	      <li>?????î¡î·?î?î???î¸??
; 2594 : 1454 : 	      <li>?????îî¡?
; 2595 : 1455 : 	      <li>???î±?????î±??
; 2596 : 1456 : 	      <li>î¸??îî¶??????????????î¸??????î??î¼?????
; 2597 : 1457 : 	          ????????????????î???????<br>
; 2598 : 1458 : 	          <pre>
; 2599 : 1459 : 			typedef enum
; 2600 : 1460 : 			{
; 2601 : 1461 : 				ITEM_FIELD_ALL,			????î¶??î¸??
; 2602 : 1462 : 				ITEM_FIELD_BATTLE,		îî¬???
; 2603 : 1463 : 				ITEM_FIELD_MAP,			î­î¹???î¯??
; 2604 : 1464 : 
; 2605 : 1465 : 			}ITEM_FIELDTYPE;
; 2606 : 1466 : 	          </pre>
; 2607 : 1467 : 	          <br>
; 2608 : 1468 : 	      <li>î¸?îî§??????????î¸??????î??îî§?î¼?????
; 2609 : 1469 : 	          ????????????î???????
; 2610 : 1470 : 	          <pre>
; 2611 : 1471 : 			typedef enum
; 2612 : 1472 : 			{
; 2613 : 1473 : 				ITEM_TARGET_MYSELF,		îî¤??
; 2614 : 1474 : 				ITEM_TARGET_OTHER,		î?î·?îî¤??)
; 2615 : 1475 : 				ITEM_TARGET_ALLMYSIDE,		î ¸îµî»î
; 2616 : 1476 : 				ITEM_TARGET_ALLOTHERSIDE,	?îîªî»î
; 2617 : 1477 : 				ITEM_TARGET_ALL,		î»?
; 2618 : 1478 : 			}ITEM_TARGETTYPE;
; 2619 : 1479 : 		</pre>
; 2620 : 1480 :   	        <font size=+1>?????100?î±????????î?îî§????</font><br>
; 2621 : 1481 : 	      <li>??????????????î¯?î?????îî????
; 2622 : 1482 : 	      <li>?????î???????î????????î?????î­??<br>
; 2623 : 1483 : 	          <table border=1>
; 2624 : 1484 : 		    <tr><td>0bit?</td><td>????????î?î???????????î?î????????î?????</td></tr>
; 2625 : 1485 : 		    <tr><td>1Bit?</td><td>????????îî???????</td></tr>
; 2626 : 1486 : 		    <tr><td>2Bit?</td><td>??????????????1????????</td></tr>
; 2627 : 1487 : 		  </table>
; 2628 : 1488 : 		<br>
; 2629 : 1489 : 		<br>
; 2630 : 1490 : 	    </ul>
; 2631 : 1491 : 	    <br>
; 2632 : 1492 : 	    ??????<a href="#escaping">?????</a>???<br>
; 2633 : 1493 : 	    ?î?( char ?î¹??????? )<br>
; 2634 : 1494 : 	    <code>
; 2635 : 1495 : 	    I?? ? î|str+2|1|??\|??|10|2|0
; 2636 : 1496 : 	    </code>
; 2637 : 1497 : 	    ?????î±??î ¸??î?î±?
; 2638 : 1498 : 	    <table border>
; 2639 : 1499 : 	      <tr><td>1</td><td>????A</td></tr>
; 2640 : 1500 : 	      <tr><td>2</td><td>????B</td></tr>	      
; 2641 : 1501 : 	      <tr><td>3</td><td>????C</td></tr>
; 2642 : 1502 : 	      <tr><td>4</td><td>????D</td></tr>
; 2643 : 1503 : 	    </table>
; 2644 : 1504 : 	    ???????????î¸????î¤??????5???????
; 2645 : 1505 : 	    ????????î ?????î¿î??î??????
; 2646 : 1506 : 
; 2647 : 1507 : 	<br><br>
; 2648 : 1508 : 	<LI>S î»???<br><br>
; 2649 : 1509 : 	    (???0)|(???1)|(???2) ... (???n)<br>
; 2650 : 1510 : 	    î??î¯???????????î«????î¤??î?????
; 2651 : 1511 : 	    ?????? ||| ????????
; 2652 : 1512 : 	    ??????î ???<br>
; 2653 : 1513 : 	    ????î????|???<br>
; 2654 : 1514 : 	    ????<br>
; 2655 : 1515 : 	    ?î?( char ?î¹??????? )<br>
; 2656 : 1516 : 	    <code>
; 2657 : 1517 : 	    S10|2|20|2|||
; 2658 : 1518 : 	    </code>	    
; 2659 : 1519 : 
; 2660 : 1520 : 	<br><br>
; 2661 : 1521 : 	<LI>T î?<br><br>
; 2662 : 1522 : 	    (î?0)|(î?1)|(î?2) ... (î?n)<br><br>
; 2663 : 1523 : 	    î?????????î¶?? '|' ??î·??????î·???
; 2664 : 1524 : 	    ??î????????????????????î«??î¤?î
; 2665 : 1525 : 	    ???<br>
; 2666 : 1526 : 	    ????????î ???<br>
; 2667 : 1527 : 	    î¡î·<br>
; 2668 : 1528 : 	    ??????<br>
; 2669 : 1529 : 	    ?î?( ?????? char ?î¹???????? )<br>
; 2670 : 1530 : 	    <code>
; 2671 : 1531 : 	    T??|?????
; 2672 : 1532 : 	    </code>
; 2673 : 1533 : 	    ???<a href="#escaping">?????</a>???<br>
; 2674 : 1534 : 
; 2675 : 1535 : 	<br>
; 2676 : 1536 : 	<LI>M ?î¤?????<br><br>
; 2677 : 1537 : 	    ????????????????îî¦?î??????(??
; 2678 : 1538 : 	    î±)????????(?î«î±??)?????????????
; 2679 : 1539 : 	    ?î?????????î»?????????î???????
; 2680 : 1540 : 	    ??????????î¡î?î¸?????????î?HP ,
; 2681 : 1541 : 	    MP,EXP?î±?????????????î??????????
; 2682 : 1542 : 	    ?????M????????2î°?????î¬??????HP?
; 2683 : 1543 : 	    ??î± , î¬î±?????MP?î¬î ?????EXP????
; 2684 : 1544 : 	    ????î??????
; 2685 : 1545 : 	    <code>
; 2686 : 1546 : 	    M54|210|8944909
; 2687 : 1547 : 	    </code>
; 2688 : 1548 : 	    ?????HP???î±?54?MP???î±?210???î±?8944909
; 2689 : 1549 : 	    ???????????3î??î?î?îî????î???
; 2690 : 1550 : 	    ??î??????????????????M???????
; 2691 : 1551 : 	    ??P?????î»???????î???????????î­
; 2692 : 1552 : 	    ????????î¸?????????????î¸?????î³
; 2693 : 1553 : 	    ????
; 2694 : 1554 : 	    
; 2695 : 1555 : 	    <br><br>
; 2696 : 1556 :         <li>D ????ID<br><br>
; 2697 : 1557 : 	    ??????????????index??????????
; 2698 : 1558 : 	    <code>D1000|912766409</code>????????
; 2699 : 1559 : 	<br><br>
; 2700 : 1560 : 	<li>E ???????????)|(î¯?)<br><br>
; 2701 : 1561 : 	    ?????????î??????n/100<br>
; 2702 : 1562 : 	    ???????????î±??????????îî???+1???????????????îî«???
; 2703 : 1563 : 	    ????î¯??î±???????????
; 2704 : 1564 : 	    ???????????????????????????î«????
; 2705 : 1565 : 	    
; 2706 : 1566 : 	<br><br>
; 2707 : 1567 : 	<li>J0 ?J6 î¸??î£î?î ?<br><br>
; 2708 : 1568 : 	    î¸??î£î?î ???î???<br>
; 2709 : 1569 : 	    0 ?6 ???????????î???î??????????î???îª?î·?î??îî?
; 2710 : 1570 : 	    ???îî????î??????î???î»???î???îºî«???<br>
; 2711 : 1571 : 	    <code>J0|kubun|mp|field|target|name|comment</code><br>
; 2712 : 1572 : 	    ????????????????<br>
; 2713 : 1573 : 	    kubun ????????î¡??????î¡??????????????????????
; 2714 : 1574 : 	    mp?îî???î¸??<br>
; 2715 : 1575 : 	    field???î¶??î¸???????????????î???????<br>
; 2716 : 1576 : 	    <pre>
; 2717 : 1577 : 		typedef enum
; 2718 : 1578 : 		{
; 2719 : 1579 : 			MAGIC_FIELD_ALL,		????î¶??î¸??
; 2720 : 1580 : 			MAGIC_FIELD_BATTLE,		îî¬???
; 2721 : 1581 : 			MAGIC_FIELD_MAP,		î­î¹???î¯??
; 2722 : 1582 : 			
; 2723 : 1583 : 		}MAGIC_FIELDTYPE;
; 2724 : 1584 : 	    </pre>
; 2725 : 1585 : 	    target????îî§?î????????????????î???????<br>
; 2726 : 1586 : 	    <pre>
; 2727 : 1587 : 		typedef enum
; 2728 : 1588 : 		{
; 2729 : 1589 : 			MAGIC_TARGET_MYSELF,		îî¤??
; 2730 : 1590 : 			MAGIC_TARGET_OTHER,		î?î·?îî¤??)
; 2731 : 1591 : 			MAGIC_TARGET_ALLMYSIDE,		î ¸îµî»î
; 2732 : 1592 : 			MAGIC_TARGET_ALLOTHERSIDE,	?îîªî»î
; 2733 : 1593 : 			MAGIC_TARGET_ALL,		î»?
; 2734 : 1594 : 			MAGIC_TARGET_NONE,		î?î±î¶î????î ¡??????
; 2735 : 1595 : 			MAGIC_TARGET_OTHERWITHOUTMYSELF,î?î·?îî¤????)
; 2736 : 1596 : 			MAGIC_TARGET_WITHOUTMYSELFANDPET, îî¤??????
; 2737 : 1597 : 			MAGIC_TARGET_WHOLEOTHERSIDE,    îîµ????î»î
; 2738 : 1598 : 		}MAGIC_TARGETTYPE;
; 2739 : 1599 : 	    </pre>
; 2740 : 1600 : 	    <font size=+1>?????100?î±????????î?îî§????</font><br>
; 2741 : 1601 : 	    <br>
; 2742 : 1602 : 	    name?î£îî¡?<br>
; 2743 : 1603 : 	    comment???î£î?îî¡?<br>
; 2744 : 1604 : 	<br>
; 2745 : 1605 : 	<br>
; 2746 : 1606 : 	<li>N0 ? N3 ????????<br><br>
; 2747 : 1607 : 	    ????????î·?îºî«??î???<br>
; 2748 : 1608 : 	    <code>N0|kubun|level|charaindex|maxhp|hp|mp|name</code>
; 2749 : 1609 : 	    <br>
; 2750 : 1610 : 	    kubun ????????î¡??????î¡?????????????????î»??????<br>
; 2751 : 1611 : 	    2?î¯??????????????????????1bit ? level 2bit ?charaindex???
; 2752 : 1612 : 	    ??î????<br>
; 2753 : 1613 : 	    charaindex ????charaindex<br>
; 2754 : 1614 : 	    level???î·?????<br>
; 2755 : 1615 : 	    maxhp???î·?MAXHP<br>
; 2756 : 1616 : 	    hp???î·????HP<br>
; 2757 : 1617 : 	    mp???î·???<br>
; 2758 : 1618 : 	    name ???î·?î¡î·?<br>
; 2759 : 1619 : 	<br><br>
; 2760 : 1620 : 	
; 2761 : 1621 : 	<LI>K0?K4 ???????<br><br>
; 2762 : 1622 : 	    hp maxhp mp maxmp str tough exp 
; 2763 : 1623 : 	    level attackpower deffencepower 
; 2764 : 1624 : 	    fixdex fixcharm fixluck fixfireat fixwaterat fixearthat fixwindat
; 2765 : 1625 : 	    î¡î· status<br>
; 2766 : 1626 : 	    K???0?4?îî?????????îî?????
; 2767 : 1627 : 	    ?????????0???????????î¡??????
; 2768 : 1628 : 	    ??î¶???????1??î»??????
; 2769 : 1629 : 	    2?î¯??????????????????????1bit ? hp  2bit ?maxhp???
; 2770 : 1630 : 	    ??î????<br>
; 2771 : 1631 : 	    ????? '|' ??????î¡î·?î?î???
; 2772 : 1632 : 	    <a href="#escaping">?????</a>?????
; 2773 : 1633 : 	    ??î ????????î­î????<br>
; 2774 : 1634 : 	    ?????î±??????
; 2775 : 1635 : 	    <table border>
; 2776 : 1636 : 	      <tr><td>No.(î±?)</td><td>int</td></tr>
; 2777 : 1637 : 	      <tr><td>islive(î?)</td><td>int</td></tr>
; 2778 : 1638 : 	      <tr><td>GRA(??î±?)</td><td>int</td></tr>
; 2779 : 1639 : 	      <tr><td>Hp(î??)</td><td>int</td></tr>
; 2780 : 1640 : 	      <tr><td>MaxHp(?î«î??)</td><td>int</td></tr>
; 2781 : 1641 : 	      <tr><td>Mp</td><td>int</td></tr>
; 2782 : 1642 : 	      <tr><td>MapMp</td><td>int</td></tr>
; 2783 : 1643 : 	      <tr><td>Exp(??î±)</td><td>int</td></tr>
; 2784 : 1644 : 	      <tr><td>MaxExp(??????î±)</td><td>int</td></tr>
; 2785 : 1645 : 	      <tr><td>Level(???)</td><td>int</td></tr>
; 2786 : 1646 : 	      <tr><td>Attack(???)</td><td>int</td></tr>
; 2787 : 1647 : 	      <tr><td>Defense(îî?)</td><td>int</td></tr>
; 2788 : 1648 : 	      <tr><td>Quick(î??)</td><td>int</td></tr>
; 2789 : 1649 : 	      <tr><td>Ai(?î¦î)</td><td>int</td></tr>
; 2790 : 1650 : 	      <tr><td>fEarth(ä½)</td><td>int</td></tr>
; 2791 : 1651 : 	      <tr><td>fWater(?)</td><td>int</td></tr>
; 2792 : 1652 : 	      <tr><td>fFire(?)</td><td>int</td></tr>
; 2793 : 1653 : 	      <tr><td>fWid(?)</td><td>int</td></tr>
; 2794 : 1654 : 	      <tr><td>Slot(?î«î·î¢?)</td><td>int</td></tr>
; 2795 : 1655 : 	      <tr><td>î¡î·î??????</td><td>int</td></tr>
; 2796 : 1656 : 	      <tr><td>î¡î·</td><td>î°??</td></tr>
; 2797 : 1657 : 	      <tr><td>???????î¡</td><td>î°??</td></tr>
; 2798 : 1658 : 	    </table>
; 2799 : 1659 : 	    <br>
; 2800 : 1660 : 	    î¡î·î???????????????î¡î·?î???????????????
; 2801 : 1661 : 	    1 ??î?ï¼¯ï¼«????î?î?????<br>
; 2802 : 1662 : 	    <br>
; 2803 : 1663 : 	    <br>
; 2804 : 1664 : 	    <br>
; 2805 : 1665 : 	    ?î?( char ?î¹??????? )<br>
; 2806 : 1666 : 	    <code>
; 2807 : 1667 : 	    P10|20|10|20|10|10|10|1|2|13|13|1|100|10|???|PC
; 2808 : 1668 : 	    </code>
; 2809 : 1669 : 	    
; 2810 : 1670 : 	<br><br>
; 2811 : 1671 : 
; 2812 : 1672 : 	<LI>W0?W4 ????????<br><br>
; 2813 : 1673 : 	  <code>W0|skillid|field|target|name|comment| x 7</code><br>
; 2814 : 1674 : 	  W0 ? W4 ??????????î??????<br>
; 2815 : 1675 : 	  petskillid ????????î±??pet_skillinfo.h?î???????<br>
; 2816 : 1676 : 	  field ????????î¸??????????????????î???????<br>
; 2817 : 1677 : 	  <pre>
; 2818 : 1678 : 		typedef enum
; 2819 : 1679 : 		{
; 2820 : 1680 : 			PETSKILL_FIELD_ALL,		????î¶??î¸??
; 2821 : 1681 : 			PETSKILL_FIELD_BATTLE,		îî¬???
; 2822 : 1682 : 			PETSKILL_FIELD_MAP,		î­î¹???î¯??
; 2823 : 1683 : 
; 2824 : 1684 : 		}PETSKILL_FIELDTYPE;
; 2825 : 1685 : 	  
; 2826 : 1686 : 	  </pre>
; 2827 : 1687 : 	  target ?????îî§????????????????????î???????<br>
; 2828 : 1688 : 	  <pre>
; 2829 : 1689 : 		typedef enum
; 2830 : 1690 : 		{
; 2831 : 1691 : 			PETSKILL_TARGET_MYSELF,		îî¤??
; 2832 : 1692 : 			PETSKILL_TARGET_OTHER,		î?î·?îî¤??)
; 2833 : 1693 : 			PETSKILL_TARGET_ALLMYSIDE,	î ¸îµî»î
; 2834 : 1694 : 			PETSKILL_TARGET_ALLOTHERSIDE,	?îîªî»î
; 2835 : 1695 : 			PETSKILL_TARGET_ALL,		î»?
; 2836 : 1696 : 			PETSKILL_TARGET_NONE,		î?î±î¶î????î ¡??????
; 2837 : 1697 : 			PETSKILL_TARGET_OTHERWITHOUTMYSELF,î?î·?îî¤????) 
; 2838 : 1698 : 			PETSKILL_TARGET_WITHOUTMYSELFANDPET, îî¤??????
; 2839 : 1699 : 		}PETSKILL_TARGETTYPE;
; 2840 : 1700 : 	  </pre>
; 2841 : 1701 : 	  <br>
; 2842 : 1702 : 	  name ???î¡î·?<br>
; 2843 : 1703 : 	  comment?????î??îî¡?<br>
; 2844 : 1704 : 	  target|name|comment| ?????î¤??????????
; 2845 : 1705 : 	  ?????????î????î?????"|"???î·??î¶?
; 2846 : 1706 : 	  ???????????î¸î????<br>
; 2847 : 1707 : 	  <br><br>
; 2848 : 1708 : 	  
; 2849 : 1709 :       </ul>
; 2850 : 1710 : 	  
; 2851 : 1711 :       <br>
; 2852 : 1712 :       <hr>
; 2853 : 1713 :       <br>
; 2854 : 1714 : 
; 2855 : */
; 2856 : 
; 2857 : 	if( strcmp( funcname , "S" ) == 0 ){

  00b3d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01CPLAODJH@S@
  00b42	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL121@lssproto_C:
  00b48	8a 10		 mov	 dl, BYTE PTR [eax]
  00b4a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00b4c	75 1a		 jne	 SHORT $LN122@lssproto_C
  00b4e	84 d2		 test	 dl, dl
  00b50	74 12		 je	 SHORT $LN123@lssproto_C
  00b52	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00b55	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00b58	75 0e		 jne	 SHORT $LN122@lssproto_C
  00b5a	83 c0 02	 add	 eax, 2
  00b5d	83 c1 02	 add	 ecx, 2
  00b60	84 d2		 test	 dl, dl
  00b62	75 e4		 jne	 SHORT $LL121@lssproto_C
$LN123@lssproto_C:
  00b64	33 c0		 xor	 eax, eax
  00b66	eb 05		 jmp	 SHORT $LN124@lssproto_C
$LN122@lssproto_C:
  00b68	1b c0		 sbb	 eax, eax
  00b6a	83 c8 01	 or	 eax, 1
$LN124@lssproto_C:
  00b6d	85 c0		 test	 eax, eax
  00b6f	75 40		 jne	 SHORT $LN21@lssproto_C

; 2858 : 		char* data;
; 2859 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  00b71	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00b76	ff 70 08	 push	 DWORD PTR [eax+8]
  00b79	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00b7e	50		 push	 eax
  00b7f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00b84	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00b8a	ff 70 04	 push	 DWORD PTR [eax+4]
  00b8d	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2860 : 		lssproto_S_recv( fd,data);

  00b92	50		 push	 eax
  00b93	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00b96	e8 00 00 00 00	 call	 ?lssproto_S_recv@@YAXHPAD@Z ; lssproto_S_recv
  00b9b	83 c4 18	 add	 esp, 24			; 00000018H

; 2861 : 		return 0;

  00b9e	33 c0		 xor	 eax, eax
  00ba0	5b		 pop	 ebx
  00ba1	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00ba2	5e		 pop	 esi
  00ba3	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00ba6	33 cd		 xor	 ecx, ebp
  00ba8	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00bad	8b e5		 mov	 esp, ebp
  00baf	5d		 pop	 ebp
  00bb0	c3		 ret	 0
$LN21@lssproto_C:

; 2862 : 	}
; 2863 : /*
; 2864 : 1715 :   <LI><a name="D"><font color=blue>servertoclient D( int category , int dx , int dy , string data );<br></font></a>
; 2865 : 1716 :       (Display)
; 2866 : 1717 :       ?î¡¡???î¸î??î??<br><br>
; 2867 : 1718 : 
; 2868 : 1719 :       <dl>
; 2869 : 1720 : 	<dt>int category
; 2870 : 1721 : 	<dd>??î¸î????
; 2871 : 1722 : 	    <table border>
; 2872 : 1723 : 	      <tr><td>î±</td><td>î ?</td></tr>
; 2873 : 1724 : 	      <tr><td>1</td><td>îî¤???????????data?î°?
; 2874 : 1725 : 		  ?????î±?</td></tr>
; 2875 : 1726 : 		  <tr><td>2</td><td>îî¤?????????data?î°???
; 2876 : 1727 : 		      ???î±</td></tr>
; 2877 : 1728 : 		</table>
; 2878 : 1729 : 	<dt>int dx
; 2879 : 1730 : 	<dd>?????????????î?îºX??î§î«???????îî
; 2880 : 1731 : 	    ???îº??????????î±??î­?î­î??îº??î«??
; 2881 : 1732 : 	    î¼????
; 2882 : 1733 : 	<dt>int dy
; 2883 : 1734 : 	<dd>?î?îºY
; 2884 : 1735 : 	<dt>string data 
; 2885 : 1736 : 	<dd>î¸î??î ??î ??category????????
; 2886 : 1737 : 	    ??î°???<a href="#escaping">?????</a>??????
; 2887 : 1738 : 	    ?????
; 2888 : 1739 :       </dl>
; 2889 : 1740 :       <br>
; 2890 : 1741 :       <br>
; 2891 : 1742 :       <br>
; 2892 : 1743 :       <hr>
; 2893 : 1744 :       <br>
; 2894 : */
; 2895 : 
; 2896 : 	if( strcmp( funcname , "D" ) == 0 ){

  00bb1	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_01CKDDGHAB@D@
  00bb6	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  00bbc	0f 1f 40 00	 npad	 4
$LL125@lssproto_C:
  00bc0	8a 10		 mov	 dl, BYTE PTR [eax]
  00bc2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00bc4	75 1a		 jne	 SHORT $LN126@lssproto_C
  00bc6	84 d2		 test	 dl, dl
  00bc8	74 12		 je	 SHORT $LN127@lssproto_C
  00bca	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00bcd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00bd0	75 0e		 jne	 SHORT $LN126@lssproto_C
  00bd2	83 c0 02	 add	 eax, 2
  00bd5	83 c1 02	 add	 ecx, 2
  00bd8	84 d2		 test	 dl, dl
  00bda	75 e4		 jne	 SHORT $LL125@lssproto_C
$LN127@lssproto_C:
  00bdc	33 c0		 xor	 eax, eax
  00bde	eb 05		 jmp	 SHORT $LN128@lssproto_C
$LN126@lssproto_C:
  00be0	1b c0		 sbb	 eax, eax
  00be2	83 c8 01	 or	 eax, 1
$LN128@lssproto_C:
  00be5	85 c0		 test	 eax, eax
  00be7	75 74		 jne	 SHORT $LN22@lssproto_C

; 2897 : 		int category;
; 2898 : 		int dx;
; 2899 : 		int dy;
; 2900 : 		char* data;
; 2901 : 		category = lssproto_demkstr_int( lssproto.token_list[2] );

  00be9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00bee	ff 70 08	 push	 DWORD PTR [eax+8]
  00bf1	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2902 : 		dx = lssproto_demkstr_int( lssproto.token_list[3] );

  00bf6	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00bfc	8b d8		 mov	 ebx, eax
  00bfe	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00c01	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2903 : 		dy = lssproto_demkstr_int( lssproto.token_list[4] );

  00c06	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00c0c	8b f8		 mov	 edi, eax
  00c0e	ff 71 10	 push	 DWORD PTR [ecx+16]
  00c11	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2904 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[4] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[5] ));

  00c16	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00c1c	8b f0		 mov	 esi, eax
  00c1e	ff 71 14	 push	 DWORD PTR [ecx+20]
  00c21	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00c26	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00c2c	50		 push	 eax
  00c2d	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00c33	ff 71 10	 push	 DWORD PTR [ecx+16]
  00c36	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 2905 : 		lssproto_D_recv( fd,category,dx,dy,data);

  00c3b	50		 push	 eax
  00c3c	56		 push	 esi
  00c3d	57		 push	 edi
  00c3e	53		 push	 ebx
  00c3f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00c42	e8 00 00 00 00	 call	 ?lssproto_D_recv@@YAXHHHHPAD@Z ; lssproto_D_recv
  00c47	83 c4 30	 add	 esp, 48			; 00000030H

; 2906 : 		return 0;

  00c4a	33 c0		 xor	 eax, eax
  00c4c	5b		 pop	 ebx
  00c4d	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00c4e	5e		 pop	 esi
  00c4f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00c52	33 cd		 xor	 ecx, ebp
  00c54	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00c59	8b e5		 mov	 esp, ebp
  00c5b	5d		 pop	 ebp
  00c5c	c3		 ret	 0
$LN22@lssproto_C:

; 2907 : 	}
; 2908 : /*
; 2909 : 1760 :   <li><a name="SC_FS"><font color=blue>servertoclient FS( int flg);<br></font></a>
; 2910 : 1761 :       (FlgSet)PS????????????????îî¤?î¿î??????????<br><br>
; 2911 : 1762 :       <dl>
; 2912 : 1763 :         <dt>int flg
; 2913 : 1764 :         <dd> 0 bit  0: ??Off                  1: ??On<br>
; 2914 : 1765 :              ???î ¹î¸??1 bit  0: îî¬î?î¢?off          1: îî¬î?î¢?On    <br>
; 2915 : 1766 :              2 bit  0: DUEL off                 1: DUEL On<br>
; 2916 : 1767 :              3 bit  0: ?î­????????     1: ????????????î??????<br>
; 2917 : 1768 :              4 bit  0: î¡î¹??OK               1: î¡î¹???î¸<br>
; 2918 : 1769 :       </dl>
; 2919 : 1770 :       <br>
; 2920 : 1771 :       <br>
; 2921 : 1772 :       <hr>
; 2922 : 1773 :       <br>
; 2923 : */
; 2924 : 
; 2925 : 	if( strcmp( funcname , "FS" ) == 0 ){

  00c5d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02OFDPNJAI@FS@
  00c62	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL129@lssproto_C:
  00c68	8a 10		 mov	 dl, BYTE PTR [eax]
  00c6a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00c6c	75 1a		 jne	 SHORT $LN130@lssproto_C
  00c6e	84 d2		 test	 dl, dl
  00c70	74 12		 je	 SHORT $LN131@lssproto_C
  00c72	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00c75	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00c78	75 0e		 jne	 SHORT $LN130@lssproto_C
  00c7a	83 c0 02	 add	 eax, 2
  00c7d	83 c1 02	 add	 ecx, 2
  00c80	84 d2		 test	 dl, dl
  00c82	75 e4		 jne	 SHORT $LL129@lssproto_C
$LN131@lssproto_C:
  00c84	33 c0		 xor	 eax, eax
  00c86	eb 05		 jmp	 SHORT $LN132@lssproto_C
$LN130@lssproto_C:
  00c88	1b c0		 sbb	 eax, eax
  00c8a	83 c8 01	 or	 eax, 1
$LN132@lssproto_C:
  00c8d	85 c0		 test	 eax, eax
  00c8f	75 2c		 jne	 SHORT $LN23@lssproto_C

; 2926 : 		int flg;
; 2927 : 		flg = lssproto_demkstr_int( lssproto.token_list[2] );

  00c91	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00c96	ff 70 08	 push	 DWORD PTR [eax+8]
  00c99	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2928 : 		lssproto_FS_recv( fd,flg);

  00c9e	50		 push	 eax
  00c9f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00ca2	e8 00 00 00 00	 call	 ?lssproto_FS_recv@@YAXHH@Z ; lssproto_FS_recv
  00ca7	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2929 : 		return 0;

  00caa	33 c0		 xor	 eax, eax
  00cac	5b		 pop	 ebx
  00cad	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00cae	5e		 pop	 esi
  00caf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00cb2	33 cd		 xor	 ecx, ebp
  00cb4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00cb9	8b e5		 mov	 esp, ebp
  00cbb	5d		 pop	 ebp
  00cbc	c3		 ret	 0
$LN23@lssproto_C:

; 2930 : 	}
; 2931 : /*
; 2932 : 1785 :   <li><a name="SC_HL"><font color=blue>servertoclient HL( int flg);<br></font></a>
; 2933 : 1786 :       (HeLp)HL????????????????îî¬????????î???î¶?????????<br><br>
; 2934 : 1787 :       <dl>
; 2935 : 1788 :         <dt>int flg
; 2936 : 1789 :         <dd> 0: ??????Off                  1: ??????On<br>
; 2937 : 1790 :       </dl>
; 2938 : 1791 :       <br>
; 2939 : 1792 :       <br>
; 2940 : 1793 :       <hr>
; 2941 : 1794 :       <br>
; 2942 : */
; 2943 : 
; 2944 : 	if( strcmp( funcname , "HL" ) == 0 ){

  00cbd	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02CCPLPKJM@HL@
  00cc2	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL133@lssproto_C:
  00cc8	8a 10		 mov	 dl, BYTE PTR [eax]
  00cca	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00ccc	75 1a		 jne	 SHORT $LN134@lssproto_C
  00cce	84 d2		 test	 dl, dl
  00cd0	74 12		 je	 SHORT $LN135@lssproto_C
  00cd2	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00cd5	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00cd8	75 0e		 jne	 SHORT $LN134@lssproto_C
  00cda	83 c0 02	 add	 eax, 2
  00cdd	83 c1 02	 add	 ecx, 2
  00ce0	84 d2		 test	 dl, dl
  00ce2	75 e4		 jne	 SHORT $LL133@lssproto_C
$LN135@lssproto_C:
  00ce4	33 c0		 xor	 eax, eax
  00ce6	eb 05		 jmp	 SHORT $LN136@lssproto_C
$LN134@lssproto_C:
  00ce8	1b c0		 sbb	 eax, eax
  00cea	83 c8 01	 or	 eax, 1
$LN136@lssproto_C:
  00ced	85 c0		 test	 eax, eax
  00cef	75 2c		 jne	 SHORT $LN24@lssproto_C

; 2945 : 		int flg;
; 2946 : 		flg = lssproto_demkstr_int( lssproto.token_list[2] );

  00cf1	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00cf6	ff 70 08	 push	 DWORD PTR [eax+8]
  00cf9	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2947 : 		lssproto_HL_recv( fd,flg);

  00cfe	50		 push	 eax
  00cff	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00d02	e8 00 00 00 00	 call	 ?lssproto_HL_recv@@YAXHH@Z ; lssproto_HL_recv
  00d07	83 c4 0c	 add	 esp, 12			; 0000000cH

; 2948 : 		return 0;

  00d0a	33 c0		 xor	 eax, eax
  00d0c	5b		 pop	 ebx
  00d0d	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00d0e	5e		 pop	 esi
  00d0f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d12	33 cd		 xor	 ecx, ebp
  00d14	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00d19	8b e5		 mov	 esp, ebp
  00d1b	5d		 pop	 ebp
  00d1c	c3		 ret	 0
$LN24@lssproto_C:

; 2949 : 	}
; 2950 : /*
; 2951 : 1808 :   <li><a name="SC_PR"><font color=blue>servertoclient PR( int request, int result);<br></font></a>
; 2952 : 1809 :       (PartyRequest)????????PR???????????????????î¢?î??????
; 2953 : 1810 :        ?????îîº?î¦?î°?î????????
; 2954 : 1811 :        <br><br>
; 2955 : 1812 :       
; 2956 : 1813 :       <dl>
; 2957 : 1814 :       	<dt>int request
; 2958 : 1815 :       	<dd>0: ?î¦ 1:î¼î¦
; 2959 : 1816 :         <dt>int result
; 2960 : 1817 :         <dd>0: î§î² 1: î?
; 2961 : 1818 :       </dl>
; 2962 : 1819 :       <br>
; 2963 : 1820 :       <br>
; 2964 : 1821 :   <br>
; 2965 : 1822 :       <hr>
; 2966 : 1823 :       <br>
; 2967 : */
; 2968 : 
; 2969 : 	if( strcmp( funcname , "PR" ) == 0 ){

  00d1d	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02OEIPDHIL@PR@
  00d22	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL137@lssproto_C:
  00d28	8a 10		 mov	 dl, BYTE PTR [eax]
  00d2a	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00d2c	75 1a		 jne	 SHORT $LN138@lssproto_C
  00d2e	84 d2		 test	 dl, dl
  00d30	74 12		 je	 SHORT $LN139@lssproto_C
  00d32	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00d35	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00d38	75 0e		 jne	 SHORT $LN138@lssproto_C
  00d3a	83 c0 02	 add	 eax, 2
  00d3d	83 c1 02	 add	 ecx, 2
  00d40	84 d2		 test	 dl, dl
  00d42	75 e4		 jne	 SHORT $LL137@lssproto_C
$LN139@lssproto_C:
  00d44	33 c0		 xor	 eax, eax
  00d46	eb 05		 jmp	 SHORT $LN140@lssproto_C
$LN138@lssproto_C:
  00d48	1b c0		 sbb	 eax, eax
  00d4a	83 c8 01	 or	 eax, 1
$LN140@lssproto_C:
  00d4d	85 c0		 test	 eax, eax
  00d4f	75 3d		 jne	 SHORT $LN25@lssproto_C

; 2970 : 		int request;
; 2971 : 		int result;
; 2972 : 		request = lssproto_demkstr_int( lssproto.token_list[2] );

  00d51	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00d56	ff 70 08	 push	 DWORD PTR [eax+8]
  00d59	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2973 : 		result = lssproto_demkstr_int( lssproto.token_list[3] );

  00d5e	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00d64	8b f0		 mov	 esi, eax
  00d66	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00d69	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 2974 : 		lssproto_PR_recv( fd,request,result);

  00d6e	50		 push	 eax
  00d6f	56		 push	 esi
  00d70	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00d73	e8 00 00 00 00	 call	 ?lssproto_PR_recv@@YAXHHH@Z ; lssproto_PR_recv
  00d78	83 c4 14	 add	 esp, 20			; 00000014H

; 2975 : 		return 0;

  00d7b	33 c0		 xor	 eax, eax
  00d7d	5b		 pop	 ebx
  00d7e	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00d7f	5e		 pop	 esi
  00d80	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00d83	33 cd		 xor	 ecx, ebp
  00d85	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00d8a	8b e5		 mov	 esp, ebp
  00d8c	5d		 pop	 ebp
  00d8d	c3		 ret	 0
$LN25@lssproto_C:

; 2976 : 	}
; 2977 : /*
; 2978 : 1835 :   <li><a name="SC_KS"><font color=blue>servertoclient KS( int petarray,int result);<br></font></a>
; 2979 : 1836 :        ???????KS?î??î????????î§??????????????
; 2980 : 1837 :        ?????????????????????
; 2981 : 1838 :        ???îî¬?î??î±î¶????????????????îº???????îº??????î±î¶?????????
; 2982 : 1839 :        ???????????????
; 2983 : 1840 :        <br><br>
; 2984 : 1841 :       
; 2985 : 1842 :       <dl>
; 2986 : 1843 :       	<dt>int petarray
; 2987 : 1844 :       	<dd>????î±?
; 2988 : 1845 :       	<dt>int result
; 2989 : 1846 :       	<dd>0: î§î²????î±î¶????????? 1:î?
; 2990 : 1847 :       </dl>
; 2991 : 1848 :       <br>
; 2992 : 1849 :       <br>
; 2993 : 1850 :       <hr>
; 2994 : 1851 :       <br>
; 2995 : */
; 2996 : 
; 2997 : 	if( strcmp( funcname , "KS" ) == 0 ){

  00d8e	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02ONOHEKFL@KS@
  00d93	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  00d99	0f 1f 80 00 00
	00 00		 npad	 7
$LL141@lssproto_C:
  00da0	8a 10		 mov	 dl, BYTE PTR [eax]
  00da2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00da4	75 1a		 jne	 SHORT $LN142@lssproto_C
  00da6	84 d2		 test	 dl, dl
  00da8	74 12		 je	 SHORT $LN143@lssproto_C
  00daa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00dad	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00db0	75 0e		 jne	 SHORT $LN142@lssproto_C
  00db2	83 c0 02	 add	 eax, 2
  00db5	83 c1 02	 add	 ecx, 2
  00db8	84 d2		 test	 dl, dl
  00dba	75 e4		 jne	 SHORT $LL141@lssproto_C
$LN143@lssproto_C:
  00dbc	33 c0		 xor	 eax, eax
  00dbe	eb 05		 jmp	 SHORT $LN144@lssproto_C
$LN142@lssproto_C:
  00dc0	1b c0		 sbb	 eax, eax
  00dc2	83 c8 01	 or	 eax, 1
$LN144@lssproto_C:
  00dc5	85 c0		 test	 eax, eax
  00dc7	75 3d		 jne	 SHORT $LN26@lssproto_C

; 2998 : 		int petarray;
; 2999 : 		int result;
; 3000 : 		petarray = lssproto_demkstr_int( lssproto.token_list[2] );

  00dc9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00dce	ff 70 08	 push	 DWORD PTR [eax+8]
  00dd1	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3001 : 		result = lssproto_demkstr_int( lssproto.token_list[3] );

  00dd6	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00ddc	8b f0		 mov	 esi, eax
  00dde	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00de1	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3002 : 		lssproto_KS_recv( fd,petarray,result);

  00de6	50		 push	 eax
  00de7	56		 push	 esi
  00de8	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00deb	e8 00 00 00 00	 call	 ?lssproto_KS_recv@@YAXHHH@Z ; lssproto_KS_recv
  00df0	83 c4 14	 add	 esp, 20			; 00000014H

; 3003 : 		return 0;

  00df3	33 c0		 xor	 eax, eax
  00df5	5b		 pop	 ebx
  00df6	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00df7	5e		 pop	 esi
  00df8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00dfb	33 cd		 xor	 ecx, ebp
  00dfd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e02	8b e5		 mov	 esp, ebp
  00e04	5d		 pop	 ebp
  00e05	c3		 ret	 0
$LN26@lssproto_C:

; 3004 : 	}
; 3005 : /*
; 3006 : 1935 :   <li><a name="SC_PS"><font color=blue>servertoclient PS( int result, int havepetindex, int havepetskill, int toindex);<br></font></a>
; 3007 : 1936 :       (PetSkill use result)??????î¸???????????PS?î??????????
; 3008 : 1937 :       result ??????????PS?î???????????î¯??????????
; 3009 : 1938 :       
; 3010 : 1939 :       <dl>
; 3011 : 1940 : 	<dt>int result
; 3012 : 1941 : 	<dd>???0: î§î² 1:î?
; 3013 : 1942 :         <dt>int havepetindex
; 3014 : 1943 :         <dd>?î±??????î¸?????
; 3015 : 1944 :         <dt>int havepetskill
; 3016 : 1945 :         <dd>?î±????î¸?????
; 3017 : 1946 : 	<dt>int toindex
; 3018 : 1947 : 	<dd> î??î¹?î¸???????????????????index????????????????
; 3019 : 1948 : 	<pre>
; 3020 : 1949 : 	  îî¤    = 0
; 3021 : 1950 : 	  ???  = 1 ?5
; 3022 : 1951 : 	  ??    = 6 ?10 ?S N ?0?4?î??îî¤îî²????????
; 3023 : 1952 : 	</pre>
; 3024 : 1953 : 	îî§?î»????î¤????????î¶??-1??î???<br>
; 3025 : 1954 : 	<br>
; 3026 : 1955 :       	    
; 3027 : 1956 :       </dl>
; 3028 : 1957 :       
; 3029 : 1958 :       <br>
; 3030 : 1959 :       <br>
; 3031 : 1960 :       <hr>
; 3032 : 1961 :       <br>
; 3033 : 1962 : 
; 3034 : */
; 3035 : 
; 3036 : 	if( strcmp( funcname , "PS" ) == 0 ){

  00e06	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02PNJEAGMK@PS@
  00e0b	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL145@lssproto_C:
  00e11	8a 10		 mov	 dl, BYTE PTR [eax]
  00e13	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00e15	75 1a		 jne	 SHORT $LN146@lssproto_C
  00e17	84 d2		 test	 dl, dl
  00e19	74 12		 je	 SHORT $LN147@lssproto_C
  00e1b	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00e1e	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00e21	75 0e		 jne	 SHORT $LN146@lssproto_C
  00e23	83 c0 02	 add	 eax, 2
  00e26	83 c1 02	 add	 ecx, 2
  00e29	84 d2		 test	 dl, dl
  00e2b	75 e4		 jne	 SHORT $LL145@lssproto_C
$LN147@lssproto_C:
  00e2d	33 c0		 xor	 eax, eax
  00e2f	eb 05		 jmp	 SHORT $LN148@lssproto_C
$LN146@lssproto_C:
  00e31	1b c0		 sbb	 eax, eax
  00e33	83 c8 01	 or	 eax, 1
$LN148@lssproto_C:
  00e36	85 c0		 test	 eax, eax
  00e38	75 5f		 jne	 SHORT $LN27@lssproto_C

; 3037 : 		int result;
; 3038 : 		int havepetindex;
; 3039 : 		int havepetskill;
; 3040 : 		int toindex;
; 3041 : 		result = lssproto_demkstr_int( lssproto.token_list[2] );

  00e3a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00e3f	ff 70 08	 push	 DWORD PTR [eax+8]
  00e42	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3042 : 		havepetindex = lssproto_demkstr_int( lssproto.token_list[3] );

  00e47	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00e4d	8b d8		 mov	 ebx, eax
  00e4f	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00e52	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3043 : 		havepetskill = lssproto_demkstr_int( lssproto.token_list[4] );

  00e57	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00e5d	8b f8		 mov	 edi, eax
  00e5f	ff 71 10	 push	 DWORD PTR [ecx+16]
  00e62	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3044 : 		toindex = lssproto_demkstr_int( lssproto.token_list[5] );

  00e67	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00e6d	8b f0		 mov	 esi, eax
  00e6f	ff 71 14	 push	 DWORD PTR [ecx+20]
  00e72	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3045 : 		lssproto_PS_recv( fd,result,havepetindex,havepetskill,toindex);

  00e77	50		 push	 eax
  00e78	56		 push	 esi
  00e79	57		 push	 edi
  00e7a	53		 push	 ebx
  00e7b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00e7e	e8 00 00 00 00	 call	 ?lssproto_PS_recv@@YAXHHHHH@Z ; lssproto_PS_recv
  00e83	83 c4 24	 add	 esp, 36			; 00000024H

; 3046 : 		return 0;

  00e86	33 c0		 xor	 eax, eax
  00e88	5b		 pop	 ebx
  00e89	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00e8a	5e		 pop	 esi
  00e8b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00e8e	33 cd		 xor	 ecx, ebp
  00e90	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00e95	8b e5		 mov	 esp, ebp
  00e97	5d		 pop	 ebp
  00e98	c3		 ret	 0
$LN27@lssproto_C:

; 3047 : 	}
; 3048 : /*
; 3049 : 2011 :   <LI><a name="S2CSKUP"><font color=blue>servertoclient SKUP( int point );<br></font></a>
; 3050 : 2012 :       (SKillUP)
; 3051 : 2013 :       ????????????????î­î²??????î¯??????îî???
; 3052 : 2014 :       <br>
; 3053 : 2015 :       <br>
; 3054 : 2016 :       <hr>
; 3055 : 2017 :       <br>
; 3056 : 2018 : 
; 3057 : */
; 3058 : 
; 3059 : 	if( strcmp( funcname , "SKUP" ) == 0 ){

  00e99	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04NKLHNDMK@SKUP@
  00e9e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL149@lssproto_C:
  00ea4	8a 10		 mov	 dl, BYTE PTR [eax]
  00ea6	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00ea8	75 1a		 jne	 SHORT $LN150@lssproto_C
  00eaa	84 d2		 test	 dl, dl
  00eac	74 12		 je	 SHORT $LN151@lssproto_C
  00eae	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00eb1	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00eb4	75 0e		 jne	 SHORT $LN150@lssproto_C
  00eb6	83 c0 02	 add	 eax, 2
  00eb9	83 c1 02	 add	 ecx, 2
  00ebc	84 d2		 test	 dl, dl
  00ebe	75 e4		 jne	 SHORT $LL149@lssproto_C
$LN151@lssproto_C:
  00ec0	33 c0		 xor	 eax, eax
  00ec2	eb 05		 jmp	 SHORT $LN152@lssproto_C
$LN150@lssproto_C:
  00ec4	1b c0		 sbb	 eax, eax
  00ec6	83 c8 01	 or	 eax, 1
$LN152@lssproto_C:
  00ec9	85 c0		 test	 eax, eax
  00ecb	75 2c		 jne	 SHORT $LN28@lssproto_C

; 3060 : 		int point;
; 3061 : 		point = lssproto_demkstr_int( lssproto.token_list[2] );

  00ecd	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00ed2	ff 70 08	 push	 DWORD PTR [eax+8]
  00ed5	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3062 : 		lssproto_SKUP_recv( fd,point);

  00eda	50		 push	 eax
  00edb	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00ede	e8 00 00 00 00	 call	 ?lssproto_SKUP_recv@@YAXHH@Z ; lssproto_SKUP_recv
  00ee3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3063 : 		return 0;

  00ee6	33 c0		 xor	 eax, eax
  00ee8	5b		 pop	 ebx
  00ee9	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00eea	5e		 pop	 esi
  00eeb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00eee	33 cd		 xor	 ecx, ebp
  00ef0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00ef5	8b e5		 mov	 esp, ebp
  00ef7	5d		 pop	 ebp
  00ef8	c3		 ret	 0
$LN28@lssproto_C:

; 3064 : 	}
; 3065 : /*
; 3066 : 2047 :   <LI><a name="SC_WN"><font color=blue>servertoclient WN( int windowtype, int buttontype, int seqno, int objindex, string data );<br></font></a>
; 3067 : 2048 :       (Window)<br>
; 3068 : 2049 :       ??????î¸î???????????????î­î²???<br>
; 3069 : 2050 :       <br>
; 3070 : 2051 :       <dl>
; 3071 : 2052 :         <dt>int windowtype
; 3072 : 2053 :         <dd>???????????????î???????î¸î???????buttontype ?î?????
; 3073 : 2054 :             ???????î???<br>
; 3074 : 2055 :             ???????????îî??????<br>
; 3075 : 2056 :           <pre>
; 3076 : 2057 : 		typedef enum
; 3077 : 2058 : 		{
; 3078 : 2059 : 			WINDOW_MESSAGETYPE_MESSAGE,			???????
; 3079 : 2060 : 			WINDOW_MESSAGETYPE_MESSAGEANDLINEINPUT,		????????î¼?
; 3080 : 2061 : 			WINDOW_MESSAGETYPE_SELECT,			î±î¶?????
; 3081 : 2062 : 			WINDOW_MESSAGETYPE_PETSELECT,			???î±î¶?????
; 3082 : 2063 : 			WINDOW_MESSAGETYPE_PARTYSELECT,			??î±î¶?????
; 3083 : 2064 : 			WINDOW_MESSAGETYPE_PETANDPARTYSELECT,		??????î±î¶?????
; 3084 : 2065 : 			WINDOW_MESSAGETYPE_ITEMSHOPMENU,		?îº??????????
; 3085 : 2066 : 			WINDOW_MWSSAGETYPE_ITEMSHOPYMAIN,		?îº?????????
; 3086 : 2067 : 			WINDOW_MESSAGETYPE_LIMITITEMSHOPMAIN,		??î?î???????????????
; 3087 : 2068 : 			WINDOW_MESSAGETYPE_PETSKILLSHOP,		?????????????
; 3088 : 2069 : 			WINDOW_MESSAGETYPE_WIDEMESSAGE,			????????î«??îµ?
; 3089 : 2070 : 			WINDOW_MESSAGETYPE_WIDEMESSAGEANDLINEINPUT,	????????î¼??î«??îµ?
; 3090 : 2071 : 
; 3091 : 2072 : 		}WINDOW_MESSAGETYPE;
; 3092 : 2073 : 	  </pre>
; 3093 : 2074 : 
; 3094 : 2075 :         <dt>int buttontype
; 3095 : 2076 :         <dd>?????î?îî??????????????î???????<br>
; 3096 : 2077 :             <pre>
; 3097 : 2078 : 		#define		WINDOW_BUTTONTYPE_NONE		(0)
; 3098 : 2079 : 		#define		WINDOW_BUTTONTYPE_OK		(1 << 0)
; 3099 : 2080 : 		#define		WINDOW_BUTTONTYPE_CANCEL	(1 << 1)
; 3100 : 2081 : 		#define		WINDOW_BUTTONTYPE_YES		(1 << 2)
; 3101 : 2082 : 		#define		WINDOW_BUTTONTYPE_NO		(1 << 3)
; 3102 : 2083 : 		#define		WINDOW_BUTTONTYPE_PREV		(1 << 4)
; 3103 : 2084 : 		#define		WINDOW_BUTTONTYPE_NEXT		(1 << 5)
; 3104 : 2085 :             </pre>
; 3105 : 2086 :             ????î??????î???????YES????NO?????????<br>
; 3106 : 2087 :             WINDOW_BUTTONTYPE_YES | WINDOW_BUTTONTYPE_NO   (=12)<br>
; 3107 : 2088 :             ????
; 3108 : 2089 :             
; 3109 : 2090 :         <dt>int seqno
; 3110 : 2091 :         <dd>????????î±??î????????????
; 3111 : 2092 :             ???????WN???????????????î??????î±??î»??î????
; 3112 : 2093 :             ?????????????NPC???î¶î¡¡?????????îî«î????????
; 3113 : 2094 :         <dt>int objindex
; 3114 : 2095 :         <dd>????????î?????NPC???index??î??????
; 3115 : 2096 :             ?????î?????î¶??-1???î¼?????
; 3116 : 2097 :             ?????????????î¼???WN?????????î±?????î?????
; 3117 : 2098 :         <dt>string data
; 3118 : 2099 :         <dd>?????î ??î??î ??????????"\n"??î????????î ¸????
; 3119 : 2100 :             ????????????????î¸îî??????????îî®î«???????
; 3120 : 2101 :             î±î¶????????????"\n"??î???????????????????
; 3121 : 2102 :             ?????????????????????????îî?????î·??
; 3122 : 2103 :             ????????????????î±î¶???????î·???? 1 ??
; 3123 : 2104 :             î±???????î±î¶??î¶??WN??î????î??
; 3124 : 2105 :         <dt>string data(?îº??
; 3125 : 2106 :         <dd>?????î ??î??î ??????????"\n"??î????????î ¸????
; 3126 : 2107 :             ????????????????î¸îî??????????îî®î«???????
; 3127 : 2108 :             ???î ?????"?"??î???????
; 3128 : 2109 :    <br><br><dd>????<br>
; 3129 : 2110 :  	???????????ï¼?????î·????î¸??????î¸??ï¼î¸???ï¼1??
; 3130 : 2111 : 		îº?î¡î·???????îº????????î±î¶?????????î±??????????î??????
; 3131 : 2112 : 		???????????????????î¡???????????????ï¼?????ï¼???????????
; 3132 : 2113 : 		î±î®???î±??îî¡?????î¡????????????????????î±î®???î±??îî¡
; 3133 : 2114 :       		<br><br>
; 3134 : 2115 :       		0|1|????????|?????????????|???????????|??î§???|????î????????
; 3135 : 2116 :       		î±??????????|î ´???????|?????????????????????????|
; 3136 : 2117 :       		?|???|?????|??????\n??î?|??|?|??|?????|??????\nî ?????î¢\n???
; 3137 : 2118 : 
; 3138 : 2119 :         <br><dd><br>????<br>
; 3139 : 2120 : 		???????????ï¼?????î·????î¸??????î¸??ï¼î¸???ï¼1??
; 3140 : 2121 : 		îº?î¡î·???????îº????????????????????????|?î??????
; 3141 : 2122 : 		????î¡????????????î±î®???î±??îî¡?????î¡????????????
; 3142 : 2123 : 		î±î®???î±??îî¡?
; 3143 : 2124 :       
; 3144 : 2125 :       	<br><br>
; 3145 : 2126 :       		?|1|?????î¹??|?????????????????????????????|î ´???????|
; 3146 : 2127 :       		???????????????????????|?|??|?????|
; 3147 : 2128 :       		??????\n??î?|??|?|??|?????|??????\nî ?????î¢\n???
; 3148 : 2129 :         <br><dd><br>?????????<br>
; 3149 : 2130 : 		??????=??????????????<br>
; 3150 : 2131 : 		îº?î¡î·?<br>
; 3151 : 2132 : 		????????????î¯?????????????î??????<br>
; 3152 : 2133 : 		î¡î·????????????î???î?????î±î®???î±??????????????î±??????<br>
; 3153 : 2134 : 		î¡î·????????????î???î?????î±î®???î±??????????????î±??????<br>
; 3154 : 2135 :         <br><dd><br>???????î??<br>
; 3155 : 2136 : 		??????î?=???
; 3156 : 2137 : 		îº?î¡î·???î?????????????î³????????|?î??????<br>
; 3157 : 2138 : 		î¡î·???î???????????î???î?????????????î±î®???î±?????????<br>
; 3158 : 2139 : 		î¡î·???î???????????î???î?????????????î±î®???î±?????????<br>
; 3159 : 2140 : 
; 3160 : 2141 : 
; 3161 : 2142 :         <br><dd><br>???î?<br>
; 3162 : 2143 : 		îº?î¡î·??????
; 3163 : 2144 :       
; 3164 : 2145 :       	<br><br>
; 3165 : 2146 :       		?????î¹??|????????????
; 3166 : 2147 : 
; 3167 : 2148 : 	<br><br><br>
; 3168 : 2149 :         <dt>string data(??????????
; 3169 : 2150 :         <dd>?????î ??î??î ??????????"\n"??î????????î ¸????
; 3170 : 2151 :             ????????????????î¸îî??????????îî®î«???????
; 3171 : 2152 :             ???î ?????"?"??î???????
; 3172 : 2153 : 	   <br><br><dd>??????îî¾?<br>
; 3173 : 2154 : 		î·?îºî«î¸???????î¸?ï¼0  î¸???ï¼1??îº?î¡î·??????????
; 3174 : 2155 : 		?î¡?î±î®??îî¡??î¡?î±î®??îî¡
; 3175 : 2156 : 	<br><br>
; 3176 : 2157 : 		1?????????????????????????????????
; 3177 : 2158 : 		î¶??î????500?????????  î ¡??????????
; 3178 : 2159 : 		ä½??î?1000?î¡??î???????î­???	
; 3179 : 2160 :       </dl>
; 3180 : 2161 :       <br>
; 3181 : 2162 :       <br>
; 3182 : 2163 :       <hr>
; 3183 : 2164 :       <br>
; 3184 : 2165 :       
; 3185 : */
; 3186 : 
; 3187 : 	if( strcmp( funcname , "WN" ) == 0 ){

  00ef9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02HLHHMFD@WN@
  00efe	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL153@lssproto_C:
  00f04	8a 10		 mov	 dl, BYTE PTR [eax]
  00f06	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00f08	75 1a		 jne	 SHORT $LN154@lssproto_C
  00f0a	84 d2		 test	 dl, dl
  00f0c	74 12		 je	 SHORT $LN155@lssproto_C
  00f0e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00f11	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00f14	75 0e		 jne	 SHORT $LN154@lssproto_C
  00f16	83 c0 02	 add	 eax, 2
  00f19	83 c1 02	 add	 ecx, 2
  00f1c	84 d2		 test	 dl, dl
  00f1e	75 e4		 jne	 SHORT $LL153@lssproto_C
$LN155@lssproto_C:
  00f20	33 c0		 xor	 eax, eax
  00f22	eb 05		 jmp	 SHORT $LN156@lssproto_C
$LN154@lssproto_C:
  00f24	1b c0		 sbb	 eax, eax
  00f26	83 c8 01	 or	 eax, 1
$LN156@lssproto_C:
  00f29	85 c0		 test	 eax, eax
  00f2b	0f 85 8e 00 00
	00		 jne	 $LN29@lssproto_C

; 3188 : 		int windowtype;
; 3189 : 		int buttontype;
; 3190 : 		int seqno;
; 3191 : 		int objindex;
; 3192 : 		char* data;
; 3193 : 		windowtype = lssproto_demkstr_int( lssproto.token_list[2] );

  00f31	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00f36	ff 70 08	 push	 DWORD PTR [eax+8]
  00f39	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3194 : 		buttontype = lssproto_demkstr_int( lssproto.token_list[3] );

  00f3e	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00f44	89 85 f8 fb ff
	ff		 mov	 DWORD PTR _windowtype$1$[ebp], eax
  00f4a	ff 71 0c	 push	 DWORD PTR [ecx+12]
  00f4d	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3195 : 		seqno = lssproto_demkstr_int( lssproto.token_list[4] );

  00f52	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00f58	8b d8		 mov	 ebx, eax
  00f5a	ff 71 10	 push	 DWORD PTR [ecx+16]
  00f5d	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3196 : 		objindex = lssproto_demkstr_int( lssproto.token_list[5] );

  00f62	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00f68	8b f8		 mov	 edi, eax
  00f6a	ff 71 14	 push	 DWORD PTR [ecx+20]
  00f6d	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3197 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[5] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[6] ));

  00f72	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00f78	8b f0		 mov	 esi, eax
  00f7a	ff 71 18	 push	 DWORD PTR [ecx+24]
  00f7d	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  00f82	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00f88	50		 push	 eax
  00f89	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00f8f	ff 71 14	 push	 DWORD PTR [ecx+20]
  00f92	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3198 : 		lssproto_WN_recv( fd,windowtype,buttontype,seqno,objindex,data);

  00f97	50		 push	 eax
  00f98	56		 push	 esi
  00f99	57		 push	 edi
  00f9a	53		 push	 ebx
  00f9b	ff b5 f8 fb ff
	ff		 push	 DWORD PTR _windowtype$1$[ebp]
  00fa1	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00fa4	e8 00 00 00 00	 call	 ?lssproto_WN_recv@@YAXHHHHHPAD@Z ; lssproto_WN_recv
  00fa9	83 c4 38	 add	 esp, 56			; 00000038H

; 3199 : 		return 0;

  00fac	33 c0		 xor	 eax, eax
  00fae	5b		 pop	 ebx
  00faf	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  00fb0	5e		 pop	 esi
  00fb1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00fb4	33 cd		 xor	 ecx, ebp
  00fb6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00fbb	8b e5		 mov	 esp, ebp
  00fbd	5d		 pop	 ebp
  00fbe	c3		 ret	 0
$LN29@lssproto_C:

; 3200 : 	}
; 3201 : /*
; 3202 : 2196 :   <LI><a name="SC_EF"><font color=blue>servertoclient EF( int effect, int level, string option );<br></font></a>
; 3203 : 2197 :       (EFfect)<br>
; 3204 : 2198 :       î????????????????î»îî«???î¸???????<br>
; 3205 : 2199 :       <br>
; 3206 : 2200 :       <dl>
; 3207 : 2201 :         <dt>int effect
; 3208 : 2202 :         <dd>??î±???????î±?î«?????îµ??????î¾????????????î???????????
; 3209 : 2203 :           <ul>
; 3210 : 2204 :             <li>1:?
; 3211 : 2205 :             <li>2:î
; 3212 : 2206 :             <li>4:??î??î?
; 3213 : 2207 :           </ul>
; 3214 : 2208 :         <dt>int level
; 3215 : 2209 :         <dd>????????î??????î¸?????î¸??
; 3216 : 2210 :         <dt>string option
; 3217 : 2211 :         <dd>???î?
; 3218 : 2212 :       </dl>
; 3219 : 2213 :       <br>
; 3220 : 2214 :       <br>
; 3221 : 2215 :       <hr>
; 3222 : 2216 :       <br>
; 3223 : 2217 : 
; 3224 : */
; 3225 : 
; 3226 : 	if( strcmp( funcname , "EF" ) == 0 ){

  00fbf	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02NAMMIBEF@EF@
  00fc4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  00fca	66 0f 1f 44 00
	00		 npad	 6
$LL157@lssproto_C:
  00fd0	8a 10		 mov	 dl, BYTE PTR [eax]
  00fd2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  00fd4	75 1a		 jne	 SHORT $LN158@lssproto_C
  00fd6	84 d2		 test	 dl, dl
  00fd8	74 12		 je	 SHORT $LN159@lssproto_C
  00fda	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00fdd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  00fe0	75 0e		 jne	 SHORT $LN158@lssproto_C
  00fe2	83 c0 02	 add	 eax, 2
  00fe5	83 c1 02	 add	 ecx, 2
  00fe8	84 d2		 test	 dl, dl
  00fea	75 e4		 jne	 SHORT $LL157@lssproto_C
$LN159@lssproto_C:
  00fec	33 c0		 xor	 eax, eax
  00fee	eb 05		 jmp	 SHORT $LN160@lssproto_C
$LN158@lssproto_C:
  00ff0	1b c0		 sbb	 eax, eax
  00ff2	83 c8 01	 or	 eax, 1
$LN160@lssproto_C:
  00ff5	85 c0		 test	 eax, eax
  00ff7	75 63		 jne	 SHORT $LN30@lssproto_C

; 3227 : 		int effect;
; 3228 : 		int level;
; 3229 : 		char* option;
; 3230 : 		effect = lssproto_demkstr_int( lssproto.token_list[2] );

  00ff9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00ffe	ff 70 08	 push	 DWORD PTR [eax+8]
  01001	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3231 : 		level = lssproto_demkstr_int( lssproto.token_list[3] );

  01006	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0100c	8b f8		 mov	 edi, eax
  0100e	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01011	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3232 : 		option = lssproto_wrapStringAddr( lssproto_stringwrapper[3] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[4] ));

  01016	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0101c	8b f0		 mov	 esi, eax
  0101e	ff 71 10	 push	 DWORD PTR [ecx+16]
  01021	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01026	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0102c	50		 push	 eax
  0102d	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01033	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01036	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3233 : 		lssproto_EF_recv( fd,effect,level,option);

  0103b	50		 push	 eax
  0103c	56		 push	 esi
  0103d	57		 push	 edi
  0103e	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  01041	e8 00 00 00 00	 call	 ?lssproto_EF_recv@@YAXHHHPAD@Z ; lssproto_EF_recv
  01046	83 c4 28	 add	 esp, 40			; 00000028H

; 3234 : 		return 0;

  01049	33 c0		 xor	 eax, eax
  0104b	5b		 pop	 ebx
  0104c	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0104d	5e		 pop	 esi
  0104e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01051	33 cd		 xor	 ecx, ebp
  01053	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01058	8b e5		 mov	 esp, ebp
  0105a	5d		 pop	 ebp
  0105b	c3		 ret	 0
$LN30@lssproto_C:

; 3235 : 	}
; 3236 : /*
; 3237 : 2218 :   <LI><a name="SC_SE"><font color=blue>servertoclient SE( int x, int y, int senumber, int sw );<br></font></a>
; 3238 : 2219 :       (SoundEffect)<br>
; 3239 : 2220 : 	???????SE?î¡?????îî???<br>
; 3240 : 2221 :       <br>
; 3241 : 2222 :       <dl>
; 3242 : 2223 :         <dt>int x,y
; 3243 : 2224 :         <dd>SE?îî???î³?
; 3244 : 2225 :         <dt>int senumber
; 3245 : 2226 :         <dd>???î±?
; 3246 : 2227 :         <dt>int sw
; 3247 : 2228 :         <dd>???î¡???î????
; 3248 : 2229 :           <ul>
; 3249 : 2230 :             <li>0:î??
; 3250 : 2231 :             <li>1:î¡??
; 3251 : 2232 :           </ul>
; 3252 : 2233 :       </dl>
; 3253 : 2234 :       <br>
; 3254 : 2235 :       <br>
; 3255 : 2236 :       <hr>
; 3256 : 2237 :       <br>
; 3257 : */
; 3258 : 
; 3259 : 	if( strcmp( funcname , "SE" ) == 0 ){

  0105c	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02ODEKANEE@SE@
  01061	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL161@lssproto_C:
  01067	8a 10		 mov	 dl, BYTE PTR [eax]
  01069	3a 11		 cmp	 dl, BYTE PTR [ecx]
  0106b	75 1a		 jne	 SHORT $LN162@lssproto_C
  0106d	84 d2		 test	 dl, dl
  0106f	74 12		 je	 SHORT $LN163@lssproto_C
  01071	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  01074	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01077	75 0e		 jne	 SHORT $LN162@lssproto_C
  01079	83 c0 02	 add	 eax, 2
  0107c	83 c1 02	 add	 ecx, 2
  0107f	84 d2		 test	 dl, dl
  01081	75 e4		 jne	 SHORT $LL161@lssproto_C
$LN163@lssproto_C:
  01083	33 c0		 xor	 eax, eax
  01085	eb 05		 jmp	 SHORT $LN164@lssproto_C
$LN162@lssproto_C:
  01087	1b c0		 sbb	 eax, eax
  01089	83 c8 01	 or	 eax, 1
$LN164@lssproto_C:
  0108c	85 c0		 test	 eax, eax
  0108e	75 5f		 jne	 SHORT $LN31@lssproto_C

; 3260 : 		int x;
; 3261 : 		int y;
; 3262 : 		int senumber;
; 3263 : 		int sw;
; 3264 : 		x = lssproto_demkstr_int( lssproto.token_list[2] );

  01090	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01095	ff 70 08	 push	 DWORD PTR [eax+8]
  01098	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3265 : 		y = lssproto_demkstr_int( lssproto.token_list[3] );

  0109d	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  010a3	8b d8		 mov	 ebx, eax
  010a5	ff 71 0c	 push	 DWORD PTR [ecx+12]
  010a8	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3266 : 		senumber = lssproto_demkstr_int( lssproto.token_list[4] );

  010ad	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  010b3	8b f8		 mov	 edi, eax
  010b5	ff 71 10	 push	 DWORD PTR [ecx+16]
  010b8	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3267 : 		sw = lssproto_demkstr_int( lssproto.token_list[5] );

  010bd	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  010c3	8b f0		 mov	 esi, eax
  010c5	ff 71 14	 push	 DWORD PTR [ecx+20]
  010c8	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3268 : 		lssproto_SE_recv( fd,x,y,senumber,sw);

  010cd	50		 push	 eax
  010ce	56		 push	 esi
  010cf	57		 push	 edi
  010d0	53		 push	 ebx
  010d1	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  010d4	e8 00 00 00 00	 call	 ?lssproto_SE_recv@@YAXHHHHH@Z ; lssproto_SE_recv
  010d9	83 c4 24	 add	 esp, 36			; 00000024H

; 3269 : 		return 0;

  010dc	33 c0		 xor	 eax, eax
  010de	5b		 pop	 ebx
  010df	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  010e0	5e		 pop	 esi
  010e1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  010e4	33 cd		 xor	 ecx, ebp
  010e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  010eb	8b e5		 mov	 esp, ebp
  010ed	5d		 pop	 ebp
  010ee	c3		 ret	 0
$LN31@lssproto_C:

; 3270 : 	}
; 3271 : /*
; 3272 : 2271 :   <LI><a name="SC_CLIENTLOGIN"><font color=blue>servertoclient ClientLogin(string result);<br></font></a>
; 3273 : 2272 :       ClientLogin?î??
; 3274 : 2273 :       <br><br>
; 3275 : 2274 :       <dl>
; 3276 : 2275 : 	<dt>string result
; 3277 : 2276 : 	<dd>"ok" ???î°?????î°?????????????
; 3278 : 2277 :       </dl>
; 3279 : 2278 :       <br>
; 3280 : 2279 :       <br>
; 3281 : 2280 :       <hr>
; 3282 : 2281 :       <br>
; 3283 : 2282 : 
; 3284 : 2283 :       
; 3285 : */
; 3286 : 
; 3287 : 	if( strcmp( funcname , "ClientLogin" ) == 0 ){

  010ef	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0M@GCIKGDI@ClientLogin@
  010f4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  010fa	66 0f 1f 44 00
	00		 npad	 6
$LL165@lssproto_C:
  01100	8a 10		 mov	 dl, BYTE PTR [eax]
  01102	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01104	75 1a		 jne	 SHORT $LN166@lssproto_C
  01106	84 d2		 test	 dl, dl
  01108	74 12		 je	 SHORT $LN167@lssproto_C
  0110a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0110d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01110	75 0e		 jne	 SHORT $LN166@lssproto_C
  01112	83 c0 02	 add	 eax, 2
  01115	83 c1 02	 add	 ecx, 2
  01118	84 d2		 test	 dl, dl
  0111a	75 e4		 jne	 SHORT $LL165@lssproto_C
$LN167@lssproto_C:
  0111c	33 c0		 xor	 eax, eax
  0111e	eb 05		 jmp	 SHORT $LN168@lssproto_C
$LN166@lssproto_C:
  01120	1b c0		 sbb	 eax, eax
  01122	83 c8 01	 or	 eax, 1
$LN168@lssproto_C:
  01125	85 c0		 test	 eax, eax
  01127	75 40		 jne	 SHORT $LN32@lssproto_C

; 3288 : 		char* result;
; 3289 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  01129	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0112e	ff 70 08	 push	 DWORD PTR [eax+8]
  01131	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01136	50		 push	 eax
  01137	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0113c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01142	ff 70 04	 push	 DWORD PTR [eax+4]
  01145	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3290 : 		lssproto_ClientLogin_recv( fd,result);

  0114a	50		 push	 eax
  0114b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0114e	e8 00 00 00 00	 call	 ?lssproto_ClientLogin_recv@@YAXHPAD@Z ; lssproto_ClientLogin_recv
  01153	83 c4 18	 add	 esp, 24			; 00000018H

; 3291 : 		return 0;

  01156	33 c0		 xor	 eax, eax
  01158	5b		 pop	 ebx
  01159	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0115a	5e		 pop	 esi
  0115b	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0115e	33 cd		 xor	 ecx, ebp
  01160	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01165	8b e5		 mov	 esp, ebp
  01167	5d		 pop	 ebp
  01168	c3		 ret	 0
$LN32@lssproto_C:

; 3292 : 	}
; 3293 : /*
; 3294 : 2314 :   <LI><a name="SC_CREATENEWCHAR"><font color=blue>servertoclient CreateNewChar(string result,string data);<br></font></a>
; 3295 : 2315 :       CreateNewChar?î??
; 3296 : 2316 :       <br><br>
; 3297 : 2317 :       <dl>
; 3298 : 2318 : 	<dt>string result
; 3299 : 2319 : 	<dd>"successful" ? "failed" ????????î°???????
; 3300 : 2320 : 	    ?????
; 3301 : 2321 : 	<dt>string data
; 3302 : 2322 : 	<dd>"failed" ??????î?î·????î¤?î°?
; 3303 : 2323 : 	    ????????????????î?????????
; 3304 : 2324 : 	    ???î°??
; 3305 : 2325 : 	    <pre>
; 3306 : 2326 : 	    "failed bad parameter"
; 3307 : 2327 : 	    </pre>
; 3308 : 2328 : 	    ?î¶???????î?????î???????îª?????
; 3309 : 2329 : 	    ????????î ¸??????????????î?????
; 3310 : 2330 : 	    ?????????î°????????????
; 3311 : 2331 : 	    
; 3312 : 2332 :       </dl>
; 3313 : 2333 :       <br>
; 3314 : 2334 :       <br>
; 3315 : 2335 :       <hr>
; 3316 : 2336 :       <br>
; 3317 : 2337 : 
; 3318 : */
; 3319 : 
; 3320 : 	if( strcmp( funcname , "CreateNewChar" ) == 0 ){

  01169	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0O@EHKKOHMG@CreateNewChar@
  0116e	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL169@lssproto_C:
  01174	8a 10		 mov	 dl, BYTE PTR [eax]
  01176	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01178	75 1a		 jne	 SHORT $LN170@lssproto_C
  0117a	84 d2		 test	 dl, dl
  0117c	74 12		 je	 SHORT $LN171@lssproto_C
  0117e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  01181	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01184	75 0e		 jne	 SHORT $LN170@lssproto_C
  01186	83 c0 02	 add	 eax, 2
  01189	83 c1 02	 add	 ecx, 2
  0118c	84 d2		 test	 dl, dl
  0118e	75 e4		 jne	 SHORT $LL169@lssproto_C
$LN171@lssproto_C:
  01190	33 c0		 xor	 eax, eax
  01192	eb 05		 jmp	 SHORT $LN172@lssproto_C
$LN170@lssproto_C:
  01194	1b c0		 sbb	 eax, eax
  01196	83 c8 01	 or	 eax, 1
$LN172@lssproto_C:
  01199	85 c0		 test	 eax, eax
  0119b	75 66		 jne	 SHORT $LN33@lssproto_C

; 3321 : 		char* result;
; 3322 : 		char* data;
; 3323 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  0119d	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  011a2	ff 70 08	 push	 DWORD PTR [eax+8]
  011a5	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  011aa	50		 push	 eax
  011ab	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  011b0	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  011b6	ff 70 04	 push	 DWORD PTR [eax+4]
  011b9	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3324 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  011be	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  011c4	8b f0		 mov	 esi, eax
  011c6	ff 71 0c	 push	 DWORD PTR [ecx+12]
  011c9	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  011ce	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  011d4	50		 push	 eax
  011d5	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  011db	ff 71 08	 push	 DWORD PTR [ecx+8]
  011de	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3325 : 		lssproto_CreateNewChar_recv( fd,result,data);

  011e3	50		 push	 eax
  011e4	56		 push	 esi
  011e5	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  011e8	e8 00 00 00 00	 call	 ?lssproto_CreateNewChar_recv@@YAXHPAD0@Z ; lssproto_CreateNewChar_recv
  011ed	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3326 : 		return 0;

  011f0	33 c0		 xor	 eax, eax
  011f2	5b		 pop	 ebx
  011f3	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  011f4	5e		 pop	 esi
  011f5	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  011f8	33 cd		 xor	 ecx, ebp
  011fa	e8 00 00 00 00	 call	 @__security_check_cookie@4
  011ff	8b e5		 mov	 esp, ebp
  01201	5d		 pop	 ebp
  01202	c3		 ret	 0
$LN33@lssproto_C:

; 3327 : 	}
; 3328 : /*
; 3329 : 2349 :   <LI><a name="SC_CHARDELETE"><font color=blue>servertoclient CharDelete(string result,string data);<br></font></a>
; 3330 : 2350 :       CharDelete ?î??
; 3331 : 2351 :       <br><br>
; 3332 : 2352 :       <dl>
; 3333 : 2353 : 	<dt>string result
; 3334 : 2354 : 	<dd>"successful" ? "failed" ???????????????
; 3335 : 2355 : 	<dt>string data
; 3336 : 2356 : 	<dd>"failed" ??????î?î·????î¤?î°?
; 3337 : 2357 : 	    ????????????????î?????????
; 3338 : 2358 : 	    ??????????????????????
; 3339 : 2359 :       </dl>
; 3340 : 2360 :       <br>
; 3341 : 2361 :       <br>
; 3342 : 2362 :       <hr>
; 3343 : 2363 :       <br>
; 3344 : 2364 : 
; 3345 : 2365 : 
; 3346 : */
; 3347 : 
; 3348 : 	if( strcmp( funcname , "CharDelete" ) == 0 ){

  01203	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@EPLKHLOD@CharDelete@
  01208	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0120e	66 90		 npad	 2
$LL173@lssproto_C:
  01210	8a 10		 mov	 dl, BYTE PTR [eax]
  01212	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01214	75 1a		 jne	 SHORT $LN174@lssproto_C
  01216	84 d2		 test	 dl, dl
  01218	74 12		 je	 SHORT $LN175@lssproto_C
  0121a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0121d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01220	75 0e		 jne	 SHORT $LN174@lssproto_C
  01222	83 c0 02	 add	 eax, 2
  01225	83 c1 02	 add	 ecx, 2
  01228	84 d2		 test	 dl, dl
  0122a	75 e4		 jne	 SHORT $LL173@lssproto_C
$LN175@lssproto_C:
  0122c	33 c0		 xor	 eax, eax
  0122e	eb 05		 jmp	 SHORT $LN176@lssproto_C
$LN174@lssproto_C:
  01230	1b c0		 sbb	 eax, eax
  01232	83 c8 01	 or	 eax, 1
$LN176@lssproto_C:
  01235	85 c0		 test	 eax, eax
  01237	75 66		 jne	 SHORT $LN34@lssproto_C

; 3349 : 		char* result;
; 3350 : 		char* data;
; 3351 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  01239	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0123e	ff 70 08	 push	 DWORD PTR [eax+8]
  01241	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01246	50		 push	 eax
  01247	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0124c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01252	ff 70 04	 push	 DWORD PTR [eax+4]
  01255	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3352 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  0125a	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01260	8b f0		 mov	 esi, eax
  01262	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01265	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0126a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  01270	50		 push	 eax
  01271	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01277	ff 71 08	 push	 DWORD PTR [ecx+8]
  0127a	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3353 : 		lssproto_CharDelete_recv( fd,result,data);

  0127f	50		 push	 eax
  01280	56		 push	 esi
  01281	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  01284	e8 00 00 00 00	 call	 ?lssproto_CharDelete_recv@@YAXHPAD0@Z ; lssproto_CharDelete_recv
  01289	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3354 : 		return 0;

  0128c	33 c0		 xor	 eax, eax
  0128e	5b		 pop	 ebx
  0128f	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  01290	5e		 pop	 esi
  01291	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01294	33 cd		 xor	 ecx, ebp
  01296	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0129b	8b e5		 mov	 esp, ebp
  0129d	5d		 pop	 ebp
  0129e	c3		 ret	 0
$LN34@lssproto_C:

; 3355 : 	}
; 3356 : /*
; 3357 : 2376 :   <LI><a name="SC_CHARLOGIN"><font color=blue>servertoclient CharLogin(string result,string data);<br></font></a>
; 3358 : 2377 :       CharaLogin?î??
; 3359 : 2378 :       <br><br>
; 3360 : 2379 :       <dl>
; 3361 : 2380 : 	<dt>string result
; 3362 : 2381 : 	<dd>"successful" ? "failed" ???????????????
; 3363 : 2382 : 	<dt>string data
; 3364 : 2383 : 	<dd>"failed" ??? ?????î°????????????
; 3365 : 2384 :       </dl>
; 3366 : 2385 :       <br>
; 3367 : 2386 :       <br>
; 3368 : 2387 :       <hr>
; 3369 : 2388 :       <br>
; 3370 : 2389 : 
; 3371 : 2390 : 
; 3372 : */
; 3373 : 
; 3374 : 	if( strcmp( funcname , "CharLogin" ) == 0 ){

  0129f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_09JAIEDKAG@CharLogin@
  012a4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  012aa	66 0f 1f 44 00
	00		 npad	 6
$LL177@lssproto_C:
  012b0	8a 10		 mov	 dl, BYTE PTR [eax]
  012b2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  012b4	75 1a		 jne	 SHORT $LN178@lssproto_C
  012b6	84 d2		 test	 dl, dl
  012b8	74 12		 je	 SHORT $LN179@lssproto_C
  012ba	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  012bd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  012c0	75 0e		 jne	 SHORT $LN178@lssproto_C
  012c2	83 c0 02	 add	 eax, 2
  012c5	83 c1 02	 add	 ecx, 2
  012c8	84 d2		 test	 dl, dl
  012ca	75 e4		 jne	 SHORT $LL177@lssproto_C
$LN179@lssproto_C:
  012cc	33 c0		 xor	 eax, eax
  012ce	eb 05		 jmp	 SHORT $LN180@lssproto_C
$LN178@lssproto_C:
  012d0	1b c0		 sbb	 eax, eax
  012d2	83 c8 01	 or	 eax, 1
$LN180@lssproto_C:
  012d5	85 c0		 test	 eax, eax
  012d7	75 66		 jne	 SHORT $LN35@lssproto_C

; 3375 : 		char* result;
; 3376 : 		char* data;
; 3377 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  012d9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  012de	ff 70 08	 push	 DWORD PTR [eax+8]
  012e1	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  012e6	50		 push	 eax
  012e7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  012ec	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  012f2	ff 70 04	 push	 DWORD PTR [eax+4]
  012f5	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3378 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  012fa	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01300	8b f0		 mov	 esi, eax
  01302	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01305	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0130a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  01310	50		 push	 eax
  01311	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01317	ff 71 08	 push	 DWORD PTR [ecx+8]
  0131a	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3379 : 		lssproto_CharLogin_recv( fd,result,data);

  0131f	50		 push	 eax
  01320	56		 push	 esi
  01321	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  01324	e8 00 00 00 00	 call	 ?lssproto_CharLogin_recv@@YAXHPAD0@Z ; lssproto_CharLogin_recv
  01329	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3380 : 		return 0;

  0132c	33 c0		 xor	 eax, eax
  0132e	5b		 pop	 ebx
  0132f	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  01330	5e		 pop	 esi
  01331	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01334	33 cd		 xor	 ecx, ebp
  01336	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0133b	8b e5		 mov	 esp, ebp
  0133d	5d		 pop	 ebp
  0133e	c3		 ret	 0
$LN35@lssproto_C:

; 3381 : 	}
; 3382 : /*
; 3383 : 2396 :   <LI><a name="SC_CHARLIST"><font color=blue>servertoclient CharList(string result,string data);<br></font></a>
; 3384 : 2397 :       CharList?î??
; 3385 : 2398 :       <br><br>
; 3386 : 2399 :       <dl>
; 3387 : 2400 : 	<dt>string result
; 3388 : 2401 : 	<dd>"successful" ? "failed" ??????????????
; 3389 : 2402 : 	<dt>string data
; 3390 : 2403 : 	<dd>result?"successful"??????????????îî¼???
; 3391 : 2404 : 	    ??????????î¡î·??????????????î??
; 3392 : 2405 : 	    ???î°?????î°????????????????????
; 3393 : 2406 : 	    result ? "failed" ??????î?î·????î¤?î°???
; 3394 : 2407 : 	    ???î???????????î²???????????<br>
; 3395 : 2408 : 	    dataplace|faceimage|level|maxhp|atk|def|quick|charm|earth|water|fire|wind|logincount|name|place<br>
; 3396 : 2409 : 	    
; 3397 : 2410 : 	    <dl>
; 3398 : 2411 : 	      <dt>dataplace
; 3399 : 2412 : 	      <dd>????????î±?????????????????î±????î???
; 3400 : 2413 : 	      <dt>faceimage
; 3401 : 2414 : 	      <dd>????î±?
; 3402 : 2415 : 	      <dt>level
; 3403 : 2416 : 	      <dd>???????
; 3404 : 2417 : 	      <dt>maxhp,atk,def,quick,charm
; 3405 : 2418 : 	      <dd>???????
; 3406 : 2419 : 	      <dt>earth.water,fire,wind
; 3407 : 2420 : 	      <dd>?î´îî±
; 3408 : 2421 : 	      <dt>logincount
; 3409 : 2422 : 	      <dd>????????
; 3410 : 2423 : 	      <dt>name
; 3411 : 2424 : 	      <dd>????î¡î·
; 3412 : 2425 : 	      <dt>place
; 3413 : 2426 : 	      <dd>??????î¶?
; 3414 : 2427 : 	    </dl>
; 3415 : 2428 : 	    "|" ??î?????? ?????????<a
; 3416 : 2429 : 	    href="#escaping">?????</a>????????????î 
; 3417 : 2430 : 	    ??????<br>
; 3418 : 2431 : 	    
; 3419 : 2432 :       </dl>
; 3420 : 2433 :       <br>
; 3421 : 2434 :       <br>
; 3422 : 2435 :       <hr>
; 3423 : 2436 :       <br>
; 3424 : 2437 : 
; 3425 : */
; 3426 : 
; 3427 : 	if( strcmp( funcname , "CharList" ) == 0 ){

  0133f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_08FAAFODDM@CharList@
  01344	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0134a	66 0f 1f 44 00
	00		 npad	 6
$LL181@lssproto_C:
  01350	8a 10		 mov	 dl, BYTE PTR [eax]
  01352	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01354	75 1a		 jne	 SHORT $LN182@lssproto_C
  01356	84 d2		 test	 dl, dl
  01358	74 12		 je	 SHORT $LN183@lssproto_C
  0135a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0135d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01360	75 0e		 jne	 SHORT $LN182@lssproto_C
  01362	83 c0 02	 add	 eax, 2
  01365	83 c1 02	 add	 ecx, 2
  01368	84 d2		 test	 dl, dl
  0136a	75 e4		 jne	 SHORT $LL181@lssproto_C
$LN183@lssproto_C:
  0136c	33 c0		 xor	 eax, eax
  0136e	eb 05		 jmp	 SHORT $LN184@lssproto_C
$LN182@lssproto_C:
  01370	1b c0		 sbb	 eax, eax
  01372	83 c8 01	 or	 eax, 1
$LN184@lssproto_C:
  01375	85 c0		 test	 eax, eax
  01377	75 66		 jne	 SHORT $LN36@lssproto_C

; 3428 : 		char* result;
; 3429 : 		char* data;
; 3430 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  01379	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0137e	ff 70 08	 push	 DWORD PTR [eax+8]
  01381	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01386	50		 push	 eax
  01387	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0138c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01392	ff 70 04	 push	 DWORD PTR [eax+4]
  01395	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3431 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  0139a	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  013a0	8b f0		 mov	 esi, eax
  013a2	ff 71 0c	 push	 DWORD PTR [ecx+12]
  013a5	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  013aa	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  013b0	50		 push	 eax
  013b1	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  013b7	ff 71 08	 push	 DWORD PTR [ecx+8]
  013ba	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3432 : 		lssproto_CharList_recv( fd,result,data);

  013bf	50		 push	 eax
  013c0	56		 push	 esi
  013c1	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  013c4	e8 00 00 00 00	 call	 ?lssproto_CharList_recv@@YAXHPAD0@Z ; lssproto_CharList_recv
  013c9	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3433 : 		return 0;

  013cc	33 c0		 xor	 eax, eax
  013ce	5b		 pop	 ebx
  013cf	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  013d0	5e		 pop	 esi
  013d1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  013d4	33 cd		 xor	 ecx, ebp
  013d6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  013db	8b e5		 mov	 esp, ebp
  013dd	5d		 pop	 ebp
  013de	c3		 ret	 0
$LN36@lssproto_C:

; 3434 : 	}
; 3435 : /*
; 3436 : 2445 :   <LI><a name="SC_CHARLOGOUT"><font color=blue>servertoclient CharLogout(string result , string data);<br></font></a>
; 3437 : 2446 :       Logout?î??î??
; 3438 : 2447 :       <br><br>
; 3439 : 2448 :       <dl>
; 3440 : 2449 : 	<dt>string result
; 3441 : 2450 : 	<dd>"successful" ? "failed" ???????????????
; 3442 : 2451 : 	<dt>string data
; 3443 : 2452 : 	<dd>"failed" ??????î ¸????î§î²???(î¿î)?î?î·?
; 3444 : 2453 : 	    ???î¤?î°???????????????
; 3445 : 2454 :       </dl>
; 3446 : 2455 :       <br>
; 3447 : 2456 :       <br>
; 3448 : 2457 :       <hr>
; 3449 : 2458 :       <br>
; 3450 : */
; 3451 : 
; 3452 : 	if( strcmp( funcname , "CharLogout" ) == 0 ){

  013df	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0L@JHLIIOLA@CharLogout@
  013e4	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  013ea	66 0f 1f 44 00
	00		 npad	 6
$LL185@lssproto_C:
  013f0	8a 10		 mov	 dl, BYTE PTR [eax]
  013f2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  013f4	75 1a		 jne	 SHORT $LN186@lssproto_C
  013f6	84 d2		 test	 dl, dl
  013f8	74 12		 je	 SHORT $LN187@lssproto_C
  013fa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  013fd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01400	75 0e		 jne	 SHORT $LN186@lssproto_C
  01402	83 c0 02	 add	 eax, 2
  01405	83 c1 02	 add	 ecx, 2
  01408	84 d2		 test	 dl, dl
  0140a	75 e4		 jne	 SHORT $LL185@lssproto_C
$LN187@lssproto_C:
  0140c	33 c0		 xor	 eax, eax
  0140e	eb 05		 jmp	 SHORT $LN188@lssproto_C
$LN186@lssproto_C:
  01410	1b c0		 sbb	 eax, eax
  01412	83 c8 01	 or	 eax, 1
$LN188@lssproto_C:
  01415	85 c0		 test	 eax, eax
  01417	75 66		 jne	 SHORT $LN37@lssproto_C

; 3453 : 		char* result;
; 3454 : 		char* data;
; 3455 : 		result = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  01419	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0141e	ff 70 08	 push	 DWORD PTR [eax+8]
  01421	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01426	50		 push	 eax
  01427	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0142c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01432	ff 70 04	 push	 DWORD PTR [eax+4]
  01435	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3456 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  0143a	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01440	8b f0		 mov	 esi, eax
  01442	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01445	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  0144a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  01450	50		 push	 eax
  01451	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01457	ff 71 08	 push	 DWORD PTR [ecx+8]
  0145a	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3457 : 		lssproto_CharLogout_recv( fd,result,data);

  0145f	50		 push	 eax
  01460	56		 push	 esi
  01461	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  01464	e8 00 00 00 00	 call	 ?lssproto_CharLogout_recv@@YAXHPAD0@Z ; lssproto_CharLogout_recv
  01469	83 c4 2c	 add	 esp, 44			; 0000002cH

; 3458 : 		return 0;

  0146c	33 c0		 xor	 eax, eax
  0146e	5b		 pop	 ebx
  0146f	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  01470	5e		 pop	 esi
  01471	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01474	33 cd		 xor	 ecx, ebp
  01476	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0147b	8b e5		 mov	 esp, ebp
  0147d	5d		 pop	 ebp
  0147e	c3		 ret	 0
$LN37@lssproto_C:

; 3459 : 	}
; 3460 : /*
; 3461 : 2465 :   <LI><a name="SC_PROCGET"><font color=blue>servertoclient ProcGet( string data);<br></font></a>
; 3462 : 2466 : 	ProcGet?î??
; 3463 : 2467 :       <br><br>
; 3464 : 2468 :       <dl>
; 3465 : 2469 : 	<dt>string data
; 3466 : 2470 : 	<dd>????????????????î ?îºî«??î???î ??log/proc?????????î ??î¯??
; 3467 : 2471 :       </dl>
; 3468 : 2472 :       <br>
; 3469 : 2473 :       <br>
; 3470 : 2474 :       <hr>
; 3471 : 2475 :       <br>
; 3472 : 2476 : 
; 3473 : */
; 3474 : 
; 3475 : 	if( strcmp( funcname , "ProcGet" ) == 0 ){

  0147f	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_07JALAHHPN@ProcGet@
  01484	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  0148a	66 0f 1f 44 00
	00		 npad	 6
$LL189@lssproto_C:
  01490	8a 10		 mov	 dl, BYTE PTR [eax]
  01492	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01494	75 1a		 jne	 SHORT $LN190@lssproto_C
  01496	84 d2		 test	 dl, dl
  01498	74 12		 je	 SHORT $LN191@lssproto_C
  0149a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0149d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  014a0	75 0e		 jne	 SHORT $LN190@lssproto_C
  014a2	83 c0 02	 add	 eax, 2
  014a5	83 c1 02	 add	 ecx, 2
  014a8	84 d2		 test	 dl, dl
  014aa	75 e4		 jne	 SHORT $LL189@lssproto_C
$LN191@lssproto_C:
  014ac	33 c0		 xor	 eax, eax
  014ae	eb 05		 jmp	 SHORT $LN192@lssproto_C
$LN190@lssproto_C:
  014b0	1b c0		 sbb	 eax, eax
  014b2	83 c8 01	 or	 eax, 1
$LN192@lssproto_C:
  014b5	85 c0		 test	 eax, eax
  014b7	75 40		 jne	 SHORT $LN38@lssproto_C

; 3476 : 		char* data;
; 3477 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  014b9	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  014be	ff 70 08	 push	 DWORD PTR [eax+8]
  014c1	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  014c6	50		 push	 eax
  014c7	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  014cc	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  014d2	ff 70 04	 push	 DWORD PTR [eax+4]
  014d5	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3478 : 		lssproto_ProcGet_recv( fd,data);

  014da	50		 push	 eax
  014db	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  014de	e8 00 00 00 00	 call	 ?lssproto_ProcGet_recv@@YAXHPAD@Z ; lssproto_ProcGet_recv
  014e3	83 c4 18	 add	 esp, 24			; 00000018H

; 3479 : 		return 0;

  014e6	33 c0		 xor	 eax, eax
  014e8	5b		 pop	 ebx
  014e9	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  014ea	5e		 pop	 esi
  014eb	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  014ee	33 cd		 xor	 ecx, ebp
  014f0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  014f5	8b e5		 mov	 esp, ebp
  014f7	5d		 pop	 ebp
  014f8	c3		 ret	 0
$LN38@lssproto_C:

; 3480 : 	}
; 3481 : /*
; 3482 : 2483 :   <LI><a name="SC_PLAYERNUMGET"><font color=blue>servertoclient PlayerNumGet( int logincount, int player);<br></font></a>
; 3483 : 2484 : 	PlayerNumGet?î??
; 3484 : 2485 :       <br><br>
; 3485 : 2486 :       <dl>
; 3486 : 2487 : 	<dt>int logincount,player
; 3487 : 2488 : 	<dd>
; 3488 : 2489 :       </dl>
; 3489 : 2490 :       <br>
; 3490 : 2491 :       <br>
; 3491 : 2492 :       <hr>
; 3492 : 2493 :       <br>
; 3493 : 2494 : 
; 3494 : */
; 3495 : 
; 3496 : 	if( strcmp( funcname , "PlayerNumGet" ) == 0 ){

  014f9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_0N@JKCLOODO@PlayerNumGet@
  014fe	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL193@lssproto_C:
  01504	8a 10		 mov	 dl, BYTE PTR [eax]
  01506	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01508	75 1a		 jne	 SHORT $LN194@lssproto_C
  0150a	84 d2		 test	 dl, dl
  0150c	74 12		 je	 SHORT $LN195@lssproto_C
  0150e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  01511	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01514	75 0e		 jne	 SHORT $LN194@lssproto_C
  01516	83 c0 02	 add	 eax, 2
  01519	83 c1 02	 add	 ecx, 2
  0151c	84 d2		 test	 dl, dl
  0151e	75 e4		 jne	 SHORT $LL193@lssproto_C
$LN195@lssproto_C:
  01520	33 c0		 xor	 eax, eax
  01522	eb 05		 jmp	 SHORT $LN196@lssproto_C
$LN194@lssproto_C:
  01524	1b c0		 sbb	 eax, eax
  01526	83 c8 01	 or	 eax, 1
$LN196@lssproto_C:
  01529	85 c0		 test	 eax, eax
  0152b	75 3d		 jne	 SHORT $LN39@lssproto_C

; 3497 : 		int logincount;
; 3498 : 		int player;
; 3499 : 		logincount = lssproto_demkstr_int( lssproto.token_list[2] );

  0152d	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01532	ff 70 08	 push	 DWORD PTR [eax+8]
  01535	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3500 : 		player = lssproto_demkstr_int( lssproto.token_list[3] );

  0153a	8b 0d 2c 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  01540	8b f0		 mov	 esi, eax
  01542	ff 71 0c	 push	 DWORD PTR [ecx+12]
  01545	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3501 : 		lssproto_PlayerNumGet_recv( fd,logincount,player);

  0154a	50		 push	 eax
  0154b	56		 push	 esi
  0154c	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0154f	e8 00 00 00 00	 call	 ?lssproto_PlayerNumGet_recv@@YAXHHH@Z ; lssproto_PlayerNumGet_recv
  01554	83 c4 14	 add	 esp, 20			; 00000014H

; 3502 : 		return 0;

  01557	33 c0		 xor	 eax, eax
  01559	5b		 pop	 ebx
  0155a	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0155b	5e		 pop	 esi
  0155c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0155f	33 cd		 xor	 ecx, ebp
  01561	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01566	8b e5		 mov	 esp, ebp
  01568	5d		 pop	 ebp
  01569	c3		 ret	 0
$LN39@lssproto_C:

; 3503 : 	}
; 3504 : /*
; 3505 : 2506 :   <LI><a name="SC_ECHO"><font color=blue>servertoclient Echo( string test );<br></font></a>
; 3506 : 2507 :       Echo?î??î??
; 3507 : 2508 :       <dl>
; 3508 : 2509 : 	<dt>string test
; 3509 : 2510 : 	<dd>????î¼????î°????????????
; 3510 : 2511 :       </dl>
; 3511 : 2512 :       <br>
; 3512 : 2513 :       <br>
; 3513 : 2514 :       <hr>
; 3514 : 2515 :       <br>
; 3515 : 2516 :   
; 3516 : */
; 3517 : 
; 3518 : 	if( strcmp( funcname , "Echo" ) == 0 ){

  0156a	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_04CEPMGKMG@Echo@
  0156f	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL197@lssproto_C:
  01575	8a 10		 mov	 dl, BYTE PTR [eax]
  01577	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01579	75 1a		 jne	 SHORT $LN198@lssproto_C
  0157b	84 d2		 test	 dl, dl
  0157d	74 12		 je	 SHORT $LN199@lssproto_C
  0157f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  01582	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01585	75 0e		 jne	 SHORT $LN198@lssproto_C
  01587	83 c0 02	 add	 eax, 2
  0158a	83 c1 02	 add	 ecx, 2
  0158d	84 d2		 test	 dl, dl
  0158f	75 e4		 jne	 SHORT $LL197@lssproto_C
$LN199@lssproto_C:
  01591	33 c0		 xor	 eax, eax
  01593	eb 05		 jmp	 SHORT $LN200@lssproto_C
$LN198@lssproto_C:
  01595	1b c0		 sbb	 eax, eax
  01597	83 c8 01	 or	 eax, 1
$LN200@lssproto_C:
  0159a	85 c0		 test	 eax, eax
  0159c	75 40		 jne	 SHORT $LN40@lssproto_C

; 3519 : 		char* test;
; 3520 : 		test = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  0159e	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  015a3	ff 70 08	 push	 DWORD PTR [eax+8]
  015a6	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  015ab	50		 push	 eax
  015ac	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  015b1	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  015b7	ff 70 04	 push	 DWORD PTR [eax+4]
  015ba	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3521 : 		lssproto_Echo_recv( fd,test);

  015bf	50		 push	 eax
  015c0	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  015c3	e8 00 00 00 00	 call	 ?lssproto_Echo_recv@@YAXHPAD@Z ; lssproto_Echo_recv
  015c8	83 c4 18	 add	 esp, 24			; 00000018H

; 3522 : 		return 0;

  015cb	33 c0		 xor	 eax, eax
  015cd	5b		 pop	 ebx
  015ce	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  015cf	5e		 pop	 esi
  015d0	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  015d3	33 cd		 xor	 ecx, ebp
  015d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  015da	8b e5		 mov	 esp, ebp
  015dc	5d		 pop	 ebp
  015dd	c3		 ret	 0
$LN40@lssproto_C:

; 3523 : 	}
; 3524 : 
; 3525 : //-------------------------------------------------------
; 3526 : //	Add Command Count
; 3527 : //	Robin 2001/04/06
; 3528 : //-------------------------------------------------------
; 3529 : 
; 3530 : 	if( strcmp( funcname , "NU" ) == 0 ){

  015de	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02LNHGCPDG@NU@
  015e3	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
  015e9	0f 1f 80 00 00
	00 00		 npad	 7
$LL201@lssproto_C:
  015f0	8a 10		 mov	 dl, BYTE PTR [eax]
  015f2	3a 11		 cmp	 dl, BYTE PTR [ecx]
  015f4	75 1a		 jne	 SHORT $LN202@lssproto_C
  015f6	84 d2		 test	 dl, dl
  015f8	74 12		 je	 SHORT $LN203@lssproto_C
  015fa	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  015fd	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01600	75 0e		 jne	 SHORT $LN202@lssproto_C
  01602	83 c0 02	 add	 eax, 2
  01605	83 c1 02	 add	 ecx, 2
  01608	84 d2		 test	 dl, dl
  0160a	75 e4		 jne	 SHORT $LL201@lssproto_C
$LN203@lssproto_C:
  0160c	33 c0		 xor	 eax, eax
  0160e	eb 05		 jmp	 SHORT $LN204@lssproto_C
$LN202@lssproto_C:
  01610	1b c0		 sbb	 eax, eax
  01612	83 c8 01	 or	 eax, 1
$LN204@lssproto_C:
  01615	85 c0		 test	 eax, eax
  01617	75 2c		 jne	 SHORT $LN41@lssproto_C

; 3531 : 		int AddCount;
; 3532 : 		AddCount = lssproto_demkstr_int( lssproto.token_list[2] );

  01619	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0161e	ff 70 08	 push	 DWORD PTR [eax+8]
  01621	e8 00 00 00 00	 call	 ?lssproto_demkstr_int@@YAHPAD@Z ; lssproto_demkstr_int

; 3533 : 		lssproto_NU_recv( fd, AddCount);

  01626	50		 push	 eax
  01627	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0162a	e8 00 00 00 00	 call	 ?lssproto_NU_recv@@YAXHH@Z ; lssproto_NU_recv
  0162f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 3534 : 		return 0;

  01632	33 c0		 xor	 eax, eax
  01634	5b		 pop	 ebx
  01635	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  01636	5e		 pop	 esi
  01637	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0163a	33 cd		 xor	 ecx, ebp
  0163c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01641	8b e5		 mov	 esp, ebp
  01643	5d		 pop	 ebp
  01644	c3		 ret	 0
$LN41@lssproto_C:

; 3535 : 	}
; 3536 : 
; 3537 : 	// Robin 04/12 trade
; 3538 : 	if( strcmp( funcname , "TD" ) == 0 ){

  01645	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02PPBOCKIA@TD@
  0164a	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL205@lssproto_C:
  01650	8a 10		 mov	 dl, BYTE PTR [eax]
  01652	3a 11		 cmp	 dl, BYTE PTR [ecx]
  01654	75 1a		 jne	 SHORT $LN206@lssproto_C
  01656	84 d2		 test	 dl, dl
  01658	74 12		 je	 SHORT $LN207@lssproto_C
  0165a	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0165d	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  01660	75 0e		 jne	 SHORT $LN206@lssproto_C
  01662	83 c0 02	 add	 eax, 2
  01665	83 c1 02	 add	 ecx, 2
  01668	84 d2		 test	 dl, dl
  0166a	75 e4		 jne	 SHORT $LL205@lssproto_C
$LN207@lssproto_C:
  0166c	33 c0		 xor	 eax, eax
  0166e	eb 05		 jmp	 SHORT $LN208@lssproto_C
$LN206@lssproto_C:
  01670	1b c0		 sbb	 eax, eax
  01672	83 c8 01	 or	 eax, 1
$LN208@lssproto_C:
  01675	85 c0		 test	 eax, eax
  01677	75 40		 jne	 SHORT $LN42@lssproto_C

; 3539 : 		char* data;
; 3540 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[2] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[3] ));

  01679	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  0167e	ff 70 0c	 push	 DWORD PTR [eax+12]
  01681	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  01686	50		 push	 eax
  01687	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0168c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01692	ff 70 08	 push	 DWORD PTR [eax+8]
  01695	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3541 : 		lssproto_TD_recv( fd, data);

  0169a	50		 push	 eax
  0169b	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0169e	e8 00 00 00 00	 call	 ?lssproto_TD_recv@@YAXHPAD@Z ; lssproto_TD_recv
  016a3	83 c4 18	 add	 esp, 24			; 00000018H

; 3542 : 		return 0;

  016a6	33 c0		 xor	 eax, eax
  016a8	5b		 pop	 ebx
  016a9	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  016aa	5e		 pop	 esi
  016ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  016ae	33 cd		 xor	 ecx, ebp
  016b0	e8 00 00 00 00	 call	 @__security_check_cookie@4
  016b5	8b e5		 mov	 esp, ebp
  016b7	5d		 pop	 ebp
  016b8	c3		 ret	 0
$LN42@lssproto_C:

; 3543 : 	}
; 3544 : 
; 3545 : 	//	Robin 0529 family
; 3546 : 	if( strcmp( funcname , "FM" ) == 0 ){

  016b9	b9 00 00 00 00	 mov	 ecx, OFFSET ??_C@_02DBHOOGNH@FM@
  016be	8d 85 fc fb ff
	ff		 lea	 eax, DWORD PTR _funcname$[ebp]
$LL209@lssproto_C:
  016c4	8a 10		 mov	 dl, BYTE PTR [eax]
  016c6	3a 11		 cmp	 dl, BYTE PTR [ecx]
  016c8	75 1a		 jne	 SHORT $LN210@lssproto_C
  016ca	84 d2		 test	 dl, dl
  016cc	74 12		 je	 SHORT $LN211@lssproto_C
  016ce	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  016d1	3a 51 01	 cmp	 dl, BYTE PTR [ecx+1]
  016d4	75 0e		 jne	 SHORT $LN210@lssproto_C
  016d6	83 c0 02	 add	 eax, 2
  016d9	83 c1 02	 add	 ecx, 2
  016dc	84 d2		 test	 dl, dl
  016de	75 e4		 jne	 SHORT $LL209@lssproto_C
$LN211@lssproto_C:
  016e0	33 c0		 xor	 eax, eax
  016e2	eb 05		 jmp	 SHORT $LN212@lssproto_C
$LN210@lssproto_C:
  016e4	1b c0		 sbb	 eax, eax
  016e6	83 c8 01	 or	 eax, 1
$LN212@lssproto_C:
  016e9	85 c0		 test	 eax, eax
  016eb	75 40		 jne	 SHORT $LN43@lssproto_C

; 3547 : 		char* data;
; 3548 : 		data = lssproto_wrapStringAddr( lssproto_stringwrapper[1] , lssproto.workbufsize , lssproto_demkstr_string( lssproto.token_list[2] ));

  016ed	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  016f2	ff 70 08	 push	 DWORD PTR [eax+8]
  016f5	e8 00 00 00 00	 call	 ?lssproto_demkstr_string@@YAPADPAD@Z ; lssproto_demkstr_string
  016fa	50		 push	 eax
  016fb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  01700	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  01706	ff 70 04	 push	 DWORD PTR [eax+4]
  01709	e8 00 00 00 00	 call	 ?lssproto_wrapStringAddr@@YAPADPADH0@Z ; lssproto_wrapStringAddr

; 3549 : 		lssproto_FM_recv( fd, data);

  0170e	50		 push	 eax
  0170f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  01712	e8 00 00 00 00	 call	 ?lssproto_FM_recv@@YAXHPAD@Z ; lssproto_FM_recv
  01717	83 c4 18	 add	 esp, 24			; 00000018H

; 3550 : 		//lssproto_FM_recv( fd, lssproto_stringwrapper[0] );
; 3551 : 		return 0;

  0171a	33 c0		 xor	 eax, eax
  0171c	5b		 pop	 ebx
  0171d	5f		 pop	 edi

; 3552 : 	}
; 3553 : 
; 3554 : 	return -1;
; 3555 : }

  0171e	5e		 pop	 esi
  0171f	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01722	33 cd		 xor	 ecx, ebp
  01724	e8 00 00 00 00	 call	 @__security_check_cookie@4
  01729	8b e5		 mov	 esp, ebp
  0172b	5d		 pop	 ebp
  0172c	c3		 ret	 0
$LN43@lssproto_C:
  0172d	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  01730	83 c8 ff	 or	 eax, -1
  01733	5b		 pop	 ebx
  01734	5f		 pop	 edi
  01735	33 cd		 xor	 ecx, ebp
  01737	5e		 pop	 esi
  01738	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0173d	8b e5		 mov	 esp, ebp
  0173f	5d		 pop	 ebp
  01740	c3		 ret	 0
?lssproto_ClientDispatchMessage@@YAHHPAD@Z ENDP		; lssproto_ClientDispatchMessage
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?lssproto_CleanupClient@@YAXXZ
_TEXT	SEGMENT
?lssproto_CleanupClient@@YAXXZ PROC			; lssproto_CleanupClient, COMDAT

; 3578 : {

  00000	56		 push	 esi

; 3579 : 	int i;
; 3580 : 	// Nuke start
; 3581 : 	/*{ 
; 3582 : 		int i;
; 3583 : 		if (NJT_dummy) FREE(NJT_dummy);
; 3584 : 		for (i=0;i<NJT_MAX;i++) if (NJT[i]) FREE(NJT[i]);
; 3585 : 	}*/
; 3586 : 	// Nuke end
; 3587 : 	FREE( lssproto.work );

  00001	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00007	e8 00 00 00 00	 call	 _free

; 3588 : 	lssproto.work = NULL;
; 3589 : 	FREE( lssproto.arraywork);

  0000c	ff 35 0c 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+12
  00012	c7 05 08 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8, 0
  0001c	e8 00 00 00 00	 call	 _free

; 3590 : 	lssproto.arraywork = NULL;
; 3591 : 	FREE( lssproto.escapework );

  00021	ff 35 10 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+16
  00027	c7 05 0c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+12, 0
  00031	e8 00 00 00 00	 call	 _free

; 3592 : 	lssproto.escapework = NULL;
; 3593 : 	FREE( lssproto.val_str);

  00036	ff 35 14 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+20
  0003c	c7 05 10 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+16, 0
  00046	e8 00 00 00 00	 call	 _free

; 3594 : 	lssproto.val_str = NULL;
; 3595 : 	FREE( lssproto.token_list );

  0004b	ff 35 2c 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+44
  00051	c7 05 14 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+20, 0
  0005b	e8 00 00 00 00	 call	 _free

; 3596 : 	lssproto.token_list = NULL;
; 3597 : 	FREE( lssproto.cryptwork );

  00060	ff 35 1c 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+28
  00066	c7 05 2c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+44, 0
  00070	e8 00 00 00 00	 call	 _free

; 3598 : 	lssproto.cryptwork = NULL;
; 3599 : 	FREE( lssproto.jencodecopy );

  00075	ff 35 20 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+32
  0007b	c7 05 1c 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+28, 0
  00085	e8 00 00 00 00	 call	 _free

; 3600 : 	lssproto.jencodecopy = NULL;
; 3601 : 	FREE( lssproto.jencodeout );

  0008a	ff 35 24 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+36
  00090	c7 05 20 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+32, 0
  0009a	e8 00 00 00 00	 call	 _free

; 3602 : 	lssproto.jencodeout = NULL;
; 3603 : 	FREE( lssproto.compresswork );

  0009f	ff 35 28 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+40
  000a5	c7 05 24 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+36, 0
  000af	e8 00 00 00 00	 call	 _free
  000b4	83 c4 24	 add	 esp, 36			; 00000024H

; 3604 : 	lssproto.compresswork = NULL;

  000b7	c7 05 28 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A+40, 0
  000c1	33 f6		 xor	 esi, esi
$LL4@lssproto_C:

; 3605 : 	for(i=0;i<MAXLSRPCARGS;i++){
; 3606 : 		FREE( lssproto_stringwrapper[i]);

  000c3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  000c8	ff 34 06	 push	 DWORD PTR [esi+eax]
  000cb	e8 00 00 00 00	 call	 _free

; 3607 : 		lssproto_stringwrapper[i] = NULL;

  000d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  000d5	83 c4 04	 add	 esp, 4
  000d8	c7 04 06 00 00
	00 00		 mov	 DWORD PTR [esi+eax], 0
  000df	83 c6 04	 add	 esi, 4
  000e2	83 fe 38	 cmp	 esi, 56			; 00000038H
  000e5	7c dc		 jl	 SHORT $LL4@lssproto_C

; 3608 : 	}
; 3609 : 	FREE( lssproto_stringwrapper );

  000e7	ff 35 00 00 00
	00		 push	 DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  000ed	e8 00 00 00 00	 call	 _free
  000f2	83 c4 04	 add	 esp, 4

; 3610 : 	lssproto_stringwrapper = NULL;

  000f5	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?lssproto_stringwrapper@@3PAPADA, 0 ; lssproto_stringwrapper
  000ff	5e		 pop	 esi

; 3611 : }

  00100	c3		 ret	 0
?lssproto_CleanupClient@@YAXXZ ENDP			; lssproto_CleanupClient
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?lssproto_SetClientLogFiles@@YAXPAD0@Z
_TEXT	SEGMENT
_r$ = 8							; size = 4
_w$ = 12						; size = 4
?lssproto_SetClientLogFiles@@YAXPAD0@Z PROC		; lssproto_SetClientLogFiles, COMDAT

; 3557 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3558 : 	lssproto_strcpysafe( lssproto_readlogfilename , r , sizeof( lssproto_readlogfilename ) );

  00003	68 00 04 00 00	 push	 1024			; 00000400H
  00008	ff 75 08	 push	 DWORD PTR _r$[ebp]
  0000b	68 00 00 00 00	 push	 OFFSET ?lssproto_readlogfilename@@3PADA ; lssproto_readlogfilename
  00010	e8 00 00 00 00	 call	 ?lssproto_strcpysafe@@YAXPAD0H@Z ; lssproto_strcpysafe

; 3559 : 	lssproto_strcpysafe( lssproto_writelogfilename , w , sizeof( lssproto_writelogfilename ) );

  00015	68 00 04 00 00	 push	 1024			; 00000400H
  0001a	ff 75 0c	 push	 DWORD PTR _w$[ebp]
  0001d	68 00 00 00 00	 push	 OFFSET ?lssproto_writelogfilename@@3PADA ; lssproto_writelogfilename
  00022	e8 00 00 00 00	 call	 ?lssproto_strcpysafe@@YAXPAD0H@Z ; lssproto_strcpysafe
  00027	83 c4 18	 add	 esp, 24			; 00000018H

; 3560 : }

  0002a	5d		 pop	 ebp
  0002b	c3		 ret	 0
?lssproto_SetClientLogFiles@@YAXPAD0@Z ENDP		; lssproto_SetClientLogFiles
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?lssproto_InitClient@@YAHP6AHHPADH@ZHH@Z
_TEXT	SEGMENT
_writefunc$ = 8						; size = 4
_bufsiz$ = 12						; size = 4
_fd$ = 16						; size = 4
?lssproto_InitClient@@YAHP6AHHPADH@ZHH@Z PROC		; lssproto_InitClient, COMDAT

; 3562 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 3563 : 	int i;
; 3564 : 	if( (void*)writefunc == NULL){lssproto.write_func = lssproto_default_write_wrap;} else {lssproto.write_func = writefunc;}

  00003	8b 45 08	 mov	 eax, DWORD PTR _writefunc$[ebp]
  00006	b9 00 00 00 00	 mov	 ecx, OFFSET ?lssproto_default_write_wrap@@YAHHPADH@Z ; lssproto_default_write_wrap
  0000b	85 c0		 test	 eax, eax
  0000d	57		 push	 edi

; 3565 : 	lssproto_AllocateCommonWork(bufsiz);

  0000e	8b 7d 0c	 mov	 edi, DWORD PTR _bufsiz$[ebp]
  00011	0f 44 c1	 cmove	 eax, ecx
  00014	57		 push	 edi
  00015	a3 00 00 00 00	 mov	 DWORD PTR ?lssproto@@3Ulssproto_@@A, eax
  0001a	e8 00 00 00 00	 call	 ?lssproto_AllocateCommonWork@@YAHH@Z ; lssproto_AllocateCommonWork

; 3566 : 	lssproto_stringwrapper = (char**)MALLOC(sizeof(char*) * MAXLSRPCARGS);

  0001f	6a 38		 push	 56			; 00000038H
  00021	e8 00 00 00 00	 call	 _malloc
  00026	83 c4 08	 add	 esp, 8
  00029	a3 00 00 00 00	 mov	 DWORD PTR ?lssproto_stringwrapper@@3PAPADA, eax ; lssproto_stringwrapper

; 3567 : 	if(lssproto_stringwrapper ==NULL)return -1;

  0002e	85 c0		 test	 eax, eax
  00030	75 06		 jne	 SHORT $LN10@lssproto_I
  00032	83 c8 ff	 or	 eax, -1
  00035	5f		 pop	 edi

; 3576 : }

  00036	5d		 pop	 ebp
  00037	c3		 ret	 0
$LN10@lssproto_I:
  00038	56		 push	 esi

; 3568 : 	memset( lssproto_stringwrapper , 0, sizeof(char*)*MAXLSRPCARGS);

  00039	6a 38		 push	 56			; 00000038H
  0003b	6a 00		 push	 0
  0003d	50		 push	 eax
  0003e	e8 00 00 00 00	 call	 _memset
  00043	83 c4 0c	 add	 esp, 12			; 0000000cH
  00046	33 f6		 xor	 esi, esi
$LL4@lssproto_I:

; 3570 : 		lssproto_stringwrapper[i] = (char*)MALLOC( bufsiz );

  00048	57		 push	 edi
  00049	e8 00 00 00 00	 call	 _malloc
  0004e	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  00054	83 c4 04	 add	 esp, 4
  00057	89 04 0e	 mov	 DWORD PTR [esi+ecx], eax

; 3571 : 		if( lssproto_stringwrapper[i] == NULL){

  0005a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?lssproto_stringwrapper@@3PAPADA ; lssproto_stringwrapper
  0005f	83 3c 06 00	 cmp	 DWORD PTR [esi+eax], 0
  00063	74 0e		 je	 SHORT $LN14@lssproto_I

; 3569 : 	for(i=0;i<MAXLSRPCARGS;i++){

  00065	83 c6 04	 add	 esi, 4
  00068	83 fe 38	 cmp	 esi, 56			; 00000038H
  0006b	7c db		 jl	 SHORT $LL4@lssproto_I

; 3573 : 		}
; 3574 : 	}
; 3575 : 	return 0;

  0006d	5e		 pop	 esi
  0006e	33 c0		 xor	 eax, eax
  00070	5f		 pop	 edi

; 3576 : }

  00071	5d		 pop	 ebp
  00072	c3		 ret	 0
$LN14@lssproto_I:

; 3572 : 			for(i=0;i<MAXLSRPCARGS;i++){FREE( lssproto_stringwrapper[i]);return -1;}

  00073	ff 30		 push	 DWORD PTR [eax]
  00075	e8 00 00 00 00	 call	 _free
  0007a	83 c4 04	 add	 esp, 4
  0007d	83 c8 ff	 or	 eax, -1
  00080	5e		 pop	 esi
  00081	5f		 pop	 edi

; 3576 : }

  00082	5d		 pop	 ebp
  00083	c3		 ret	 0
?lssproto_InitClient@@YAHP6AHHPADH@ZHH@Z ENDP		; lssproto_InitClient
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_Shutdown_send@@YAXHPADH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_passwd$ = 12						; size = 4
_min$ = 16						; size = 4
?old_lssproto_Shutdown_send@@YAXHPADH@Z PROC		; old_lssproto_Shutdown_send, COMDAT

; 1597 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1598 : 	lssproto_CreateHeader( lssproto.work , "Shutdown" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_08NKPDJDJD@Shutdown@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1599 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( passwd ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _passwd$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1600 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( min ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _min$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1601 : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 1602 : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_Shutdown_send@@YAXHPADH@Z ENDP		; old_lssproto_Shutdown_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_Echo_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_test$ = 12						; size = 4
?old_lssproto_Echo_send@@YAXHPAD@Z PROC			; old_lssproto_Echo_send, COMDAT

; 1572 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1573 : 	lssproto_CreateHeader( lssproto.work , "Echo" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_04CEPMGKMG@Echo@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1574 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( test ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _test$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1575 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1576 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_Echo_send@@YAXHPAD@Z ENDP			; old_lssproto_Echo_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_PlayerNumGet_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_PlayerNumGet_send@@YAXH@Z PROC		; old_lssproto_PlayerNumGet_send, COMDAT

; 1552 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1553 : 	lssproto_CreateHeader( lssproto.work , "PlayerNumGet" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JKCLOODO@PlayerNumGet@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 1554 : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1555 : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1556 : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_PlayerNumGet_send@@YAXH@Z ENDP		; old_lssproto_PlayerNumGet_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_ProcGet_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_ProcGet_send@@YAXH@Z PROC			; old_lssproto_ProcGet_send, COMDAT

; 1537 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1538 : 	lssproto_CreateHeader( lssproto.work , "ProcGet" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_07JALAHHPN@ProcGet@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 1539 : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1540 : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1541 : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_ProcGet_send@@YAXH@Z ENDP			; old_lssproto_ProcGet_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_CharLogout_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_CharLogout_send@@YAXH@Z PROC		; old_lssproto_CharLogout_send, COMDAT

; 1520 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1521 : 	lssproto_CreateHeader( lssproto.work , "CharLogout" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JHLIIOLA@CharLogout@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 1522 : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1523 : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1524 : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_CharLogout_send@@YAXH@Z ENDP		; old_lssproto_CharLogout_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_CharList_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_CharList_send@@YAXH@Z PROC		; old_lssproto_CharList_send, COMDAT

; 1503 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1504 : 	lssproto_CreateHeader( lssproto.work , "CharList" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_08FAAFODDM@CharList@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 1505 : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1506 : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 1507 : //	TNJ;
; 1508 : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_CharList_send@@YAXH@Z ENDP		; old_lssproto_CharList_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_CharLogin_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_charname$ = 12						; size = 4
?old_lssproto_CharLogin_send@@YAXHPAD@Z PROC		; old_lssproto_CharLogin_send, COMDAT

; 1489 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1490 : 	lssproto_CreateHeader( lssproto.work , "CharLogin" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_09JAIEDKAG@CharLogin@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1491 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( charname ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _charname$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1492 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1493 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_CharLogin_send@@YAXHPAD@Z ENDP		; old_lssproto_CharLogin_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_CharDelete_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_charname$ = 12						; size = 4
?old_lssproto_CharDelete_send@@YAXHPAD@Z PROC		; old_lssproto_CharDelete_send, COMDAT

; 1470 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1471 : 	lssproto_CreateHeader( lssproto.work , "CharDelete" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EPLKHLOD@CharDelete@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1472 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( charname ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _charname$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1473 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1474 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_CharDelete_send@@YAXHPAD@Z ENDP		; old_lssproto_CharDelete_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_CreateNewChar_send@@YAXHHPADHHHHHHHHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_dataplacenum$ = 12					; size = 4
_charname$ = 16						; size = 4
_imgno$ = 20						; size = 4
_faceimgno$ = 24					; size = 4
_vital$ = 28						; size = 4
_str$ = 32						; size = 4
_tgh$ = 36						; size = 4
_dex$ = 40						; size = 4
_earth$ = 44						; size = 4
_water$ = 48						; size = 4
_fire$ = 52						; size = 4
_wind$ = 56						; size = 4
_hometown$ = 60						; size = 4
?old_lssproto_CreateNewChar_send@@YAXHHPADHHHHHHHHHHH@Z PROC ; old_lssproto_CreateNewChar_send, COMDAT

; 1434 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1435 : 	//cary
; 1436 : 	if(imgno>=100239)

  00003	81 7d 14 8f 87
	01 00		 cmp	 DWORD PTR _imgno$[ebp], 100239 ; 0001878fH
  0000a	0f 8d c1 01 00
	00		 jge	 $LN1@old_lsspro

; 1437 : 		return;
; 1438 : 	//end
; 1439 : 	lssproto_CreateHeader( lssproto.work , "CreateNewChar" );

  00010	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EHKKOHMG@CreateNewChar@
  00015	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0001b	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00020	83 c4 08	 add	 esp, 8

; 1440 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dataplacenum ) ,lssproto.workbufsize );

  00023	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00029	ff 75 0c	 push	 DWORD PTR _dataplacenum$[ebp]
  0002c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00031	83 c4 04	 add	 esp, 4
  00034	50		 push	 eax
  00035	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0003b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00040	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1441 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( charname ) ,lssproto.workbufsize );

  00043	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00049	ff 75 10	 push	 DWORD PTR _charname$[ebp]
  0004c	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00051	83 c4 04	 add	 esp, 4
  00054	50		 push	 eax
  00055	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0005b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1442 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( imgno ) ,lssproto.workbufsize );

  00063	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00069	ff 75 14	 push	 DWORD PTR _imgno$[ebp]
  0006c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00071	83 c4 04	 add	 esp, 4
  00074	50		 push	 eax
  00075	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0007b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00080	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1443 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( faceimgno ) ,lssproto.workbufsize );

  00083	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00089	ff 75 18	 push	 DWORD PTR _faceimgno$[ebp]
  0008c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00091	83 c4 04	 add	 esp, 4
  00094	50		 push	 eax
  00095	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0009b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  000a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1444 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( vital ) ,lssproto.workbufsize );

  000a3	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  000a9	ff 75 1c	 push	 DWORD PTR _vital$[ebp]
  000ac	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000b1	83 c4 04	 add	 esp, 4
  000b4	50		 push	 eax
  000b5	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000bb	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  000c0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1445 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( str ) ,lssproto.workbufsize );

  000c3	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  000c9	ff 75 20	 push	 DWORD PTR _str$[ebp]
  000cc	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000d1	83 c4 04	 add	 esp, 4
  000d4	50		 push	 eax
  000d5	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000db	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  000e0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1446 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( tgh ) ,lssproto.workbufsize );

  000e3	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  000e9	ff 75 24	 push	 DWORD PTR _tgh$[ebp]
  000ec	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000f1	83 c4 04	 add	 esp, 4
  000f4	50		 push	 eax
  000f5	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000fb	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00100	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1447 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dex ) ,lssproto.workbufsize );

  00103	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00109	ff 75 28	 push	 DWORD PTR _dex$[ebp]
  0010c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00111	83 c4 04	 add	 esp, 4
  00114	50		 push	 eax
  00115	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0011b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00120	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1448 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( earth ) ,lssproto.workbufsize );

  00123	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00129	ff 75 2c	 push	 DWORD PTR _earth$[ebp]
  0012c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00131	83 c4 04	 add	 esp, 4
  00134	50		 push	 eax
  00135	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0013b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00140	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1449 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( water ) ,lssproto.workbufsize );

  00143	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00149	ff 75 30	 push	 DWORD PTR _water$[ebp]
  0014c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00151	83 c4 04	 add	 esp, 4
  00154	50		 push	 eax
  00155	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0015b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00160	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1450 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( fire ) ,lssproto.workbufsize );

  00163	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00169	ff 75 34	 push	 DWORD PTR _fire$[ebp]
  0016c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00171	83 c4 04	 add	 esp, 4
  00174	50		 push	 eax
  00175	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0017b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00180	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1451 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( wind ) ,lssproto.workbufsize );

  00183	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00189	ff 75 38	 push	 DWORD PTR _wind$[ebp]
  0018c	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00191	83 c4 04	 add	 esp, 4
  00194	50		 push	 eax
  00195	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0019b	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  001a0	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1452 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( hometown ) ,lssproto.workbufsize );

  001a3	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  001a9	ff 75 3c	 push	 DWORD PTR _hometown$[ebp]
  001ac	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  001b1	83 c4 04	 add	 esp, 4
  001b4	50		 push	 eax
  001b5	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  001bb	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1453 : 	lssproto_Send( fd , lssproto.work );

  001c0	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  001c6	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  001c9	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  001ce	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@old_lsspro:

; 1454 : }

  001d1	5d		 pop	 ebp
  001d2	c3		 ret	 0
?old_lssproto_CreateNewChar_send@@YAXHHPADHHHHHHHHHHH@Z ENDP ; old_lssproto_CreateNewChar_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_ClientLogin_send@@YAXHPAD0@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_cdkey$ = 12						; size = 4
_passwd$ = 16						; size = 4
?old_lssproto_ClientLogin_send@@YAXHPAD0@Z PROC		; old_lssproto_ClientLogin_send, COMDAT

; 1393 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1394 : 	lssproto_CreateHeader( lssproto.work , "ClientLogin" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCIKGDI@ClientLogin@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1395 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( cdkey ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _cdkey$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1396 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( passwd ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _passwd$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1397 : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 1398 : //	TNJ;
; 1399 : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_ClientLogin_send@@YAXHPAD0@Z ENDP		; old_lssproto_ClientLogin_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_SP_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_dir$ = 20						; size = 4
?old_lssproto_SP_send@@YAXHHHH@Z PROC			; old_lssproto_SP_send, COMDAT

; 1362 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1363 : 	lssproto_CreateHeader( lssproto.work , "SP" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02NEPPOLFA@SP@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1364 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1365 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1366 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dir ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _dir$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1367 : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 1368 : //	TNJ;
; 1369 : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_SP_send@@YAXHHHH@Z ENDP			; old_lssproto_SP_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_WN_send@@YAXHHHHHHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_seqno$ = 20						; size = 4
_objindex$ = 24						; size = 4
_select$ = 28						; size = 4
_data$ = 32						; size = 4
?old_lssproto_WN_send@@YAXHHHHHHPAD@Z PROC		; old_lssproto_WN_send, COMDAT

; 1332 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1333 : 	lssproto_CreateHeader( lssproto.work , "WN" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02HLHHMFD@WN@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1334 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1335 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1336 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( seqno ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _seqno$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1337 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( objindex ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _objindex$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1338 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( select ) ,lssproto.workbufsize );

  00096	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0009c	ff 75 1c	 push	 DWORD PTR _select$[ebp]
  0009f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000a4	83 c4 04	 add	 esp, 4
  000a7	50		 push	 eax
  000a8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ae	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  000b3	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1339 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( data ) ,lssproto.workbufsize );

  000b6	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  000bc	ff 75 20	 push	 DWORD PTR _data$[ebp]
  000bf	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  000c4	83 c4 04	 add	 esp, 4
  000c7	50		 push	 eax
  000c8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ce	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1340 : 	lssproto_Send( fd , lssproto.work );

  000d3	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000d9	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000dc	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000e1	83 c4 14	 add	 esp, 20			; 00000014H

; 1341 : //	TNJ;
; 1342 : }

  000e4	5d		 pop	 ebp
  000e5	c3		 ret	 0
?old_lssproto_WN_send@@YAXHHHHHHPAD@Z ENDP		; old_lssproto_WN_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_KN_send@@YAXHHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_havepetindex$ = 12					; size = 4
_data$ = 16						; size = 4
?old_lssproto_KN_send@@YAXHHPAD@Z PROC			; old_lssproto_KN_send, COMDAT

; 1291 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1292 : 	lssproto_CreateHeader( lssproto.work , "KN" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02BCILCGEH@KN@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1293 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( havepetindex ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _havepetindex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1294 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( data ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _data$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1295 : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 1296 : //	TNJ;
; 1297 : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_KN_send@@YAXHHPAD@Z ENDP			; old_lssproto_KN_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_SKUP_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_skillid$ = 12						; size = 4
?old_lssproto_SKUP_send@@YAXHH@Z PROC			; old_lssproto_SKUP_send, COMDAT

; 1264 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1265 : 	lssproto_CreateHeader( lssproto.work , "SKUP" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_04NKLHNDMK@SKUP@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1266 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( skillid ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _skillid$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1267 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1268 : //	TNJ;
; 1269 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_SKUP_send@@YAXHH@Z ENDP			; old_lssproto_SKUP_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_FT_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_data$ = 12						; size = 4
?old_lssproto_FT_send@@YAXHPAD@Z PROC			; old_lssproto_FT_send, COMDAT

; 1243 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1244 : 	lssproto_CreateHeader( lssproto.work , "FT" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02KKHOEPMP@FT@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1245 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( data ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _data$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1246 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1247 : //	TNJ;
; 1248 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_FT_send@@YAXHPAD@Z ENDP			; old_lssproto_FT_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DT_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_titleindex$ = 12					; size = 4
?old_lssproto_DT_send@@YAXHH@Z PROC			; old_lssproto_DT_send, COMDAT

; 1215 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1216 : 	lssproto_CreateHeader( lssproto.work , "DT" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02KJPKJLKB@DT@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1217 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( titleindex ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _titleindex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1218 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1219 : //	TNJ;
; 1220 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_DT_send@@YAXHH@Z ENDP			; old_lssproto_DT_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_ST_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_titleindex$ = 12					; size = 4
?old_lssproto_ST_send@@YAXHH@Z PROC			; old_lssproto_ST_send, COMDAT

; 1191 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1192 : 	lssproto_CreateHeader( lssproto.work , "ST" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LAJDCOFE@ST@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1193 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( titleindex ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _titleindex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1194 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1195 : //	TNJ;
; 1196 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_ST_send@@YAXHH@Z ENDP			; old_lssproto_ST_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_PS_send@@YAXHHHHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_havepetindex$ = 12					; size = 4
_havepetskill$ = 16					; size = 4
_toindex$ = 20						; size = 4
_data$ = 24						; size = 4
?old_lssproto_PS_send@@YAXHHHHPAD@Z PROC		; old_lssproto_PS_send, COMDAT

; 1162 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1163 : 	lssproto_CreateHeader( lssproto.work , "PS" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02PNJEAGMK@PS@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1164 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( havepetindex ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _havepetindex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1165 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( havepetskill ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _havepetskill$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1166 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( toindex ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _toindex$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1167 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( data ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _data$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1168 : 	lssproto_Send( fd , lssproto.work );

  00093	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00099	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0009c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000a1	83 c4 14	 add	 esp, 20			; 00000014H

; 1169 : //	TNJ;
; 1170 : }

  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?old_lssproto_PS_send@@YAXHHHHPAD@Z ENDP		; old_lssproto_PS_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_MU_send@@YAXHHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_array$ = 20						; size = 4
_toindex$ = 24						; size = 4
?old_lssproto_MU_send@@YAXHHHHH@Z PROC			; old_lssproto_MU_send, COMDAT

; 1121 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1122 : 	lssproto_CreateHeader( lssproto.work , "MU" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LPDAJBGP@MU@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1123 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1124 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1125 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( array ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _array$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1126 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( toindex ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _toindex$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1127 : 	lssproto_Send( fd , lssproto.work );

  00093	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00099	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0009c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000a1	83 c4 14	 add	 esp, 20			; 00000014H

; 1128 : //	TNJ;
; 1129 : }

  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?old_lssproto_MU_send@@YAXHHHHH@Z ENDP			; old_lssproto_MU_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_AC_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_actionno$ = 20						; size = 4
?old_lssproto_AC_send@@YAXHHHH@Z PROC			; old_lssproto_AC_send, COMDAT

; 1085 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1086 : 	lssproto_CreateHeader( lssproto.work , "AC" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02KKLCNNNM@AC@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1087 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1088 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1089 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( actionno ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _actionno$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1090 : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 1091 : //	TNJ;
; 1092 : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_AC_send@@YAXHHHH@Z ENDP			; old_lssproto_AC_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_KS_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_petarray$ = 12						; size = 4
?old_lssproto_KS_send@@YAXHH@Z PROC			; old_lssproto_KS_send, COMDAT

; 1044 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1045 : 	lssproto_CreateHeader( lssproto.work , "KS" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02ONOHEKFL@KS@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1046 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( petarray ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _petarray$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1047 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1048 : //	TNJ;
; 1049 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_KS_send@@YAXHH@Z ENDP			; old_lssproto_KS_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_PR_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_request$ = 20						; size = 4
?old_lssproto_PR_send@@YAXHHHH@Z PROC			; old_lssproto_PR_send, COMDAT

; 1021 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1022 : 	lssproto_CreateHeader( lssproto.work , "PR" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02OEIPDHIL@PR@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1023 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1024 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1025 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( request ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _request$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1026 : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 1027 : //	TNJ;
; 1028 : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_PR_send@@YAXHHHH@Z ENDP			; old_lssproto_PR_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_HL_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_flg$ = 12						; size = 4
?old_lssproto_HL_send@@YAXHH@Z PROC			; old_lssproto_HL_send, COMDAT

; 998  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 999  : 	lssproto_CreateHeader( lssproto.work , "HL" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02CCPLPKJM@HL@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 1000 : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( flg ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _flg$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 1001 : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 1002 : //	TNJ;
; 1003 : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_HL_send@@YAXHH@Z ENDP			; old_lssproto_HL_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_FS_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_flg$ = 12						; size = 4
?old_lssproto_FS_send@@YAXHH@Z PROC			; old_lssproto_FS_send, COMDAT

; 976  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 977  : 	if (fd == 0)return;

  00003	83 7d 08 00	 cmp	 DWORD PTR _fd$[ebp], 0
  00007	74 41		 je	 SHORT $LN1@old_lsspro

; 978  : 	lssproto_CreateHeader( lssproto.work , "FS" );

  00009	68 00 00 00 00	 push	 OFFSET ??_C@_02OFDPNJAI@FS@
  0000e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00014	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00019	83 c4 08	 add	 esp, 8

; 979  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( flg ) ,lssproto.workbufsize );

  0001c	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00022	ff 75 0c	 push	 DWORD PTR _flg$[ebp]
  00025	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  0002a	83 c4 04	 add	 esp, 4
  0002d	50		 push	 eax
  0002e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00034	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 980  : 	lssproto_Send( fd , lssproto.work );

  00039	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0003f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00042	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00047	83 c4 14	 add	 esp, 20			; 00000014H
$LN1@old_lsspro:

; 981  : //	TNJ;
; 982  : }

  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
?old_lssproto_FS_send@@YAXHH@Z ENDP			; old_lssproto_FS_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_S_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_category$ = 12						; size = 4
?old_lssproto_S_send@@YAXHPAD@Z PROC			; old_lssproto_S_send, COMDAT

; 951  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 952  : 	lssproto_CreateHeader( lssproto.work , "S" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01CPLAODJH@S@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 953  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( category ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _category$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 954  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 955  : //	TNJ;
; 956  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_S_send@@YAXHPAD@Z ENDP			; old_lssproto_S_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_C_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_index$ = 12						; size = 4
?old_lssproto_C_send@@YAXHH@Z PROC			; old_lssproto_C_send, COMDAT

; 917  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 918  : 	lssproto_CreateHeader( lssproto.work , "C" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01GFHCPBMG@C@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 919  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( index ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 920  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 921  : //	TNJ;
; 922  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_C_send@@YAXHH@Z ENDP			; old_lssproto_C_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_M_send@@YAXHHHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_fl$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_x2$ = 24						; size = 4
_y2$ = 28						; size = 4
?old_lssproto_M_send@@YAXHHHHHH@Z PROC			; old_lssproto_M_send, COMDAT

; 896  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 897  : 	lssproto_CreateHeader( lssproto.work , "M" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01PLPBNMEI@M@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 898  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( fl ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _fl$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 899  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x1 ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _x1$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 900  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y1 ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _y1$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 901  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x2 ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _x2$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 902  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y2 ) ,lssproto.workbufsize );

  00096	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0009c	ff 75 1c	 push	 DWORD PTR _y2$[ebp]
  0009f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000a4	83 c4 04	 add	 esp, 4
  000a7	50		 push	 eax
  000a8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ae	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 903  : 	lssproto_Send( fd , lssproto.work );

  000b3	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000b9	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000bc	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000c1	83 c4 14	 add	 esp, 20			; 00000014H

; 904  : //	TNJ;
; 905  : }

  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?old_lssproto_M_send@@YAXHHHHHH@Z ENDP			; old_lssproto_M_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_TK_send@@YAXHHHPADHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_message$ = 20						; size = 4
_color$ = 24						; size = 4
_area$ = 28						; size = 4
?old_lssproto_TK_send@@YAXHHHPADHH@Z PROC		; old_lssproto_TK_send, COMDAT

; 862  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 863  : 	lssproto_CreateHeader( lssproto.work , "TK" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02HIIGDGEP@TK@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 864  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 865  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 866  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( message ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _message$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 867  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( color ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _color$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 868  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( area ) ,lssproto.workbufsize );

  00096	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0009c	ff 75 1c	 push	 DWORD PTR _area$[ebp]
  0009f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000a4	83 c4 04	 add	 esp, 4
  000a7	50		 push	 eax
  000a8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ae	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 869  : 	lssproto_Send( fd , lssproto.work );

  000b3	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000b9	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000bc	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000c1	83 c4 14	 add	 esp, 20			; 00000014H

; 870  : //	TNJ;
; 871  : }

  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?old_lssproto_TK_send@@YAXHHHPADHH@Z ENDP		; old_lssproto_TK_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_L_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_dir$ = 12						; size = 4
?old_lssproto_L_send@@YAXHH@Z PROC			; old_lssproto_L_send, COMDAT

; 803  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 804  : 	lssproto_CreateHeader( lssproto.work , "L" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01OCOKONAJ@L@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 805  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dir ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 806  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 807  : //	TNJ;
; 808  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_L_send@@YAXHH@Z ENDP			; old_lssproto_L_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_AAB_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?old_lssproto_AAB_send@@YAXHHH@Z PROC			; old_lssproto_AAB_send, COMDAT

; 778  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 779  : 	lssproto_CreateHeader( lssproto.work , "AAB" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_03EOAENFML@AAB@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 780  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 781  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 782  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 783  : //	TNJ;
; 784  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_AAB_send@@YAXHHH@Z ENDP			; old_lssproto_AAB_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DAB_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_index$ = 12						; size = 4
?old_lssproto_DAB_send@@YAXHH@Z PROC			; old_lssproto_DAB_send, COMDAT

; 755  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 756  : 	lssproto_CreateHeader( lssproto.work , "DAB" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_03HJNKCFPJ@DAB@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 757  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( index ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 758  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 759  : //	TNJ;
; 760  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_DAB_send@@YAXHH@Z ENDP			; old_lssproto_DAB_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_AB_send@@YAXH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
?old_lssproto_AB_send@@YAXH@Z PROC			; old_lssproto_AB_send, COMDAT

; 731  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 732  : 	lssproto_CreateHeader( lssproto.work , "AB" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LDKJOMJN@AB@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader

; 733  : 	lssproto_strcatsafe( lssproto.work , "" ,lssproto.workbufsize );

  00013	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  00019	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@@
  0001e	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00024	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 734  : 	lssproto_Send( fd , lssproto.work );

  00029	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002f	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  00032	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00037	83 c4 1c	 add	 esp, 28			; 0000001cH

; 735  : //	TNJ;
; 736  : }

  0003a	5d		 pop	 ebp
  0003b	c3		 ret	 0
?old_lssproto_AB_send@@YAXH@Z ENDP			; old_lssproto_AB_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_PMSG_send@@YAXHHHHPADH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_index$ = 12						; size = 4
_petindex$ = 16						; size = 4
_itemindex$ = 20					; size = 4
_message$ = 24						; size = 4
_color$ = 28						; size = 4
?old_lssproto_PMSG_send@@YAXHHHHPADH@Z PROC		; old_lssproto_PMSG_send, COMDAT

; 719  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 720  : 	lssproto_CreateHeader( lssproto.work , "PMSG" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_04LJHCAOOC@PMSG@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 721  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( index ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 722  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( petindex ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _petindex$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 723  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( itemindex ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _itemindex$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 724  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( message ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _message$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 725  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( color ) ,lssproto.workbufsize );

  00096	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0009c	ff 75 1c	 push	 DWORD PTR _color$[ebp]
  0009f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000a4	83 c4 04	 add	 esp, 4
  000a7	50		 push	 eax
  000a8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ae	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 726  : 	lssproto_Send( fd , lssproto.work );

  000b3	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000b9	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000bc	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000c1	83 c4 14	 add	 esp, 20			; 00000014H

; 727  : //	TNJ;
; 728  : }

  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?old_lssproto_PMSG_send@@YAXHHHHPADH@Z ENDP		; old_lssproto_PMSG_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_MSG_send@@YAXHHPADH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_index$ = 12						; size = 4
_message$ = 16						; size = 4
_color$ = 20						; size = 4
?old_lssproto_MSG_send@@YAXHHPADH@Z PROC		; old_lssproto_MSG_send, COMDAT

; 686  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 687  : 	lssproto_CreateHeader( lssproto.work , "MSG" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_03GGAHOJCI@MSG@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 688  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( index ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _index$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 689  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( message ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _message$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 690  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( color ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _color$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 691  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 692  : //	TNJ;
; 693  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_MSG_send@@YAXHHPADH@Z ENDP		; old_lssproto_MSG_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_MI_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_fromindex$ = 12					; size = 4
_toindex$ = 16						; size = 4
?old_lssproto_MI_send@@YAXHHH@Z PROC			; old_lssproto_MI_send, COMDAT

; 657  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 658  : 	lssproto_CreateHeader( lssproto.work , "MI" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02FJEHMMDC@MI@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 659  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( fromindex ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _fromindex$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 660  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( toindex ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _toindex$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 661  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 662  : //	TNJ;
; 663  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_MI_send@@YAXHHH@Z ENDP			; old_lssproto_MI_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DP_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_petindex$ = 20						; size = 4
?old_lssproto_DP_send@@YAXHHHH@Z PROC			; old_lssproto_DP_send, COMDAT

; 623  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 624  : 	lssproto_CreateHeader( lssproto.work , "DP" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02MNJGFOKF@DP@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 625  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 626  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 627  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( petindex ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _petindex$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 628  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 629  : //	TNJ;
; 630  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_DP_send@@YAXHHHH@Z ENDP			; old_lssproto_DP_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DG_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_amount$ = 20						; size = 4
?old_lssproto_DG_send@@YAXHHHH@Z PROC			; old_lssproto_DG_send, COMDAT

; 595  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 596  : 	lssproto_CreateHeader( lssproto.work , "DG" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02MIBFNKDD@DG@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 597  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 598  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 599  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( amount ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _amount$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 600  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 601  : //	TNJ;
; 602  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_DG_send@@YAXHHHH@Z ENDP			; old_lssproto_DG_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DI_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_itemindex$ = 20					; size = 4
?old_lssproto_DI_send@@YAXHHHH@Z PROC			; old_lssproto_DI_send, COMDAT

; 570  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 571  : 	lssproto_CreateHeader( lssproto.work , "DI" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02FGJGPHLN@DI@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 572  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 573  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 574  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( itemindex ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _itemindex$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 575  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 576  : //	TNJ;
; 577  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_DI_send@@YAXHHHH@Z ENDP			; old_lssproto_DI_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_PI_send@@YAXHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_dir$ = 20						; size = 4
?old_lssproto_PI_send@@YAXHHHH@Z PROC			; old_lssproto_PI_send, COMDAT

; 541  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 542  : 	lssproto_CreateHeader( lssproto.work , "PI" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02ENLJPMBB@PI@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 543  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 544  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 545  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dir ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _dir$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 546  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 547  : //	TNJ;
; 548  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_PI_send@@YAXHHHH@Z ENDP			; old_lssproto_PI_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_ID_send@@YAXHHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_haveitemindex$ = 20					; size = 4
_toindex$ = 24						; size = 4
?old_lssproto_ID_send@@YAXHHHHH@Z PROC			; old_lssproto_ID_send, COMDAT

; 514  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 515  : 	lssproto_CreateHeader( lssproto.work , "ID" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02OLOABKKD@ID@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 516  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 517  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 518  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( haveitemindex ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _haveitemindex$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 519  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( toindex ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _toindex$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 520  : 	lssproto_Send( fd , lssproto.work );

  00093	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00099	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0009c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000a1	83 c4 14	 add	 esp, 20			; 00000014H

; 521  : //	TNJ;
; 522  : }

  000a4	5d		 pop	 ebp
  000a5	c3		 ret	 0
?old_lssproto_ID_send@@YAXHHHHH@Z ENDP			; old_lssproto_ID_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_SKD_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_dir$ = 12						; size = 4
_index$ = 16						; size = 4
?old_lssproto_SKD_send@@YAXHHH@Z PROC			; old_lssproto_SKD_send, COMDAT

; 474  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 475  : 	lssproto_CreateHeader( lssproto.work , "SKD" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_03OPNJGIIP@SKD@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 476  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dir ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _dir$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 477  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( index ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _index$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 478  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 479  : //	TNJ;
; 480  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_SKD_send@@YAXHHH@Z ENDP			; old_lssproto_SKD_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_B_send@@YAXHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_command$ = 12						; size = 4
?old_lssproto_B_send@@YAXHPAD@Z PROC			; old_lssproto_B_send, COMDAT

; 373  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 374  : 	lssproto_CreateHeader( lssproto.work , "B" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01HMGJMAIH@B@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 375  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( command ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _command$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 376  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 377  : //	TNJ;
; 378  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_B_send@@YAXHPAD@Z ENDP			; old_lssproto_B_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_LB_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?old_lssproto_LB_send@@YAXHHH@Z PROC			; old_lssproto_LB_send, COMDAT

; 339  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 340  : 	lssproto_CreateHeader( lssproto.work , "LB" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LLHBHPMO@LB@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 341  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 342  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 343  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 344  : //	TNJ;
; 345  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_LB_send@@YAXHHH@Z ENDP			; old_lssproto_LB_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_JB_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?old_lssproto_JB_send@@YAXHHH@Z PROC			; old_lssproto_JB_send, COMDAT

; 317  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 318  : 	lssproto_CreateHeader( lssproto.work , "JB" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LPPMADHM@JB@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 319  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 320  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 321  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 322  : //	TNJ;
; 323  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_JB_send@@YAXHHH@Z ENDP			; old_lssproto_JB_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_BU_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_dummy$ = 12						; size = 4
?old_lssproto_BU_send@@YAXHH@Z PROC			; old_lssproto_BU_send, COMDAT

; 296  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 297  : 	lssproto_CreateHeader( lssproto.work , "BU" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LEGMNGFC@BU@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 298  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dummy ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _dummy$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 299  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 300  : //	TNJ;
; 301  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_BU_send@@YAXHH@Z ENDP			; old_lssproto_BU_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_EO_send@@YAXHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_dummy$ = 12						; size = 4
?old_lssproto_EO_send@@YAXHH@Z PROC			; old_lssproto_EO_send, COMDAT

; 275  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 276  : 	lssproto_CreateHeader( lssproto.work , "EO" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02BAODKAM@EO@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 277  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dummy ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _dummy$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 278  : 	lssproto_Send( fd , lssproto.work );

  00033	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00039	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0003c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00041	83 c4 14	 add	 esp, 20			; 00000014H

; 279  : //	TNJ;
; 280  : }

  00044	5d		 pop	 ebp
  00045	c3		 ret	 0
?old_lssproto_EO_send@@YAXHH@Z ENDP			; old_lssproto_EO_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_DU_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?old_lssproto_DU_send@@YAXHHH@Z PROC			; old_lssproto_DU_send, COMDAT

; 253  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 254  : 	lssproto_CreateHeader( lssproto.work , "DU" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02LAOBKKOA@DU@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 255  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 256  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 257  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 258  : //	TNJ;
; 259  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_DU_send@@YAXHHH@Z ENDP			; old_lssproto_DU_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_EN_send@@YAXHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
?old_lssproto_EN_send@@YAXHHH@Z PROC			; old_lssproto_EN_send, COMDAT

; 230  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 231  : 	lssproto_CreateHeader( lssproto.work , "EN" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02BIBFALEN@EN@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 232  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 233  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 234  : 	lssproto_Send( fd , lssproto.work );

  00053	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00059	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0005c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00061	83 c4 14	 add	 esp, 20			; 00000014H

; 235  : //	TNJ;
; 236  : }

  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
?old_lssproto_EN_send@@YAXHHH@Z ENDP			; old_lssproto_EN_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_EV_send@@YAXHHHHHH@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_event$ = 12						; size = 4
_seqno$ = 16						; size = 4
_x$ = 20						; size = 4
_y$ = 24						; size = 4
_dir$ = 28						; size = 4
?old_lssproto_EV_send@@YAXHHHHHH@Z PROC			; old_lssproto_EV_send, COMDAT

; 204  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 205  : 	lssproto_CreateHeader( lssproto.work , "EV" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_02JKAOJDBE@EV@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 206  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( event ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _event$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 207  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( seqno ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _seqno$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 208  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _x$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00073	83 c4 0c	 add	 esp, 12			; 0000000cH

; 209  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00076	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0007c	ff 75 18	 push	 DWORD PTR _y$[ebp]
  0007f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00084	83 c4 04	 add	 esp, 4
  00087	50		 push	 eax
  00088	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0008e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00093	83 c4 0c	 add	 esp, 12			; 0000000cH

; 210  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( dir ) ,lssproto.workbufsize );

  00096	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0009c	ff 75 1c	 push	 DWORD PTR _dir$[ebp]
  0009f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  000a4	83 c4 04	 add	 esp, 4
  000a7	50		 push	 eax
  000a8	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000ae	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 211  : 	lssproto_Send( fd , lssproto.work );

  000b3	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  000b9	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  000bc	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  000c1	83 c4 14	 add	 esp, 20			; 00000014H

; 212  : //	TNJ;
; 213  : }

  000c4	5d		 pop	 ebp
  000c5	c3		 ret	 0
?old_lssproto_EV_send@@YAXHHHHHH@Z ENDP			; old_lssproto_EV_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_w_send@@YAXHHHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_direction$ = 20					; size = 4
?old_lssproto_w_send@@YAXHHHPAD@Z PROC			; old_lssproto_w_send, COMDAT

; 157  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 158  : 	lssproto_CreateHeader( lssproto.work , "w" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01NOFIACDB@w@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 159  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 160  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 161  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( direction ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _direction$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 162  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 163  : //	TNJ;
; 164  : }

  00084	5d		 pop	 ebp
  00085	c3		 ret	 0
?old_lssproto_w_send@@YAXHHHPAD@Z ENDP			; old_lssproto_w_send
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Users\gg862\OneDrive\¹ÙÅÁ È­¸é\¸¾Äí¿Ï·á\Client Source Code1.31ÀÏº»\system\lssproto_cli.cpp
;	COMDAT ?old_lssproto_W_send@@YAXHHHPAD@Z
_TEXT	SEGMENT
_fd$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_direction$ = 20					; size = 4
?old_lssproto_W_send@@YAXHHHPAD@Z PROC			; old_lssproto_W_send, COMDAT

; 132  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 133  : 	lssproto_CreateHeader( lssproto.work , "W" );

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_01ELNMCGJD@W@
  00008	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0000e	e8 00 00 00 00	 call	 ?lssproto_CreateHeader@@YAXPAD0@Z ; lssproto_CreateHeader
  00013	83 c4 08	 add	 esp, 8

; 134  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( x ) ,lssproto.workbufsize );

  00016	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0001c	ff 75 0c	 push	 DWORD PTR _x$[ebp]
  0001f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00024	83 c4 04	 add	 esp, 4
  00027	50		 push	 eax
  00028	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0002e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00033	83 c4 0c	 add	 esp, 12			; 0000000cH

; 135  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_int( y ) ,lssproto.workbufsize );

  00036	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0003c	ff 75 10	 push	 DWORD PTR _y$[ebp]
  0003f	e8 00 00 00 00	 call	 ?lssproto_mkstr_int@@YAPADH@Z ; lssproto_mkstr_int
  00044	83 c4 04	 add	 esp, 4
  00047	50		 push	 eax
  00048	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0004e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH

; 136  : 	lssproto_strcatsafe( lssproto.work , lssproto_mkstr_string( direction ) ,lssproto.workbufsize );

  00056	ff 35 04 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+4
  0005c	ff 75 14	 push	 DWORD PTR _direction$[ebp]
  0005f	e8 00 00 00 00	 call	 ?lssproto_mkstr_string@@YAPADPAD@Z ; lssproto_mkstr_string
  00064	83 c4 04	 add	 esp, 4
  00067	50		 push	 eax
  00068	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  0006e	e8 00 00 00 00	 call	 ?lssproto_strcatsafe@@YAXPAD0H@Z ; lssproto_strcatsafe

; 137  : 	lssproto_Send( fd , lssproto.work );

  00073	ff 35 08 00 00
	00		 push	 DWORD PTR ?lssproto@@3Ulssproto_@@A+8
  00079	ff 75 08	 push	 DWORD PTR _fd$[ebp]
  0007c	e8 00 00 00 00	 call	 ?lssproto_Send@@YAXHPAD@Z ; lssproto_Send
  00081	83 c4 14	 add	 esp, 20			; 00000014H

; 138  : 	// Nuke 0407
; 139  : 	SendCount--;

  00084	ff 0d 00 00 00
	00		 dec	 DWORD PTR ?SendCount@@3HA ; SendCount

; 140  : //	TNJ;
; 141  : }

  0008a	5d		 pop	 ebp
  0008b	c3		 ret	 0
?old_lssproto_W_send@@YAXHHHPAD@Z ENDP			; old_lssproto_W_send
_TEXT	ENDS
END
