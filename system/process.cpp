/************************/
/*	process.c			*/
/************************/
#include "../systeminc/version.h"
#include "../systeminc/system.h"
#include "../ohta/ohta.h"
//#include "../dwaf/dwafTestProc.h"
#include "../systeminc/map.h"
#include "../systeminc/ime_sa.h"
#include "../caryime.h"
#include "../systeminc/menu.h"
#include "../systeminc/pc.h"
#include "../systeminc/character.h"
#include "../systeminc/login.h"
#include "../systeminc/netproc.h"
#include "../systeminc/savedata.h"
#include "../systeminc/testView.h"
#include "../systeminc/battleProc.h"
#include "../systeminc/produce.h"
#include "../systeminc/lssproto_cli.h"
#include "../systeminc/netmain.h"
#include "../systeminc/battleMenu.h"
#include "../systeminc/t_music.h"
#include "../systeminc/field.h"
#include "../systeminc/handletime.h"

#ifdef _NEW_MUISC_
BOOL 初始背景音乐 = TRUE;
#endif
/* ???????? *******************************************************************/
extern void kakushi_command(void);
/* ????? */
UINT ProcNo;
/* ??????? */
UINT SubProcNo;
/* ?????(???????????) */
int ProcNo2;
int SubProcNo2;

int palNo;
int oldPalNo;
int palTime;

#ifdef _PET_TRACE_MOUSE
extern SCPlayPet PlayPet;
#endif

/* ?????? ********************************************************************/
void Process(void)
{
	if (ProcNo2 >= 0)
	{
		ProcNo = ProcNo2;
		ProcNo2 = -1;
		SubProcNo = SubProcNo2;
	}

	/* ????? */
	switch (ProcNo)
	{
	case PROC_OPENNING:
		break;
	case PROC_INIT: 	/* ??????? */
		InitProc();
		initMapEffect(TRUE);		// ???????????
		break;
		// ???????????
	case PROC_ID_PASSWORD:
#ifdef _NEW_MUISC_
		if (初始背景音乐) {
			初始背景音乐 = FALSE;
			play_bgm(27);
		}
#endif
		BackBufferDrawType = DRAW_BACK_NORMAL;
		idPasswordProc();
#ifdef _PET_TRACE_MOUSE
		PlayPet.Proc();
#endif
		RunAction();			// ?????????
		StockTaskDispBuffer();	// ???????????????
		FlashKeyboardCursor();	// ???????????
		ImeProc();				// ???????
#ifdef _LOGINKICK			
		extern DWORD StartTime;
		StartTime = -1;
#endif

		break;
		// ?????????
	case PROC_TITLE_MENU:
		// ??????????
		BackBufferDrawType = DRAW_BACK_NORMAL;
		titleProc();
		TitleProduce();			// ?????
		RunAction();			// ?????????
		StockTaskDispBuffer();	// ???????????????

								//cary 2002.1.4			kakushi_command();		// ????????
		break;
		// ????
	case PROC_CHAR_SELECT:		// ???
								// ??????????
		BackBufferDrawType = DRAW_BACK_NORMAL;
		selectCharacterProc();
		break;
		// ????
	case PROC_CHAR_MAKE:
		// ??????????
		BackBufferDrawType = DRAW_BACK_NORMAL;
		makeCharacterProc();
		break;
		// ??????????
	case PROC_CHAR_LOGIN_START:
		BackBufferDrawType = DRAW_BACK_NORMAL;
		// charLoginStart();???????????????????
		initMap();		// ??????
		initPcAll();	// PC?????????
		initCharObj();	// ????????????
		initOpenServerWindow();	// ????????????????
		initFieldProc();		// ??????????
		initMapEffect(FALSE);		// ???????????
		EncountFlag = FALSE;
		logOutFlag = FALSE;
		InitOhtaParam();	// ????????????
#ifdef __SKYISLAND
		extern void SkyIslandInit();
		SkyIslandInit();
#endif
		ChangeProc(PROC_CHAR_LOGIN);
		// ???????????
		fade_out_bgm();
		break;
	case PROC_CHAR_LOGIN:
		BackBufferDrawType = DRAW_BACK_NORMAL;
		characterLoginProc();
		break;
	case PROC_CHAR_LOGOUT:
		// ??????????
		//			BackBufferDrawType = DRAW_BACK_NORMAL; 

		//JL HOOK
		void JL_原登了();
		JL_原登了();

		characterLogoutProc();
		break;
	case PROC_GAME:     /* ??????? */
		GameProc();
		break;
	case PROC_DISCONNECT_SERVER:
		switch (SubProcNo)
		{
		case 0:

			//JL HOOK 发消息告诉wg,断线了
			void JL_断线了();
			JL_断线了();

			//JL fix 2017.9.1 增加断线后清除画面浮游生物. 修复海底断线gg
#ifdef __SKYISLAND
			extern void SkyIslandRelease();
			SkyIslandRelease();
#endif
			//???????

#ifdef _AniRandom   // Syu ADD 随机产生环境动画
			extern void AniRandomRelease();
			AniRandomRelease();
#endif
#ifdef _AniCrossFrame	   // Syu ADD 动画层游过画面生物
			extern void crossAniRelease();
			crossAniRelease();
#endif
#ifdef _AniCharBubble	   // Syu ADD 动画层人物吐出气泡
			extern void CharbubbleRelease();
			CharbubbleRelease();
#endif
#ifdef _AniImmobile	 // Syu ADD 定点产生特定动画
			extern void ImmobileAniRelease();
			ImmobileAniRelease();
#endif
#ifdef _SPECIALSPACEANIM	// Syu ADD 特殊场景动画配置
			extern void ReleaseSpecAnim();
			ReleaseSpecAnim();
#endif

			// ???
			// PC????
			resetPc();
			// ?????????????
			initCharObj();
			// ??????
			DeathAllAction();
			// ?????
			ProduceInitFlag = TRUE;
			// ???????????? 
			CopyBackBuffer();
			// ??????????
			BackBufferDrawType = DRAW_BACK_PRODUCE;
			// ???????????
			fade_out_bgm();
			// ????????
			NowTime = TimeGetTime();
			SubProcNo++;
			break;
		case 1:
			// ??
			if (DrawProduce(PRODUCE_DOWN_ACCELE) == TRUE)
			{
				BackBufferDrawType = DRAW_BACK_NORMAL;
				SubProcNo++;
			}
			break;
		case 2:
			// ????
			break;
		}
		// ?????????
		if (disconnectServer())
		{
			// ?????????
			cleanupNetwork();
			// ????????????
			PaletteChange(DEF_PAL, 0);
			// ??????
			//cary
			ChangeProc(PROC_ID_PASSWORD);
			SubProcNo = 0;
			// ??????
			DeathAllAction();
			disconnectServerFlag = FALSE;
			oldDisconnectServerFlag = FALSE;
			break;
		}
		RunAction();			// ?????????
		StockTaskDispBuffer();	// ???????????????
		break;
	case PROC_BATTLE:     /* ??????? */
		BattleProc();
		break;

#ifdef _STONDEBUG_		
		//case PROC_OHTA_TEST:     /* ??????? */
		//	OhtaTestProc();
		//	break;
	case PROC_OHTA_TEST:     /* ??????? */
		OhtaTestProc();
		break;
		//case PROC_TAKE_TEST:     /* ????????? */
		//	TakeTestProc();
		//	break;
		//case PROC_DWAF_TEST:	// DWAF???
		//	dwafTestProc();
		//	break;
	case PROC_SPR_VIEW:		// ??????????
		SprViewProc();
		break;
	case PROC_ANIM_VIEW:	// ????????????
		AnimViewProc();
		break;
	case PROC_SE_TEST:	// ???????
		SeTestProc();
		break;
#endif
#ifdef _80_LOGIN_PLAY
	case PROC_80_LOGIN:
		BackBufferDrawType = DRAW_BACK_NORMAL;
		_80LoginProc();
		RunAction();
		StockTaskDispBuffer();
		break;
#endif
#ifdef _PK2007
	case PROC_PKSERVER_SELECT:
		BackBufferDrawType = DRAW_BACK_NORMAL;
		selectpkProc();
		break;
#endif
	case PROC_ENDING:
		break;
	}
}

/* ??????? ***********************************************************/
void ChangeProc(int procNo)
{
#ifdef _NEW_MUISC_
	if (PROC_ID_PASSWORD == procNo) {
		初始背景音乐 = TRUE;
		//t_music_se_volume = t_music_bgm_volume = 15;
	}
#endif
	ProcNo = procNo;
	// ???????????
	SubProcNo = 0;


}
/* ??????? ***********************************************************/
void ChangeProc(int procNo, int subProcNo)
{
	// ????????
	ProcNo = procNo;
	// ???????????
	SubProcNo = subProcNo;
}
/* ??????????????????????**************************/
void ChangeProc2(int procNo)
{
	// ????????
	ProcNo2 = procNo;
	SubProcNo2 = 0;
}
/* ??????? ***********************************************************/
void ChangeProc2(int procNo, int subProcNo)
{
	// ????????
	ProcNo2 = procNo;
	// ???????????
	SubProcNo2 = subProcNo;
}

void GameProc(void)
{
	static int now_bgm;
	static BOOL produceFlag;
	switch (SubProcNo) {
	case 0:
		//cary 防止再次登入时的视窗残留
		extern short helpBtn, actBtn;
		helpBtn = 0;
		actBtn = 0;
		//end cary
#ifdef _STONDEBUG___
		if (offlineFlag) {
			initMap();
		}
#endif
//		InitIme(hWnd, StrToNowStrBuffer);
		ClearIme();
		InitChat();
		produceFlag = FALSE;
		EncountFlag = FALSE;
		LoadAlbum();
		//extern void AI_Init();
		//AI_Init();
		nameOverTheHeadFlag = 0;
		SubProcNo++;
	case 150:
		SubProcNo = 100;

	case 100:
		initPc();
		resetFieldProc();
		restorePtActCharObjAll();
		initOpenServerWindow();
		InitMenu();
		//			BattleStatusBak[ 0 ] = NULL;// ??????
		//			BattleStatusReadPointer = BattleStatusWritePointer =0;
		GetKeyInputFocus(&MyChatBuffer);
		SubProcNo++;
	case 101:
		if (loginFlag) {
			BackBufferDrawType = DRAW_BACK_NORMAL;
			break;
		}
		SubProcNo++;
	case 102:
		paletteProc();

		DispBuffer.DispCnt = 0;
		FontCnt = 0;
		initCharPartsPrio();	// ??????????????????
		RunAction();			// ?????????
		StockTaskDispBuffer();	// ???????????????
		stop_bgm();				//???
		drawMap();				//	???
		MenuProc();				// ??????
		ChatProc();				// ??????
		ChatBufferToFontBuffer(); // ??????????????????????
		ImeProc();				// ???????
		SortDispBuffer(); 	// ???????
							// ???????????????
		ClearBackSurface();
		// ????????????????
		PutBmp();
		// ??????????????????????
		lpBattleSurface->BltFast(0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT);
		// ???????
		DispBuffer.DispCnt = 0;
		FontCnt = 0;

		play_bgm(map_bgm_no);

		// ????????
		NowTime = TimeGetTime();
		// ??????????
		//			BackBufferDrawType = DRAW_BACK_NORMAL; 
		BackBufferDrawType = DRAW_BACK_PRODUCE;
		// ??
		ProduceInitFlag = TRUE;
		DrawProduce(PRODUCE_BRAN_BIG);
		/*#ifdef __SKYISLAND
		ClearBackSurface();
		#endif*/
		SubProcNo++;
		break;

	case 103:
		// ??
		BackBufferDrawType = DRAW_BACK_PRODUCE;
		if (DrawProduce(PRODUCE_BRAN_BIG) == TRUE)
		{
			produceFlag = TRUE;
			fieldInfoTime = TimeGetTime();
			if (fastDrawTile)
			{
				SubProcNo = 20;
			}
			else
			{
				SubProcNo = 3;
			}
		}
		break;

		// ????
	case 200:
		ProduceInitFlag = TRUE;

		// ???????
		DispBuffer.DispCnt = 0;
		FontCnt = 0;

		// ????????
		NowTime = TimeGetTime();

		// S??????C? warpEffectProc();?????
		// ????????????????
		SubProcNo++;

	case 201:
		// ??
		BackBufferDrawType = DRAW_BACK_PRODUCE;
		if (DrawProduce(PRODUCE_CENTER_PRESSIN) == TRUE)
		{
			SubProcNo++;
		}
		drawField();	// ???????????
		MenuProc();	// ??????
		ImeProc();	// ???????
		break;

	case 202:
		if (!warpEffectStart || !warpEffectOk)
		{
			BackBufferDrawType = DRAW_BACK_NORMAL;
			drawField();	// ???????????
			MenuProc();	// ??????
			ImeProc();	// ???????
			break;
		}
		warpEffectStart = FALSE;
		warpEffectOk = FALSE;
		SubProcNo++;
	case 203:
		// ?????
		// ???????
		paletteProc();

		DispBuffer.DispCnt = 0;
		FontCnt = 0;
		initCharPartsPrio();	// ??????????????????
		RunAction();			// ?????????
		StockTaskDispBuffer();	// ???????????????
		redrawMap();
		drawMap();				//	???

								// ?????????
		if ((mapEffectRainLevel == 0 && oldMapEffectRainLevel != 0)
			|| (mapEffectSnowLevel == 0 && oldMapEffectSnowLevel != 0)
			)
			initMapEffect(FALSE);
		ChatProc();				// ??????
		ChatBufferToFontBuffer(); // ??????????????????????
		SortDispBuffer(); 	// ???????
							// ???????????????
		ClearBackSurface();
		if ((mapEffectRainLevel != 0 && oldMapEffectRainLevel == 0)
			|| (mapEffectSnowLevel != 0 && oldMapEffectSnowLevel == 0))
			mapEffectProc2(80);		// ?????????????
									// ????????????????
		PutBmp();
		// ??????????????????????
		lpBattleSurface->BltFast(0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT);
		// ???????
		DispBuffer.DispCnt = 0;
		FontCnt = 0;

		//			if( map_bgm_no != now_bgm )
		//			{
		//				stop_bgm();				//???
		//				play_bgm( map_bgm_no );
		//			}

		// ????????
		NowTime = TimeGetTime();

		ProduceInitFlag = TRUE;

		SubProcNo++;

	case 204:
		// ??
		BackBufferDrawType = DRAW_BACK_PRODUCE;
		if (DrawProduce(PRODUCE_CENTER_PRESSOUT) == TRUE)
		{
			fieldInfoTime = TimeGetTime();
			if (fastDrawTile)
			{
				SubProcNo = 20;
			}
			else
			{
				SubProcNo = 3;
			}
#ifdef _NPC_DANCE
			if (nowFloor == 7027)
				play_bgm(24);
#endif
		}
		drawField();	// ???????????
		MenuProc();	// ??????
		ImeProc();	// ???????
		break;


	case 1:
		initPc();				// ?????????
		resetFieldProc();		// ????????????
		restorePtActCharObjAll();	// ?????????????????
		initOpenServerWindow();	// ????????????????
		InitMenu();		// ??????????
						//			BattleStatusBak[ 0 ] = NULL;// ??????
						//			BattleStatusReadPointer = BattleStatusWritePointer =0;
						// ??????
		GetKeyInputFocus(&MyChatBuffer);

		// ????
		if (produceFlag == TRUE) {
			// ????????????
			//if( BattleResultWndFlag == TRUE ){

			// ?????
			// ???????
			DispBuffer.DispCnt = 0;
			FontCnt = 0;
			initCharPartsPrio();	// ??????????????????
			RunAction();			// ?????????
			StockTaskDispBuffer();	// ???????????????
			stop_bgm();				//???
			updateMapArea();
			redrawMap();
			drawMap();				//	???
									//????????
			if (!draw_map_bgm_flg) {
				//????????
				play_bgm(map_bgm_no = now_bgm);
				draw_map_bgm_flg = 1;
			}
			MenuProc();				// ??????
									// ??????????????
									//StockBoxDispBuffer( 0, 456, lpDraw->xSize, lpDraw->ySize, DISP_PRIO_MENU, 0, 1 );
			ChatProc();				// ??????
			ChatBufferToFontBuffer(); // ??????????????????????
			ImeProc();				// ???????
			SortDispBuffer(); 	// ???????
								// ???????????????
			ClearBackSurface();
			// ????????????????
			PutBmp();
			// ??????????????????????
			lpBattleSurface->BltFast(0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT);
			// ???????
			DispBuffer.DispCnt = 0;
			FontCnt = 0;
			// ????????
			NowTime = TimeGetTime();
			// ??????????
			BackBufferDrawType = DRAW_BACK_PRODUCE;
			// ??
			DrawProduce(PRODUCE_4WAY_IN);
		}
		else {
			// ??????
			produceFlag = TRUE;
			SubProcNo++;
		}
		SubProcNo++;

		break;

	case 2:	// ????????
			// ??
		if (DrawProduce(PRODUCE_4WAY_IN) == TRUE) {
			warpEffectStart = FALSE;
			warpEffectOk = FALSE;
			if (fastDrawTile)
			{
				SubProcNo = 20;
			}
			else
			{
				SubProcNo = 3;
			}
		}
		break;


	case 20:
		BackBufferDrawType = DRAW_BACK_NORMAL;
		repairMap();
		SubProcNo = 3;

	case 3:
		// ??????????

		BackBufferDrawType = DRAW_BACK_NORMAL;
		paletteProc();

		initItemOverlapCheck();	// ????????????????

		if (!transmigrationEffectFlag) {
			drawGrid();				// ????????
			fieldProc();			// ?????????
									// Nuke 0407

			if (bNewServer) {
				moveProc();				// ???
			}
			else
				moveProc();				// ???
		}

		initCharPartsPrio();	// ??????????????????
								//addressBookProc();		// ?????????
		openServerWindowProc();	// ?????????
		drawFieldInfoWin();		// ??????

								/* ????????? */
		RunAction();
		// ???????????????
		// ?????????
		StockTaskDispBuffer();

		mapEffectProc();		// ?????????????

		drawMap2();		// ???



		if (!transmigrationEffectFlag) {
			drawField();	// ???????????

							/* ?????? */
			ChatProc();
			// ??????????????????????
			ChatBufferToFontBuffer();
			// ???????????
			FlashKeyboardCursor();
			// ??????
			MenuProc();
			// ???????
			ImeProc();
		}
		// ???????????????
		TimeZoneProc();

		/*cary
		#ifdef _STONDEBUG_
		// ?????????
		if( joy_trg[ 0 ] & JOY_P_DOWN ){
		if( pc.ptAct != NULL ){
		resetMap();					// ?????????
		// ???????
		if( bNewServer)
		lssproto_EN_send( sockfd, pc.ptAct->gx, pc.ptAct->gy );
		else
		old_lssproto_EN_send( sockfd, pc.ptAct->gx, pc.ptAct->gy );
		eventEnemyFlag = 0;
		}
		}
		#endif
		*/
		// ?????????
		if (EncountFlag == TRUE) {
			resetPc();				// PC????
			resetCharObj();			// ?????????????
			resetMap();				// ?????????
			clearPtActPartyParam();	// ???????????????NULL???
			fieldInfoTime = 0;		// ??????
			drawFieldInfoWin();		// ??????
			resetFieldProc();		// ????????????
			nowEncountPercentage = minEncountPercentage;// ????????????
			sendEnFlag = 0;
			encountNowFlag = 1;
			eventEnemySendFlag = 0;
			duelSendFlag = 0;
			jbSendFlag = 0;
			if (MenuToggleFlag & JOY_CTRL_M) MapWmdFlagBak = TRUE;
			ResultWndTimer = RESULT_WND_CLOSE_TIME;
			InitMenu();			// ??????????
			BattleCmd[0] = NULL;		// ??????????
										//				BattleCmdBak[ 0 ] = NULL;	// ??????????
										//				BattleCmdReadPointer = BattleCmdWritePointer =0;
			BattleStatus[0] = NULL;	// ??????
									//BattleStatusBak[ 0 ] = NULL;// ??????
									//				BattleStatusReadPointer = BattleStatusWritePointer =0;
			BattleTurnReceiveFlag = TRUE;
			play_se(215, 320, 240);
			now_bgm = t_music_bgm_no;
			stop_bgm();
			//SubProcNo++;
			ChangeProc2(PROC_GAME, SubProcNo + 1);
			//printf("\n战斗预处理执行完毕 SubProcNo=%d",SubProcNo+1);
		}
		break;

	case 4:	// ????????????????????
			// ???????????? 
		CopyBackBuffer();
		// ??????????
		BackBufferDrawType = DRAW_BACK_PRODUCE;
		SubProcNo++;
		//	printf("\nDRAW_BACK_PRODUCE执行完毕 SubProcNo=%d",SubProcNo);
		break;

	case 5:	// ???????

			// ??
		if (DrawProduce(PRODUCE_HAGARE_OCHI_OUT) == TRUE) {
			//if( DrawProduce( PRODUCE_RIGHT_ACCELE ) == TRUE ){
			//if( DrawProduce( PRODUCE_LEFT_RIGHT_ACCELE ) == TRUE ){
			//if( GameState == GAME_ENCOUNT_TO_BATTLE ){ 
			// ????????
#ifdef _HALLOWEEN_EFFECT
			initMapEffect(FALSE);
#endif
			ChangeProc(PROC_BATTLE);
			//		printf("\nPROC_BATTLE更换完毕 SubProcNo=%d",SubProcNo);
		}

		MenuProc();	// ??????
					//	printf("\nMenuProc执行完毕");
		ImeProc();	// ???????
					//	printf("\nImeProc执行完毕");
		break;
	}
}


// ?????
void warpEffectProc(void)
{
	oldMapEffectRainLevel = mapEffectRainLevel;
	oldMapEffectSnowLevel = mapEffectSnowLevel;

	DispBuffer.DispCnt = 0;
	FontCnt = 0;

	// ?????????????????
	if (MenuToggleFlag & JOY_CTRL_M) MapWmdFlagBak = TRUE;
	InitMenu2();

	fieldProc();			// ?????????
	initCharPartsPrio();	// ??????????????????
	openServerWindowProc();	// ?????????

	fieldInfoTime = 0;		// ??????
	drawFieldInfoWin();		// ??????


							/* ????????? */
	RunAction();
	// ???????????????
	StockTaskDispBuffer();

	mapEffectProc();		// ?????????????

	redrawMap();
	drawMap();		// ???
					/* ?????? */
	ChatProc();
	// ??????????????????????
	ChatBufferToFontBuffer();
	// ???????????????
	//	TimeZoneProc();
	SortDispBuffer(); 	// ???????
						// ???????????????
	ClearBackSurface();
	// ????????????????
	PutBmp();

#ifndef __SKYISLAND
	// ??????????????????????
	lpBattleSurface->BltFast(0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT);
#endif
}


void repairMap(void)
{
	float dx, dy;
#ifdef _MOVE_SCREEN
	if (pc.bMoveScreenMode)
	{
		dx = (float)(+(-nowGx) * (SURFACE_WIDTH >> 1) + -nowGy * (SURFACE_WIDTH >> 1) + viewOffsetX);
		dy = (float)(-(-nowGx) * (SURFACE_HEIGHT >> 1) + -nowGy * (SURFACE_HEIGHT >> 1) + viewOffsetY);
	}
	else
#endif
		//
		camMapToGamen(0.0, 0.0, &dx, &dy);

	nowXFastDraw = (int)(dx + .5);
	nowYFastDraw = (int)(dy + .5);

	nowXFastDraw2 = nowXFastDraw;
	nowYFastDraw2 = nowYFastDraw;

	//???????????????
	if (ResoMode == 1) {
		nowXFastDraw = (int)(dx / 2 + .5);
		nowYFastDraw = (int)(dy / 2 + .5);
	}

	baseXFastDraw = nowXFastDraw;
	baseYFastDraw = nowYFastDraw;
	amountXFastDraw = nowXFastDraw - baseXFastDraw;
	amountYFastDraw = nowYFastDraw - baseYFastDraw;

	DispBuffer.DispCnt = 0;
	FontCnt = 0;
	drawTile();		// ???
	SortDispBuffer(); 	// ???????
						// ???????????????
						//cary 2001 11 8
	ClearBackSurface();

	// ????????????????
	fastDrawTileFlag = 0;
	PutBmp();
	fastDrawTileFlag = 1;
#ifndef __SKYISLAND
	// ??????????????????????
	lpBattleSurface->BltFast(0, 0, lpDraw->lpBACKBUFFER, NULL, DDBLTFAST_WAIT);
#endif
	DispBuffer.DispCnt = 0;
	FontCnt = 0;
	// ????????
	NowTime = TimeGetTime();
}


void paletteProc(void)
{
	if (palNo == -1)
	{
		// ????????
		// the second PaletteChange( SaTimeZoneNo, 0 );
		PaletteChange(SaTimeZoneNo, palTime);
		// ??????????????
		TimeZonePalChangeFlag = TRUE;
		palNo = -2;
	}
	else
		if (palNo >= 0)
		{
			// ?????
			// the second PaletteChange( palNo, 0 );// ????????
			PaletteChange(palNo, palTime);// ????????
										  // ???????????????
			TimeZonePalChangeFlag = FALSE;
			palNo = -2;
		}
}

#ifdef _SURFACE_ANIM
extern ACTION *SPACT[MAX_ANIM];
void AniProc()
{
	return;
	float mx, my;

	for (int i = 0; i < MAX_ANIM; i++)
	{
		if (SPACT[i] != NULL)
		{
			try
			{
				camMapToGamen(SPACT[i]->mx, SPACT[i]->my, &mx, &my);
				if (SPACT[i]->anim_chr_no > 102002) {
					SPACT[i]->x = (int)(mx - 5);
					SPACT[i]->y = (int)(my + 8);
				}
				else {
					SPACT[i]->x = (int)(mx + .5);
					SPACT[i]->y = (int)(my + .5);
				}
				pattern(SPACT[i], ANM_NOMAL_SPD, ANM_LOOP);
			}
			catch (...)
			{
				SPACT[i] = 0;
			}

		}
	}
}
#endif
