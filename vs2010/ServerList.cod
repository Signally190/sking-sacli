; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Administrator\Desktop\????? ??\????? ??\Client Source Code\mylua\ServerList.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0N@GCICAIEB@SetGroupList?$AA@		; `string'
PUBLIC	??_C@_0P@MHLCILKI@SetGroupMaxNum?$AA@		; `string'
PUBLIC	??_C@_0O@HKOLBEFP@SetServerList?$AA@		; `string'
;	COMDAT ??_C@_0O@HKOLBEFP@SetServerList?$AA@
CONST	SEGMENT
??_C@_0O@HKOLBEFP@SetServerList?$AA@ DB 'SetServerList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHLCILKI@SetGroupMaxNum?$AA@
CONST	SEGMENT
??_C@_0P@MHLCILKI@SetGroupMaxNum?$AA@ DB 'SetGroupMaxNum', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCICAIEB@SetGroupList?$AA@
CONST	SEGMENT
??_C@_0N@GCICAIEB@SetGroupList?$AA@ DB 'SetGroupList', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
?ServerListlib@@3QBUluaL_Reg@@B DD FLAT:??_C@_0N@GCICAIEB@SetGroupList?$AA@ ; ServerListlib
	DD	FLAT:?SetGroupList@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0P@MHLCILKI@SetGroupMaxNum?$AA@
	DD	FLAT:?SetGroupMaxNum@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_0O@HKOLBEFP@SetServerList?$AA@
	DD	FLAT:?SetServerList@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	?luaopen_ServerList@@YAHPAUlua_State@@@Z	; luaopen_ServerList
PUBLIC	??_C@_0L@KPCNOBPE@ServerList?$AA@		; `string'
EXTRN	_strcpy:PROC
EXTRN	_luaL_register:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?gmsv@@3PAUgameserver@@A:BYTE			; gmsv
EXTRN	?gmgroup@@3PAUgamegroup@@A:BYTE			; gmgroup
EXTRN	?nGroup@@3HA:DWORD				; nGroup
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0L@KPCNOBPE@ServerList?$AA@
CONST	SEGMENT
??_C@_0L@KPCNOBPE@ServerList?$AA@ DB 'ServerList', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\serverlist.cpp
;	COMDAT ?SetServerList@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_ServerName$ = -56					; size = 4
_ServerPort$ = -44					; size = 4
_ServerIP$ = -32					; size = 4
_id$ = -20						; size = 4
_l$ = -8						; size = 4
_L$ = 8							; size = 4
?SetServerList@@YAHPAUlua_State@@@Z PROC		; SetServerList, COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 38   : 	size_t l;
; 39   : 	const int id = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 ec	 mov	 DWORD PTR _id$[ebp], eax

; 40   : 	const char *ServerIP = luaL_checklstring(L, 2, &l);

  0002f	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00032	50		 push	 eax
  00033	6a 02		 push	 2
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 _luaL_checklstring
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00041	89 45 e0	 mov	 DWORD PTR _ServerIP$[ebp], eax

; 41   : 	const char *ServerPort = luaL_checklstring(L, 3, &l);

  00044	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00047	50		 push	 eax
  00048	6a 03		 push	 3
  0004a	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _luaL_checklstring
  00053	83 c4 0c	 add	 esp, 12			; 0000000cH
  00056	89 45 d4	 mov	 DWORD PTR _ServerPort$[ebp], eax

; 42   : 	const char *ServerName = luaL_checklstring(L, 4, &l);

  00059	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00062	51		 push	 ecx
  00063	e8 00 00 00 00	 call	 _luaL_checklstring
  00068	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006b	89 45 c8	 mov	 DWORD PTR _ServerName$[ebp], eax

; 43   : 
; 44   : 	strcpy(gmsv[id].ipaddr, ServerIP);

  0006e	8b 45 e0	 mov	 eax, DWORD PTR _ServerIP$[ebp]
  00071	50		 push	 eax
  00072	8b 4d ec	 mov	 ecx, DWORD PTR _id$[ebp]
  00075	c1 e1 08	 shl	 ecx, 8
  00078	81 c1 01 00 00
	00		 add	 ecx, OFFSET ?gmsv@@3PAUgameserver@@A+1
  0007e	51		 push	 ecx
  0007f	e8 00 00 00 00	 call	 _strcpy
  00084	83 c4 08	 add	 esp, 8

; 45   : 	strcpy(gmsv[id].port, ServerPort);

  00087	8b 45 d4	 mov	 eax, DWORD PTR _ServerPort$[ebp]
  0008a	50		 push	 eax
  0008b	8b 4d ec	 mov	 ecx, DWORD PTR _id$[ebp]
  0008e	c1 e1 08	 shl	 ecx, 8
  00091	81 c1 80 00 00
	00		 add	 ecx, OFFSET ?gmsv@@3PAUgameserver@@A+128
  00097	51		 push	 ecx
  00098	e8 00 00 00 00	 call	 _strcpy
  0009d	83 c4 08	 add	 esp, 8

; 46   : 	strcpy(gmsv[id].name, ServerName);

  000a0	8b 45 c8	 mov	 eax, DWORD PTR _ServerName$[ebp]
  000a3	50		 push	 eax
  000a4	8b 4d ec	 mov	 ecx, DWORD PTR _id$[ebp]
  000a7	c1 e1 08	 shl	 ecx, 8
  000aa	81 c1 c0 00 00
	00		 add	 ecx, OFFSET ?gmsv@@3PAUgameserver@@A+192
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 _strcpy
  000b6	83 c4 08	 add	 esp, 8

; 47   : 
; 48   : 	gmsv[id].used = '1';

  000b9	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  000bc	c1 e0 08	 shl	 eax, 8
  000bf	c6 80 00 00 00
	00 31		 mov	 BYTE PTR ?gmsv@@3PAUgameserver@@A[eax], 49 ; 00000031H

; 49   : 	return 1;

  000c6	b8 01 00 00 00	 mov	 eax, 1

; 50   : }

  000cb	52		 push	 edx
  000cc	8b cd		 mov	 ecx, ebp
  000ce	50		 push	 eax
  000cf	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetServerL
  000d5	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000da	58		 pop	 eax
  000db	5a		 pop	 edx
  000dc	5f		 pop	 edi
  000dd	5e		 pop	 esi
  000de	5b		 pop	 ebx
  000df	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000e5	3b ec		 cmp	 ebp, esp
  000e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ec	8b e5		 mov	 esp, ebp
  000ee	5d		 pop	 ebp
  000ef	c3		 ret	 0
$LN5@SetServerL:
  000f0	01 00 00 00	 DD	 1
  000f4	00 00 00 00	 DD	 $LN4@SetServerL
$LN4@SetServerL:
  000f8	f8 ff ff ff	 DD	 -8			; fffffff8H
  000fc	04 00 00 00	 DD	 4
  00100	00 00 00 00	 DD	 $LN3@SetServerL
$LN3@SetServerL:
  00104	6c		 DB	 108			; 0000006cH
  00105	00		 DB	 0
?SetServerList@@YAHPAUlua_State@@@Z ENDP		; SetServerList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\serverlist.cpp
;	COMDAT ?SetGroupList@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_GroupName$ = -68					; size = 4
_ServerIndex$ = -56					; size = 4
_ServerMaxNum$ = -44					; size = 4
_GroupUse$ = -32					; size = 4
_id$ = -20						; size = 4
_l$ = -8						; size = 4
_L$ = 8							; size = 4
?SetGroupList@@YAHPAUlua_State@@@Z PROC			; SetGroupList, COMDAT

; 20   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 08 01 00
	00		 sub	 esp, 264		; 00000108H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd f8 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-264]
  00012	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 21   : 	size_t l;
; 22   : 	const int id = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 ec	 mov	 DWORD PTR _id$[ebp], eax

; 23   : 	const int GroupUse = luaL_checkint(L, 2);

  0002f	6a 02		 push	 2
  00031	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _luaL_checkinteger
  0003a	83 c4 08	 add	 esp, 8
  0003d	89 45 e0	 mov	 DWORD PTR _GroupUse$[ebp], eax

; 24   : 	const int ServerMaxNum = luaL_checkint(L, 3);

  00040	6a 03		 push	 3
  00042	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _luaL_checkinteger
  0004b	83 c4 08	 add	 esp, 8
  0004e	89 45 d4	 mov	 DWORD PTR _ServerMaxNum$[ebp], eax

; 25   : 	const int ServerIndex = luaL_checkint(L, 4);

  00051	6a 04		 push	 4
  00053	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00056	50		 push	 eax
  00057	e8 00 00 00 00	 call	 _luaL_checkinteger
  0005c	83 c4 08	 add	 esp, 8
  0005f	89 45 c8	 mov	 DWORD PTR _ServerIndex$[ebp], eax

; 26   : 	const char *GroupName = luaL_checklstring(L, 5, &l);

  00062	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00065	50		 push	 eax
  00066	6a 05		 push	 5
  00068	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0006b	51		 push	 ecx
  0006c	e8 00 00 00 00	 call	 _luaL_checklstring
  00071	83 c4 0c	 add	 esp, 12			; 0000000cH
  00074	89 45 bc	 mov	 DWORD PTR _GroupName$[ebp], eax

; 27   : 	gmgroup[id].used = GroupUse;

  00077	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  0007a	c1 e0 06	 shl	 eax, 6
  0007d	8a 4d e0	 mov	 cl, BYTE PTR _GroupUse$[ebp]
  00080	88 88 00 00 00
	00		 mov	 BYTE PTR ?gmgroup@@3PAUgamegroup@@A[eax], cl

; 28   : 	gmgroup[id].num = ServerMaxNum;

  00086	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  00089	c1 e0 06	 shl	 eax, 6
  0008c	8a 4d d4	 mov	 cl, BYTE PTR _ServerMaxNum$[ebp]
  0008f	88 88 01 00 00
	00		 mov	 BYTE PTR ?gmgroup@@3PAUgamegroup@@A[eax+1], cl

; 29   : 	gmgroup[id].startindex = ServerIndex;

  00095	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  00098	c1 e0 06	 shl	 eax, 6
  0009b	8a 4d c8	 mov	 cl, BYTE PTR _ServerIndex$[ebp]
  0009e	88 88 02 00 00
	00		 mov	 BYTE PTR ?gmgroup@@3PAUgamegroup@@A[eax+2], cl

; 30   : 	strcpy(gmgroup[id].name, GroupName);

  000a4	8b 45 bc	 mov	 eax, DWORD PTR _GroupName$[ebp]
  000a7	50		 push	 eax
  000a8	8b 4d ec	 mov	 ecx, DWORD PTR _id$[ebp]
  000ab	c1 e1 06	 shl	 ecx, 6
  000ae	81 c1 03 00 00
	00		 add	 ecx, OFFSET ?gmgroup@@3PAUgamegroup@@A+3
  000b4	51		 push	 ecx
  000b5	e8 00 00 00 00	 call	 _strcpy
  000ba	83 c4 08	 add	 esp, 8

; 31   : 	return 1;

  000bd	b8 01 00 00 00	 mov	 eax, 1

; 32   : }

  000c2	52		 push	 edx
  000c3	8b cd		 mov	 ecx, ebp
  000c5	50		 push	 eax
  000c6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetGroupLi
  000cc	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000d1	58		 pop	 eax
  000d2	5a		 pop	 edx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5b		 pop	 ebx
  000d6	81 c4 08 01 00
	00		 add	 esp, 264		; 00000108H
  000dc	3b ec		 cmp	 ebp, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e3	8b e5		 mov	 esp, ebp
  000e5	5d		 pop	 ebp
  000e6	c3		 ret	 0
  000e7	90		 npad	 1
$LN5@SetGroupLi:
  000e8	01 00 00 00	 DD	 1
  000ec	00 00 00 00	 DD	 $LN4@SetGroupLi
$LN4@SetGroupLi:
  000f0	f8 ff ff ff	 DD	 -8			; fffffff8H
  000f4	04 00 00 00	 DD	 4
  000f8	00 00 00 00	 DD	 $LN3@SetGroupLi
$LN3@SetGroupLi:
  000fc	6c		 DB	 108			; 0000006cH
  000fd	00		 DB	 0
?SetGroupList@@YAHPAUlua_State@@@Z ENDP			; SetGroupList
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\serverlist.cpp
;	COMDAT ?SetGroupMaxNum@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_num$ = -8						; size = 4
_L$ = 8							; size = 4
?SetGroupMaxNum@@YAHPAUlua_State@@@Z PROC		; SetGroupMaxNum, COMDAT

; 13   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 14   : 	const int num = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR _num$[ebp], eax

; 15   : 	nGroup = num;

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _num$[ebp]
  00032	a3 00 00 00 00	 mov	 DWORD PTR ?nGroup@@3HA, eax ; nGroup

; 16   : 	return 1;

  00037	b8 01 00 00 00	 mov	 eax, 1

; 17   : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?SetGroupMaxNum@@YAHPAUlua_State@@@Z ENDP		; SetGroupMaxNum
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\serverlist.cpp
;	COMDAT ?luaopen_ServerList@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_ServerList@@YAHPAUlua_State@@@Z PROC		; luaopen_ServerList, COMDAT

; 61   : LUALIB_API int luaopen_ServerList (lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 62   : 	luaL_register(L, "ServerList", ServerListlib);

  0001e	68 00 00 00 00	 push	 OFFSET ?ServerListlib@@3QBUluaL_Reg@@B
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KPCNOBPE@ServerList?$AA@
  00028	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 _luaL_register
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 63   : 	return 1;

  00034	b8 01 00 00 00	 mov	 eax, 1

; 64   : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?luaopen_ServerList@@YAHPAUlua_State@@@Z ENDP		; luaopen_ServerList
_TEXT	ENDS
END
