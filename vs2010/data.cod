; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Administrator\Desktop\????? ??\????? ??\Client Source Code\mylua\data.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03LAMLDFEG@pet?$AA@			; `string'
;	COMDAT ??_C@_03LAMLDFEG@pet?$AA@
CONST	SEGMENT
??_C@_03LAMLDFEG@pet?$AA@ DB 'pet', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
?Datalib@@3QBUluaL_Reg@@B DD FLAT:??_C@_03LAMLDFEG@pet?$AA@ ; Datalib
	DD	FLAT:?getPetData@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	?luaopen_Data@@YAHPAUlua_State@@@Z		; luaopen_Data
PUBLIC	??_C@_04CBMOHCLB@?$MA?$KH?D?$KB?$AA@		; `string'
PUBLIC	??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD?$AA@ ; `string'
PUBLIC	??_C@_02MEIMKHMB@HP?$AA@			; `string'
PUBLIC	??_C@_05DDBABAEM@MaxHP?$AA@			; `string'
PUBLIC	??_C@_02MCEHGFCK@MP?$AA@			; `string'
PUBLIC	??_C@_05DFNLNCKH@MaxMP?$AA@			; `string'
PUBLIC	??_C@_04NIEJOHDD@?$LA?f?G?h?$AA@		; `string'
PUBLIC	??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h?$AA@	; `string'
PUBLIC	??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH?$AA@		; `string'
PUBLIC	??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B?$AA@	; `string'
PUBLIC	??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B?$AA@	; `string'
PUBLIC	??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B?$AA@	; `string'
PUBLIC	??_C@_04LGBCMFEL@?C?f?$LM?$LK?$AA@		; `string'
PUBLIC	??_C@_02CKMPFPDI@?r?$KC?$AA@			; `string'
PUBLIC	??_C@_02NFBNCFID@?b?$KJ?$AA@			; `string'
PUBLIC	??_C@_02BIDNCFCM@?$PL?$PN?$AA@			; `string'
PUBLIC	??_C@_01OGPIMHDM@?$DP?$AA@			; `string'
PUBLIC	??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v?$AA@ ; `string'
PUBLIC	??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v?$AA@	; `string'
PUBLIC	??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD?$AA@ ; `string'
PUBLIC	??_C@_04KELBGJMJ@?$LL?s?E?B?$AA@		; `string'
PUBLIC	??_C@_04MGFIDEAB@?$MA?L?$LI?$KH?$AA@		; `string'
PUBLIC	??_C@_04FHFLDCCN@?$LO?V?D?$KK?$AA@		; `string'
PUBLIC	??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k?$AA@ ; `string'
PUBLIC	??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D?$AA@ ; `string'
PUBLIC	??_C@_08NEALNNCE@chardata?$AA@			; `string'
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	_strcmp:PROC
EXTRN	_lua_pushnumber:PROC
EXTRN	_lua_pushstring:PROC
EXTRN	_luaL_register:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?pet@@3PAUPET@@A:BYTE				; pet
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_08NEALNNCE@chardata?$AA@
CONST	SEGMENT
??_C@_08NEALNNCE@chardata?$AA@ DB 'chardata', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D?$AA@
CONST	SEGMENT
??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D?$AA@ DB 0b0H, 0b3H, 0b8H, 0edH
	DB	0c7H, 0a5H, 0bdH, 0c4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k?$AA@
CONST	SEGMENT
??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k?$AA@ DB 0c7H, 0c3H, 0b7H
	DB	0a1H, 0b1H, 0d7H, ' ', 0bbH, 0e7H, 0bfH, 0ebH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04FHFLDCCN@?$LO?V?D?$KK?$AA@
CONST	SEGMENT
??_C@_04FHFLDCCN@?$LO?V?D?$KK?$AA@ DB 0beH, 0d6H, 0c4H, 0aaH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGFIDEAB@?$MA?L?$LI?$KH?$AA@
CONST	SEGMENT
??_C@_04MGFIDEAB@?$MA?L?$LI?$KH?$AA@ DB 0c0H, 0ccH, 0b8H, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KELBGJMJ@?$LL?s?E?B?$AA@
CONST	SEGMENT
??_C@_04KELBGJMJ@?$LL?s?E?B?$AA@ DB 0bbH, 0f3H, 0c5H, 0c2H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD?$AA@
CONST	SEGMENT
??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD?$AA@ DB 0c1H, 0beH, 0baH, 0b0H
	DB	0baH, 0ceH, 0c8H, 0a3H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v?$AA@
CONST	SEGMENT
??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v?$AA@ DB 0c8H, 0b8H, 0c0H, 0fcH, 0bcH
	DB	0f6H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v?$AA@
CONST	SEGMENT
??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v?$AA@ DB 0c3H, 0d6H, 0b4H, 0ebH
	DB	0b1H, 0e2H, 0b4H, 0c9H, 0bcH, 0f6H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01OGPIMHDM@?$DP?$AA@
CONST	SEGMENT
??_C@_01OGPIMHDM@?$DP?$AA@ DB '?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02BIDNCFCM@?$PL?$PN?$AA@
CONST	SEGMENT
??_C@_02BIDNCFCM@?$PL?$PN?$AA@ DB 0fbH, 0fdH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02NFBNCFID@?b?$KJ?$AA@
CONST	SEGMENT
??_C@_02NFBNCFID@?b?$KJ?$AA@ DB 0e2H, 0a9H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02CKMPFPDI@?r?$KC?$AA@
CONST	SEGMENT
??_C@_02CKMPFPDI@?r?$KC?$AA@ DB 0f2H, 0a2H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04LGBCMFEL@?C?f?$LM?$LK?$AA@
CONST	SEGMENT
??_C@_04LGBCMFEL@?C?f?$LM?$LK?$AA@ DB 0c3H, 0e6H, 0bcH, 0baH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B?$AA@
CONST	SEGMENT
??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B?$AA@ DB 0b9H, 0ceH, 0c3H, 0b8H, 0b7H, 0c2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B?$AA@
CONST	SEGMENT
??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B?$AA@ DB 0b9H, 0e6H, 0beH, 0eeH, 0b7H, 0c2H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B?$AA@
CONST	SEGMENT
??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B?$AA@ DB 0b0H, 0f8H, 0b0H, 0ddH, 0b7H
	DB	0c2H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH?$AA@
CONST	SEGMENT
??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH?$AA@ DB 0b7H, 0b9H, 0baH, 0a7H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h?$AA@
CONST	SEGMENT
??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h?$AA@ DB 0c3H, 0d6H, 0b4H, 0ebH, 0b0H
	DB	0e6H, 0c7H, 0e8H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04NIEJOHDD@?$LA?f?G?h?$AA@
CONST	SEGMENT
??_C@_04NIEJOHDD@?$LA?f?G?h?$AA@ DB 0b0H, 0e6H, 0c7H, 0e8H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05DFNLNCKH@MaxMP?$AA@
CONST	SEGMENT
??_C@_05DFNLNCKH@MaxMP?$AA@ DB 'MaxMP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MCEHGFCK@MP?$AA@
CONST	SEGMENT
??_C@_02MCEHGFCK@MP?$AA@ DB 'MP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05DDBABAEM@MaxHP?$AA@
CONST	SEGMENT
??_C@_05DDBABAEM@MaxHP?$AA@ DB 'MaxHP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02MEIMKHMB@HP?$AA@
CONST	SEGMENT
??_C@_02MEIMKHMB@HP?$AA@ DB 'HP', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD?$AA@
CONST	SEGMENT
??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD?$AA@ DB 0c0H, 0ccH, 0b9H, 0ccH
	DB	0c1H, 0f6H, 0b9H, 0f8H, 0c8H, 0a3H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04CBMOHCLB@?$MA?$KH?D?$KB?$AA@
CONST	SEGMENT
??_C@_04CBMOHCLB@?$MA?$KH?D?$KB?$AA@ DB 0c0H, 0a7H, 0c4H, 0a1H, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\data.cpp
;	COMDAT ?getPetData@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
tv440 = -232						; size = 4
_attribute$ = -32					; size = 4
_l$ = -20						; size = 4
_id$ = -8						; size = 4
_L$ = 8							; size = 4
?getPetData@@YAHPAUlua_State@@@Z PROC			; getPetData, COMDAT

; 11   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec e8 00 00
	00		 sub	 esp, 232		; 000000e8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 18 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-232]
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 12   : 	const int id = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR _id$[ebp], eax

; 13   : 	size_t l;
; 14   : 	const char *attribute=luaL_checklstring(L, 2, &l);

  0002f	8d 45 ec	 lea	 eax, DWORD PTR _l$[ebp]
  00032	50		 push	 eax
  00033	6a 02		 push	 2
  00035	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 _luaL_checklstring
  0003e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00041	89 45 e0	 mov	 DWORD PTR _attribute$[ebp], eax

; 15   : 	
; 16   :  	if(strcmp(attribute, "위치") == 0){     

  00044	68 00 00 00 00	 push	 OFFSET ??_C@_04CBMOHCLB@?$MA?$KH?D?$KB?$AA@
  00049	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0004c	50		 push	 eax
  0004d	e8 00 00 00 00	 call	 _strcmp
  00052	83 c4 08	 add	 esp, 8
  00055	85 c0		 test	 eax, eax
  00057	75 28		 jne	 SHORT $LN2@getPetData

; 17   : 		lua_pushnumber(L, pet[id].index);

  00059	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00060	f2 0f 2a 80 00
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax]
  00068	83 ec 08	 sub	 esp, 8
  0006b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00070	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00073	51		 push	 ecx
  00074	e8 00 00 00 00	 call	 _lua_pushnumber
  00079	83 c4 0c	 add	 esp, 12			; 0000000cH
  0007c	e9 bd 05 00 00	 jmp	 $LN50@getPetData
$LN2@getPetData:

; 18   :  	}else if(strcmp(attribute, "이미지번호") == 0){     

  00081	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HDKOLKDG@?$MA?L?$LJ?L?A?v?$LJ?x?H?$KD?$AA@
  00086	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 _strcmp
  0008f	83 c4 08	 add	 esp, 8
  00092	85 c0		 test	 eax, eax
  00094	75 28		 jne	 SHORT $LN4@getPetData

; 19   : 		lua_pushnumber(L, pet[id].graNo);

  00096	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0009d	f2 0f 2a 80 04
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  000a5	83 ec 08	 sub	 esp, 8
  000a8	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ad	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  000b0	51		 push	 ecx
  000b1	e8 00 00 00 00	 call	 _lua_pushnumber
  000b6	83 c4 0c	 add	 esp, 12			; 0000000cH
  000b9	e9 80 05 00 00	 jmp	 $LN50@getPetData
$LN4@getPetData:

; 20   : 	}else if(strcmp(attribute, "HP") == 0){     

  000be	68 00 00 00 00	 push	 OFFSET ??_C@_02MEIMKHMB@HP?$AA@
  000c3	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  000c6	50		 push	 eax
  000c7	e8 00 00 00 00	 call	 _strcmp
  000cc	83 c4 08	 add	 esp, 8
  000cf	85 c0		 test	 eax, eax
  000d1	75 28		 jne	 SHORT $LN6@getPetData

; 21   : 		lua_pushnumber(L, pet[id].hp);

  000d3	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  000da	f2 0f 2a 80 08
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+8]
  000e2	83 ec 08	 sub	 esp, 8
  000e5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  000ea	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  000ed	51		 push	 ecx
  000ee	e8 00 00 00 00	 call	 _lua_pushnumber
  000f3	83 c4 0c	 add	 esp, 12			; 0000000cH
  000f6	e9 43 05 00 00	 jmp	 $LN50@getPetData
$LN6@getPetData:

; 22   : 	}else if(strcmp(attribute, "MaxHP") == 0){     

  000fb	68 00 00 00 00	 push	 OFFSET ??_C@_05DDBABAEM@MaxHP?$AA@
  00100	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00103	50		 push	 eax
  00104	e8 00 00 00 00	 call	 _strcmp
  00109	83 c4 08	 add	 esp, 8
  0010c	85 c0		 test	 eax, eax
  0010e	75 28		 jne	 SHORT $LN8@getPetData

; 23   : 		lua_pushnumber(L, pet[id].maxHp);

  00110	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00117	f2 0f 2a 80 0c
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+12]
  0011f	83 ec 08	 sub	 esp, 8
  00122	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00127	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0012a	51		 push	 ecx
  0012b	e8 00 00 00 00	 call	 _lua_pushnumber
  00130	83 c4 0c	 add	 esp, 12			; 0000000cH
  00133	e9 06 05 00 00	 jmp	 $LN50@getPetData
$LN8@getPetData:

; 24   : 	}else if(strcmp(attribute, "MP") == 0){     

  00138	68 00 00 00 00	 push	 OFFSET ??_C@_02MCEHGFCK@MP?$AA@
  0013d	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00140	50		 push	 eax
  00141	e8 00 00 00 00	 call	 _strcmp
  00146	83 c4 08	 add	 esp, 8
  00149	85 c0		 test	 eax, eax
  0014b	75 28		 jne	 SHORT $LN10@getPetData

; 25   : 		lua_pushnumber(L, pet[id].graNo);

  0014d	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00154	f2 0f 2a 80 04
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  0015c	83 ec 08	 sub	 esp, 8
  0015f	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00164	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00167	51		 push	 ecx
  00168	e8 00 00 00 00	 call	 _lua_pushnumber
  0016d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00170	e9 c9 04 00 00	 jmp	 $LN50@getPetData
$LN10@getPetData:

; 26   : 	}else if(strcmp(attribute, "MaxMP") == 0){     

  00175	68 00 00 00 00	 push	 OFFSET ??_C@_05DFNLNCKH@MaxMP?$AA@
  0017a	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0017d	50		 push	 eax
  0017e	e8 00 00 00 00	 call	 _strcmp
  00183	83 c4 08	 add	 esp, 8
  00186	85 c0		 test	 eax, eax
  00188	75 28		 jne	 SHORT $LN12@getPetData

; 27   : 		lua_pushnumber(L, pet[id].graNo);

  0018a	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00191	f2 0f 2a 80 04
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+4]
  00199	83 ec 08	 sub	 esp, 8
  0019c	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001a1	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  001a4	51		 push	 ecx
  001a5	e8 00 00 00 00	 call	 _lua_pushnumber
  001aa	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ad	e9 8c 04 00 00	 jmp	 $LN50@getPetData
$LN12@getPetData:

; 28   : 	}else if(strcmp(attribute, "경험") == 0){     

  001b2	68 00 00 00 00	 push	 OFFSET ??_C@_04NIEJOHDD@?$LA?f?G?h?$AA@
  001b7	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 _strcmp
  001c0	83 c4 08	 add	 esp, 8
  001c3	85 c0		 test	 eax, eax
  001c5	75 28		 jne	 SHORT $LN14@getPetData

; 29   : 		lua_pushnumber(L, pet[id].exp);

  001c7	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  001ce	f2 0f 2a 80 18
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+24]
  001d6	83 ec 08	 sub	 esp, 8
  001d9	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  001de	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  001e1	51		 push	 ecx
  001e2	e8 00 00 00 00	 call	 _lua_pushnumber
  001e7	83 c4 0c	 add	 esp, 12			; 0000000cH
  001ea	e9 4f 04 00 00	 jmp	 $LN50@getPetData
$LN14@getPetData:

; 30   : 	}else if(strcmp(attribute, "최대경험") == 0){     

  001ef	68 00 00 00 00	 push	 OFFSET ??_C@_08BBODMEGE@?C?V?$LE?k?$LA?f?G?h?$AA@
  001f4	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  001f7	50		 push	 eax
  001f8	e8 00 00 00 00	 call	 _strcmp
  001fd	83 c4 08	 add	 esp, 8
  00200	85 c0		 test	 eax, eax
  00202	75 28		 jne	 SHORT $LN16@getPetData

; 31   : 		lua_pushnumber(L, pet[id].maxExp);

  00204	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0020b	f2 0f 2a 80 1c
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+28]
  00213	83 ec 08	 sub	 esp, 8
  00216	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0021b	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0021e	51		 push	 ecx
  0021f	e8 00 00 00 00	 call	 _lua_pushnumber
  00224	83 c4 0c	 add	 esp, 12			; 0000000cH
  00227	e9 12 04 00 00	 jmp	 $LN50@getPetData
$LN16@getPetData:

; 32   : 	}else if(strcmp(attribute, "레벨") == 0){     

  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_04NCMPIMBO@?$LH?$LJ?$LK?$KH?$AA@
  00231	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 _strcmp
  0023a	83 c4 08	 add	 esp, 8
  0023d	85 c0		 test	 eax, eax
  0023f	75 28		 jne	 SHORT $LN18@getPetData

; 33   : 		lua_pushnumber(L, pet[id].level);

  00241	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00248	f2 0f 2a 80 20
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+32]
  00250	83 ec 08	 sub	 esp, 8
  00253	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00258	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0025b	51		 push	 ecx
  0025c	e8 00 00 00 00	 call	 _lua_pushnumber
  00261	83 c4 0c	 add	 esp, 12			; 0000000cH
  00264	e9 d5 03 00 00	 jmp	 $LN50@getPetData
$LN18@getPetData:

; 34   : 	}else if(strcmp(attribute, "공격력") == 0){     

  00269	68 00 00 00 00	 push	 OFFSET ??_C@_06EGADMAFM@?$LA?x?$LA?$NN?$LH?B?$AA@
  0026e	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00271	50		 push	 eax
  00272	e8 00 00 00 00	 call	 _strcmp
  00277	83 c4 08	 add	 esp, 8
  0027a	85 c0		 test	 eax, eax
  0027c	75 28		 jne	 SHORT $LN20@getPetData

; 35   : 		lua_pushnumber(L, pet[id].atk);

  0027e	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00285	f2 0f 2a 80 24
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+36]
  0028d	83 ec 08	 sub	 esp, 8
  00290	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00295	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00298	51		 push	 ecx
  00299	e8 00 00 00 00	 call	 _lua_pushnumber
  0029e	83 c4 0c	 add	 esp, 12			; 0000000cH
  002a1	e9 98 03 00 00	 jmp	 $LN50@getPetData
$LN20@getPetData:

; 36   : 	}else if(strcmp(attribute, "방어력") == 0){     

  002a6	68 00 00 00 00	 push	 OFFSET ??_C@_06LHOJAPEK@?$LJ?f?$LO?n?$LH?B?$AA@
  002ab	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  002ae	50		 push	 eax
  002af	e8 00 00 00 00	 call	 _strcmp
  002b4	83 c4 08	 add	 esp, 8
  002b7	85 c0		 test	 eax, eax
  002b9	75 28		 jne	 SHORT $LN22@getPetData

; 37   : 		lua_pushnumber(L, pet[id].def);

  002bb	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  002c2	f2 0f 2a 80 28
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+40]
  002ca	83 ec 08	 sub	 esp, 8
  002cd	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  002d2	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  002d5	51		 push	 ecx
  002d6	e8 00 00 00 00	 call	 _lua_pushnumber
  002db	83 c4 0c	 add	 esp, 12			; 0000000cH
  002de	e9 5b 03 00 00	 jmp	 $LN50@getPetData
$LN22@getPetData:

; 38   : 	}else if(strcmp(attribute, "민첩력") == 0){     

  002e3	68 00 00 00 00	 push	 OFFSET ??_C@_06LDDCPMBB@?$LJ?N?C?$LI?$LH?B?$AA@
  002e8	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  002eb	50		 push	 eax
  002ec	e8 00 00 00 00	 call	 _strcmp
  002f1	83 c4 08	 add	 esp, 8
  002f4	85 c0		 test	 eax, eax
  002f6	75 28		 jne	 SHORT $LN24@getPetData

; 39   : 		lua_pushnumber(L, pet[id].quick);

  002f8	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  002ff	f2 0f 2a 80 2c
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+44]
  00307	83 ec 08	 sub	 esp, 8
  0030a	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0030f	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00312	51		 push	 ecx
  00313	e8 00 00 00 00	 call	 _lua_pushnumber
  00318	83 c4 0c	 add	 esp, 12			; 0000000cH
  0031b	e9 1e 03 00 00	 jmp	 $LN50@getPetData
$LN24@getPetData:

; 40   : 	}else if(strcmp(attribute, "충성") == 0){     

  00320	68 00 00 00 00	 push	 OFFSET ??_C@_04LGBCMFEL@?C?f?$LM?$LK?$AA@
  00325	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00328	50		 push	 eax
  00329	e8 00 00 00 00	 call	 _strcmp
  0032e	83 c4 08	 add	 esp, 8
  00331	85 c0		 test	 eax, eax
  00333	75 28		 jne	 SHORT $LN26@getPetData

; 41   : 		lua_pushnumber(L, pet[id].ai);

  00335	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0033c	f2 0f 2a 80 30
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+48]
  00344	83 ec 08	 sub	 esp, 8
  00347	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0034c	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0034f	51		 push	 ecx
  00350	e8 00 00 00 00	 call	 _lua_pushnumber
  00355	83 c4 0c	 add	 esp, 12			; 0000000cH
  00358	e9 e1 02 00 00	 jmp	 $LN50@getPetData
$LN26@getPetData:

; 42   : 	}else if(strcmp(attribute, "地") == 0){     

  0035d	68 00 00 00 00	 push	 OFFSET ??_C@_02CKMPFPDI@?r?$KC?$AA@
  00362	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00365	50		 push	 eax
  00366	e8 00 00 00 00	 call	 _strcmp
  0036b	83 c4 08	 add	 esp, 8
  0036e	85 c0		 test	 eax, eax
  00370	75 28		 jne	 SHORT $LN28@getPetData

; 43   : 		lua_pushnumber(L, pet[id].earth);

  00372	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00379	f2 0f 2a 80 34
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+52]
  00381	83 ec 08	 sub	 esp, 8
  00384	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00389	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0038c	51		 push	 ecx
  0038d	e8 00 00 00 00	 call	 _lua_pushnumber
  00392	83 c4 0c	 add	 esp, 12			; 0000000cH
  00395	e9 a4 02 00 00	 jmp	 $LN50@getPetData
$LN28@getPetData:

; 44   : 	}else if(strcmp(attribute, "水") == 0){     

  0039a	68 00 00 00 00	 push	 OFFSET ??_C@_02NFBNCFID@?b?$KJ?$AA@
  0039f	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  003a2	50		 push	 eax
  003a3	e8 00 00 00 00	 call	 _strcmp
  003a8	83 c4 08	 add	 esp, 8
  003ab	85 c0		 test	 eax, eax
  003ad	75 28		 jne	 SHORT $LN30@getPetData

; 45   : 		lua_pushnumber(L, pet[id].water);

  003af	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  003b6	f2 0f 2a 80 38
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+56]
  003be	83 ec 08	 sub	 esp, 8
  003c1	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  003c6	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  003c9	51		 push	 ecx
  003ca	e8 00 00 00 00	 call	 _lua_pushnumber
  003cf	83 c4 0c	 add	 esp, 12			; 0000000cH
  003d2	e9 67 02 00 00	 jmp	 $LN50@getPetData
$LN30@getPetData:

; 46   : 	}else if(strcmp(attribute, "火") == 0){     

  003d7	68 00 00 00 00	 push	 OFFSET ??_C@_02BIDNCFCM@?$PL?$PN?$AA@
  003dc	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  003df	50		 push	 eax
  003e0	e8 00 00 00 00	 call	 _strcmp
  003e5	83 c4 08	 add	 esp, 8
  003e8	85 c0		 test	 eax, eax
  003ea	75 28		 jne	 SHORT $LN32@getPetData

; 47   : 		lua_pushnumber(L, pet[id].fire);

  003ec	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  003f3	f2 0f 2a 80 3c
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+60]
  003fb	83 ec 08	 sub	 esp, 8
  003fe	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00403	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00406	51		 push	 ecx
  00407	e8 00 00 00 00	 call	 _lua_pushnumber
  0040c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0040f	e9 2a 02 00 00	 jmp	 $LN50@getPetData
$LN32@getPetData:

; 48   : 	}else if(strcmp(attribute, "风") == 0){     

  00414	68 00 00 00 00	 push	 OFFSET ??_C@_01OGPIMHDM@?$DP?$AA@
  00419	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0041c	50		 push	 eax
  0041d	e8 00 00 00 00	 call	 _strcmp
  00422	83 c4 08	 add	 esp, 8
  00425	85 c0		 test	 eax, eax
  00427	75 28		 jne	 SHORT $LN34@getPetData

; 49   : 		lua_pushnumber(L, pet[id].wind);

  00429	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00430	f2 0f 2a 80 40
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+64]
  00438	83 ec 08	 sub	 esp, 8
  0043b	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00440	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00443	51		 push	 ecx
  00444	e8 00 00 00 00	 call	 _lua_pushnumber
  00449	83 c4 0c	 add	 esp, 12			; 0000000cH
  0044c	e9 ed 01 00 00	 jmp	 $LN50@getPetData
$LN34@getPetData:

; 50   : 	}else if(strcmp(attribute, "최대기능수") == 0){     

  00451	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IICAODEA@?C?V?$LE?k?$LB?b?$LE?I?$LM?v?$AA@
  00456	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00459	50		 push	 eax
  0045a	e8 00 00 00 00	 call	 _strcmp
  0045f	83 c4 08	 add	 esp, 8
  00462	85 c0		 test	 eax, eax
  00464	75 28		 jne	 SHORT $LN36@getPetData

; 51   : 		lua_pushnumber(L, pet[id].maxSkill);

  00466	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0046d	f2 0f 2a 80 44
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+68]
  00475	83 ec 08	 sub	 esp, 8
  00478	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  0047d	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00480	51		 push	 ecx
  00481	e8 00 00 00 00	 call	 _lua_pushnumber
  00486	83 c4 0c	 add	 esp, 12			; 0000000cH
  00489	e9 b0 01 00 00	 jmp	 $LN50@getPetData
$LN36@getPetData:

; 52   : 	}else if(strcmp(attribute, "회전수") == 0){     

  0048e	68 00 00 00 00	 push	 OFFSET ??_C@_06MAPPGAPO@?H?$LI?$MA?$PM?$LM?v?$AA@
  00493	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00496	50		 push	 eax
  00497	e8 00 00 00 00	 call	 _strcmp
  0049c	83 c4 08	 add	 esp, 8
  0049f	85 c0		 test	 eax, eax
  004a1	75 28		 jne	 SHORT $LN38@getPetData

; 53   : 		lua_pushnumber(L, pet[id].trn);

  004a3	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  004aa	f2 0f 2a 80 48
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+72]
  004b2	83 ec 08	 sub	 esp, 8
  004b5	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004ba	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  004bd	51		 push	 ecx
  004be	e8 00 00 00 00	 call	 _lua_pushnumber
  004c3	83 c4 0c	 add	 esp, 12			; 0000000cH
  004c6	e9 73 01 00 00	 jmp	 $LN50@getPetData
$LN38@getPetData:

; 54   : 	}else if(strcmp(attribute, "종별부호") == 0){     

  004cb	68 00 00 00 00	 push	 OFFSET ??_C@_08DNIKJKAG@?A?$LO?$LK?$LA?$LK?N?H?$KD?$AA@
  004d0	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 _strcmp
  004d9	83 c4 08	 add	 esp, 8
  004dc	85 c0		 test	 eax, eax
  004de	75 28		 jne	 SHORT $LN40@getPetData

; 55   : 		lua_pushnumber(L, pet[id].fusion);

  004e0	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  004e7	f2 0f 2a 80 4c
	00 00 00	 cvtsi2sd xmm0, DWORD PTR ?pet@@3PAUPET@@A[eax+76]
  004ef	83 ec 08	 sub	 esp, 8
  004f2	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  004f7	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  004fa	51		 push	 ecx
  004fb	e8 00 00 00 00	 call	 _lua_pushnumber
  00500	83 c4 0c	 add	 esp, 12			; 0000000cH
  00503	e9 36 01 00 00	 jmp	 $LN50@getPetData
$LN40@getPetData:

; 56   : 	}else if(strcmp(attribute, "상태") == 0){     

  00508	68 00 00 00 00	 push	 OFFSET ??_C@_04KELBGJMJ@?$LL?s?E?B?$AA@
  0050d	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  00510	50		 push	 eax
  00511	e8 00 00 00 00	 call	 _strcmp
  00516	83 c4 08	 add	 esp, 8
  00519	85 c0		 test	 eax, eax
  0051b	75 46		 jne	 SHORT $LN42@getPetData

; 57   : 		lua_pushnumber(L, pet[id].status);

  0051d	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  00524	8b 88 50 00 00
	00		 mov	 ecx, DWORD PTR ?pet@@3PAUPET@@A[eax+80]
  0052a	89 8d 18 ff ff
	ff		 mov	 DWORD PTR tv440[ebp], ecx
  00530	f2 0f 2a 85 18
	ff ff ff	 cvtsi2sd xmm0, DWORD PTR tv440[ebp]
  00538	8b 95 18 ff ff
	ff		 mov	 edx, DWORD PTR tv440[ebp]
  0053e	c1 ea 1f	 shr	 edx, 31			; 0000001fH
  00541	f2 0f 58 04 d5
	00 00 00 00	 addsd	 xmm0, QWORD PTR __xmm@41f00000000000000000000000000000[edx*8]
  0054a	83 ec 08	 sub	 esp, 8
  0054d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00552	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00555	50		 push	 eax
  00556	e8 00 00 00 00	 call	 _lua_pushnumber
  0055b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0055e	e9 db 00 00 00	 jmp	 $LN50@getPetData
$LN42@getPetData:

; 58   : 	}else if(strcmp(attribute, "이름") == 0){     

  00563	68 00 00 00 00	 push	 OFFSET ??_C@_04MGFIDEAB@?$MA?L?$LI?$KH?$AA@
  00568	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0056b	50		 push	 eax
  0056c	e8 00 00 00 00	 call	 _strcmp
  00571	83 c4 08	 add	 esp, 8
  00574	85 c0		 test	 eax, eax
  00576	75 1e		 jne	 SHORT $LN44@getPetData

; 59   : 		lua_pushstring(L, pet[id].name);

  00578	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0057f	05 54 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+84
  00584	50		 push	 eax
  00585	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00588	51		 push	 ecx
  00589	e8 00 00 00 00	 call	 _lua_pushstring
  0058e	83 c4 08	 add	 esp, 8
  00591	e9 a8 00 00 00	 jmp	 $LN50@getPetData
$LN44@getPetData:

; 60   : 	}else if(strcmp(attribute, "애칭") == 0){     

  00596	68 00 00 00 00	 push	 OFFSET ??_C@_04FHFLDCCN@?$LO?V?D?$KK?$AA@
  0059b	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0059e	50		 push	 eax
  0059f	e8 00 00 00 00	 call	 _strcmp
  005a4	83 c4 08	 add	 esp, 8
  005a7	85 c0		 test	 eax, eax
  005a9	75 1b		 jne	 SHORT $LN46@getPetData

; 61   : 		lua_pushstring(L, pet[id].freeName);

  005ab	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  005b2	05 65 00 00 00	 add	 eax, OFFSET ?pet@@3PAUPET@@A+101
  005b7	50		 push	 eax
  005b8	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  005bb	51		 push	 ecx
  005bc	e8 00 00 00 00	 call	 _lua_pushstring
  005c1	83 c4 08	 add	 esp, 8
  005c4	eb 78		 jmp	 SHORT $LN50@getPetData
$LN46@getPetData:

; 62   : 	}else if(strcmp(attribute, "플래그 사용") == 0){     

  005c6	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CLALHJNL@?G?C?$LH?$KB?$LB?W?5?$LL?g?$LP?k?$AA@
  005cb	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  005ce	50		 push	 eax
  005cf	e8 00 00 00 00	 call	 _strcmp
  005d4	83 c4 08	 add	 esp, 8
  005d7	85 c0		 test	 eax, eax
  005d9	75 28		 jne	 SHORT $LN48@getPetData

; 63   : 		lua_pushnumber(L, pet[id].useFlag);

  005db	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  005e2	0f bf 88 76 00
	00 00		 movsx	 ecx, WORD PTR ?pet@@3PAUPET@@A[eax+118]
  005e9	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  005ed	83 ec 08	 sub	 esp, 8
  005f0	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  005f5	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  005f8	52		 push	 edx
  005f9	e8 00 00 00 00	 call	 _lua_pushnumber
  005fe	83 c4 0c	 add	 esp, 12			; 0000000cH
  00601	eb 3b		 jmp	 SHORT $LN50@getPetData
$LN48@getPetData:

; 64   : 	}else if(strcmp(attribute, "개명표식") == 0){     

  00603	68 00 00 00 00	 push	 OFFSET ??_C@_08PDDLFBOG@?$LA?$LD?$LI?m?G?$KF?$LN?D?$AA@
  00608	8b 45 e0	 mov	 eax, DWORD PTR _attribute$[ebp]
  0060b	50		 push	 eax
  0060c	e8 00 00 00 00	 call	 _strcmp
  00611	83 c4 08	 add	 esp, 8
  00614	85 c0		 test	 eax, eax
  00616	75 26		 jne	 SHORT $LN50@getPetData

; 65   : 		lua_pushnumber(L, pet[id].changeNameFlag);

  00618	69 45 f8 20 0b
	00 00		 imul	 eax, DWORD PTR _id$[ebp], 2848
  0061f	0f bf 88 78 00
	00 00		 movsx	 ecx, WORD PTR ?pet@@3PAUPET@@A[eax+120]
  00626	f2 0f 2a c1	 cvtsi2sd xmm0, ecx
  0062a	83 ec 08	 sub	 esp, 8
  0062d	f2 0f 11 04 24	 movsd	 QWORD PTR [esp], xmm0
  00632	8b 55 08	 mov	 edx, DWORD PTR _L$[ebp]
  00635	52		 push	 edx
  00636	e8 00 00 00 00	 call	 _lua_pushnumber
  0063b	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN50@getPetData:

; 66   : 	}     
; 67   : 	return 1;

  0063e	b8 01 00 00 00	 mov	 eax, 1

; 68   : }

  00643	52		 push	 edx
  00644	8b cd		 mov	 ecx, ebp
  00646	50		 push	 eax
  00647	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN54@getPetData
  0064d	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  00652	58		 pop	 eax
  00653	5a		 pop	 edx
  00654	5f		 pop	 edi
  00655	5e		 pop	 esi
  00656	5b		 pop	 ebx
  00657	81 c4 e8 00 00
	00		 add	 esp, 232		; 000000e8H
  0065d	3b ec		 cmp	 ebp, esp
  0065f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00664	8b e5		 mov	 esp, ebp
  00666	5d		 pop	 ebp
  00667	c3		 ret	 0
$LN54@getPetData:
  00668	01 00 00 00	 DD	 1
  0066c	00 00 00 00	 DD	 $LN53@getPetData
$LN53@getPetData:
  00670	ec ff ff ff	 DD	 -20			; ffffffecH
  00674	04 00 00 00	 DD	 4
  00678	00 00 00 00	 DD	 $LN52@getPetData
$LN52@getPetData:
  0067c	6c		 DB	 108			; 0000006cH
  0067d	00		 DB	 0
?getPetData@@YAHPAUlua_State@@@Z ENDP			; getPetData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\data.cpp
;	COMDAT ?luaopen_Data@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_Data@@YAHPAUlua_State@@@Z PROC			; luaopen_Data, COMDAT

; 76   : LUALIB_API int luaopen_Data (lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 77   : 	luaL_register(L, "chardata", Datalib);

  0001e	68 00 00 00 00	 push	 OFFSET ?Datalib@@3QBUluaL_Reg@@B
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_08NEALNNCE@chardata?$AA@
  00028	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 _luaL_register
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 78   : 	return 1;

  00034	b8 01 00 00 00	 mov	 eax, 1

; 79   : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?luaopen_Data@@YAHPAUlua_State@@@Z ENDP			; luaopen_Data
_TEXT	ENDS
END
