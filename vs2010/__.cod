; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Desktop\mm\Sell20191106\111222333\Sell20191106\client code\system\∆§∑Ù.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?count_∆§∑Ù@@3HA				; count_∆§∑Ù
PUBLIC	?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A			; data∆§∑Ù
PUBLIC	?pAct∆§∑Ù@@3PAUaction@@A			; pAct∆§∑Ù
_BSS	SEGMENT
_nPage	DD	01H DUP (?)
_nPageTotal DD	01H DUP (?)
?pAct∆§∑Ù@@3PAUaction@@A DD 01H DUP (?)			; pAct∆§∑Ù
?width@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA DW 01H DUP (?)	; `Init∆§∑Ù¥∞ø⁄'::`2'::width
	ALIGN	4

?height@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA DW 01H DUP (?)	; `Init∆§∑Ù¥∞ø⁄'::`2'::height
_BSS	ENDS
_DATA	SEGMENT
_FontPal DD	0ffffffH
	DD	0ffff00H
	DD	0ff00ffH
	DD	0ff0000H
	DD	0ffffH
	DD	0ff00H
	DD	0ffH
	DD	0a4a0a0H
	DD	0f0caa6H
	DD	0c0dcc0H
	DD	08cffH
	DD	0247fffH
?count_∆§∑Ù@@3HA DD 01H					; count_∆§∑Ù
_curSel	DD	0ffffffffH
?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A DD 0186a0H			; data∆§∑Ù
	DB	'100000', 00H
	ORG $+13
	DD	01H
	ORG $+16772
_DATA	ENDS
PUBLIC	?delAct∆§∑Ù@@YAXXZ				; delAct∆§∑Ù
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?pActMenu∆§∑Ù@@3PAUaction@@A:DWORD		; pActMenu∆§∑Ù
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\administrator\desktop\mm\sell20191106\111222333\sell20191106\client code\system\∆§∑Ù.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?delAct∆§∑Ù@@YAXXZ
_TEXT	SEGMENT
?delAct∆§∑Ù@@YAXXZ PROC					; delAct∆§∑Ù, COMDAT

; 30   : void delAct∆§∑Ù(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 31   : 	if (pActMenu∆§∑Ù){

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActMenu∆§∑Ù@@3PAUaction@@A, 0 ; pActMenu∆§∑Ù
  00025	74 18		 je	 SHORT $LN2@delAct

; 32   : 		DeathAction(pActMenu∆§∑Ù);

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActMenu∆§∑Ù@@3PAUaction@@A ; pActMenu∆§∑Ù
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00032	83 c4 04	 add	 esp, 4

; 33   : 		pActMenu∆§∑Ù = NULL;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActMenu∆§∑Ù@@3PAUaction@@A, 0 ; pActMenu∆§∑Ù
$LN2@delAct:

; 34   : 	}
; 35   : 
; 36   : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
?delAct∆§∑Ù@@YAXXZ ENDP					; delAct∆§∑Ù
_TEXT	ENDS
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@		; `string'
PUBLIC	??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@	; `string'
PUBLIC	??_C@_0BD@GBGDEBK@CANCELCURRENTPIFU?8?$AA@	; `string'
PUBLIC	??_C@_08CNJDPEKO@?H?$KB?O?$PL?F?$KE?$LH?t?$AA@	; `string'
PUBLIC	??_C@_0BD@HIJHNAGM@SETCURRENTPIFU?8?$CFd?8?$AA@	; `string'
PUBLIC	??_C@_0BJ@HMFJCHID@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?F?$KE?$LH?t?$KD?$KB?$AA@ ; `string'
PUBLIC	??_C@_08BGFFGFPG@?I?h?V?C?F?$KE?$LH?t?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Init∆§∑Ù¥∞ø⁄@@YAXXZ				; Init∆§∑Ù¥∞ø⁄
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	__imp__sprintf:PROC
EXTRN	?StockChatBufferLineExt@@YAXPADEHH@Z:PROC	; StockChatBufferLineExt
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBufferæ¯∂‘Œª÷√@@YAHHHEHH@Z:PROC	; StockDispBufferæ¯∂‘Œª÷√
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
_BSS	SEGMENT
	ALIGN	4

_button	DD	05H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@ DB '%d/%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@
CONST	SEGMENT
??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@ DB '  ', 0b9H, 0d8H, 0b1H, 0d5H
	DB	'  ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GBGDEBK@CANCELCURRENTPIFU?8?$AA@
CONST	SEGMENT
??_C@_0BD@GBGDEBK@CANCELCURRENTPIFU?8?$AA@ DB 'CANCELCURRENTPIFU''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08CNJDPEKO@?H?$KB?O?$PL?F?$KE?$LH?t?$AA@
CONST	SEGMENT
??_C@_08CNJDPEKO@?H?$KB?O?$PL?F?$KE?$LH?t?$AA@ DB 0c8H, 0a1H, 0cfH, 0fbH, 0c6H
	DB	0a4H, 0b7H, 0f4H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIJHNAGM@SETCURRENTPIFU?8?$CFd?8?$AA@
CONST	SEGMENT
??_C@_0BD@HIJHNAGM@SETCURRENTPIFU?8?$CFd?8?$AA@ DB 'SETCURRENTPIFU''%d''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HMFJCHID@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?F?$KE?$LH?t?$KD?$KB?$AA@
CONST	SEGMENT
??_C@_0BJ@HMFJCHID@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?F?$KE?$LH?t?$KD?$KB?$AA@ DB 0c4H
	DB	0e3H, 0c3H, 0bbH, 0d3H, 0d0H, 0c8H, 0a8H, 0cfH, 0deH, 0caH, 0b9H
	DB	0d3H, 0c3H, 0d5H, 0e2H, 0b8H, 0f6H, 0c6H, 0a4H, 0b7H, 0f4H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08BGFFGFPG@?I?h?V?C?F?$KE?$LH?t?$AA@
CONST	SEGMENT
??_C@_08BGFFGFPG@?I?h?V?C?F?$KE?$LH?t?$AA@ DB 0c9H, 0e8H, 0d6H, 0c3H, 0c6H
	DB	0a4H, 0b7H, 0f4H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Init∆§∑Ù¥∞ø⁄@@YAXXZ
_TEXT	SEGMENT
tv244 = -436						; size = 4
_y1$73347 = -236					; size = 4
_x1$73346 = -224					; size = 4
_buf$73345 = -212					; size = 30
_j$73341 = -172						; size = 4
_i$73340 = -160						; size = 4
_count_this_page$ = -148				; size = 4
_buf$ = -136						; size = 20
_count$ = -108						; size = 4
_buf$73323 = -96					; size = 50
_y$ = -36						; size = 4
_x$ = -24						; size = 4
_BmpNo$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Init∆§∑Ù¥∞ø⁄@@YAXXZ PROC				; Init∆§∑Ù¥∞ø⁄, COMDAT

; 38   : void Init∆§∑Ù¥∞ø⁄(){

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec b4 01 00
	00		 sub	 esp, 436		; 000001b4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 4c fe ff
	ff		 lea	 edi, DWORD PTR [ebp-436]
  00012	b9 6d 00 00 00	 mov	 ecx, 109		; 0000006dH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 39   : 	int BmpNo;
; 40   : 	static short width = 0, height = 0;
; 41   : 	if (width == 0){

  00028	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA
  0002f	85 c0		 test	 eax, eax
  00031	75 27		 jne	 SHORT $LN23@Init

; 42   : 		realGetNo(IMAGE_∆§∑ÙÕºµµ, (U4 *)&BmpNo);

  00033	8d 45 f4	 lea	 eax, DWORD PTR _BmpNo$[ebp]
  00036	50		 push	 eax
  00037	68 d4 c3 00 00	 push	 50132			; 0000c3d4H
  0003c	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo
  00041	83 c4 08	 add	 esp, 8

; 43   : 		realGetWH(BmpNo, &width, &height);			//ªÒ»°Õºµµ≥ﬂ¥Á

  00044	68 00 00 00 00	 push	 OFFSET ?height@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA
  00049	68 00 00 00 00	 push	 OFFSET ?width@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA
  0004e	8b 45 f4	 mov	 eax, DWORD PTR _BmpNo$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN23@Init:

; 44   : 	}
; 45   : 
; 46   : 	//∏˘æ›∑÷±Ê¬ ◊‘  ”¶◊Û…œΩ«x,y
; 47   : 	extern int DEF_APPSIZEX, DEF_APPSIZEY;
; 48   : 	int x = (DEF_APPSIZEX - width) / 2;

  0005a	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00067	2b c8		 sub	 ecx, eax
  00069	8b c1		 mov	 eax, ecx
  0006b	99		 cdq
  0006c	2b c2		 sub	 eax, edx
  0006e	d1 f8		 sar	 eax, 1
  00070	89 45 e8	 mov	 DWORD PTR _x$[ebp], eax

; 49   : 	int y = (DEF_APPSIZEY - height) / 2;

  00073	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?height@?1??Init∆§∑Ù¥∞ø⁄@@YAXXZ@4FA
  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00080	2b c8		 sub	 ecx, eax
  00082	8b c1		 mov	 eax, ecx
  00084	99		 cdq
  00085	2b c2		 sub	 eax, edx
  00087	d1 f8		 sar	 eax, 1
  00089	89 45 dc	 mov	 DWORD PTR _y$[ebp], eax

; 50   : 
; 51   : 	//ª≠Õº
; 52   : 	StockDispBufferæ¯∂‘Œª÷√(x, y, DISP_PRIO_MENU, IMAGE_∆§∑ÙÕºµµ, 1);

  0008c	6a 01		 push	 1
  0008e	68 d4 c3 00 00	 push	 50132			; 0000c3d4H
  00093	6a 68		 push	 104			; 00000068H
  00095	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00098	50		 push	 eax
  00099	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?StockDispBufferæ¯∂‘Œª÷√@@YAHHHEHH@Z ; StockDispBufferæ¯∂‘Œª÷√
  000a2	83 c4 14	 add	 esp, 20			; 00000014H

; 53   : 
; 54   : 	//◊Û”“º˝Õ∑
; 55   : 	button[0] = StockDispBuffer(x + 50, y + 310, DISP_PRIO_IME4, 55104, 2);

  000a5	6a 02		 push	 2
  000a7	68 40 d7 00 00	 push	 55104			; 0000d740H
  000ac	6a 6a		 push	 106			; 0000006aH
  000ae	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000b1	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000b6	50		 push	 eax
  000b7	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000ba	83 c1 32	 add	 ecx, 50			; 00000032H
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
  000c6	a3 00 00 00 00	 mov	 DWORD PTR _button, eax

; 56   : 	button[1] = StockDispBuffer(x + 110, y + 310, DISP_PRIO_IME4, 55105, 2);

  000cb	6a 02		 push	 2
  000cd	68 41 d7 00 00	 push	 55105			; 0000d741H
  000d2	6a 6a		 push	 106			; 0000006aH
  000d4	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000d7	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000dc	50		 push	 eax
  000dd	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000e0	83 c1 6e	 add	 ecx, 110		; 0000006eH
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000e9	83 c4 14	 add	 esp, 20			; 00000014H
  000ec	a3 04 00 00 00	 mov	 DWORD PTR _button+4, eax

; 57   : 
; 58   : 	//œ‘ æ∆§∑Ù
; 59   : 	StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_GREEN, "…Ë÷√∆§∑Ù", 0);

  000f1	6a 00		 push	 0
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_08BGFFGFPG@?I?h?V?C?F?$KE?$LH?t?$AA@
  000f8	6a 05		 push	 5
  000fa	6a 01		 push	 1
  000fc	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000ff	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00104	50		 push	 eax
  00105	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00108	83 c1 32	 add	 ecx, 50			; 00000032H
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00111	83 c4 18	 add	 esp, 24			; 00000018H

; 60   : 	if (MakeHitBox(x + 50 - 5, y + 340 - 5, x + 50 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  00114	6a 6a		 push	 106			; 0000006aH
  00116	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00119	05 68 01 00 00	 add	 eax, 360		; 00000168H
  0011e	50		 push	 eax
  0011f	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00122	83 c1 6e	 add	 ecx, 110		; 0000006eH
  00125	51		 push	 ecx
  00126	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  00129	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  0012f	52		 push	 edx
  00130	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00133	83 c0 2d	 add	 eax, 45			; 0000002dH
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0013c	83 c4 14	 add	 esp, 20			; 00000014H
  0013f	83 f8 01	 cmp	 eax, 1
  00142	75 75		 jne	 SHORT $LN22@Init

; 61   : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  00144	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00149	83 e0 01	 and	 eax, 1
  0014c	74 6b		 je	 SHORT $LN22@Init

; 62   : 			if (data∆§∑Ù[curSel].time == 0){

  0014e	a1 00 00 00 00	 mov	 eax, DWORD PTR _curSel
  00153	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00156	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A[eax+24], 0
  0015d	75 18		 jne	 SHORT $LN20@Init

; 63   : 				StockChatBufferLineExt("ƒ„√ª”–»®œﬁ π”√’‚∏ˆ∆§∑Ù£°", FONT_PAL_RED, 0);

  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	6a 06		 push	 6
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@HMFJCHID@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?F?$KE?$LH?t?$KD?$KB?$AA@
  0016a	e8 00 00 00 00	 call	 ?StockChatBufferLineExt@@YAXPADEHH@Z ; StockChatBufferLineExt
  0016f	83 c4 10	 add	 esp, 16			; 00000010H

; 64   : 				return;

  00172	e9 05 04 00 00	 jmp	 $LN24@Init
$LN20@Init:

; 65   : 			}
; 66   : 			void LSSPROTO_203_SEND(int fd, char* data);
; 67   : 			extern unsigned int sockfd;
; 68   : 			char buf[50];
; 69   : 			sprintf(buf, "SETCURRENTPIFU'%d'", data∆§∑Ù[curSel].bmpNO);

  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR _curSel
  0017c	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0017f	8b f4		 mov	 esi, esp
  00181	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A[eax]
  00187	51		 push	 ecx
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HIJHNAGM@SETCURRENTPIFU?8?$CFd?8?$AA@
  0018d	8d 55 a0	 lea	 edx, DWORD PTR _buf$73323[ebp]
  00190	52		 push	 edx
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  00197	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019a	3b f4		 cmp	 esi, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 70   : 			LSSPROTO_203_SEND(sockfd, buf);

  001a1	8d 45 a0	 lea	 eax, DWORD PTR _buf$73323[ebp]
  001a4	50		 push	 eax
  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?sockfd@@3IA ; sockfd
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  001b1	83 c4 08	 add	 esp, 8

; 71   : 			return;

  001b4	e9 c3 03 00 00	 jmp	 $LN24@Init
$LN22@Init:

; 72   : 		}
; 73   : 	}
; 74   : 
; 75   : 	//»°œ˚∆§∑Ù
; 76   : 	StockFontBuffer(x + 200, y + 340, FONT_PRIO_FRONT, FONT_PAL_GREEN, "»°œ˚∆§∑Ù", 0);

  001b9	6a 00		 push	 0
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_08CNJDPEKO@?H?$KB?O?$PL?F?$KE?$LH?t?$AA@
  001c0	6a 05		 push	 5
  001c2	6a 01		 push	 1
  001c4	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001c7	05 54 01 00 00	 add	 eax, 340		; 00000154H
  001cc	50		 push	 eax
  001cd	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001d0	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  001d6	51		 push	 ecx
  001d7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001dc	83 c4 18	 add	 esp, 24			; 00000018H

; 77   : 	if (MakeHitBox(x + 200 - 5, y + 340 - 5, x + 200 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  001df	6a 6a		 push	 106			; 0000006aH
  001e1	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001e4	05 68 01 00 00	 add	 eax, 360		; 00000168H
  001e9	50		 push	 eax
  001ea	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001ed	81 c1 04 01 00
	00		 add	 ecx, 260		; 00000104H
  001f3	51		 push	 ecx
  001f4	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  001f7	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  001fd	52		 push	 edx
  001fe	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00201	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0020c	83 c4 14	 add	 esp, 20			; 00000014H
  0020f	83 f8 01	 cmp	 eax, 1
  00212	75 22		 jne	 SHORT $LN19@Init

; 78   : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  00214	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00219	83 e0 01	 and	 eax, 1
  0021c	74 18		 je	 SHORT $LN19@Init

; 79   : 			void LSSPROTO_203_SEND(int fd, char* data);
; 80   : 			extern unsigned int sockfd;
; 81   : 			LSSPROTO_203_SEND(sockfd, "CANCELCURRENTPIFU'");

  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GBGDEBK@CANCELCURRENTPIFU?8?$AA@
  00223	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sockfd@@3IA ; sockfd
  00228	50		 push	 eax
  00229	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  0022e	83 c4 08	 add	 esp, 8

; 82   : 			return;

  00231	e9 46 03 00 00	 jmp	 $LN24@Init
$LN19@Init:

; 83   : 		}
; 84   : 	}
; 85   : 
; 86   : 	//πÿ±’
; 87   : 	StockFontBuffer(x + 330, y + 340, FONT_PRIO_FRONT, FONT_PAL_GREEN, "  πÿ±’  ", 0);

  00236	6a 00		 push	 0
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@
  0023d	6a 05		 push	 5
  0023f	6a 01		 push	 1
  00241	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00244	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00249	50		 push	 eax
  0024a	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0024d	81 c1 4a 01 00
	00		 add	 ecx, 330		; 0000014aH
  00253	51		 push	 ecx
  00254	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00259	83 c4 18	 add	 esp, 24			; 00000018H

; 88   : 	if (MakeHitBox(x + 330 - 5, y + 340 - 5, x + 330 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE){

  0025c	6a 6a		 push	 106			; 0000006aH
  0025e	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00261	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00266	50		 push	 eax
  00267	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0026a	81 c1 86 01 00
	00		 add	 ecx, 390		; 00000186H
  00270	51		 push	 ecx
  00271	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  00274	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  0027a	52		 push	 edx
  0027b	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  0027e	05 45 01 00 00	 add	 eax, 325		; 00000145H
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00289	83 c4 14	 add	 esp, 20			; 00000014H
  0028c	83 f8 01	 cmp	 eax, 1
  0028f	75 1e		 jne	 SHORT $LN17@Init

; 89   : 		if (mouse.onceState & MOUSE_LEFT_CRICK){

  00291	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00296	83 e0 01	 and	 eax, 1
  00299	74 14		 je	 SHORT $LN17@Init

; 90   : 			MenuToggleFlag &= ~JOY_CTRL_S;

  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MenuToggleFlag@@3IA ; MenuToggleFlag
  002a0	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  002a5	a3 00 00 00 00	 mov	 DWORD PTR ?MenuToggleFlag@@3IA, eax ; MenuToggleFlag

; 91   : 			return;

  002aa	e9 cd 02 00 00	 jmp	 $LN24@Init
$LN17@Init:

; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	//»°∆§∑Ù∏ˆ ˝
; 96   : 	int count = count_∆§∑Ù;

  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?count_∆§∑Ù@@3HA ; count_∆§∑Ù
  002b4	89 45 94	 mov	 DWORD PTR _count$[ebp], eax

; 97   : 	
; 98   : 	//◊‹“≥√Ê ˝
; 99   : 	nPageTotal = (count + 13 - 1) / 13; 

  002b7	8b 45 94	 mov	 eax, DWORD PTR _count$[ebp]
  002ba	83 c0 0c	 add	 eax, 12			; 0000000cH
  002bd	99		 cdq
  002be	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  002c3	f7 f9		 idiv	 ecx
  002c5	a3 00 00 00 00	 mov	 DWORD PTR _nPageTotal, eax

; 100  : 
; 101  : 	//œ‘ æ “≥√Ê/◊‹“≥√Ê
; 102  : 	char buf[20];
; 103  : 	sprintf(buf, "%d/%d", nPage + 1, nPageTotal);

  002ca	8b f4		 mov	 esi, esp
  002cc	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  002d1	50		 push	 eax
  002d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _nPage
  002d8	83 c1 01	 add	 ecx, 1
  002db	51		 push	 ecx
  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
  002e1	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _buf$[ebp]
  002e7	52		 push	 edx
  002e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  002ee	83 c4 10	 add	 esp, 16			; 00000010H
  002f1	3b f4		 cmp	 esi, esp
  002f3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 104  : 	StockFontBuffer(x + 65, y + 295, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);

  002f8	6a 00		 push	 0
  002fa	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00300	50		 push	 eax
  00301	6a 05		 push	 5
  00303	6a 01		 push	 1
  00305	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  00308	81 c1 27 01 00
	00		 add	 ecx, 295		; 00000127H
  0030e	51		 push	 ecx
  0030f	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  00312	83 c2 41	 add	 edx, 65			; 00000041H
  00315	52		 push	 edx
  00316	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0031b	83 c4 18	 add	 esp, 24			; 00000018H

; 105  : 
; 106  : 
; 107  : 	//»°µ±«∞“≥œ‘ æµƒ ˝¡ø
; 108  : 	int count_this_page = count - nPage * 13;

  0031e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  00323	6b c0 0d	 imul	 eax, 13			; 0000000dH
  00326	8b 4d 94	 mov	 ecx, DWORD PTR _count$[ebp]
  00329	2b c8		 sub	 ecx, eax
  0032b	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], ecx

; 109  : 	count_this_page = (count_this_page >= 13) ? 13 : count_this_page % 13;

  00331	83 bd 6c ff ff
	ff 0d		 cmp	 DWORD PTR _count_this_page$[ebp], 13 ; 0000000dH
  00338	7c 0c		 jl	 SHORT $LN26@Init
  0033a	c7 85 4c fe ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv244[ebp], 13 ; 0000000dH
  00344	eb 14		 jmp	 SHORT $LN27@Init
$LN26@Init:
  00346	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _count_this_page$[ebp]
  0034c	99		 cdq
  0034d	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00352	f7 f9		 idiv	 ecx
  00354	89 95 4c fe ff
	ff		 mov	 DWORD PTR tv244[ebp], edx
$LN27@Init:
  0035a	8b 95 4c fe ff
	ff		 mov	 edx, DWORD PTR tv244[ebp]
  00360	89 95 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], edx

; 110  : 
; 111  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  00366	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  0036b	6b c0 0d	 imul	 eax, 13			; 0000000dH
  0036e	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$73340[ebp], eax
  00374	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$73341[ebp], 0
  0037e	eb 1e		 jmp	 SHORT $LN15@Init
$LN14@Init:
  00380	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73340[ebp]
  00386	83 c0 01	 add	 eax, 1
  00389	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$73340[ebp], eax
  0038f	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _j$73341[ebp]
  00395	83 c1 01	 add	 ecx, 1
  00398	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _j$73341[ebp], ecx
$LN15@Init:
  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  003a3	6b c0 0d	 imul	 eax, 13			; 0000000dH
  003a6	03 85 6c ff ff
	ff		 add	 eax, DWORD PTR _count_this_page$[ebp]
  003ac	39 85 60 ff ff
	ff		 cmp	 DWORD PTR _i$73340[ebp], eax
  003b2	0f 8d 5a 01 00
	00		 jge	 $LN13@Init

; 112  : 	{
; 113  : 		char buf[30];
; 114  : 
; 115  : 		//Œƒ◊÷æ”÷–
; 116  : 		CenteringStr(data∆§∑Ù[i].name, buf, 19);

  003b8	6a 13		 push	 19			; 00000013H
  003ba	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73345[ebp]
  003c0	50		 push	 eax
  003c1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _i$73340[ebp]
  003c7	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  003ca	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A+4
  003d0	51		 push	 ecx
  003d1	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  003d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 117  : 
; 118  : 		//…Ë∂®Œƒ◊÷◊Û…œΩ«Œª÷√
; 119  : 		int x1 = x + 13;

  003d9	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  003dc	83 c0 0d	 add	 eax, 13			; 0000000dH
  003df	89 85 20 ff ff
	ff		 mov	 DWORD PTR _x1$73346[ebp], eax

; 120  : 		int y1 = y + 30 + j * 20;

  003e5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _j$73341[ebp]
  003eb	6b c0 14	 imul	 eax, 20			; 00000014H
  003ee	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  003f1	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  003f5	89 95 14 ff ff
	ff		 mov	 DWORD PTR _y1$73347[ebp], edx

; 121  : 
; 122  : 		// ‰≥ˆŒƒ◊÷
; 123  : 		if (data∆§∑Ù[i].time != 0)

  003fb	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73340[ebp]
  00401	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00404	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A[eax+24], 0
  0040b	74 58		 je	 SHORT $LN12@Init

; 124  : 			if (i == curSel)

  0040d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73340[ebp]
  00413	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _curSel
  00419	75 25		 jne	 SHORT $LN11@Init

; 125  : 			{
; 126  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_RED, buf, 0);	//∫Ï…´

  0041b	6a 00		 push	 0
  0041d	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73345[ebp]
  00423	50		 push	 eax
  00424	6a 06		 push	 6
  00426	6a 01		 push	 1
  00428	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73347[ebp]
  0042e	51		 push	 ecx
  0042f	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73346[ebp]
  00435	52		 push	 edx
  00436	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0043b	83 c4 18	 add	 esp, 24			; 00000018H

; 127  : 			}
; 128  : 			else

  0043e	eb 23		 jmp	 SHORT $LN10@Init
$LN11@Init:

; 129  : 			{
; 130  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);	//¬Ã…´

  00440	6a 00		 push	 0
  00442	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73345[ebp]
  00448	50		 push	 eax
  00449	6a 05		 push	 5
  0044b	6a 01		 push	 1
  0044d	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73347[ebp]
  00453	51		 push	 ecx
  00454	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73346[ebp]
  0045a	52		 push	 edx
  0045b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00460	83 c4 18	 add	 esp, 24			; 00000018H
$LN10@Init:

; 131  : 			}
; 132  : 		else

  00463	eb 23		 jmp	 SHORT $LN9@Init
$LN12@Init:

; 133  : 			StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GRAY, buf, 0);	//ª“…´

  00465	6a 00		 push	 0
  00467	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73345[ebp]
  0046d	50		 push	 eax
  0046e	6a 07		 push	 7
  00470	6a 01		 push	 1
  00472	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73347[ebp]
  00478	51		 push	 ecx
  00479	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73346[ebp]
  0047f	52		 push	 edx
  00480	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00485	83 c4 18	 add	 esp, 24			; 00000018H
$LN9@Init:

; 134  : 
; 135  : 																				//ª≠¬ÃøÚøÚ≤¢≈–∂œµ„ª˜
; 136  : 		if (MakeHitBox(x1, y1 - 2, x1 + 130, y1 + 17, DISP_PRIO_IME4) == TRUE)

  00488	6a 6a		 push	 106			; 0000006aH
  0048a	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _y1$73347[ebp]
  00490	83 c0 11	 add	 eax, 17			; 00000011H
  00493	50		 push	 eax
  00494	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _x1$73346[ebp]
  0049a	81 c1 82 00 00
	00		 add	 ecx, 130		; 00000082H
  004a0	51		 push	 ecx
  004a1	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR _y1$73347[ebp]
  004a7	83 ea 02	 sub	 edx, 2
  004aa	52		 push	 edx
  004ab	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _x1$73346[ebp]
  004b1	50		 push	 eax
  004b2	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  004b7	83 c4 14	 add	 esp, 20			; 00000014H
  004ba	83 f8 01	 cmp	 eax, 1
  004bd	75 4e		 jne	 SHORT $LN8@Init

; 137  : 		{
; 138  : 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  004bf	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  004c4	83 e0 01	 and	 eax, 1
  004c7	74 44		 je	 SHORT $LN8@Init

; 139  : 			{
; 140  : 
; 141  : 				//±£¥Êµ„ª˜µƒ±‡∫≈
; 142  : 				curSel = i;

  004c9	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73340[ebp]
  004cf	a3 00 00 00 00	 mov	 DWORD PTR _curSel, eax

; 143  : 
; 144  : 				//…æ≥˝‘≠”–∂Øª≠
; 145  : 				delAct∆§∑Ù();

  004d4	e8 00 00 00 00	 call	 ?delAct∆§∑Ù@@YAXXZ	; delAct∆§∑Ù

; 146  : 
; 147  : 				pActMenu∆§∑Ù = MakeAnimDisp(x + 280, y + 184, data∆§∑Ù[i].bmpNO, 0);

  004d9	6a 00		 push	 0
  004db	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73340[ebp]
  004e1	6b c0 1c	 imul	 eax, 28			; 0000001cH
  004e4	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data∆§∑Ù@@3PAUπ‚ª∑STRUCT@@A[eax]
  004ea	51		 push	 ecx
  004eb	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  004ee	81 c2 b8 00 00
	00		 add	 edx, 184		; 000000b8H
  004f4	52		 push	 edx
  004f5	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  004f8	05 18 01 00 00	 add	 eax, 280		; 00000118H
  004fd	50		 push	 eax
  004fe	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00503	83 c4 10	 add	 esp, 16			; 00000010H
  00506	a3 00 00 00 00	 mov	 DWORD PTR ?pActMenu∆§∑Ù@@3PAUaction@@A, eax ; pActMenu∆§∑Ù

; 148  : 
; 149  : 				return;

  0050b	eb 6f		 jmp	 SHORT $LN24@Init
$LN8@Init:

; 150  : 			}
; 151  : 		}
; 152  : 	}

  0050d	e9 6e fe ff ff	 jmp	 $LN14@Init
$LN13@Init:

; 153  : 
; 154  : 	if (mouse.onceState & MOUSE_LEFT_CRICK)

  00512	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00517	83 e0 01	 and	 eax, 1
  0051a	74 60		 je	 SHORT $LN24@Init

; 155  : 	{
; 156  : 
; 157  : 		if (HitDispNo == button[0]) //◊Ûº˝Õ∑

  0051c	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00521	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _button
  00527	75 1b		 jne	 SHORT $LN5@Init

; 158  : 		{
; 159  : 			nPage--;

  00529	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  0052e	83 e8 01	 sub	 eax, 1
  00531	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax

; 160  : 			if (nPage < 0)nPage = 0;

  00536	79 0a		 jns	 SHORT $LN4@Init
  00538	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _nPage, 0
$LN4@Init:

; 161  : 		}

  00542	eb 37		 jmp	 SHORT $LN3@Init
$LN5@Init:

; 162  : 		else if (HitDispNo == button[1]) //”“º˝Õ∑

  00544	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00549	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR _button+4
  0054f	75 2a		 jne	 SHORT $LN3@Init

; 163  : 		{
; 164  : 			nPage++;

  00551	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  00556	83 c0 01	 add	 eax, 1
  00559	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax

; 165  : 			if (nPage >= nPageTotal - 1) nPage = nPageTotal - 1;

  0055e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  00563	83 e8 01	 sub	 eax, 1
  00566	39 05 00 00 00
	00		 cmp	 DWORD PTR _nPage, eax
  0056c	7c 0d		 jl	 SHORT $LN3@Init
  0056e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  00573	83 e8 01	 sub	 eax, 1
  00576	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax
$LN3@Init:

; 166  : 		}
; 167  : 		__asm nop;

  0057b	90		 npad	 1
$LN24@Init:

; 168  : 	}
; 169  : 
; 170  : }

  0057c	52		 push	 edx
  0057d	8b cd		 mov	 ecx, ebp
  0057f	50		 push	 eax
  00580	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN33@Init
  00586	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  0058b	58		 pop	 eax
  0058c	5a		 pop	 edx
  0058d	5f		 pop	 edi
  0058e	5e		 pop	 esi
  0058f	5b		 pop	 ebx
  00590	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00593	33 cd		 xor	 ecx, ebp
  00595	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0059a	81 c4 b4 01 00
	00		 add	 esp, 436		; 000001b4H
  005a0	3b ec		 cmp	 ebp, esp
  005a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a7	8b e5		 mov	 esp, ebp
  005a9	5d		 pop	 ebp
  005aa	c3		 ret	 0
  005ab	90		 npad	 1
$LN33@Init:
  005ac	04 00 00 00	 DD	 4
  005b0	00 00 00 00	 DD	 $LN32@Init
$LN32@Init:
  005b4	f4 ff ff ff	 DD	 -12			; fffffff4H
  005b8	04 00 00 00	 DD	 4
  005bc	00 00 00 00	 DD	 $LN28@Init
  005c0	a0 ff ff ff	 DD	 -96			; ffffffa0H
  005c4	32 00 00 00	 DD	 50			; 00000032H
  005c8	00 00 00 00	 DD	 $LN29@Init
  005cc	78 ff ff ff	 DD	 -136			; ffffff78H
  005d0	14 00 00 00	 DD	 20			; 00000014H
  005d4	00 00 00 00	 DD	 $LN30@Init
  005d8	2c ff ff ff	 DD	 -212			; ffffff2cH
  005dc	1e 00 00 00	 DD	 30			; 0000001eH
  005e0	00 00 00 00	 DD	 $LN31@Init
$LN31@Init:
  005e4	62		 DB	 98			; 00000062H
  005e5	75		 DB	 117			; 00000075H
  005e6	66		 DB	 102			; 00000066H
  005e7	00		 DB	 0
$LN30@Init:
  005e8	62		 DB	 98			; 00000062H
  005e9	75		 DB	 117			; 00000075H
  005ea	66		 DB	 102			; 00000066H
  005eb	00		 DB	 0
$LN29@Init:
  005ec	62		 DB	 98			; 00000062H
  005ed	75		 DB	 117			; 00000075H
  005ee	66		 DB	 102			; 00000066H
  005ef	00		 DB	 0
$LN28@Init:
  005f0	42		 DB	 66			; 00000042H
  005f1	6d		 DB	 109			; 0000006dH
  005f2	70		 DB	 112			; 00000070H
  005f3	4e		 DB	 78			; 0000004eH
  005f4	6f		 DB	 111			; 0000006fH
  005f5	00		 DB	 0
?Init∆§∑Ù¥∞ø⁄@@YAXXZ ENDP				; Init∆§∑Ù¥∞ø⁄
_TEXT	ENDS
END
