; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Administrator\Desktop\????? ??\????? ??\Client Source Code\mylua\lssproto.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07EKMDLNDL@windows?$AA@			; `string'
;	COMDAT ??_C@_07EKMDLNDL@windows?$AA@
CONST	SEGMENT
??_C@_07EKMDLNDL@windows?$AA@ DB 'windows', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
?Lssprotolib@@3QBUluaL_Reg@@B DD FLAT:??_C@_07EKMDLNDL@windows?$AA@ ; Lssprotolib
	DD	FLAT:?windows_send@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
PUBLIC	?luaopen_Lssproto@@YAHPAUlua_State@@@Z		; luaopen_Lssproto
PUBLIC	??_C@_08GBGCLPL@lssproto?$AA@			; `string'
EXTRN	_luaL_register:PROC
EXTRN	_luaL_checklstring:PROC
EXTRN	_luaL_checkinteger:PROC
EXTRN	?lssproto_WN_send@@YAXHHHHHHPAD@Z:PROC		; lssproto_WN_send
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?nowGx@@3HA:DWORD				; nowGx
EXTRN	?nowGy@@3HA:DWORD				; nowGy
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_08GBGCLPL@lssproto?$AA@
CONST	SEGMENT
??_C@_08GBGCLPL@lssproto?$AA@ DB 'lssproto', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\lssproto.cpp
;	COMDAT ?windows_send@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_data$ = -56						; size = 4
_btn$ = -44						; size = 4
_idWN$ = -32						; size = 4
_indexWN$ = -20						; size = 4
_l$ = -8						; size = 4
_L$ = 8							; size = 4
?windows_send@@YAHPAUlua_State@@@Z PROC			; windows_send, COMDAT

; 14   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 15   : 	size_t l;
; 16   : 	const int indexWN = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 ec	 mov	 DWORD PTR _indexWN$[ebp], eax

; 17   : 	const int idWN = luaL_checkint(L, 2);

  0002f	6a 02		 push	 2
  00031	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _luaL_checkinteger
  0003a	83 c4 08	 add	 esp, 8
  0003d	89 45 e0	 mov	 DWORD PTR _idWN$[ebp], eax

; 18   : 	const int btn = luaL_checkint(L, 3);

  00040	6a 03		 push	 3
  00042	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 _luaL_checkinteger
  0004b	83 c4 08	 add	 esp, 8
  0004e	89 45 d4	 mov	 DWORD PTR _btn$[ebp], eax

; 19   : 	const char *data=luaL_checklstring(L, 4, &l);

  00051	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00054	50		 push	 eax
  00055	6a 04		 push	 4
  00057	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 _luaL_checklstring
  00060	83 c4 0c	 add	 esp, 12			; 0000000cH
  00063	89 45 c8	 mov	 DWORD PTR _data$[ebp], eax

; 20   : 	lssproto_WN_send(sockfd,nowGx,nowGy,indexWN, idWN, btn, (char *)data) ;

  00066	8b 45 c8	 mov	 eax, DWORD PTR _data$[ebp]
  00069	50		 push	 eax
  0006a	8b 4d d4	 mov	 ecx, DWORD PTR _btn$[ebp]
  0006d	51		 push	 ecx
  0006e	8b 55 e0	 mov	 edx, DWORD PTR _idWN$[ebp]
  00071	52		 push	 edx
  00072	8b 45 ec	 mov	 eax, DWORD PTR _indexWN$[ebp]
  00075	50		 push	 eax
  00076	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nowGy@@3HA ; nowGy
  0007c	51		 push	 ecx
  0007d	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?nowGx@@3HA ; nowGx
  00083	52		 push	 edx
  00084	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sockfd@@3IA ; sockfd
  00089	50		 push	 eax
  0008a	e8 00 00 00 00	 call	 ?lssproto_WN_send@@YAXHHHHHHPAD@Z ; lssproto_WN_send
  0008f	83 c4 1c	 add	 esp, 28			; 0000001cH

; 21   : 	return 1;

  00092	b8 01 00 00 00	 mov	 eax, 1

; 22   : }

  00097	52		 push	 edx
  00098	8b cd		 mov	 ecx, ebp
  0009a	50		 push	 eax
  0009b	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@windows_se
  000a1	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000a6	58		 pop	 eax
  000a7	5a		 pop	 edx
  000a8	5f		 pop	 edi
  000a9	5e		 pop	 esi
  000aa	5b		 pop	 ebx
  000ab	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000b1	3b ec		 cmp	 ebp, esp
  000b3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000b8	8b e5		 mov	 esp, ebp
  000ba	5d		 pop	 ebp
  000bb	c3		 ret	 0
$LN5@windows_se:
  000bc	01 00 00 00	 DD	 1
  000c0	00 00 00 00	 DD	 $LN4@windows_se
$LN4@windows_se:
  000c4	f8 ff ff ff	 DD	 -8			; fffffff8H
  000c8	04 00 00 00	 DD	 4
  000cc	00 00 00 00	 DD	 $LN3@windows_se
$LN3@windows_se:
  000d0	6c		 DB	 108			; 0000006cH
  000d1	00		 DB	 0
?windows_send@@YAHPAUlua_State@@@Z ENDP			; windows_send
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\mylua\lssproto.cpp
;	COMDAT ?luaopen_Lssproto@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_Lssproto@@YAHPAUlua_State@@@Z PROC		; luaopen_Lssproto, COMDAT

; 31   : LUALIB_API int luaopen_Lssproto (lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 32   : 	luaL_register(L, "lssproto", Lssprotolib);

  0001e	68 00 00 00 00	 push	 OFFSET ?Lssprotolib@@3QBUluaL_Reg@@B
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_08GBGCLPL@lssproto?$AA@
  00028	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 _luaL_register
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 33   : 	return 1;

  00034	b8 01 00 00 00	 mov	 eax, 1

; 34   : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?luaopen_Lssproto@@YAHPAUlua_State@@@Z ENDP		; luaopen_Lssproto
_TEXT	ENDS
END
