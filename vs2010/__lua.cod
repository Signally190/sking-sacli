; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Desktop\mm\Sell20191106\111222333\Sell20191106\client code\mylua\光环lua.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07MOIAJPBM@SetList?$AA@			; `string'
PUBLIC	??_C@_08BFFAFOCN@SetCount?$AA@			; `string'
CONST	SEGMENT
_GuangHuanFunc DD FLAT:??_C@_08BFFAFOCN@SetCount?$AA@
	DD	FLAT:?SetCount@@YAHPAUlua_State@@@Z
	DD	FLAT:??_C@_07MOIAJPBM@SetList?$AA@
	DD	FLAT:?SetList@@YAHPAUlua_State@@@Z
	DD	00H
	DD	00H
CONST	ENDS
;	COMDAT ??_C@_07MOIAJPBM@SetList?$AA@
CONST	SEGMENT
??_C@_07MOIAJPBM@SetList?$AA@ DB 'SetList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BFFAFOCN@SetCount?$AA@
CONST	SEGMENT
??_C@_08BFFAFOCN@SetCount?$AA@ DB 'SetCount', 00H	; `string'
CONST	ENDS
EXTRN	?count_光环@@3HA:DWORD				; count_光环
EXTRN	_luaL_checkinteger:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\administrator\desktop\mm\sell20191106\111222333\sell20191106\client code\mylua\光环lua.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?SetCount@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_num$ = -8						; size = 4
_L$ = 8							; size = 4
?SetCount@@YAHPAUlua_State@@@Z PROC			; SetCount, COMDAT

; 17   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 18   : 	const int num = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 f8	 mov	 DWORD PTR _num$[ebp], eax

; 19   : 	count_光环 = num;

  0002f	8b 45 f8	 mov	 eax, DWORD PTR _num$[ebp]
  00032	a3 00 00 00 00	 mov	 DWORD PTR ?count_光环@@3HA, eax ; count_光环

; 20   : 	return 1;

  00037	b8 01 00 00 00	 mov	 eax, 1

; 21   : }

  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5b		 pop	 ebx
  0003f	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00045	3b ec		 cmp	 ebp, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	8b e5		 mov	 esp, ebp
  0004e	5d		 pop	 ebp
  0004f	c3		 ret	 0
?SetCount@@YAHPAUlua_State@@@Z ENDP			; SetCount
_TEXT	ENDS
EXTRN	_strcpy:PROC
EXTRN	?data光环@@3PAU光环STRUCT@@A:BYTE		; data光环
EXTRN	_luaL_checklstring:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetList@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_time$ = -56						; size = 4
_name$ = -44						; size = 4
_bmp$ = -32						; size = 4
_id$ = -20						; size = 4
_l$ = -8						; size = 4
_L$ = 8							; size = 4
?SetList@@YAHPAUlua_State@@@Z PROC			; SetList, COMDAT

; 24   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 25   : 	size_t l;
; 26   : 	const int id = luaL_checkint(L, 1);

  0001e	6a 01		 push	 1
  00020	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 _luaL_checkinteger
  00029	83 c4 08	 add	 esp, 8
  0002c	89 45 ec	 mov	 DWORD PTR _id$[ebp], eax

; 27   : 	const int bmp = luaL_checkint(L, 2);

  0002f	6a 02		 push	 2
  00031	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  00034	50		 push	 eax
  00035	e8 00 00 00 00	 call	 _luaL_checkinteger
  0003a	83 c4 08	 add	 esp, 8
  0003d	89 45 e0	 mov	 DWORD PTR _bmp$[ebp], eax

; 28   : 	const char * name = luaL_checklstring(L, 3, &l);

  00040	8d 45 f8	 lea	 eax, DWORD PTR _l$[ebp]
  00043	50		 push	 eax
  00044	6a 03		 push	 3
  00046	8b 4d 08	 mov	 ecx, DWORD PTR _L$[ebp]
  00049	51		 push	 ecx
  0004a	e8 00 00 00 00	 call	 _luaL_checklstring
  0004f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00052	89 45 d4	 mov	 DWORD PTR _name$[ebp], eax

; 29   : 	const int time = luaL_checkint(L, 4);

  00055	6a 04		 push	 4
  00057	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0005a	50		 push	 eax
  0005b	e8 00 00 00 00	 call	 _luaL_checkinteger
  00060	83 c4 08	 add	 esp, 8
  00063	89 45 c8	 mov	 DWORD PTR _time$[ebp], eax

; 30   : 
; 31   : 
; 32   : 	data光环[id].bmpNO = bmp;

  00066	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  00069	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0006c	8b 4d e0	 mov	 ecx, DWORD PTR _bmp$[ebp]
  0006f	89 88 00 00 00
	00		 mov	 DWORD PTR ?data光环@@3PAU光环STRUCT@@A[eax], ecx

; 33   : 	strcpy(data光环[id].name, name);

  00075	8b 45 d4	 mov	 eax, DWORD PTR _name$[ebp]
  00078	50		 push	 eax
  00079	8b 4d ec	 mov	 ecx, DWORD PTR _id$[ebp]
  0007c	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  0007f	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?data光环@@3PAU光环STRUCT@@A+4
  00085	51		 push	 ecx
  00086	e8 00 00 00 00	 call	 _strcpy
  0008b	83 c4 08	 add	 esp, 8

; 34   : 	data光环[id].time = time;

  0008e	8b 45 ec	 mov	 eax, DWORD PTR _id$[ebp]
  00091	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00094	8b 4d c8	 mov	 ecx, DWORD PTR _time$[ebp]
  00097	89 88 18 00 00
	00		 mov	 DWORD PTR ?data光环@@3PAU光环STRUCT@@A[eax+24], ecx

; 35   : 	return 1;

  0009d	b8 01 00 00 00	 mov	 eax, 1

; 36   : }

  000a2	52		 push	 edx
  000a3	8b cd		 mov	 ecx, ebp
  000a5	50		 push	 eax
  000a6	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN5@SetList
  000ac	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  000b1	58		 pop	 eax
  000b2	5a		 pop	 edx
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi
  000b5	5b		 pop	 ebx
  000b6	81 c4 fc 00 00
	00		 add	 esp, 252		; 000000fcH
  000bc	3b ec		 cmp	 ebp, esp
  000be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c3	8b e5		 mov	 esp, ebp
  000c5	5d		 pop	 ebp
  000c6	c3		 ret	 0
  000c7	90		 npad	 1
$LN5@SetList:
  000c8	01 00 00 00	 DD	 1
  000cc	00 00 00 00	 DD	 $LN4@SetList
$LN4@SetList:
  000d0	f8 ff ff ff	 DD	 -8			; fffffff8H
  000d4	04 00 00 00	 DD	 4
  000d8	00 00 00 00	 DD	 $LN3@SetList
$LN3@SetList:
  000dc	6c		 DB	 108			; 0000006cH
  000dd	00		 DB	 0
?SetList@@YAHPAUlua_State@@@Z ENDP			; SetList
_TEXT	ENDS
PUBLIC	??_C@_09IOBHABKN@GuangHuan?$AA@			; `string'
PUBLIC	?luaopen_GuangHuanList@@YAHPAUlua_State@@@Z	; luaopen_GuangHuanList
EXTRN	_luaL_register:PROC
;	COMDAT ??_C@_09IOBHABKN@GuangHuan?$AA@
CONST	SEGMENT
??_C@_09IOBHABKN@GuangHuan?$AA@ DB 'GuangHuan', 00H	; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?luaopen_GuangHuanList@@YAHPAUlua_State@@@Z
_TEXT	SEGMENT
_L$ = 8							; size = 4
?luaopen_GuangHuanList@@YAHPAUlua_State@@@Z PROC	; luaopen_GuangHuanList, COMDAT

; 45   : LUALIB_API int luaopen_GuangHuanList(lua_State *L) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 46   : 	luaL_register(L, "GuangHuan", GuangHuanFunc);

  0001e	68 00 00 00 00	 push	 OFFSET _GuangHuanFunc
  00023	68 00 00 00 00	 push	 OFFSET ??_C@_09IOBHABKN@GuangHuan?$AA@
  00028	8b 45 08	 mov	 eax, DWORD PTR _L$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 _luaL_register
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH

; 47   : 	return 1;

  00034	b8 01 00 00 00	 mov	 eax, 1

; 48   : }

  00039	5f		 pop	 edi
  0003a	5e		 pop	 esi
  0003b	5b		 pop	 ebx
  0003c	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00042	3b ec		 cmp	 ebp, esp
  00044	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00049	8b e5		 mov	 esp, ebp
  0004b	5d		 pop	 ebp
  0004c	c3		 ret	 0
?luaopen_GuangHuanList@@YAHPAUlua_State@@@Z ENDP	; luaopen_GuangHuanList
_TEXT	ENDS
END
