; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Administrator\Desktop\mm\Sell20191106\111222333\Sell20191106\client code\system\”¢–€≥∆∫≈.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?count_”¢–€≥∆∫≈@@3HA				; count_”¢–€≥∆∫≈
PUBLIC	?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A			; data≥∆∫≈
PUBLIC	?pAct≥∆∫≈@@3PAUaction@@A			; pAct≥∆∫≈
PUBLIC	?pAct»ÀŒÔ@@3PAUaction@@A			; pAct»ÀŒÔ
_BSS	SEGMENT
_nPage	DD	01H DUP (?)
_nPageTotal DD	01H DUP (?)
?pAct≥∆∫≈@@3PAUaction@@A DD 01H DUP (?)			; pAct≥∆∫≈
?pAct»ÀŒÔ@@3PAUaction@@A DD 01H DUP (?)			; pAct»ÀŒÔ
?width@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA DW 01H DUP (?)	; `Init”¢–€≥∆∫≈¥∞ø⁄'::`2'::width
	ALIGN	4

?height@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA DW 01H DUP (?)	; `Init”¢–€≥∆∫≈¥∞ø⁄'::`2'::height
_BSS	ENDS
_DATA	SEGMENT
_FontPal DD	0ffffffH
	DD	0ffff00H
	DD	0ff00ffH
	DD	0ff0000H
	DD	0ffffH
	DD	0ff00H
	DD	0ffH
	DD	0a4a0a0H
	DD	0f0caa6H
	DD	0c0dcc0H
	DD	08cffH
	DD	0247fffH
?count_”¢–€≥∆∫≈@@3HA DD 01H				; count_”¢–€≥∆∫≈
_curSel	DD	0ffffffffH
?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A DD 019373H			; data≥∆∫≈
	DB	0d2H, 0bbH, 0c2H, 0edH, 0b5H, 0b1H, 0cfH, 0c8H, 00H
	ORG $+11
	DD	01H
	ORG $+5572
_DATA	ENDS
PUBLIC	?delAct≥∆∫≈@@YAXXZ				; delAct≥∆∫≈
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\users\administrator\desktop\mm\sell20191106\111222333\sell20191106\client code\system\”¢–€≥∆∫≈.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ?delAct≥∆∫≈@@YAXXZ
_TEXT	SEGMENT
?delAct≥∆∫≈@@YAXXZ PROC					; delAct≥∆∫≈, COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 38   : 	if (pAct»ÀŒÔ)

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pAct»ÀŒÔ@@3PAUaction@@A, 0 ; pAct»ÀŒÔ
  00025	74 18		 je	 SHORT $LN2@delAct

; 39   : 	{
; 40   : 		DeathAction(pAct»ÀŒÔ);

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pAct»ÀŒÔ@@3PAUaction@@A ; pAct»ÀŒÔ
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00032	83 c4 04	 add	 esp, 4

; 41   : 		pAct»ÀŒÔ = NULL;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pAct»ÀŒÔ@@3PAUaction@@A, 0 ; pAct»ÀŒÔ
$LN2@delAct:

; 42   : 	}
; 43   : 	if (pAct≥∆∫≈)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pAct≥∆∫≈@@3PAUaction@@A, 0 ; pAct≥∆∫≈
  00046	74 18		 je	 SHORT $LN3@delAct

; 44   : 	{
; 45   : 		DeathAction(pAct≥∆∫≈);

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pAct≥∆∫≈@@3PAUaction@@A ; pAct≥∆∫≈
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00053	83 c4 04	 add	 esp, 4

; 46   : 		pAct≥∆∫≈ = NULL;

  00056	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pAct≥∆∫≈@@3PAUaction@@A, 0 ; pAct≥∆∫≈
$LN3@delAct:

; 47   : 	}
; 48   : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?delAct≥∆∫≈@@YAXXZ ENDP					; delAct≥∆∫≈
_TEXT	ENDS
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@		; `string'
PUBLIC	??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@	; `string'
PUBLIC	??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@	; `string'
PUBLIC	??_C@_08EDALDAHI@?H?$KB?O?$PL?$LD?F?$LK?E?$AA@	; `string'
PUBLIC	??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@ ; `string'
PUBLIC	??_C@_0BJ@DHDCCNCL@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?$LD?F?$LK?E?$KD?$KB?$AA@ ; `string'
PUBLIC	??_C@_08HIMNKBCA@?I?h?V?C?$LD?F?$LK?E?$AA@	; `string'
PUBLIC	__$ArrayPad$
PUBLIC	?Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ			; Init”¢–€≥∆∫≈¥∞ø⁄
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?ªÒ»°∂Øª≠≥ﬂ¥Á@@YAHPAUaction@@PAF1@Z:PROC	; ªÒ»°∂Øª≠≥ﬂ¥Á
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	__imp__sprintf:PROC
EXTRN	?StockChatBufferLineExt@@YAXPADEHH@Z:PROC	; StockChatBufferLineExt
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBufferæ¯∂‘Œª÷√@@YAHHHEHH@Z:PROC	; StockDispBufferæ¯∂‘Œª÷√
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
_BSS	SEGMENT
	ALIGN	4

_button	DD	05H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@ DB '%d/%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@
CONST	SEGMENT
??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@ DB '  ', 0b9H, 0d8H, 0b1H, 0d5H
	DB	'  ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@
CONST	SEGMENT
??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@ DB 'CANCELCURRENTCHENHAO'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_08EDALDAHI@?H?$KB?O?$PL?$LD?F?$LK?E?$AA@
CONST	SEGMENT
??_C@_08EDALDAHI@?H?$KB?O?$PL?$LD?F?$LK?E?$AA@ DB 0c8H, 0a1H, 0cfH, 0fbH, 0b3H
	DB	0c6H, 0baH, 0c5H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@
CONST	SEGMENT
??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@ DB 'SETCURRENTCHENHAO'''
	DB	'%d''', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DHDCCNCL@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?$LD?F?$LK?E?$KD?$KB?$AA@
CONST	SEGMENT
??_C@_0BJ@DHDCCNCL@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?$LD?F?$LK?E?$KD?$KB?$AA@ DB 0c4H
	DB	0e3H, 0c3H, 0bbH, 0d3H, 0d0H, 0c8H, 0a8H, 0cfH, 0deH, 0caH, 0b9H
	DB	0d3H, 0c3H, 0d5H, 0e2H, 0b8H, 0f6H, 0b3H, 0c6H, 0baH, 0c5H, 0a3H
	DB	0a1H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08HIMNKBCA@?I?h?V?C?$LD?F?$LK?E?$AA@
CONST	SEGMENT
??_C@_08HIMNKBCA@?I?h?V?C?$LD?F?$LK?E?$AA@ DB 0c9H, 0e8H, 0d6H, 0c3H, 0b3H
	DB	0c6H, 0baH, 0c5H, 00H			; `string'
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ
_TEXT	SEGMENT
tv244 = -460						; size = 4
_y2$73357 = -260					; size = 2
_x2$73356 = -248					; size = 2
_y1$73349 = -236					; size = 4
_x1$73348 = -224					; size = 4
_buf$73347 = -212					; size = 30
_j$73343 = -172						; size = 4
_i$73342 = -160						; size = 4
_count_this_page$ = -148				; size = 4
_buf$ = -136						; size = 20
_count$ = -108						; size = 4
_buf$73325 = -96					; size = 50
_y$ = -36						; size = 4
_x$ = -24						; size = 4
_BmpNo$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ PROC				; Init”¢–€≥∆∫≈¥∞ø⁄, COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 01 00
	00		 sub	 esp, 460		; 000001ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-460]
  00012	b9 73 00 00 00	 mov	 ecx, 115		; 00000073H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 52   : 	int BmpNo;
; 53   : 	static short width = 0, height = 0;
; 54   : 	if (width == 0)

  00028	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA
  0002f	85 c0		 test	 eax, eax
  00031	75 27		 jne	 SHORT $LN24@Init

; 55   : 	{
; 56   : 		realGetNo(IMAGE_≥∆∫≈Õºµµ, (U4 *)&BmpNo);

  00033	8d 45 f4	 lea	 eax, DWORD PTR _BmpNo$[ebp]
  00036	50		 push	 eax
  00037	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  0003c	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo
  00041	83 c4 08	 add	 esp, 8

; 57   : 		realGetWH(BmpNo, &width, &height);			//ªÒ»°Õºµµ≥ﬂ¥Á

  00044	68 00 00 00 00	 push	 OFFSET ?height@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA
  00049	68 00 00 00 00	 push	 OFFSET ?width@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA
  0004e	8b 45 f4	 mov	 eax, DWORD PTR _BmpNo$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN24@Init:

; 58   : 	}
; 59   : 
; 60   : 	//∏˘æ›∑÷±Ê¬ ◊‘  ”¶◊Û…œΩ«x,y
; 61   : 	extern int DEF_APPSIZEX, DEF_APPSIZEY;
; 62   : 	int x = (DEF_APPSIZEX - width) / 2;

  0005a	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00067	2b c8		 sub	 ecx, eax
  00069	8b c1		 mov	 eax, ecx
  0006b	99		 cdq
  0006c	2b c2		 sub	 eax, edx
  0006e	d1 f8		 sar	 eax, 1
  00070	89 45 e8	 mov	 DWORD PTR _x$[ebp], eax

; 63   : 	int y = (DEF_APPSIZEY - height) / 2;

  00073	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?height@?1??Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ@4FA
  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00080	2b c8		 sub	 ecx, eax
  00082	8b c1		 mov	 eax, ecx
  00084	99		 cdq
  00085	2b c2		 sub	 eax, edx
  00087	d1 f8		 sar	 eax, 1
  00089	89 45 dc	 mov	 DWORD PTR _y$[ebp], eax

; 64   : 
; 65   : 
; 66   : 
; 67   : 	//ª≠Õº
; 68   : 	StockDispBufferæ¯∂‘Œª÷√(x, y, DISP_PRIO_MENU, IMAGE_≥∆∫≈Õºµµ, 1);

  0008c	6a 01		 push	 1
  0008e	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  00093	6a 68		 push	 104			; 00000068H
  00095	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00098	50		 push	 eax
  00099	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?StockDispBufferæ¯∂‘Œª÷√@@YAHHHEHH@Z ; StockDispBufferæ¯∂‘Œª÷√
  000a2	83 c4 14	 add	 esp, 20			; 00000014H

; 69   : 
; 70   : 	//◊Û”“º˝Õ∑
; 71   : 	button[0] = StockDispBuffer(x + 50, y + 310, DISP_PRIO_IME4, 55104, 2);

  000a5	6a 02		 push	 2
  000a7	68 40 d7 00 00	 push	 55104			; 0000d740H
  000ac	6a 6a		 push	 106			; 0000006aH
  000ae	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000b1	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000b6	50		 push	 eax
  000b7	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000ba	83 c1 32	 add	 ecx, 50			; 00000032H
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
  000c6	a3 00 00 00 00	 mov	 DWORD PTR _button, eax

; 72   : 	button[1] = StockDispBuffer(x + 110, y + 310, DISP_PRIO_IME4, 55105, 2);

  000cb	6a 02		 push	 2
  000cd	68 41 d7 00 00	 push	 55105			; 0000d741H
  000d2	6a 6a		 push	 106			; 0000006aH
  000d4	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000d7	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000dc	50		 push	 eax
  000dd	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000e0	83 c1 6e	 add	 ecx, 110		; 0000006eH
  000e3	51		 push	 ecx
  000e4	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000e9	83 c4 14	 add	 esp, 20			; 00000014H
  000ec	a3 04 00 00 00	 mov	 DWORD PTR _button+4, eax

; 73   : 
; 74   : 	//œ‘ æ≥∆∫≈
; 75   : 	StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "…Ë÷√≥∆∫≈", 0);	

  000f1	6a 00		 push	 0
  000f3	68 00 00 00 00	 push	 OFFSET ??_C@_08HIMNKBCA@?I?h?V?C?$LD?F?$LK?E?$AA@
  000f8	6a 04		 push	 4
  000fa	6a 01		 push	 1
  000fc	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000ff	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00104	50		 push	 eax
  00105	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00108	83 c1 32	 add	 ecx, 50			; 00000032H
  0010b	51		 push	 ecx
  0010c	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00111	83 c4 18	 add	 esp, 24			; 00000018H

; 76   : 	if (MakeHitBox(x + 50-5, y + 340-5, x + 50+60, y + 340+20, DISP_PRIO_IME4) == TRUE)

  00114	6a 6a		 push	 106			; 0000006aH
  00116	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00119	05 68 01 00 00	 add	 eax, 360		; 00000168H
  0011e	50		 push	 eax
  0011f	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00122	83 c1 6e	 add	 ecx, 110		; 0000006eH
  00125	51		 push	 ecx
  00126	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  00129	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  0012f	52		 push	 edx
  00130	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00133	83 c0 2d	 add	 eax, 45			; 0000002dH
  00136	50		 push	 eax
  00137	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0013c	83 c4 14	 add	 esp, 20			; 00000014H
  0013f	83 f8 01	 cmp	 eax, 1
  00142	75 75		 jne	 SHORT $LN23@Init

; 77   : 	{
; 78   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00144	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00149	83 e0 01	 and	 eax, 1
  0014c	74 6b		 je	 SHORT $LN23@Init

; 79   : 		{
; 80   : 			if (data≥∆∫≈[curSel].time == 0)

  0014e	a1 00 00 00 00	 mov	 eax, DWORD PTR _curSel
  00153	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00156	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A[eax+24], 0
  0015d	75 18		 jne	 SHORT $LN21@Init

; 81   : 			{
; 82   : 				StockChatBufferLineExt("ƒ„√ª”–»®œﬁ π”√’‚∏ˆ≥∆∫≈£°", FONT_PAL_RED, 0);

  0015f	6a 00		 push	 0
  00161	6a 00		 push	 0
  00163	6a 06		 push	 6
  00165	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@DHDCCNCL@?D?c?C?$LL?S?P?H?$KI?O?$NO?J?$LJ?S?C?U?b?$LI?v?$LD?F?$LK?E?$KD?$KB?$AA@
  0016a	e8 00 00 00 00	 call	 ?StockChatBufferLineExt@@YAXPADEHH@Z ; StockChatBufferLineExt
  0016f	83 c4 10	 add	 esp, 16			; 00000010H

; 83   : 				return;

  00172	e9 69 04 00 00	 jmp	 $LN25@Init
$LN21@Init:

; 84   : 			}
; 85   : 
; 86   : 			void LSSPROTO_203_SEND(int fd, char* data);
; 87   : 			extern unsigned int sockfd;
; 88   : 			char buf[50];
; 89   : 			sprintf(buf, "SETCURRENTCHENHAO'%d'", data≥∆∫≈[curSel].bmpNO);

  00177	a1 00 00 00 00	 mov	 eax, DWORD PTR _curSel
  0017c	6b c0 1c	 imul	 eax, 28			; 0000001cH
  0017f	8b f4		 mov	 esi, esp
  00181	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A[eax]
  00187	51		 push	 ecx
  00188	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@
  0018d	8d 55 a0	 lea	 edx, DWORD PTR _buf$73325[ebp]
  00190	52		 push	 edx
  00191	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  00197	83 c4 0c	 add	 esp, 12			; 0000000cH
  0019a	3b f4		 cmp	 esi, esp
  0019c	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 90   : 			LSSPROTO_203_SEND(sockfd, buf);

  001a1	8d 45 a0	 lea	 eax, DWORD PTR _buf$73325[ebp]
  001a4	50		 push	 eax
  001a5	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?sockfd@@3IA ; sockfd
  001ab	51		 push	 ecx
  001ac	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  001b1	83 c4 08	 add	 esp, 8

; 91   : 			return;

  001b4	e9 27 04 00 00	 jmp	 $LN25@Init
$LN23@Init:

; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	//»°œ˚≥∆∫≈
; 96   : 	StockFontBuffer(x + 200, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "»°œ˚≥∆∫≈", 0);	

  001b9	6a 00		 push	 0
  001bb	68 00 00 00 00	 push	 OFFSET ??_C@_08EDALDAHI@?H?$KB?O?$PL?$LD?F?$LK?E?$AA@
  001c0	6a 04		 push	 4
  001c2	6a 01		 push	 1
  001c4	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001c7	05 54 01 00 00	 add	 eax, 340		; 00000154H
  001cc	50		 push	 eax
  001cd	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001d0	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  001d6	51		 push	 ecx
  001d7	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001dc	83 c4 18	 add	 esp, 24			; 00000018H

; 97   : 	if (MakeHitBox(x + 200 - 5, y + 340 - 5, x + 200 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  001df	6a 6a		 push	 106			; 0000006aH
  001e1	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001e4	05 68 01 00 00	 add	 eax, 360		; 00000168H
  001e9	50		 push	 eax
  001ea	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001ed	81 c1 04 01 00
	00		 add	 ecx, 260		; 00000104H
  001f3	51		 push	 ecx
  001f4	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  001f7	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  001fd	52		 push	 edx
  001fe	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00201	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  00206	50		 push	 eax
  00207	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0020c	83 c4 14	 add	 esp, 20			; 00000014H
  0020f	83 f8 01	 cmp	 eax, 1
  00212	75 22		 jne	 SHORT $LN20@Init

; 98   : 	{
; 99   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00214	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00219	83 e0 01	 and	 eax, 1
  0021c	74 18		 je	 SHORT $LN20@Init

; 100  : 		{
; 101  : 			void LSSPROTO_203_SEND(int fd, char* data);
; 102  : 			extern unsigned int sockfd;
; 103  : 			LSSPROTO_203_SEND(sockfd, "CANCELCURRENTCHENHAO'");

  0021e	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@
  00223	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sockfd@@3IA ; sockfd
  00228	50		 push	 eax
  00229	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  0022e	83 c4 08	 add	 esp, 8

; 104  : 			return;

  00231	e9 aa 03 00 00	 jmp	 $LN25@Init
$LN20@Init:

; 105  : 		}
; 106  : 	}
; 107  : 
; 108  : 	//πÿ±’
; 109  : 	StockFontBuffer(x + 330, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  πÿ±’  ", 0);

  00236	6a 00		 push	 0
  00238	68 00 00 00 00	 push	 OFFSET ??_C@_08LIBFJFNI@?5?5?$LJ?X?$LB?U?5?5?$AA@
  0023d	6a 04		 push	 4
  0023f	6a 01		 push	 1
  00241	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00244	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00249	50		 push	 eax
  0024a	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0024d	81 c1 4a 01 00
	00		 add	 ecx, 330		; 0000014aH
  00253	51		 push	 ecx
  00254	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00259	83 c4 18	 add	 esp, 24			; 00000018H

; 110  : 	if (MakeHitBox(x + 330 - 5, y + 340 - 5, x + 330 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  0025c	6a 6a		 push	 106			; 0000006aH
  0025e	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00261	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00266	50		 push	 eax
  00267	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0026a	81 c1 86 01 00
	00		 add	 ecx, 390		; 00000186H
  00270	51		 push	 ecx
  00271	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  00274	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  0027a	52		 push	 edx
  0027b	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  0027e	05 45 01 00 00	 add	 eax, 325		; 00000145H
  00283	50		 push	 eax
  00284	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00289	83 c4 14	 add	 esp, 20			; 00000014H
  0028c	83 f8 01	 cmp	 eax, 1
  0028f	75 1e		 jne	 SHORT $LN18@Init

; 111  : 	{
; 112  : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00291	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  00296	83 e0 01	 and	 eax, 1
  00299	74 14		 je	 SHORT $LN18@Init

; 113  : 		{
; 114  : 			MenuToggleFlag &= ~JOY_CTRL_S;

  0029b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MenuToggleFlag@@3IA ; MenuToggleFlag
  002a0	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  002a5	a3 00 00 00 00	 mov	 DWORD PTR ?MenuToggleFlag@@3IA, eax ; MenuToggleFlag

; 115  : 			return;

  002aa	e9 31 03 00 00	 jmp	 $LN25@Init
$LN18@Init:

; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	//»°≥∆∫≈∏ˆ ˝
; 120  : 	int count = count_”¢–€≥∆∫≈;

  002af	a1 00 00 00 00	 mov	 eax, DWORD PTR ?count_”¢–€≥∆∫≈@@3HA ; count_”¢–€≥∆∫≈
  002b4	89 45 94	 mov	 DWORD PTR _count$[ebp], eax

; 121  : 
; 122  : 	//◊‹“≥√Ê ˝
; 123  : 	nPageTotal = (count + 13 - 1) / 13;

  002b7	8b 45 94	 mov	 eax, DWORD PTR _count$[ebp]
  002ba	83 c0 0c	 add	 eax, 12			; 0000000cH
  002bd	99		 cdq
  002be	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  002c3	f7 f9		 idiv	 ecx
  002c5	a3 00 00 00 00	 mov	 DWORD PTR _nPageTotal, eax

; 124  : 
; 125  : 	//œ‘ æ “≥√Ê/◊‹“≥√Ê
; 126  : 	char buf[20];
; 127  : 	sprintf(buf, "%d/%d", nPage + 1, nPageTotal);

  002ca	8b f4		 mov	 esi, esp
  002cc	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  002d1	50		 push	 eax
  002d2	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _nPage
  002d8	83 c1 01	 add	 ecx, 1
  002db	51		 push	 ecx
  002dc	68 00 00 00 00	 push	 OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
  002e1	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _buf$[ebp]
  002e7	52		 push	 edx
  002e8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__sprintf
  002ee	83 c4 10	 add	 esp, 16			; 00000010H
  002f1	3b f4		 cmp	 esi, esp
  002f3	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 128  : 	StockFontBuffer(x + 65, y + 295, FONT_PRIO_FRONT, FONT_PAL_YELLOW, buf, 0);

  002f8	6a 00		 push	 0
  002fa	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  00300	50		 push	 eax
  00301	6a 04		 push	 4
  00303	6a 01		 push	 1
  00305	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  00308	81 c1 27 01 00
	00		 add	 ecx, 295		; 00000127H
  0030e	51		 push	 ecx
  0030f	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  00312	83 c2 41	 add	 edx, 65			; 00000041H
  00315	52		 push	 edx
  00316	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0031b	83 c4 18	 add	 esp, 24			; 00000018H

; 129  : 
; 130  : 
; 131  : 	//»°µ±«∞“≥œ‘ æµƒ ˝¡ø
; 132  : 	int count_this_page = count - nPage * 13;

  0031e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  00323	6b c0 0d	 imul	 eax, 13			; 0000000dH
  00326	8b 4d 94	 mov	 ecx, DWORD PTR _count$[ebp]
  00329	2b c8		 sub	 ecx, eax
  0032b	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], ecx

; 133  : 	count_this_page = (count_this_page >= 13) ? 13 : count_this_page % 13;

  00331	83 bd 6c ff ff
	ff 0d		 cmp	 DWORD PTR _count_this_page$[ebp], 13 ; 0000000dH
  00338	7c 0c		 jl	 SHORT $LN27@Init
  0033a	c7 85 34 fe ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv244[ebp], 13 ; 0000000dH
  00344	eb 14		 jmp	 SHORT $LN28@Init
$LN27@Init:
  00346	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _count_this_page$[ebp]
  0034c	99		 cdq
  0034d	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  00352	f7 f9		 idiv	 ecx
  00354	89 95 34 fe ff
	ff		 mov	 DWORD PTR tv244[ebp], edx
$LN28@Init:
  0035a	8b 95 34 fe ff
	ff		 mov	 edx, DWORD PTR tv244[ebp]
  00360	89 95 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], edx

; 134  : 	
; 135  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  00366	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  0036b	6b c0 0d	 imul	 eax, 13			; 0000000dH
  0036e	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$73342[ebp], eax
  00374	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$73343[ebp], 0
  0037e	eb 1e		 jmp	 SHORT $LN16@Init
$LN15@Init:
  00380	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73342[ebp]
  00386	83 c0 01	 add	 eax, 1
  00389	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$73342[ebp], eax
  0038f	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _j$73343[ebp]
  00395	83 c1 01	 add	 ecx, 1
  00398	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _j$73343[ebp], ecx
$LN16@Init:
  0039e	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  003a3	6b c0 0d	 imul	 eax, 13			; 0000000dH
  003a6	03 85 6c ff ff
	ff		 add	 eax, DWORD PTR _count_this_page$[ebp]
  003ac	39 85 60 ff ff
	ff		 cmp	 DWORD PTR _i$73342[ebp], eax
  003b2	0f 8d be 01 00
	00		 jge	 $LN14@Init

; 136  : 	{
; 137  : 		char buf[30];
; 138  : 
; 139  : 		//Œƒ◊÷æ”÷–
; 140  : 		CenteringStr(data≥∆∫≈[i].name, buf, 19);

  003b8	6a 13		 push	 19			; 00000013H
  003ba	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73347[ebp]
  003c0	50		 push	 eax
  003c1	8b 8d 60 ff ff
	ff		 mov	 ecx, DWORD PTR _i$73342[ebp]
  003c7	6b c9 1c	 imul	 ecx, 28			; 0000001cH
  003ca	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A+4
  003d0	51		 push	 ecx
  003d1	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  003d6	83 c4 0c	 add	 esp, 12			; 0000000cH

; 141  : 
; 142  : 		//…Ë∂®Œƒ◊÷◊Û…œΩ«Œª÷√
; 143  : 		int x1 = x + 13;

  003d9	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  003dc	83 c0 0d	 add	 eax, 13			; 0000000dH
  003df	89 85 20 ff ff
	ff		 mov	 DWORD PTR _x1$73348[ebp], eax

; 144  : 		int y1 = y + 30 + j * 20;

  003e5	8b 85 54 ff ff
	ff		 mov	 eax, DWORD PTR _j$73343[ebp]
  003eb	6b c0 14	 imul	 eax, 20			; 00000014H
  003ee	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  003f1	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  003f5	89 95 14 ff ff
	ff		 mov	 DWORD PTR _y1$73349[ebp], edx

; 145  : 
; 146  : 		// ‰≥ˆŒƒ◊÷
; 147  : 		if (data≥∆∫≈[i].time != 0)

  003fb	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73342[ebp]
  00401	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00404	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A[eax+24], 0
  0040b	74 58		 je	 SHORT $LN13@Init

; 148  : 		{
; 149  : 			if (i == curSel)

  0040d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73342[ebp]
  00413	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _curSel
  00419	75 25		 jne	 SHORT $LN12@Init

; 150  : 			{
; 151  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_RED, buf, 0);	//∫Ï…´

  0041b	6a 00		 push	 0
  0041d	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73347[ebp]
  00423	50		 push	 eax
  00424	6a 06		 push	 6
  00426	6a 01		 push	 1
  00428	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73349[ebp]
  0042e	51		 push	 ecx
  0042f	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73348[ebp]
  00435	52		 push	 edx
  00436	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0043b	83 c4 18	 add	 esp, 24			; 00000018H

; 152  : 			}
; 153  : 			else

  0043e	eb 23		 jmp	 SHORT $LN11@Init
$LN12@Init:

; 154  : 			{
; 155  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);	//¬Ã…´

  00440	6a 00		 push	 0
  00442	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73347[ebp]
  00448	50		 push	 eax
  00449	6a 05		 push	 5
  0044b	6a 01		 push	 1
  0044d	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73349[ebp]
  00453	51		 push	 ecx
  00454	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73348[ebp]
  0045a	52		 push	 edx
  0045b	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00460	83 c4 18	 add	 esp, 24			; 00000018H
$LN11@Init:

; 156  : 			}
; 157  : 			
; 158  : 		}
; 159  : 			
; 160  : 		else

  00463	eb 23		 jmp	 SHORT $LN10@Init
$LN13@Init:

; 161  : 			StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GRAY, buf, 0);	//ª“…´

  00465	6a 00		 push	 0
  00467	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$73347[ebp]
  0046d	50		 push	 eax
  0046e	6a 07		 push	 7
  00470	6a 01		 push	 1
  00472	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$73349[ebp]
  00478	51		 push	 ecx
  00479	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$73348[ebp]
  0047f	52		 push	 edx
  00480	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00485	83 c4 18	 add	 esp, 24			; 00000018H
$LN10@Init:

; 162  : 
; 163  : 		//ª≠¬ÃøÚøÚ≤¢≈–∂œµ„ª˜
; 164  : 		if (MakeHitBox(x1,y1 -2,x1 + 130, y1+ 17, DISP_PRIO_IME4) == TRUE)

  00488	6a 6a		 push	 106			; 0000006aH
  0048a	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _y1$73349[ebp]
  00490	83 c0 11	 add	 eax, 17			; 00000011H
  00493	50		 push	 eax
  00494	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _x1$73348[ebp]
  0049a	81 c1 82 00 00
	00		 add	 ecx, 130		; 00000082H
  004a0	51		 push	 ecx
  004a1	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR _y1$73349[ebp]
  004a7	83 ea 02	 sub	 edx, 2
  004aa	52		 push	 edx
  004ab	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _x1$73348[ebp]
  004b1	50		 push	 eax
  004b2	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  004b7	83 c4 14	 add	 esp, 20			; 00000014H
  004ba	83 f8 01	 cmp	 eax, 1
  004bd	0f 85 ae 00 00
	00		 jne	 $LN9@Init

; 165  : 		{
; 166  : 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  004c3	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  004c8	83 e0 01	 and	 eax, 1
  004cb	0f 84 a0 00 00
	00		 je	 $LN9@Init

; 167  : 			{
; 168  : 				//±£¥Êµ„ª˜µƒ±‡∫≈
; 169  : 				curSel = i;

  004d1	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73342[ebp]
  004d7	a3 00 00 00 00	 mov	 DWORD PTR _curSel, eax

; 170  : 
; 171  : 				//…æ≥˝‘≠”–∂Øª≠
; 172  : 				delAct≥∆∫≈();

  004dc	e8 00 00 00 00	 call	 ?delAct≥∆∫≈@@YAXXZ	; delAct≥∆∫≈

; 173  : 
; 174  : 				pAct»ÀŒÔ = MakeAnimDisp(x + 280, y + 184, pc.graNo, 0);

  004e1	6a 00		 push	 0
  004e3	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A
  004e8	50		 push	 eax
  004e9	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  004ec	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  004f2	51		 push	 ecx
  004f3	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  004f6	81 c2 18 01 00
	00		 add	 edx, 280		; 00000118H
  004fc	52		 push	 edx
  004fd	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00502	83 c4 10	 add	 esp, 16			; 00000010H
  00505	a3 00 00 00 00	 mov	 DWORD PTR ?pAct»ÀŒÔ@@3PAUaction@@A, eax ; pAct»ÀŒÔ

; 175  : 
; 176  : 				short x2, y2;
; 177  : 				if (ªÒ»°∂Øª≠≥ﬂ¥Á(pAct»ÀŒÔ, &x2, &y2)) 

  0050a	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _y2$73357[ebp]
  00510	50		 push	 eax
  00511	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _x2$73356[ebp]
  00517	51		 push	 ecx
  00518	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pAct»ÀŒÔ@@3PAUaction@@A ; pAct»ÀŒÔ
  0051e	52		 push	 edx
  0051f	e8 00 00 00 00	 call	 ?ªÒ»°∂Øª≠≥ﬂ¥Á@@YAHPAUaction@@PAF1@Z ; ªÒ»°∂Øª≠≥ﬂ¥Á
  00524	83 c4 0c	 add	 esp, 12			; 0000000cH
  00527	85 c0		 test	 eax, eax
  00529	74 44		 je	 SHORT $LN7@Init

; 178  : 				{
; 179  : 					pAct≥∆∫≈ = MakeAnimDisp(x + 280, y + 184 - y2/2 - 45, data≥∆∫≈[i].bmpNO, 0);

  0052b	6a 00		 push	 0
  0052d	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$73342[ebp]
  00533	6b c0 1c	 imul	 eax, 28			; 0000001cH
  00536	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data≥∆∫≈@@3PAUπ‚ª∑STRUCT@@A[eax]
  0053c	51		 push	 ecx
  0053d	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  00540	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00546	0f bf 85 fc fe
	ff ff		 movsx	 eax, WORD PTR _y2$73357[ebp]
  0054d	99		 cdq
  0054e	2b c2		 sub	 eax, edx
  00550	d1 f8		 sar	 eax, 1
  00552	2b c8		 sub	 ecx, eax
  00554	83 e9 2d	 sub	 ecx, 45			; 0000002dH
  00557	51		 push	 ecx
  00558	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  0055b	81 c2 18 01 00
	00		 add	 edx, 280		; 00000118H
  00561	52		 push	 edx
  00562	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00567	83 c4 10	 add	 esp, 16			; 00000010H
  0056a	a3 00 00 00 00	 mov	 DWORD PTR ?pAct≥∆∫≈@@3PAUaction@@A, eax ; pAct≥∆∫≈
$LN7@Init:

; 180  : 				}
; 181  : 				return;

  0056f	eb 6f		 jmp	 SHORT $LN25@Init
$LN9@Init:

; 182  : 			}
; 183  : 		}
; 184  : 	}

  00571	e9 0a fe ff ff	 jmp	 $LN15@Init
$LN14@Init:

; 185  : 
; 186  : 	if (mouse.onceState & MOUSE_LEFT_CRICK)

  00576	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0057b	83 e0 01	 and	 eax, 1
  0057e	74 60		 je	 SHORT $LN25@Init

; 187  : 	{
; 188  : 
; 189  : 		if (HitDispNo == button[0]) //◊Ûº˝Õ∑

  00580	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00585	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _button
  0058b	75 1b		 jne	 SHORT $LN5@Init

; 190  : 		{
; 191  : 			nPage--;

  0058d	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  00592	83 e8 01	 sub	 eax, 1
  00595	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax

; 192  : 			if (nPage < 0)nPage = 0;

  0059a	79 0a		 jns	 SHORT $LN4@Init
  0059c	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _nPage, 0
$LN4@Init:

; 193  : 		}

  005a6	eb 37		 jmp	 SHORT $LN3@Init
$LN5@Init:

; 194  : 		else if (HitDispNo == button[1]) //”“º˝Õ∑

  005a8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  005ad	3b 05 04 00 00
	00		 cmp	 eax, DWORD PTR _button+4
  005b3	75 2a		 jne	 SHORT $LN3@Init

; 195  : 		{
; 196  : 			nPage++;

  005b5	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPage
  005ba	83 c0 01	 add	 eax, 1
  005bd	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax

; 197  : 			if (nPage >= nPageTotal - 1) nPage = nPageTotal - 1;

  005c2	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  005c7	83 e8 01	 sub	 eax, 1
  005ca	39 05 00 00 00
	00		 cmp	 DWORD PTR _nPage, eax
  005d0	7c 0d		 jl	 SHORT $LN3@Init
  005d2	a1 00 00 00 00	 mov	 eax, DWORD PTR _nPageTotal
  005d7	83 e8 01	 sub	 eax, 1
  005da	a3 00 00 00 00	 mov	 DWORD PTR _nPage, eax
$LN3@Init:

; 198  : 		}
; 199  : 		__asm nop;

  005df	90		 npad	 1
$LN25@Init:

; 200  : 	}
; 201  : 
; 202  : }

  005e0	52		 push	 edx
  005e1	8b cd		 mov	 ecx, ebp
  005e3	50		 push	 eax
  005e4	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN36@Init
  005ea	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005ef	58		 pop	 eax
  005f0	5a		 pop	 edx
  005f1	5f		 pop	 edi
  005f2	5e		 pop	 esi
  005f3	5b		 pop	 ebx
  005f4	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005f7	33 cd		 xor	 ecx, ebp
  005f9	e8 00 00 00 00	 call	 @__security_check_cookie@4
  005fe	81 c4 cc 01 00
	00		 add	 esp, 460		; 000001ccH
  00604	3b ec		 cmp	 ebp, esp
  00606	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0060b	8b e5		 mov	 esp, ebp
  0060d	5d		 pop	 ebp
  0060e	c3		 ret	 0
  0060f	90		 npad	 1
$LN36@Init:
  00610	06 00 00 00	 DD	 6
  00614	00 00 00 00	 DD	 $LN35@Init
$LN35@Init:
  00618	f4 ff ff ff	 DD	 -12			; fffffff4H
  0061c	04 00 00 00	 DD	 4
  00620	00 00 00 00	 DD	 $LN29@Init
  00624	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00628	32 00 00 00	 DD	 50			; 00000032H
  0062c	00 00 00 00	 DD	 $LN30@Init
  00630	78 ff ff ff	 DD	 -136			; ffffff78H
  00634	14 00 00 00	 DD	 20			; 00000014H
  00638	00 00 00 00	 DD	 $LN31@Init
  0063c	2c ff ff ff	 DD	 -212			; ffffff2cH
  00640	1e 00 00 00	 DD	 30			; 0000001eH
  00644	00 00 00 00	 DD	 $LN32@Init
  00648	08 ff ff ff	 DD	 -248			; ffffff08H
  0064c	02 00 00 00	 DD	 2
  00650	00 00 00 00	 DD	 $LN33@Init
  00654	fc fe ff ff	 DD	 -260			; fffffefcH
  00658	02 00 00 00	 DD	 2
  0065c	00 00 00 00	 DD	 $LN34@Init
$LN34@Init:
  00660	79		 DB	 121			; 00000079H
  00661	32		 DB	 50			; 00000032H
  00662	00		 DB	 0
$LN33@Init:
  00663	78		 DB	 120			; 00000078H
  00664	32		 DB	 50			; 00000032H
  00665	00		 DB	 0
$LN32@Init:
  00666	62		 DB	 98			; 00000062H
  00667	75		 DB	 117			; 00000075H
  00668	66		 DB	 102			; 00000066H
  00669	00		 DB	 0
$LN31@Init:
  0066a	62		 DB	 98			; 00000062H
  0066b	75		 DB	 117			; 00000075H
  0066c	66		 DB	 102			; 00000066H
  0066d	00		 DB	 0
$LN30@Init:
  0066e	62		 DB	 98			; 00000062H
  0066f	75		 DB	 117			; 00000075H
  00670	66		 DB	 102			; 00000066H
  00671	00		 DB	 0
$LN29@Init:
  00672	42		 DB	 66			; 00000042H
  00673	6d		 DB	 109			; 0000006dH
  00674	70		 DB	 112			; 00000070H
  00675	4e		 DB	 78			; 0000004eH
  00676	6f		 DB	 111			; 0000006fH
  00677	00		 DB	 0
?Init”¢–€≥∆∫≈¥∞ø⁄@@YAXXZ ENDP				; Init”¢–€≥∆∫≈¥∞ø⁄
_TEXT	ENDS
END
