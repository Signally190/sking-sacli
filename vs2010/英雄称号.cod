; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.24215.1 

	TITLE	C:\Users\Administrator\Desktop\????? ??\????? ??\Client Source Code\system\Ó¢ÐÛ³ÆºÅ.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?count_Ó¢ÐÛ³ÆºÅ@@3HA				; count_Ó¢ÐÛ³ÆºÅ
PUBLIC	?data³ÆºÅ@@3PAU¹â»·STRUCT@@A			; data³ÆºÅ
PUBLIC	?pAct³ÆºÅ@@3PAUaction@@A			; pAct³ÆºÅ
PUBLIC	?pActÈËÎï@@3PAUaction@@A			; pActÈËÎï
_BSS	SEGMENT
?nPage@@3HA DD	01H DUP (?)				; nPage
?nPageTotal@@3HA DD 01H DUP (?)				; nPageTotal
?pAct³ÆºÅ@@3PAUaction@@A DD 01H DUP (?)			; pAct³ÆºÅ
?pActÈËÎï@@3PAUaction@@A DD 01H DUP (?)			; pActÈËÎï
?width@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA DW 01H DUP (?)	; `InitÓ¢ÐÛ³ÆºÅ´°¿Ú'::`2'::width
	ALIGN	4

?height@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA DW 01H DUP (?)	; `InitÓ¢ÐÛ³ÆºÅ´°¿Ú'::`2'::height
_BSS	ENDS
_DATA	SEGMENT
?count_Ó¢ÐÛ³ÆºÅ@@3HA DD 01H				; count_Ó¢ÐÛ³ÆºÅ
?curSel@@3HA DD	0ffffffffH				; curSel
?data³ÆºÅ@@3PAU¹â»·STRUCT@@A DD 019373H			; data³ÆºÅ
	DB	0ecH, 0e9H, '??', 0e0H, 0bbH, 00H
	ORG $+13
	DD	01H
	ORG $+5572
?FontPal@@3PAKA DD 0ffffffH				; FontPal
	DD	0ffff00H
	DD	0ff00ffH
	DD	0ff0000H
	DD	0ffffH
	DD	0ff00H
	DD	0ffH
	DD	0a4a0a0H
	DD	0f0caa6H
	DD	0c0dcc0H
	DD	08cffH
	DD	0247fffH
_DATA	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	__vsnprintf_l
PUBLIC	__vsprintf_l
PUBLIC	_sprintf
PUBLIC	?delAct³ÆºÅ@@YAXXZ				; delAct³ÆºÅ
PUBLIC	?InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ			; InitÓ¢ÐÛ³ÆºÅ´°¿Ú
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP?$AA@		; `string'
PUBLIC	??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB?$AA@ ; `string'
PUBLIC	??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@ ; `string'
PUBLIC	??_C@_04MFANEHND@?$DP?$DP?$DP?$DP?$AA@		; `string'
PUBLIC	??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@	; `string'
PUBLIC	??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5?$AA@		; `string'
PUBLIC	??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@		; `string'
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	?DeathAction@@YAXPAUaction@@@Z:PROC		; DeathAction
EXTRN	?StockDispBuffer@@YAHHHEHH@Z:PROC		; StockDispBuffer
EXTRN	?StockDispBuffer¾ø¶ÔÎ»ÖÃ@@YAHHHEHH@Z:PROC	; StockDispBuffer¾ø¶ÔÎ»ÖÃ
EXTRN	?»ñÈ¡¶¯»­³ß´ç@@YAHPAUaction@@PAF1@Z:PROC	; »ñÈ¡¶¯»­³ß´ç
EXTRN	?StockChatBufferLineExt@@YAXPADEHH@Z:PROC	; StockChatBufferLineExt
EXTRN	?StockFontBuffer@@YAHHHDHPADH@Z:PROC		; StockFontBuffer
EXTRN	?MakeHitBox@@YAHHHHHH@Z:PROC			; MakeHitBox
EXTRN	?CenteringStr@@YAXPAD0H@Z:PROC			; CenteringStr
EXTRN	?MakeAnimDisp@@YAPAUaction@@HHHH@Z:PROC		; MakeAnimDisp
EXTRN	?realGetWH@@YAHKPAF0@Z:PROC			; realGetWH
EXTRN	?realGetNo@@YAHKPAK@Z:PROC			; realGetNo
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	?LSSPROTO_203_SEND@@YAXHPAD@Z:PROC		; LSSPROTO_203_SEND
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	?DEF_APPSIZEX@@3HA:DWORD			; DEF_APPSIZEX
EXTRN	?DEF_APPSIZEY@@3HA:DWORD			; DEF_APPSIZEY
EXTRN	?mouse@@3UMOUSE@@A:BYTE				; mouse
EXTRN	?HitDispNo@@3HA:DWORD				; HitDispNo
EXTRN	?pc@@3UPC@@A:BYTE				; pc
EXTRN	?MenuToggleFlag@@3IA:DWORD			; MenuToggleFlag
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	?sockfd@@3IA:DWORD				; sockfd
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
_BSS	SEGMENT
	ALIGN	4

?button@@3PAHA DD 05H DUP (?)				; button
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
CONST	SEGMENT
??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@ DB '%d/%d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5?$AA@
CONST	SEGMENT
??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5?$AA@ DB '  ??  ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@
CONST	SEGMENT
??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@ DB 'CANCELCURRENTCHENHAO'''
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04MFANEHND@?$DP?$DP?$DP?$DP?$AA@
CONST	SEGMENT
??_C@_04MFANEHND@?$DP?$DP?$DP?$DP?$AA@ DB '????', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@
CONST	SEGMENT
??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@ DB 'SETCURRENTCHENHAO'''
	DB	'%d''', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB?$AA@
CONST	SEGMENT
??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB?$AA@ DB '?'
	DB	'?', 0eaH, 0f3H, '?', 0f9H, 0daH, 0deH, 0c5H, 0e9H, 0c4H, '???'
	DB	'?', 0a3H, 0a1H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP?$AA@
CONST	SEGMENT
??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP?$AA@ DB '?', 0f6H, 0c7H, '??', 00H ; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\system\Ó¢ÐÛ³ÆºÅ.cpp
;	COMDAT ?InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ
_TEXT	SEGMENT
tv248 = -460						; size = 4
_y2$1 = -260						; size = 2
_x2$2 = -248						; size = 2
_y1$3 = -236						; size = 4
_x1$4 = -224						; size = 4
_buf$5 = -212						; size = 30
_j$6 = -172						; size = 4
_i$7 = -160						; size = 4
_count_this_page$ = -148				; size = 4
_buf$ = -136						; size = 20
_count$ = -108						; size = 4
_buf$8 = -96						; size = 50
_y$ = -36						; size = 4
_x$ = -24						; size = 4
_BmpNo$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ PROC				; InitÓ¢ÐÛ³ÆºÅ´°¿Ú, COMDAT

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 01 00
	00		 sub	 esp, 460		; 000001ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-460]
  00012	b9 73 00 00 00	 mov	 ecx, 115		; 00000073H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 52   : 	int BmpNo;
; 53   : 	static short width = 0, height = 0;
; 54   : 	if (width == 0)

  00028	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA
  0002f	85 c0		 test	 eax, eax
  00031	75 27		 jne	 SHORT $LN5@Init

; 55   : 	{
; 56   : 		realGetNo(IMAGE_³ÆºÅÍ¼µµ, (U4 *)&BmpNo);

  00033	8d 45 f4	 lea	 eax, DWORD PTR _BmpNo$[ebp]
  00036	50		 push	 eax
  00037	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  0003c	e8 00 00 00 00	 call	 ?realGetNo@@YAHKPAK@Z	; realGetNo
  00041	83 c4 08	 add	 esp, 8

; 57   : 		realGetWH(BmpNo, &width, &height);			//»ñÈ¡Í¼µµ³ß´ç

  00044	68 00 00 00 00	 push	 OFFSET ?height@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA
  00049	68 00 00 00 00	 push	 OFFSET ?width@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA
  0004e	8b 45 f4	 mov	 eax, DWORD PTR _BmpNo$[ebp]
  00051	50		 push	 eax
  00052	e8 00 00 00 00	 call	 ?realGetWH@@YAHKPAF0@Z	; realGetWH
  00057	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN5@Init:

; 58   : 	}
; 59   : 
; 60   : 	//¸ù¾Ý·Ö±æÂÊ×ÔÊÊÓ¦×óÉÏ½Çx,y
; 61   : 	extern int DEF_APPSIZEX, DEF_APPSIZEY;
; 62   : 	int x = (DEF_APPSIZEX - width) / 2;

  0005a	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?width@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA
  00061	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEX@@3HA ; DEF_APPSIZEX
  00067	2b c8		 sub	 ecx, eax
  00069	8b c1		 mov	 eax, ecx
  0006b	99		 cdq
  0006c	2b c2		 sub	 eax, edx
  0006e	d1 f8		 sar	 eax, 1
  00070	89 45 e8	 mov	 DWORD PTR _x$[ebp], eax

; 63   : 	int y = (DEF_APPSIZEY - height) / 2;

  00073	0f bf 05 00 00
	00 00		 movsx	 eax, WORD PTR ?height@?1??InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ@4FA
  0007a	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?DEF_APPSIZEY@@3HA ; DEF_APPSIZEY
  00080	2b c8		 sub	 ecx, eax
  00082	8b c1		 mov	 eax, ecx
  00084	99		 cdq
  00085	2b c2		 sub	 eax, edx
  00087	d1 f8		 sar	 eax, 1
  00089	89 45 dc	 mov	 DWORD PTR _y$[ebp], eax

; 64   : 
; 65   : 
; 66   : 
; 67   : 	//»­Í¼
; 68   : 	StockDispBuffer¾ø¶ÔÎ»ÖÃ(x, y, DISP_PRIO_MENU, IMAGE_³ÆºÅÍ¼µµ, 1);

  0008c	6a 01		 push	 1
  0008e	68 d5 c3 00 00	 push	 50133			; 0000c3d5H
  00093	6a 68		 push	 104			; 00000068H
  00095	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00098	50		 push	 eax
  00099	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0009c	51		 push	 ecx
  0009d	e8 00 00 00 00	 call	 ?StockDispBuffer¾ø¶ÔÎ»ÖÃ@@YAHHHEHH@Z ; StockDispBuffer¾ø¶ÔÎ»ÖÃ
  000a2	83 c4 14	 add	 esp, 20			; 00000014H

; 69   : 
; 70   : 	//×óÓÒ¼ýÍ·
; 71   : 	button[0] = StockDispBuffer(x + 50, y + 310, DISP_PRIO_IME4, 55104, 2);

  000a5	6a 02		 push	 2
  000a7	68 40 d7 00 00	 push	 55104			; 0000d740H
  000ac	6a 6a		 push	 106			; 0000006aH
  000ae	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000b1	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000b6	50		 push	 eax
  000b7	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000ba	83 c1 32	 add	 ecx, 50			; 00000032H
  000bd	51		 push	 ecx
  000be	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000c3	83 c4 14	 add	 esp, 20			; 00000014H
  000c6	ba 04 00 00 00	 mov	 edx, 4
  000cb	6b ca 00	 imul	 ecx, edx, 0
  000ce	89 81 00 00 00
	00		 mov	 DWORD PTR ?button@@3PAHA[ecx], eax

; 72   : 	button[1] = StockDispBuffer(x + 110, y + 310, DISP_PRIO_IME4, 55105, 2);

  000d4	6a 02		 push	 2
  000d6	68 41 d7 00 00	 push	 55105			; 0000d741H
  000db	6a 6a		 push	 106			; 0000006aH
  000dd	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  000e0	05 36 01 00 00	 add	 eax, 310		; 00000136H
  000e5	50		 push	 eax
  000e6	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  000e9	83 c1 6e	 add	 ecx, 110		; 0000006eH
  000ec	51		 push	 ecx
  000ed	e8 00 00 00 00	 call	 ?StockDispBuffer@@YAHHHEHH@Z ; StockDispBuffer
  000f2	83 c4 14	 add	 esp, 20			; 00000014H
  000f5	ba 04 00 00 00	 mov	 edx, 4
  000fa	c1 e2 00	 shl	 edx, 0
  000fd	89 82 00 00 00
	00		 mov	 DWORD PTR ?button@@3PAHA[edx], eax

; 73   : 
; 74   : 	//ÏÔÊ¾³ÆºÅ
; 75   : 	StockFontBuffer(x + 50, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "ÉèÖÃ³ÆºÅ", 0);	

  00103	6a 00		 push	 0
  00105	68 00 00 00 00	 push	 OFFSET ??_C@_05OABGBAPH@?$DP?v?G?$DP?$DP?$AA@
  0010a	6a 04		 push	 4
  0010c	6a 01		 push	 1
  0010e	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00111	05 54 01 00 00	 add	 eax, 340		; 00000154H
  00116	50		 push	 eax
  00117	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  0011a	83 c1 32	 add	 ecx, 50			; 00000032H
  0011d	51		 push	 ecx
  0011e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00123	83 c4 18	 add	 esp, 24			; 00000018H

; 76   : 	if (MakeHitBox(x + 50-5, y + 340-5, x + 50+60, y + 340+20, DISP_PRIO_IME4) == TRUE)

  00126	6a 6a		 push	 106			; 0000006aH
  00128	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  0012b	05 68 01 00 00	 add	 eax, 360		; 00000168H
  00130	50		 push	 eax
  00131	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00134	83 c1 6e	 add	 ecx, 110		; 0000006eH
  00137	51		 push	 ecx
  00138	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  0013b	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  00141	52		 push	 edx
  00142	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00145	83 c0 2d	 add	 eax, 45			; 0000002dH
  00148	50		 push	 eax
  00149	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0014e	83 c4 14	 add	 esp, 20			; 00000014H
  00151	83 f8 01	 cmp	 eax, 1
  00154	75 69		 jne	 SHORT $LN6@Init

; 77   : 	{
; 78   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00156	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0015b	83 e0 01	 and	 eax, 1
  0015e	74 5f		 je	 SHORT $LN6@Init

; 79   : 		{
; 80   : 			if (data³ÆºÅ[curSel].time == 0)

  00160	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?curSel@@3HA, 28
  00167	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data³ÆºÅ@@3PAU¹â»·STRUCT@@A[eax+24], 0
  0016e	75 18		 jne	 SHORT $LN8@Init

; 81   : 			{
; 82   : 				StockChatBufferLineExt("ÄãÃ»ÓÐÈ¨ÏÞÊ¹ÓÃÕâ¸ö³ÆºÅ£¡", FONT_PAL_RED, 0);

  00170	6a 00		 push	 0
  00172	6a 00		 push	 0
  00174	6a 06		 push	 6
  00176	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BLLPLNPC@?$DP?$DP?j?s?$DP?y?Z?$NO?E?i?D?$DP?$DP?$DP?$DP?$KD?$KB?$AA@
  0017b	e8 00 00 00 00	 call	 ?StockChatBufferLineExt@@YAXPADEHH@Z ; StockChatBufferLineExt
  00180	83 c4 10	 add	 esp, 16			; 00000010H

; 83   : 				return;

  00183	e9 5e 04 00 00	 jmp	 $LN1@Init
$LN8@Init:

; 84   : 			}
; 85   : 
; 86   : 			void LSSPROTO_203_SEND(int fd, char* data);
; 87   : 			extern unsigned int sockfd;
; 88   : 			char buf[50];
; 89   : 			sprintf(buf, "SETCURRENTCHENHAO'%d'", data³ÆºÅ[curSel].bmpNO);

  00188	6b 05 00 00 00
	00 1c		 imul	 eax, DWORD PTR ?curSel@@3HA, 28
  0018f	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data³ÆºÅ@@3PAU¹â»·STRUCT@@A[eax]
  00195	51		 push	 ecx
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MIJKNHCG@SETCURRENTCHENHAO?8?$CFd?8?$AA@
  0019b	8d 55 a0	 lea	 edx, DWORD PTR _buf$8[ebp]
  0019e	52		 push	 edx
  0019f	e8 00 00 00 00	 call	 _sprintf
  001a4	83 c4 0c	 add	 esp, 12			; 0000000cH

; 90   : 			LSSPROTO_203_SEND(sockfd, buf);

  001a7	8d 45 a0	 lea	 eax, DWORD PTR _buf$8[ebp]
  001aa	50		 push	 eax
  001ab	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?sockfd@@3IA ; sockfd
  001b1	51		 push	 ecx
  001b2	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  001b7	83 c4 08	 add	 esp, 8

; 91   : 			return;

  001ba	e9 27 04 00 00	 jmp	 $LN1@Init
$LN6@Init:

; 92   : 		}
; 93   : 	}
; 94   : 
; 95   : 	//??³ÆºÅ
; 96   : 	StockFontBuffer(x + 200, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "??³ÆºÅ", 0);	

  001bf	6a 00		 push	 0
  001c1	68 00 00 00 00	 push	 OFFSET ??_C@_04MFANEHND@?$DP?$DP?$DP?$DP?$AA@
  001c6	6a 04		 push	 4
  001c8	6a 01		 push	 1
  001ca	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001cd	05 54 01 00 00	 add	 eax, 340		; 00000154H
  001d2	50		 push	 eax
  001d3	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001d6	81 c1 c8 00 00
	00		 add	 ecx, 200		; 000000c8H
  001dc	51		 push	 ecx
  001dd	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  001e2	83 c4 18	 add	 esp, 24			; 00000018H

; 97   : 	if (MakeHitBox(x + 200 - 5, y + 340 - 5, x + 200 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  001e5	6a 6a		 push	 106			; 0000006aH
  001e7	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  001ea	05 68 01 00 00	 add	 eax, 360		; 00000168H
  001ef	50		 push	 eax
  001f0	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  001f3	81 c1 04 01 00
	00		 add	 ecx, 260		; 00000104H
  001f9	51		 push	 ecx
  001fa	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  001fd	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  00203	52		 push	 edx
  00204	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00207	05 c3 00 00 00	 add	 eax, 195		; 000000c3H
  0020c	50		 push	 eax
  0020d	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  00212	83 c4 14	 add	 esp, 20			; 00000014H
  00215	83 f8 01	 cmp	 eax, 1
  00218	75 22		 jne	 SHORT $LN9@Init

; 98   : 	{
; 99   : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  0021a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0021f	83 e0 01	 and	 eax, 1
  00222	74 18		 je	 SHORT $LN9@Init

; 100  : 		{
; 101  : 			void LSSPROTO_203_SEND(int fd, char* data);
; 102  : 			extern unsigned int sockfd;
; 103  : 			LSSPROTO_203_SEND(sockfd, "CANCELCURRENTCHENHAO'");

  00224	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MGJIFBLF@CANCELCURRENTCHENHAO?8?$AA@
  00229	a1 00 00 00 00	 mov	 eax, DWORD PTR ?sockfd@@3IA ; sockfd
  0022e	50		 push	 eax
  0022f	e8 00 00 00 00	 call	 ?LSSPROTO_203_SEND@@YAXHPAD@Z ; LSSPROTO_203_SEND
  00234	83 c4 08	 add	 esp, 8

; 104  : 			return;

  00237	e9 aa 03 00 00	 jmp	 $LN1@Init
$LN9@Init:

; 105  : 		}
; 106  : 	}
; 107  : 
; 108  : 	//¹Ø±Õ
; 109  : 	StockFontBuffer(x + 330, y + 340, FONT_PRIO_FRONT, FONT_PAL_YELLOW, "  ¹Ø±Õ  ", 0);

  0023c	6a 00		 push	 0
  0023e	68 00 00 00 00	 push	 OFFSET ??_C@_06IMHCLJMJ@?5?5?$DP?$DP?5?5?$AA@
  00243	6a 04		 push	 4
  00245	6a 01		 push	 1
  00247	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  0024a	05 54 01 00 00	 add	 eax, 340		; 00000154H
  0024f	50		 push	 eax
  00250	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00253	81 c1 4a 01 00
	00		 add	 ecx, 330		; 0000014aH
  00259	51		 push	 ecx
  0025a	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0025f	83 c4 18	 add	 esp, 24			; 00000018H

; 110  : 	if (MakeHitBox(x + 330 - 5, y + 340 - 5, x + 330 + 60, y + 340 + 20, DISP_PRIO_IME4) == TRUE)

  00262	6a 6a		 push	 106			; 0000006aH
  00264	8b 45 dc	 mov	 eax, DWORD PTR _y$[ebp]
  00267	05 68 01 00 00	 add	 eax, 360		; 00000168H
  0026c	50		 push	 eax
  0026d	8b 4d e8	 mov	 ecx, DWORD PTR _x$[ebp]
  00270	81 c1 86 01 00
	00		 add	 ecx, 390		; 00000186H
  00276	51		 push	 ecx
  00277	8b 55 dc	 mov	 edx, DWORD PTR _y$[ebp]
  0027a	81 c2 4f 01 00
	00		 add	 edx, 335		; 0000014fH
  00280	52		 push	 edx
  00281	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  00284	05 45 01 00 00	 add	 eax, 325		; 00000145H
  00289	50		 push	 eax
  0028a	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  0028f	83 c4 14	 add	 esp, 20			; 00000014H
  00292	83 f8 01	 cmp	 eax, 1
  00295	75 1e		 jne	 SHORT $LN11@Init

; 111  : 	{
; 112  : 		if (mouse.onceState & MOUSE_LEFT_CRICK)

  00297	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0029c	83 e0 01	 and	 eax, 1
  0029f	74 14		 je	 SHORT $LN11@Init

; 113  : 		{
; 114  : 			MenuToggleFlag &= ~JOY_CTRL_S;

  002a1	a1 00 00 00 00	 mov	 eax, DWORD PTR ?MenuToggleFlag@@3IA ; MenuToggleFlag
  002a6	25 ff ff ff df	 and	 eax, -536870913		; dfffffffH
  002ab	a3 00 00 00 00	 mov	 DWORD PTR ?MenuToggleFlag@@3IA, eax ; MenuToggleFlag

; 115  : 			return;

  002b0	e9 31 03 00 00	 jmp	 $LN1@Init
$LN11@Init:

; 116  : 		}
; 117  : 	}
; 118  : 
; 119  : 	//È¡³ÆºÅ¸öÊý
; 120  : 	int count = count_Ó¢ÐÛ³ÆºÅ;

  002b5	a1 00 00 00 00	 mov	 eax, DWORD PTR ?count_Ó¢ÐÛ³ÆºÅ@@3HA ; count_Ó¢ÐÛ³ÆºÅ
  002ba	89 45 94	 mov	 DWORD PTR _count$[ebp], eax

; 121  : 
; 122  : 	//×ÜÒ³ÃæÊý
; 123  : 	nPageTotal = (count + 13 - 1) / 13;

  002bd	8b 45 94	 mov	 eax, DWORD PTR _count$[ebp]
  002c0	83 c0 0c	 add	 eax, 12			; 0000000cH
  002c3	99		 cdq
  002c4	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  002c9	f7 f9		 idiv	 ecx
  002cb	a3 00 00 00 00	 mov	 DWORD PTR ?nPageTotal@@3HA, eax

; 124  : 
; 125  : 	//ÏÔÊ¾ Ò³Ãæ/×ÜÒ³Ãæ
; 126  : 	char buf[20];
; 127  : 	sprintf(buf, "%d/%d", nPage + 1, nPageTotal);

  002d0	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPageTotal@@3HA
  002d5	50		 push	 eax
  002d6	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?nPage@@3HA
  002dc	83 c1 01	 add	 ecx, 1
  002df	51		 push	 ecx
  002e0	68 00 00 00 00	 push	 OFFSET ??_C@_05LCKIIOJE@?$CFd?1?$CFd?$AA@
  002e5	8d 95 78 ff ff
	ff		 lea	 edx, DWORD PTR _buf$[ebp]
  002eb	52		 push	 edx
  002ec	e8 00 00 00 00	 call	 _sprintf
  002f1	83 c4 10	 add	 esp, 16			; 00000010H

; 128  : 	StockFontBuffer(x + 65, y + 295, FONT_PRIO_FRONT, FONT_PAL_YELLOW, buf, 0);

  002f4	6a 00		 push	 0
  002f6	8d 85 78 ff ff
	ff		 lea	 eax, DWORD PTR _buf$[ebp]
  002fc	50		 push	 eax
  002fd	6a 04		 push	 4
  002ff	6a 01		 push	 1
  00301	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  00304	81 c1 27 01 00
	00		 add	 ecx, 295		; 00000127H
  0030a	51		 push	 ecx
  0030b	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  0030e	83 c2 41	 add	 edx, 65			; 00000041H
  00311	52		 push	 edx
  00312	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00317	83 c4 18	 add	 esp, 24			; 00000018H

; 129  : 
; 130  : 
; 131  : 	//È¡µ±Ç°Ò³ÏÔÊ¾µÄÊýÁ¿
; 132  : 	int count_this_page = count - nPage * 13;

  0031a	6b 05 00 00 00
	00 0d		 imul	 eax, DWORD PTR ?nPage@@3HA, 13
  00321	8b 4d 94	 mov	 ecx, DWORD PTR _count$[ebp]
  00324	2b c8		 sub	 ecx, eax
  00326	89 8d 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], ecx

; 133  : 	count_this_page = (count_this_page >= 13) ? 13 : count_this_page % 13;

  0032c	83 bd 6c ff ff
	ff 0d		 cmp	 DWORD PTR _count_this_page$[ebp], 13 ; 0000000dH
  00333	7c 0c		 jl	 SHORT $LN27@Init
  00335	c7 85 34 fe ff
	ff 0d 00 00 00	 mov	 DWORD PTR tv248[ebp], 13 ; 0000000dH
  0033f	eb 14		 jmp	 SHORT $LN28@Init
$LN27@Init:
  00341	8b 85 6c ff ff
	ff		 mov	 eax, DWORD PTR _count_this_page$[ebp]
  00347	99		 cdq
  00348	b9 0d 00 00 00	 mov	 ecx, 13			; 0000000dH
  0034d	f7 f9		 idiv	 ecx
  0034f	89 95 34 fe ff
	ff		 mov	 DWORD PTR tv248[ebp], edx
$LN28@Init:
  00355	8b 95 34 fe ff
	ff		 mov	 edx, DWORD PTR tv248[ebp]
  0035b	89 95 6c ff ff
	ff		 mov	 DWORD PTR _count_this_page$[ebp], edx

; 134  : 	
; 135  : 	for (int i = nPage * 13, j = 0; i < nPage * 13 + count_this_page; i++, j++)

  00361	6b 05 00 00 00
	00 0d		 imul	 eax, DWORD PTR ?nPage@@3HA, 13
  00368	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
  0036e	c7 85 54 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR _j$6[ebp], 0
  00378	eb 1e		 jmp	 SHORT $LN4@Init
$LN2@Init:
  0037a	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  00380	83 c0 01	 add	 eax, 1
  00383	89 85 60 ff ff
	ff		 mov	 DWORD PTR _i$7[ebp], eax
  00389	8b 8d 54 ff ff
	ff		 mov	 ecx, DWORD PTR _j$6[ebp]
  0038f	83 c1 01	 add	 ecx, 1
  00392	89 8d 54 ff ff
	ff		 mov	 DWORD PTR _j$6[ebp], ecx
$LN4@Init:
  00398	6b 05 00 00 00
	00 0d		 imul	 eax, DWORD PTR ?nPage@@3HA, 13
  0039f	03 85 6c ff ff
	ff		 add	 eax, DWORD PTR _count_this_page$[ebp]
  003a5	39 85 60 ff ff
	ff		 cmp	 DWORD PTR _i$7[ebp], eax
  003ab	0f 8d b9 01 00
	00		 jge	 $LN3@Init

; 136  : 	{
; 137  : 		char buf[30];
; 138  : 
; 139  : 		//ÎÄ×Ö¾ÓÖÐ
; 140  : 		CenteringStr(data³ÆºÅ[i].name, buf, 19);

  003b1	6a 13		 push	 19			; 00000013H
  003b3	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$5[ebp]
  003b9	50		 push	 eax
  003ba	6b 8d 60 ff ff
	ff 1c		 imul	 ecx, DWORD PTR _i$7[ebp], 28
  003c1	81 c1 04 00 00
	00		 add	 ecx, OFFSET ?data³ÆºÅ@@3PAU¹â»·STRUCT@@A+4
  003c7	51		 push	 ecx
  003c8	e8 00 00 00 00	 call	 ?CenteringStr@@YAXPAD0H@Z ; CenteringStr
  003cd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 141  : 
; 142  : 		//Éè¶¨ÎÄ×Ö×óÉÏ½ÇÎ»ÖÃ
; 143  : 		int x1 = x + 13;

  003d0	8b 45 e8	 mov	 eax, DWORD PTR _x$[ebp]
  003d3	83 c0 0d	 add	 eax, 13			; 0000000dH
  003d6	89 85 20 ff ff
	ff		 mov	 DWORD PTR _x1$4[ebp], eax

; 144  : 		int y1 = y + 30 + j * 20;

  003dc	6b 85 54 ff ff
	ff 14		 imul	 eax, DWORD PTR _j$6[ebp], 20
  003e3	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  003e6	8d 54 01 1e	 lea	 edx, DWORD PTR [ecx+eax+30]
  003ea	89 95 14 ff ff
	ff		 mov	 DWORD PTR _y1$3[ebp], edx

; 145  : 
; 146  : 		//Êä³öÎÄ×Ö
; 147  : 		if (data³ÆºÅ[i].time != 0)

  003f0	6b 85 60 ff ff
	ff 1c		 imul	 eax, DWORD PTR _i$7[ebp], 28
  003f7	83 b8 18 00 00
	00 00		 cmp	 DWORD PTR ?data³ÆºÅ@@3PAU¹â»·STRUCT@@A[eax+24], 0
  003fe	74 58		 je	 SHORT $LN13@Init

; 148  : 		{
; 149  : 			if (i == curSel)

  00400	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  00406	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR ?curSel@@3HA
  0040c	75 25		 jne	 SHORT $LN15@Init

; 150  : 			{
; 151  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_RED, buf, 0);	//ºìÉ«

  0040e	6a 00		 push	 0
  00410	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$5[ebp]
  00416	50		 push	 eax
  00417	6a 06		 push	 6
  00419	6a 01		 push	 1
  0041b	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$3[ebp]
  00421	51		 push	 ecx
  00422	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$4[ebp]
  00428	52		 push	 edx
  00429	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  0042e	83 c4 18	 add	 esp, 24			; 00000018H

; 152  : 			}
; 153  : 			else

  00431	eb 23		 jmp	 SHORT $LN16@Init
$LN15@Init:

; 154  : 			{
; 155  : 				StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GREEN, buf, 0);	//ÂÌÉ«

  00433	6a 00		 push	 0
  00435	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$5[ebp]
  0043b	50		 push	 eax
  0043c	6a 05		 push	 5
  0043e	6a 01		 push	 1
  00440	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$3[ebp]
  00446	51		 push	 ecx
  00447	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$4[ebp]
  0044d	52		 push	 edx
  0044e	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00453	83 c4 18	 add	 esp, 24			; 00000018H
$LN16@Init:

; 156  : 			}
; 157  : 			
; 158  : 		}
; 159  : 			
; 160  : 		else

  00456	eb 23		 jmp	 SHORT $LN14@Init
$LN13@Init:

; 161  : 			StockFontBuffer(x1, y1, FONT_PRIO_FRONT, FONT_PAL_GRAY, buf, 0);	//»ÒÉ«

  00458	6a 00		 push	 0
  0045a	8d 85 2c ff ff
	ff		 lea	 eax, DWORD PTR _buf$5[ebp]
  00460	50		 push	 eax
  00461	6a 07		 push	 7
  00463	6a 01		 push	 1
  00465	8b 8d 14 ff ff
	ff		 mov	 ecx, DWORD PTR _y1$3[ebp]
  0046b	51		 push	 ecx
  0046c	8b 95 20 ff ff
	ff		 mov	 edx, DWORD PTR _x1$4[ebp]
  00472	52		 push	 edx
  00473	e8 00 00 00 00	 call	 ?StockFontBuffer@@YAHHHDHPADH@Z ; StockFontBuffer
  00478	83 c4 18	 add	 esp, 24			; 00000018H
$LN14@Init:

; 162  : 
; 163  : 		//»­ÂÌ¿ò¿ò²¢ÅÐ¶Ïµã»÷
; 164  : 		if (MakeHitBox(x1,y1 -2,x1 + 130, y1+ 17, DISP_PRIO_IME4) == TRUE)

  0047b	6a 6a		 push	 106			; 0000006aH
  0047d	8b 85 14 ff ff
	ff		 mov	 eax, DWORD PTR _y1$3[ebp]
  00483	83 c0 11	 add	 eax, 17			; 00000011H
  00486	50		 push	 eax
  00487	8b 8d 20 ff ff
	ff		 mov	 ecx, DWORD PTR _x1$4[ebp]
  0048d	81 c1 82 00 00
	00		 add	 ecx, 130		; 00000082H
  00493	51		 push	 ecx
  00494	8b 95 14 ff ff
	ff		 mov	 edx, DWORD PTR _y1$3[ebp]
  0049a	83 ea 02	 sub	 edx, 2
  0049d	52		 push	 edx
  0049e	8b 85 20 ff ff
	ff		 mov	 eax, DWORD PTR _x1$4[ebp]
  004a4	50		 push	 eax
  004a5	e8 00 00 00 00	 call	 ?MakeHitBox@@YAHHHHHH@Z	; MakeHitBox
  004aa	83 c4 14	 add	 esp, 20			; 00000014H
  004ad	83 f8 01	 cmp	 eax, 1
  004b0	0f 85 af 00 00
	00		 jne	 $LN17@Init

; 165  : 		{
; 166  : 			if (mouse.onceState & MOUSE_LEFT_CRICK)

  004b6	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  004bb	83 e0 01	 and	 eax, 1
  004be	0f 84 a1 00 00
	00		 je	 $LN17@Init

; 167  : 			{
; 168  : 				//±£´æµã»÷µÄ±àºÅ
; 169  : 				curSel = i;

  004c4	8b 85 60 ff ff
	ff		 mov	 eax, DWORD PTR _i$7[ebp]
  004ca	a3 00 00 00 00	 mov	 DWORD PTR ?curSel@@3HA, eax

; 170  : 
; 171  : 				//É¾³ýÔ­ÓÐ¶¯»­
; 172  : 				delAct³ÆºÅ();

  004cf	e8 00 00 00 00	 call	 ?delAct³ÆºÅ@@YAXXZ	; delAct³ÆºÅ

; 173  : 
; 174  : 				pActÈËÎï = MakeAnimDisp(x + 280, y + 184, pc.graNo, 0);

  004d4	6a 00		 push	 0
  004d6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pc@@3UPC@@A
  004db	50		 push	 eax
  004dc	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  004df	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  004e5	51		 push	 ecx
  004e6	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  004e9	81 c2 18 01 00
	00		 add	 edx, 280		; 00000118H
  004ef	52		 push	 edx
  004f0	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  004f5	83 c4 10	 add	 esp, 16			; 00000010H
  004f8	a3 00 00 00 00	 mov	 DWORD PTR ?pActÈËÎï@@3PAUaction@@A, eax ; pActÈËÎï

; 175  : 
; 176  : 				short x2, y2;
; 177  : 				if (»ñÈ¡¶¯»­³ß´ç(pActÈËÎï, &x2, &y2)) 

  004fd	8d 85 fc fe ff
	ff		 lea	 eax, DWORD PTR _y2$1[ebp]
  00503	50		 push	 eax
  00504	8d 8d 08 ff ff
	ff		 lea	 ecx, DWORD PTR _x2$2[ebp]
  0050a	51		 push	 ecx
  0050b	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?pActÈËÎï@@3PAUaction@@A ; pActÈËÎï
  00511	52		 push	 edx
  00512	e8 00 00 00 00	 call	 ?»ñÈ¡¶¯»­³ß´ç@@YAHPAUaction@@PAF1@Z ; »ñÈ¡¶¯»­³ß´ç
  00517	83 c4 0c	 add	 esp, 12			; 0000000cH
  0051a	85 c0		 test	 eax, eax
  0051c	74 42		 je	 SHORT $LN19@Init

; 178  : 				{
; 179  : 					pAct³ÆºÅ = MakeAnimDisp(x + 280, y + 184 - y2/2 - 45, data³ÆºÅ[i].bmpNO, 0);

  0051e	6a 00		 push	 0
  00520	6b 85 60 ff ff
	ff 1c		 imul	 eax, DWORD PTR _i$7[ebp], 28
  00527	8b 88 00 00 00
	00		 mov	 ecx, DWORD PTR ?data³ÆºÅ@@3PAU¹â»·STRUCT@@A[eax]
  0052d	51		 push	 ecx
  0052e	8b 4d dc	 mov	 ecx, DWORD PTR _y$[ebp]
  00531	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00537	0f bf 85 fc fe
	ff ff		 movsx	 eax, WORD PTR _y2$1[ebp]
  0053e	99		 cdq
  0053f	2b c2		 sub	 eax, edx
  00541	d1 f8		 sar	 eax, 1
  00543	2b c8		 sub	 ecx, eax
  00545	83 e9 2d	 sub	 ecx, 45			; 0000002dH
  00548	51		 push	 ecx
  00549	8b 55 e8	 mov	 edx, DWORD PTR _x$[ebp]
  0054c	81 c2 18 01 00
	00		 add	 edx, 280		; 00000118H
  00552	52		 push	 edx
  00553	e8 00 00 00 00	 call	 ?MakeAnimDisp@@YAPAUaction@@HHHH@Z ; MakeAnimDisp
  00558	83 c4 10	 add	 esp, 16			; 00000010H
  0055b	a3 00 00 00 00	 mov	 DWORD PTR ?pAct³ÆºÅ@@3PAUaction@@A, eax ; pAct³ÆºÅ
$LN19@Init:

; 180  : 				}
; 181  : 				return;

  00560	e9 81 00 00 00	 jmp	 $LN1@Init
$LN17@Init:

; 182  : 			}
; 183  : 		}
; 184  : 	}

  00565	e9 10 fe ff ff	 jmp	 $LN2@Init
$LN3@Init:

; 185  : 
; 186  : 	if (mouse.onceState & MOUSE_LEFT_CRICK)

  0056a	a1 2c 00 00 00	 mov	 eax, DWORD PTR ?mouse@@3UMOUSE@@A+44
  0056f	83 e0 01	 and	 eax, 1
  00572	74 72		 je	 SHORT $LN1@Init

; 187  : 	{
; 188  : 
; 189  : 		if (HitDispNo == button[0]) //×ó¼ýÍ·

  00574	b8 04 00 00 00	 mov	 eax, 4
  00579	6b c8 00	 imul	 ecx, eax, 0
  0057c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  00582	3b 91 00 00 00
	00		 cmp	 edx, DWORD PTR ?button@@3PAHA[ecx]
  00588	75 1b		 jne	 SHORT $LN21@Init

; 190  : 		{
; 191  : 			nPage--;

  0058a	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPage@@3HA
  0058f	83 e8 01	 sub	 eax, 1
  00592	a3 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, eax

; 192  : 			if (nPage < 0)nPage = 0;

  00597	79 0a		 jns	 SHORT $LN23@Init
  00599	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, 0
$LN23@Init:

; 193  : 		}

  005a3	eb 40		 jmp	 SHORT $LN22@Init
$LN21@Init:

; 194  : 		else if (HitDispNo == button[1]) //ÓÒ¼ýÍ·

  005a5	b8 04 00 00 00	 mov	 eax, 4
  005aa	c1 e0 00	 shl	 eax, 0
  005ad	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?HitDispNo@@3HA ; HitDispNo
  005b3	3b 88 00 00 00
	00		 cmp	 ecx, DWORD PTR ?button@@3PAHA[eax]
  005b9	75 2a		 jne	 SHORT $LN22@Init

; 195  : 		{
; 196  : 			nPage++;

  005bb	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPage@@3HA
  005c0	83 c0 01	 add	 eax, 1
  005c3	a3 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, eax

; 197  : 			if (nPage >= nPageTotal - 1) nPage = nPageTotal - 1;

  005c8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPageTotal@@3HA
  005cd	83 e8 01	 sub	 eax, 1
  005d0	39 05 00 00 00
	00		 cmp	 DWORD PTR ?nPage@@3HA, eax
  005d6	7c 0d		 jl	 SHORT $LN22@Init
  005d8	a1 00 00 00 00	 mov	 eax, DWORD PTR ?nPageTotal@@3HA
  005dd	83 e8 01	 sub	 eax, 1
  005e0	a3 00 00 00 00	 mov	 DWORD PTR ?nPage@@3HA, eax
$LN22@Init:

; 198  : 		}
; 199  : 		__asm nop;

  005e5	90		 npad	 1
$LN1@Init:

; 200  : 	}
; 201  : 
; 202  : }

  005e6	52		 push	 edx
  005e7	8b cd		 mov	 ecx, ebp
  005e9	50		 push	 eax
  005ea	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN36@Init
  005f0	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  005f5	58		 pop	 eax
  005f6	5a		 pop	 edx
  005f7	5f		 pop	 edi
  005f8	5e		 pop	 esi
  005f9	5b		 pop	 ebx
  005fa	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  005fd	33 cd		 xor	 ecx, ebp
  005ff	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00604	81 c4 cc 01 00
	00		 add	 esp, 460		; 000001ccH
  0060a	3b ec		 cmp	 ebp, esp
  0060c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00611	8b e5		 mov	 esp, ebp
  00613	5d		 pop	 ebp
  00614	c3		 ret	 0
  00615	0f 1f 00	 npad	 3
$LN36@Init:
  00618	06 00 00 00	 DD	 6
  0061c	00 00 00 00	 DD	 $LN35@Init
$LN35@Init:
  00620	f4 ff ff ff	 DD	 -12			; fffffff4H
  00624	04 00 00 00	 DD	 4
  00628	00 00 00 00	 DD	 $LN29@Init
  0062c	a0 ff ff ff	 DD	 -96			; ffffffa0H
  00630	32 00 00 00	 DD	 50			; 00000032H
  00634	00 00 00 00	 DD	 $LN30@Init
  00638	78 ff ff ff	 DD	 -136			; ffffff78H
  0063c	14 00 00 00	 DD	 20			; 00000014H
  00640	00 00 00 00	 DD	 $LN31@Init
  00644	2c ff ff ff	 DD	 -212			; ffffff2cH
  00648	1e 00 00 00	 DD	 30			; 0000001eH
  0064c	00 00 00 00	 DD	 $LN32@Init
  00650	08 ff ff ff	 DD	 -248			; ffffff08H
  00654	02 00 00 00	 DD	 2
  00658	00 00 00 00	 DD	 $LN33@Init
  0065c	fc fe ff ff	 DD	 -260			; fffffefcH
  00660	02 00 00 00	 DD	 2
  00664	00 00 00 00	 DD	 $LN34@Init
$LN34@Init:
  00668	79		 DB	 121			; 00000079H
  00669	32		 DB	 50			; 00000032H
  0066a	00		 DB	 0
$LN33@Init:
  0066b	78		 DB	 120			; 00000078H
  0066c	32		 DB	 50			; 00000032H
  0066d	00		 DB	 0
$LN32@Init:
  0066e	62		 DB	 98			; 00000062H
  0066f	75		 DB	 117			; 00000075H
  00670	66		 DB	 102			; 00000066H
  00671	00		 DB	 0
$LN31@Init:
  00672	62		 DB	 98			; 00000062H
  00673	75		 DB	 117			; 00000075H
  00674	66		 DB	 102			; 00000066H
  00675	00		 DB	 0
$LN30@Init:
  00676	62		 DB	 98			; 00000062H
  00677	75		 DB	 117			; 00000075H
  00678	66		 DB	 102			; 00000066H
  00679	00		 DB	 0
$LN29@Init:
  0067a	42		 DB	 66			; 00000042H
  0067b	6d		 DB	 109			; 0000006dH
  0067c	70		 DB	 112			; 00000070H
  0067d	4e		 DB	 78			; 0000004eH
  0067e	6f		 DB	 111			; 0000006fH
  0067f	00		 DB	 0
?InitÓ¢ÐÛ³ÆºÅ´°¿Ú@@YAXXZ ENDP				; InitÓ¢ÐÛ³ÆºÅ´°¿Ú
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\administrator\desktop\????? ??\????? ??\client source code\system\Ó¢ÐÛ³ÆºÅ.cpp
;	COMDAT ?delAct³ÆºÅ@@YAXXZ
_TEXT	SEGMENT
?delAct³ÆºÅ@@YAXXZ PROC					; delAct³ÆºÅ, COMDAT

; 37   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 38   : 	if (pActÈËÎï)

  0001e	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pActÈËÎï@@3PAUaction@@A, 0 ; pActÈËÎï
  00025	74 18		 je	 SHORT $LN2@delAct

; 39   : 	{
; 40   : 		DeathAction(pActÈËÎï);

  00027	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pActÈËÎï@@3PAUaction@@A ; pActÈËÎï
  0002c	50		 push	 eax
  0002d	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00032	83 c4 04	 add	 esp, 4

; 41   : 		pActÈËÎï = NULL;

  00035	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pActÈËÎï@@3PAUaction@@A, 0 ; pActÈËÎï
$LN2@delAct:

; 42   : 	}
; 43   : 	if (pAct³ÆºÅ)

  0003f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR ?pAct³ÆºÅ@@3PAUaction@@A, 0 ; pAct³ÆºÅ
  00046	74 18		 je	 SHORT $LN1@delAct

; 44   : 	{
; 45   : 		DeathAction(pAct³ÆºÅ);

  00048	a1 00 00 00 00	 mov	 eax, DWORD PTR ?pAct³ÆºÅ@@3PAUaction@@A ; pAct³ÆºÅ
  0004d	50		 push	 eax
  0004e	e8 00 00 00 00	 call	 ?DeathAction@@YAXPAUaction@@@Z ; DeathAction
  00053	83 c4 04	 add	 esp, 4

; 46   : 		pAct³ÆºÅ = NULL;

  00056	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?pAct³ÆºÅ@@3PAUaction@@A, 0 ; pAct³ÆºÅ
$LN1@delAct:

; 47   : 	}
; 48   : }

  00060	5f		 pop	 edi
  00061	5e		 pop	 esi
  00062	5b		 pop	 ebx
  00063	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00069	3b ec		 cmp	 ebp, esp
  0006b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00070	8b e5		 mov	 esp, ebp
  00072	5d		 pop	 ebp
  00073	c3		 ret	 0
?delAct³ÆºÅ@@YAXXZ ENDP					; delAct³ÆºÅ
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT _sprintf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sprintf PROC						; COMDAT

; 1776 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1777 :     int _Result;
; 1778 :     va_list _ArgList;
; 1779 :     __crt_va_start(_ArgList, _Format);

  0001e	e8 00 00 00 00	 call	 ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
  00023	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  00026	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 1780 : 
; 1781 :     #pragma warning(push)
; 1782 :     #pragma warning(disable: 4996) // Deprecation
; 1783 :     _Result = _vsprintf_l(_Buffer, _Format, NULL, _ArgList);

  00029	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002c	50		 push	 eax
  0002d	6a 00		 push	 0
  0002f	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00032	51		 push	 ecx
  00033	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00036	52		 push	 edx
  00037	e8 00 00 00 00	 call	 __vsprintf_l
  0003c	83 c4 10	 add	 esp, 16			; 00000010H
  0003f	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 1784 :     #pragma warning(pop)
; 1785 : 
; 1786 :     __crt_va_end(_ArgList);

  00042	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 1787 :     return _Result;

  00049	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 1788 : }

  0004c	5f		 pop	 edi
  0004d	5e		 pop	 esi
  0004e	5b		 pop	 ebx
  0004f	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00055	3b ec		 cmp	 ebp, esp
  00057	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005c	8b e5		 mov	 esp, ebp
  0005e	5d		 pop	 ebp
  0005f	c3		 ret	 0
_sprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsprintf_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsprintf_l PROC					; COMDAT

; 1455 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1456 :     #pragma warning(push)
; 1457 :     #pragma warning(disable: 4996) // Deprecation
; 1458 :     return _vsnprintf_l(_Buffer, (size_t)-1, _Format, _Locale, _ArgList);

  0001e	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00021	50		 push	 eax
  00022	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00025	51		 push	 ecx
  00026	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00029	52		 push	 edx
  0002a	6a ff		 push	 -1
  0002c	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 __vsnprintf_l
  00035	83 c4 14	 add	 esp, 20			; 00000014H

; 1459 :     #pragma warning(pop)
; 1460 : }

  00038	5f		 pop	 edi
  00039	5e		 pop	 esi
  0003a	5b		 pop	 ebx
  0003b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00041	3b ec		 cmp	 ebp, esp
  00043	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c3		 ret	 0
__vsprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
;	COMDAT __vsnprintf_l
_TEXT	SEGMENT
tv74 = -208						; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
__Locale$ = 20						; size = 4
__ArgList$ = 24						; size = 4
__vsnprintf_l PROC					; COMDAT

; 1385 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 1386 :     int const _Result = __stdio_common_vsprintf(

  0001e	8b f4		 mov	 esi, esp
  00020	8b 45 18	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00023	50		 push	 eax
  00024	8b 4d 14	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00027	51		 push	 ecx
  00028	8b 55 10	 mov	 edx, DWORD PTR __Format$[ebp]
  0002b	52		 push	 edx
  0002c	8b 45 0c	 mov	 eax, DWORD PTR __BufferCount$[ebp]
  0002f	50		 push	 eax
  00030	8b 4d 08	 mov	 ecx, DWORD PTR __Buffer$[ebp]
  00033	51		 push	 ecx
  00034	e8 00 00 00 00	 call	 ___local_stdio_printf_options
  00039	8b 10		 mov	 edx, DWORD PTR [eax]
  0003b	83 ca 01	 or	 edx, 1
  0003e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00041	50		 push	 eax
  00042	52		 push	 edx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsprintf
  00049	83 c4 1c	 add	 esp, 28			; 0000001cH
  0004c	3b f4		 cmp	 esi, esp
  0004e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00053	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 1387 :         _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_LEGACY_VSPRINTF_NULL_TERMINATION,
; 1388 :         _Buffer, _BufferCount, _Format, _Locale, _ArgList);
; 1389 : 
; 1390 :     return _Result < 0 ? -1 : _Result;

  00056	83 7d f8 00	 cmp	 DWORD PTR __Result$[ebp], 0
  0005a	7d 0c		 jge	 SHORT $LN3@vsnprintf_
  0005c	c7 85 30 ff ff
	ff ff ff ff ff	 mov	 DWORD PTR tv74[ebp], -1
  00066	eb 09		 jmp	 SHORT $LN4@vsnprintf_
$LN3@vsnprintf_:
  00068	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]
  0006b	89 85 30 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], eax
$LN4@vsnprintf_:
  00071	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv74[ebp]

; 1391 : }

  00077	5f		 pop	 edi
  00078	5e		 pop	 esi
  00079	5b		 pop	 ebx
  0007a	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  00080	3b ec		 cmp	 ebp, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
__vsnprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 144  :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 145  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 146  :         }

  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi
  00020	5b		 pop	 ebx
  00021	8b e5		 mov	 esp, ebp
  00023	5d		 pop	 ebp
  00024	c3		 ret	 0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 73   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd

; 74   :     static unsigned __int64 _OptionsStorage;
; 75   :     return &_OptionsStorage;

  0001e	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 76   : }

  00023	5f		 pop	 edi
  00024	5e		 pop	 esi
  00025	5b		 pop	 ebx
  00026	8b e5		 mov	 esp, ebp
  00028	5d		 pop	 ebp
  00029	c3		 ret	 0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
